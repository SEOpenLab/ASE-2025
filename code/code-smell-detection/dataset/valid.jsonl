{"idx": 1049, "func": "<comment> public int partition ( ) { return this . <w> topic Partition </w> . partition ( ) ; }", "target": 0}
{"idx": 1050, "func": "<comment> @ Override public boolean <w> is Caching </w> ( ) { return caching ; }", "target": 0}
{"idx": 1051, "func": "public <w> Metric Name </w> <w> get Name </w> ( ) { return name ; }", "target": 0}
{"idx": 1052, "func": "<comment> boolean <w> flush In Progress </w> ( ) { return <w> flushes In Progress </w> . get ( ) > 0 ; }", "target": 0}
{"idx": 1053, "func": "public <w> CL Image 2 d </w> [ ] <w> get Images CL </w> ( ) { <w> images CL </w> [ 0 ] = <w> template CL </w> [ <w> pyramid Level </w> ] ; <w> images CL </w> [ 1 ] = <w> target CL </w> [ <w> pyramid Level </w> ] ; <w> images CL </w> [ 2 ] = <w> transformed CL </w> [ <w> pyramid Level </w> ] ; <w> images CL </w> [ 3 ] = <w> residual CL </w> [ <w> pyramid Level </w> ] ; <w> images CL </w> [ 4 ] = <w> mask CL </w> [ <w> pyramid Level </w> ] ; return <w> images CL </w> ; }", "target": 1}
{"idx": 1054, "func": "public int <w> get Rows </w> ( ) { return rows ; }", "target": 1}
{"idx": 1055, "func": "<comment> public static native int interrupt ( long pollset ) ;", "target": 0}
{"idx": 1056, "func": "int seconds = 0 ;", "target": 1}
{"idx": 1057, "func": "<comment> private static final Map <w> needs Namespace Cache </w> = new <w> Hash Map </w> ( ) ;", "target": 0}
{"idx": 1058, "func": "<comment> public <w> Source Validity </w> <w> get Validity For Event Pipeline </w> ( ) { return this . <w> cache Validity </w> ; }", "target": 0}
{"idx": 1059, "func": "void <w> set Score </w> ( float score ) { this . score = score ; }", "target": 0}
{"idx": 1060, "func": "public static final long <w> DEFAULT _ FETCH _ MAX _ ROWS </w> = 100 ;", "target": 0}
{"idx": 1061, "func": "private <w> B Box Strategy </w> <w> setup Needs Doc Values Only </w> ( ) throws <w> IO Exception </w> { this . ctx = <w> Spatial Context </w> . GEO ; <w> Field Type </w> <w> field Type </w> ; <comment> String <w> FIELD _ PREFIX </w> = <str-literal> <str-literal> <str-literal> ; if ( random ( ) . <w> next Boolean </w> ( ) ) { <w> field Type </w> = new <w> Field Type </w> ( <w> B Box Strategy </w> . <w> DEFAULT _ FIELDTYPE </w> ) ; if ( random ( ) . <w> next Boolean </w> ( ) ) { <w> field Type </w> . <w> set Dimensions </w> ( 0 , 0 ) ; } } else { <w> field Type </w> = new <w> Field Type </w> ( <w> B Box Strategy </w> . <w> LEGACY _ FIELDTYPE </w> ) ; if ( random ( ) . <w> next Boolean </w> ( ) ) { <w> field Type </w> . <w> set Index Options </w> ( <w> Index Options </w> . NONE ) ; } } strategy = new <w> B Box Strategy </w> ( ctx , <w> FIELD _ PREFIX </w> , <w> field Type </w> ) ; return ( <w> B Box Strategy </w> ) strategy ; }", "target": 0}
{"idx": 1062, "func": "Public final boolean equals ( Object other ) { return <w> same Class As </w> ( other ) & & <w> equals To </w> ( <w> get Class </w> ( ) . cast ( other ) ) ; }", "target": 0}
{"idx": 1063, "func": "int <w> num Changes </w> = 0 ;", "target": 0}
{"idx": 1064, "func": "public <w> Cv Mat </w> <w> get A </w> ( ) { update ( ) ; return A ; }", "target": 1}
{"idx": 1065, "func": "<comment> public static final <w> UML Decision </w> METHODS = new <w> UML Decision </w> ( <str-literal> <str-literal> <str-literal> , 1 ) ;", "target": 0}
{"idx": 1066, "func": "<comment> public static void <w> to SAX </w> ( <w> XM Lizable </w> source , <w> Content Handler </w> handler ) throws <w> SAX Exception </w> , <w> IO Exception </w> , <w> Processing Exception </w> { try { source . <w> to SAX </w> ( handler ) ; } catch ( <w> SAX Exception </w> e ) { <comment> <comment> <comment> final Exception cause = e . <w> get Exception </w> ( ) ; if ( cause ! = null ) { if ( cause instanceof <w> Source Exception </w> ) { throw handle ( ( <w> Source Exception </w> ) cause ) ; } if ( cause instanceof <w> Processing Exception </w> ) { throw ( <w> Processing Exception </w> ) cause ; } if ( cause instanceof <w> IO Exception </w> ) { throw ( <w> IO Exception </w> ) cause ; } if ( cause instanceof <w> SAX Exception </w> ) { throw ( <w> SAX Exception </w> ) cause ; } } <comment> throw e ; } }", "target": 1}
{"idx": 1067, "func": "public static final <w> Storage Level </w> <w> MEMORY _ ONLY </w> = create ( false , true , false , true , 1 ) ;", "target": 0}
{"idx": 1068, "func": "<comment> @ Override public void visit ( <w> Node Visitor </w> v ) { if ( v . visit ( this ) ) { <w> test Expression </w> . visit ( v ) ; <w> true Expression </w> . visit ( v ) ; <w> false Expression </w> . visit ( v ) ; } }", "target": 0}
{"idx": 1069, "func": "private <w> Paged Growable Writer </w> values ;", "target": 1}
{"idx": 1070, "func": "private int <w> num Records </w> ;", "target": 0}
{"idx": 1071, "func": "public void <w> To Source </w> ( <w> String Builder </w> sb ) { }", "target": 1}
{"idx": 1072, "func": "<comment> private <w> Byte Buffer </w> <w> current Chunk </w> ;", "target": 0}
{"idx": 1073, "func": "private <w> Abstract Processor </w> ( <w> Abstract Endpoint </w> < ? > endpoint , Request <w> coyote Request </w> , Response <w> coyote Response </w> ) { this . endpoint = endpoint ; <w> async State Machine </w> = new <w> Async State Machine </w> ( this ) ; request = <w> coyote Request </w> ; response = <w> coyote Response </w> ; response . <w> set Hook </w> ( this ) ; request . <w> set Response </w> ( response ) ; request . <w> set Hook </w> ( this ) ; }", "target": 0}
{"idx": 1074, "func": "private void <w> check Profile For </w> ( Object o Profile profile = null ; if ( Model . <w> get Facade </w> ( ) . <w> is A Applied Profile Element </w> ( o ) ) { Object pkg = Model . <w> get Facade </w> ( ) . <w> get Namespace </w> ( o ) ; if ( pkg ! = null ) { String name = Model . <w> get Facade </w> ( ) . <w> get Name </w> ( pkg ) ; profile = <w> Profile Facade </w> . <w> get Manager </w> ( ) . <w> look For Registered Profile </w> ( name ) ; } } if ( profile ! = null ) { <w> get Profile Configuration </w> ( ) . <w> add Profile </w> ( profile , m ) ; } }", "target": 1}
{"idx": 1075, "func": "public final int <w> num Chunks </w> ;", "target": 0}
{"idx": 1076, "func": "public static final int <w> APR _ LOCK _ DEFAULT </w> = 5 ; <comment>", "target": 0}
{"idx": 1077, "func": "@ Override public String <w> get Authorization ID </w> ( ) { if ( ! complete ) throw new <w> Illegal State Exception </w> ( <str-literal> <str-literal> <str-literal> ) ; return <w> authorization Id </w> ; }", "target": 0}
{"idx": 1078, "func": "protected final <w> State Internals </w> <w> state Internals </w> ;", "target": 0}
{"idx": 1079, "func": "@ Override public double <w> get Radius </w> ( ) { return Math . PI * 0.5 ; }", "target": 0}
{"idx": 1080, "func": "<comment> public <w> Create Topics Options </w> <w> validate Only </w> ( boolean <w> validate Only </w> ) { this . <w> validate Only </w> = <w> validate Only </w> ; return this ; }", "target": 1}
{"idx": 1081, "func": "<comment> public boolean <w> should Set Content Length </w> ( ) { return false ; }", "target": 1}
{"idx": 1082, "func": "<comment> private final Map < String , <w> Ord Range </w> > <w> prefix To Ord Range </w> = new <w> Hash Map </w> < > ( ) ;", "target": 0}
{"idx": 1083, "func": "public Enumeration <w> get Headers </w> ( String name ) { return request . <w> get Headers </w> ( name ) ; }", "target": 0}
{"idx": 1084, "func": "<comment> private void <w> check Register For Write </w> ( ) { ob . <w> check Register For Write </w> ( ) ; }", "target": 0}
{"idx": 1085, "func": "public String <w> to String </w> ( ) { return <str-literal> <str-literal> <str-literal> ; }", "target": 0}
{"idx": 1086, "func": "<comment> public static final Schema [ ] <w> FIND _ COORDINATOR _ RESPONSE </w> = { <w> FIND _ COORDINATOR _ RESPONSE _ V 0 </w> , <w> FIND _ COORDINATOR _ RESPONSE _ V 1 </w> } ;", "target": 1}
{"idx": 1087, "func": "Class < ? > [ ] interfaces ;", "target": 0}
{"idx": 1088, "func": "private int <w> max Bytes </w> = <w> DEFAULT _ RESPONSE _ MAX _ BYTES </w> ;", "target": 1}
{"idx": 1089, "func": "<comment> public static native boolean <w> is Ancestor </w> ( long a , long b ) ;", "target": 0}
{"idx": 1090, "func": "private File <w> get Settings </w> ( String name ) { return new File ( <str-literal> <str-literal> <str-literal> + name + <str-literal> <str-literal> <str-literal> ) . <w> get Absolute File </w> ( ) ; }", "target": 1}
{"idx": 1091, "func": "@ Override public String <w> get Message </w> ( ) { String msg ; if ( message ! = null & & message . length ( ) > 0 ) { msg = message ; } else { msg = exception . <w> get Message </w> ( ) ; if ( msg = = null ) { msg = <str-literal> <str-literal> ; } } return msg ; }", "target": 1}
{"idx": 1092, "func": "public int iterations ;", "target": 1}
{"idx": 1093, "func": "final long <w> num Values </w> ;", "target": 0}
{"idx": 1094, "func": "public byte [ ] <w> get Map Context Name </w> ( ) { return <w> map Context Name </w> ; }", "target": 1}
{"idx": 1095, "func": "@ Override public boolean [ ] <w> get Key Usage </w> ( ) { return unwrap ( ) . <w> get Key Usage </w> ( ) ; }", "target": 0}
{"idx": 1096, "func": "<comment> private static final int <w> start Offset </w> = - 1 < < 15 ;", "target": 0}
{"idx": 1097, "func": "@ Override public final <w> Char Term Attribute </w> <w> set Length </w> ( int length ) { if ( length > <w> term Buffer </w> . length ) throw new <w> Illegal Argument Exception </w> ( <str-literal> <str-literal> <str-literal> + length + <str-literal> <str-literal> <str-literal> + <w> term Buffer </w> . length + <str-literal> <str-literal> <str-literal> ) ; <w> term Length </w> = length ; return this ; }", "target": 1}
{"idx": 1098, "func": "* * * Sets position of : token * @ param <w> colon Position </w> position of : token * / public void <w> set Colon Position </w> ( int <w> colon Position </w> ) { this . <w> colon Position </w> = <w> colon Position </w> ; }", "target": 0}
{"idx": 1099, "func": "<comment> public Term <w> get Term </w> ( ) { return term ; }", "target": 0}
{"idx": 1100, "func": "private int <w> facet Field Num Terms </w> ;", "target": 0}
{"idx": 1101, "func": "<comment> private boolean <w> init Complex </w> ( ) throws <w> IO Exception </w> { <comment> <w> place First Positions </w> ( ) ; if ( ! <w> advance Repeat Groups </w> ( ) ) { return false ; <comment> } <w> fill Queue </w> ( ) ; return true ; <comment> }", "target": 0}
{"idx": 1102, "func": "abstract Builder < K , V > <w> set Input Format Value Class </w> ( <w> Type Descriptor </w> < ? > <w> input Format Value Class </w> ) ;", "target": 1}
{"idx": 1103, "func": "<comment> private static int <w> PRE _ FILLER _ DOCS </w> ;", "target": 0}
{"idx": 1104, "func": "<comment> private static final double <w> MEAN _ EARTH _ RADIUS _ METERS </w> = <w> Planet Model </w> . <w> WGS 84 _ MEAN </w> ;", "target": 0}
{"idx": 1105, "func": "public void <w> To Source </w> ( <w> String Builder </w> sb ) { if ( attributes ! = null ) { attributes . <w> To Source </w> ( sb ) ; this . <w> New Line </w> ( sb ) ; } this . <w> Trace Modifiers </w> ( this . modifiers , sb ) ; this . type . <w> To Source </w> ( sb ) ; sb . append ( <str-literal> <str-literal> ) ; this . names . get ( 0 ) . <w> To Source </w> ( sb ) ; <comment> this . <w> New Line </w> ( sb ) ; sb . append ( <str-literal> <str-literal> <str-literal> ) ; if ( <w> has Getter </w> ) { sb . append ( <str-literal> <str-literal> <str-literal> ) ; } if ( <w> has Setter </w> ) { sb . append ( <str-literal> <str-literal> <str-literal> ) ; } sb . append ( <str-literal> <str-literal> <str-literal> ) ; this . <w> New Line </w> ( sb ) ; }", "target": 1}
{"idx": 1106, "func": "public <w> Geo Point </w> [ ] <w> get Edge Points </w> ( ) { return <w> edge Points </w> ; }", "target": 0}
{"idx": 1107, "func": "<comment> static public void <w> to SAX </w> ( <w> Service Manager </w> manager , Source source , <w> Content Handler </w> handler ) throws <w> SAX Exception </w> , <w> IO Exception </w> , <w> Processing Exception </w> { <w> to SAX </w> ( manager , source , null , handler ) ; }", "target": 1}
{"idx": 1108, "func": "public static final String <w> War Tracker </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 1109, "func": "public String <w> get Group Id </w> ( ) { if ( <w> group Id </w> ! = null ) { return <w> group Id </w> ; } else { return artifact . <w> get Group Id </w> ( ) ; } }", "target": 0}
{"idx": 1110, "func": "public void <w> To Source </w> ( <w> String Builder </w> sb ) { }", "target": 1}
{"idx": 1111, "func": "@ Override protected String <w> get Instructions </w> ( int index ) { return instructions [ index - BASE ] ; }", "target": 1}
{"idx": 1112, "func": "protected static final List < <w> Serializable Function </w> < Instant , Instant > > IDENTITY = <w> Immutable List </w> . < <w> Serializable Function </w> < Instant , Instant > > of ( ) ;", "target": 1}
{"idx": 1113, "func": "public <w> Maven Execution Result </w> <w> set Project </w> ( <w> Maven Project </w> project ) { this . project = project ; return this ; }", "target": 1}
{"idx": 1114, "func": "int <w> num Dirs </w> ;", "target": 0}
{"idx": 1115, "func": "private static int [ ] precedence ;", "target": 1}
{"idx": 1116, "func": "@ Override public <w> Maven Execution Request </w> <w> set Offline </w> ( boolean offline ) { this . offline = offline ; return this ; }", "target": 1}
{"idx": 1117, "func": "private final Entry <w> get Previous </w> ( ) { return previous ; }", "target": 0}
{"idx": 1118, "func": "<comment> List < Dependency > <w> get Unresolved Dependencies </w> ( ) ;", "target": 0}
{"idx": 1119, "func": "<comment> private static int <w> NUM _ FILLER _ DOCS </w> ;", "target": 0}
{"idx": 1120, "func": "private static final String [ ] <w> USE _ CLAR </w> = { ALWAYS , <w> IF _ ONLY _ ONE </w> , NEVER , } ;", "target": 1}
{"idx": 1121, "func": "<comment> public <w> Grouping Search </w> <w> disable Caching </w> ( ) { this . <w> max Cache RAMMB </w> = null ; this . <w> max Docs To Cache </w> = null ; return this ; }", "target": 0}
{"idx": 1122, "func": "@ Override public Savepoint <w> set Savepoint </w> ( String name ) throws <w> SQL Exception </w> { return null ; }", "target": 1}
{"idx": 1123, "func": "protected String <w> result Path </w> ;", "target": 0}
{"idx": 1124, "func": "protected static final <w> String Manager </w> sm = <w> String Manager </w> . <w> get Manager </w> ( <w> Domain Filter Interceptor </w> . class ) ;", "target": 0}
{"idx": 1125, "func": "<comment> public static final char <w> WILDCARD _ ESCAPE </w> = <str-literal> ;", "target": 0}
{"idx": 1126, "func": "protected int <w> min Worker Threads </w> ;", "target": 0}
{"idx": 1127, "func": "private String <w> get Credentials </w> ( ) { return credentials ; }", "target": 1}
{"idx": 1128, "func": "@ Override public <w> Maven Execution Request </w> <w> set Builder Id </w> ( String <w> builder Id </w> ) { this . <w> builder Id </w> = <w> builder Id </w> ; return this ; }", "target": 1}
{"idx": 1129, "func": "private final int size ;", "target": 0}
{"idx": 1130, "func": "public boolean <w> is Complete </w> ( ) { return complete ; }", "target": 0}
{"idx": 1131, "func": "private String instructions = Translator . localize ( <str-literal> <str-literal> <str-literal> ) ;", "target": 1}
{"idx": 1132, "func": "public State state ( String <w> state Id </w> ) { try { <w> State Spec </w> < ? > spec = ( <w> State Spec </w> < ? > ) signature . <w> state Declarations </w> ( ) . get ( <w> state Id </w> ) . field ( ) . get ( fn ) ; return <w> step Context </w> . <w> state Internals </w> ( ) . state ( <w> get Namespace </w> ( ) , <w> State Tags </w> . <w> tag For Spec </w> ( <w> state Id </w> , ( <w> State Spec </w> ) spec ) ) ; } catch ( <w> Illegal Access Exception </w> e ) { throw new <w> Runtime Exception </w> ( e ) ; } }", "target": 0}
{"idx": 1133, "func": "<comment> public static final String <w> DEFAULT _ KRB 5 _ CONF </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 1134, "func": "private final <w> Offset Attribute </w> <w> offset Attr </w> ;", "target": 0}
{"idx": 1135, "func": "<comment> public String <w> get Flags </w> ( ) { return flags ; }", "target": 1}
{"idx": 1136, "func": "@ Requirement private <w> Plexus Container </w> plexus ;", "target": 0}
{"idx": 1137, "func": "<comment> public static final byte <w> OPCODE _ PONG </w> = 0x0a ;", "target": 0}
{"idx": 1138, "func": "public <w> File Stream Sink Task </w> ( <w> Print Stream </w> <w> output Stream </w> ) { filename = null ; this . <w> output Stream </w> = <w> output Stream </w> ; }", "target": 0}
{"idx": 1139, "func": "<comment> private static final byte [ ] <w> RAW _ KEY </w> = <str-literal> <str-literal> <str-literal> . <w> get Bytes </w> ( ) ;", "target": 1}
{"idx": 1140, "func": "<comment> private final <w> Char Buffer </w> <w> control Buffer Text </w> = <w> Char Buffer </w> . allocate ( 125 ) ;", "target": 0}
{"idx": 1141, "func": "<comment> private static final char [ ] hex = <str-literal> <str-literal> <str-literal> . <w> to Char Array </w> ( ) ;", "target": 0}
{"idx": 1142, "func": "<comment> final int <w> num Dims </w> ;", "target": 0}
{"idx": 1143, "func": "private final Duration <w> allowed Lateness </w> ;", "target": 0}
{"idx": 1144, "func": "private final int <w> num Partitions </w> ;", "target": 0}
{"idx": 1145, "func": "<comment> protected <w> Pool Configuration </w> <w> pool Properties </w> ;", "target": 0}
{"idx": 1146, "func": "long <w> num Ords </w> ;", "target": 0}
{"idx": 1147, "func": "<comment> static void <w> generate Push Wrapped Args </w> ( <w> Class File Writer </w> cfw , Class < ? > [ ] <w> arg Types </w> , int <w> array Length </w> ) { <comment> cfw . <w> add Push </w> ( <w> array Length </w> ) ; cfw . add ( <w> Byte Code </w> . ANEWARRAY , <str-literal> <str-literal> <str-literal> ) ; int <w> param Offset </w> = 1 ; for ( int i = 0 ; i ! = <w> arg Types </w> . length ; + + i ) { cfw . add ( <w> Byte Code </w> . DUP ) ; <comment> cfw . <w> add Push </w> ( i ) ; <w> param Offset </w> + = <w> generate Wrap Arg </w> ( cfw , <w> param Offset </w> , <w> arg Types </w> [ i ] ) ; cfw . add ( <w> Byte Code </w> . AASTORE ) ; } }", "target": 0}
{"idx": 1148, "func": "private <w> Byte Pointer </w> [ ] <w> image _ ptr </w> ;", "target": 1}
{"idx": 1149, "func": "<comment> private final static int <w> OP _ VALUES </w> = 1 ;", "target": 1}
{"idx": 1150, "func": "public <w> Isolation Level </w> <w> isolation Level </w> ( ) { return <w> isolation Level </w> ; }", "target": 0}
{"idx": 1151, "func": "<comment> private <w> Bytes Ref Iterator </w> <w> bytes Iter </w> = null ;", "target": 0}
{"idx": 1152, "func": "<comment> static boolean <w> is External Repo </w> ( <w> Artifact Repository </w> <w> original Repository </w> ) { try { URL url = new URL ( <w> original Repository </w> . <w> get Url </w> ( ) ) ; return ! ( url . <w> get Host </w> ( ) . equals ( <str-literal> <str-literal> <str-literal> ) | | url . <w> get Host </w> ( ) . equals ( <str-literal> <str-literal> <str-literal> ) | | url . <w> get Protocol </w> ( ) . equals ( <str-literal> <str-literal> <str-literal> ) ) ; } catch ( <w> Malformed URL Exception </w> e ) { <comment> return false ; } }", "target": 0}
{"idx": 1153, "func": "<comment> private static final Map < String , String > <w> NUPROP _ WARNTEXT </w> = new <w> Linked Hash Map </w> < > ( ) ;", "target": 1}
{"idx": 1154, "func": "static double seconds = 0 ;", "target": 1}
{"idx": 1155, "func": "@ Override public void <w> register Write Interest </w> ( ) { synchronized ( <w> write Completion Handler </w> ) { if ( <w> write Pending </w> . <w> available Permits </w> ( ) = = 0 ) { <w> write Interest </w> = true ; } else { <comment> <w> get Endpoint </w> ( ) . <w> process Socket </w> ( this , <w> Socket Event </w> . <w> OPEN _ WRITE </w> , true ) ; } } }", "target": 0}
{"idx": 1156, "func": "@ Override public <w> Maven Execution Request </w> <w> set User Toolchains File </w> ( File <w> user Toolchains File </w> ) { this . <w> user Toolchains File </w> = <w> user Toolchains File </w> ; return this ; }", "target": 1}
{"idx": 1157, "func": "<comment> public long <w> get Last Modified </w> ( ) { return 0 ; }", "target": 1}
{"idx": 1158, "func": "public long <w> get Num Hash Collisions </w> ( ) { if ( ! <w> enable Perf Metrics </w> ) { throw new <w> Illegal State Exception </w> ( ) ; } return <w> num Hash Collisions </w> ; }", "target": 0}
{"idx": 1159, "func": "public Object <w> get Negotiated Property </w> ( String <w> prop Name </w> ) { if ( ! complete ) throw new <w> Illegal State Exception </w> ( <str-literal> <str-literal> <str-literal> ) ; return null ; }", "target": 1}
{"idx": 1160, "func": "int minutes = 0 ;", "target": 1}
{"idx": 1161, "func": "<comment> public static final String <w> SSL _ PROTO _ SS Lv 3 </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 1162, "func": "<comment> public Iterable < T > values ( ) { return Iterables . <w> unmodifiable Iterable </w> ( metrics . values ( ) ) ; }", "target": 0}
{"idx": 1163, "func": "public <w> Partition Data </w> ( long <w> fetch Offset </w> , long <w> log Start Offset </w> , int <w> max Bytes </w> ) { this . <w> fetch Offset </w> = <w> fetch Offset </w> ; this . <w> log Start Offset </w> = <w> log Start Offset </w> ; this . <w> max Bytes </w> = <w> max Bytes </w> ; }", "target": 0}
{"idx": 1164, "func": "<comment> public static final <w> Configuration Key </w> <w> KEY _ HIDE _ BIDIRECTIONAL _ ARROWS </w> = Configuration . <w> make Key </w> ( <str-literal> <str-literal> <str-literal> , <str-literal> <str-literal> <str-literal> , <str-literal> <str-literal> <str-literal> ) ;", "target": 0}
{"idx": 1165, "func": "<comment> private byte [ ] arr ;", "target": 0}
{"idx": 1166, "func": "@ Override public byte [ ] <w> get TBS Certificate </w> ( ) throws <w> Certificate Encoding Exception </w> { return unwrap ( ) . <w> get TBS Certificate </w> ( ) ; }", "target": 1}
{"idx": 1167, "func": "<comment> private final static int <w> OP _ NAMES </w> = 2 ;", "target": 1}
{"idx": 1168, "func": "@ Override public <w> App Configuration Entry </w> [ ] <w> get App Configuration Entry </w> ( String name ) { return <w> entry Map </w> . get ( name ) ; }", "target": 0}
{"idx": 1169, "func": "* * * Clear all memory in the pool and run all the cleanups . This also destroys all * subpools . * @ param pool The pool to clear * This does not actually free the memory , it just allows the pool * to re - use this memory for the next allocation . * / public static native void clear ( long pool ) ;", "target": 0}
{"idx": 1170, "func": "<comment> private static final int <w> SHORT _ SESSION _ TIMEOUT _ SECS </w> = 1 ;", "target": 0}
{"idx": 1171, "func": "<comment> public static native int unlock ( long mutex ) ;", "target": 0}
{"idx": 1172, "func": "<comment> public static final String <w> SSL _ ENDPOINT _ IDENTIFICATION _ ALGORITHM _ CONFIG </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 1173, "func": "<comment> public static final Schema [ ] <w> FETCH _ REQUEST </w> = { <w> FETCH _ REQUEST _ V 0 </w> , <w> FETCH _ REQUEST _ V 1 </w> , <w> FETCH _ REQUEST _ V 2 </w> , <w> FETCH _ REQUEST _ V 3 </w> , <w> FETCH _ REQUEST _ V 4 </w> , <w> FETCH _ REQUEST _ V 5 </w> } ;", "target": 1}
{"idx": 1174, "func": "<comment> static final int <w> OUTPUT _ FLAG _ HAS _ TERMS </w> = 0x2 ;", "target": 1}
{"idx": 1175, "func": "public <w> Mapped Wrapper </w> [ ] <w> wildcard Wrappers </w> = new <w> Mapped Wrapper </w> [ 0 ] ;", "target": 0}
{"idx": 1176, "func": "private <w> Nio Sender </w> [ ] <w> setup For Send </w> ( Member [ ] destination ) throws <w> Channel Exception </w> { <w> Channel Exception </w> cx = null ; <w> Nio Sender </w> [ ] result = new <w> Nio Sender </w> [ destination . length ] ; for ( int i = 0 ; i < destination . length ; i + + ) { <w> Nio Sender </w> sender = <w> nio Senders </w> . get ( destination [ i ] ) ; try { if ( sender = = null ) { sender = new <w> Nio Sender </w> ( ) ; <w> Abstract Sender </w> . <w> transfer Properties </w> ( this , sender ) ; <w> nio Senders </w> . put ( destination [ i ] , sender ) ; } sender . reset ( ) ; sender . <w> set Destination </w> ( destination [ i ] ) ; sender . <w> set Selector </w> ( selector ) ; sender . <w> set Udp Based </w> ( <w> is Udp Based </w> ( ) ) ; result [ i ] = sender ; } catch ( <w> Unknown Host Exception </w> x ) { if ( cx = = null ) cx = new <w> Channel Exception </w> ( sm . <w> get String </w> ( <str-literal> <str-literal> <str-literal> ) , x ) ; cx . <w> add Faulty Member </w> ( destination [ i ] , x ) ; } } if ( cx ! = null ) throw cx ; else return result ; }", "target": 0}
{"idx": 1177, "func": "<comment> private final <w> Byte Buffer </w> <w> member State </w> ;", "target": 0}
{"idx": 1178, "func": "public Node controller ( ) { return controller ; }", "target": 0}
{"idx": 1179, "func": "<comment> static final short [ ] <w> CURR _ VERSION </w> = new short [ <w> Api Keys </w> . <w> MAX _ API _ KEY </w> + 1 ] ;", "target": 1}
{"idx": 1180, "func": "public boolean <w> has Freqs </w> ( ) { return <w> field Info </w> . <w> get Index Options </w> ( ) . <w> compare To </w> ( <w> Index Options </w> . <w> DOCS _ AND _ FREQS </w> ) > = 0 ; }", "target": 0}
{"idx": 1181, "func": "<comment> private static final int <w> SHORT _ SESSION _ TIMEOUT _ MINS </w> = 1 ;", "target": 0}
{"idx": 1182, "func": "<comment> protected <w> Byte Buffer </w> readbuf = null ;", "target": 0}
{"idx": 1183, "func": "<comment> public static final <w> Bit Set </w> <w> QI _ CTOR </w> = new <w> Bit Set </w> ( 8 ) ;", "target": 0}
{"idx": 1184, "func": "<comment> long <w> term Ord Orig </w> ;", "target": 0}
{"idx": 1185, "func": "private static int <w> NUM _ DOCS </w> ;", "target": 0}
{"idx": 1186, "func": "private final <w> Linked List </w> < <w> Unsafe Sorter Spill Writer </w> > <w> spill Writers </w> = new <w> Linked List </w> < > ( ) ;", "target": 0}
{"idx": 1187, "func": "private final <w> Composite EL Resolver </w> <w> custom Resolvers </w> ;", "target": 0}
{"idx": 1188, "func": "@ Override public <w> Maven Execution Request </w> <w> set Local Repository Path </w> ( File <w> local Repository </w> ) { <w> local Repository Path </w> = <w> local Repository </w> ; return this ; }", "target": 1}
{"idx": 1189, "func": "<comment> private <w> Synchronized Stack </w> < <w> Poller Event </w> > <w> event Cache </w> ;", "target": 0}
{"idx": 1190, "func": "Vector <w> _ target </w> ;", "target": 1}
{"idx": 1191, "func": "<comment> public boolean <w> can Create Bean </w> ( String <w> bean Name </w> ) { return false ; }", "target": 1}
{"idx": 1192, "func": "<comment> private int <w> num Keys </w> ;", "target": 0}
{"idx": 1193, "func": "private final static String RESOURCES = <str-literal> <str-literal> <str-literal> ;", "target": 1}
{"idx": 1194, "func": "public void <w> To Source </w> ( <w> String Builder </w> sb ) { sb . append ( <str-literal> <str-literal> <str-literal> ) ; Resource . <w> To Source </w> ( sb ) ; sb . append ( <str-literal> <str-literal> <str-literal> ) ; Statements . <w> To Source </w> ( sb ) ; }", "target": 1}
{"idx": 1195, "func": "public Date <w> get Current Date </w> ( ) { long systime = System . <w> current Time Millis </w> ( ) ; if ( ( systime - <w> current Millis </w> ) > 1000 ) { synchronized ( this ) { if ( ( systime - <w> current Millis </w> ) > 1000 ) { <w> current Date </w> = new Date ( systime ) ; <w> current Millis </w> = systime ; } } } return <w> current Date </w> ; }", "target": 1}
{"idx": 1196, "func": "<comment> private final int <w> min Bytes </w> ;", "target": 1}
{"idx": 1197, "func": "<comment> public void <w> start Document </w> ( ) throws <w> SAX Exception </w> { }", "target": 0}
{"idx": 1198, "func": "private String <w> is Error Page Value </w> ;", "target": 1}
{"idx": 1199, "func": "private final int <w> num Segments </w> = 3 ;", "target": 0}
{"idx": 1200, "func": "<comment> protected Map < String , Analyzer > <w> field 2 analyzer </w> ;", "target": 0}
{"idx": 1201, "func": "<comment> private void <w> get Reference Or Attribute </w> ( <w> Ref Featured </w> parent , Object element , Collection < <w> Ref Base Object </w> > returns , boolean <w> contents Only </w> ) { try { if ( ! ( element instanceof javax . jmi . model . Attribute | | element instanceof Reference ) ) { return ; } if ( element instanceof Reference ) { javax . jmi . model . <w> Aggregation Kind </w> ak = ( ( Reference ) element ) . <w> get Exposed End </w> ( ) . <w> get Aggregation </w> ( ) ; if ( <w> contents Only </w> & & ak ! = <w> MOF _ COMPOSITE </w> ) { return ; } } String <w> value Name </w> = ( ( javax . jmi . model . <w> Model Element </w> ) element ) . <w> get Name </w> ( ) ; Object refends = parent . <w> ref Get Value </w> ( <w> value Name </w> ) ; if ( refends = = null ) { return ; } if ( refends instanceof Collection ) { Collection c = ( Collection ) refends ; if ( ! c . <w> is Empty </w> ( ) ) { for ( Iterator it = c . iterator ( ) ; it . <w> has Next </w> ( ) ; ) { Object o = it . next ( ) ; <comment> if ( o instanceof <w> Ref Base Object </w> ) { returns . add ( ( <w> Ref Base Object </w> ) o ) ; } } } } else { <comment> if ( refends instanceof <w> Ref Base Object </w> ) { returns . add ( ( <w> Ref Base Object </w> ) refends ) ; } } } catch ( <w> Invalid Object Exception </w> e ) { throw new <w> Invalid Element Exception </w> ( e ) ; } }", "target": 1}
{"idx": 1202, "func": "private static void <w> check Answer </w> ( Dataset < Row > actual String <w> error Message </w> = <w> Query Test </w> $ . MODULE $ . <w> check Answer </w> ( actual , expected ) ; if ( <w> error Message </w> ! = null ) { Assert . fail ( <w> error Message </w> ) ; } }", "target": 1}
{"idx": 1203, "func": "public int <w> is Valid </w> ( ) { return ( this . validity ! = null ? this . validity . <w> is Valid </w> ( ) : <w> Source Validity </w> . INVALID ) ; }", "target": 1}
{"idx": 1204, "func": "public static final String <w> CALLER _ PARAMETERS </w> = <w> Action Set Node </w> . class . <w> get Name </w> ( ) + <str-literal> <str-literal> <str-literal> ;", "target": 1}
{"idx": 1205, "func": "public <w> Maven Execution Request </w> <w> set Use Reactor </w> ( boolean <w> reactor Active </w> ) { <w> use Reactor </w> = <w> reactor Active </w> ; return this ; }", "target": 1}
{"idx": 1206, "func": "<comment> public static final int <w> TOKEN _ HIDEBIDIRECTIONALARROWS </w> = 27 ;", "target": 0}
{"idx": 1207, "func": "@ Override public <w> Web Resource Root </w> <w> get Resources </w> ( ) { return null ; }", "target": 1}
{"idx": 1208, "func": "<comment> private int width = 0 ;", "target": 0}
{"idx": 1209, "func": "private Map objectmodel ;", "target": 1}
{"idx": 1210, "func": "private final boolean <w> delete Partitions </w> ;", "target": 0}
{"idx": 1211, "func": "public <w> Image Data </w> <w> get Image Data </w> ( ) { Point size = <w> get Size </w> ( ) ; RGB black = new RGB ( 0 , 0 , 0 ) ; RGB [ ] rgbs = new RGB [ 256 ] ; rgbs [ 0 ] = black ; <comment> rgbs [ 1 ] = black ; <comment> <w> Palette Data </w> <w> data Palette </w> = new <w> Palette Data </w> ( rgbs ) ; <w> image Data </w> = new <w> Image Data </w> ( size . x , size . y , 8 , <w> data Palette </w> ) ; <w> image Data </w> . <w> transparent Pixel </w> = 0 ; <w> draw Composite Image </w> ( size . x , size . y ) ; for ( int i = 0 ; i < rgbs . length ; i + + ) if ( rgbs [ i ] = = null ) rgbs [ i ] = black ; return <w> image Data </w> ; }", "target": 1}
{"idx": 1212, "func": "private boolean <w> process Plugins </w> ;", "target": 1}
{"idx": 1213, "func": "public byte [ ] <w> get Message </w> ( ) { return current ; }", "target": 1}
{"idx": 1214, "func": "<comment> protected Entry first ;", "target": 0}
{"idx": 1215, "func": "public static Object <w> set Object Index </w> ( Object obj , double <w> dbl Index </w> , Object value , Context cx ) { return <w> set Object Index </w> ( obj , <w> dbl Index </w> , value , cx , <w> get Top Call Scope </w> ( cx ) ) ; }", "target": 1}
{"idx": 1216, "func": "<comment> public String <w> get Version </w> ( ) { return ( version ! = null ) ? version : <str-literal> <str-literal> ; }", "target": 0}
{"idx": 1217, "func": "public <w> Double Metaphone Filter </w> create ( <w> Token Stream </w> input ) { return new <w> Double Metaphone Filter </w> ( input , <w> max Code Length </w> , inject ) ; }", "target": 0}
{"idx": 1218, "func": "<comment> private static int <w> no Docs </w> ;", "target": 0}
{"idx": 1219, "func": "<comment> protected boolean <w> discount Overlaps </w> = true ;", "target": 0}
{"idx": 1220, "func": "@ Override public void <w> check Members </w> ( boolean <w> check All </w> ) { try { if ( membership = = null ) <w> setup Membership </w> ( ) ; synchronized ( membership ) { if ( ! <w> check All </w> ) <w> perform Basic Check </w> ( ) ; else <w> perform Forced Check </w> ( ) ; } } catch ( Exception x ) { log . warn ( sm . <w> get String </w> ( <str-literal> <str-literal> <str-literal> ) , x ) ; } }", "target": 1}
{"idx": 1221, "func": "<comment> private boolean <w> can Read Configs </w> ;", "target": 0}
{"idx": 1222, "func": "<comment> public static final double <w> MAX _ LON _ RADIANS </w> = <w> TO _ RADIANS </w> * <w> MAX _ LON _ INCL </w> ;", "target": 0}
{"idx": 1223, "func": "private void <w> validate 20 Effective Repository </w> ( <w> Model Problem Collector </w> problems <w> Model Building Request </w> request ) { if ( repository ! = null ) { Severity <w> err On 31 </w> = <w> get Severity </w> ( request , <w> Model Building Request </w> . <w> VALIDATION _ LEVEL _ MAVEN _ 3 _ 1 </w> ) ; <w> validate Banned Characters </w> ( prefix + <str-literal> <str-literal> <str-literal> , problems , <w> err On 31 </w> , Version . <w> V 20 </w> , repository . <w> get Id </w> ( ) , null , repository , <w> ILLEGAL _ REPO _ ID _ CHARS </w> ) ; if ( <str-literal> <str-literal> <str-literal> . equals ( repository . <w> get Id </w> ( ) ) ) { <w> add Violation </w> ( problems , <w> err On 31 </w> , Version . <w> V 20 </w> , prefix + <str-literal> <str-literal> <str-literal> , null , <str-literal> <str-literal> <str-literal> + <str-literal> <str-literal> <str-literal> + <str-literal> <str-literal> <str-literal> , repository ) ; } if ( <str-literal> <str-literal> <str-literal> . equals ( repository . <w> get Layout </w> ( ) ) ) { <w> add Violation </w> ( problems , Severity . WARNING , Version . <w> V 20 </w> , prefix + <str-literal> <str-literal> <str-literal> , repository . <w> get Id </w> ( ) , <str-literal> <str-literal> <str-literal> , repository ) ; } } }", "target": 1}
{"idx": 1224, "func": "public void <w> ensure Active </w> ( ) { coordinator . poll ( 0 ) ; }", "target": 1}
{"idx": 1225, "func": "<comment> public void <w> update Generation </w> ( <w> Segment Infos </w> other ) { <w> last Generation </w> = other . <w> last Generation </w> ; generation = other . generation ; }", "target": 0}
{"idx": 1226, "func": "private <w> Maven Metadata Cache </w> cache ;", "target": 0}
{"idx": 1227, "func": "public Object <w> set Body </w> ( Object handle ) { List < String > bodies = null ; if ( handle instanceof <w> Opaque Expression </w> ) { bodies = ( ( <w> Opaque Expression </w> ) handle ) . <w> get Bodies </w> ( ) ; } else if ( handle instanceof <w> Opaque Behavior </w> ) { bodies = ( ( <w> Opaque Behavior </w> ) handle ) . <w> get Bodies </w> ( ) ; } else { throw new <w> Illegal Argument Exception </w> ( <str-literal> <str-literal> <str-literal> + <str-literal> <str-literal> <str-literal> ) ; <comment> } <comment> if ( bodies . size ( ) > 1 ) { throw new <w> Illegal State Exception </w> ( <str-literal> <str-literal> <str-literal> ) ; <comment> } bodies . clear ( ) ; bodies . add ( body ) ; return handle ; }", "target": 1}
{"idx": 1228, "func": "public <w> Pipeline Options </w> <w> get Pipeline Options </w> ( ) { return options ; }", "target": 0}
{"idx": 1229, "func": "<comment> public String [ ] <w> token Image </w> ;", "target": 0}
{"idx": 1230, "func": "public Count ( ) { super ( 0 ) ; }", "target": 0}
{"idx": 1231, "func": "<comment> public static final double <w> MIN _ LON _ RADIANS </w> = <w> TO _ RADIANS </w> * <w> MIN _ LON _ INCL </w> ;", "target": 0}
{"idx": 1232, "func": "private final long <w> max Cache Size Bytes </w> ;", "target": 0}
{"idx": 1233, "func": "public Name <w> get Function Name </w> ( ) { return <w> function Name </w> ; }", "target": 0}
{"idx": 1234, "func": "<comment> private final short acks ;", "target": 0}
{"idx": 1235, "func": "public void output ( <w> Output T </w> output ) { output ( <w> main Output Tag </w> , output ) ; }", "target": 0}
{"idx": 1236, "func": "public static final long <w> DEFAULT _ FAILURE _ DELAY _ MS </w> = 15000 ;", "target": 0}
{"idx": 1237, "func": "public void <w> To Source </w> ( <w> String Builder </w> sb ) { Test . <w> To Source </w> ( sb ) ; sb . append ( <str-literal> <str-literal> <str-literal> ) ; Left . <w> To Source </w> ( sb ) ; sb . append ( <str-literal> <str-literal> <str-literal> ) ; Right . <w> To Source </w> ( sb ) ; }", "target": 1}
{"idx": 1238, "func": "public void <w> To Source </w> ( <w> String Builder </w> sb ) { sb . append ( <str-literal> <str-literal> <str-literal> ) ; this . <w> New Line </w> ( sb ) ; }", "target": 1}
{"idx": 1239, "func": "private void <w> validate Repositories </w> ( <w> Settings Problem Collector </w> problems { Set < String > <w> repo Ids </w> = new <w> Hash Set </w> < > ( ) ; for ( Repository repository : repositories ) { <w> validate String Not Empty </w> ( problems , prefix + <str-literal> <str-literal> <str-literal> , repository . <w> get Id </w> ( ) , repository . <w> get Url </w> ( ) ) ; <w> validate Banned Characters </w> ( problems , prefix + <str-literal> <str-literal> <str-literal> , Severity . WARNING , repository . <w> get Id </w> ( ) , null , <w> ILLEGAL _ REPO _ ID _ CHARS </w> ) ; if ( <str-literal> <str-literal> <str-literal> . equals ( repository . <w> get Id </w> ( ) ) ) { <w> add Violation </w> ( problems , Severity . WARNING , prefix + <str-literal> <str-literal> <str-literal> , null , <str-literal> <str-literal> <str-literal> + <str-literal> <str-literal> <str-literal> + <str-literal> <str-literal> <str-literal> ) ; } if ( ! <w> repo Ids </w> . add ( repository . <w> get Id </w> ( ) ) ) { <w> add Violation </w> ( problems , Severity . WARNING , prefix + <str-literal> <str-literal> <str-literal> , null , <str-literal> <str-literal> <str-literal> + repository . <w> get Id </w> ( ) ) ; } <w> validate String Not Empty </w> ( problems , prefix + <str-literal> <str-literal> <str-literal> , repository . <w> get Url </w> ( ) , repository . <w> get Id </w> ( ) ) ; if ( <str-literal> <str-literal> <str-literal> . equals ( repository . <w> get Layout </w> ( ) ) ) { <w> add Violation </w> ( problems , Severity . WARNING , prefix + <str-literal> <str-literal> <str-literal> , repository . <w> get Id </w> ( ) , <str-literal> <str-literal> <str-literal> ) ; } } }", "target": 1}
{"idx": 1240, "func": "<comment> protected static final boolean <w> SERVER _ USE _ COOKIES </w> = true ;", "target": 0}
{"idx": 1241, "func": "<comment> private static void <w> check Hosts File </w> ( ) { try { <w> Inet Address </w> . <w> get Local Host </w> ( ) ; } catch ( <w> Unknown Host Exception </w> e ) { System . err . println ( <str-literal> <str-literal> <str-literal> ) ; e . <w> print Stack Trace </w> ( System . err ) ; System . err . println ( <str-literal> <str-literal> <str-literal> + <str-literal> <str-literal> <str-literal> ) ; System . err . println ( <str-literal> <str-literal> <str-literal> ) ; System . exit ( 0 ) ; } }", "target": 1}
{"idx": 1242, "func": "<comment> public static final int <w> MAX _ DIMS </w> = 8 ;", "target": 0}
{"idx": 1243, "func": "public <w> Dependency Resolution Request </w> <w> set Resolution Filter </w> ( <w> Dependency Filter </w> filter ) { this . filter = filter ; return this ; }", "target": 1}
{"idx": 1244, "func": "<comment> protected void <w> validate Security Roles </w> ( ) { <comment> <w> Security Constraint </w> constraints [ ] = context . <w> find Constraints </w> ( ) ; for ( int i = 0 ; i < constraints . length ; i + + ) { String roles [ ] = constraints [ i ] . <w> find Auth Roles </w> ( ) ; for ( int j = 0 ; j < roles . length ; j + + ) { if ( ! <str-literal> <str-literal> <str-literal> . equals ( roles [ j ] ) & & ! context . <w> find Security Role </w> ( roles [ j ] ) ) { log . warn ( sm . <w> get String </w> ( <str-literal> <str-literal> <str-literal> , roles [ j ] ) ) ; context . <w> add Security Role </w> ( roles [ j ] ) ; } } } <comment> Container wrappers [ ] = context . <w> find Children </w> ( ) ; for ( int i = 0 ; i < wrappers . length ; i + + ) { Wrapper wrapper = ( Wrapper ) wrappers [ i ] ; String <w> run As </w> = wrapper . <w> get Run As </w> ( ) ; if ( ( <w> run As </w> ! = null ) & & ! context . <w> find Security Role </w> ( <w> run As </w> ) ) { log . warn ( sm . <w> get String </w> ( <str-literal> <str-literal> <str-literal> , <w> run As </w> ) ) ; context . <w> add Security Role </w> ( <w> run As </w> ) ; } String names [ ] = wrapper . <w> find Security References </w> ( ) ; for ( int j = 0 ; j < names . length ; j + + ) { String link = wrapper . <w> find Security Reference </w> ( names [ j ] ) ; if ( ( link ! = null ) & & ! context . <w> find Security Role </w> ( link ) ) { log . warn ( sm . <w> get String </w> ( <str-literal> <str-literal> <str-literal> , link ) ) ; context . <w> add Security Role </w> ( link ) ; } } } }", "target": 0}
{"idx": 1245, "func": "abstract Builder < T > <w> set Max Files Per Bundle </w> ( Integer <w> max Files Per Bundle </w> ) ;", "target": 1}
{"idx": 1246, "func": "<comment> @ Override public Object <w> lookup Link </w> ( Name name ) throws <w> Naming Exception </w> { return lookup ( name , false ) ; }", "target": 0}
{"idx": 1247, "func": "<comment> public static final String <w> SSL _ PROTO _ TL Sv 1 _ 0 </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 1248, "func": "public static long <w> Event Mods </w> = New | Public | Protected | Internal | Private | Static | Virtual | Sealed | Override | Abstract | Extern ;", "target": 1}
{"idx": 1249, "func": "public void <w> To Source </w> ( <w> String Builder </w> sb ) { sb . append ( <str-literal> <str-literal> <str-literal> ) ; this . <w> New Line </w> ( sb ) ; <w> Try Block </w> . <w> To Source </w> ( sb ) ; for ( <w> Catch Node </w> cb : <w> Catch Blocks </w> ) { cb . <w> To Source </w> ( sb ) ; } if ( <w> Finally Block </w> ! = null ) { <w> Finally Block </w> . <w> To Source </w> ( sb ) ; } }", "target": 1}
{"idx": 1250, "func": "private <w> Print Stream </w> <w> output Stream </w> ;", "target": 0}
{"idx": 1251, "func": "private final Collection < String > <w> scopes To Collect For Current Project </w> ;", "target": 0}
{"idx": 1252, "func": "private List < <w> Artifact Metadata </w> > classpath ;", "target": 1}
{"idx": 1253, "func": "abstract Builder < K , V > <w> set Key Type Descriptor </w> ( <w> Type Descriptor </w> < K > <w> key Type Descriptor </w> ) ;", "target": 1}
{"idx": 1254, "func": "private static void <w> set Elem </w> ( Context cx , Scriptable target , long index , Object value ) { if ( index > Integer . <w> MAX _ VALUE </w> ) { String id = Long . <w> to String </w> ( index ) ; <w> Scriptable Object </w> . <w> put Property </w> ( target , id , value ) ; } else { <w> Scriptable Object </w> . <w> put Property </w> ( target , ( int ) index , value ) ; } }", "target": 0}
{"idx": 1255, "func": "public <w> Serializable Configuration </w> ( Configuration conf ) { if ( conf = = null ) { throw new <w> Null Pointer Exception </w> ( <str-literal> <str-literal> <str-literal> ) ; } this . conf = conf ; }", "target": 0}
{"idx": 1256, "func": "public void <w> To Source </w> ( <w> String Builder </w> sb ) { for ( T node : this ) { <w> Base Node </w> b = ( <w> Base Node </w> ) node ; b . <w> To Source </w> ( sb ) ; } }", "target": 1}
{"idx": 1257, "func": "@ Test public void <w> reuse Clients Up To Config Variable Concurrent </w> ( ) throws Exception { <w> test Client Reuse </w> ( 1 , true ) ; <w> test Client Reuse </w> ( 2 , true ) ; <w> test Client Reuse </w> ( 3 , true ) ; <w> test Client Reuse </w> ( 4 , true ) ; }", "target": 0}
{"idx": 1258, "func": "private <w> J Check Box </w> <w> layout Diagrams </w> ;", "target": 1}
{"idx": 1259, "func": "final long <w> num Terms </w> ;", "target": 0}
{"idx": 1260, "func": "<comment> private Object <w> get Model </w> ( ) { if ( model ! = null ) { return model ; } for ( Object <w> user Model </w> : <w> get Project </w> ( ) . <w> get User Defined Model List </w> ( ) ) { if ( ! <w> get Model Management Helper </w> ( ) . <w> is Read Only </w> ( <w> user Model </w> ) ) { model = <w> user Model </w> ; return model ; } } throw new <w> Illegal State Exception </w> ( <str-literal> <str-literal> <str-literal> ) ; }", "target": 1}
{"idx": 1261, "func": "@ Override protected Icon [ ] <w> get Icons </w> ( ) { if ( Model . <w> get Model Management Helper </w> ( ) . <w> is Read Only </w> ( <w> get Content </w> ( ) . <w> get Owner </w> ( ) ) ) { return new Icon [ 6 ] ; } return icons ; }", "target": 1}
{"idx": 1262, "func": "<comment> public void <w> set Value </w> ( String <w> new Value </w> ) { value = <w> new Value </w> ; }", "target": 0}
{"idx": 1263, "func": "private static final byte [ ] <w> UTF 16 _ MESSAGE </w> = new byte [ ] { - 2 , - 1 , 0 , 65 , 0 , 66 , 0 , 67 } ;", "target": 1}
{"idx": 1264, "func": "public Configuration get ( ) { return conf ; }", "target": 0}
{"idx": 1265, "func": "<comment> private Map < String , String > <w> effective Config </w> ;", "target": 1}
{"idx": 1266, "func": "private final <w> Prefix Comparator </w> <w> prefix Comparator </w> ;", "target": 0}
{"idx": 1267, "func": "<comment> private final <w> Delete Slice </w> <w> global Slice </w> ;", "target": 0}
{"idx": 1268, "func": "@ Override protected List < <w> Query Node </w> > <w> set Children Order </w> ( List < <w> Query Node </w> > children ) throws <w> Query Node Exception </w> { return children ; }", "target": 1}
{"idx": 1269, "func": "<comment> private static void <w> get Nodes From Path </w> ( final <w> Node List Impl </w> result , final Node <w> context Node </w> , final String [ ] path , final int <w> start Index </w> ) { final <w> Node List </w> childs = <w> context Node </w> . <w> get Child Nodes </w> ( ) ; int m , l ; Node item ; if ( <w> start Index </w> = = ( path . length - 1 ) ) { if ( childs ! = null ) { m = 0 ; l = childs . <w> get Length </w> ( ) ; while ( m < l ) { item = childs . item ( m ) ; if ( item . <w> get Node Type </w> ( ) = = Node . <w> ELEMENT _ NODE </w> ) { <comment> <comment> if ( path [ <w> start Index </w> ] . equals ( item . <w> get Local Name </w> ( ) ! = null ? item . <w> get Local Name </w> ( ) : item . <w> get Node Name </w> ( ) ) ) { result . <w> add Node </w> ( item ) ; } } m + + ; } } } else { if ( childs ! = null ) { m = 0 ; l = childs . <w> get Length </w> ( ) ; while ( m < l ) { item = childs . item ( m ) ; if ( item . <w> get Node Type </w> ( ) = = Node . <w> ELEMENT _ NODE </w> ) { <comment> <comment> if ( path [ <w> start Index </w> ] . equals ( item . <w> get Local Name </w> ( ) ! = null ? item . <w> get Local Name </w> ( ) : item . <w> get Node Name </w> ( ) ) ) { <w> get Nodes From Path </w> ( result , item , path , <w> start Index </w> + 1 ) ; } } m + + ; } } } }", "target": 1}
{"idx": 1270, "func": "private List < <w> Data Sender </w> > inuse = null ;", "target": 1}
{"idx": 1271, "func": "<comment> protected final String REPOSITORIES = <str-literal> <str-literal> <str-literal> ;", "target": 1}
{"idx": 1272, "func": "<comment> protected final Object [ ] <w> get Heap Array </w> ( ) { return ( Object [ ] ) heap ; }", "target": 0}
{"idx": 1273, "func": "public String <w> to String </w> ( ) { return <w> PERIOD _ FORMATTER </w> . print ( delay . <w> to Period </w> ( ) ) ; }", "target": 0}
{"idx": 1274, "func": "public static String <w> get View </w> ( String query if ( query ! = null ) { int index = query . <w> index Of </w> ( Constants . <w> VIEW _ PARAM </w> ) ; if ( index ! = - 1 & & ( index = = 0 | | query . <w> char At </w> ( index - 1 ) = = <str-literal> ) & & query . length ( ) > index + Constants . <w> VIEW _ PARAM </w> . length ( ) & & query . <w> char At </w> ( index + Constants . <w> VIEW _ PARAM </w> . length ( ) ) = = <str-literal> ) { String tmp = query . substring ( index + Constants . <w> VIEW _ PARAM </w> . length ( ) + 1 ) ; index = tmp . <w> index Of </w> ( <str-literal> ) ; if ( index ! = - 1 ) { return tmp . substring ( 0 , index ) ; } else { return tmp ; } } else { return env . <w> get View </w> ( ) ; } } else { return env . <w> get View </w> ( ) ; } }", "target": 1}
{"idx": 1275, "func": "private final long <w> num Elements For Spill Threshold </w> ;", "target": 0}
{"idx": 1276, "func": "public static final String <w> DEFAULT _ RESOURCE _ LINK _ FACTORY </w> = Package + <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 1277, "func": "private void <w> check Edges </w> ( int <w> n Edges </w> ) { if ( <w> incident Edges </w> = = null ) { <w> incident Edges </w> = new <w> Hash Map </w> < > ( <w> n Edges </w> ) ; } if ( <w> excident Edges </w> = = null ) { <w> excident Edges </w> = new <w> Hash Map </w> < > ( <w> n Edges </w> ) ; } }", "target": 1}
{"idx": 1278, "func": "<comment> protected static final byte [ ] <w> COORD _ HEADER </w> = new byte [ ] { - 86 , 38 , - 34 , - 29 , - 98 , 90 , 65 , 63 , - 81 , - 122 , - 6 , - 110 , 99 , - 54 , 13 , 63 } ;", "target": 0}
{"idx": 1279, "func": "public String <w> get Format </w> ( long time ) { return cache . <w> get Format </w> ( time ) ; }", "target": 0}
{"idx": 1280, "func": "public <w> Maven Metadata </w> <w> set File </w> ( File file ) { return new <w> Versions Metadata </w> ( artifact , file ) ; }", "target": 1}
{"idx": 1281, "func": "final int <w> n Terms </w> ;", "target": 0}
{"idx": 1282, "func": "public Enumeration <w> get Locales </w> ( ) { return this . req . <w> get Locales </w> ( ) ; }", "target": 0}
{"idx": 1283, "func": "<comment> private final Map < String , String > <w> path Parameters </w> = new <w> Hash Map </w> < > ( ) ;", "target": 0}
{"idx": 1284, "func": "public <w> Dependency Resolution Request </w> <w> set Maven Project </w> ( <w> Maven Project </w> project ) { this . project = project ; return this ; }", "target": 1}
{"idx": 1285, "func": "@ Override public Object <w> get Value </w> ( <w> EL Context </w> context ) { context . <w> notify Before Evaluation </w> ( <w> get Expression String </w> ( ) ) ; Object result ; if ( this . <w> expected Type </w> ! = null ) { result = context . <w> convert To Type </w> ( this . value , this . <w> expected Type </w> ) ; } else { result = this . value ; } context . <w> notify After Evaluation </w> ( <w> get Expression String </w> ( ) ) ; return result ; }", "target": 1}
{"idx": 1286, "func": "<comment> protected long <w> nr Of Filter Requests </w> = 0 ;", "target": 0}
{"idx": 1287, "func": "<comment> public String <w> get Unless </w> ( ) { return <w> unless Condition </w> ; }", "target": 0}
{"idx": 1288, "func": "private static final String <w> MIN _ INSYNC _ REPLICAS _ CONFIG </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 1289, "func": "@ Override public Set < Critic > <w> get Critics </w> ( ) { if ( critics = = null ) { <w> load Well Formedness Rules </w> ( ) ; } return super . <w> get Critics </w> ( ) ; }", "target": 1}
{"idx": 1290, "func": "<comment> static final int <w> ALL _ MISSING </w> = - 2 ;", "target": 0}
{"idx": 1291, "func": "<comment> private static final String <w> MAX _ BYTES _ KEY _ NAME </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 1292, "func": "public Collection <w> get Attributes Inh </w> ( Object classifier ) { return impl . <w> get Attributes Inh </w> ( classifier ) ; }", "target": 0}
{"idx": 1293, "func": "public <w> Project Builder Configuration </w> <w> set User Properties </w> ( Properties <w> user Properties </w> ) { this . <w> user Properties </w> = <w> user Properties </w> ; return this ; }", "target": 1}
{"idx": 1294, "func": "public long <w> get Clicks </w> ( ) { return clicks ; }", "target": 1}
{"idx": 1295, "func": "<comment> final <w> Segment Doc Values </w> <w> seg Doc Values </w> ;", "target": 0}
{"idx": 1296, "func": "public boolean <w> is Saturated </w> ( <w> Fuzzy Set </w> <w> bloom Filter </w> , <w> Field Info </w> <w> field Info </w> ) { <comment> <comment> return <w> bloom Filter </w> . <w> get Saturation </w> ( ) > 0.9f ; }", "target": 0}
{"idx": 1297, "func": "@ Override public int <w> hash Code </w> ( ) { return ( <w> super Class </w> . <w> hash Code </w> ( ) + Arrays . <w> hash Code </w> ( interfaces ) ) ^ names . size ( ) ; }", "target": 0}
{"idx": 1298, "func": "<comment> public java . util . Map < java . lang . String , java . lang . Integer > <w> get String To Int Column </w> ( ) { return <w> string _ to _ int _ column </w> ; }", "target": 0}
{"idx": 1299, "func": "public final int <w> max Bytes </w> ;", "target": 1}
{"idx": 1300, "func": "private long <w> window Bytes </w> ;", "target": 1}
{"idx": 1301, "func": "private Map <w> m Ary </w> ;", "target": 1}
{"idx": 1302, "func": "@ Override public <w> Maven Execution Request </w> <w> set Active Profiles </w> ( List < String > <w> active Profiles </w> ) { if ( <w> active Profiles </w> ! = null ) { this . <w> active Profiles </w> = new <w> Array List </w> < > ( <w> active Profiles </w> ) ; } else { this . <w> active Profiles </w> = null ; } return this ; }", "target": 1}
{"idx": 1303, "func": "<comment> private Token <w> jj _ scanpos </w> ;", "target": 0}
{"idx": 1304, "func": "private static final String <w> GEARPUMP _ SERIALIZERS </w> = <str-literal> <str-literal> <str-literal> ;", "target": 1}
{"idx": 1305, "func": "<comment> public void <w> set Adapter </w> ( Adapter adapter ) { this . adapter = adapter ; }", "target": 0}
{"idx": 1306, "func": "private final int <w> max Bytes </w> ;", "target": 1}
{"idx": 1307, "func": "<comment> @ Override public Object <w> create Statement </w> ( Object proxy , Method method , Object [ ] args , Object statement , long time ) { try { Object result = null ; String name = method . <w> get Name </w> ( ) ; String sql = null ; Constructor < ? > constructor = null ; if ( compare ( <w> CREATE _ STATEMENT </w> , name ) ) { <comment> constructor = <w> get Constructor </w> ( <w> CREATE _ STATEMENT _ IDX </w> , Statement . class ) ; } else if ( compare ( <w> PREPARE _ STATEMENT </w> , name ) ) { <comment> sql = ( String ) args [ 0 ] ; constructor = <w> get Constructor </w> ( <w> PREPARE _ STATEMENT _ IDX </w> , <w> Prepared Statement </w> . class ) ; if ( sql ! = null ) { <w> prepare Statement </w> ( sql , time ) ; } } else if ( compare ( <w> PREPARE _ CALL </w> , name ) ) { <comment> sql = ( String ) args [ 0 ] ; constructor = <w> get Constructor </w> ( <w> PREPARE _ CALL _ IDX </w> , <w> Callable Statement </w> . class ) ; <w> prepare Call </w> ( sql , time ) ; } else { <comment> <comment> return statement ; } result = constructor . <w> new Instance </w> ( new Object [ ] { new <w> Statement Proxy </w> ( statement , sql ) } ) ; return result ; } catch ( Exception x ) { log . warn ( <str-literal> <str-literal> <str-literal> , x ) ; } return statement ; }", "target": 0}
{"idx": 1308, "func": "@ Override public <w> Maven Execution Request </w> <w> set Transfer Listener </w> ( <w> Transfer Listener </w> <w> transfer Listener </w> ) { this . <w> transfer Listener </w> = <w> transfer Listener </w> ; return this ; }", "target": 1}
{"idx": 1309, "func": "<comment> final boolean <w> any Auto Prefix Terms </w> ;", "target": 1}
{"idx": 1310, "func": "<comment> private static final Map < Constructor < ? > , Predicate < Object [ ] > > <w> broken Offsets Constructors </w> = new <w> Hash Map </w> < > ( ) ;", "target": 0}
{"idx": 1311, "func": "<comment> private final Hashtable < String , String > <w> shell Env </w> = new Hashtable < > ( ) ;", "target": 0}
{"idx": 1312, "func": "public void <w> To Source </w> ( <w> String Builder </w> sb ) { sb . append ( <str-literal> <str-literal> <str-literal> ) ; }", "target": 1}
{"idx": 1313, "func": "<comment> public static final Schema [ ] <w> END _ TXN _ REQUEST </w> = { <w> END _ TXN _ REQUEST _ V 0 </w> } ;", "target": 1}
{"idx": 1314, "func": "<comment> private int <w> index Interval Bits </w> ;", "target": 0}
{"idx": 1315, "func": "private final byte [ ] <w> new Value </w> ;", "target": 1}
{"idx": 1316, "func": "private final Deque < Completion > completions ;", "target": 1}
{"idx": 1317, "func": "<comment> private String <w> certificate Key Alias </w> ;", "target": 0}
{"idx": 1318, "func": "public void <w> To Source </w> ( <w> String Builder </w> sb ) { this . <w> New Line </w> ( sb ) ; for ( int i = 0 ; i < Ranges . size ( ) ; i + + ) { sb . append ( <str-literal> <str-literal> <str-literal> ) ; Ranges . get ( i ) . <w> To Source </w> ( sb ) ; sb . append ( <str-literal> <str-literal> <str-literal> ) ; <comment> if ( i = = Ranges . size ( ) - 1 & & <w> Is Default Case </w> = = false & & <w> Statement Block </w> . <w> is Has Braces </w> ( ) = = false & & <w> Statement Block </w> . Statements . size ( ) ! = 1 ) { indent + + ; } this . <w> New Line </w> ( sb ) ; } if ( <w> Is Default Case </w> ) { sb . append ( <str-literal> <str-literal> <str-literal> ) ; if ( <w> Statement Block </w> . <w> is Has Braces </w> ( ) = = false & & <w> Statement Block </w> . Statements . size ( ) ! = 1 ) { indent + + ; } this . <w> New Line </w> ( sb ) ; } <w> Statement Block </w> . <w> To Source </w> ( sb ) ; }", "target": 1}
{"idx": 1319, "func": "private final float [ ] hist ;", "target": 1}
{"idx": 1320, "func": "private String instructions = Translator . localize ( <str-literal> <str-literal> <str-literal> ) ;", "target": 1}
{"idx": 1321, "func": "<comment> @ Override public <w> Naming Enumeration </w> < <w> Name Class Pair </w> > list ( String name ) throws <w> Naming Exception </w> { return list ( new <w> Composite Name </w> ( name ) ) ; }", "target": 0}
{"idx": 1322, "func": "<comment> public static final Map <w> get Object Model </w> ( Context context ) { <comment> try { return ( Map ) context . get ( <w> CONTEXT _ OBJECT _ MODEL </w> ) ; } catch ( <w> Context Exception </w> ce ) { throw new <w> Context Resource Not Found Exception </w> ( <str-literal> <str-literal> <str-literal> , ce ) ; } }", "target": 1}
{"idx": 1323, "func": "final <w> Packed Long Values </w> . Iterator iter ;", "target": 0}
{"idx": 1324, "func": "@ Override public <w> Hive Conf </w> <w> get Hive Conf </w> ( ) { <w> hive Conf </w> . <w> set Var </w> ( <w> Hive Conf </w> . <w> Conf Vars </w> . HIVEFETCHOUTPUTSERDE , <w> FETCH _ WORK _ SERDE _ CLASS </w> ) ; return <w> hive Conf </w> ; }", "target": 1}
{"idx": 1325, "func": "private static int <w> NUM _ ORDS </w> ;", "target": 0}
{"idx": 1326, "func": "<comment> public org . apache . spark . sql . execution . datasources . parquet . test . avro . <w> Parquet Avro Compat </w> . Builder <w> set Complex Column </w> ( java . util . Map < java . lang . String , java . util . List < org . apache . spark . sql . execution . datasources . parquet . test . avro . Nested > > value ) { validate ( fields ( ) [ 2 ] , value ) ; this . <w> complex _ column </w> = value ; <w> field Set Flags </w> ( ) [ 2 ] = true ; return this ; }", "target": 1}
{"idx": 1327, "func": "@ Override public byte [ ] <w> get Message </w> ( ) { if ( message = = null ) { message = outdata ; } return message ; }", "target": 1}
{"idx": 1328, "func": "<comment> private boolean <w> optimize Predicates </w> = true ;", "target": 0}
{"idx": 1329, "func": "public <w> Project Building Request </w> <w> set System Properties </w> ( Properties <w> system Properties </w> ) { if ( <w> system Properties </w> ! = null ) { this . <w> system Properties </w> = new Properties ( ) ; synchronized ( <w> system Properties </w> ) { <comment> this . <w> system Properties </w> . <w> put All </w> ( <w> system Properties </w> ) ; } } else { this . <w> system Properties </w> . clear ( ) ; } return this ; }", "target": 1}
{"idx": 1330, "func": "public <w> Hive Conf </w> <w> get Configuration </w> ( ) { return new <w> Hive Conf </w> ( configuration ) ; }", "target": 0}
{"idx": 1331, "func": "final int <w> num Batches </w> ;", "target": 0}
{"idx": 1332, "func": "long <w> fp End </w> ;", "target": 0}
{"idx": 1333, "func": "@ Override public <w> Driver Property Info </w> [ ] <w> get Property Info </w> ( String url , Properties info ) throws <w> SQL Exception </w> { return null ; }", "target": 0}
{"idx": 1334, "func": "@ Override protected Icon [ ] <w> get Icons </w> ( ) { if ( Model . <w> get Model Management Helper </w> ( ) . <w> is Read Only </w> ( <w> get Content </w> ( ) . <w> get Owner </w> ( ) ) ) { return new Icon [ ] { null , dep , <w> dep Right </w> , null , null } ; } return icons ; }", "target": 1}
{"idx": 1335, "func": "<comment> public static final String <w> BATCH _ SIZE _ CONFIG </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 1336, "func": "<comment> private static final String <w> IS _ INTERNAL _ KEY _ NAME </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 1337, "func": "@ Override public <w> Maven Execution Request </w> <w> set Recursive </w> ( boolean recursive ) { this . recursive = recursive ; return this ; }", "target": 1}
{"idx": 1338, "func": "@ Override public Enumeration < String > <w> get Headers </w> ( String name ) { if ( request = = null ) { throw new <w> Illegal State Exception </w> ( sm . <w> get String </w> ( <str-literal> <str-literal> <str-literal> ) ) ; } if ( Globals . <w> IS _ SECURITY _ ENABLED </w> ) { return <w> Access Controller </w> . <w> do Privileged </w> ( new <w> Get Headers Privileged Action </w> ( name ) ) ; } else { return request . <w> get Headers </w> ( name ) ; } }", "target": 0}
{"idx": 1339, "func": "@ Override public <w> SQL Warning </w> <w> get Warnings </w> ( ) throws <w> SQL Exception </w> { <comment> return null ; }", "target": 1}
{"idx": 1340, "func": "<comment> protected void <w> permanently Remove Poolable </w> ( Object poolable ) { this . size - - ; }", "target": 0}
{"idx": 1341, "func": "<comment> private static final String [ ] <w> PART _ NAME </w> = { <str-literal> <str-literal> <str-literal> , <str-literal> <str-literal> <str-literal> , <str-literal> <str-literal> <str-literal> } ;", "target": 1}
{"idx": 1342, "func": "private static final String <w> JAAS _ USER _ PREFIX </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 1343, "func": "<comment> private static final int <w> EXTRA _ DELAY _ SECS </w> = 5 ;", "target": 0}
{"idx": 1344, "func": "private <w> Simple Date Format </w> formatter ;", "target": 0}
{"idx": 1345, "func": "public static <w> M Bean Notification Info </w> [ ] <w> get Default Notification Info </w> ( ) { String [ ] types = new String [ ] { <w> NOTIFY _ INIT </w> , <w> NOTIFY _ CONNECT </w> , <w> NOTIFY _ ABANDON </w> , <w> SLOW _ QUERY _ NOTIFICATION </w> , <w> FAILED _ QUERY _ NOTIFICATION </w> , <w> SUSPECT _ ABANDONED _ NOTIFICATION </w> , <w> POOL _ EMPTY </w> , <w> SUSPECT _ RETURNED _ NOTIFICATION </w> } ; String name = Notification . class . <w> get Name </w> ( ) ; String description = <str-literal> <str-literal> <str-literal> ; <w> M Bean Notification Info </w> info = new <w> M Bean Notification Info </w> ( types , name , description ) ; return new <w> M Bean Notification Info </w> [ ] { info } ; }", "target": 1}
{"idx": 1346, "func": "@ Override public void <w> get Artifact </w> ( Artifact artifact , List < <w> Artifact Repository </w> > <w> remote Repositories </w> , <w> Transfer Listener </w> <w> download Monitor </w> , boolean force ) throws <w> Transfer Failed Exception </w> , <w> Resource Does Not Exist Exception </w> { <w> Transfer Failed Exception </w> tfe = null ; for ( <w> Artifact Repository </w> repository : <w> remote Repositories </w> ) { try { <w> get Artifact </w> ( artifact , repository , <w> download Monitor </w> , force ) ; if ( artifact . <w> is Resolved </w> ( ) ) { artifact . <w> set Repository </w> ( repository ) ; break ; } } catch ( <w> Resource Does Not Exist Exception </w> e ) { <comment> <comment> logger . debug ( <str-literal> <str-literal> <str-literal> + artifact . <w> get Id </w> ( ) + <str-literal> <str-literal> <str-literal> + repository . <w> get Id </w> ( ) + <str-literal> <str-literal> <str-literal> + repository . <w> get Url </w> ( ) + <str-literal> <str-literal> <str-literal> , e ) ; } catch ( <w> Transfer Failed Exception </w> e ) { tfe = e ; String msg = <str-literal> <str-literal> <str-literal> + artifact . <w> get Id </w> ( ) + <str-literal> <str-literal> <str-literal> + repository . <w> get Id </w> ( ) + <str-literal> <str-literal> <str-literal> + repository . <w> get Url </w> ( ) + <str-literal> <str-literal> <str-literal> + e . <w> get Message </w> ( ) ; if ( logger . <w> is Debug Enabled </w> ( ) ) { logger . warn ( msg , e ) ; } else { logger . warn ( msg ) ; } } } <comment> if ( ! artifact . <w> get File </w> ( ) . exists ( ) ) { if ( tfe ! = null ) { throw tfe ; } else { throw new <w> Resource Does Not Exist Exception </w> ( <str-literal> <str-literal> <str-literal> ) ; } } }", "target": 1}
{"idx": 1347, "func": "<comment> protected static <w> Char Entry </w> [ ] <w> cc Cache </w> = null ;", "target": 0}
{"idx": 1348, "func": "public static final <w> Atomic Boolean </w> <w> IS _ ON _ UPDATE _ CALLED </w> = new <w> Atomic Boolean </w> ( ) ;", "target": 0}
{"idx": 1349, "func": "private List < Artifact > trail ;", "target": 1}
{"idx": 1350, "func": "<comment> public void <w> end Transforming Element </w> ( String uri , String name , String raw ) throws <w> Processing Exception </w> , <w> IO Exception </w> , <w> SAX Exception </w> { if ( this . <w> ignore Events Count </w> = = 0 ) { super . <w> end Element </w> ( uri , name , raw ) ; } }", "target": 1}
{"idx": 1351, "func": "<comment> public static Object <w> get Critiquing Root </w> ( ) { synchronized ( <w> the Designer </w> ( ) ) { return <w> critiquing Root </w> ; } }", "target": 0}
{"idx": 1352, "func": "public byte [ ] <w> get Upper Point </w> ( ) { return <w> upper Point </w> . clone ( ) ; }", "target": 1}
{"idx": 1353, "func": "private static final int <w> MAX _ PRE _ GROW _ SIZE </w> = ( int ) ( Integer . <w> MAX _ VALUE </w> / <w> GROW _ FACTOR </w> ) ;", "target": 0}
{"idx": 1354, "func": "@ Override public <w> Maven Execution Request </w> <w> set Workspace Reader </w> ( <w> Workspace Reader </w> <w> workspace Reader </w> ) { this . <w> workspace Reader </w> = <w> workspace Reader </w> ; return this ; }", "target": 1}
{"idx": 1355, "func": "<comment> public boolean <w> check Position </w> ( int position ) { <comment> <comment> <comment> <comment> Iterator < <w> Position Span </w> > <w> position Span It </w> = <w> position Spans </w> . iterator ( ) ; while ( <w> position Span It </w> . <w> has Next </w> ( ) ) { <w> Position Span </w> <w> pos Span </w> = <w> position Span It </w> . next ( ) ; if ( ( ( position > = <w> pos Span </w> . start ) & & ( position < = <w> pos Span </w> . end ) ) ) { return true ; } } return false ; }", "target": 0}
{"idx": 1356, "func": "<comment> protected final String <w> NUM _ EXECUTORS </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 1357, "func": "@ Override public void <w> get Bounds </w> ( Bounds bounds ) { super . <w> get Bounds </w> ( bounds ) ; bounds . <w> add Horizontal Plane </w> ( <w> planet Model </w> , <w> bottom Lat </w> , <w> bottom Plane </w> ) ; }", "target": 1}
{"idx": 1358, "func": "<comment> private static <w> Compound Critic </w> <w> no Trans 2 </w> = new <w> Compound Critic </w> ( <w> cr No Transitions </w> , <w> cr No Outgoing Transitions </w> ) ;", "target": 0}
{"idx": 1359, "func": "@ Override public <w> Model Building Request </w> <w> set Workspace Model Resolver </w> ( <w> Workspace Model Resolver </w> <w> workspace Resolver </w> ) { request . <w> set Workspace Model Resolver </w> ( <w> workspace Resolver </w> ) ; return this ; }", "target": 1}
{"idx": 1360, "func": "<comment> public double <w> get Longitude </w> ( ) { double lon = this . longitude ; <comment> if ( lon = = Double . <w> NEGATIVE _ INFINITY </w> ) { if ( Math . abs ( x ) < <w> MINIMUM _ RESOLUTION </w> & & Math . abs ( y ) < <w> MINIMUM _ RESOLUTION </w> ) this . longitude = lon = 0.0 ; else this . longitude = lon = Math . <w> atan 2 </w> ( y , x ) ; } return lon ; }", "target": 1}
{"idx": 1361, "func": "private <w> J Text Area </w> instructions = new <w> J Text Area </w> ( ) ;", "target": 1}
{"idx": 1362, "func": "private static final String [ ] <w> ODT _ FILE _ WITH _ METADATA </w>", "target": 1}
{"idx": 1363, "func": "<comment> private long <w> current Time Millis </w> ;", "target": 0}
{"idx": 1364, "func": "public boolean [ ] <w> get Param And Var Const </w> ( ) { if ( <w> variable Names </w> = = null ) <w> code Bug </w> ( ) ; return <w> is Consts </w> ; }", "target": 1}
{"idx": 1365, "func": "private Duration period = Duration . ZERO ;", "target": 0}
{"idx": 1366, "func": "public final long <w> num Terms </w> ;", "target": 0}
{"idx": 1367, "func": "<comment> boolean <w> handle Unsupported Version Exception </w> ( <w> Unsupported Version Exception </w> exception ) { return false ; }", "target": 1}
{"idx": 1368, "func": "private final Set < String > <w> q Names </w> = new <w> Hash Set </w> < > ( ) ;", "target": 0}
{"idx": 1369, "func": "public static final String <w> TASK _ CLASS _ CONFIG </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 1370, "func": "<comment> private <w> Thread Local </w> < <w> Cv Mat </w> > <w> local Src Pts </w> ;", "target": 1}
{"idx": 1371, "func": "public static Room <w> get Room </w> ( boolean create ) { if ( create ) { if ( room = = null ) { synchronized ( <w> room Lock </w> ) { if ( room = = null ) { room = new Room ( ) ; } } } return room ; } else { return room ; } }", "target": 1}
{"idx": 1372, "func": "String <w> IS _ STRICT </w> = <str-literal> <str-literal> <str-literal> ;", "target": 1}
{"idx": 1373, "func": "private void <w> check Edges </w> ( ) { int count = <w> DEFAULT _ EDGES </w> ; if ( vertices ! = null ) { count = vertices . size ( ) + vertices . size ( ) / 2 ; } <w> check Edges </w> ( count ) ; }", "target": 1}
{"idx": 1374, "func": "private static final String <w> WEB _ INF _ TAGS </w> = <str-literal> <str-literal> <str-literal> ;", "target": 1}
{"idx": 1375, "func": "public void <w> set Timer </w> ( Instant timestamp , <w> Time Domain </w> <w> time Domain </w> ) { <w> timer Internals </w> . <w> set Timer </w> ( <w> Timer Data </w> . of ( namespace , timestamp , <w> time Domain </w> ) ) ; }", "target": 0}
{"idx": 1376, "func": "public V <w> set Value </w> ( V value ) { V old = this . value ; this . value = value ; return old ; }", "target": 1}
{"idx": 1377, "func": "public void <w> set Bottom </w> ( final int bottom ) { this . bottom = values [ bottom ] ; }", "target": 0}
{"idx": 1378, "func": "private double [ ] <w> set Subspace Internal </w> ( double . . . p ) { if ( <w> inv Fronto Parallel H </w> = = null ) { return null ; } double [ ] dst = new double [ 8 + 3 ] ; t . put ( p [ 0 ] , p [ 1 ] , p [ 2 ] ) ; <w> cv Rodrigues 2 </w> ( t , R , null ) ; t . put ( p [ 3 ] , p [ 4 ] , p [ 5 ] ) ; <comment> H . put ( R . get ( 0 ) , R . get ( 1 ) , t . get ( 0 ) , R . get ( 3 ) , R . get ( 4 ) , t . get ( 1 ) , R . get ( 6 ) , R . get ( 7 ) , t . get ( 2 ) ) ; <w> cv Mat Mul </w> ( H , <w> inv Fronto Parallel H </w> , H ) ; <w> cv Mat Mul </w> ( <w> surface Transformer </w> . <w> get K 2 </w> ( ) , H , H ) ; <w> cv Mat Mul </w> ( H , <w> surface Transformer </w> . <w> get Inv K 1 </w> ( ) , H ) ; <comment> <w> cv GEMM </w> ( R , t , 1 , null , 0 , t , <w> CV _ GEMM _ A _ T </w> ) ; double scale = 1 / t . get ( 2 ) ; n . put ( 0.0 , 0.0 , 1.0 ) ; <w> cv GEMM </w> ( R , n , scale , null , 0 , n , 0 ) ; <comment> double [ ] src = <w> projector Transformer </w> . <w> get Reference Points 2 </w> ( ) ; <w> Java CV </w> . <w> perspective Transform </w> ( src , dst , <w> projector Transformer </w> . <w> get Inv K 1 </w> ( ) , <w> projector Transformer </w> . <w> get K 2 </w> ( ) , <w> projector Transformer </w> . <w> get R </w> ( ) , <w> projector Transformer </w> . <w> get T </w> ( ) , n , true ) ; dst [ 8 ] = dst [ 0 ] ; dst [ 9 ] = dst [ 2 ] ; dst [ 10 ] = dst [ 4 ] ; <comment> <w> Java CV </w> . <w> perspective Transform </w> ( <w> surface Transformer </w> . <w> get Reference Points 1 </w> ( ) , dst , H ) ; return dst ; }", "target": 1}
{"idx": 1379, "func": "@ Override public <w> Model Building Request </w> <w> set Raw Model </w> ( Model <w> raw Model </w> ) { request . <w> set Raw Model </w> ( <w> raw Model </w> ) ; return this ; }", "target": 1}
{"idx": 1380, "func": "<comment> private <w> String Buffer </w> text = new <w> String Buffer </w> ( 100 ) ;", "target": 1}
{"idx": 1381, "func": "public static final String <w> TASKS _ MAX _ CONFIG </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 1382, "func": "@ Override protected Producer < byte [ ] , byte [ ] > <w> get Kafka Producer </w> ( Properties props ) { return <w> mock Producer </w> ; }", "target": 0}
{"idx": 1383, "func": "@ Override public double <w> get Radius </w> ( ) { <comment> <comment> <comment> final double <w> center Angle </w> = ( <w> right Lon </w> - ( <w> right Lon </w> + <w> left Lon </w> ) * 0.5 ) * <w> cos Middle Lat </w> ; final double <w> bottom Angle </w> = <w> center Point </w> . <w> arc Distance </w> ( LLHC ) ; return Math . max ( <w> center Angle </w> , <w> bottom Angle </w> ) ; }", "target": 0}
{"idx": 1384, "func": "static final int <w> NUM _ PARTITITONS </w> = 4 ;", "target": 0}
{"idx": 1385, "func": "private static final short <w> ACKS _ ALL </w> = - 1 ;", "target": 1}
{"idx": 1386, "func": "private Member primary ;", "target": 0}
{"idx": 1387, "func": "<comment> private int <w> next Timeout Ms </w> ;", "target": 0}
{"idx": 1388, "func": "private <w> Doc Info </w> ( String <w> transformation Name </w> , String overview , <w> Config Def </w> <w> config Def </w> ) { this . <w> transformation Name </w> = <w> transformation Name </w> ; this . overview = overview ; this . <w> config Def </w> = <w> config Def </w> ; }", "target": 0}
{"idx": 1389, "func": "private final int <w> min Bytes </w> ;", "target": 1}
{"idx": 1390, "func": "@ Override public <w> Driver Property Info </w> [ ] <w> get Property Info </w> ( final String url , final Properties info ) { return new <w> Driver Property Info </w> [ 0 ] ; }", "target": 0}
{"idx": 1391, "func": "byte [ ] <w> suffix Bytes </w> = new byte [ 128 ] ;", "target": 0}
{"idx": 1392, "func": "<comment> public String <w> get Display Name </w> ( ) { <comment> <comment> <w> load Model </w> ( ) ; return <w> display Name </w> ; }", "target": 1}
{"idx": 1393, "func": "<comment> public static final <w> Configuration Key </w> <w> KEY _ SMOOTH _ EDGES </w> = Configuration . <w> make Key </w> ( <str-literal> <str-literal> <str-literal> , <str-literal> <str-literal> <str-literal> ) ;", "target": 0}
{"idx": 1394, "func": "@ Override public double <w> get Radius </w> ( ) { double <w> top Angle </w> = <w> center Point </w> . <w> arc Distance </w> ( RHC ) ; double <w> bottom Angle </w> = <w> center Point </w> . <w> arc Distance </w> ( LHC ) ; return Math . max ( <w> top Angle </w> , <w> bottom Angle </w> ) ; }", "target": 1}
{"idx": 1395, "func": "<comment> public static final int <w> ADAPTER _ NOTES </w> = 1 ;", "target": 1}
{"idx": 1396, "func": "private static final char [ ] TARGET = <str-literal> <str-literal> <str-literal> . <w> to Char Array </w> ( ) ;", "target": 1}
{"idx": 1397, "func": "<comment> private boolean <w> clear References Stop Timer Threads </w> = false ;", "target": 0}
{"idx": 1398, "func": "<comment> private static final int [ ] DEC = { 00 , 01 , 02 , 03 , 04 , 05 , 06 , 07 , 8 , 9 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , 10 , 11 , 12 , 13 , 14 , 15 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , 10 , 11 , 12 , 13 , 14 , 15 , } ;", "target": 0}
