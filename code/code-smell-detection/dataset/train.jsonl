{"idx": 0, "func": "<comment> public int <w> serialized Key Size </w> ( ) { return this . <w> serialized Key Size </w> ; }", "target": 0}
{"idx": 1, "func": "public <w> Source Parameters </w> <w> get Parameters </w> ( <w> Source Parameters </w> source ) { if ( source ! = null ) { Iterator iter = source . <w> get Parameter Names </w> ( ) ; Iterator <w> values Iter </w> ; String value , <w> par Name </w> ; while ( iter . <w> has Next </w> ( ) = = true ) { <w> par Name </w> = ( String ) iter . next ( ) ; <w> values Iter </w> = source . <w> get Parameter Values </w> ( <w> par Name </w> ) ; while ( <w> values Iter </w> . <w> has Next </w> ( ) = = true ) { value = ( String ) <w> values Iter </w> . next ( ) ; this . parameters . <w> set Parameter </w> ( <w> par Name </w> , value ) ; } } } return parameters ; }", "target": 1}
{"idx": 2, "func": "public static final String <w> ACCEPTED _ PATHS </w> = <w> ACCEPTED _ PATH 1 </w> + <str-literal>", "target": 1}
{"idx": 3, "func": "private final int days ;", "target": 1}
{"idx": 4, "func": "private static final boolean [ ] <w> IS _ CONTROL </w> = new boolean [ <w> ARRAY _ SIZE </w> ] ;", "target": 1}
{"idx": 5, "func": "public byte [ ] <w> get Type </w> ( ) { if ( type = = null ) parse ( ) ; return type ; }", "target": 1}
{"idx": 6, "func": "<comment> public org . apache . spark . sql . execution . datasources . parquet . test . avro . <w> Parquet Avro Compat </w> . Builder <w> set Strings Column </w> ( java . util . List < java . lang . String > value ) { validate ( fields ( ) [ 0 ] , value ) ; this . <w> strings _ column </w> = value ; <w> field Set Flags </w> ( ) [ 0 ] = true ; return this ; }", "target": 1}
{"idx": 7, "func": "<comment> public static final String <w> SSL _ PROTO _ TL Sv 1 _ 1 </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 8, "func": "public <w> Pane Info Tracker </w> ( <w> Timer Internals </w> <w> timer Internals </w> ) { this . <w> timer Internals </w> = <w> timer Internals </w> ; }", "target": 0}
{"idx": 9, "func": "File <w> TEST _ DIRECTORY </w> ;", "target": 0}
{"idx": 10, "func": "<comment> public String <w> get Public Id </w> ( ) { return this . <w> public Id </w> ; }", "target": 0}
{"idx": 11, "func": "public static final String <w> MIN _ COMPACTION _ LAG _ MS _ CONFIG </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 12, "func": "public String step ( ) { return step ; }", "target": 0}
{"idx": 13, "func": "<comment> long <w> peak Flush Bytes </w> = 0 ;", "target": 1}
{"idx": 14, "func": "<comment> static final byte [ ] <w> CHUNK _ SEPARATOR </w> = { <str-literal> , <str-literal> } ;", "target": 1}
{"idx": 15, "func": "<comment> private final int <w> num Docs </w> ;", "target": 0}
{"idx": 16, "func": "<comment> public java . io . Serializable <w> get Key </w> ( ) { return this . <w> caching Key </w> ; }", "target": 0}
{"idx": 17, "func": "public long <w> get Last Accessed Time </w> ( ) { <w> check Valid </w> ( ) ; return lastaccessedtime ; }", "target": 1}
{"idx": 18, "func": "<comment> @ Override public boolean <w> is Ready </w> ( Node node , long now ) { <comment> <comment> return ! <w> metadata Updater </w> . <w> is Update Due </w> ( now ) & & <w> can Send Request </w> ( node . <w> id String </w> ( ) ) ; }", "target": 0}
{"idx": 19, "func": "public static final int <w> VERSION _ CURRENT </w> = 2 ;", "target": 0}
{"idx": 20, "func": "private int <w> num Hash Functions </w> ;", "target": 0}
{"idx": 21, "func": "<comment> private long <w> num Overwrites </w> = 0 ;", "target": 0}
{"idx": 22, "func": "<comment> <comment> protected void <w> process Max Idle Swaps </w> ( ) { if ( ! <w> get State </w> ( ) . <w> is Available </w> ( ) | | <w> max Idle Swap </w> < 0 ) return ; Session sessions [ ] = <w> find Sessions </w> ( ) ; <comment> if ( <w> max Idle Swap </w> > = 0 ) { for ( int i = 0 ; i < sessions . length ; i + + ) { <w> Standard Session </w> session = ( <w> Standard Session </w> ) sessions [ i ] ; synchronized ( session ) { if ( ! session . <w> is Valid </w> ( ) ) continue ; int <w> time Idle </w> = ( int ) ( session . <w> get Idle Time Internal </w> ( ) / 1000l ) ; if ( <w> time Idle </w> > = <w> max Idle Swap </w> & & <w> time Idle </w> > = <w> min Idle Swap </w> ) { if ( session . <w> access Count </w> ! = null & & session . <w> access Count </w> . get ( ) > 0 ) { <comment> continue ; } if ( log . <w> is Debug Enabled </w> ( ) ) log . debug ( sm . <w> get String </w> ( <str-literal> <str-literal> <str-literal> , session . <w> get Id Internal </w> ( ) , Integer . <w> value Of </w> ( <w> time Idle </w> ) ) ) ; try { <w> swap Out </w> ( session ) ; } catch ( <w> IO Exception </w> e ) { <comment> } } } } } }", "target": 0}
{"idx": 23, "func": "@ Override public boolean [ ] <w> get Subject Unique ID </w> ( ) { return unwrap ( ) . <w> get Subject Unique ID </w> ( ) ; }", "target": 1}
{"idx": 24, "func": "public int <w> get Attributes </w> ( String name ) { return <w> find Attribute Slot </w> ( name , 0 , <w> SLOT _ QUERY </w> ) . <w> get Attributes </w> ( ) ; }", "target": 1}
{"idx": 25, "func": "<comment> public static final int <w> TOKEN _ SHOWBOLDNAMES </w> = 20 ;", "target": 0}
{"idx": 26, "func": "<comment> public String <w> end Serialized XML Recording </w> ( ) throws <w> SAX Exception </w> , <w> Processing Exception </w> { <w> XM Lizable </w> xml = <w> end SAX Recording </w> ( ) ; String text = <w> XML Utils </w> . serialize ( xml , ( Properties ) this . stack . pop ( ) ) ; if ( <w> get Logger </w> ( ) . <w> is Debug Enabled </w> ( ) ) { <w> get Logger </w> ( ) . debug ( <str-literal> <str-literal> <str-literal> + text ) ; } return text ; }", "target": 0}
{"idx": 27, "func": "<comment> <comment> <comment> <comment> <comment> public void <w> return Component Logger </w> ( String role ) { }", "target": 1}
{"idx": 28, "func": "<comment> protected final String <w> DRIVER _ JAVA _ OPTIONS </w> = <str-literal> <str-literal> <str-literal> ;", "target": 1}
{"idx": 29, "func": "@ Test public void <w> return Error RPC </w> ( ) throws Exception { <w> Rpc Result </w> res = <w> send RPC </w> ( <str-literal> <str-literal> <str-literal> ) ; <w> assert True </w> ( res . <w> success Messages </w> . <w> is Empty </w> ( ) ) ; <w> assert Errors Contain </w> ( res . <w> error Messages </w> , Sets . <w> new Hash Set </w> ( <str-literal> <str-literal> <str-literal> ) ) ; }", "target": 1}
{"idx": 30, "func": "private String provides ;", "target": 1}
{"idx": 31, "func": "public static void main ( String [ ] args ) { <w> Live Connect Drv </w> d = new <w> Live Connect Drv </w> ( args ) ; d . start ( ) ; }", "target": 0}
{"idx": 32, "func": "<comment> public void <w> end Document </w> ( ) throws <w> SAX Exception </w> { }", "target": 0}
{"idx": 33, "func": "protected <w> M Bean Parameter Info </w> [ ] <w> get M Bean Parameter Info </w> ( ) { <w> Parameter Info </w> params [ ] = <w> get Signature </w> ( ) ; <w> M Bean Parameter Info </w> parameters [ ] = new <w> M Bean Parameter Info </w> [ params . length ] ; for ( int i = 0 ; i < params . length ; i + + ) parameters [ i ] = params [ i ] . <w> create Parameter Info </w> ( ) ; return parameters ; }", "target": 1}
{"idx": 34, "func": "<comment> public static final int <w> SSL _ INFO _ CLIENT _ S _ DN </w> = 0x0010 ;", "target": 0}
{"idx": 35, "func": "<comment> private <w> Test Rule Setup Teardown Chained </w> <w> parent Chain Call Rule </w> = new <w> Test Rule Setup Teardown Chained </w> ( ) ;", "target": 0}
{"idx": 36, "func": "protected <w> Array List </w> <w> is Cache Point </w> = new <w> Array List </w> ( ) ;", "target": 1}
{"idx": 37, "func": "protected final <w> Connector Task Id </w> id ;", "target": 0}
{"idx": 38, "func": "static public void <w> to SAX </w> ( <w> Service Manager </w> manager Source source , <w> Content Handler </w> handler , Parameters <w> type Parameters </w> , boolean <w> filter Document Event </w> ) throws <w> SAX Exception </w> , <w> IO Exception </w> , <w> Processing Exception </w> { <comment> if ( <w> type Parameters </w> ! = null & & <w> type Parameters </w> . <w> get Parameter </w> ( <w> URL Rewriter </w> . <w> PARAMETER _ MODE </w> , null ) ! = null ) { handler = new <w> URL Rewriter </w> ( <w> type Parameters </w> , handler ) ; } String <w> mime Type Hint </w> = null ; if ( <w> type Parameters </w> ! = null ) { <w> mime Type Hint </w> = <w> type Parameters </w> . <w> get Parameter </w> ( <str-literal> <str-literal> <str-literal> , <w> mime Type Hint </w> ) ; } if ( <w> filter Document Event </w> ) { <w> Include XML Consumer </w> filter = new <w> Include XML Consumer </w> ( handler ) ; <w> to SAX </w> ( manager , source , <w> mime Type Hint </w> , filter ) ; } else { <w> to SAX </w> ( manager , source , <w> mime Type Hint </w> , handler ) ; } }", "target": 1}
{"idx": 39, "func": "@ Override public Producer < byte [ ] , byte [ ] > <w> get Producer </w> ( Map < String , Object > config ) { return new <w> Kafka Producer </w> < > ( config , new <w> Byte Array Serializer </w> ( ) , new <w> Byte Array Serializer </w> ( ) ) ; }", "target": 1}
{"idx": 40, "func": "@ Override public boolean <w> has Offsets </w> ( ) { return <w> field Info </w> . <w> get Index Options </w> ( ) . <w> compare To </w> ( <w> Index Options </w> . <w> DOCS _ AND _ FREQS _ AND _ POSITIONS _ AND _ OFFSETS </w> ) > = 0 ; }", "target": 0}
{"idx": 41, "func": "private final String <w> new Lines </w> ;", "target": 1}
{"idx": 42, "func": "<comment> private int <w> next Timeout Ms </w> ;", "target": 0}
{"idx": 43, "func": "<comment> public void <w> set Limit </w> ( long limit ) { this . limit = limit ; }", "target": 0}
{"idx": 44, "func": "public void <w> To Source </w> ( <w> String Builder </w> sb ) { sb . append ( <str-literal> <str-literal> <str-literal> ) ; Expression . <w> To Source </w> ( sb ) ; sb . append ( <str-literal> <str-literal> <str-literal> ) ; }", "target": 1}
{"idx": 45, "func": "public byte [ ] <w> get Lower Point </w> ( ) { return <w> lower Point </w> . clone ( ) ; }", "target": 1}
{"idx": 46, "func": "<comment> int <w> handle Timeouts </w> ( Collection < Call > calls , String msg ) { int <w> num Timed Out </w> = 0 ; for ( Iterator < Call > iter = calls . iterator ( ) ; iter . <w> has Next </w> ( ) ; ) { Call call = iter . next ( ) ; int <w> remaining Ms </w> = <w> calc Timeout Ms Remaining As Int </w> ( now , call . <w> deadline Ms </w> ) ; if ( <w> remaining Ms </w> < 0 ) { call . fail ( now , new <w> Timeout Exception </w> ( msg ) ) ; iter . remove ( ) ; <w> num Timed Out </w> + + ; } else { <w> next Timeout Ms </w> = Math . min ( <w> next Timeout Ms </w> , <w> remaining Ms </w> ) ; } } return <w> num Timed Out </w> ; }", "target": 0}
{"idx": 47, "func": "public static final int INITIALIZE = 0x000 ;", "target": 1}
{"idx": 48, "func": "<comment> public final long <w> get Last Modified </w> ( ) { <comment> if ( System . <w> current Time Millis </w> ( ) > = <w> next Check Time </w> ) { <comment> this . refresh ( ) ; } return this . <w> last Modified </w> ; }", "target": 1}
{"idx": 49, "func": "<comment> private String <w> prepared Roles </w> = null ;", "target": 0}
{"idx": 50, "func": "<comment> public boolean sleep ( int ms ) { try { THREAD . sleep ( 5000 ) ; } catch ( Exception e ) { p ( <str-literal> <str-literal> <str-literal> + e ) ; return false ; } return true ; }", "target": 0}
{"idx": 51, "func": "public static long <w> Param Mods </w> = Ref | Out ;", "target": 1}
{"idx": 52, "func": "<comment> private final short acks ;", "target": 1}
{"idx": 53, "func": "<comment> public final static String <w> INCLUDE _ NAME _ DEFAULT </w> = <str-literal> <str-literal> <str-literal> ;", "target": 1}
{"idx": 54, "func": "public boolean equals ( Object obj ) { return obj = = this | | obj instanceof <w> Global Namespace </w> ; }", "target": 0}
{"idx": 55, "func": "public int <w> hash Code </w> ( ) { return Objects . hash ( Namespace . GLOBAL ) ; }", "target": 0}
{"idx": 56, "func": "private void <w> get Interfaces </w> ( Set interfaces Class [ ] <w> clazz Interfaces </w> = clazz . <w> get Interfaces </w> ( ) ; for ( int i = 0 ; i < <w> clazz Interfaces </w> . length ; i + + ) { <comment> <comment> <w> get Interfaces </w> ( interfaces , <w> clazz Interfaces </w> [ i ] ) ; } <comment> <comment> Class superclazz = clazz . <w> get Superclass </w> ( ) ; if ( superclazz ! = null ) { <comment> <w> get Interfaces </w> ( interfaces , superclazz ) ; } interfaces . <w> add All </w> ( Arrays . <w> as List </w> ( <w> clazz Interfaces </w> ) ) ; }", "target": 1}
{"idx": 57, "func": "final char [ ] <w> get Char Buffer </w> ( int <w> minimal Size </w> ) { if ( <w> minimal Size </w> > <w> tmp Char Buffer </w> . length ) { int <w> new Size </w> = <w> tmp Char Buffer </w> . length * 2 ; if ( <w> minimal Size </w> > <w> new Size </w> ) { <w> new Size </w> = <w> minimal Size </w> ; } <w> tmp Char Buffer </w> = new char [ <w> new Size </w> ] ; } return <w> tmp Char Buffer </w> ; }", "target": 1}
{"idx": 58, "func": "<comment> public long <w> get Spill Size </w> ( ) { return <w> total Spill Bytes </w> ; }", "target": 0}
{"idx": 59, "func": "public <w> Cv Mat </w> <w> get H </w> ( ) { update ( ) ; return H ; }", "target": 1}
{"idx": 60, "func": "<comment> private Hashtable < Class , Icon > <w> icon Cache </w> = new Hashtable < Class , Icon > ( ) ;", "target": 0}
{"idx": 61, "func": "/ * * Maximum per - dim values protected final byte [ ] <w> max Packed Value </w> ;", "target": 1}
{"idx": 62, "func": "<comment> public String <w> get Java Path </w> ( ) { if ( <w> java Path </w> ! = null ) { return <w> java Path </w> ; } if ( <w> is Tag File </w> ( ) ) { String <w> tag Name </w> = <w> tag Info </w> . <w> get Tag Class Name </w> ( ) ; <w> java Path </w> = <w> tag Name </w> . replace ( <str-literal> , <str-literal> ) + <str-literal> <str-literal> <str-literal> ; } else { <w> java Path </w> = <w> get Servlet Package Name </w> ( ) . replace ( <str-literal> , <str-literal> ) + <str-literal> + <w> get Servlet Class Name </w> ( ) + <str-literal> <str-literal> <str-literal> ; } return <w> java Path </w> ; }", "target": 1}
{"idx": 63, "func": "<comment> public void <w> prefetch On Merge </w> ( <w> Merging State Accessor </w> < ? , W > state ) { <w> State Merging </w> . <w> prefetch Watermarks </w> ( state , <w> element Hold Tag </w> ) ; }", "target": 0}
{"idx": 64, "func": "private static void <w> print Transformation Html </w> ( <w> Print Stream </w> out , <w> Doc Info </w> <w> doc Info </w> ) { out . println ( <str-literal> <str-literal> <str-literal> <str-literal> + <w> doc Info </w> . <w> transformation Name </w> + <str-literal> <str-literal> <str-literal> <str-literal> ) ; out . print ( <str-literal> <str-literal> <str-literal> ) ; out . print ( <w> doc Info </w> . <w> transformation Name </w> ) ; out . println ( <str-literal> <str-literal> <str-literal> ) ; out . println ( <w> doc Info </w> . overview ) ; out . println ( <str-literal> <str-literal> <str-literal> ) ; out . println ( <w> doc Info </w> . <w> config Def </w> . <w> to Html Table </w> ( ) ) ; out . println ( <str-literal> <str-literal> <str-literal> ) ; }", "target": 0}
{"idx": 65, "func": "public <w> Project Builder Configuration </w> <w> set Global Profile Manager </w> ( <w> Profile Manager </w> <w> global Profile Manager </w> ) { this . <w> global Profile Manager </w> = <w> global Profile Manager </w> ; return this ; }", "target": 1}
{"idx": 66, "func": "private void <w> compute Next </w> ( ) { if ( <w> next Element Computed </w> ) { return ; } if ( ! iterator . <w> has Next </w> ( ) ) { return ; } <w> next Element </w> = iterator . next ( ) ; <w> next Element Computed </w> = true ; }", "target": 0}
{"idx": 67, "func": "private final <w> Byte Buffer </w> value ;", "target": 1}
{"idx": 68, "func": "private static final String <w> CLIENT _ MAX _ WINDOW _ BITS </w> = <str-literal> <str-literal> <str-literal> ;", "target": 1}
{"idx": 69, "func": "<comment> public <w> Join Windows </w> before ( final long <w> time Difference Ms </w> ) throws <w> Illegal Argument Exception </w> { return new <w> Join Windows </w> ( <w> time Difference Ms </w> , <w> after Ms </w> ) ; }", "target": 0}
{"idx": 70, "func": "<comment> protected final String ellipsis ;", "target": 0}
{"idx": 71, "func": "<comment> private void <w> handle Disconnections </w> ( List < <w> Client Response </w> > responses , long now ) { for ( Map . Entry < String , <w> Channel State </w> > entry : this . selector . disconnected ( ) . <w> entry Set </w> ( ) ) { String node = entry . <w> get Key </w> ( ) ; log . debug ( <str-literal> <str-literal> <str-literal> , node ) ; <w> process Disconnection </w> ( responses , node , now , entry . <w> get Value </w> ( ) ) ; } <comment> if ( this . selector . disconnected ( ) . size ( ) > 0 ) <w> metadata Updater </w> . <w> request Update </w> ( ) ; }", "target": 0}
{"idx": 72, "func": "public List <w> get Ids Activated By Default </w> ( ) { return <w> default Ids </w> ; }", "target": 0}
{"idx": 73, "func": "<comment> static final int <w> SORTED _ SET _ TABLE </w> = 2 ;", "target": 1}
{"idx": 74, "func": "private static final String <w> ILLEGAL _ REPO _ ID _ CHARS </w> = <w> ILLEGAL _ FS _ CHARS </w> ;", "target": 1}
{"idx": 75, "func": "private final int <w> num Iterations </w> ;", "target": 0}
{"idx": 76, "func": "<comment> private static final Map < String , String > <w> OFFSET _ KEY </w> = Collections . <w> singleton Map </w> ( <str-literal> <str-literal> <str-literal> , <str-literal> <str-literal> <str-literal> ) ;", "target": 1}
{"idx": 77, "func": "private static final Set < <w> Topic Partition </w> > <w> CONSUMER _ ASSIGNMENT </w> = new <w> Hash Set </w> < > ( Arrays . <w> as List </w> ( <w> TP 0 </w>", "target": 1}
{"idx": 78, "func": "private double [ ] peak ;", "target": 1}
{"idx": 79, "func": "<comment> private void <w> get Packages </w> ( Configuration conf ) { Configuration [ ] children = conf . <w> get Children </w> ( <str-literal> <str-literal> <str-literal> ) ; int i = children . length ; while ( i - - > 0 ) { String <w> package Name </w> = children [ i ] . <w> get Attribute </w> ( <str-literal> <str-literal> <str-literal> , null ) ; String prefix = children [ i ] . <w> get Attribute </w> ( <str-literal> <str-literal> <str-literal> , null ) ; if ( <w> package Name </w> ! = null & & prefix ! = null ) { this . library . <w> add Functions </w> ( new <w> Package Functions </w> ( <w> package Name </w> , prefix ) ) ; } } }", "target": 1}
{"idx": 80, "func": "abstract Builder < K , V > <w> set Key Translation Function </w> ( <w> Simple Function </w> < ? , K > function ) ;", "target": 1}
{"idx": 81, "func": "private Map holder = Collections . <w> synchronized Map </w> ( new <w> Hash Map </w> ( ) ) ;", "target": 1}
{"idx": 82, "func": "<comment> protected boolean <w> reload Scripts </w> ;", "target": 0}
{"idx": 83, "func": "public static final String <w> COMMON _ ALIAS </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 84, "func": "@ Override public Collection <w> get Profile Packages </w> ( ) { <w> load Model </w> ( ) ; return <w> profile Packages </w> ; }", "target": 1}
{"idx": 85, "func": "protected <w> CL Image 2 d </w> [ ] <w> projector Image CL </w> = null ;", "target": 1}
{"idx": 86, "func": "<comment> protected Long expires = null ;", "target": 1}
{"idx": 87, "func": "public static long Params = 0x0020000 ;", "target": 1}
{"idx": 88, "func": "<comment> public int <w> sample Rate </w> ;", "target": 0}
{"idx": 89, "func": "<comment> public static double <w> to Degrees </w> ( final double radians ) { return radians * <w> TO _ DEGREES </w> ; }", "target": 0}
{"idx": 90, "func": "private Map objectmodel ;", "target": 1}
{"idx": 91, "func": "<comment> public void validate ( ) { for ( Field field : schema . fields ( ) ) { Schema <w> field Schema </w> = field . schema ( ) ; Object value = values [ field . index ( ) ] ; if ( value = = null & & ( <w> field Schema </w> . <w> is Optional </w> ( ) | | <w> field Schema </w> . <w> default Value </w> ( ) ! = null ) ) continue ; <w> Connect Schema </w> . <w> validate Value </w> ( field . name ( ) , <w> field Schema </w> , value ) ; } }", "target": 0}
{"idx": 92, "func": "public Integer validate ( Object item ) { if ( item instanceof Integer ) return ( Integer ) item ; throw new <w> Schema Exception </w> ( item + <str-literal> <str-literal> <str-literal> ) ; }", "target": 0}
{"idx": 93, "func": "<comment> protected long <w> term Instances </w> ;", "target": 1}
{"idx": 94, "func": "public long <w> get Sum Total Term Freq </w> ( ) { return <w> sum Total Term Freq </w> ; }", "target": 0}
{"idx": 95, "func": "public static final String <w> IS _ MANDATORY </w> = <str-literal> <str-literal> <str-literal> ;", "target": 1}
{"idx": 96, "func": "<comment> W <w> write State Address </w> ( W window ) ;", "target": 0}
{"idx": 97, "func": "public String [ ] <w> get Prompts </w> ( Context cx ) { if ( <w> Scriptable Object </w> . <w> has Property </w> ( this , <str-literal> <str-literal> <str-literal> ) ) { Object <w> prompts JS </w> = <w> Scriptable Object </w> . <w> get Property </w> ( this , <str-literal> <str-literal> <str-literal> ) ; if ( <w> prompts JS </w> instanceof Scriptable ) { Scriptable s = ( Scriptable ) <w> prompts JS </w> ; if ( <w> Scriptable Object </w> . <w> has Property </w> ( s , 0 ) & & <w> Scriptable Object </w> . <w> has Property </w> ( s , 1 ) ) { Object <w> elem 0 </w> = <w> Scriptable Object </w> . <w> get Property </w> ( s , 0 ) ; if ( <w> elem 0 </w> instanceof Function ) { <w> elem 0 </w> = ( ( Function ) <w> elem 0 </w> ) . call ( cx , this , s , new Object [ 0 ] ) ; } prompts [ 0 ] = Context . <w> to String </w> ( <w> elem 0 </w> ) ; Object <w> elem 1 </w> = <w> Scriptable Object </w> . <w> get Property </w> ( s , 1 ) ; if ( <w> elem 1 </w> instanceof Function ) { <w> elem 1 </w> = ( ( Function ) <w> elem 1 </w> ) . call ( cx , this , s , new Object [ 0 ] ) ; } prompts [ 1 ] = Context . <w> to String </w> ( <w> elem 1 </w> ) ; } } } return prompts ; }", "target": 1}
{"idx": 98, "func": "protected static final <w> String Manager </w> sm = <w> String Manager </w> . <w> get Manager </w> ( <w> Order Interceptor </w> . class ) ;", "target": 0}
{"idx": 99, "func": "<comment> public static final String <w> CLIENT _ ID _ CONFIG </w> = <w> Common Client Configs </w> . <w> CLIENT _ ID _ CONFIG </w> ;", "target": 0}
{"idx": 100, "func": "public int <w> get Max Inactive Interval </w> ( ) { <w> check Valid </w> ( ) ; return maxinactiveinterval ; }", "target": 1}
{"idx": 101, "func": "public List < String > <w> get Dependency Trail </w> ( ) throws <w> Over Constrained Version Exception </w> { List < Artifact > trial = <w> get Trail </w> ( ) ; List < String > ret = new <w> Array List </w> < > ( trial . size ( ) ) ; for ( Artifact artifact : trial ) { ret . add ( artifact . <w> get Id </w> ( ) ) ; } return ret ; }", "target": 1}
{"idx": 102, "func": "public static final int <w> DEFAULT _ ITERATIONS </w> = 1 ;", "target": 0}
{"idx": 103, "func": "<comment> private static int <w> no Docs </w> ;", "target": 0}
{"idx": 104, "func": "<comment> private Map < Thread , T > <w> hard Refs </w> = new <w> Weak Hash Map </w> < > ( ) ;", "target": 0}
{"idx": 105, "func": "private <w> Accumulated Metric Result </w> ( <w> Metric Name </w> name , String step , T attempted , T committed , boolean <w> is Committed Supported </w> ) { this . name = name ; this . step = step ; this . attempted = attempted ; this . committed = committed ; this . <w> is Committed Supported </w> = <w> is Committed Supported </w> ; }", "target": 0}
{"idx": 106, "func": "int days = 0 ;", "target": 1}
{"idx": 107, "func": "private <w> Prefix Aware Token Filter </w> suffix ;", "target": 1}
{"idx": 108, "func": "<comment> public static final String <w> CLIENT _ ID _ CONFIG </w> = <w> Common Client Configs </w> . <w> CLIENT _ ID _ CONFIG </w> ;", "target": 0}
{"idx": 109, "func": "<comment> private static final int <w> ALL _ TAGS </w> = 3 ;", "target": 1}
{"idx": 110, "func": "<comment> public synchronized List <w> get Targets </w> ( ) { return Collections . <w> unmodifiable List </w> ( targets ) ; }", "target": 0}
{"idx": 111, "func": "* * * Check for calls which have timed out . * Timed out calls will be removed and failed . * The remaining milliseconds until the next timeout will be updated . * * @ param calls The collection of calls . * * @ return The number of calls which were timed out . * / int <w> handle Timeouts </w> ( Collection < Call > calls , String msg ) { int <w> num Timed Out </w> = 0 ; for ( Iterator < Call > iter = calls . iterator ( ) ; iter . <w> has Next </w> ( ) ; ) { Call call = iter . next ( ) ; int <w> remaining Ms </w> = <w> calc Timeout Ms Remaining As Int </w> ( now , call . <w> deadline Ms </w> ) ; if ( <w> remaining Ms </w> < 0 ) { call . fail ( now , new <w> Timeout Exception </w> ( msg ) ) ; iter . remove ( ) ; <w> num Timed Out </w> + + ; } else { <w> next Timeout Ms </w> = Math . min ( <w> next Timeout Ms </w> , <w> remaining Ms </w> ) ; } } return <w> num Timed Out </w> ; }", "target": 0}
{"idx": 112, "func": "<comment> private static final char [ ] <w> ZZ _ CMAP </w> = <w> zz Unpack C Map </w> ( <w> ZZ _ CMAP _ PACKED </w> ) ;", "target": 0}
{"idx": 113, "func": "<comment> public java . util . Map < java . lang . String , java . util . List < org . apache . spark . sql . execution . datasources . parquet . test . avro . Nested > > <w> get Complex Column </w> ( ) { return <w> complex _ column </w> ; }", "target": 0}
{"idx": 114, "func": "private final static int <w> NUM _ TOPIC _ PARTITIONS </w> = 2 ;", "target": 0}
{"idx": 115, "func": "<comment> public int <w> is Valid </w> ( ) { if ( System . <w> current Time Millis </w> ( ) < = expiry ) { <comment> return <w> Source Validity </w> . VALID ; } <comment> expiry = System . <w> current Time Millis </w> ( ) + delay ; if ( uris = = null | | ! <w> is Closed </w> ) { <comment> return <w> Source Validity </w> . INVALID ; } else { <comment> return <w> compute Status </w> ( null ) ; } }", "target": 1}
{"idx": 116, "func": "protected final <w> Bit Set </w> <w> is Internal Edges </w> ;", "target": 1}
{"idx": 117, "func": "private static final String [ ] <w> PDF _ ZIP _ FILE </w>", "target": 1}
{"idx": 118, "func": "<w> Byte Pointer </w> [ ] <w> image _ ptr </w> ;", "target": 1}
{"idx": 119, "func": "@ Override public boolean <w> is Async </w> ( ) { return <w> async State Machine </w> . <w> is Async </w> ( ) ; }", "target": 0}
{"idx": 120, "func": "<comment> private final Set < <w> Tuple Tag </w> < ? > > <w> output Tags </w> ;", "target": 0}
{"idx": 121, "func": "private static final int <w> DEFAULT _ MAX _ NUM _ TERMS </w> = 50 ;", "target": 0}
{"idx": 122, "func": "@ Override protected String <w> get Instructions </w> ( int index ) { return null ; }", "target": 1}
{"idx": 123, "func": "private void <w> update Peak Memory Used </w> ( ) { long mem = <w> get Memory Usage </w> ( ) ; if ( mem > <w> peak Memory Used Bytes </w> ) { <w> peak Memory Used Bytes </w> = mem ; } }", "target": 0}
{"idx": 124, "func": "<comment> public static final int <w> TOKEN _ SHOWTYPES </w> = 17 ;", "target": 0}
{"idx": 125, "func": "private final double bytes ;", "target": 1}
{"idx": 126, "func": "<comment> public final byte [ ] metadata ;", "target": 1}
{"idx": 127, "func": "protected <w> Cv Mat </w> [ ] <w> H 2 </w> = null ;", "target": 1}
{"idx": 128, "func": "<comment> void <w> ensure Window Exists </w> ( W window ) ;", "target": 1}
{"idx": 129, "func": "<comment> protected Cookie [ ] cookies = null ;", "target": 0}
{"idx": 130, "func": "public <w> Bounded Window </w> window ( ) { throw new <w> Unsupported Operation Exception </w> ( <str-literal> <str-literal> <str-literal> ) ; }", "target": 0}
{"idx": 131, "func": "@ Override public Set < String > <w> set Init Parameters </w> ( Map < String , String > <w> init Parameters </w> ) { Set < String > conflicts = new <w> Hash Set </w> < > ( ) ; for ( Map . Entry < String , String > entry : <w> init Parameters </w> . <w> entry Set </w> ( ) ) { if ( entry . <w> get Key </w> ( ) = = null | | entry . <w> get Value </w> ( ) = = null ) { throw new <w> Illegal Argument Exception </w> ( sm . <w> get String </w> ( <str-literal> <str-literal> <str-literal> , entry . <w> get Key </w> ( ) , entry . <w> get Value </w> ( ) ) ) ; } if ( <w> get Init Parameter </w> ( entry . <w> get Key </w> ( ) ) ! = null ) { conflicts . add ( entry . <w> get Key </w> ( ) ) ; } } <comment> <comment> for ( Map . Entry < String , String > entry : <w> init Parameters </w> . <w> entry Set </w> ( ) ) { <w> set Init Parameter </w> ( entry . <w> get Key </w> ( ) , entry . <w> get Value </w> ( ) ) ; } return conflicts ; }", "target": 1}
{"idx": 132, "func": "<comment> @ Override public boolean ready ( ) throws <w> IO Exception </w> { return false ; }", "target": 1}
{"idx": 133, "func": "<comment> protected final <w> Atomic Long </w> <w> current Size </w> = new <w> Atomic Long </w> ( 0 ) ;", "target": 0}
{"idx": 134, "func": "@ Override public Enumeration < Locale > <w> get Locales </w> ( ) { if ( request = = null ) { throw new <w> Illegal State Exception </w> ( sm . <w> get String </w> ( <str-literal> <str-literal> <str-literal> ) ) ; } if ( Globals . <w> IS _ SECURITY _ ENABLED </w> ) { return <w> Access Controller </w> . <w> do Privileged </w> ( new <w> Get Locales Privileged Action </w> ( ) ) ; } else { return request . <w> get Locales </w> ( ) ; } }", "target": 0}
{"idx": 135, "func": "private void <w> get Downstream Projects </w> ( String <w> project Id </w> { for ( String id : sorter . <w> get Dependents </w> ( <w> project Id </w> ) ) { if ( <w> project Ids </w> . add ( id ) & & transitive ) { <w> get Downstream Projects </w> ( id , <w> project Ids </w> , transitive ) ; } } }", "target": 1}
{"idx": 136, "func": "@ Override public <w> Maven Execution Request </w> <w> set Project Present </w> ( boolean <w> project Present </w> ) { <w> is Project Present </w> = <w> project Present </w> ; return this ; }", "target": 1}
{"idx": 137, "func": "public K <w> set Key </w> ( K key ) { K old = this . key ; this . key = key ; return old ; }", "target": 1}
{"idx": 138, "func": "abstract Read < K , V > build ( ) ;", "target": 0}
{"idx": 139, "func": "@ Override public <w> Model Building Request </w> <w> set Build Start Time </w> ( Date <w> build Start Time </w> ) { this . <w> build Start Time </w> = <w> build Start Time </w> ; return this ; }", "target": 1}
{"idx": 140, "func": "final byte [ ] <w> lower Point </w> ;", "target": 1}
{"idx": 141, "func": "public <w> Project Builder Configuration </w> <w> set Local Repository </w> ( <w> Artifact Repository </w> <w> local Repository </w> ) { this . <w> local Repository </w> = <w> local Repository </w> ; return this ; }", "target": 1}
{"idx": 142, "func": "<comment> public <w> M Bean Notification Info </w> [ ] <w> get Notification Info </w> ( ) { return notifier . <w> get Notification Info </w> ( ) ; }", "target": 0}
{"idx": 143, "func": "private static Icon trans = <w> Resource Loader Wrapper </w> . <w> lookup Icon Resource </w> ( <str-literal> <str-literal> <str-literal> ) ;", "target": 0}
{"idx": 144, "func": "protected Map <w> get Current Object Model </w> ( ) { final Environment env = <w> Environment Helper </w> . <w> get Current Environment </w> ( ) ; if ( env = = null ) { throw new <w> Illegal State Exception </w> ( <str-literal> <str-literal> <str-literal> ) ; } return env . <w> get Object Model </w> ( ) ; }", "target": 0}
{"idx": 145, "func": "int hours = 0 ;", "target": 1}
{"idx": 146, "func": "<comment> public static native void free ( <w> Byte Buffer </w> buf ) ;", "target": 0}
{"idx": 147, "func": "private final byte [ ] HEADER = <w> HTTP _ AUTH </w> . <w> get Bytes </w> ( <w> Standard Charsets </w> . <w> ISO _ 8859 _ 1 </w> ) ;", "target": 1}
{"idx": 148, "func": "public final Map <w> get Object Model </w> ( ) { return this . objectmodel ; }", "target": 1}
{"idx": 149, "func": "<comment> public long <w> get Peak Memory Used Bytes </w> ( ) { <w> update Peak Memory Used </w> ( ) ; return <w> peak Memory Used Bytes </w> ; }", "target": 1}
{"idx": 150, "func": "public Map <w> get Object Model </w> ( ) { return <w> object Model </w> ; }", "target": 1}
{"idx": 151, "func": "<comment> @ Override public void disconnect ( String <w> node Id </w> ) { selector . close ( <w> node Id </w> ) ; List < <w> Api Keys </w> > <w> request Types </w> = new <w> Array List </w> < > ( ) ; long now = time . milliseconds ( ) ; for ( <w> In Flight Request </w> request : <w> in Flight Requests </w> . <w> clear All </w> ( <w> node Id </w> ) ) { if ( request . <w> is Internal Request </w> ) { if ( request . header . <w> api Key </w> ( ) = = <w> Api Keys </w> . METADATA . id ) { <w> metadata Updater </w> . <w> handle Disconnection </w> ( request . destination ) ; } } else { <w> request Types </w> . add ( <w> Api Keys </w> . <w> for Id </w> ( request . header . <w> api Key </w> ( ) ) ) ; <w> aborted Sends </w> . add ( new <w> Client Response </w> ( request . header , request . callback , request . destination , request . <w> created Time Ms </w> , now , true , null , null ) ) ; } } <w> connection States </w> . disconnected ( <w> node Id </w> , now ) ; if ( log . <w> is Debug Enabled </w> ( ) ) { log . debug ( <str-literal> <str-literal> <str-literal> , <w> node Id </w> , Utils . join ( <w> request Types </w> , <str-literal> <str-literal> <str-literal> ) ) ; } }", "target": 0}
{"idx": 152, "func": "@ Override public <w> Maven Execution Request </w> <w> set Logging Level </w> ( int <w> logging Level </w> ) { this . <w> logging Level </w> = <w> logging Level </w> ; return this ; }", "target": 1}
{"idx": 153, "func": "public <w> Project Building Request </w> <w> set User Properties </w> ( Properties <w> user Properties </w> ) { if ( <w> user Properties </w> ! = null ) { this . <w> user Properties </w> = new Properties ( ) ; this . <w> user Properties </w> . <w> put All </w> ( <w> user Properties </w> ) ; } else { this . <w> user Properties </w> . clear ( ) ; } return this ; }", "target": 1}
{"idx": 154, "func": "private <w> Subscription State </w> subscriptions = new <w> Subscription State </w> ( <w> Offset Reset Strategy </w> . EARLIEST ) ;", "target": 1}
{"idx": 155, "func": "<comment> @ Override public void rename ( String <w> old Name </w> , String <w> new Name </w> ) throws <w> Naming Exception </w> { rename ( new <w> Composite Name </w> ( <w> old Name </w> ) , new <w> Composite Name </w> ( <w> new Name </w> ) ) ; }", "target": 0}
{"idx": 156, "func": "public <w> Delay Fn </w> ( Duration delay ) { this . delay = delay ; }", "target": 0}
{"idx": 157, "func": "private static int <w> DEFAULT _ MAX _ STEPS </w> = 3 ;", "target": 0}
{"idx": 158, "func": "<comment> private final Map < Object , <w> Leaf Cache </w> > cache ;", "target": 0}
{"idx": 159, "func": "<comment> private String [ ] name ;", "target": 1}
{"idx": 160, "func": "private static final int <w> SHORT _ SESSION _ TIMEOUT _ MINS </w> = 1 ;", "target": 0}
{"idx": 161, "func": "<comment> List < <w> Metadata Graph Node </w> > <w> in Nodes </w> ;", "target": 0}
{"idx": 162, "func": "<comment> public Object <w> setup Component </w> ( Object component , boolean <w> initialize And Start </w> ) throws Exception { return <w> setup Component </w> ( component , this . logger , this . context , this . <w> service Manager </w> , this . configuration , <w> initialize And Start </w> ) ; }", "target": 0}
{"idx": 163, "func": "public string <w> is Dependency Resolution Required </w> ( )", "target": 1}
{"idx": 164, "func": "<comment> public Enumeration <w> get Headers </w> ( String name ) { return this . req . <w> get Headers </w> ( name ) ; }", "target": 0}
{"idx": 165, "func": "public <w> Config Def </w> config ( ) { return new <w> Config Def </w> ( ) ; }", "target": 0}
{"idx": 166, "func": "public void get ( String <w> resource Name </w> throws <w> Transfer Failed Exception </w> , <w> Resource Does Not Exist Exception </w> , <w> Authorization Exception </w> { <w> add Transfer </w> ( <str-literal> <str-literal> <str-literal> + <w> resource Name </w> ) ; <w> inside Get </w> = true ; super . get ( <w> resource Name </w> , destination ) ; <w> inside Get </w> = false ; }", "target": 1}
{"idx": 167, "func": "private static void <w> define Elem </w> ( Context cx , Scriptable target , long index , Object value ) { if ( index > Integer . <w> MAX _ VALUE </w> ) { String id = Long . <w> to String </w> ( index ) ; target . put ( id , target , value ) ; } else { target . put ( ( int ) index , target , value ) ; } }", "target": 0}
{"idx": 168, "func": "<comment> static char [ ] <w> hex Char </w> = { <str-literal> , <str-literal> , <str-literal> , <str-literal> , <str-literal> , <str-literal> , <str-literal> , <str-literal> , <str-literal> , <str-literal> , <str-literal> , <str-literal> , <str-literal> , <str-literal> , <str-literal> , <str-literal> } ;", "target": 1}
{"idx": 169, "func": "private Cache ( Cache parent ) { cache = new String [ <w> cache Size </w> ] ; formatter = new <w> Simple Date Format </w> ( format , Locale . US ) ; formatter . <w> set Time Zone </w> ( <w> Time Zone </w> . <w> get Default </w> ( ) ) ; this . parent = parent ; }", "target": 0}
{"idx": 170, "func": "<comment> public static boolean <w> VERBOSE _ REF _ COUNTS </w> = false ;", "target": 0}
{"idx": 171, "func": "byte [ ] <w> stat Bytes </w> = new byte [ 64 ] ;", "target": 0}
{"idx": 172, "func": "protected Project <w> get Project </w> ( ) { if ( project ! = null ) return project ; <comment> project = new Project ( ) ; logger = new <w> Jasper Ant Logger </w> ( ) ; logger . <w> set Output Print Stream </w> ( System . out ) ; logger . <w> set Error Print Stream </w> ( System . err ) ; logger . <w> set Message Output Level </w> ( Project . <w> MSG _ INFO </w> ) ; project . <w> add Build Listener </w> ( logger ) ; if ( System . <w> get Property </w> ( Constants . <w> CATALINA _ HOME _ PROP </w> ) ! = null ) { project . <w> set Basedir </w> ( System . <w> get Property </w> ( Constants . <w> CATALINA _ HOME _ PROP </w> ) ) ; } if ( options . <w> get Compiler </w> ( ) ! = null ) { if ( log . <w> is Debug Enabled </w> ( ) ) log . debug ( <str-literal> <str-literal> <str-literal> + options . <w> get Compiler </w> ( ) ) ; project . <w> set Property </w> ( <str-literal> <str-literal> <str-literal> , options . <w> get Compiler </w> ( ) ) ; } project . init ( ) ; return project ; }", "target": 1}
{"idx": 173, "func": "<w> Java Adapter Signature </w> ( Class < ? > <w> super Class </w> , Class < ? > [ ] interfaces , <w> Obj To Int Map </w> names ) { this . <w> super Class </w> = <w> super Class </w> ; this . interfaces = interfaces ; this . names = names ; }", "target": 0}
{"idx": 174, "func": "public String <w> get Authorization ID </w> ( ) { if ( ! complete ) throw new <w> Illegal State Exception </w> ( <str-literal> <str-literal> <str-literal> ) ; return <w> authorization Id </w> ; }", "target": 0}
{"idx": 175, "func": "<comment> private final Sensor errors ;", "target": 1}
{"idx": 176, "func": "<comment> public <w> Map Iterator </w> <w> destructive Iterator </w> ( ) { return new <w> Map Iterator </w> ( <w> num Values </w> , loc , true ) ; }", "target": 0}
{"idx": 177, "func": "private static final String <w> VAR _ ALIAS </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 178, "func": "abstract Builder < K , V > <w> set Input Format Class </w> ( <w> Type Descriptor </w> < ? > <w> input Format Class </w> ) ;", "target": 1}
{"idx": 179, "func": "final Set < String > <w> deleted Topic </w> = new <w> Hash Set </w> < > ( ) ;", "target": 1}
{"idx": 180, "func": "<comment> public <w> Grouping Search </w> <w> set Caching In MB </w> ( double <w> max Cache RAMMB </w> , boolean <w> cache Scores </w> ) { this . <w> max Cache RAMMB </w> = <w> max Cache RAMMB </w> ; this . <w> max Docs To Cache </w> = null ; this . <w> cache Scores </w> = <w> cache Scores </w> ; return this ; }", "target": 0}
{"idx": 181, "func": "<comment> private long <w> num Flushes </w> = 0 ;", "target": 0}
{"idx": 182, "func": "<comment> private Point location ;", "target": 0}
{"idx": 183, "func": "byte [ ] <w> point Bytes </w> = new byte [ <w> bytes Per Dim </w> ] ;", "target": 0}
{"idx": 184, "func": "<comment> public void <w> set Bean Value </w> ( String <w> bean Name </w> , Object value ) throws <w> Property Not Writable Exception </w> { throw new <w> Property Not Writable Exception </w> ( ) ; }", "target": 1}
{"idx": 185, "func": "public static boolean <w> VERBOSE _ FILES </w> = true ;", "target": 0}
{"idx": 186, "func": "<comment> public byte [ ] <w> get Id </w> ( ) { return id . clone ( ) ; }", "target": 1}
{"idx": 187, "func": "<comment> protected final <w> Hash Map </w> < String , <w> Permission Collection </w> > <w> loader PC </w> = new <w> Hash Map </w> < > ( ) ;", "target": 0}
{"idx": 188, "func": "<comment> protected final byte [ ] <w> min Packed Value </w> ;", "target": 1}
{"idx": 189, "func": "private final boolean <w> close Sub Readers </w> ;", "target": 0}
{"idx": 190, "func": "<comment> private <w> Hash Map </w> < String , Method > fnmap = null ;", "target": 0}
{"idx": 191, "func": "public Object <w> to Object </w> ( ) { assert exists | | 0 = = value ; return exists ? value : null ; }", "target": 0}
{"idx": 192, "func": "@ Override public <w> Maven Execution Request </w> <w> set Proxies </w> ( List < Proxy > proxies ) { if ( proxies ! = null ) { this . proxies = new <w> Array List </w> < > ( proxies ) ; } else { this . proxies = null ; } return this ; }", "target": 1}
{"idx": 193, "func": "<comment> static final <w> Bytes Ref </w> <w> NUM _ ATTS </w> = new <w> Bytes Ref </w> ( <str-literal> <str-literal> <str-literal> ) ;", "target": 0}
{"idx": 194, "func": "private String <w> get Source </w> ( ) { if ( source = = null & & <w> source Model </w> ! = null ) { source = <w> Model Problem Utils </w> . <w> to Path </w> ( <w> source Model </w> ) ; } return source ; }", "target": 0}
{"idx": 195, "func": "<comment> public Cluster <w> with Partitions </w> ( Map < <w> Topic Partition </w> , <w> Partition Info </w> > partitions ) { Map < <w> Topic Partition </w> , <w> Partition Info </w> > <w> combined Partitions </w> = new <w> Hash Map </w> < > ( this . <w> partitions By Topic Partition </w> ) ; <w> combined Partitions </w> . <w> put All </w> ( partitions ) ; return new Cluster ( <w> cluster Resource </w> . <w> cluster Id </w> ( ) , this . nodes , <w> combined Partitions </w> . values ( ) , new <w> Hash Set </w> < > ( this . <w> unauthorized Topics </w> ) , new <w> Hash Set </w> < > ( this . <w> internal Topics </w> ) , this . controller ) ; }", "target": 0}
{"idx": 196, "func": "public int <w> compare Bottom </w> ( int doc ) throws <w> IO Exception </w> { return Integer . compare ( bottom , <w> get Value For Doc </w> ( doc ) ) ; }", "target": 0}
{"idx": 197, "func": "private static final String <w> TRANSFORMS _ DOC </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 198, "func": "private int <w> pos Pending </w> ;", "target": 1}
{"idx": 199, "func": "<comment> static final String VISIBILITYCHARS = <str-literal> <str-literal> <str-literal> ;", "target": 1}
{"idx": 200, "func": "public <w> Project Building Request </w> <w> set Resolve Dependencies </w> ( boolean <w> resolve Dependencies </w> ) { this . <w> resolve Dependencies </w> = <w> resolve Dependencies </w> ; return this ; }", "target": 1}
{"idx": 201, "func": "@ Override public <w> Toolchains Building Request </w> <w> set Global Toolchains Source </w> ( Source <w> global Toolchains Source </w> ) { this . <w> global Toolchains Source </w> = <w> global Toolchains Source </w> ; return this ; }", "target": 1}
{"idx": 202, "func": "private Map <w> object Model </w> ;", "target": 1}
{"idx": 203, "func": "public <w> Dirty State </w> <w> get Dirty </w> ( ) { return dirty ; }", "target": 0}
{"idx": 204, "func": "public static final char <w> ALTERNATE _ USER _ SETTINGS </w> = <str-literal> ;", "target": 1}
{"idx": 205, "func": "private static final long <w> RECONFIGURE _ CONNECTOR _ TASKS _ BACKOFF _ MS </w> = 250 ;", "target": 0}
{"idx": 206, "func": "<comment> public Map <w> get Object Model </w> ( ) { return this . <w> object Model </w> ; }", "target": 1}
{"idx": 207, "func": "<comment> public Object [ ] <w> get Value </w> ( ) { return Model . <w> get Data Types Helper </w> ( ) . <w> get Value Specification Values </w> ( <w> get Expression </w> ( ) ) ; }", "target": 1}
{"idx": 208, "func": "@ Override public String <w> get Class Name </w> ( ) { return <str-literal> <str-literal> <str-literal> ; }", "target": 0}
{"idx": 209, "func": "public String <w> string Key </w> ( ) { return <w> GLOBAL _ STRING </w> ; }", "target": 0}
{"idx": 210, "func": "<comment> public void <w> pool Closed </w> ( <w> Connection Pool </w> pool ) { <comment> }", "target": 0}
{"idx": 211, "func": "<comment> protected Map <w> object Model </w> ;", "target": 0}
{"idx": 212, "func": "public int <w> get Rows </w> ( ) { return rows ; }", "target": 1}
{"idx": 213, "func": "<comment> boolean <w> is Leaf Block </w> ;", "target": 0}
{"idx": 214, "func": "<comment> public double <w> get Longitude </w> ( ) { double lon = this . longitude ; <comment> if ( lon = = Double . <w> NEGATIVE _ INFINITY </w> ) { if ( Math . abs ( x ) < <w> MINIMUM _ RESOLUTION </w> & & Math . abs ( y ) < <w> MINIMUM _ RESOLUTION </w> ) this . longitude = lon = 0.0 ; else this . longitude = lon = Math . <w> atan 2 </w> ( y , x ) ; } return lon ; }", "target": 1}
{"idx": 215, "func": "private final <w> Fixed Bit Set </w> result ;", "target": 1}
{"idx": 216, "func": "private int <w> syntax Error Count </w> ;", "target": 0}
{"idx": 217, "func": "private void <w> validate Raw Repositories </w> ( <w> Model Problem Collector </w> problems <w> Model Building Request </w> request ) { Map < String , Repository > index = new <w> Hash Map </w> < > ( ) ; for ( Repository repository : repositories ) { <w> validate String Not Empty </w> ( prefix + <str-literal> <str-literal> <str-literal> , problems , Severity . ERROR , Version . <w> V 20 </w> , repository . <w> get Id </w> ( ) , repository ) ; <w> validate String Not Empty </w> ( prefix + <str-literal> <str-literal> <str-literal> + repository . <w> get Id </w> ( ) + <str-literal> <str-literal> <str-literal> , problems , Severity . ERROR , Version . <w> V 20 </w> , repository . <w> get Url </w> ( ) , repository ) ; String key = repository . <w> get Id </w> ( ) ; Repository existing = index . get ( key ) ; if ( existing ! = null ) { Severity <w> err On 30 </w> = <w> get Severity </w> ( request , <w> Model Building Request </w> . <w> VALIDATION _ LEVEL _ MAVEN _ 3 _ 0 </w> ) ; <w> add Violation </w> ( problems , <w> err On 30 </w> , Version . <w> V 20 </w> , prefix + <str-literal> <str-literal> <str-literal> , null , <str-literal> <str-literal> <str-literal> + repository . <w> get Id </w> ( ) + <str-literal> <str-literal> <str-literal> + existing . <w> get Url </w> ( ) + <str-literal> <str-literal> <str-literal> + repository . <w> get Url </w> ( ) , repository ) ; } else { index . put ( key , repository ) ; } } }", "target": 1}
{"idx": 218, "func": "<comment> private Map < String , Boolean > <w> per User Test On Return </w> = null ;", "target": 0}
{"idx": 219, "func": "<comment> public static final int <w> DEFAULT _ BUCKETS </w> = 10 ;", "target": 1}
{"idx": 220, "func": "private final byte [ ] <w> min Packed Value </w> ;", "target": 1}
{"idx": 221, "func": "private volatile String <w> jdbc Interceptors </w> = null ;", "target": 1}
{"idx": 222, "func": "private Map header = new <w> Hash Map </w> ( ) ;", "target": 1}
{"idx": 223, "func": "<comment> private int <w> num Overlap Tokens </w> ;", "target": 0}
{"idx": 224, "func": "<comment> static final int <w> REVERSE _ INTERVAL _ SHIFT </w> = 10 ;", "target": 0}
{"idx": 225, "func": "<comment> public static Environment <w> leave Environment </w> ( ) { final <w> Environment Stack </w> stack = ( <w> Environment Stack </w> ) <w> environment Stack </w> . get ( ) ; final <w> Environment Info </w> info = ( <w> Environment Info </w> ) stack . pop ( ) ; stack . <w> set Offset </w> ( info . <w> old Stack Count </w> ) ; return info . environment ; }", "target": 0}
{"idx": 226, "func": "private static final <w> Byte Buffer </w> <w> TP 2 _ KEY </w> = buffer ( <str-literal> <str-literal> <str-literal> ) ;", "target": 1}
{"idx": 227, "func": "private int [ ] <w> got _ frame </w> ;", "target": 1}
{"idx": 228, "func": "<comment> public static final Schema [ ] <w> DESCRIBE _ CONFIGS _ RESPONSE </w> = { <w> DESCRIBE _ CONFIGS _ RESPONSE _ V 0 </w> } ;", "target": 1}
{"idx": 229, "func": "public static final int <w> MAX _ RECORDS </w> = Integer . <w> parse Int </w> ( System . <w> get Property </w> ( <str-literal> <str-literal> <str-literal> , Integer . <w> to String </w> ( <w> DEFAULT _ MAX _ RECORDS </w> ) ) ) ;", "target": 0}
{"idx": 230, "func": "<comment> public void <w> ensure Remaining </w> ( int <w> remaining Bytes Required </w> ) { if ( <w> remaining Bytes Required </w> > buffer . remaining ( ) ) <w> expand Buffer </w> ( <w> remaining Bytes Required </w> ) ; }", "target": 1}
{"idx": 231, "func": "private <w> Kerberos Short Namer </w> <w> kerberos Short Namer </w> ;", "target": 0}
{"idx": 232, "func": "<comment> private transient <w> Extension Registry </w> <w> memoized Extension Registry </w> ;", "target": 0}
{"idx": 233, "func": "<comment> private final <w> Ping Manager </w> <w> ping Manager </w> = <w> get Ping Manager </w> ( ) ;", "target": 0}
{"idx": 234, "func": "/ * * True for an NRT sync protected long <w> tot Bytes </w> ;", "target": 1}
{"idx": 235, "func": "private void <w> validate Activated Profiles </w> ( List < <w> Maven Project </w> > projects { Collection < String > <w> not Activated Profile Ids </w> = new <w> Linked Hash Set </w> < > ( <w> active Profile Ids </w> ) ; for ( <w> Maven Project </w> project : projects ) { for ( List < String > <w> profile Ids </w> : project . <w> get Injected Profile Ids </w> ( ) . values ( ) ) { <w> not Activated Profile Ids </w> . <w> remove All </w> ( <w> profile Ids </w> ) ; } } for ( String <w> not Activated Profile Id </w> : <w> not Activated Profile Ids </w> ) { logger . warn ( <str-literal> <str-literal> <str-literal> <str-literal> + <w> not Activated Profile Id </w> + <str-literal> <str-literal> <str-literal> <str-literal> ) ; } }", "target": 1}
{"idx": 236, "func": "<comment> public <w> Output Stream </w> <w> get Output Stream </w> ( int <w> buffer Size </w> ) throws <w> IO Exception </w> { <comment> <comment> <comment> if ( <w> buffer Size </w> = = - 1 ) { if ( this . <w> secure Output Stream </w> = = null ) { this . <w> secure Output Stream </w> = new <w> Buffered Output Stream </w> ( this . <w> output Stream </w> ) ; } return this . <w> secure Output Stream </w> ; } else if ( <w> buffer Size </w> = = 0 ) { <comment> if ( this . <w> secure Output Stream </w> ! = null ) { this . <w> secure Output Stream </w> = null ; } return this . <w> output Stream </w> ; } else { <comment> this . <w> output Stream </w> = new java . io . <w> Buffered Output Stream </w> ( this . <w> output Stream </w> , <w> buffer Size </w> ) ; return this . <w> output Stream </w> ; } }", "target": 1}
{"idx": 237, "func": "private <w> Abstract Processor </w> ( <w> Abstract Endpoint </w> < ? > endpoint , Request <w> coyote Request </w> , Response <w> coyote Response </w> ) { this . endpoint = endpoint ; <w> async State Machine </w> = new <w> Async State Machine </w> ( this ) ; request = <w> coyote Request </w> ; response = <w> coyote Response </w> ; response . <w> set Hook </w> ( this ) ; request . <w> set Response </w> ( response ) ; request . <w> set Hook </w> ( this ) ; }", "target": 0}
{"idx": 238, "func": "int prefix ;", "target": 0}
{"idx": 239, "func": "<comment> public <w> Fig Node Strategy </w> <w> get Figure Strategy </w> ( ) { return null ; }", "target": 1}
{"idx": 240, "func": "<comment> protected final boolean <w> min Y Plane Intersects </w> ;", "target": 0}
{"idx": 241, "func": "<comment> @ Mock private <w> Kafka Producer </w> < byte [ ] , byte [ ] > producer ;", "target": 0}
{"idx": 242, "func": "public double combine ( List < Sample > samples , <w> Metric Config </w> config , long now ) { double total = 0.0 ; for ( Sample sample : samples ) total + = sample . value ; return total ; }", "target": 0}
{"idx": 243, "func": "<comment> protected boolean <w> get Populate Request Attributes From Socket </w> ( ) { return true ; }", "target": 0}
{"idx": 244, "func": "public void <w> To Source </w> ( <w> String Builder </w> sb ) { sb . append ( <str-literal> <str-literal> <str-literal> + Value + <str-literal> <str-literal> <str-literal> ) ; }", "target": 1}
{"idx": 245, "func": "private final String bytes ;", "target": 1}
{"idx": 246, "func": "<comment> public String <w> get Mime Type </w> ( ) { return this . <w> mime Type </w> ; }", "target": 0}
{"idx": 247, "func": "public static final String <w> MESSAGE _ SECTION </w> ;", "target": 0}
{"idx": 248, "func": "public void stop ( ) { delegate . stop ( ) ; }", "target": 0}
{"idx": 249, "func": "private static final int <w> SHORT _ SESSION _ TIMEOUT _ SECS </w> = 1 ;", "target": 0}
{"idx": 250, "func": "<comment> public static final String <w> DEFAULT _ EXPOSED _ HEADERS </w> = <str-literal> <str-literal> ;", "target": 1}
{"idx": 251, "func": "<comment> public static final short OFFSETS = POSITIONS | 1 < < 5 ;", "target": 1}
{"idx": 252, "func": "<comment> private void <w> generate Association From </w> ( Object a , Object ae , <w> String Buffer </w> [ ] parts ) { <comment> Collection connections = <w> get Facade </w> ( ) . <w> get Connections </w> ( a ) ; Iterator <w> conn Enum </w> = connections . iterator ( ) ; while ( <w> conn Enum </w> . <w> has Next </w> ( ) ) { Object <w> ae 2 </w> = <w> conn Enum </w> . next ( ) ; if ( <w> ae 2 </w> ! = ae ) { int p = <w> get Visibility Part </w> ( <w> ae 2 </w> ) ; if ( p > = 0 ) { <w> String Buffer </w> sb = parts [ p ] ; sb . append ( <w> LINE _ SEPARATOR </w> ) ; String assend = <w> generate Association End </w> ( <w> ae 2 </w> ) ; if ( assend . length ( ) > 0 ) { String comment = <w> generate Constraint Enriched Doc Comment </w> ( a , <w> ae 2 </w> ) ; if ( comment . length ( ) > 0 ) sb . append ( comment ) ; <comment> sb . append ( indent ) . append ( assend ) ; } String tv = <w> generate Tagged Values </w> ( a , <w> ALL _ BUT _ DOC _ TAGS </w> ) ; if ( tv ! = null & & tv . length ( ) > 0 ) { sb . append ( indent ) . append ( tv ) ; } } } } }", "target": 0}
{"idx": 253, "func": "public boolean <w> is Position Sensitive </w> ( ) { return <w> position Sensitive </w> ; }", "target": 0}
{"idx": 254, "func": "<comment> private static final String <w> STRING _ SETTINGS </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 255, "func": "<comment> public int bufpos = - 1 ;", "target": 0}
{"idx": 256, "func": "synchronized void <w> transition To Fatal Error </w> ( <w> Runtime Exception </w> exception ) { <w> transition To </w> ( State . <w> FATAL _ ERROR </w> , exception ) ; }", "target": 1}
{"idx": 257, "func": "<comment> public static final String <w> EXCLUDE _ INTERNAL _ TOPICS _ CONFIG </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 258, "func": "private static final String SPACES = <str-literal> <str-literal> ;", "target": 1}
{"idx": 259, "func": "private int <w> num Tokens </w> = 0 ;", "target": 0}
{"idx": 260, "func": "<comment> public Enumeration <w> get Locales </w> ( ) { return this . req . <w> get Locales </w> ( ) ; }", "target": 0}
{"idx": 261, "func": "<comment> final int <w> num Stored Fields </w> ;", "target": 0}
{"idx": 262, "func": "private long <w> flush Bytes </w> = 0 ;", "target": 1}
{"idx": 263, "func": "public void <w> check Collision </w> ( String before , String after ) { boolean collision = ( before ! = null & & before . equals ( <w> _ short Name </w> ) ) | | ( after ! = null & & after . equals ( <w> _ short Name </w> ) ) ; if ( collision ) { if ( <w> _ long Name </w> = = null ) { <w> _ long Name </w> = <w> get Long Name </w> ( ) ; } <w> _ display Name </w> = <w> _ long Name </w> ; } }", "target": 1}
{"idx": 264, "func": "public static final Token [ ] <w> FOUR _ GRAM _ TOKENS _ WITHOUT _ UNIGRAMS _ MIN _ FOUR _ GRAM </w> = new Token [ ] { <w> create Token </w> ( <str-literal> <str-literal> <str-literal> , 0 , 27 ) , <w> create Token </w> ( <str-literal> <str-literal> <str-literal> , 7 , 32 ) , <w> create Token </w> ( <str-literal> <str-literal> <str-literal> , 14 , 39 ) , } ;", "target": 0}
{"idx": 265, "func": "@ Override public void <w> get Bounds </w> ( Bounds bounds ) { super . <w> get Bounds </w> ( bounds ) ; <comment> <comment> <comment> for ( <w> Path Segment </w> <w> path Segment </w> : segments ) { <w> path Segment </w> . <w> get Bounds </w> ( <w> planet Model </w> , bounds ) ; } for ( <w> Segment Endpoint </w> <w> path Point </w> : <w> end Points </w> ) { <w> path Point </w> . <w> get Bounds </w> ( <w> planet Model </w> , bounds ) ; } }", "target": 1}
{"idx": 266, "func": "private boolean <w> is Generator </w> ;", "target": 0}
{"idx": 267, "func": "@ Override public byte [ ] <w> get Signature </w> ( ) { return unwrap ( ) . <w> get Signature </w> ( ) ; }", "target": 1}
{"idx": 268, "func": "<comment> private void <w> layout This To Self </w> ( ) { <w> Fig Poly </w> <w> edge Shape </w> = new <w> Fig Poly </w> ( ) ; <comment> Point <w> fc Center </w> = new Point ( <w> get Source Fig Node </w> ( ) . <w> get X </w> ( ) / 2 , <w> get Source Fig Node </w> ( ) . <w> get Y </w> ( ) / 2 ) ; Point <w> center Right </w> = new Point ( ( int ) ( <w> fc Center </w> . x + <w> get Source Fig Node </w> ( ) . <w> get Size </w> ( ) . <w> get Width </w> ( ) / 2 ) , <w> fc Center </w> . y ) ; int yoffset = ( int ) ( ( <w> get Source Fig Node </w> ( ) . <w> get Size </w> ( ) . <w> get Height </w> ( ) / 2 ) ) ; <w> edge Shape </w> . <w> add Point </w> ( <w> fc Center </w> . x , <w> fc Center </w> . y ) ; <w> edge Shape </w> . <w> add Point </w> ( <w> center Right </w> . x , <w> center Right </w> . y ) ; <w> edge Shape </w> . <w> add Point </w> ( <w> center Right </w> . x + 30 , <w> center Right </w> . y ) ; <w> edge Shape </w> . <w> add Point </w> ( <w> center Right </w> . x + 30 , <w> center Right </w> . y + yoffset ) ; <w> edge Shape </w> . <w> add Point </w> ( <w> center Right </w> . x , <w> center Right </w> . y + yoffset ) ; <comment> this . <w> set Between Nearest Points </w> ( true ) ; <w> edge Shape </w> . <w> set Line Color </w> ( <w> LINE _ COLOR </w> ) ; <w> edge Shape </w> . <w> set Filled </w> ( false ) ; <w> edge Shape </w> . <w> set Complete </w> ( true ) ; this . <w> set Fig </w> ( <w> edge Shape </w> ) ; }", "target": 0}
{"idx": 269, "func": "private static <w> String Builder </w> calls = new <w> String Builder </w> ( ) ;", "target": 1}
{"idx": 270, "func": "private final int <w> bytes Per Doc </w> ;", "target": 0}
{"idx": 271, "func": "<comment> protected Set forest = Collections . <w> synchronized Set </w> ( new <w> Hash Set </w> ( ) ) ;", "target": 0}
{"idx": 272, "func": "byte [ ] <w> floor Data </w> = new byte [ 32 ] ;", "target": 0}
{"idx": 273, "func": "<comment> @ Override public void close ( String <w> node Id </w> ) { selector . close ( <w> node Id </w> ) ; for ( <w> In Flight Request </w> request : <w> in Flight Requests </w> . <w> clear All </w> ( <w> node Id </w> ) ) if ( request . <w> is Internal Request </w> & & request . header . <w> api Key </w> ( ) = = <w> Api Keys </w> . METADATA . id ) <w> metadata Updater </w> . <w> handle Disconnection </w> ( request . destination ) ; <w> connection States </w> . remove ( <w> node Id </w> ) ; }", "target": 0}
{"idx": 274, "func": "private static final <w> Resource Bundle </w> <w> l Strings </w> = <w> Resource Bundle </w> . <w> get Bundle </w> ( <w> LSTRING _ FILE </w> ) ;", "target": 0}
{"idx": 275, "func": "public int <w> hash Code </w> ( ) { if ( metadata = = null ) { return super . <w> hash Code </w> ( ) ; } return metadata . <w> to String </w> ( ) . <w> hash Code </w> ( ) ; }", "target": 0}
{"idx": 276, "func": "final boolean points ;", "target": 1}
{"idx": 277, "func": "public K key ( ) { return key ; }", "target": 0}
{"idx": 278, "func": "private final long <w> connections Max Idle Nanos </w> ;", "target": 1}
{"idx": 279, "func": "private static void <w> get Component Version Info </w> ( <w> String Buffer </w> sb sb . append ( Translator . localize ( <str-literal> <str-literal> <str-literal> ) ) . append ( <str-literal> <str-literal> <str-literal> ) ; sb . append ( pn ) ; sb . append ( <str-literal> ) ; Package pkg = Package . <w> get Package </w> ( pn ) ; if ( pkg = = null ) { sb . append ( Translator . localize ( <str-literal> <str-literal> <str-literal> ) ) ; } else { String in = pkg . <w> get Implementation Title </w> ( ) ; if ( in ! = null ) { sb . append ( Translator . localize ( <str-literal> <str-literal> <str-literal> ) ) ; sb . append ( <str-literal> <str-literal> <str-literal> ) ; sb . append ( in ) ; } in = pkg . <w> get Implementation Vendor </w> ( ) ; if ( in ! = null ) { sb . append ( Translator . localize ( <str-literal> <str-literal> <str-literal> ) ) ; sb . append ( <str-literal> <str-literal> <str-literal> ) ; sb . append ( in ) ; } in = pkg . <w> get Implementation Version </w> ( ) ; if ( in ! = null ) { sb . append ( <str-literal> <str-literal> <str-literal> ) ; sb . append ( Translator . localize ( <str-literal> <str-literal> <str-literal> ) ) ; sb . append ( <str-literal> <str-literal> ) ; sb . append ( in ) ; sb . append ( <str-literal> ) ; } } sb . append ( <str-literal> ) ; }", "target": 1}
{"idx": 280, "func": "<comment> public static final String <w> ACTION _ ADJUST _ PAGE _ BREAKS </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 281, "func": "File <w> HELPER _ FUNCTIONS </w> ;", "target": 1}
{"idx": 282, "func": "public int <w> get Retries </w> ( ) { return retries ; }", "target": 1}
{"idx": 283, "func": "private static final int <w> MAX _ RETRIES </w> = Integer . <w> MAX _ VALUE </w> ;", "target": 1}
{"idx": 284, "func": "private final <w> Model Problem Collector </w> problems ;", "target": 0}
{"idx": 285, "func": "<comment> public Enumeration <w> get Servlets </w> ( ) { return null ; }", "target": 1}
{"idx": 286, "func": "<comment> private final int <w> max Size </w> ;", "target": 0}
{"idx": 287, "func": "<comment> public void <w> set Use Equals </w> ( boolean <w> use Equals </w> ) { this . <w> use Equals </w> = <w> use Equals </w> ; }", "target": 0}
{"idx": 288, "func": "@ Override public Void get ( long timeout , <w> Time Unit </w> unit ) throws <w> Interrupted Exception </w> , <w> Execution Exception </w> , <w> Timeout Exception </w> { return null ; }", "target": 1}
{"idx": 289, "func": "<comment> private static final String <w> STRING _ SHOWPROPERTIES </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 290, "func": "public <w> Conditional Expression </w> ( int pos ) { super ( pos ) ; }", "target": 0}
{"idx": 291, "func": "<comment> private Set < String > <w> joined Subscription </w> ;", "target": 1}
{"idx": 292, "func": "private final boolean <w> store Payloads </w> ;", "target": 0}
{"idx": 293, "func": "public <w> Metadata Response </w> ( int <w> throttle Time Ms </w> , List < Node > brokers , String <w> cluster Id </w> , int <w> controller Id </w> , List < <w> Topic Metadata </w> > <w> topic Metadata </w> ) { this . <w> throttle Time Ms </w> = <w> throttle Time Ms </w> ; this . brokers = brokers ; this . controller = <w> get Controller Node </w> ( <w> controller Id </w> , brokers ) ; this . <w> topic Metadata </w> = <w> topic Metadata </w> ; this . <w> cluster Id </w> = <w> cluster Id </w> ; }", "target": 0}
{"idx": 294, "func": "public void <w> To Source </w> ( <w> String Builder </w> sb ) { <comment> if ( attributes ! = null ) { attributes . <w> To Source </w> ( sb ) ; this . <w> New Line </w> ( sb ) ; } }", "target": 1}
{"idx": 295, "func": "<comment> public void <w> set Flags </w> ( String flags ) { this . flags = flags ; }", "target": 0}
{"idx": 296, "func": "private final int buckets ;", "target": 1}
{"idx": 297, "func": "<comment> protected volatile int <w> per Thread Hard Limit MB </w> ;", "target": 0}
{"idx": 298, "func": "<comment> int <w> num Follow Floor Blocks </w> ;", "target": 0}
{"idx": 299, "func": "<comment> public <w> Alter Configs Options </w> <w> validate Only </w> ( boolean <w> validate Only </w> ) { this . <w> validate Only </w> = <w> validate Only </w> ; return this ; }", "target": 1}
{"idx": 300, "func": "<comment> private void <w> do Remove Stereotype </w> ( ) { Object stereotype = <w> selected List </w> . <w> get Selected Value </w> ( ) ; Object <w> model Element </w> = <w> Target Manager </w> . <w> get Instance </w> ( ) . <w> get Model Target </w> ( ) ; if ( <w> model Element </w> = = null ) { return ; } if ( Model . <w> get Facade </w> ( ) . <w> get Stereotypes </w> ( <w> model Element </w> ) . contains ( stereotype ) ) { Model . <w> get Core Helper </w> ( ) . <w> remove Stereotype </w> ( <w> model Element </w> , stereotype ) ; <w> Project Manager </w> . <w> get Manager </w> ( ) . <w> update Roots </w> ( ) ; } }", "target": 1}
{"idx": 301, "func": "public <w> Block Statement </w> Statements = new <w> Block Statement </w> ( ) ;", "target": 1}
{"idx": 302, "func": "protected final <w> State Context </w> < W > context ;", "target": 0}
{"idx": 303, "func": "protected final List includes ;", "target": 0}
{"idx": 304, "func": "private static final String <w> ILLEGAL _ FS _ CHARS </w> = <str-literal> <str-literal> <str-literal> <str-literal> <str-literal> <str-literal> ;", "target": 1}
{"idx": 305, "func": "bool <w> get Sub Keys </w> ( <w> C String List </w> & subkeys ) ; <comment>", "target": 1}
{"idx": 306, "func": "final int <w> num Dims </w> ;", "target": 0}
{"idx": 307, "func": "<comment> Map < String , <w> Xmi Reference </w> > <w> get Object To Id </w> ( ) { return <w> object To Id </w> ; }", "target": 0}
{"idx": 308, "func": "public int compare ( long <w> a Prefix </w> , long <w> b Prefix </w> ) { return <w> Unsigned Longs </w> . compare ( <w> a Prefix </w> , <w> b Prefix </w> ) ; }", "target": 0}
{"idx": 309, "func": "public String <w> is Xml </w> ( ) { return <w> is Xml </w> ; }", "target": 1}
{"idx": 310, "func": "abstract Builder < K , V > <w> set Value Translation Function </w> ( <w> Simple Function </w> < ? , V > function ) ;", "target": 1}
{"idx": 311, "func": "private long <w> num Terms </w> ;", "target": 0}
{"idx": 312, "func": "public String <w> get Name </w> ( ) { if ( type ! = <w> SCE Type </w> . COMMENT ) return name ; else { int <w> widget Offset Start </w> = <w> projection Viewer </w> . <w> model Offset 2 Widget Offset </w> ( <w> start Model Offset </w> ) ; int <w> widget Offset End </w> = <w> widget Offset Start </w> + <w> total Length </w> ; if ( <w> widget Offset Start </w> > = 0 & & <w> widget Offset End </w> > = 0 ) return <w> styled Text </w> . <w> get Text </w> ( <w> widget Offset Start </w> , <w> widget Offset End </w> ) ; else { int <w> offset Start </w> = <w> start Model Offset </w> ; while ( <w> widget Offset Start </w> < 0 ) { <w> offset Start </w> + + ; <w> widget Offset Start </w> = <w> projection Viewer </w> . <w> model Offset 2 Widget Offset </w> ( <w> offset Start </w> ) ; } int <w> shown Line Index </w> = <w> styled Text </w> . <w> get Line At Offset </w> ( <w> offset Start </w> ) ; return <w> styled Text </w> . <w> get Line </w> ( <w> shown Line Index </w> ) ; } } }", "target": 1}
{"idx": 313, "func": "<comment> private List < <w> Topic Partition </w> > <w> member Assignment </w> = null ;", "target": 1}
{"idx": 314, "func": "<comment> public final List < Result < T > > <w> top N </w> ;", "target": 0}
{"idx": 315, "func": "protected static final String [ ] <w> PREPARED _ TYPE </w> = new String [ ] { <w> PREPARE _ STATEMENT </w> } ;", "target": 1}
{"idx": 316, "func": "private final byte [ ] world = <str-literal> <str-literal> <str-literal> . <w> get Bytes </w> ( ) ;", "target": 1}
{"idx": 317, "func": "private final Instant offset ;", "target": 0}
{"idx": 318, "func": "<comment> int [ ] end ;", "target": 1}
{"idx": 319, "func": "<comment> public void <w> set Max Token Length </w> ( int length ) { <w> max Token Length </w> = length ; }", "target": 0}
{"idx": 320, "func": "<comment> public void <w> rendering Changed </w> ( ) { <w> init Notation Providers </w> ( <w> get Owner </w> ( ) ) ; <w> update Name Text </w> ( ) ; <w> update Stereotype Text </w> ( ) ; <w> update Stereotype Icon </w> ( ) ; <w> update Bounds </w> ( ) ; damage ( ) ; }", "target": 0}
{"idx": 321, "func": "<comment> public static void <w> to Characters </w> ( Source source , String encoding , <w> Content Handler </w> handler ) throws <w> SAX Exception </w> , <w> IO Exception </w> , <w> Processing Exception </w> { try { Reader r = encoding = = null ? new <w> Input Stream Reader </w> ( source . <w> get Input Stream </w> ( ) ) : new <w> Input Stream Reader </w> ( source . <w> get Input Stream </w> ( ) , encoding ) ; int len ; char [ ] chr = new char [ 4096 ] ; try { while ( ( len = r . read ( chr ) ) > 0 ) { handler . characters ( chr , 0 , len ) ; } } finally { r . close ( ) ; } } catch ( <w> SAX Exception </w> e ) { <w> handle SAX Exception </w> ( source . <w> get URI </w> ( ) , e ) ; } }", "target": 1}
{"idx": 322, "func": "<comment> private final boolean <w> output Unigrams </w> ;", "target": 0}
{"idx": 323, "func": "<comment> final <w> Bytes Ref Builder </w> <w> scratch Bytes </w> = new <w> Bytes Ref Builder </w> ( ) ;", "target": 0}
{"idx": 324, "func": "protected static final String [ ] <w> CALLABLE _ TYPE </w> = new String [ ] { <w> PREPARE _ CALL </w> } ;", "target": 1}
{"idx": 325, "func": "<comment> static int <w> decode Integer </w> ( <w> Byte Buffer </w> source , int n ) throws <w> Hpack Exception </w> { if ( source . remaining ( ) = = 0 ) { return - 1 ; } int count = 1 ; int sp = source . position ( ) ; int mask = <w> PREFIX _ TABLE </w> [ n ] ; int i = mask & source . get ( ) ; int b ; if ( i < <w> PREFIX _ TABLE </w> [ n ] ) { return i ; } else { int m = 0 ; do { if ( count + + > <w> MAX _ INTEGER _ OCTETS </w> ) { throw new <w> Hpack Exception </w> ( sm . <w> get String </w> ( <str-literal> <str-literal> <str-literal> , Integer . <w> value Of </w> ( <w> MAX _ INTEGER _ OCTETS </w> ) ) ) ; } if ( source . remaining ( ) = = 0 ) { <comment> <comment> source . position ( sp ) ; return - 1 ; } b = source . get ( ) ; i = i + ( b & 127 ) * ( <w> PREFIX _ TABLE </w> [ m ] + 1 ) ; m + = 7 ; } while ( ( b & 128 ) = = 128 ) ; } return i ; }", "target": 0}
{"idx": 326, "func": "<comment> protected void <w> process Max Idle Backups </w> ( ) { if ( ! <w> get State </w> ( ) . <w> is Available </w> ( ) | | <w> max Idle Backup </w> < 0 ) return ; Session sessions [ ] = <w> find Sessions </w> ( ) ; <comment> if ( <w> max Idle Backup </w> > = 0 ) { for ( int i = 0 ; i < sessions . length ; i + + ) { <w> Standard Session </w> session = ( <w> Standard Session </w> ) sessions [ i ] ; synchronized ( session ) { if ( ! session . <w> is Valid </w> ( ) ) continue ; long <w> last Accessed Time </w> = session . <w> get Last Accessed Time Internal </w> ( ) ; Long <w> persisted Last Accessed Time </w> = ( Long ) session . <w> get Note </w> ( <w> PERSISTED _ LAST _ ACCESSED _ TIME </w> ) ; if ( <w> persisted Last Accessed Time </w> ! = null & & <w> last Accessed Time </w> = = <w> persisted Last Accessed Time </w> . <w> long Value </w> ( ) ) continue ; int <w> time Idle </w> = ( int ) ( session . <w> get Idle Time Internal </w> ( ) / 1000l ) ; if ( <w> time Idle </w> > = <w> max Idle Backup </w> ) { if ( log . <w> is Debug Enabled </w> ( ) ) log . debug ( sm . <w> get String </w> ( <str-literal> <str-literal> <str-literal> , session . <w> get Id Internal </w> ( ) , Integer . <w> value Of </w> ( <w> time Idle </w> ) ) ) ; try { <w> write Session </w> ( session ) ; } catch ( <w> IO Exception </w> e ) { <comment> } session . <w> set Note </w> ( <w> PERSISTED _ LAST _ ACCESSED _ TIME </w> , Long . <w> value Of </w> ( <w> last Accessed Time </w> ) ) ; } } } } }", "target": 0}
{"idx": 327, "func": "<comment> public int <w> get End Offset </w> ( ) { return <w> match End Offset </w> ; }", "target": 0}
{"idx": 328, "func": "public W <w> get Window </w> ( ) { return window ; }", "target": 0}
{"idx": 329, "func": "@ Override public boolean <w> has Positions </w> ( ) { return <w> field Info </w> . <w> get Index Options </w> ( ) . <w> compare To </w> ( <w> Index Options </w> . <w> DOCS _ AND _ FREQS _ AND _ POSITIONS </w> ) > = 0 ; }", "target": 0}
{"idx": 330, "func": "<comment> public void merge ( <w> Text Fragment </w> <w> frag 2 </w> ) { <w> text End Pos </w> = <w> frag 2 </w> . <w> text End Pos </w> ; score = Math . max ( score , <w> frag 2 </w> . score ) ; }", "target": 0}
{"idx": 331, "func": "private void <w> set Timeout </w> ( ) { <comment> <comment> <comment> <comment> context . timeout ( Math . min ( <w> failure Delay Ms </w> , 250 ) ) ; }", "target": 0}
{"idx": 332, "func": "<comment> private final <w> Concurrent Map </w> < String , <w> Cached Resource </w> > <w> resource Cache </w> = new <w> Concurrent Hash Map </w> < > ( ) ;", "target": 0}
{"idx": 333, "func": "<comment> public Object [ ] <w> get Children </w> ( Object o ) { return new Object [ 0 ] ; }", "target": 1}
{"idx": 334, "func": "private final static String CREATIONS = <str-literal> <str-literal> <str-literal> ;", "target": 1}
{"idx": 335, "func": "public Long read ( <w> Byte Buffer </w> buffer ) { return <w> Byte Utils </w> . <w> read Varlong </w> ( buffer ) ; }", "target": 0}
{"idx": 336, "func": "@ Override public <w> String Buffer </w> <w> get Request URL </w> ( ) { if ( request = = null ) { throw new <w> Illegal State Exception </w> ( sm . <w> get String </w> ( <str-literal> <str-literal> <str-literal> ) ) ; } return request . <w> get Request URL </w> ( ) ; }", "target": 0}
{"idx": 337, "func": "private final String delimiters ;", "target": 1}
{"idx": 338, "func": "<comment> private final <w> Producer Interceptors </w> < K , V > interceptors ;", "target": 0}
{"idx": 339, "func": "@ Override public <w> Maven Execution Request </w> <w> set Global Settings File </w> ( File <w> global Settings File </w> ) { this . <w> global Settings File </w> = <w> global Settings File </w> ; return this ; }", "target": 1}
{"idx": 340, "func": "<comment> Map < Setting , Long > pending = new <w> Enum Map </w> < > ( Setting . class ) ;", "target": 1}
{"idx": 341, "func": "<comment> public final void <w> set Test On Borrow </w> ( final boolean <w> test On Borrow </w> ) { this . <w> test On Borrow </w> = <w> test On Borrow </w> ; }", "target": 0}
{"idx": 342, "func": "<comment> public long finish ( <w> Index Output </w> out ) throws <w> IO Exception </w> { <comment> <comment> <comment> if ( <w> heap Point Writer </w> = = null & & <w> temp Input </w> = = null ) { throw new <w> Illegal State Exception </w> ( <str-literal> <str-literal> <str-literal> ) ; } if ( <w> offline Point Writer </w> ! = null ) { <w> offline Point Writer </w> . close ( ) ; } if ( <w> point Count </w> = = 0 ) { throw new <w> Illegal State Exception </w> ( <str-literal> <str-literal> <str-literal> ) ; } <w> Long Bit Set </w> <w> ord Bit Set </w> ; if ( <w> num Dims </w> > 1 ) { if ( <w> single Value Per Doc </w> ) { <w> ord Bit Set </w> = new <w> Long Bit Set </w> ( <w> max Doc </w> ) ; } else { <w> ord Bit Set </w> = new <w> Long Bit Set </w> ( <w> point Count </w> ) ; } } else { <w> ord Bit Set </w> = null ; } long <w> count Per Leaf </w> = <w> point Count </w> ; long <w> inner Node Count </w> = 1 ; while ( <w> count Per Leaf </w> > <w> max Points In Leaf Node </w> ) { <w> count Per Leaf </w> = ( <w> count Per Leaf </w> + 1 ) / 2 ; <w> inner Node Count </w> * = 2 ; } int <w> num Leaves </w> = ( int ) <w> inner Node Count </w> ; <w> check Max Leaf Node Count </w> ( <w> num Leaves </w> ) ; <comment> <comment> <comment> byte [ ] <w> split Packed Values </w> = new byte [ Math . <w> to Int Exact </w> ( <w> num Leaves </w> * ( 1 + <w> bytes Per Dim </w> ) ) ] ; <comment> long [ ] <w> leaf Block F Ps </w> = new long [ <w> num Leaves </w> ] ; <comment> assert <w> point Count </w> / <w> num Leaves </w> < = <w> max Points In Leaf Node </w> : <str-literal> <str-literal> <str-literal> + <w> point Count </w> + <str-literal> <str-literal> <str-literal> + <w> num Leaves </w> + <str-literal> <str-literal> <str-literal> + <w> max Points In Leaf Node </w> ; <comment> <w> Path Slice </w> [ ] <w> sorted Point Writers </w> = new <w> Path Slice </w> [ <w> num Dims </w> ] ; <comment> List < Closeable > <w> to Close Heroically </w> = new <w> Array List </w> < > ( ) ; boolean success = false ; try { <comment> for ( int dim = 0 ; dim < <w> num Dims </w> ; dim + + ) { <w> sorted Point Writers </w> [ dim ] = new <w> Path Slice </w> ( sort ( dim ) , 0 , <w> point Count </w> ) ; } <comment> <comment> if ( <w> temp Input </w> ! = null ) { <w> temp Dir </w> . <w> delete File </w> ( <w> temp Input </w> . <w> get Name </w> ( ) ) ; <w> temp Input </w> = null ; } else { assert <w> heap Point Writer </w> ! = null ; <w> heap Point Writer </w> = null ; } final int [ ] <w> parent Splits </w> = new int [ <w> num Dims </w> ] ; build ( 1 , <w> num Leaves </w> , <w> sorted Point Writers </w> , <w> ord Bit Set </w> , out , <w> min Packed Value </w> , <w> max Packed Value </w> , <w> parent Splits </w> , <w> split Packed Values </w> , <w> leaf Block F Ps </w> , <w> to Close Heroically </w> ) ; assert Arrays . equals ( <w> parent Splits </w> , new int [ <w> num Dims </w> ] ) ; for ( <w> Path Slice </w> slice : <w> sorted Point Writers </w> ) { slice . writer . destroy ( ) ; } <comment> assert <w> temp Dir </w> . <w> get Created Files </w> ( ) . <w> is Empty </w> ( ) ; <comment> <comment> success = true ; } finally { if ( success = = false ) { <w> IO Utils </w> . <w> delete Files Ignoring Exceptions </w> ( <w> temp Dir </w> , <w> temp Dir </w> . <w> get Created Files </w> ( ) ) ; <w> IO Utils </w> . <w> close While Handling Exception </w> ( <w> to Close Heroically </w> ) ; } } <comment> <comment> long <w> index FP </w> = out . <w> get File Pointer </w> ( ) ; <w> write Index </w> ( out , Math . <w> to Int Exact </w> ( <w> count Per Leaf </w> ) , <w> leaf Block F Ps </w> , <w> split Packed Values </w> ) ; return <w> index FP </w> ; }", "target": 0}
{"idx": 343, "func": "<comment> public boolean <w> is Nullable </w> ( ) { return false ; }", "target": 1}
{"idx": 344, "func": "<comment> public void setup ( <w> Service Manager </w> manager ) throws <w> Input Module Exception </w> { this . <w> input Modules </w> = new <w> Hash Map </w> ( ) ; this . <w> service Manager </w> = manager ; }", "target": 0}
{"idx": 345, "func": "private static final String ITERATIONS = <str-literal> <str-literal> <str-literal> ;", "target": 1}
{"idx": 346, "func": "public static final int <w> DEFAULT _ EDGES </w> = 64 ;", "target": 1}
{"idx": 347, "func": "<comment> public long <w> get Time Spent Resizing Ns </w> ( ) { if ( ! <w> enable Perf Metrics </w> ) { throw new <w> Illegal State Exception </w> ( ) ; } return <w> time Spent Resizing Ns </w> ; }", "target": 0}
{"idx": 348, "func": "<comment> protected static final byte [ ] <w> HEADER _ SEPARATOR </w> = { CR , LF , CR , LF } ;", "target": 0}
{"idx": 349, "func": "<comment> public Map <w> get Object Model </w> ( ) { return this . <w> get Current Object Model </w> ( ) ; }", "target": 1}
{"idx": 350, "func": "public static final String <w> REST _ ADVERTISED _ HOST _ NAME _ CONFIG </w> = <str-literal> <str-literal> <str-literal> ;", "target": 1}
{"idx": 351, "func": "public String <w> get Filters </w> ( ) { return filters ; }", "target": 1}
{"idx": 352, "func": "<comment> public int <w> serialized Key Size </w> ( ) { return this . <w> serialized Key Size </w> ; }", "target": 0}
{"idx": 353, "func": "public <w> Node Collection </w> < <w> Expression Node </w> > Init = new <w> Node Collection </w> < <w> Expression Node </w> > ( ) ;", "target": 1}
{"idx": 354, "func": "<comment> public void <w> set Unless </w> ( String c ) { <w> unless Condition </w> = c ; }", "target": 0}
{"idx": 355, "func": "public void start ( Map < String , String > props ) { filename = props . get ( <w> FILE _ CONFIG </w> ) ; }", "target": 0}
{"idx": 356, "func": "public void <w> To Source </w> ( <w> String Builder </w> sb ) { if ( <w> is Ref </w> ) { sb . append ( <str-literal> <str-literal> <str-literal> ) ; } else if ( <w> is Out </w> ) { sb . append ( <str-literal> <str-literal> <str-literal> ) ; } expression . <w> To Source </w> ( sb ) ; }", "target": 1}
{"idx": 357, "func": "@ Override public <w> Session Id Generator </w> <w> get Session Id Generator </w> ( ) { if ( <w> session Id Generator </w> ! = null ) { return <w> session Id Generator </w> ; } else if ( <w> session Id Generator Class </w> ! = null ) { try { <w> session Id Generator </w> = <w> session Id Generator Class </w> . <w> new Instance </w> ( ) ; return <w> session Id Generator </w> ; } catch ( <w> Illegal Access Exception </w> ex ) { <comment> } catch ( <w> Instantiation Exception </w> ex ) { <comment> } } return null ; }", "target": 1}
{"idx": 358, "func": "private String types ;", "target": 1}
{"idx": 359, "func": "<comment> public void <w> remove Layout Component </w> ( Component comp ) { }", "target": 0}
{"idx": 360, "func": "private int remaining ;", "target": 1}
{"idx": 361, "func": "private static final String <w> ACKS _ KEY _ NAME </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 362, "func": "public String <w> get Class Path </w> ( ) { if ( <w> class Path </w> ! = null ) return <w> class Path </w> ; return System . <w> get Property </w> ( <str-literal> <str-literal> java . class . path <str-literal> <str-literal> ) ; }", "target": 0}
{"idx": 363, "func": "@ Override public <w> Maven Execution Request </w> <w> set Event Spy Dispatcher </w> ( <w> Event Spy Dispatcher </w> <w> event Spy Dispatcher </w> ) { this . <w> event Spy Dispatcher </w> = <w> event Spy Dispatcher </w> ; return this ; }", "target": 1}
{"idx": 364, "func": "<comment> private Object [ ] dense ;", "target": 1}
{"idx": 365, "func": "<comment> private void <w> get Namespaces </w> ( Configuration conf ) throws <w> Configuration Exception </w> { Configuration [ ] children = conf . <w> get Children </w> ( <str-literal> <str-literal> <str-literal> ) ; int i = children . length ; if ( i > 0 ) { this . namespaces = new <w> Hash Map </w> ( i + 2 ) ; } while ( i - - > 0 ) { String uri = children [ i ] . <w> get Attribute </w> ( <str-literal> <str-literal> <str-literal> ) ; String prefix = children [ i ] . <w> get Attribute </w> ( <str-literal> <str-literal> <str-literal> ) ; if ( uri ! = null & & prefix ! = null ) { this . namespaces . put ( prefix , uri ) ; } } }", "target": 1}
{"idx": 366, "func": "<comment> private Profile <w> get Java Profile </w> ( Project p ) { for ( Profile profile : p . <w> get Profile Configuration </w> ( ) . <w> get Profiles </w> ( ) ) { if ( <str-literal> <str-literal> <str-literal> . equals ( profile . <w> get Display Name </w> ( ) ) ) { return profile ; } } return null ; }", "target": 0}
{"idx": 367, "func": "@ Override public <w> Model Building Request </w> <w> set Workspace Model Resolver </w> ( <w> Workspace Model Resolver </w> <w> workspace Resolver </w> ) { this . <w> workspace Resolver </w> = <w> workspace Resolver </w> ; return this ; }", "target": 1}
{"idx": 368, "func": "<comment> public void setup ( <w> Source Resolver </w> resolver , Map <w> object Model </w> , String src , Parameters par ) throws <w> Processing Exception </w> , <w> SAX Exception </w> , <w> IO Exception </w> { this . resolver = resolver ; this . <w> object Model </w> = <w> object Model </w> ; this . source = src ; this . parameters = par ; }", "target": 0}
{"idx": 369, "func": "public Enumeration <w> get Headers </w> ( String name ) { return this . req . <w> get Headers </w> ( name ) ; }", "target": 0}
{"idx": 370, "func": "private byte [ ] key = <str-literal> <str-literal> <str-literal> . <w> get Bytes </w> ( ) ;", "target": 1}
{"idx": 371, "func": "<comment> static final <w> Bytes Ref </w> INDEXOPTIONS = new <w> Bytes Ref </w> ( <str-literal> <str-literal> <str-literal> ) ;", "target": 1}
{"idx": 372, "func": "<comment> private final Map < T , T > cache ;", "target": 0}
{"idx": 373, "func": "<comment> public static final int <w> KEY _ ENUMERATE _ SUB _ KEYS </w> = 0x0008 ;", "target": 1}
{"idx": 374, "func": "private final boolean classes", "target": 1}
{"idx": 375, "func": "<comment> private boolean <w> hsts Preload </w> = false ;", "target": 0}
{"idx": 376, "func": "<comment> private List <w> get Operation </w> ( Collection classifiers , String name , int params ) throws <w> Parse Exception </w> { List < Object > operations = new <w> Array List </w> < Object > ( ) ; if ( name = = null | | name . length ( ) = = 0 ) { return operations ; } for ( Object clf : classifiers ) { Collection oe = Model . <w> get Facade </w> ( ) . <w> get Features </w> ( clf ) ; for ( Object operation : oe ) { if ( ! ( Model . <w> get Facade </w> ( ) . <w> is A Operation </w> ( operation ) ) ) { continue ; } if ( ! name . equals ( Model . <w> get Facade </w> ( ) . <w> get Name </w> ( operation ) ) ) { continue ; } if ( params ! = <w> count Parameters </w> ( operation ) ) { continue ; } operations . add ( operation ) ; } } if ( operations . size ( ) > 0 ) { return operations ; } Iterator it = classifiers . iterator ( ) ; if ( it . <w> has Next </w> ( ) ) { <w> String Builder </w> expr = new <w> String Builder </w> ( name + <str-literal> <str-literal> <str-literal> ) ; int i ; for ( i = 0 ; i < params ; i + + ) { if ( i > 0 ) { expr . append ( <str-literal> <str-literal> <str-literal> ) ; } expr . append ( <str-literal> <str-literal> <str-literal> + ( i + 1 ) ) ; } expr . append ( <str-literal> <str-literal> <str-literal> ) ; <comment> <comment> <comment> Object cls = it . next ( ) ; Object <w> return Type </w> = <w> Project Manager </w> . <w> get Manager </w> ( ) . <w> get Current Project </w> ( ) . <w> get Default Return Type </w> ( ) ; Object op = Model . <w> get Core Factory </w> ( ) . <w> build Operation </w> ( cls , <w> return Type </w> ) ; new <w> Operation Notation Uml </w> ( op ) . <w> parse Operation </w> ( expr . <w> to String </w> ( ) , op ) ; operations . add ( op ) ; } return operations ; }", "target": 1}
{"idx": 377, "func": "public Object remove ( int index ) { throw new <w> Unsupported Operation Exception </w> ( ) ; }", "target": 0}
{"idx": 378, "func": "<comment> private final byte [ ] boundary ;", "target": 1}
{"idx": 379, "func": "public Object <w> set Value </w> ( Object value ) { throw new <w> Unsupported Operation Exception </w> ( ) ; }", "target": 1}
{"idx": 380, "func": "@ Override public <w> Maven Execution Request </w> <w> set Mirrors </w> ( List < Mirror > mirrors ) { if ( mirrors ! = null ) { this . mirrors = new <w> Array List </w> < > ( mirrors ) ; } else { this . mirrors = null ; } return this ; }", "target": 1}
{"idx": 381, "func": "<comment> private final static int <w> OP _ VALUES </w> = 1 ;", "target": 1}
{"idx": 382, "func": "<comment> private final List < <w> Pending Block </w> > <w> new Blocks </w> = new <w> Array List </w> < > ( ) ;", "target": 0}
{"idx": 383, "func": "void <w> to String Tree </w> ( <w> String Builder </w> b switch ( kind ) { <comment> case <w> REGEXP _ UNION </w> : case <w> REGEXP _ CONCATENATION </w> : case <w> REGEXP _ INTERSECTION </w> : b . append ( indent ) ; b . append ( kind ) ; b . append ( <str-literal> ) ; <w> exp 1 </w> . <w> to String Tree </w> ( b , indent + <str-literal> <str-literal> ) ; <w> exp 2 </w> . <w> to String Tree </w> ( b , indent + <str-literal> <str-literal> ) ; break ; <comment> case <w> REGEXP _ OPTIONAL </w> : case <w> REGEXP _ REPEAT </w> : case <w> REGEXP _ COMPLEMENT </w> : b . append ( indent ) ; b . append ( kind ) ; b . append ( <str-literal> ) ; <w> exp 1 </w> . <w> to String Tree </w> ( b , indent + <str-literal> <str-literal> ) ; break ; case <w> REGEXP _ REPEAT _ MIN </w> : b . append ( indent ) ; b . append ( kind ) ; b . append ( <str-literal> <str-literal> <str-literal> ) ; b . append ( min ) ; b . append ( <str-literal> ) ; <w> exp 1 </w> . <w> to String Tree </w> ( b , indent + <str-literal> <str-literal> ) ; break ; case <w> REGEXP _ REPEAT _ MINMAX </w> : b . append ( indent ) ; b . append ( kind ) ; b . append ( <str-literal> <str-literal> <str-literal> ) ; b . append ( min ) ; b . append ( <str-literal> <str-literal> <str-literal> ) ; b . append ( max ) ; b . append ( <str-literal> ) ; <w> exp 1 </w> . <w> to String Tree </w> ( b , indent + <str-literal> <str-literal> ) ; break ; case <w> REGEXP _ CHAR </w> : b . append ( indent ) ; b . append ( kind ) ; b . append ( <str-literal> <str-literal> <str-literal> ) ; b . <w> append Code Point </w> ( c ) ; b . append ( <str-literal> ) ; break ; case <w> REGEXP _ CHAR _ RANGE </w> : b . append ( indent ) ; b . append ( kind ) ; b . append ( <str-literal> <str-literal> <str-literal> ) ; b . <w> append Code Point </w> ( from ) ; b . append ( <str-literal> <str-literal> <str-literal> ) ; b . <w> append Code Point </w> ( to ) ; b . append ( <str-literal> ) ; break ; case <w> REGEXP _ ANYCHAR </w> : case <w> REGEXP _ EMPTY </w> : b . append ( indent ) ; b . append ( kind ) ; b . append ( <str-literal> ) ; break ; case <w> REGEXP _ STRING </w> : b . append ( indent ) ; b . append ( kind ) ; b . append ( <str-literal> <str-literal> <str-literal> ) ; b . append ( s ) ; b . append ( <str-literal> ) ; break ; case <w> REGEXP _ ANYSTRING </w> : b . append ( indent ) ; b . append ( kind ) ; b . append ( <str-literal> ) ; break ; case <w> REGEXP _ AUTOMATON </w> : b . append ( indent ) ; b . append ( kind ) ; b . append ( <str-literal> ) ; break ; case <w> REGEXP _ INTERVAL </w> : b . append ( indent ) ; b . append ( kind ) ; String <w> s 1 </w> = Integer . <w> to String </w> ( min ) ; String <w> s 2 </w> = Integer . <w> to String </w> ( max ) ; b . append ( <str-literal> <str-literal> <str-literal> ) ; if ( digits > 0 ) for ( int i = <w> s 1 </w> . length ( ) ; i < digits ; i + + ) b . append ( <str-literal> ) ; b . append ( <w> s 1 </w> ) . append ( <str-literal> <str-literal> <str-literal> ) ; if ( digits > 0 ) for ( int i = <w> s 2 </w> . length ( ) ; i < digits ; i + + ) b . append ( <str-literal> ) ; b . append ( <w> s 2 </w> ) . append ( <str-literal> <str-literal> <str-literal> ) ; b . append ( <str-literal> ) ; break ; } }", "target": 1}
{"idx": 384, "func": "private static String <w> BROWSER _ COOKIES </w> = <str-literal> <str-literal> <str-literal> ;", "target": 1}
{"idx": 385, "func": "private <w> Ast Node </w> <w> false Expression </w> ;", "target": 0}
{"idx": 386, "func": "<comment> public static String <w> read File </w> ( String <w> file Path </w> ) { File <w> js File </w> = new File ( <w> file Path </w> ) ; int length = new Long ( <w> js File </w> . length ( ) ) . <w> int Value </w> ( ) ; byte [ ] b = new byte [ length ] ; <w> String Buffer </w> contents = new <w> String Buffer </w> ( ) ; try { <w> File Input Stream </w> fis = new <w> File Input Stream </w> ( <w> js File </w> ) ; int read = fis . read ( b ) ; contents . append ( new String ( b ) ) ; } catch ( Exception e ) { p ( e . <w> to String </w> ( ) ) ; } return ( contents . <w> to String </w> ( ) ) ; }", "target": 0}
{"idx": 387, "func": "<comment> public Map <w> get Attributes </w> ( ) { return new <w> Context Map </w> ( this ) ; }", "target": 1}
{"idx": 388, "func": "* * * Returns position of : token * / public int <w> get Colon Position </w> ( ) { return <w> colon Position </w> ; }", "target": 0}
{"idx": 389, "func": "final int bytes ;", "target": 1}
{"idx": 390, "func": "<comment> private String <w> cipher Suites </w> ;", "target": 0}
{"idx": 391, "func": "<comment> protected long <w> size Of Indexed Strings </w> ;", "target": 0}
{"idx": 392, "func": "private int <w> max Tasks </w> ;", "target": 1}
{"idx": 393, "func": "final byte [ ] <w> scratch 2 </w> ;", "target": 1}
{"idx": 394, "func": "<comment> public String <w> get Artifact Id </w> ( ) { return ( <w> artifact Id </w> ! = null ) ? <w> artifact Id </w> : <str-literal> <str-literal> ; }", "target": 0}
{"idx": 395, "func": "public List < <w> Acl Creation </w> > <w> acl Creations </w> ( ) { return <w> acl Creations </w> ; }", "target": 0}
{"idx": 396, "func": "<comment> protected static final byte [ ] <w> COORD _ CONF </w> = new byte [ ] { 67 , 88 , 107 , - 86 , 69 , 23 , 76 , - 70 , - 91 , - 23 , - 87 , - 25 , - 125 , 86 , 75 , 20 } ;", "target": 1}
{"idx": 397, "func": "<comment> protected Map <w> set Result </w> ( Map <w> object Model </w> , Map <w> action Map </w> , Map <w> result Map </w> , boolean <w> all OK </w> ) { if ( <w> all OK </w> ) { <w> Http Session </w> session = <w> Object Model Helper </w> . <w> get Request </w> ( <w> object Model </w> ) . <w> get Session </w> ( ) ; for ( Iterator i = <w> action Map </w> . <w> key Set </w> ( ) . iterator ( ) ; i . <w> has Next </w> ( ) ; ) { String name = ( String ) i . next ( ) ; session . <w> set Attribute </w> ( name , <w> action Map </w> . get ( name ) ) ; } } return super . <w> set Result </w> ( <w> object Model </w> , <w> action Map </w> , <w> result Map </w> , <w> all OK </w> ) ; }", "target": 1}
{"idx": 398, "func": "<comment> public static native void free ( long mem ) ;", "target": 0}
{"idx": 399, "func": "int references ;", "target": 1}
{"idx": 400, "func": "<comment> public static int [ ] [ ] <w> Label Mat </w> = new int [ BLOBROWCOUNT ] [ BLOBCOLCOUNT ] ;", "target": 0}
{"idx": 401, "func": "public String <w> is Scripting Invalid </w> ( ) { return <w> scripting Invalid </w> ; }", "target": 1}
{"idx": 402, "func": "private transient Configuration conf ;", "target": 0}
{"idx": 403, "func": "<comment> private <w> Attribute Source </w> atts = null ;", "target": 0}
{"idx": 404, "func": "public static final String <w> ACTION _ RESULTS </w> = <w> Action Set Node </w> . class . <w> get Name </w> ( ) + <str-literal> <str-literal> <str-literal> ;", "target": 1}
{"idx": 405, "func": "public <w> Dependency Resolution Request </w> <w> set Repository Session </w> ( <w> Repository System Session </w> <w> repository Session </w> ) { this . session = <w> repository Session </w> ; return this ; }", "target": 1}
{"idx": 406, "func": "<comment> public void <w> close Node Scope </w> ( Node n , boolean condition ) { if ( condition ) { int a = <w> node Arity </w> ( ) ; mk = marks . remove ( marks . size ( ) - 1 ) ; while ( a - - > 0 ) { Node c = <w> pop Node </w> ( ) ; c . <w> jjt Set Parent </w> ( n ) ; n . <w> jjt Add Child </w> ( c , a ) ; } n . <w> jjt Close </w> ( ) ; <w> push Node </w> ( n ) ; <w> node _ created </w> = true ; } else { mk = marks . remove ( marks . size ( ) - 1 ) ; <w> node _ created </w> = false ; } }", "target": 0}
{"idx": 407, "func": "<comment> private static final int <w> DEFAULT _ INITIAL _ CAPACITY </w> = 10 ;", "target": 0}
{"idx": 408, "func": "public int <w> get Width </w> ( ) { LOG . debug ( <str-literal> <str-literal> <str-literal> + width ) ; return width ; }", "target": 0}
{"idx": 409, "func": "public int value ;", "target": 0}
{"idx": 410, "func": "private static List < <w> Range Value </w> > <w> get Range </w> ( String range ) { List < <w> Range Value </w> > ranges = new <w> Array List </w> < > ( ) ; for ( String token : range . split ( <str-literal> <str-literal> <str-literal> ) ) { if ( token . <w> starts With </w> ( <str-literal> <str-literal> <str-literal> ) ) { ranges . add ( new <w> Range Value </w> ( token . replace ( <str-literal> <str-literal> <str-literal> , <str-literal> <str-literal> ) , true ) ) ; } else if ( token . <w> starts With </w> ( <str-literal> <str-literal> <str-literal> ) ) { ranges . add ( new <w> Range Value </w> ( token . replace ( <str-literal> <str-literal> <str-literal> , <str-literal> <str-literal> ) , false ) ) ; } else if ( token . <w> ends With </w> ( <str-literal> <str-literal> <str-literal> ) ) { ranges . add ( new <w> Range Value </w> ( token . replace ( <str-literal> <str-literal> <str-literal> , <str-literal> <str-literal> ) , true ) ) ; } else if ( token . <w> ends With </w> ( <str-literal> <str-literal> <str-literal> ) ) { ranges . add ( new <w> Range Value </w> ( token . replace ( <str-literal> <str-literal> <str-literal> , <str-literal> <str-literal> ) , false ) ) ; } else if ( token . length ( ) < = 0 ) { ranges . add ( new <w> Range Value </w> ( <str-literal> <str-literal> , false ) ) ; } } if ( ranges . size ( ) < 2 ) { ranges . add ( new <w> Range Value </w> ( <str-literal> <str-literal> <str-literal> , false ) ) ; } return ranges ; }", "target": 1}
{"idx": 411, "func": "<comment> public <w> Default Profile Activation Context </w> <w> set Project Directory </w> ( File <w> project Directory </w> ) { this . <w> project Directory </w> = <w> project Directory </w> ; return this ; }", "target": 1}
{"idx": 412, "func": "<comment> public synchronized boolean <w> is Access To Underlying Connection Allowed </w> ( ) { return this . <w> access To Underlying Connection Allowed </w> ; }", "target": 0}
{"idx": 413, "func": "private byte [ ] key ;", "target": 1}
{"idx": 414, "func": "public void visit ( int <w> doc ID </w> ) { throw new <w> Illegal State Exception </w> ( <str-literal> <str-literal> <str-literal> ) ; }", "target": 0}
{"idx": 415, "func": "<comment> public int <w> is Valid </w> ( <w> Source Validity </w> <w> new Validity </w> ) { if ( uris = = null | | ! <w> is Closed </w> ) { <comment> return <w> Source Validity </w> . INVALID ; } <comment> if ( <w> new Validity </w> instanceof <w> Multi Source Validity </w> ) { return <w> compute Status </w> ( ( ( <w> Multi Source Validity </w> ) <w> new Validity </w> ) . resolver ) ; } else { <comment> return <w> Source Validity </w> . INVALID ; } }", "target": 1}
{"idx": 416, "func": "private final int bins ;", "target": 1}
{"idx": 417, "func": "private final static String CREATIONS = <str-literal> <str-literal> <str-literal> ;", "target": 1}
{"idx": 418, "func": "<comment> public void <w> return Worker </w> ( <w> Abstract Rx Task </w> worker ) { if ( running ) { synchronized ( mutex ) { used . remove ( worker ) ; <comment> if ( idle . size ( ) < <w> max Tasks </w> & & ! idle . contains ( worker ) ) idle . add ( worker ) ; <comment> else { worker . <w> set Do Run </w> ( false ) ; synchronized ( worker ) { worker . notify ( ) ; } } mutex . notify ( ) ; } } else { worker . <w> set Do Run </w> ( false ) ; synchronized ( worker ) { worker . notify ( ) ; } } }", "target": 1}
{"idx": 419, "func": "private final char [ ] expr ;", "target": 1}
{"idx": 420, "func": "private Duration offset = Duration . ZERO ;", "target": 0}
{"idx": 421, "func": "<comment> private static final String <w> STRING _ SHOWBOLDNAMES </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 422, "func": "<comment> private String <w> system Id For Caching </w> ;", "target": 0}
{"idx": 423, "func": "@ Override protected List < <w> Query Node </w> > <w> set Children Order </w> ( List < <w> Query Node </w> > children ) throws <w> Query Node Exception </w> { return children ; }", "target": 1}
{"idx": 424, "func": "@ Test public void <w> no Schema To Json </w> ( ) { Map < String , Boolean > props = Collections . <w> singleton Map </w> ( <str-literal> <str-literal> <str-literal> , false ) ; converter . configure ( props , true ) ; <w> Json Node </w> converted = parse ( converter . <w> from Connect Data </w> ( TOPIC , null , true ) ) ; <w> assert True </w> ( converted . <w> is Boolean </w> ( ) ) ; <w> assert Equals </w> ( true , converted . <w> boolean Value </w> ( ) ) ; }", "target": 1}
{"idx": 425, "func": "private final boolean <w> observes Window </w> ;", "target": 0}
{"idx": 426, "func": "public double <w> get Constraint Error </w> ( ) { update ( ) ; return <w> constraint Error </w> ; }", "target": 1}
{"idx": 427, "func": "<comment> public final long <w> sum Total Term Freq </w> ( ) { return <w> sum Total Term Freq </w> ; }", "target": 0}
{"idx": 428, "func": "<comment> private static List < Decision > <w> unspecified Decision </w> ;", "target": 1}
{"idx": 429, "func": "public File <w> get Deploy Dir File </w> ( ) { if ( <w> deploy Dir File </w> ! = null ) return <w> deploy Dir File </w> ; File dir = <w> get Absolute Path </w> ( <w> get Deploy Dir </w> ( ) ) ; this . <w> deploy Dir File </w> = dir ; return dir ; }", "target": 1}
{"idx": 430, "func": "@ Override public byte [ ] <w> get Max Packed Value </w> ( String <w> field Name </w> ) throws <w> IO Exception </w> { Info info = fields . get ( <w> field Name </w> ) ; if ( info = = null ) { return null ; } <w> Bytes Ref </w> [ ] values = info . <w> point Values </w> ; if ( values ! = null ) { return info . <w> max Packed Value </w> ; } else { return null ; } }", "target": 1}
{"idx": 431, "func": "<comment> public static final String <w> KT _ CORRECTNESS </w> = Translator . localize ( <str-literal> <str-literal> <str-literal> ) ;", "target": 0}
{"idx": 432, "func": "private int iterations = <w> get Default Iterations </w> ( ) ;", "target": 1}
{"idx": 433, "func": "<comment> public byte [ ] <w> get Unique Id </w> ( ) ;", "target": 1}
{"idx": 434, "func": "<comment> private long first = Long . <w> MIN _ VALUE </w> ;", "target": 0}
{"idx": 435, "func": "abstract Builder < K , V > <w> set Input Format Key Class </w> ( <w> Type Descriptor </w> < ? > <w> input Format Key Class </w> ) ;", "target": 1}
{"idx": 436, "func": "<comment> private static final int <w> DOC _ COMMENT _ TAGS </w> = 1 ;", "target": 1}
{"idx": 437, "func": "@ Override public <w> Model Building Request </w> <w> set Model Building Listener </w> ( <w> Model Building Listener </w> <w> model Building Listener </w> ) { request . <w> set Model Building Listener </w> ( <w> model Building Listener </w> ) ; return this ; }", "target": 1}
{"idx": 438, "func": "public void get ( Collection < ? extends <w> Artifact Download </w> > <w> artifact Downloads </w> Collection < ? extends <w> Metadata Download </w> > <w> metadata Downloads </w> ) { if ( <w> artifact Downloads </w> ! = null ) { for ( <w> Artifact Download </w> download : <w> artifact Downloads </w> ) { File <w> remote File </w> = new File ( basedir , path ( download . <w> get Artifact </w> ( ) ) ) ; try { <w> File Utils </w> . <w> copy File </w> ( <w> remote File </w> , download . <w> get File </w> ( ) ) ; } catch ( <w> IO Exception </w> e ) { if ( ! <w> remote File </w> . exists ( ) ) { download . <w> set Exception </w> ( new <w> Artifact Not Found Exception </w> ( download . <w> get Artifact </w> ( ) , repository ) ) ; } else { download . <w> set Exception </w> ( new <w> Artifact Transfer Exception </w> ( download . <w> get Artifact </w> ( ) , repository , e ) ) ; } } } } }", "target": 1}
{"idx": 439, "func": "<comment> int <w> num Follow Floor Blocks </w> ;", "target": 0}
{"idx": 440, "func": "private int <w> free Blocks </w> = 0 ;", "target": 1}
{"idx": 441, "func": "<comment> final int <w> num Dims </w> ;", "target": 0}
{"idx": 442, "func": "@ Override public Void get ( long timeout , <w> Time Unit </w> unit ) throws <w> Interrupted Exception </w> , <w> Execution Exception </w> , <w> Timeout Exception </w> { return null ; }", "target": 1}
{"idx": 443, "func": "@ Override public String <w> to Source </w> ( int depth ) { return <w> make Indent </w> ( depth ) + <str-literal> <str-literal> <str-literal> + value + <str-literal> <str-literal> <str-literal> + ( flags = = null ? <str-literal> <str-literal> : flags ) ; }", "target": 0}
{"idx": 444, "func": "@ Override public void <w> set Relative </w> ( ) { Instant target ; Instant now = <w> get Current Time </w> ( ) ; if ( period . equals ( Duration . ZERO ) ) { target = now . plus ( offset ) ; } else { long <w> millis Since Start </w> = now . plus ( offset ) . <w> get Millis </w> ( ) % period . <w> get Millis </w> ( ) ; target = <w> millis Since Start </w> = = 0 ? now : now . plus ( period ) . minus ( <w> millis Since Start </w> ) ; } target = <w> min Target And Gc Time </w> ( target ) ; <w> set Underlying Timer </w> ( target ) ; }", "target": 0}
{"idx": 445, "func": "private volatile int <w> num Pending </w> = 0 ;", "target": 0}
{"idx": 446, "func": "<comment> public static final Schema [ ] <w> WRITE _ TXN _ RESPONSE </w> = { <w> WRITE _ TXN _ MARKERS _ RESPONSE _ V 0 </w> } ;", "target": 1}
{"idx": 447, "func": "<comment> public boolean invoke ( Environment env , <w> Invoke Context </w> context ) throws Exception { return true ; }", "target": 0}
{"idx": 448, "func": "@ Override public void to ( Serde < K > <w> key Serde </w> , Serde < V > <w> val Serde </w> , <w> Stream Partitioner </w> < ? super K , ? super V > partitioner , String topic ) { this . <w> to Stream </w> ( ) . to ( <w> key Serde </w> , <w> val Serde </w> , partitioner , topic ) ; }", "target": 1}
{"idx": 449, "func": "private final static int <w> NUM _ BROKERS </w> = 1 ;", "target": 0}
{"idx": 450, "func": "<comment> public static final String <w> ACTION _ PERSPECTIVE _ CONFIG </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 451, "func": "private static final List < String > <w> empty String </w> = Collections . <w> empty List </w> ( ) ;", "target": 1}
{"idx": 452, "func": "<comment> private final static String [ ] OPNAME = new String [ ] { <str-literal> <str-literal> <str-literal> , <str-literal> <str-literal> <str-literal> , <str-literal> <str-literal> <str-literal> } ;", "target": 1}
{"idx": 453, "func": "<comment> private long <w> soft Min Evictable Idle Time Millis </w> = <w> Base Object Pool Config </w> . <w> DEFAULT _ SOFT _ MIN _ EVICTABLE _ IDLE _ TIME _ MILLIS </w> ;", "target": 0}
{"idx": 454, "func": "private static final <w> Break Iterator </w> <w> LINE _ BI </w> = <w> Break Iterator </w> . <w> get Line Instance </w> ( Locale . ROOT ) ;", "target": 0}
{"idx": 455, "func": "private final static String FILTERS = <str-literal> <str-literal> <str-literal> ;", "target": 1}
{"idx": 456, "func": "<comment> public int <w> get Start Offset </w> ( ) { return <w> match Start Offset </w> ; }", "target": 0}
{"idx": 457, "func": "<comment> public static <w> Control Enable State </w> disable ( Control w ) { return new <w> Control Enable State </w> ( w ) ; }", "target": 1}
{"idx": 458, "func": "<comment> public static final byte <w> JK _ AJP 13 _ SEND _ BODY _ CHUNK </w> = 3 ;", "target": 0}
{"idx": 459, "func": "public int size ( ) { return fields . size ( ) ; }", "target": 0}
{"idx": 460, "func": "int [ ] <w> is Reached </w> ;", "target": 1}
{"idx": 461, "func": "@ Override public Object <w> get Stats </w> ( ) throws <w> IO Exception </w> { return in . <w> get Stats </w> ( ) ; }", "target": 0}
{"idx": 462, "func": "<comment> <comment> public <w> Web Resource Root </w> <w> get Resources </w> ( ) { return this . resources ; }", "target": 1}
{"idx": 463, "func": "public <w> Abstract Processor </w> ( <w> Abstract Endpoint </w> < ? > endpoint ) { this ( endpoint , new Request ( ) , new Response ( ) ) ; }", "target": 0}
{"idx": 464, "func": "<comment> private final <w> Terms Enum With Slice </w> [ ] top ;", "target": 1}
{"idx": 465, "func": "Namespace <w> cast To Namespace </w> ( Object <w> namespace Obj </w> ) { if ( <w> namespace Obj </w> instanceof Namespace ) { return ( Namespace ) <w> namespace Obj </w> ; } return <w> construct Namespace </w> ( <w> namespace Obj </w> ) ; }", "target": 0}
{"idx": 466, "func": "public <w> Maven Execution Result </w> <w> set Topologically Sorted Projects </w> ( List < <w> Maven Project </w> > <w> topologically Sorted Projects </w> ) { this . <w> topologically Sorted Projects </w> = <w> topologically Sorted Projects </w> ; return this ; }", "target": 1}
{"idx": 467, "func": "private boolean <w> cache Scores </w> ;", "target": 0}
{"idx": 468, "func": "static void <w> to Source Impl </w> ( String prefix , String uri , <w> String Builder </w> sb ) { sb . append ( <str-literal> <str-literal> <str-literal> ) ; if ( uri . length ( ) = = 0 ) { if ( ! <str-literal> <str-literal> . equals ( prefix ) ) throw new <w> Illegal Argument Exception </w> ( prefix ) ; } else { sb . append ( <str-literal> ) ; if ( prefix ! = null ) { sb . append ( <w> Script Runtime </w> . <w> escape String </w> ( prefix , <str-literal> ) ) ; sb . append ( <str-literal> <str-literal> <str-literal> ) ; } sb . append ( <w> Script Runtime </w> . <w> escape String </w> ( uri , <str-literal> ) ) ; sb . append ( <str-literal> ) ; } sb . append ( <str-literal> ) ; }", "target": 1}
{"idx": 469, "func": "private <w> Pending Term </w> <w> last Pending Term </w> ;", "target": 0}
{"idx": 470, "func": "@ Override protected Icon [ ] <w> get Icons </w> ( ) { if ( Model . <w> get Model Management Helper </w> ( ) . <w> is Read Only </w> ( <w> get Content </w> ( ) . <w> get Owner </w> ( ) ) ) { return new Icon [ ] { null , dep , <w> dep Right </w> , null , null } ; } return icons ; }", "target": 1}
{"idx": 471, "func": "public void <w> To Source </w> ( <w> String Builder </w> sb ) { sb . append ( <str-literal> <str-literal> <str-literal> ) ; Expressions . <w> To Source </w> ( sb ) ; sb . append ( <str-literal> <str-literal> <str-literal> ) ; }", "target": 1}
{"idx": 472, "func": "<comment> static final <w> Bytes Ref </w> PAYLOADS = new <w> Bytes Ref </w> ( <str-literal> <str-literal> <str-literal> ) ;", "target": 1}
{"idx": 473, "func": "<comment> @ Override @ Deprecated public Enumeration < Servlet > <w> get Servlets </w> ( ) { return new Vector < Servlet > ( ) . elements ( ) ; }", "target": 0}
{"idx": 474, "func": "final String <w> transformation Name </w> ;", "target": 0}
{"idx": 475, "func": "<comment> private boolean <w> clear References Rmi Targets </w> = true ;", "target": 0}
{"idx": 476, "func": "<comment> void <w> validate Partition Exists </w> ( final <w> Topic Partition </w> <w> topic Partition </w> , final String <w> store Name </w> ) ;", "target": 1}
{"idx": 477, "func": "private static final int <w> STREAM _ THREE _ PARTITIONS </w> = 4 ;", "target": 1}
{"idx": 478, "func": "protected List < <w> Query Node </w> > <w> set Children Order </w> ( List < <w> Query Node </w> > children ) throws <w> Query Node Exception </w> { return children ; }", "target": 1}
{"idx": 479, "func": "private final static int <w> NUM _ FIELDS </w> = 4 ;", "target": 0}
{"idx": 480, "func": "public void <w> To Source </w> ( <w> String Builder </w> sb ) { if ( attributes ! = null ) { attributes . <w> To Source </w> ( sb ) ; this . <w> New Line </w> ( sb ) ; } this . <w> Trace Modifiers </w> ( this . modifiers , sb ) ; this . type . <w> To Source </w> ( sb ) ; sb . append ( <str-literal> <str-literal> <str-literal> ) ; if ( params ! = null ) { params . <w> To Source </w> ( sb ) ; } sb . append ( <str-literal> <str-literal> <str-literal> ) ; if ( <w> has Getter </w> ) { sb . append ( <str-literal> <str-literal> <str-literal> ) ; } if ( <w> has Setter </w> ) { sb . append ( <str-literal> <str-literal> <str-literal> ) ; } sb . append ( <str-literal> <str-literal> <str-literal> ) ; }", "target": 1}
{"idx": 481, "func": "<comment> public static native int destroy ( long mutex ) ;", "target": 0}
{"idx": 482, "func": "<comment> private void <w> ensure Directed Association </w> ( Object <w> from Cls </w> , Object <w> to Cls </w> ) { String <w> from Name </w> = Model . <w> get Facade </w> ( ) . <w> get Name </w> ( <w> from Cls </w> ) ; String <w> to Name </w> = Model . <w> get Facade </w> ( ) . <w> get Name </w> ( <w> to Cls </w> ) ; Object <w> assoc End </w> = null ; for ( Iterator i = Model . <w> get Facade </w> ( ) . <w> get Association Ends </w> ( <w> to Cls </w> ) . iterator ( ) ; i . <w> has Next </w> ( ) ; ) { Object ae = i . next ( ) ; Object assoc = Model . <w> get Facade </w> ( ) . <w> get Association </w> ( ae ) ; if ( Model . <w> get Facade </w> ( ) . <w> get Connections </w> ( assoc ) . size ( ) = = 2 & & Model . <w> get Facade </w> ( ) . <w> get Type </w> ( Model . <w> get Facade </w> ( ) . <w> get Next End </w> ( ae ) ) = = <w> from Cls </w> & & Model . <w> get Facade </w> ( ) . <w> get Name </w> ( ae ) = = null & & Model . <w> get Facade </w> ( ) . <w> is Navigable </w> ( ae ) ) { <w> assoc End </w> = ae ; } } if ( <w> assoc End </w> = = null ) { String <w> assoc Name </w> = <w> from Name </w> + <str-literal> <str-literal> <str-literal> + <w> to Name </w> ; Modeller . <w> build Directed Association </w> ( <w> assoc Name </w> , <w> from Cls </w> , <w> to Cls </w> ) ; } }", "target": 1}
{"idx": 483, "func": "<comment> public static final Schema [ ] <w> WRITE _ TXN _ REQUEST </w> = { <w> WRITE _ TXN _ MARKERS _ REQUEST _ V 0 </w> } ;", "target": 1}
{"idx": 484, "func": "<comment> public static final String <w> ACTION _ OPEN _ DECISIONS </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 485, "func": "public <w> String Buffer </w> <w> get Request URL </w> ( ) { <comment> throw new <w> Unsupported Operation Exception </w> ( ) ; }", "target": 1}
{"idx": 486, "func": "private static final String <w> ILLEGAL _ VERSION _ CHARS </w> = <w> ILLEGAL _ FS _ CHARS </w> ;", "target": 1}
{"idx": 487, "func": "<comment> protected volatile byte [ ] command = new byte [ 0 ] ;", "target": 0}
{"idx": 488, "func": "private Namespace <w> construct Namespace </w> ( ) { return <w> new Namespace </w> ( <str-literal> <str-literal> , <str-literal> <str-literal> ) ; }", "target": 0}
{"idx": 489, "func": "public <w> Block Statement </w> statements = new <w> Block Statement </w> ( ) ;", "target": 1}
{"idx": 490, "func": "public List <w> get Expansion </w> ( ) { return <w> f Expansion </w> ; }", "target": 1}
{"idx": 491, "func": "static final int <w> MAXIMUM _ PAGE _ SIZE _ BYTES </w> = 1 < < 27 ;", "target": 0}
{"idx": 492, "func": "private void <w> check Popup </w> ( <w> Mouse Event </w> e ) { if ( e . <w> is Popup Trigger </w> ( ) ) { popup . show ( this , e . <w> get X </w> ( ) , e . <w> get Y </w> ( ) ) ; } }", "target": 1}
{"idx": 493, "func": "<comment> public static final <w> Configuration Key </w> <w> KEY _ SHOW _ BOLD _ NAMES </w> = Configuration . <w> make Key </w> ( <str-literal> <str-literal> <str-literal> , <str-literal> <str-literal> <str-literal> , <str-literal> <str-literal> <str-literal> , <str-literal> <str-literal> <str-literal> ) ;", "target": 0}
{"idx": 494, "func": "<comment> public void <w> to SAX </w> ( <w> Content Handler </w> handler ) throws <w> SAX Exception </w> { Object obj = <w> get Input Attribute </w> ( this . <w> attribute Type </w> , this . <w> attribute Name </w> ) ; if ( obj = = null ) throw new <w> SAX Exception </w> ( <str-literal> <str-literal> <str-literal> + this . <w> attribute Name </w> + <str-literal> <str-literal> <str-literal> ) ; if ( ! ( this . <w> x Path </w> . length ( ) = = 0 | | this . <w> x Path </w> . equals ( <str-literal> <str-literal> <str-literal> ) ) ) { <w> JX Path Context </w> context = <w> JX Path Context </w> . <w> new Context </w> ( obj ) ; obj = context . <w> get Pointer </w> ( this . <w> x Path </w> ) . <w> get Node </w> ( ) ; if ( obj = = null ) throw new <w> SAX Exception </w> ( <str-literal> <str-literal> <str-literal> + this . <w> x Path </w> + <str-literal> <str-literal> <str-literal> + this . <w> attribute Name </w> + <str-literal> <str-literal> <str-literal> ) ; } if ( obj instanceof Document ) { <w> DOM Streamer </w> <w> dom Streamer </w> = new <w> DOM Streamer </w> ( handler ) ; <w> dom Streamer </w> . stream ( ( Document ) obj ) ; } else if ( obj instanceof Node ) { <w> DOM Streamer </w> <w> dom Streamer </w> = new <w> DOM Streamer </w> ( handler ) ; handler . <w> start Document </w> ( ) ; <w> dom Streamer </w> . stream ( ( Node ) obj ) ; handler . <w> end Document </w> ( ) ; } else if ( obj instanceof <w> XM Lizable </w> ) { ( ( <w> XM Lizable </w> ) obj ) . <w> to SAX </w> ( handler ) ; } else { throw new <w> SAX Exception </w> ( <str-literal> <str-literal> <str-literal> + obj . <w> get Class </w> ( ) + <str-literal> <str-literal> <str-literal> + obj ) ; } }", "target": 1}
{"idx": 495, "func": "<comment> public long <w> total Time MS </w> ;", "target": 0}
{"idx": 496, "func": "private final int flags ;", "target": 1}
{"idx": 497, "func": "public String <w> get Goal </w> ( ) { if ( <w> mojo Descriptor </w> ! = null ) { return <w> mojo Descriptor </w> . <w> get Goal </w> ( ) ; } return goal ; }", "target": 0}
{"idx": 498, "func": "<comment> public static final String <w> DEFAULT _ VALUE _ SERDE _ CLASS _ CONFIG </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 499, "func": "<comment> private long <w> soft Min Evictable Idle Time Millis </w> = <w> DEFAULT _ MIN _ EVICTABLE _ IDLE _ TIME _ MILLIS </w> ;", "target": 0}
{"idx": 500, "func": "<comment> private final <w> Phrase Queue </w> pq ;", "target": 0}
{"idx": 501, "func": "<comment> protected Map <w> object Model </w> ;", "target": 1}
{"idx": 502, "func": "private final int <w> max Pairs </w> ;", "target": 1}
{"idx": 503, "func": "<comment> public static byte [ ] <w> get Bytes Utf 8 </w> ( final String string ) { return <w> get Bytes </w> ( string , <w> Standard Charsets </w> . <w> UTF _ 8 </w> ) ; }", "target": 0}
{"idx": 504, "func": "<comment> private static final long <w> MASK _ LONG _ UPPER _ 24 _ BITS </w> = ~ <w> MASK _ LONG _ LOWER _ 40 _ BITS </w> ;", "target": 0}
{"idx": 505, "func": "<comment> public static void <w> set Info Stream </w> ( <w> Print Stream </w> <w> info Stream </w> ) { <w> Segment Infos </w> . <w> info Stream </w> = <w> info Stream </w> ; }", "target": 0}
{"idx": 506, "func": "<comment> private int <w> added Values </w> ;", "target": 1}
{"idx": 507, "func": "<comment> void <w> set Dense Only </w> ( boolean <w> dense Only </w> ) { if ( <w> dense Only </w> & & ! this . <w> dense Only </w> ) throw new <w> Illegal Argument Exception </w> ( ) ; this . <w> dense Only </w> = <w> dense Only </w> ; }", "target": 0}
{"idx": 508, "func": "@ Override public <w> Maven Execution Request </w> <w> set Plugin Groups </w> ( List < String > <w> plugin Groups </w> ) { if ( <w> plugin Groups </w> ! = null ) { this . <w> plugin Groups </w> = new <w> Array List </w> < > ( <w> plugin Groups </w> ) ; } else { this . <w> plugin Groups </w> = null ; } return this ; }", "target": 1}
{"idx": 509, "func": "public <w> Project Builder Configuration </w> <w> set Build Start Time </w> ( Date <w> build Start Time </w> ) { this . <w> build Start Time </w> = <w> build Start Time </w> ; return this ; }", "target": 1}
{"idx": 510, "func": "<comment> public static final String <w> RECONNECT _ BACKOFF _ MAX _ MS _ CONFIG </w> = <w> Common Client Configs </w> . <w> RECONNECT _ BACKOFF _ MAX _ MS _ CONFIG </w> ;", "target": 0}
{"idx": 511, "func": "<comment> public String <w> get Request URI </w> ( ) { if ( this . environment = = null ) { return <w> request URI </w> ; } return this . environment . <w> get URI </w> ( ) ; }", "target": 0}
{"idx": 512, "func": "<comment> public void <w> set Function Name </w> ( Name name ) { <w> function Name </w> = name ; if ( name ! = null ) name . <w> set Parent </w> ( this ) ; }", "target": 0}
{"idx": 513, "func": "@ Override public void <w> set Int Header </w> ( String name , int value ) { super . <w> set Int Header </w> ( name , value ) ; <w> check Header </w> ( name ) ; }", "target": 0}
{"idx": 514, "func": "<comment> public static final Schema [ ] <w> INIT _ PRODUCER _ ID _ RESPONSE </w> = { <w> INIT _ PRODUCER _ ID _ RESPONSE _ V 0 </w> } ;", "target": 1}
{"idx": 515, "func": "<comment> public static final int <w> SSL _ OP _ DONT _ INSERT _ EMPTY _ FRAGMENTS </w> = 0x00000800 ;", "target": 1}
{"idx": 516, "func": "<comment> private String <w> generate All Parts </w> ( <w> String Buffer </w> [ ] parts ) { <w> String Buffer </w> sb = new <w> String Buffer </w> ( ) ; <comment> for ( int i = 0 ; i < <w> ALL _ PARTS </w> . length ; i + + ) { if ( parts [ i ] . <w> to String </w> ( ) . trim ( ) . length ( ) > 0 ) { if ( <w> generator Pass </w> ! = <w> SOURCE _ PASS </w> ) { if ( i ! = 0 ) sb . append ( <w> LINE _ SEPARATOR </w> ) ; sb . append ( <str-literal> ) . append ( <w> PART _ NAME </w> [ i ] ) . append ( <str-literal> ) ; sb . append ( <w> LINE _ SEPARATOR </w> ) ; } sb . append ( parts [ i ] ) ; } } return sb . <w> to String </w> ( ) ; }", "target": 0}
{"idx": 517, "func": "@ Override public <w> Maven Execution Request </w> <w> set Profiles </w> ( List < Profile > profiles ) { if ( profiles ! = null ) { this . profiles = new <w> Array List </w> < > ( profiles ) ; } else { this . profiles = null ; } return this ; }", "target": 1}
{"idx": 518, "func": "@ Override public void to ( Serde < K > <w> key Serde </w> , Serde < V > <w> val Serde </w> , String topic ) { to ( <w> key Serde </w> , <w> val Serde </w> , null , topic ) ; }", "target": 1}
{"idx": 519, "func": "<comment> public static final String <w> MAX _ POLL _ INTERVAL _ MS _ CONFIG </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 520, "func": "<comment> protected <w> Array List </w> <w> need Resolve </w> = new <w> Array List </w> ( ) ;", "target": 1}
{"idx": 521, "func": "<comment> private final Map < String , String > <w> store To Changelog Topic </w> = new <w> Hash Map </w> < > ( ) ;", "target": 0}
{"idx": 522, "func": "<comment> private final Map < Short , <w> Api Version </w> > <w> api Key To Api Version </w> ;", "target": 0}
{"idx": 523, "func": "<comment> public static final int SUPERCLASS = 13 ;", "target": 0}
{"idx": 524, "func": "<comment> protected void decode ( <w> Bytes Ref </w> buf , <w> Ints Ref </w> ordinals ) { <comment> <comment> <comment> if ( ordinals . ints . length < buf . length ) { ordinals . ints = <w> Array Util </w> . grow ( ordinals . ints , buf . length ) ; } ordinals . offset = 0 ; ordinals . length = 0 ; <comment> <comment> int upto = buf . offset + buf . length ; int value = 0 ; int offset = buf . offset ; int prev = 0 ; while ( offset < upto ) { byte b = buf . bytes [ offset + + ] ; if ( b > = 0 ) { ordinals . ints [ ordinals . length ] = ( ( value < < 7 ) | b ) + prev ; value = 0 ; prev = ordinals . ints [ ordinals . length ] ; ordinals . length + + ; } else { value = ( value < < 7 ) | ( b & 0x7f ) ; } } }", "target": 0}
{"idx": 525, "func": "@ Override public <w> String Buffer </w> <w> get Request URL </w> ( ) { throw new <w> Runtime Exception </w> ( <str-literal> <str-literal> <str-literal> ) ; }", "target": 0}
{"idx": 526, "func": "@ Override public void <w> get Bounds </w> ( Bounds bounds ) { super . <w> get Bounds </w> ( bounds ) ; bounds . <w> add Vertical Plane </w> ( <w> planet Model </w> , longitude , plane , <w> bounding Plane </w> ) . <w> add Point </w> ( <w> planet Model </w> . <w> NORTH _ POLE </w> ) . <w> add Point </w> ( <w> planet Model </w> . <w> SOUTH _ POLE </w> ) ; }", "target": 1}
{"idx": 527, "func": "public static final char <w> ACTIVATE _ PROFILES </w> = <str-literal> ;", "target": 1}
{"idx": 528, "func": "<comment> private static final Map < String , Long > <w> parse Cache </w> = new <w> Concurrent Hash Map </w> < > ( <w> CACHE _ SIZE </w> ) ;", "target": 0}
{"idx": 529, "func": "<comment> private final Date <w> current Date </w> = new Date ( ) ;", "target": 0}
{"idx": 530, "func": "@ Override public boolean <w> has Payloads </w> ( ) { return <w> field Info </w> . <w> has Payloads </w> ( ) ; }", "target": 0}
{"idx": 531, "func": "public String <w> get Class Path </w> ( ) { if ( <w> class Path </w> ! = null ) return <w> class Path </w> ; return System . <w> get Property </w> ( <str-literal> <str-literal> <str-literal> ) ; }", "target": 0}
{"idx": 532, "func": "<comment> public void <w> return Component Logger </w> ( String role , String hint ) { }", "target": 1}
{"idx": 533, "func": "private static Object <w> set Length Property </w> ( Context cx , Scriptable target , long length ) { Object len = <w> Script Runtime </w> . <w> wrap Number </w> ( length ) ; <w> Scriptable Object </w> . <w> put Property </w> ( target , <str-literal> <str-literal> <str-literal> , len ) ; return len ; }", "target": 1}
{"idx": 534, "func": "<comment> public static final String <w> DEFAULT _ TIMESTAMP _ EXTRACTOR _ CLASS _ CONFIG </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 535, "func": "<comment> protected Map < String , <w> Single Sign On Entry </w> > cache = new <w> Concurrent Hash Map </w> < > ( ) ;", "target": 0}
{"idx": 536, "func": "@ Override public void checkpoint ( final Map < <w> Topic Partition </w> , Long > offsets ) { <w> checkpointable Offsets </w> . <w> put All </w> ( offsets ) ; if ( ! <w> checkpointable Offsets </w> . <w> is Empty </w> ( ) ) { try { checkpoint . write ( <w> checkpointable Offsets </w> ) ; } catch ( <w> IO Exception </w> e ) { log . warn ( <str-literal> <str-literal> <str-literal> , e ) ; } } }", "target": 0}
{"idx": 537, "func": "<comment> private long <w> free Memory </w> ( ) { <w> update Peak Memory Used </w> ( ) ; long <w> memory Freed </w> = 0 ; for ( <w> Memory Block </w> block : <w> allocated Pages </w> ) { <w> memory Freed </w> + = block . size ( ) ; <w> free Page </w> ( block ) ; } <w> allocated Pages </w> . clear ( ) ; <w> current Page </w> = null ; <w> page Cursor </w> = 0 ; return <w> memory Freed </w> ; }", "target": 0}
{"idx": 538, "func": "static <w> Big Decimal </w> bytes = new <w> Big Decimal </w> ( 32871 ) ;", "target": 1}
{"idx": 539, "func": "@ Override public <w> Maven Execution Request </w> <w> set Start Time </w> ( Date <w> start Time </w> ) { this . <w> start Time </w> = <w> start Time </w> ; return this ; }", "target": 1}
{"idx": 540, "func": "<comment> @ Override public void <w> remove Notification Listener </w> ( <w> Notification Listener </w> listener ) throws <w> Listener Not Found Exception </w> { broadcaster . <w> remove Notification Listener </w> ( listener ) ; }", "target": 0}
{"idx": 541, "func": "private File settings ;", "target": 1}
{"idx": 542, "func": "public void <w> To Source </w> ( <w> String Builder </w> sb ) { sb . append ( <str-literal> <str-literal> <str-literal> ) ; Expression . <w> To Source </w> ( sb ) ; sb . append ( <str-literal> <str-literal> <str-literal> ) ; }", "target": 1}
{"idx": 543, "func": "private static final <w> Byte Buffer </w> <w> TP 1 _ KEY </w> = buffer ( <str-literal> <str-literal> <str-literal> ) ;", "target": 1}
{"idx": 544, "func": "private final <w> Two Phase Iterator </w> <w> child Two Phase </w> ;", "target": 0}
{"idx": 545, "func": "<comment> protected final <w> State Serdes </w> < K , V > serdes ;", "target": 0}
{"idx": 546, "func": "private long <w> last Encoded Version </w> ;", "target": 0}
{"idx": 547, "func": "<comment> @ Override public Iterator < <w> Channel Interceptor </w> > <w> get Interceptors </w> ( ) { return new <w> Interceptor Iterator </w> ( this . <w> get Next </w> ( ) , this . coordinator ) ; }", "target": 0}
{"idx": 548, "func": "private static final <w> Synchronized Stack </w> < <w> EL Parser </w> > <w> parser Cache </w> = new <w> Synchronized Stack </w> < > ( ) ;", "target": 0}
{"idx": 549, "func": "public <w> Terms Enum With Slice </w> ( int index , <w> Reader Slice </w> <w> sub Slice </w> ) { this . <w> sub Slice </w> = <w> sub Slice </w> ; this . index = index ; assert <w> sub Slice </w> . length > = 0 : <str-literal> <str-literal> <str-literal> + <w> sub Slice </w> . length ; }", "target": 0}
{"idx": 550, "func": "<comment> public <w> M Bean Notification Info </w> [ ] <w> get Notification Info </w> ( ) { return notifier . <w> get Notification Info </w> ( ) ; }", "target": 0}
{"idx": 551, "func": "<comment> private Set < String > subscription ;", "target": 0}
{"idx": 552, "func": "<comment> protected final List < <w> Geo Point </w> > points ;", "target": 0}
{"idx": 553, "func": "private final int <w> client Max Window Bits </w> ;", "target": 0}
{"idx": 554, "func": "<comment> public void <w> checking Api Versions </w> ( String id ) { <w> Node Connection State </w> <w> node State </w> = <w> node State </w> ( id ) ; <w> node State </w> . state = <w> Connection State </w> . <w> CHECKING _ API _ VERSIONS </w> ; }", "target": 0}
{"idx": 555, "func": "public List < Profile > <w> get Default Profiles </w> ( ) { return Collections . <w> unmodifiable List </w> ( <w> default Profiles </w> ) ; }", "target": 0}
{"idx": 556, "func": "<comment> public String [ ] <w> token Image </w> ;", "target": 0}
{"idx": 557, "func": "<comment> public static < T > <w> Top Results </w> < T > <w> shortest Paths </w> ( FST < T > fst , FST . Arc < T > <w> from Node </w> , T <w> start Output </w> , Comparator < T > comparator , int <w> top N </w> , boolean <w> allow Empty String </w> ) throws <w> IO Exception </w> { <comment> <comment> <w> Top N Searcher </w> < T > searcher = new <w> Top N Searcher </w> < > ( fst , <w> top N </w> , <w> top N </w> , comparator ) ; <comment> <comment> searcher . <w> add Start Paths </w> ( <w> from Node </w> , <w> start Output </w> , <w> allow Empty String </w> , new <w> Ints Ref Builder </w> ( ) ) ; return searcher . search ( ) ; }", "target": 0}
{"idx": 558, "func": "private void <w> validate 20 Effective Plugin Dependencies </w> ( <w> Model Problem Collector </w> problems <w> Model Building Request </w> request ) { List < Dependency > dependencies = plugin . <w> get Dependencies </w> ( ) ; if ( ! dependencies . <w> is Empty </w> ( ) ) { String prefix = <str-literal> <str-literal> <str-literal> + plugin . <w> get Key </w> ( ) + <str-literal> <str-literal> <str-literal> ; Severity <w> err On 30 </w> = <w> get Severity </w> ( request , <w> Model Building Request </w> . <w> VALIDATION _ LEVEL _ MAVEN _ 3 _ 0 </w> ) ; for ( Dependency d : dependencies ) { <w> validate Effective Dependency </w> ( problems , d , false , prefix , request ) ; <w> validate Version </w> ( prefix + <str-literal> <str-literal> <str-literal> , problems , <w> err On 30 </w> , Version . BASE , d . <w> get Version </w> ( ) , d . <w> get Management Key </w> ( ) , d ) ; <w> validate Enum </w> ( prefix + <str-literal> <str-literal> <str-literal> , problems , <w> err On 30 </w> , Version . BASE , d . <w> get Scope </w> ( ) , d . <w> get Management Key </w> ( ) , d , <str-literal> <str-literal> <str-literal> , <str-literal> <str-literal> <str-literal> , <str-literal> <str-literal> <str-literal> ) ; } } }", "target": 1}
{"idx": 559, "func": "private List < <w> Position Span </w> > <w> position Spans </w> = new <w> Array List </w> < > ( ) ;", "target": 0}
{"idx": 560, "func": "public static final Type RECORDS = new Type ( ) { @ Override public boolean <w> is Nullable </w> ( ) { return true ; }", "target": 1}
{"idx": 561, "func": "private static final long <w> COMMIT _ INTERVAL _ MS </w> = 300l ;", "target": 0}
{"idx": 562, "func": "public long <w> get Sum Doc Freq </w> ( ) { return <w> sum Doc Freq </w> ; }", "target": 0}
{"idx": 563, "func": "@ Override public <w> Maven Execution Request </w> <w> set System Properties </w> ( Properties properties ) { if ( properties ! = null ) { this . <w> system Properties </w> = new Properties ( ) ; this . <w> system Properties </w> . <w> put All </w> ( properties ) ; } else { this . <w> system Properties </w> = null ; } return this ; }", "target": 1}
{"idx": 564, "func": "<comment> public void <w> to SAX </w> ( <w> Content Handler </w> <w> content Handler </w> ) throws <w> SAX Exception </w> { for ( Iterator i = saxbits . iterator ( ) ; i . <w> has Next </w> ( ) ; ) { <w> Sax Bit </w> saxbit = ( <w> Sax Bit </w> ) i . next ( ) ; saxbit . send ( <w> content Handler </w> ) ; } }", "target": 1}
{"idx": 565, "func": "protected final <w> Active Window Set </w> < W > <w> active Windows </w> ;", "target": 0}
{"idx": 566, "func": "<comment> boolean <w> cache Expressions </w> ;", "target": 0}
{"idx": 567, "func": "<comment> public void reset ( ) throws <w> IO Exception </w> { }", "target": 1}
{"idx": 568, "func": "<comment> private static final byte [ ] <w> OFFSET _ KEY _ SERIALIZED </w> = <str-literal> <str-literal> <str-literal> . <w> get Bytes </w> ( ) ;", "target": 1}
{"idx": 569, "func": "public Object <w> set Body </w> ( Object handle ) { if ( handle instanceof Expression ) { ( ( Expression ) handle ) . <w> set Body </w> ( body ) ; return handle ; } throw new <w> Illegal Argument Exception </w> ( <str-literal> <str-literal> <str-literal> + handle + <str-literal> <str-literal> <str-literal> + body ) ; }", "target": 1}
{"idx": 570, "func": "<comment> public void <w> set Lower Case Names </w> ( boolean b ) { this . <w> lower Case Names </w> = b ; }", "target": 0}
{"idx": 571, "func": "protected final <w> Class Loader </w> loader ;", "target": 0}
{"idx": 572, "func": "public Object <w> set Body </w> ( Object handle return impl . <w> set Body </w> ( handle , body ) ; }", "target": 1}
{"idx": 573, "func": "@ Override public <w> App Configuration Entry </w> [ ] <w> get App Configuration Entry </w> ( String name ) { if ( this . <w> login Context Name </w> . equals ( name ) ) return <w> config Entries </w> . <w> to Array </w> ( new <w> App Configuration Entry </w> [ 0 ] ) ; else return null ; }", "target": 0}
{"idx": 574, "func": "static final int <w> SORTED _ SINGLE _ VALUED </w> = 1 ;", "target": 0}
{"idx": 575, "func": "@ Override public <w> Maven Execution Request </w> <w> set Local Repository Path </w> ( String <w> local Repository </w> ) { <w> local Repository Path </w> = ( <w> local Repository </w> ! = null ) ? new File ( <w> local Repository </w> ) : null ; return this ; }", "target": 1}
{"idx": 576, "func": "private String alias ;", "target": 0}
{"idx": 577, "func": "<comment> private Object <w> xml Bytes </w> ;", "target": 1}
{"idx": 578, "func": "@ Override public void <w> get Bounds </w> ( Bounds bounds ) { super . <w> get Bounds </w> ( bounds ) ; bounds . <w> add Horizontal Plane </w> ( <w> planet Model </w> , <w> top Lat </w> , <w> top Plane </w> ) ; }", "target": 1}
{"idx": 579, "func": "private Object [ ] <w> get Element For Row </w> ( int index ) { return ( Object [ ] ) elements . get ( index ) ; }", "target": 1}
{"idx": 580, "func": "<comment> private <w> J Button </w> <w> clear Tabs </w> = new <w> J Button </w> ( Translator . localize ( <str-literal> <str-literal> <str-literal> ) ) ;", "target": 1}
{"idx": 581, "func": "<comment> private static Hashtable < Class , List < Critic > > <w> get Critic Registry </w> ( ) { return <w> critic Registry </w> ; }", "target": 0}
{"idx": 582, "func": "private static final int iterations = 500000 ;", "target": 1}
{"idx": 583, "func": "<comment> public Enumeration <w> get Locales </w> ( ) { return Collections . enumeration ( Collections . singleton ( <w> get Locale </w> ( ) ) ) ; }", "target": 0}
{"idx": 584, "func": "@ Override public String <w> get Mechanism Name </w> ( ) { return <w> PLAIN _ MECHANISM </w> ; }", "target": 0}
{"idx": 585, "func": "private final <w> Atomic Integer </w> attempts = new <w> Atomic Integer </w> ( 0 ) ;", "target": 1}
{"idx": 586, "func": "public void <w> set Global Checksum Policy </w> ( String <w> checksum Policy </w> ) { <w> global Checksum Policy </w> = <w> checksum Policy </w> ; }", "target": 0}
{"idx": 587, "func": "protected static final Collection col ;", "target": 0}
{"idx": 588, "func": "<comment> public String <w> get Group Id </w> ( ) { return ( <w> group Id </w> ! = null ) ? <w> group Id </w> : <str-literal> <str-literal> ; }", "target": 0}
{"idx": 589, "func": "<comment> long <w> peak Net Bytes </w> = 0 ;", "target": 1}
{"idx": 590, "func": "<comment> private void <w> validate Associations </w> ( Object relation ) { Collection <w> association Ends </w> = Model . <w> get Facade </w> ( ) . <w> get Association Ends </w> ( relation ) ; Iterator it = <w> association Ends </w> . iterator ( ) ; while ( it . <w> has Next </w> ( ) ) { Object <w> relation Assoc End </w> = it . next ( ) ; Object association = Model . <w> get Facade </w> ( ) . <w> get Association </w> ( <w> relation Assoc End </w> ) ; <w> validate Association </w> ( association ) ; } }", "target": 1}
{"idx": 591, "func": "public final char [ ] ch ;", "target": 1}
{"idx": 592, "func": "private final int <w> server Max Window Bits </w> ;", "target": 0}
{"idx": 593, "func": "<comment> protected final <w> X Byte Buffer </w> ackbuf = new <w> X Byte Buffer </w> ( Constants . <w> ACK _ COMMAND </w> . length , true ) ;", "target": 0}
{"idx": 594, "func": "<comment> protected void <w> ensure Open </w> ( ) throws <w> Already Closed Exception </w> { }", "target": 0}
{"idx": 595, "func": "public final int [ ] input ;", "target": 1}
{"idx": 596, "func": "<comment> public boolean <w> save URL </w> ( URL url ) { <comment> return false ; }", "target": 1}
{"idx": 597, "func": "public <w> Project Builder Configuration </w> <w> set Execution Properties </w> ( Properties <w> execution Properties </w> ) { this . <w> execution Properties </w> = <w> execution Properties </w> ; return this ; }", "target": 1}
{"idx": 598, "func": "public String <w> get Artifact Id </w> ( ) { if ( <w> artifact Id </w> ! = null ) { return <w> artifact Id </w> ; } else { return artifact . <w> get Artifact Id </w> ( ) ; } }", "target": 0}
{"idx": 599, "func": "<comment> public Collection < <w> Element Residence </w> > <w> get Element Residence </w> ( Object handle ) { try { if ( handle instanceof <w> Model Element </w> ) { return ( ( org . omg . uml . <w> Uml Package </w> ) ( ( <w> Model Element </w> ) handle ) . <w> ref Outermost Package </w> ( ) ) . <w> get Core </w> ( ) . <w> get A Resident Element Residence </w> ( ) . <w> get Element Residence </w> ( ( <w> Model Element </w> ) handle ) ; } } catch ( <w> Invalid Object Exception </w> e ) { throw new <w> Invalid Element Exception </w> ( e ) ; } throw new <w> Illegal Argument Exception </w> ( <str-literal> <str-literal> <str-literal> + handle ) ; }", "target": 1}
{"idx": 600, "func": "private final <w> Offset Storage Reader </w> reader ;", "target": 0}
{"idx": 601, "func": "private static final String <w> PROTO _ EXTENSION _ HOSTS </w> = <str-literal> <str-literal> <str-literal> ;", "target": 1}
{"idx": 602, "func": "<comment> public boolean <w> process Options </w> ( ) { return false ; }", "target": 1}
{"idx": 603, "func": "<comment> protected final <w> X Byte Buffer </w> ackbuf = new <w> X Byte Buffer </w> ( 128 , true ) ;", "target": 0}
{"idx": 604, "func": "<comment> private final int <w> max Graph Expansions </w> ;", "target": 0}
{"idx": 605, "func": "private static final boolean [ ] <w> IS _ HTTP _ PROTOCOL </w> = new boolean [ <w> ARRAY _ SIZE </w> ] ;", "target": 1}
{"idx": 606, "func": "<comment> protected boolean <w> is Writable </w> ( ) { return <w> Context Access Controller </w> . <w> is Writable </w> ( name ) ; }", "target": 0}
{"idx": 607, "func": "public void <w> to String </w> ( <w> String Buffer </w> value ) { value . append ( ch ) ; }", "target": 1}
{"idx": 608, "func": "private final Map < String , List < <w> Partition Info </w> > > <w> available Partitions By Topic </w> ;", "target": 0}
{"idx": 609, "func": "public static final String <w> PROXY _ SOCKS 4 </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 610, "func": "private java . util . List < java . lang . String > <w> strings _ column </w> ;", "target": 0}
{"idx": 611, "func": "private long <w> max Conn Lifetime Millis </w> = - 1 ;", "target": 0}
{"idx": 612, "func": "public boolean <w> get Oo B Inline </w> ( ) { return <w> oo B Inline </w> . <w> boolean Value </w> ( ) ; }", "target": 1}
{"idx": 613, "func": "<comment> public static final String <w> ACTION _ ALIGN _ V _ CENTERS </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 614, "func": "public void write ( byte [ ] b , int off , int len ) throws <w> IO Exception </w> { final long <w> start Time </w> = System . <w> nano Time </w> ( ) ; <w> output Stream </w> . write ( b , off , len ) ; <w> write Metrics </w> . <w> inc Write Time </w> ( System . <w> nano Time </w> ( ) - <w> start Time </w> ) ; }", "target": 0}
{"idx": 615, "func": "<comment> private final <w> Consumer Interceptors </w> < K , V > interceptors ;", "target": 0}
{"idx": 616, "func": "public String <w> get Cluster Name </w> ( ) { if ( <w> cluster Name </w> = = null & & container ! = null ) return container . <w> get Name </w> ( ) ; return <w> cluster Name </w> ; }", "target": 1}
{"idx": 617, "func": "boolean <w> set Value </w> ( Object value , Scriptable owner , Scriptable start ) { if ( setter = = null ) { if ( getter ! = null ) { if ( Context . <w> get Context </w> ( ) . <w> has Feature </w> ( Context . <w> FEATURE _ STRICT _ MODE </w> ) ) { <comment> <comment> throw <w> Script Runtime </w> . <w> type Error 1 </w> ( <str-literal> <str-literal> <str-literal> , name ) ; } <comment> <comment> return true ; } } else { Context cx = Context . <w> get Context </w> ( ) ; if ( setter instanceof <w> Member Box </w> ) { <w> Member Box </w> <w> native Setter </w> = ( <w> Member Box </w> ) setter ; Class < ? > <w> p Types </w> [ ] = <w> native Setter </w> . <w> arg Types </w> ; <comment> <comment> Class < ? > <w> value Type </w> = <w> p Types </w> [ <w> p Types </w> . length - 1 ] ; int tag = <w> Function Object </w> . <w> get Type Tag </w> ( <w> value Type </w> ) ; Object <w> actual Arg </w> = <w> Function Object </w> . <w> convert Arg </w> ( cx , start , value , tag ) ; Object <w> setter This </w> ; Object [ ] args ; if ( <w> native Setter </w> . <w> delegate To </w> = = null ) { <w> setter This </w> = start ; args = new Object [ ] { <w> actual Arg </w> } ; } else { <w> setter This </w> = <w> native Setter </w> . <w> delegate To </w> ; args = new Object [ ] { start , <w> actual Arg </w> } ; } <w> native Setter </w> . invoke ( <w> setter This </w> , args ) ; } else if ( setter instanceof Function ) { Function f = ( Function ) setter ; f . call ( cx , f . <w> get Parent Scope </w> ( ) , start , new Object [ ] { value } ) ; } return true ; } return super . <w> set Value </w> ( value , owner , start ) ; }", "target": 1}
{"idx": 618, "func": "public static final String THREADS = <str-literal> <str-literal> <str-literal> ;", "target": 1}
{"idx": 619, "func": "public void <w> To Source </w> ( <w> String Builder </w> sb ) { if ( attributes ! = null ) { attributes . <w> To Source </w> ( sb ) ; this . <w> New Line </w> ( sb ) ; } this . <w> Trace Modifiers </w> ( this . modifiers , sb ) ; this . type . <w> To Source </w> ( sb ) ; sb . append ( <str-literal> <str-literal> ) ; String comma = <str-literal> <str-literal> ; for ( int i = 0 ; i < this . names . size ( ) ; i + + ) { sb . append ( comma ) ; comma = <str-literal> <str-literal> <str-literal> ; this . names . get ( i ) . <w> To Source </w> ( sb ) ; } if ( this . Value ! = null ) { sb . append ( <str-literal> <str-literal> <str-literal> ) ; this . Value . <w> To Source </w> ( sb ) ; } sb . append ( <str-literal> <str-literal> <str-literal> ) ; this . <w> New Line </w> ( sb ) ; }", "target": 1}
{"idx": 620, "func": "public static final String <w> FILE _ DELETE _ DELAY _ MS _ CONFIG </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 621, "func": "@ Override public double <w> get Radius </w> ( ) { <comment> <comment> if ( <w> bottom Lat </w> < 0.0 ) return Math . PI ; double <w> max Cos Lat </w> = <w> cos Bottom Lat </w> ; return <w> max Cos Lat </w> * Math . PI ; }", "target": 0}
{"idx": 622, "func": "private final int <w> max Doc </w> ;", "target": 0}
{"idx": 623, "func": "public String [ ] <w> get URL Patterns </w> ( ) { if ( <w> match All Url Patterns </w> ) { return new String [ ] { } ; } else { return ( this . <w> url Patterns </w> ) ; } }", "target": 1}
{"idx": 624, "func": "public static final String <w> EXPOSED _ HEADERS </w> = <str-literal> <str-literal> <str-literal> ;", "target": 1}
{"idx": 625, "func": "List < String > <w> get Topics </w> ( Collection < String > <w> subscribed Topics </w> ) { <comment> <comment> <comment> if ( <w> subscribed Topics </w> . <w> is Empty </w> ( ) ) return Collections . <w> singleton List </w> ( <str-literal> <str-literal> + pattern + <str-literal> <str-literal> ) ; List < String > <w> matched Topics </w> = new <w> Array List </w> < > ( ) ; for ( String update : <w> subscribed Topics </w> ) { if ( this . pattern = = <w> topic To Patterns </w> . get ( update ) ) { <w> matched Topics </w> . add ( update ) ; } else if ( <w> topic To Patterns </w> . <w> contains Key </w> ( update ) & & <w> is Match </w> ( update ) ) { <comment> <comment> throw new <w> Topology Builder Exception </w> ( <str-literal> <str-literal> <str-literal> + update + <str-literal> <str-literal> <str-literal> + <w> topic To Patterns </w> . get ( update ) + <str-literal> <str-literal> <str-literal> + pattern + <str-literal> <str-literal> <str-literal> ) ; } else if ( <w> is Match </w> ( update ) ) { <w> topic To Patterns </w> . put ( update , this . pattern ) ; <w> matched Topics </w> . add ( update ) ; } } return <w> matched Topics </w> ; }", "target": 1}
{"idx": 626, "func": "<comment> private long <w> num Probes </w> = 0 ;", "target": 0}
{"idx": 627, "func": "public static void main ( String . . . args ) throws Exception { <w> print Html </w> ( System . out ) ; }", "target": 0}
{"idx": 628, "func": "<comment> public static final Schema [ ] <w> TXN _ OFFSET _ COMMIT _ REQUEST </w> = { <w> TXN _ OFFSET _ COMMIT _ REQUEST _ V 0 </w> } ;", "target": 1}
{"idx": 629, "func": "<comment> protected boolean <w> is Within Holes </w> ( final <w> Geo Point </w> point ) { if ( holes ! = null ) { for ( final <w> Geo Polygon </w> hole : holes ) { if ( ! hole . <w> is Within </w> ( point ) ) { return true ; } } } return false ; }", "target": 0}
{"idx": 630, "func": "<comment> private static final long <w> MASK _ LONG _ UPPER _ 13 _ BITS </w> = ~ <w> MASK _ LONG _ LOWER _ 51 _ BITS </w> ;", "target": 0}
{"idx": 631, "func": "private final <w> Page Context </w> [ ] pool ;", "target": 0}
{"idx": 632, "func": "public void action ( <w> Action Code </w> <w> action Code </w> , Object param ) { if ( hook ! = null ) { if ( param = = null ) { hook . action ( <w> action Code </w> , this ) ; } else { hook . action ( <w> action Code </w> , param ) ; } } }", "target": 0}
{"idx": 633, "func": "@ Override public Metadata <w> set Properties </w> ( Map < String , String > properties ) { return this ; }", "target": 1}
{"idx": 634, "func": "public static final int ITERATIONS = 100 * <w> RANDOM _ MULTIPLIER </w> ;", "target": 1}
{"idx": 635, "func": "private static final long <w> GRACEFUL _ SHUTDOWN _ TIMEOUT _ MS </w> = 60 * 1000 ;", "target": 0}
{"idx": 636, "func": "public <w> Project Building Request </w> <w> set Plugin Artifact Repositories </w> ( List < <w> Artifact Repository </w> > <w> plugin Artifact Repositories </w> ) { if ( <w> plugin Artifact Repositories </w> ! = null ) { this . <w> plugin Artifact Repositories </w> = new <w> Array List </w> < > ( <w> plugin Artifact Repositories </w> ) ; } else { this . <w> plugin Artifact Repositories </w> . clear ( ) ; } return this ; }", "target": 1}
{"idx": 637, "func": "<comment> public static final Schema [ ] <w> UPDATE _ METADATA _ RESPONSE </w> = { <w> UPDATE _ METADATA _ RESPONSE _ V 0 </w> , <w> UPDATE _ METADATA _ RESPONSE _ V 1 </w> , <w> UPDATE _ METADATA _ RESPONSE _ V 2 </w> , <w> UPDATE _ METADATA _ RESPONSE _ V 3 </w> } ;", "target": 1}
{"idx": 638, "func": "private <w> In Memory Timer Internals </w> <w> timer Internals </w> ;", "target": 0}
{"idx": 639, "func": "@ Override public <w> Maven Execution Request </w> <w> set Selected Projects </w> ( List < String > <w> selected Projects </w> ) { if ( <w> selected Projects </w> ! = null ) { this . <w> selected Projects </w> = new <w> Array List </w> < > ( <w> selected Projects </w> ) ; } else { this . <w> selected Projects </w> = null ; } return this ; }", "target": 1}
{"idx": 640, "func": "<comment> private int <w> num Records </w> = 0 ;", "target": 0}
{"idx": 641, "func": "<comment> public void <w> set Comment </w> ( String purpose ) { comment = purpose ; }", "target": 0}
{"idx": 642, "func": "<comment> @ <w> Visible For Testing </w> public void <w> close Current Page </w> ( ) { if ( <w> current Page </w> ! = null ) { <w> page Cursor </w> = <w> current Page </w> . <w> get Base Offset </w> ( ) + <w> current Page </w> . size ( ) ; } }", "target": 0}
{"idx": 643, "func": "private int <w> required Num Acks </w> = Integer . <w> MAX _ VALUE </w> ;", "target": 0}
{"idx": 644, "func": "<comment> public Set < String > <w> get Field Infos Files </w> ( ) { return Collections . <w> unmodifiable Set </w> ( <w> field Infos Files </w> ) ; }", "target": 0}
{"idx": 645, "func": "<comment> static final int <w> VERSION _ CHUNK _ STATS </w> = 1 ;", "target": 1}
{"idx": 646, "func": "@ Override public synchronized Void get ( long timeout , <w> Time Unit </w> unit ) throws <w> Interrupted Exception </w> , <w> Execution Exception </w> , <w> Timeout Exception </w> { long started = System . <w> current Time Millis </w> ( ) ; long limit = started + unit . <w> to Millis </w> ( timeout ) ; while ( ! completed ) { long <w> left Ms </w> = limit - System . <w> current Time Millis </w> ( ) ; if ( <w> left Ms </w> < 0 ) throw new <w> Timeout Exception </w> ( <str-literal> <str-literal> <str-literal> ) ; this . wait ( <w> left Ms </w> ) ; } if ( exception ! = null ) throw new <w> Execution Exception </w> ( exception ) ; return null ; }", "target": 1}
{"idx": 647, "func": "public static final String <w> Host Context Xml </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 648, "func": "long <w> failed Attempts </w> ;", "target": 1}
{"idx": 649, "func": "<comment> public static byte [ ] <w> decode Base 64 </w> ( final String <w> base 64 String </w> ) { return new <w> Base 64 </w> ( ) . decode ( <w> base 64 String </w> ) ; }", "target": 0}
{"idx": 650, "func": "final double <w> radius Meters </w> ;", "target": 0}
{"idx": 651, "func": "<comment> public static final int <w> TOKEN _ SHOWSINGULARMULTIPLICITIES </w> = 26 ;", "target": 0}
{"idx": 652, "func": "private int <w> max Steps </w> = 3 ;", "target": 0}
{"idx": 653, "func": "public static final String <w> DATA _ WORLD _ CITIES _ POINTS </w> = <str-literal> <str-literal> <str-literal> ;", "target": 1}
{"idx": 654, "func": "<comment> private final List < String > searchpath = new <w> Array List </w> < String > ( ) ;", "target": 1}
{"idx": 655, "func": "<comment> public static final String <w> STATE _ DIR _ CONFIG </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 656, "func": "private org . eclipse . <w> uml 2 </w> . uml . Class <w> get Metaclass </w> ( Object <w> base Class </w> ) { org . eclipse . <w> uml 2 </w> . uml . Class metaclass = null ; if ( <w> base Class </w> instanceof String ) { URI uri = URI . <w> create URI </w> ( <w> UML Resource </w> . <w> UML _ METAMODEL _ URI </w> ) ; <w> Resource Set </w> rs = <w> model Impl </w> . <w> get Editing Domain </w> ( ) . <w> get Resource Set </w> ( ) ; Resource res = rs . <w> get Resource </w> ( uri , true ) ; Model m = ( Model ) <w> Ecore Util </w> . <w> get Object By Type </w> ( res . <w> get Contents </w> ( ) , <w> UML Package </w> . Literals . PACKAGE ) ; metaclass = ( org . eclipse . <w> uml 2 </w> . uml . Class ) m . <w> get Owned Type </w> ( ( String ) <w> base Class </w> ) ; } else if ( <w> base Class </w> instanceof org . eclipse . <w> uml 2 </w> . uml . Class ) { metaclass = ( org . eclipse . <w> uml 2 </w> . uml . Class ) <w> base Class </w> ; } return metaclass ; }", "target": 1}
{"idx": 657, "func": "private static final int <w> CAMERA _ MATRIX _ ROWS </w> = 3 ;", "target": 1}
{"idx": 658, "func": "public Plugin <w> get Plugin </w> ( ) { if ( <w> mojo Descriptor </w> ! = null ) { return <w> mojo Descriptor </w> . <w> get Plugin Descriptor </w> ( ) . <w> get Plugin </w> ( ) ; } return plugin ; }", "target": 0}
{"idx": 659, "func": "private boolean <w> is Wildcard </w> ( <w> Char Sequence </w> text ) { if ( text = = null | | text . length ( ) < = 0 ) return false ; <comment> <comment> for ( int i = text . length ( ) - 1 ; i > = 0 ; i - - ) { if ( ( text . <w> char At </w> ( i ) = = <str-literal> | | text . <w> char At </w> ( i ) = = <str-literal> ) & & ! <w> Unescaped Char Sequence </w> . <w> was Escaped </w> ( text , i ) ) { return true ; } } return false ; }", "target": 0}
{"idx": 660, "func": "private static final String <w> CONFIGS _ KEY _ NAME </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 661, "func": "<comment> private <w> Char Buffer </w> <w> out CB </w> = <w> Char Buffer </w> . allocate ( <w> BUFFER _ SIZE </w> ) ;", "target": 0}
{"idx": 662, "func": "<comment> protected long <w> nr Of Cross Context Send Requests </w> = 0 ;", "target": 0}
{"idx": 663, "func": "<comment> private final List < <w> Custom Separator </w> > <w> parameter Custom Sep </w> ;", "target": 1}
{"idx": 664, "func": "<comment> public static Throwable <w> unwrap Invocation Target Exception </w> ( Throwable t ) { if ( t instanceof <w> Invocation Target Exception </w> & & t . <w> get Cause </w> ( ) ! = null ) { return t . <w> get Cause </w> ( ) ; } return t ; }", "target": 0}
{"idx": 665, "func": "<comment> public void <w> to SAX </w> ( <w> Content Handler </w> ch ) throws <w> SAX Exception </w> { <comment> <w> XML Byte Stream Interpreter </w> deserializer = new <w> XML Byte Stream Interpreter </w> ( ) ; deserializer . <w> set Content Handler </w> ( new <w> Embedded XML Pipe </w> ( ch ) ) ; deserializer . deserialize ( this . <w> xml Bytes </w> ) ; }", "target": 1}
{"idx": 666, "func": "<comment> protected final boolean <w> min X Plane Intersects </w> ;", "target": 0}
{"idx": 667, "func": "private final <w> Rocks Iterator </w> iter ;", "target": 0}
{"idx": 668, "func": "private <w> dc 1394 video _ frame _ t </w> [ ] <w> raw _ image </w> = { new <w> dc 1394 video _ frame _ t </w> ( null ) , new <w> dc 1394 video _ frame _ t </w> ( null ) } ;", "target": 0}
{"idx": 669, "func": "public long <w> get Creation Time </w> ( ) { <w> check Valid </w> ( ) ; return creationtime ; }", "target": 1}
{"idx": 670, "func": "<comment> public static final int <w> HKEY _ USERS </w> = 5 ;", "target": 1}
{"idx": 671, "func": "private static final int <w> Id _ Java Adapter </w> = 1 ;", "target": 0}
{"idx": 672, "func": "<comment> private static final Map < String , <w> Field Type </w> > <w> field To Type </w> = new <w> Hash Map </w> < String , <w> Field Type </w> > ( ) ;", "target": 0}
{"idx": 673, "func": "private static final String <w> IS _ INTERNAL _ KEY _ NAME </w> = <str-literal> <str-literal> <str-literal> ;", "target": 1}
{"idx": 674, "func": "private int <w> original Max Clauses </w> ;", "target": 1}
{"idx": 675, "func": "<comment> private void <w> get Functions </w> ( Configuration conf ) { Configuration [ ] children = conf . <w> get Children </w> ( <str-literal> <str-literal> <str-literal> ) ; int i = children . length ; while ( i - - > 0 ) { String <w> clazz Name </w> = children [ i ] . <w> get Attribute </w> ( <str-literal> <str-literal> <str-literal> , null ) ; String prefix = children [ i ] . <w> get Attribute </w> ( <str-literal> <str-literal> <str-literal> , null ) ; if ( <w> clazz Name </w> ! = null & & prefix ! = null ) { try { Class clazz = Class . <w> for Name </w> ( <w> clazz Name </w> ) ; this . library . <w> add Functions </w> ( new <w> Class Functions </w> ( clazz , prefix ) ) ; } catch ( <w> Class Not Found Exception </w> cnf ) { <comment> } } } }", "target": 1}
{"idx": 676, "func": "private <w> Paged Growable Writer </w> offsets ;", "target": 1}
{"idx": 677, "func": "<comment> final byte [ ] <w> last Packed Value </w> ;", "target": 1}
{"idx": 678, "func": "<comment> public static native String defname ( ) ;", "target": 0}
{"idx": 679, "func": "<comment> protected Member [ ] view ;", "target": 1}
{"idx": 680, "func": "public void <w> delete Timer </w> ( Instant timestamp , <w> Time Domain </w> <w> time Domain </w> ) { <w> timer Internals </w> . <w> delete Timer </w> ( <w> Timer Data </w> . of ( namespace , timestamp , <w> time Domain </w> ) ) ; }", "target": 0}
{"idx": 681, "func": "abstract Builder < T > <w> set Method </w> ( Method method ) ;", "target": 1}
{"idx": 682, "func": "<comment> public static final String <w> SASL _ KERBEROS _ PRINCIPAL _ TO _ LOCAL _ RULES </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 683, "func": "<comment> private <w> State Namespace </w> <w> get Namespace </w> ( ) { if ( namespace = = null ) { namespace = <w> State Namespaces </w> . window ( <w> window Coder </w> , window ) ; } return namespace ; }", "target": 0}
{"idx": 684, "func": "@ Override public Consumer < byte [ ] , byte [ ] > <w> get Consumer </w> ( final Map < String , Object > config ) { return consumer ; }", "target": 0}
{"idx": 685, "func": "<comment> public int <w> get Frag Num </w> ( ) { return <w> frag Num </w> ; }", "target": 0}
{"idx": 686, "func": "public int <w> num Partitions </w> ;", "target": 0}
{"idx": 687, "func": "<comment> private long <w> time Between Eviction Runs Millis </w> = <w> DEFAULT _ TIME _ BETWEEN _ EVICTION _ RUNS _ MILLIS </w> ;", "target": 0}
{"idx": 688, "func": "<comment> private <w> Aggregation Kind </w> <w> check Aggregation Kind </w> ( Object <w> aggregation Kind </w> ) { if ( <w> aggregation Kind </w> = = null ) { <w> aggregation Kind </w> = <w> Aggregation Kind Enum </w> . <w> AK _ NONE </w> ; } return ( <w> Aggregation Kind </w> ) <w> aggregation Kind </w> ; }", "target": 0}
{"idx": 689, "func": "@ Override public <w> Maven Execution Request </w> <w> set User Settings File </w> ( File <w> user Settings File </w> ) { this . <w> user Settings File </w> = <w> user Settings File </w> ; return this ; }", "target": 1}
{"idx": 690, "func": "public static final char <w> ALTERNATE _ USER _ TOOLCHAINS </w> = <str-literal> ;", "target": 1}
{"idx": 691, "func": "private List < Artifact > <w> get Trail </w> ( ) throws <w> Over Constrained Version Exception </w> { if ( trail = = null ) { List < Artifact > ids = new <w> Linked List </w> < > ( ) ; <w> Resolution Node </w> node = this ; while ( node ! = null ) { Artifact artifact = node . <w> get Artifact </w> ( ) ; if ( artifact . <w> get Version </w> ( ) = = null ) { <comment> <w> Artifact Version </w> selected = artifact . <w> get Selected Version </w> ( ) ; <comment> <comment> if ( selected ! = null ) { artifact . <w> select Version </w> ( selected . <w> to String </w> ( ) ) ; } else { throw new <w> Over Constrained Version Exception </w> ( <str-literal> <str-literal> <str-literal> + artifact . <w> get Artifact Id </w> ( ) , artifact ) ; } } ids . add ( 0 , artifact ) ; node = node . parent ; } trail = ids ; } return trail ; }", "target": 1}
{"idx": 692, "func": "<comment> public short <w> get Modifiers </w> ( ) { return <w> the Modifiers </w> ; }", "target": 1}
{"idx": 693, "func": "public void <w> set Max </w> ( int limit ) { max = limit ; }", "target": 0}
{"idx": 694, "func": "<comment> private long <w> _ time Between Eviction Runs Millis </w> = <w> Base Object Pool Config </w> . <w> DEFAULT _ TIME _ BETWEEN _ EVICTION _ RUNS _ MILLIS </w> ;", "target": 0}
{"idx": 695, "func": "<comment> <w> Kafka Based Log </w> < String , byte [ ] > <w> setup And Create Kafka Based Log </w> ( String topic , final <w> Worker Config </w> config ) { Map < String , Object > <w> producer Props </w> = new <w> Hash Map </w> < > ( ) ; <w> producer Props </w> . <w> put All </w> ( config . originals ( ) ) ; <w> producer Props </w> . put ( <w> Producer Config </w> . <w> KEY _ SERIALIZER _ CLASS _ CONFIG </w> , <w> String Serializer </w> . class . <w> get Name </w> ( ) ) ; <w> producer Props </w> . put ( <w> Producer Config </w> . <w> VALUE _ SERIALIZER _ CLASS _ CONFIG </w> , <w> Byte Array Serializer </w> . class . <w> get Name </w> ( ) ) ; <w> producer Props </w> . put ( <w> Producer Config </w> . <w> RETRIES _ CONFIG </w> , Integer . <w> MAX _ VALUE </w> ) ; Map < String , Object > <w> consumer Props </w> = new <w> Hash Map </w> < > ( ) ; <w> consumer Props </w> . <w> put All </w> ( config . originals ( ) ) ; <w> consumer Props </w> . put ( <w> Consumer Config </w> . <w> KEY _ DESERIALIZER _ CLASS _ CONFIG </w> , <w> String Deserializer </w> . class . <w> get Name </w> ( ) ) ; <w> consumer Props </w> . put ( <w> Consumer Config </w> . <w> VALUE _ DESERIALIZER _ CLASS _ CONFIG </w> , <w> Byte Array Deserializer </w> . class . <w> get Name </w> ( ) ) ; Map < String , Object > <w> admin Props </w> = new <w> Hash Map </w> < > ( config . originals ( ) ) ; <w> New Topic </w> <w> topic Description </w> = <w> Topic Admin </w> . <w> define Topic </w> ( topic ) . compacted ( ) . partitions ( 1 ) . <w> replication Factor </w> ( config . <w> get Short </w> ( <w> Distributed Config </w> . <w> CONFIG _ STORAGE _ REPLICATION _ FACTOR _ CONFIG </w> ) ) . build ( ) ; return <w> create Kafka Based Log </w> ( topic , <w> producer Props </w> , <w> consumer Props </w> , new <w> Consume Callback </w> ( ) , <w> topic Description </w> , <w> admin Props </w> ) ; }", "target": 0}
{"idx": 696, "func": "@ Override public <w> Maven Execution Request </w> <w> set Local Repository </w> ( <w> Artifact Repository </w> <w> local Repository </w> ) { this . <w> local Repository </w> = <w> local Repository </w> ; if ( <w> local Repository </w> ! = null ) { <w> set Local Repository Path </w> ( new File ( <w> local Repository </w> . <w> get Basedir </w> ( ) ) . <w> get Absolute File </w> ( ) ) ; } return this ; }", "target": 1}
{"idx": 697, "func": "public Set < String > <w> internal Topics </w> ( ) { return <w> internal Topics </w> ; }", "target": 0}
{"idx": 698, "func": "private static final List < String > <w> ODT _ FILE </w>", "target": 1}
{"idx": 699, "func": "<comment> public void cancel ( ) { cancelled = true ; }", "target": 0}
{"idx": 700, "func": "<comment> private final int retries ;", "target": 1}
{"idx": 701, "func": "@ Override public void <w> get Bounds </w> ( Bounds bounds ) { <comment> if ( <w> local Is Within </w> ( <w> planet Model </w> . <w> NORTH _ POLE </w> ) ) { bounds . <w> no Top Latitude Bound </w> ( ) . <w> no Longitude Bound </w> ( ) . <w> add Point </w> ( <w> planet Model </w> . <w> NORTH _ POLE </w> ) ; } if ( <w> local Is Within </w> ( <w> planet Model </w> . <w> SOUTH _ POLE </w> ) ) { bounds . <w> no Bottom Latitude Bound </w> ( ) . <w> no Longitude Bound </w> ( ) . <w> add Point </w> ( <w> planet Model </w> . <w> SOUTH _ POLE </w> ) ; } if ( <w> local Is Within </w> ( <w> planet Model </w> . <w> MIN _ X _ POLE </w> ) ) { bounds . <w> add Point </w> ( <w> planet Model </w> . <w> MIN _ X _ POLE </w> ) ; } if ( <w> local Is Within </w> ( <w> planet Model </w> . <w> MAX _ X _ POLE </w> ) ) { bounds . <w> add Point </w> ( <w> planet Model </w> . <w> MAX _ X _ POLE </w> ) ; } if ( <w> local Is Within </w> ( <w> planet Model </w> . <w> MIN _ Y _ POLE </w> ) ) { bounds . <w> add Point </w> ( <w> planet Model </w> . <w> MIN _ Y _ POLE </w> ) ; } if ( <w> local Is Within </w> ( <w> planet Model </w> . <w> MAX _ Y _ POLE </w> ) ) { bounds . <w> add Point </w> ( <w> planet Model </w> . <w> MAX _ Y _ POLE </w> ) ; } bounds . <w> is Wide </w> ( ) ; <comment> for ( final <w> Geo Point </w> point : points ) { bounds . <w> add Point </w> ( point ) ; } <comment> for ( final <w> Sided Plane </w> edge : edges ) { bounds . <w> add Plane </w> ( <w> planet Model </w> , edge , <w> either Bounds </w> . get ( edge ) ) ; } for ( final <w> Sided Plane </w> <w> inverted Edge </w> : <w> inverted Edges </w> ) { final <w> Sided Plane </w> <w> next Edge </w> = <w> next Brother Map </w> . get ( <w> inverted Edge </w> ) ; bounds . <w> add Intersection </w> ( <w> planet Model </w> , <w> inverted Edge </w> , <w> next Edge </w> , <w> prev Brother Map </w> . get ( <w> inverted Edge </w> ) , <w> next Brother Map </w> . get ( <w> next Edge </w> ) ) ; } }", "target": 1}
{"idx": 702, "func": "<comment> public static Cluster empty ( ) { return new Cluster ( null , new <w> Array List </w> < Node > ( 0 ) , new <w> Array List </w> < <w> Partition Info </w> > ( 0 ) , Collections . < String > <w> empty Set </w> ( ) , Collections . < String > <w> empty Set </w> ( ) , null ) ; }", "target": 0}
{"idx": 703, "func": "public void <w> java To Native </w> ( Object object , <w> Transfer Data </w> <w> transfer Data </w> ) { byte [ ] check = <w> TYPE _ NAME </w> . <w> get Bytes </w> ( ) ; super . <w> java To Native </w> ( check , <w> transfer Data </w> ) ; }", "target": 1}
{"idx": 704, "func": "private short <w> its Flags </w> ;", "target": 1}
{"idx": 705, "func": "<comment> public <w> Project Build List </w> <w> get By Task Segment </w> ( <w> Task Segment </w> <w> task Segment </w> ) { List < <w> Project Segment </w> > <w> current Segment </w> = new <w> Array List </w> < > ( ) ; for ( <w> Project Segment </w> <w> project Build </w> : items ) { if ( <w> task Segment </w> = = <w> project Build </w> . <w> get Task Segment </w> ( ) ) { <comment> <w> current Segment </w> . add ( <w> project Build </w> ) ; } } return new <w> Project Build List </w> ( <w> current Segment </w> ) ; }", "target": 1}
{"idx": 706, "func": "private static final String [ ] time = { <str-literal> <str-literal> <str-literal> <str-literal> <str-literal> <str-literal> , <str-literal> <str-literal> <str-literal> , <str-literal> <str-literal> <str-literal> , <str-literal> <str-literal> <str-literal> , <str-literal> <str-literal> <str-literal> , <str-literal> <str-literal> <str-literal> , <str-literal> <str-literal> <str-literal> , <str-literal> <str-literal> <str-literal> , <str-literal> <str-literal> <str-literal> } ;", "target": 1}
{"idx": 707, "func": "protected void <w> get Method Bodies </w> ( <w> Compilation Unit Declaration </w> unit , int place ) { <comment> if ( unit . <w> ignore Method Bodies </w> ) { unit . <w> ignore Further Investigation </w> = true ; return ; <comment> } if ( place < <w> parse Threshold </w> ) return ; <comment> <comment> parser . scanner . <w> set Source Buffer </w> ( unit . <w> compilation Result </w> . <w> compilation Unit </w> . <w> get Contents </w> ( ) ) ; if ( unit . types ! = null ) { for ( int i = unit . types . length ; - - i > = 0 ; ) unit . types [ i ] . <w> parse Method </w> ( parser , unit ) ; } }", "target": 1}
{"idx": 708, "func": "final <w> Monotonic Block Packed Reader </w> addresses ;", "target": 1}
{"idx": 709, "func": "@ Override public <w> SQL Warning </w> <w> get Warnings </w> ( ) throws <w> SQL Exception </w> { return null ; }", "target": 1}
{"idx": 710, "func": "public List < String > <w> get Messages </w> ( ) { return Collections . <w> unmodifiable List </w> ( messages ) ; }", "target": 0}
{"idx": 711, "func": "public int <w> get Record Length </w> ( ) { return current . <w> get Record Length </w> ( ) ; }", "target": 0}
{"idx": 712, "func": "private boolean <w> all Names </w> = false ;", "target": 1}
{"idx": 713, "func": "@ Override public <w> Maven Execution Request </w> <w> set User Properties </w> ( Properties <w> user Properties </w> ) { if ( <w> user Properties </w> ! = null ) { this . <w> user Properties </w> = new Properties ( ) ; this . <w> user Properties </w> . <w> put All </w> ( <w> user Properties </w> ) ; } else { this . <w> user Properties </w> = null ; } return this ; }", "target": 1}
{"idx": 714, "func": "@ Override public <w> Toolchains Building Request </w> <w> set User Toolchains Source </w> ( Source <w> user Toolchains Source </w> ) { this . <w> user Toolchains Source </w> = <w> user Toolchains Source </w> ; return this ; }", "target": 1}
{"idx": 715, "func": "private Properties <w> set Produce Consume Properties </w> ( final String <w> client Id </w> ) { Properties props = new Properties ( ) ; props . put ( <w> Producer Config </w> . <w> CLIENT _ ID _ CONFIG </w> , <w> client Id </w> ) ; props . put ( <w> Producer Config </w> . <w> BOOTSTRAP _ SERVERS _ CONFIG </w> , kafka ) ; props . put ( <w> Producer Config </w> . <w> KEY _ SERIALIZER _ CLASS _ CONFIG </w> , <w> Integer Serializer </w> . class ) ; props . put ( <w> Producer Config </w> . <w> VALUE _ SERIALIZER _ CLASS _ CONFIG </w> , <w> Byte Array Serializer </w> . class ) ; <comment> <comment> props . put ( <w> Producer Config </w> . <w> SEND _ BUFFER _ CONFIG </w> , <w> SOCKET _ SIZE _ BYTES </w> ) ; props . put ( <w> Consumer Config </w> . <w> KEY _ DESERIALIZER _ CLASS _ CONFIG </w> , <w> Integer Deserializer </w> . class ) ; props . put ( <w> Consumer Config </w> . <w> VALUE _ DESERIALIZER _ CLASS _ CONFIG </w> , <w> Byte Array Deserializer </w> . class ) ; props . put ( <w> Consumer Config </w> . <w> ENABLE _ AUTO _ COMMIT _ CONFIG </w> , <str-literal> <str-literal> <str-literal> ) ; <comment> <comment> props . put ( <w> Consumer Config </w> . <w> RECEIVE _ BUFFER _ CONFIG </w> , <w> SOCKET _ SIZE _ BYTES </w> ) ; props . put ( <w> Consumer Config </w> . <w> MAX _ POLL _ RECORDS _ CONFIG </w> , <w> MAX _ POLL _ RECORDS </w> ) ; return props ; }", "target": 1}
{"idx": 716, "func": "private final byte [ ] <w> message 2 </w> ;", "target": 1}
{"idx": 717, "func": "private final List < <w> Message Handler Info </w> > <w> on Message </w> = new <w> Array List </w> < > ( ) ;", "target": 1}
{"idx": 718, "func": "@ Override public void <w> get Artifact Metadata </w> ( <w> Artifact Metadata </w> metadata , <w> Artifact Repository </w> repository , File destination , String <w> checksum Policy </w> ) throws <w> Transfer Failed Exception </w> , <w> Resource Does Not Exist Exception </w> { String <w> remote Path </w> = repository . <w> path Of Remote Repository Metadata </w> ( metadata ) ; <w> get Remote File </w> ( repository , destination , <w> remote Path </w> , null , <w> checksum Policy </w> , true ) ; }", "target": 1}
{"idx": 719, "func": "@ Override public <w> Bytes Ref </w> <w> get Payload </w> ( ) { return payload . length > 0 ? payload : null ; }", "target": 0}
{"idx": 720, "func": "<comment> private boolean <w> prepared Doc Values And Point Values </w> ;", "target": 1}
{"idx": 721, "func": "@ Override public <w> Maven Execution Request </w> <w> set Interactive Mode </w> ( boolean interactive ) { <w> interactive Mode </w> = interactive ; return this ; }", "target": 1}
{"idx": 722, "func": "final String <w> phrased Query String Contents </w> ;", "target": 0}
{"idx": 723, "func": "@ Override public <w> Value Expression </w> <w> set Variable </w> ( String variable , <w> Value Expression </w> expression ) { if ( vars = = null ) { vars = new <w> Hash Map </w> < > ( ) ; } if ( expression = = null ) { return vars . remove ( variable ) ; } else { return vars . put ( variable , expression ) ; } }", "target": 1}
{"idx": 724, "func": "<comment> public void <w> remove Layout Component </w> ( Component comp ) { }", "target": 0}
{"idx": 725, "func": "private <w> Hash Map </w> <w> method Index </w> ;", "target": 1}
{"idx": 726, "func": "<comment> public <w> Variable Info </w> [ ] <w> get Variable Info </w> ( <w> Tag Data </w> data ) { <w> Variable Info </w> [ ] result = null ; <w> Tag Extra Info </w> tei = <w> get Tag Extra Info </w> ( ) ; if ( tei ! = null ) { result = tei . <w> get Variable Info </w> ( data ) ; } return result ; }", "target": 0}
{"idx": 727, "func": "public byte [ ] <w> get Command </w> ( ) { return command ; }", "target": 1}
{"idx": 728, "func": "@ Override public <w> Maven Execution Request </w> <w> set Cache Transfer Error </w> ( boolean <w> cache Transfer Error </w> ) { this . <w> cache Transfer Error </w> = <w> cache Transfer Error </w> ; return this ; }", "target": 1}
{"idx": 729, "func": "private final int <w> num Segments </w> = 3 ;", "target": 0}
{"idx": 730, "func": "<comment> private void <w> start Group </w> ( String name , Attributes atts ) throws <w> SAX Exception </w> { <w> Attributes Impl </w> ai = ( atts = = null ) ? new <w> Attributes Impl </w> ( ) : new <w> Attributes Impl </w> ( atts ) ; ai . <w> add Attribute </w> ( NAMESPACE , <str-literal> <str-literal> <str-literal> , <str-literal> <str-literal> <str-literal> , <str-literal> <str-literal> <str-literal> , name ) ; super . <w> content Handler </w> . <w> start Element </w> ( NAMESPACE , <str-literal> <str-literal> <str-literal> , <str-literal> <str-literal> <str-literal> , ai ) ; }", "target": 0}
{"idx": 731, "func": "<comment> public boolean <w> is Valid Namespace </w> ( Object ns ) { return true ; }", "target": 1}
{"idx": 732, "func": "private final List < String > <w> expected Output </w> ;", "target": 1}
{"idx": 733, "func": "<comment> public Object <w> get Value </w> ( ) { return this . value ; }", "target": 0}
{"idx": 734, "func": "private Member [ ] view ;", "target": 1}
{"idx": 735, "func": "public int compare ( long b , long a ) { return ( a < b ) ? - 1 : ( a > b ) ? 1 : 0 ; }", "target": 0}
{"idx": 736, "func": "@ Test public void <w> long To Json </w> ( ) { <w> Json Node </w> converted = parse ( converter . <w> from Connect Data </w> ( TOPIC , Schema . <w> INT 64 _ SCHEMA </w> , 4398046511104l ) ) ; <w> validate Envelope </w> ( converted ) ; <w> assert Equals </w> ( parse ( <str-literal> <str-literal> <str-literal> <str-literal> <str-literal> <str-literal> <str-literal> <str-literal> <str-literal> <str-literal> <str-literal> <str-literal> <str-literal> <str-literal> <str-literal> ) , converted . get ( <w> Json Schema </w> . <w> ENVELOPE _ SCHEMA _ FIELD _ NAME </w> ) ) ; <w> assert Equals </w> ( 4398046511104l , converted . get ( <w> Json Schema </w> . <w> ENVELOPE _ PAYLOAD _ FIELD _ NAME </w> ) . <w> long Value </w> ( ) ) ; }", "target": 1}
{"idx": 737, "func": "<comment> public static final Schema [ ] <w> END _ TXN _ RESPONSE </w> = { <w> END _ TXN _ RESPONSE _ V 0 </w> } ;", "target": 1}
{"idx": 738, "func": "<comment> private static final String <w> STRING _ SHOWSTEREOTYPES </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 739, "func": "void <w> to String Builder </w> ( <w> String Builder </w> b ) { switch ( kind ) { case <w> REGEXP _ UNION </w> : b . append ( <str-literal> <str-literal> <str-literal> ) ; <w> exp 1 </w> . <w> to String Builder </w> ( b ) ; b . append ( <str-literal> <str-literal> <str-literal> ) ; <w> exp 2 </w> . <w> to String Builder </w> ( b ) ; b . append ( <str-literal> <str-literal> <str-literal> ) ; break ; case <w> REGEXP _ CONCATENATION </w> : <w> exp 1 </w> . <w> to String Builder </w> ( b ) ; <w> exp 2 </w> . <w> to String Builder </w> ( b ) ; break ; case <w> REGEXP _ INTERSECTION </w> : b . append ( <str-literal> <str-literal> <str-literal> ) ; <w> exp 1 </w> . <w> to String Builder </w> ( b ) ; b . append ( <str-literal> <str-literal> <str-literal> ) ; <w> exp 2 </w> . <w> to String Builder </w> ( b ) ; b . append ( <str-literal> <str-literal> <str-literal> ) ; break ; case <w> REGEXP _ OPTIONAL </w> : b . append ( <str-literal> <str-literal> <str-literal> ) ; <w> exp 1 </w> . <w> to String Builder </w> ( b ) ; b . append ( <str-literal> <str-literal> <str-literal> ) ; break ; case <w> REGEXP _ REPEAT </w> : b . append ( <str-literal> <str-literal> <str-literal> ) ; <w> exp 1 </w> . <w> to String Builder </w> ( b ) ; b . append ( <str-literal> <str-literal> <str-literal> ) ; break ; case <w> REGEXP _ REPEAT _ MIN </w> : b . append ( <str-literal> <str-literal> <str-literal> ) ; <w> exp 1 </w> . <w> to String Builder </w> ( b ) ; b . append ( <str-literal> <str-literal> <str-literal> ) . append ( min ) . append ( <str-literal> <str-literal> <str-literal> ) ; break ; case <w> REGEXP _ REPEAT _ MINMAX </w> : b . append ( <str-literal> <str-literal> <str-literal> ) ; <w> exp 1 </w> . <w> to String Builder </w> ( b ) ; b . append ( <str-literal> <str-literal> <str-literal> ) . append ( min ) . append ( <str-literal> <str-literal> <str-literal> ) . append ( max ) . append ( <str-literal> <str-literal> <str-literal> ) ; break ; case <w> REGEXP _ COMPLEMENT </w> : b . append ( <str-literal> <str-literal> <str-literal> ) ; <w> exp 1 </w> . <w> to String Builder </w> ( b ) ; b . append ( <str-literal> <str-literal> <str-literal> ) ; break ; case <w> REGEXP _ CHAR </w> : b . append ( <str-literal> <str-literal> <str-literal> ) . <w> append Code Point </w> ( c ) ; break ; case <w> REGEXP _ CHAR _ RANGE </w> : b . append ( <str-literal> <str-literal> <str-literal> <str-literal> ) . <w> append Code Point </w> ( from ) . append ( <str-literal> <str-literal> <str-literal> <str-literal> ) . <w> append Code Point </w> ( to ) . append ( <str-literal> <str-literal> <str-literal> ) ; break ; case <w> REGEXP _ ANYCHAR </w> : b . append ( <str-literal> <str-literal> <str-literal> ) ; break ; case <w> REGEXP _ EMPTY </w> : b . append ( <str-literal> <str-literal> <str-literal> ) ; break ; case <w> REGEXP _ STRING </w> : b . append ( <str-literal> <str-literal> <str-literal> ) . append ( s ) . append ( <str-literal> <str-literal> <str-literal> ) ; break ; case <w> REGEXP _ ANYSTRING </w> : b . append ( <str-literal> <str-literal> <str-literal> ) ; break ; case <w> REGEXP _ AUTOMATON </w> : b . append ( <str-literal> <str-literal> <str-literal> ) . append ( s ) . append ( <str-literal> <str-literal> <str-literal> ) ; break ; case <w> REGEXP _ INTERVAL </w> : String <w> s 1 </w> = Integer . <w> to String </w> ( min ) ; String <w> s 2 </w> = Integer . <w> to String </w> ( max ) ; b . append ( <str-literal> <str-literal> <str-literal> ) ; if ( digits > 0 ) for ( int i = <w> s 1 </w> . length ( ) ; i < digits ; i + + ) b . append ( <str-literal> ) ; b . append ( <w> s 1 </w> ) . append ( <str-literal> <str-literal> <str-literal> ) ; if ( digits > 0 ) for ( int i = <w> s 2 </w> . length ( ) ; i < digits ; i + + ) b . append ( <str-literal> ) ; b . append ( <w> s 2 </w> ) . append ( <str-literal> <str-literal> <str-literal> ) ; break ; } }", "target": 1}
{"idx": 740, "func": "public int [ ] <w> get RGB Color Order </w> ( ) { int [ ] order = new int [ 3 ] ; for ( int i = 0 ; i < 3 ; i + + ) { switch ( Character . <w> to Upper Case </w> ( <w> color Order </w> . <w> char At </w> ( i ) ) ) { case <str-literal> : order [ i ] = 2 ; break ; case <str-literal> : order [ i ] = 1 ; break ; case <str-literal> : order [ i ] = 0 ; break ; default : assert ( false ) ; } } return order ; }", "target": 1}
{"idx": 741, "func": "<comment> private long <w> previous Seconds </w> = Long . <w> MIN _ VALUE </w> ;", "target": 1}
{"idx": 742, "func": "private Map <w> get Expression Cache </w> ( Map cache synchronized ( cache ) { Map map = ( Map ) cache . get ( key ) ; if ( map = = null ) { map = Collections . <w> synchronized Map </w> ( new <w> Hash Map </w> ( ) ) ; cache . put ( key , map ) ; } return map ; } }", "target": 1}
{"idx": 743, "func": "<comment> public <w> Validation Message </w> [ ] validate ( String prefix , String uri , <w> Page Data </w> page ) { return null ; }", "target": 1}
{"idx": 744, "func": "public <w> Maven Metadata </w> <w> set File </w> ( File file ) { return new <w> Remote Snapshot Metadata </w> ( metadata , file , <w> legacy Format </w> ) ; }", "target": 1}
{"idx": 745, "func": "public boolean [ ] <w> get Param And Var Const </w> ( ) { if ( <w> variable Names </w> = = null ) <w> code Bug </w> ( ) ; return <w> is Consts </w> ; }", "target": 1}
{"idx": 746, "func": "/ * * Startup time of original test public static long <w> global Start NS </w> ;", "target": 0}
{"idx": 747, "func": "<comment> public List < <w> Artifact Metadata </w> > <w> get Classpath </w> ( ) { return classpath ; }", "target": 1}
{"idx": 748, "func": "<comment> protected final byte [ ] <w> max Packed Value </w> ;", "target": 1}
{"idx": 749, "func": "private <w> Pending Term </w> <w> first Pending Term </w> ;", "target": 0}
{"idx": 750, "func": "final int <w> num Blocks </w> ;", "target": 0}
{"idx": 751, "func": "<comment> protected int [ ] index ;", "target": 1}
{"idx": 752, "func": "<comment> public double <w> get Latitude </w> ( ) { double lat = this . latitude ; <comment> if ( lat = = Double . <w> NEGATIVE _ INFINITY </w> ) this . latitude = lat = Math . asin ( z / magnitude ( ) ) ; return lat ; }", "target": 0}
{"idx": 753, "func": "public <w> Offset Storage Reader </w> <w> offset Storage Reader </w> ( ) { return reader ; }", "target": 0}
{"idx": 754, "func": "private final int <w> num Docs </w> ;", "target": 0}
{"idx": 755, "func": "<comment> public <w> Source Validity </w> <w> get Validity </w> ( ) { return <w> NOP Validity </w> . <w> SHARED _ INSTANCE </w> ; }", "target": 0}
{"idx": 756, "func": "private final short modifiers ;", "target": 1}
{"idx": 757, "func": "protected abstract void <w> set Request Body </w> ( <w> Byte Chunk </w> body ) ;", "target": 1}
{"idx": 758, "func": "<comment> public boolean <w> is Rollback After Validation </w> ( ) { return this . <w> rollback After Validation </w> ; }", "target": 0}
{"idx": 759, "func": "public <w> Record Metadata </w> ( <w> Topic Partition </w> <w> topic Partition </w> , long <w> base Offset </w> , long <w> relative Offset </w> , long timestamp , Long checksum , int <w> serialized Key Size </w> , int <w> serialized Value Size </w> ) { <comment> <comment> this . offset = <w> base Offset </w> = = - 1 ? <w> base Offset </w> : <w> base Offset </w> + <w> relative Offset </w> ; this . timestamp = timestamp ; this . checksum = checksum ; this . <w> serialized Key Size </w> = <w> serialized Key Size </w> ; this . <w> serialized Value Size </w> = <w> serialized Value Size </w> ; this . <w> topic Partition </w> = <w> topic Partition </w> ; }", "target": 0}
{"idx": 760, "func": "private Rectangle <w> get Bounding Box </w> ( int <w> line Offset </w> , String <w> line Content </w> , int x , int y ) { Rectangle box = null ; points [ <w> point Index </w> ] = new Point ( x , y ) ; <w> point Index </w> + + ; if ( <w> point Index </w> > <w> number Of Points </w> - 1 ) <w> point Index </w> = <w> point Index </w> % <w> number Of Points </w> ; if ( <w> contains Points </w> ( <w> bounding Box </w> ) ) return <w> bounding Box </w> ; int <w> start Offset </w> = 0 ; int <w> end Offset </w> ; while ( <w> start Offset </w> < <w> line Content </w> . length ( ) ) { while ( <w> start Offset </w> < <w> line Content </w> . length ( ) & & <w> check Char </w> ( <w> line Content </w> . <w> char At </w> ( <w> start Offset </w> ) ) ) <w> start Offset </w> + + ; <w> end Offset </w> = <w> start Offset </w> ; while ( <w> end Offset </w> < <w> line Content </w> . length ( ) - 1 & & ! <w> check Char </w> ( <w> line Content </w> . <w> char At </w> ( <w> end Offset </w> + 1 ) ) ) <w> end Offset </w> + + ; box = <w> styled Text </w> . <w> get Text Bounds </w> ( <w> line Offset </w> + <w> start Offset </w> , <w> line Offset </w> + <w> end Offset </w> ) ; if ( <w> contains Points </w> ( box ) ) break ; <w> start Offset </w> = <w> end Offset </w> + 1 ; } if ( box ! = null & & ! <w> contains Points </w> ( box ) ) { box = null ; } return box ; }", "target": 1}
{"idx": 761, "func": "private static final String <w> SERVER _ MAX _ WINDOW _ BITS </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 762, "func": "<comment> public int [ ] <w> get Keys </w> ( ) { int [ ] keys = this . keys ; int n = <w> key Count </w> ; int [ ] result = new int [ n ] ; for ( int i = 0 ; n ! = 0 ; + + i ) { int entry = keys [ i ] ; if ( entry ! = EMPTY & & entry ! = DELETED ) { result [ - - n ] = entry ; } } return result ; }", "target": 1}
{"idx": 763, "func": "public static final String TOPICS = <str-literal> <str-literal> <str-literal> ;", "target": 1}
{"idx": 764, "func": "final <w> Packed Long Values </w> . Iterator iter ;", "target": 0}
{"idx": 765, "func": "private <w> Packed Long Values </w> . Builder pending ;", "target": 1}
{"idx": 766, "func": "public void <w> is Valid </w> ( Object [ ] selection , <w> Status Info </w> res ) { <comment> if ( selection . length = = 1 & & ( selection [ 0 ] instanceof <w> I File </w> ) ) res . <w> set OK </w> ( ) ; else res . <w> set Error </w> ( <str-literal> <str-literal> ) ; <comment> }", "target": 1}
{"idx": 767, "func": "public void <w> encode Term </w> ( long [ ] longs , <w> Data Output </w> out , <w> Field Info </w> <w> field Info </w> , <w> Block Term State </w> <w> _ state </w> , boolean absolute ) throws <w> IO Exception </w> { <w> ID Version Term State </w> state = ( <w> ID Version Term State </w> ) <w> _ state </w> ; out . <w> write V Int </w> ( state . <w> doc ID </w> ) ; if ( absolute ) { out . <w> write V Long </w> ( state . <w> id Version </w> ) ; } else { long delta = state . <w> id Version </w> - <w> last Encoded Version </w> ; out . <w> write Z Long </w> ( delta ) ; } <w> last Encoded Version </w> = state . <w> id Version </w> ; }", "target": 0}
{"idx": 768, "func": "<comment> private final int <w> max Bytes </w> ;", "target": 1}
{"idx": 769, "func": "<comment> public static String <w> get Current Date </w> ( String separator ) { Date today = new Date ( ) ; String date = ( today . <w> get Date </w> ( ) < 10 ) ? <str-literal> <str-literal> <str-literal> + String . <w> value Of </w> ( today . <w> get Date </w> ( ) ) : String . <w> value Of </w> ( today . <w> get Date </w> ( ) ) ; String month = ( today . <w> get Month </w> ( ) + 1 < 10 ) ? <str-literal> <str-literal> <str-literal> + String . <w> value Of </w> ( ( today . <w> get Month </w> ( ) + 1 ) ) : String . <w> value Of </w> ( today . <w> get Month </w> ( ) + 1 ) ; String year = String . <w> value Of </w> ( today . <w> get Year </w> ( ) ) ; return ( month + separator + date + separator + year ) ; }", "target": 1}
{"idx": 770, "func": "public String <w> get Hint </w> ( ) { return <str-literal> <str-literal> + hint ; }", "target": 0}
{"idx": 771, "func": "@ Override public double <w> get Radius </w> ( ) { <comment> double extent = <w> right Lon </w> - <w> left Lon </w> ; if ( extent < 0.0 ) extent + = Math . PI * 2.0 ; return Math . max ( Math . PI * 0.5 , extent * 0.5 ) ; }", "target": 0}
{"idx": 772, "func": "<comment> private static void <w> sort Key Prefix Array At Byte </w> ( <w> Long Array </w> array , long <w> num Records </w> , long [ ] counts , int <w> byte Idx </w> , long <w> in Index </w> , long <w> out Index </w> , boolean desc , boolean signed ) { assert counts . length = = 256 ; long [ ] offsets = <w> transform Counts To Offsets </w> ( counts , <w> num Records </w> , array . <w> get Base Offset </w> ( ) + <w> out Index </w> * 8l , 16 , desc , signed ) ; Object <w> base Object </w> = array . <w> get Base Object </w> ( ) ; long <w> base Offset </w> = array . <w> get Base Offset </w> ( ) + <w> in Index </w> * 8l ; long <w> max Offset </w> = <w> base Offset </w> + <w> num Records </w> * 16l ; for ( long offset = <w> base Offset </w> ; offset < <w> max Offset </w> ; offset + = 16 ) { long key = Platform . <w> get Long </w> ( <w> base Object </w> , offset ) ; long prefix = Platform . <w> get Long </w> ( <w> base Object </w> , offset + 8 ) ; int bucket = ( int ) ( ( prefix > > > ( <w> byte Idx </w> * 8 ) ) & 0xff ) ; long dest = offsets [ bucket ] ; Platform . <w> put Long </w> ( <w> base Object </w> , dest , key ) ; Platform . <w> put Long </w> ( <w> base Object </w> , dest + 8 , prefix ) ; offsets [ bucket ] + = 16 ; } }", "target": 1}
{"idx": 773, "func": "public static long <w> Global Attribute Mods </w> = Assembly ;", "target": 1}
{"idx": 774, "func": "private static final String <w> STRING _ RESOLVEDCRITICS </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 775, "func": "final byte [ ] id ;", "target": 1}
{"idx": 776, "func": "final boolean <w> store Payloads </w> ;", "target": 0}
{"idx": 777, "func": "<comment> private <w> Category Node </w> resources ;", "target": 1}
{"idx": 778, "func": "<w> M Association End </w> start = null ;", "target": 1}
{"idx": 779, "func": "<comment> public String <w> get Key For Event Pipeline </w> ( ) { return null ; }", "target": 1}
{"idx": 780, "func": "@ Override public <w> Maven Execution Request </w> <w> set Execution Listener </w> ( <w> Execution Listener </w> <w> execution Listener </w> ) { this . <w> execution Listener </w> = <w> execution Listener </w> ; return this ; }", "target": 1}
{"idx": 781, "func": "@ Override public <w> Maven Execution Request </w> <w> set Remote Repositories </w> ( List < <w> Artifact Repository </w> > <w> remote Repositories </w> ) { if ( <w> remote Repositories </w> ! = null ) { this . <w> remote Repositories </w> = new <w> Array List </w> < > ( <w> remote Repositories </w> ) ; } else { this . <w> remote Repositories </w> = null ; } return this ; }", "target": 1}
{"idx": 782, "func": "final Predicate < byte [ ] > predicate ;", "target": 0}
{"idx": 783, "func": "@ Override public <w> Model Building Request </w> <w> set Raw Model </w> ( Model <w> raw Model </w> ) { this . <w> raw Model </w> = <w> raw Model </w> ; return this ; }", "target": 1}
{"idx": 784, "func": "<comment> public boolean <w> can Cancel </w> ( <w> Output Stream </w> stream ) { return false ; }", "target": 1}
{"idx": 785, "func": "<comment> public Map < String , Object > <w> get Plugin Context </w> ( <w> Plugin Descriptor </w> plugin , <w> Maven Project </w> project ) { String <w> project Key </w> = project . <w> get Id </w> ( ) ; Map < String , Map < String , Object > > <w> plugin Contexts By Key </w> = <w> plugin Contexts By Project And Plugin Key </w> . get ( <w> project Key </w> ) ; if ( <w> plugin Contexts By Key </w> = = null ) { <w> plugin Contexts By Key </w> = new <w> Concurrent Hash Map </w> < > ( ) ; <w> plugin Contexts By Project And Plugin Key </w> . put ( <w> project Key </w> , <w> plugin Contexts By Key </w> ) ; } String <w> plugin Key </w> = plugin . <w> get Plugin Lookup Key </w> ( ) ; Map < String , Object > <w> plugin Context </w> = <w> plugin Contexts By Key </w> . get ( <w> plugin Key </w> ) ; if ( <w> plugin Context </w> = = null ) { <w> plugin Context </w> = new <w> Concurrent Hash Map </w> < > ( ) ; <w> plugin Contexts By Key </w> . put ( <w> plugin Key </w> , <w> plugin Context </w> ) ; } return <w> plugin Context </w> ; }", "target": 0}
{"idx": 786, "func": "private static final <w> Byte Buffer </w> <w> TP 1 _ VALUE </w> = buffer ( <str-literal> <str-literal> <str-literal> ) ;", "target": 1}
{"idx": 787, "func": "private static final <w> Byte Buffer </w> <w> EMPTY _ BINARY </w> = <w> Byte Buffer </w> . allocate ( 0 ) ;", "target": 1}
{"idx": 788, "func": "public int <w> is Valid </w> ( <w> Source Validity </w> validity ) { if ( validity instanceof <w> Sitemap Source Validity </w> ) { return ( this . validity ! = null ? this . validity . <w> is Valid </w> ( ( ( <w> Sitemap Source Validity </w> ) validity ) . <w> get Nested Validity </w> ( ) ) : <w> Source Validity </w> . INVALID ) ; } return <w> Source Validity </w> . INVALID ; }", "target": 1}
{"idx": 789, "func": "<comment> public long <w> get Peak Memory Used Bytes </w> ( ) { <w> update Peak Memory Used </w> ( ) ; return <w> peak Memory Used Bytes </w> ; }", "target": 1}
{"idx": 790, "func": "<comment> private long <w> max Num Msgs </w> ;", "target": 0}
{"idx": 791, "func": "<comment> protected boolean <w> start Children </w> = true ;", "target": 0}
{"idx": 792, "func": "private byte [ ] name = null ;", "target": 1}
{"idx": 793, "func": "<comment> public static <w> Project Browser </w> <w> make Instance </w> ( <w> Splash Screen </w> splash , boolean <w> main Application </w> , <w> J Panel </w> <w> left Bottom Pane </w> ) { return new <w> Project Browser </w> ( <str-literal> <str-literal> <str-literal> , splash , <w> main Application </w> , <w> left Bottom Pane </w> ) ; }", "target": 0}
{"idx": 794, "func": "@ Override public <w> Maven Execution Request </w> <w> set Plugin Artifact Repositories </w> ( List < <w> Artifact Repository </w> > <w> plugin Artifact Repositories </w> ) { if ( <w> plugin Artifact Repositories </w> ! = null ) { this . <w> plugin Artifact Repositories </w> = new <w> Array List </w> < > ( <w> plugin Artifact Repositories </w> ) ; } else { this . <w> plugin Artifact Repositories </w> = null ; } return this ; }", "target": 1}
{"idx": 795, "func": "<comment> public static final int <w> VERSION _ AUTO _ PREFIX _ TERMS </w> = 1 ;", "target": 1}
{"idx": 796, "func": "public void <w> To Source </w> ( <w> String Builder </w> sb ) { sb . append ( Value + <str-literal> <str-literal> ) ; }", "target": 1}
{"idx": 797, "func": "private int successes = 0 ;", "target": 1}
{"idx": 798, "func": "public void close ( ) throws Exception { tester . close ( ) ; }", "target": 0}
{"idx": 799, "func": "<comment> protected byte [ ] type ;", "target": 1}
{"idx": 800, "func": "<comment> public long <w> get Last Modified </w> ( ) { return 0 ; }", "target": 1}
{"idx": 801, "func": "@ Override public Set < Critic > <w> get Critics </w> ( ) { if ( critics = = null ) { <w> load Critics </w> ( ) ; } return super . <w> get Critics </w> ( ) ; }", "target": 0}
{"idx": 802, "func": "@ Override public Set < Critic > <w> get Critics </w> ( ) { if ( critics = = null ) { <w> load Critics </w> ( ) ; } return super . <w> get Critics </w> ( ) ; }", "target": 0}
{"idx": 803, "func": "<comment> public void <w> to SAX </w> ( org . xml . sax . <w> Content Handler </w> handler ) throws <w> SAX Exception </w> { <w> DOM Streamer </w> ds = new <w> DOM Streamer </w> ( handler ) ; ds . stream ( this . document . <w> get Document Element </w> ( ) ) ; }", "target": 1}
{"idx": 804, "func": "<comment> public String <w> get Redirect URL </w> ( ) { return this . <w> redirect URL </w> ; }", "target": 0}
{"idx": 805, "func": "<comment> protected static final byte [ ] <w> COORD _ REQUEST </w> = new byte [ ] { 104 , - 95 , - 92 , - 42 , 114 , - 36 , 71 , - 19 , - 79 , 20 , 122 , 101 , - 1 , - 48 , - 49 , 30 } ;", "target": 1}
{"idx": 806, "func": "<comment> public static final String <w> KT _ SEMANTICS </w> = Translator . localize ( <str-literal> <str-literal> <str-literal> ) ;", "target": 0}
{"idx": 807, "func": "private final String <w> pam Service Names </w> ;", "target": 1}
{"idx": 808, "func": "private void <w> get Upstream Projects </w> ( String <w> project Id </w> { for ( String id : sorter . <w> get Dependencies </w> ( <w> project Id </w> ) ) { if ( <w> project Ids </w> . add ( id ) & & transitive ) { <w> get Upstream Projects </w> ( id , <w> project Ids </w> , transitive ) ; } } }", "target": 1}
{"idx": 809, "func": "<comment> private static final String <w> PARTITION _ KEY _ NAME </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 810, "func": "public static final char ERRORS = <str-literal> ;", "target": 1}
{"idx": 811, "func": "public final int <w> doc ID </w> ( ) { return <w> sub Scorers </w> . top ( ) . doc ; }", "target": 0}
{"idx": 812, "func": "<comment> public void <w> set Http Only </w> ( boolean <w> http Only </w> ) { this . <w> http Only </w> = <w> http Only </w> ; }", "target": 0}
{"idx": 813, "func": "<comment> public synchronized boolean <w> update Requested </w> ( ) { return this . <w> need Update </w> ; }", "target": 0}
{"idx": 814, "func": "private void <w> check For New Topic Assignments </w> ( Assignment assignment ) { if ( <w> stream Thread </w> . builder . <w> source Topic Pattern </w> ( ) ! = null ) { final Set < String > <w> assigned Topics </w> = new <w> Hash Set </w> < > ( ) ; for ( final <w> Topic Partition </w> <w> topic Partition </w> : assignment . partitions ( ) ) { <w> assigned Topics </w> . add ( <w> topic Partition </w> . topic ( ) ) ; } if ( ! <w> stream Thread </w> . builder . <w> subscription Updates </w> ( ) . <w> get Updates </w> ( ) . <w> contains All </w> ( <w> assigned Topics </w> ) ) { <w> assigned Topics </w> . <w> add All </w> ( <w> stream Thread </w> . builder . <w> subscription Updates </w> ( ) . <w> get Updates </w> ( ) ) ; <w> update Subscribed Topics </w> ( <w> assigned Topics </w> ) ; } } }", "target": 1}
{"idx": 815, "func": "<comment> public final void <w> set Soft Min Evictable Idle Time Millis </w> ( final long <w> soft Min Evictable Idle Time Millis </w> ) { this . <w> soft Min Evictable Idle Time Millis </w> = <w> soft Min Evictable Idle Time Millis </w> ; }", "target": 0}
{"idx": 816, "func": "public static final int <w> ARCH _ MIPS _ 64 </w> = 0x80000000 ;", "target": 0}
{"idx": 817, "func": "private int <w> num Guesses </w> ;", "target": 0}
{"idx": 818, "func": "<comment> private final boolean <w> store Payloads </w> ;", "target": 0}
{"idx": 819, "func": "<comment> protected int <w> num Columns </w> = 0 ;", "target": 0}
{"idx": 820, "func": "<comment> private final int <w> max Retries </w> ;", "target": 1}
{"idx": 821, "func": "<comment> @ Override public String <w> get Servlet Path </w> ( ) { return this . <w> servlet Path </w> ; }", "target": 0}
{"idx": 822, "func": "public <w> Source Parameters </w> <w> get Parameters </w> ( Parameters source ) { if ( source ! = null ) { String [ ] names = source . <w> get Names </w> ( ) ; for ( int i = 0 ; i < names . length ; i + + ) { final String <w> current Parameter Name </w> = names [ i ] ; this . parameters . <w> set Parameter </w> ( <w> current Parameter Name </w> , source . <w> get Parameter </w> ( <w> current Parameter Name </w> , <str-literal> <str-literal> ) ) ; } } return parameters ; }", "target": 1}
{"idx": 823, "func": "<comment> public int <w> temp Merge Files </w> ;", "target": 1}
{"idx": 824, "func": "private final <w> Byte Buffer </w> metadata ;", "target": 0}
{"idx": 825, "func": "<comment> private int offset = 0 ;", "target": 0}
{"idx": 826, "func": "private final <w> Side Input Reader </w> <w> side Input Reader </w> ;", "target": 0}
{"idx": 827, "func": "<comment> public static final String <w> ACTION _ ALIGN _ BOTTOMS </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 828, "func": "protected void <w> has Property </w> ( Properties properties , String name ) { if ( properties . <w> get Property </w> ( name ) = = null ) throw new <w> Illegal Argument Exception </w> ( sm . <w> get String </w> ( <str-literal> <str-literal> <str-literal> , name ) ) ; }", "target": 1}
{"idx": 829, "func": "<comment> public boolean <w> has Undrained </w> ( ) { for ( Map . Entry < <w> Topic Partition </w> , Deque < <w> Producer Batch </w> > > entry : this . batches . <w> entry Set </w> ( ) ) { Deque < <w> Producer Batch </w> > deque = entry . <w> get Value </w> ( ) ; synchronized ( deque ) { if ( ! deque . <w> is Empty </w> ( ) ) return true ; } } return false ; }", "target": 0}
{"idx": 830, "func": "<comment> private boolean <w> needs Fetch Committed Offsets </w> ;", "target": 0}
{"idx": 831, "func": "<comment> public static final int [ ] <w> jjnew Lex State </w> = { - 1 , - 1 , 1 , 1 , - 1 , - 1 , - 1 , - 1 , 2 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , - 1 , } ;", "target": 0}
{"idx": 832, "func": "public void <w> To Source </w> ( <w> String Builder </w> sb ) { Name . <w> To Source </w> ( sb ) ; sb . append ( <str-literal> <str-literal> <str-literal> ) ; Statements . get ( 0 ) . <w> To Source </w> ( sb ) ; }", "target": 1}
{"idx": 833, "func": "static final String [ ] <w> EXPECTED _ RESULT </w>", "target": 1}
{"idx": 834, "func": "<comment> public <w> Parameter Info </w> [ ] <w> get Signature </w> ( ) { Lock <w> read Lock </w> = <w> parameters Lock </w> . <w> read Lock </w> ( ) ; <w> read Lock </w> . lock ( ) ; try { return this . parameters ; } finally { <w> read Lock </w> . unlock ( ) ; } }", "target": 0}
{"idx": 835, "func": "private byte [ ] value = <str-literal> <str-literal> <str-literal> . <w> get Bytes </w> ( ) ;", "target": 1}
{"idx": 836, "func": "<comment> private String handlerclass = null ;", "target": 0}
{"idx": 837, "func": "<comment> private final <w> Subscription State </w> subscriptions ;", "target": 0}
{"idx": 838, "func": "<comment> private <w> To Do List </w> root ;", "target": 1}
{"idx": 839, "func": "<comment> private <w> Error State </w> <w> error State </w> = <w> Error State </w> . NONE ;", "target": 0}
{"idx": 840, "func": "private static final Logger log = <w> Logger Factory </w> . <w> get Logger </w> ( <w> Mock Connector </w> . class ) ;", "target": 0}
{"idx": 841, "func": "private volatile <w> Target State </w> <w> target State </w> ;", "target": 0}
{"idx": 842, "func": "public void clear ( ) { <w> q Names </w> . clear ( ) ; super . clear ( ) ; }", "target": 0}
{"idx": 843, "func": "private static final String <w> SCHEMAS _ ENABLE _ CONFIG </w> = <str-literal> <str-literal> <str-literal> ;", "target": 1}
{"idx": 844, "func": "<comment> private Collection < String > <w> include Prelude </w> ;", "target": 0}
{"idx": 845, "func": "@ Override public <w> Maven Execution Request </w> <w> set Show Errors </w> ( boolean <w> show Errors </w> ) { this . <w> show Errors </w> = <w> show Errors </w> ; return this ; }", "target": 1}
{"idx": 846, "func": "Override public boolean <w> is New Fragment </w> ( ) { boolean <w> is New Frag </w> = <w> offset Att </w> . <w> end Offset </w> ( ) > = ( <w> fragment Size </w> * <w> current Num Frags </w> ) ; if ( <w> is New Frag </w> ) { <w> current Num Frags </w> + + ; } return <w> is New Frag </w> ; }", "target": 0}
{"idx": 847, "func": "<comment> protected boolean <w> is Push Supported </w> ( ) { return false ; }", "target": 0}
{"idx": 848, "func": "public static final String <w> NUM _ THREADS </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 849, "func": "<comment> private long <w> previous Seconds </w> = Long . <w> MIN _ VALUE </w> ;", "target": 0}
{"idx": 850, "func": "@ Override protected List < <w> Query Node </w> > <w> set Children Order </w> ( List < <w> Query Node </w> > children ) throws <w> Query Node Exception </w> { return children ; }", "target": 1}
{"idx": 851, "func": "<comment> public void <w> start DTD </w> ( String name , String <w> public Id </w> , String <w> system Id </w> ) throws <w> SAX Exception </w> { <comment> this . <w> in DTD </w> = true ; }", "target": 0}
{"idx": 852, "func": "<comment> public static final String <w> ACTION _ SETTINGS </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 853, "func": "private String <w> instructions 3 </w> = Translator . localize ( <str-literal> <str-literal> <str-literal> ) ;", "target": 1}
{"idx": 854, "func": "private String filename ;", "target": 0}
{"idx": 855, "func": "private static final String <w> WINDOW _ FORMAT </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 856, "func": "<comment> public static final String <w> ACTION _ DELETE _ MODEL _ ELEMENTS </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 857, "func": "<comment> public void <w> to DOM </w> ( Node node ) throws Exception { <w> to SAX </w> ( new <w> DOM Builder </w> ( node ) ) ; }", "target": 0}
{"idx": 858, "func": "public final static String <w> PARAM _ PARAMETERS </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 859, "func": "<comment> protected String <w> role Name Col </w> = null ;", "target": 0}
{"idx": 860, "func": "<comment> static final <w> Bytes Ref </w> NUMFIELDS = new <w> Bytes Ref </w> ( <str-literal> <str-literal> <str-literal> ) ;", "target": 0}
{"idx": 861, "func": "@ Override public int [ ] <w> get Int Block </w> ( ) { int [ ] b = new int [ <w> Int Block Pool </w> . <w> INT _ BLOCK _ SIZE </w> ] ; <w> bytes Used </w> . <w> add And Get </w> ( <w> Int Block Pool </w> . <w> INT _ BLOCK _ SIZE </w> * Integer . BYTES ) ; return b ; }", "target": 1}
{"idx": 862, "func": "private Set < <w> P Collection View </w> < ? > > views ;", "target": 0}
{"idx": 863, "func": "private static final String <w> ILLEGAL _ REPO _ ID _ CHARS </w> = <w> ILLEGAL _ FS _ CHARS </w> ;", "target": 1}
{"idx": 864, "func": "public Map <w> get Object Model </w> ( ) { return objectmodel ; }", "target": 0}
{"idx": 865, "func": "private final <w> Intersects Differentiating Query </w> <w> intersects Diff Query </w> ;", "target": 0}
{"idx": 866, "func": "public void <w> has Should Be False For A New Array </w> ( ) { <w> assert That </w> ( new <w> Native Array </w> ( 0 ) . has ( 0 , array ) , is ( false ) ) ; }", "target": 1}
{"idx": 867, "func": "protected Iterator < Cell > <w> cell Iter </w> ;", "target": 0}
{"idx": 868, "func": "public <w> Monotonic Block Packed Reader </w> <w> term Addresses </w> ;", "target": 1}
{"idx": 869, "func": "public Dimension <w> set Length </w> ( Dimension target , int source ) { if ( orientation = = VERTICAL ) return new Dimension ( ( int ) target . <w> get Width </w> ( ) , source ) ; else return new Dimension ( source , ( int ) target . <w> get Height </w> ( ) ) ; }", "target": 1}
{"idx": 870, "func": "public void <w> To Source </w> ( <w> String Builder </w> sb ) { sb . append ( <str-literal> <str-literal> <str-literal> ) ; if ( Modifiers ! = Modifier . Empty ) { this . <w> Trace Modifiers </w> ( this . Modifiers , sb ) ; sb . append ( <str-literal> <str-literal> <str-literal> ) ; } Name . <w> To Source </w> ( sb ) ; if ( Arguments ! = null ) { sb . append ( <str-literal> <str-literal> <str-literal> ) ; String comma = <str-literal> <str-literal> ; for ( int i = 0 ; i < Arguments . size ( ) ; i + + ) { sb . append ( comma ) ; Arguments . get ( i ) . <w> To Source </w> ( sb ) ; comma = <str-literal> <str-literal> <str-literal> ; } sb . append ( <str-literal> <str-literal> <str-literal> ) ; } sb . append ( <str-literal> <str-literal> <str-literal> ) ; }", "target": 1}
{"idx": 871, "func": "public Set < Artifact > <w> get Introduced Dependency Artifacts </w> ( ) { return ( <w> introduced Dependency Artifacts </w> ! = null ) ? <w> introduced Dependency Artifacts </w> : Collections . < Artifact > <w> empty Set </w> ( ) ; }", "target": 0}
{"idx": 872, "func": "<comment> protected volatile byte [ ] domain = new byte [ 0 ] ;", "target": 1}
{"idx": 873, "func": "@ Override public int <w> get Attributes </w> ( int index ) { if ( dense ! = null & & index > = 0 & & index < dense . length & & dense [ index ] ! = <w> NOT _ FOUND </w> ) { return EMPTY ; } return super . <w> get Attributes </w> ( index ) ; }", "target": 1}
{"idx": 874, "func": "<comment> protected <w> Jsp Fragment </w> <w> get Jsp Body </w> ( ) { return this . <w> jsp Body </w> ; }", "target": 0}
{"idx": 875, "func": "public void <w> start Bundle </w> ( ) { <comment> try { invoker . <w> invoke Start Bundle </w> ( new <w> Do Fn Start Bundle Context </w> ( ) ) ; } catch ( Throwable t ) { <comment> throw <w> wrap User Code Exception </w> ( t ) ; } }", "target": 0}
{"idx": 876, "func": "public <w> Block Statement </w> Statements = new <w> Block Statement </w> ( ) ;", "target": 1}
{"idx": 877, "func": "private final Iterator < Header > original ;", "target": 1}
{"idx": 878, "func": "private <w> Rpc Callback </w> callback ;", "target": 0}
{"idx": 879, "func": "<comment> protected <w> J Tabbed Pane </w> <w> get Tabs </w> ( ) { return tabs ; }", "target": 1}
{"idx": 880, "func": "<comment> private byte [ ] <w> min Packed Value </w> ;", "target": 1}
{"idx": 881, "func": "@ Override public <w> Model Building Request </w> <w> set Model Building Listener </w> ( <w> Model Building Listener </w> <w> model Building Listener </w> ) { this . <w> model Building Listener </w> = <w> model Building Listener </w> ; return this ; }", "target": 1}
{"idx": 882, "func": "<comment> public static final int <w> SSL _ OPT _ STDENVVARS </w> = ( 1 < < 1 ) ;", "target": 1}
{"idx": 883, "func": "<comment> public void disconnected ( <w> Connection Pool </w> parent , <w> Pooled Connection </w> con , boolean finalizing ) { }", "target": 0}
{"idx": 884, "func": "private final List < <w> Leaf Reader Context </w> > ctx ;", "target": 1}
{"idx": 885, "func": "<comment> public boolean <w> has Undrained </w> ( ) { for ( Map . Entry < <w> Topic Partition </w> , Deque < <w> Producer Batch </w> > > entry : this . batches . <w> entry Set </w> ( ) ) { Deque < <w> Producer Batch </w> > deque = entry . <w> get Value </w> ( ) ; synchronized ( deque ) { if ( ! deque . <w> is Empty </w> ( ) ) return true ; } } return false ; }", "target": 0}
{"idx": 886, "func": "<comment> private void <w> get Config Key Rst </w> ( <w> Config Key </w> key , <w> String Builder </w> b ) { b . append ( <str-literal> <str-literal> <str-literal> ) . append ( key . name ) . append ( <str-literal> <str-literal> <str-literal> ) . append ( <str-literal> <str-literal> <str-literal> <str-literal> ) ; for ( String <w> doc Line </w> : key . documentation . split ( <str-literal> <str-literal> <str-literal> <str-literal> ) ) { if ( <w> doc Line </w> . length ( ) = = 0 ) { continue ; } b . append ( <str-literal> <str-literal> ) . append ( <w> doc Line </w> ) . append ( <str-literal> <str-literal> <str-literal> <str-literal> <str-literal> <str-literal> ) ; } b . append ( <str-literal> <str-literal> <str-literal> ) . append ( <w> get Config Value </w> ( key , <str-literal> <str-literal> <str-literal> ) ) . append ( <str-literal> <str-literal> <str-literal> <str-literal> ) ; if ( key . <w> has Default </w> ( ) ) { b . append ( <str-literal> <str-literal> <str-literal> ) . append ( <w> get Config Value </w> ( key , <str-literal> <str-literal> <str-literal> ) ) . append ( <str-literal> <str-literal> <str-literal> <str-literal> ) ; } if ( key . validator ! = null ) { b . append ( <str-literal> <str-literal> <str-literal> ) . append ( <w> get Config Value </w> ( key , <str-literal> <str-literal> <str-literal> ) ) . append ( <str-literal> <str-literal> <str-literal> <str-literal> ) ; } b . append ( <str-literal> <str-literal> <str-literal> ) . append ( <w> get Config Value </w> ( key , <str-literal> <str-literal> <str-literal> ) ) . append ( <str-literal> <str-literal> <str-literal> <str-literal> ) ; }", "target": 1}
{"idx": 887, "func": "<comment> protected final String PACKAGES = <str-literal> <str-literal> <str-literal> ;", "target": 1}
{"idx": 888, "func": "@ Override public <w> Maven Execution Request </w> <w> set Cache Not Found </w> ( boolean <w> cache Not Found </w> ) { this . <w> cache Not Found </w> = <w> cache Not Found </w> ; return this ; }", "target": 1}
{"idx": 889, "func": "private static final String <w> DEFAULT _ APPNAME </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 890, "func": "public String <w> to String </w> ( ) { return <str-literal> <str-literal> <str-literal> + <w> planet Model </w> + <str-literal> <str-literal> <str-literal> + points + <str-literal> <str-literal> <str-literal> + <w> is Internal Edges </w> + ( ( holes = = null ) ? <str-literal> <str-literal> : <str-literal> <str-literal> <str-literal> + holes ) + <str-literal> <str-literal> <str-literal> ; }", "target": 0}
{"idx": 891, "func": "<comment> private byte [ ] <w> unique Id </w> ;", "target": 1}
{"idx": 892, "func": "private int <w> min Bytes </w> = 1 ;", "target": 1}
{"idx": 893, "func": "private final int <w> serialized Key Size </w> ;", "target": 0}
{"idx": 894, "func": "<comment> public static final String <w> SSL _ ENABLED _ PROTOCOLS _ CONFIG </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 895, "func": "private static final String <w> BROKERS _ KEY _ NAME </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 896, "func": "private static final String <w> TRANSFORMS _ DISPLAY </w> = <str-literal> <str-literal> <str-literal> ;", "target": 1}
{"idx": 897, "func": "@ Override public boolean <w> has Side Effects </w> ( ) { if ( <w> test Expression </w> = = null | | <w> true Expression </w> = = null | | <w> false Expression </w> = = null ) <w> code Bug </w> ( ) ; return <w> true Expression </w> . <w> has Side Effects </w> ( ) & & <w> false Expression </w> . <w> has Side Effects </w> ( ) ; }", "target": 0}
{"idx": 898, "func": "private int <w> samples _ channels </w> ;", "target": 1}
{"idx": 899, "func": "private Collection < Object > <w> get Fallback Model </w> ( ) { Collection < Object > result = new <w> Array List </w> < Object > ( ) ; Object profile = Model . <w> get Model Management Factory </w> ( ) . <w> create Profile </w> ( ) ; Model . <w> get Core Helper </w> ( ) . <w> set Name </w> ( profile , <str-literal> <str-literal> <str-literal> ) ; result . add ( profile ) ; return result ; }", "target": 1}
{"idx": 900, "func": "protected int sublevels = 0 ;", "target": 1}
{"idx": 901, "func": "<comment> public Vector <w> get Suites </w> ( String [ ] files ) { Vector suites = new Vector ( ) ; for ( int i = 0 ; i < files . length ; i + + ) { String filename = <w> strip Double Slashes </w> ( <w> TEST _ DIRECTORY </w> + File . separator + files [ i ] ) ; File fileobject = new File ( filename ) ; if ( fileobject . <w> is Directory </w> ( ) ) { <w> Test Suite </w> s = new <w> Test Suite </w> ( fileobject . <w> get Name </w> ( ) , filename ) ; suites . <w> add Element </w> ( s ) ; } } return suites ; }", "target": 1}
{"idx": 902, "func": "<comment> private <w> Ivy Node Element </w> [ ] <w> deep Dependency Cache </w> ;", "target": 0}
{"idx": 903, "func": "<comment> private Class [ ] clazz ;", "target": 1}
{"idx": 904, "func": "private final <w> Char Term Attribute </w> <w> term Attr </w> ;", "target": 0}
{"idx": 905, "func": "public long <w> ram Bytes Used </w> ( ) { return ( ( index ! = null ) ? index . <w> ram Bytes Used </w> ( ) : 0 ) ; }", "target": 0}
{"idx": 906, "func": "<comment> public static final Schema [ ] <w> TXN _ OFFSET _ COMMIT _ RESPONSE </w> = { <w> TXN _ OFFSET _ COMMIT _ RESPONSE _ V 0 </w> } ;", "target": 1}
{"idx": 907, "func": "<comment> protected final Map < String , <w> Getter Setter </w> > <w> getter Setter By Property Name </w> = new <w> Hash Map </w> < String , <w> Getter Setter </w> > ( ) ;", "target": 1}
{"idx": 908, "func": "private static final int <w> DEFAULT _ NUM _ SEGMENTS </w> = 3 ;", "target": 0}
{"idx": 909, "func": "<comment> public void changed ( ) { version + + ; <comment> <comment> }", "target": 0}
{"idx": 910, "func": "private Iterator iter ;", "target": 0}
{"idx": 911, "func": "public static final int <w> so Timeout </w> = 5000 ;", "target": 0}
{"idx": 912, "func": "<comment> protected final boolean <w> max Z Plane Intersects </w> ;", "target": 0}
{"idx": 913, "func": "private static final String [ ] <w> ODT _ FILE _ WITH _ MIN _ TEXT _ LEN </w>", "target": 1}
{"idx": 914, "func": "<comment> static final int <w> OUTPUT _ FLAGS _ NUM _ BITS </w> = 2 ;", "target": 0}
{"idx": 915, "func": "public void <w> To Source </w> ( <w> String Builder </w> sb ) { Variable . <w> To Source </w> ( sb ) ; sb . append ( <str-literal> <str-literal> ) ; switch ( Operator ) { case <w> Token ID </w> . Equal : sb . append ( <str-literal> <str-literal> <str-literal> ) ; break ; case <w> Token ID </w> . <w> Plus Equal </w> : sb . append ( <str-literal> <str-literal> <str-literal> ) ; break ; case <w> Token ID </w> . <w> Minus Equal </w> : sb . append ( <str-literal> <str-literal> <str-literal> ) ; break ; case <w> Token ID </w> . <w> Star Equal </w> : sb . append ( <str-literal> <str-literal> <str-literal> ) ; break ; case <w> Token ID </w> . <w> Slash Equal </w> : sb . append ( <str-literal> <str-literal> <str-literal> ) ; break ; case <w> Token ID </w> . <w> Percent Equal </w> : sb . append ( <str-literal> <str-literal> <str-literal> ) ; break ; case <w> Token ID </w> . <w> B And Equal </w> : sb . append ( <str-literal> <str-literal> <str-literal> ) ; break ; case <w> Token ID </w> . <w> B Or Equal </w> : sb . append ( <str-literal> <str-literal> <str-literal> ) ; break ; case <w> Token ID </w> . <w> B Xor Equal </w> : sb . append ( <str-literal> <str-literal> <str-literal> ) ; break ; case <w> Token ID </w> . <w> Shift Left Equal </w> : sb . append ( <str-literal> <str-literal> <str-literal> ) ; break ; case <w> Token ID </w> . <w> Shift Right Equal </w> : sb . append ( <str-literal> <str-literal> <str-literal> ) ; break ; } sb . append ( <str-literal> <str-literal> ) ; <w> Right Side </w> . <w> To Source </w> ( sb ) ; }", "target": 1}
{"idx": 916, "func": "int <w> frag Num </w> ;", "target": 0}
{"idx": 917, "func": "<comment> public static final String <w> CLIENT _ ID _ CONFIG </w> = <w> Common Client Configs </w> . <w> CLIENT _ ID _ CONFIG </w> ;", "target": 0}
{"idx": 918, "func": "private static final int <w> SOCKET _ SIZE _ BYTES </w> = 1 * 1024 * 1024 ;", "target": 0}
{"idx": 919, "func": "<comment> public void <w> end Element </w> ( String <w> namespace URI </w> , String <w> local Name </w> , String raw ) throws <w> SAX Exception </w> { this . <w> root Element Index </w> - - ; if ( this . <w> root Element Index </w> = = - 1 ) { <w> get Logger </w> ( ) . debug ( <str-literal> <str-literal> <str-literal> ) ; return ; } if ( <w> namespace URI </w> = = null | | <w> namespace URI </w> . equals ( <str-literal> <str-literal> ) ) { final String qname = this . <w> current Element </w> . prefix . equals ( <str-literal> <str-literal> ) ? <w> local Name </w> : this . <w> current Element </w> . prefix + <str-literal> + <w> local Name </w> ; this . <w> content Handler </w> . <w> end Element </w> ( this . <w> current Element </w> . namespace , <w> local Name </w> , qname ) ; } else { this . <w> content Handler </w> . <w> end Element </w> ( <w> namespace URI </w> , <w> local Name </w> , raw ) ; } }", "target": 1}
{"idx": 920, "func": "public <w> Project Building Request </w> <w> set Validation Level </w> ( int <w> validation Level </w> ) { this . <w> validation Level </w> = <w> validation Level </w> ; return this ; }", "target": 1}
{"idx": 921, "func": "<comment> protected boolean <w> is Push Supported </w> ( ) { return false ; }", "target": 1}
{"idx": 922, "func": "private final String credentials ;", "target": 1}
{"idx": 923, "func": "@ Override public String <w> get Secret Key </w> ( String <w> app Id </w> ) { if ( ! <w> app Id </w> . equals ( this . <w> app Id </w> ) ) { throw new <w> Illegal Argument Exception </w> ( <str-literal> <str-literal> <str-literal> ) ; } return <w> secret Key </w> ; }", "target": 0}
{"idx": 924, "func": "<comment> public List < Node > nodes ( ) { return this . nodes ; }", "target": 0}
{"idx": 925, "func": "public boolean <w> get Stats </w> ( ) { return <w> _ stats </w> ; }", "target": 1}
{"idx": 926, "func": "<comment> private final <w> Streams Metrics Thread Impl </w> <w> streams Metrics </w> ;", "target": 0}
{"idx": 927, "func": "public static final String <w> TRANSFORMS _ CONFIG </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 928, "func": "<comment> <w> J Tabbed Pane </w> <w> get Tabs </w> ( ) { return <w> top Level Tabbed Pane </w> ; }", "target": 1}
{"idx": 929, "func": "<comment> private long <w> num Chunks </w> ;", "target": 0}
{"idx": 930, "func": "protected <w> Input Buffer </w> ib ;", "target": 0}
{"idx": 931, "func": "<comment> private long length ;", "target": 0}
{"idx": 932, "func": "public boolean <w> is Empty </w> ( ) { return views . <w> is Empty </w> ( ) ; }", "target": 0}
{"idx": 933, "func": "@ Override public <w> Maven Execution Request </w> <w> set Global Checksum Policy </w> ( String <w> global Checksum Policy </w> ) { this . <w> global Checksum Policy </w> = <w> global Checksum Policy </w> ; return this ; }", "target": 1}
{"idx": 934, "func": "@ Override public double <w> get Radius </w> ( ) { <comment> <comment> if ( <w> top Lat </w> > 0.0 ) return Math . PI ; double <w> max Cos Lat </w> = <w> cos Top Lat </w> ; return <w> max Cos Lat </w> * Math . PI ; }", "target": 0}
{"idx": 935, "func": "public String <w> get Id </w> ( ) { <w> check Valid </w> ( ) ; return id ; }", "target": 1}
{"idx": 936, "func": "private char [ ] cb ;", "target": 0}
{"idx": 937, "func": "private <w> Bytes Ref Builder </w> values ;", "target": 1}
{"idx": 938, "func": "<comment> private byte [ ] message ;", "target": 1}
{"idx": 939, "func": "<comment> private <w> Byte Buffer </w> <w> out BB </w> = <w> Byte Buffer </w> . wrap ( bytes ) ;", "target": 0}
{"idx": 940, "func": "<comment> public static void check ( Query q ) { <w> check Hash Equals </w> ( q ) ; }", "target": 1}
{"idx": 941, "func": "<comment> @ Override public void send ( <w> Client Request </w> request , long now ) { <w> do Send </w> ( request , false , now ) ; }", "target": 0}
{"idx": 942, "func": "<comment> private static final long <w> MASK _ LONG _ LOWER _ 40 _ BITS </w> = ( 1l < < 40 ) - 1 ;", "target": 0}
{"idx": 943, "func": "public List < <w> Control Data </w> > <w> get Properties </w> ( ) { return Collections . <w> unmodifiable List </w> ( properties ) ; }", "target": 0}
{"idx": 944, "func": "private int <w> get Usable Capacity </w> ( ) { <comment> <comment> return ( int ) ( array . size ( ) / ( <w> use Radix Sort </w> ? 2 : 1.5 ) ) ; }", "target": 1}
{"idx": 945, "func": "<comment> public void init ( ) throws <w> Servlet Exception </w> { <comment> }", "target": 0}
{"idx": 946, "func": "<comment> public byte [ ] <w> get Message </w> ( ) { return message ; }", "target": 0}
{"idx": 947, "func": "<comment> private volatile long <w> max Wait Millis </w> = <w> Base Object Pool Config </w> . <w> DEFAULT _ MAX _ WAIT _ MILLIS </w> ;", "target": 0}
{"idx": 948, "func": "private final <w> Disi Priority Queue </w> <w> sub Scorers </w> ;", "target": 0}
{"idx": 949, "func": "<comment> public static Location <w> get Location </w> ( Parameters param ) { Location loc = null ; if ( param instanceof Locatable ) { loc = ( ( Locatable ) param ) . <w> get Location </w> ( ) ; } return loc = = null ? Location . UNKNOWN : loc ; }", "target": 0}
{"idx": 950, "func": "public static final <w> Storage Level </w> NONE = create ( false , false , false , false , 1 ) ;", "target": 0}
{"idx": 951, "func": "@ Override public <w> Model Problem Collector </w> <w> get Problems </w> ( ) { return problems ; }", "target": 0}
{"idx": 952, "func": "<comment> public java . util . List < java . lang . String > <w> get Strings Column </w> ( ) { return <w> strings _ column </w> ; }", "target": 0}
{"idx": 953, "func": "<comment> protected Map <w> object Model </w> ;", "target": 0}
{"idx": 954, "func": "public long modifiers ;", "target": 1}
{"idx": 955, "func": "public Member [ ] <w> get View </w> ( ) { return view ; }", "target": 1}
{"idx": 956, "func": "<comment> public boolean <w> should Set Content Length </w> ( ) { return false ; }", "target": 1}
{"idx": 957, "func": "public String <w> get Alias </w> ( ) { return alias ; }", "target": 0}
{"idx": 958, "func": "private static Directory directory ;", "target": 0}
{"idx": 959, "func": "<comment> public <w> String Buffer </w> <w> get Request URL </w> ( ) { return this . req . <w> get Request URL </w> ( ) ; }", "target": 1}
{"idx": 960, "func": "public void <w> set Position Sensitive </w> ( boolean <w> position Sensitive </w> ) { this . <w> position Sensitive </w> = <w> position Sensitive </w> ; }", "target": 0}
{"idx": 961, "func": "<comment> public boolean <w> is Const </w> ( String name ) { Slot slot = <w> get Slot </w> ( name , 0 , <w> SLOT _ QUERY </w> ) ; if ( slot = = null ) { return false ; } return ( slot . <w> get Attributes </w> ( ) & ( PERMANENT | READONLY ) ) = = ( PERMANENT | READONLY ) ; }", "target": 0}
{"idx": 962, "func": "@ Override public void to ( Serde < K > <w> key Serde </w> , Serde < V > <w> val Serde </w> , String topic ) { this . <w> to Stream </w> ( ) . to ( <w> key Serde </w> , <w> val Serde </w> , null , topic ) ; }", "target": 1}
{"idx": 963, "func": "<comment> <comment> public void check ( ) { if ( log . <w> is Debug Enabled </w> ( ) ) log . debug ( sm . <w> get String </w> ( <str-literal> <str-literal> <str-literal> , <w> watch Dir </w> ) ) ; File [ ] list = <w> watch Dir </w> . <w> list Files </w> ( new <w> War Filter </w> ( ) ) ; if ( list = = null ) { log . warn ( sm . <w> get String </w> ( <str-literal> <str-literal> <str-literal> , <w> watch Dir </w> ) ) ; list = new File [ 0 ] ; } <comment> for ( int i = 0 ; i < list . length ; i + + ) { if ( ! list [ i ] . exists ( ) ) log . warn ( sm . <w> get String </w> ( <str-literal> <str-literal> <str-literal> , list [ i ] , <w> watch Dir </w> ) ) ; <w> add War Info </w> ( list [ i ] ) ; } <comment> for ( Iterator < Map . Entry < String , <w> War Info </w> > > i = <w> current Status </w> . <w> entry Set </w> ( ) . iterator ( ) ; i . <w> has Next </w> ( ) ; ) { Map . Entry < String , <w> War Info </w> > entry = i . next ( ) ; <w> War Info </w> info = entry . <w> get Value </w> ( ) ; if ( log . <w> is Trace Enabled </w> ( ) ) log . trace ( sm . <w> get String </w> ( <str-literal> <str-literal> <str-literal> , info . <w> get War </w> ( ) ) ) ; int check = info . check ( ) ; if ( check = = 1 ) { listener . <w> file Modified </w> ( info . <w> get War </w> ( ) ) ; } else if ( check = = - 1 ) { listener . <w> file Removed </w> ( info . <w> get War </w> ( ) ) ; <comment> i . remove ( ) ; } if ( log . <w> is Trace Enabled </w> ( ) ) log . trace ( sm . <w> get String </w> ( <str-literal> <str-literal> <str-literal> , Integer . <w> value Of </w> ( check ) , info . <w> get War </w> ( ) ) ) ; } }", "target": 0}
{"idx": 964, "func": "<comment> public static final double <w> MIN _ LAT _ RADIANS </w> = <w> TO _ RADIANS </w> * <w> MIN _ LAT _ INCL </w> ;", "target": 0}
{"idx": 965, "func": "public void clear ( <w> Trigger Context </w> c ) throws Exception { c . state ( ) . access ( <w> DELAYED _ UNTIL _ TAG </w> ) . clear ( ) ; }", "target": 0}
{"idx": 966, "func": "<comment> private static final int <w> TTL _ SECONDS </w> = <w> TTL _ NOT _ USED </w> ;", "target": 1}
{"idx": 967, "func": "<comment> private <w> Scroll List </w> scroll ;", "target": 1}
{"idx": 968, "func": "<comment> public static final String <w> GROUP _ ID _ CONFIG </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 969, "func": "private static Icon compos = <w> Resource Loader Wrapper </w> . <w> lookup Icon Resource </w> ( <str-literal> <str-literal> <str-literal> ) ;", "target": 0}
{"idx": 970, "func": "public <w> Isolation Level </w> <w> isolation Level </w> ( ) { return <w> isolation Level </w> ; }", "target": 0}
{"idx": 971, "func": "@ Override public <w> Maven Execution Request </w> <w> set Toolchains </w> ( Map < String , List < <w> Toolchain Model </w> > > toolchains ) { this . toolchains = toolchains ; return this ; }", "target": 1}
{"idx": 972, "func": "<comment> private void <w> set Underlying Timer </w> ( Instant target ) { <w> timer Internals </w> . <w> set Timer </w> ( namespace , <w> timer Id </w> , target , spec . <w> get Time Domain </w> ( ) ) ; }", "target": 0}
{"idx": 973, "func": "<comment> public static void check ( Random random , Query <w> q 1 </w> , <w> Index Searcher </w> s ) { check ( random , <w> q 1 </w> , s , true ) ; }", "target": 1}
{"idx": 974, "func": "public static final int <w> DEFAULT _ VERTICES </w> = 32 ;", "target": 1}
{"idx": 975, "func": "<comment> public static final Schema [ ] <w> SASL _ HANDSHAKE _ RESPONSE </w> = { <w> SASL _ HANDSHAKE _ RESPONSE _ V 0 </w> } ;", "target": 1}
{"idx": 976, "func": "<comment> private long last = Long . <w> MIN _ VALUE </w> ;", "target": 0}
{"idx": 977, "func": "@ Override public Consumer < byte [ ] , byte [ ] > <w> get Restore Consumer </w> ( Map < String , Object > config ) { return new <w> Kafka Consumer </w> < > ( config , new <w> Byte Array Deserializer </w> ( ) , new <w> Byte Array Deserializer </w> ( ) ) ; }", "target": 1}
{"idx": 978, "func": "<comment> @ Override public void unbind ( Name name ) throws <w> Naming Exception </w> { if ( ! <w> check Writable </w> ( ) ) { return ; } while ( ( ! name . <w> is Empty </w> ( ) ) & & ( name . get ( 0 ) . length ( ) = = 0 ) ) name = name . <w> get Suffix </w> ( 1 ) ; if ( name . <w> is Empty </w> ( ) ) throw new <w> Naming Exception </w> ( sm . <w> get String </w> ( <str-literal> <str-literal> <str-literal> ) ) ; <w> Naming Entry </w> entry = bindings . get ( name . get ( 0 ) ) ; if ( entry = = null ) { throw new <w> Name Not Found Exception </w> ( sm . <w> get String </w> ( <str-literal> <str-literal> <str-literal> , name , name . get ( 0 ) ) ) ; } if ( name . size ( ) > 1 ) { if ( entry . type = = <w> Naming Entry </w> . CONTEXT ) { ( ( Context ) entry . value ) . unbind ( name . <w> get Suffix </w> ( 1 ) ) ; } else { throw new <w> Naming Exception </w> ( sm . <w> get String </w> ( <str-literal> <str-literal> <str-literal> ) ) ; } } else { bindings . remove ( name . get ( 0 ) ) ; } }", "target": 0}
{"idx": 979, "func": "@ Override public <w> Maven Execution Request </w> <w> set Update Snapshots </w> ( boolean <w> update Snapshots </w> ) { this . <w> update Snapshots </w> = <w> update Snapshots </w> ; return this ; }", "target": 1}
{"idx": 980, "func": "static final <w> Type Descriptor </w> < Message > <w> MESSAGE _ TYPE </w> = new <w> Type Descriptor </w> < Message > ( ) { } ;", "target": 0}
{"idx": 981, "func": "<comment> private boolean <w> clear References Stop Threads </w> = false ;", "target": 0}
{"idx": 982, "func": "protected int <w> num Gains </w> = 0 ;", "target": 0}
{"idx": 983, "func": "private static final int <w> NUM _ BROKERS </w> = 3 ;", "target": 0}
{"idx": 984, "func": "public <w> Project Building Request </w> <w> set Remote Repositories </w> ( List < <w> Artifact Repository </w> > <w> remote Repositories </w> ) { if ( <w> remote Repositories </w> ! = null ) { this . <w> remote Repositories </w> = new <w> Array List </w> < > ( <w> remote Repositories </w> ) ; } else { this . <w> remote Repositories </w> . clear ( ) ; } return this ; }", "target": 1}
{"idx": 985, "func": "<comment> private long <w> num Hash Collisions </w> = 0 ;", "target": 0}
{"idx": 986, "func": "<comment> public static final String <w> ACTION _ OPEN _ GOALS </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 987, "func": "<comment> public static final boolean <w> DEFAULT _ EXCLUDE _ INTERNAL _ TOPICS </w> = true ;", "target": 0}
{"idx": 988, "func": "static final int <w> OUTPUT _ FLAGS _ NUM _ BITS </w> = 2 ;", "target": 0}
{"idx": 989, "func": "<comment> public <w> Memory Block </w> <w> get Memory Page </w> ( ) { return this . <w> memory Page </w> ; }", "target": 0}
{"idx": 990, "func": "@ Override public <w> Maven Execution Request </w> <w> set Reactor Failure Behavior </w> ( String <w> failure Behavior </w> ) { <w> reactor Failure Behavior </w> = <w> failure Behavior </w> ; return this ; }", "target": 1}
{"idx": 991, "func": "<comment> private final Set < <w> Topic Partition </w> > <w> partitions Remaining </w> ;", "target": 0}
{"idx": 992, "func": "<comment> public static <w> Join Windows </w> of ( final long <w> time Difference Ms </w> ) throws <w> Illegal Argument Exception </w> { return new <w> Join Windows </w> ( <w> time Difference Ms </w> , <w> time Difference Ms </w> ) ; }", "target": 0}
{"idx": 993, "func": "<comment> public void <w> inject On Acknowledgement Error </w> ( boolean on ) { <w> throw Exception On Ack </w> = on ; }", "target": 0}
{"idx": 994, "func": "public static void <w> to Artifacts </w> ( Collection < org . apache . maven . artifact . Artifact > artifacts Collection < ? extends <w> Dependency Node </w> > nodes , List < String > trail , <w> Dependency Filter </w> filter ) { for ( <w> Dependency Node </w> node : nodes ) { org . apache . maven . artifact . Artifact artifact = <w> to Artifact </w> ( node . <w> get Dependency </w> ( ) ) ; List < String > <w> node Trail </w> = new <w> Array List </w> < > ( trail . size ( ) + 1 ) ; <w> node Trail </w> . <w> add All </w> ( trail ) ; <w> node Trail </w> . add ( artifact . <w> get Id </w> ( ) ) ; if ( filter = = null | | filter . accept ( node , Collections . < <w> Dependency Node </w> > <w> empty List </w> ( ) ) ) { artifact . <w> set Dependency Trail </w> ( <w> node Trail </w> ) ; artifacts . add ( artifact ) ; } <w> to Artifacts </w> ( artifacts , node . <w> get Children </w> ( ) , <w> node Trail </w> , filter ) ; } }", "target": 1}
{"idx": 995, "func": "private final int iterations ;", "target": 1}
{"idx": 996, "func": "<comment> public static final String <w> SECURITY _ PROTOCOL _ CONFIG </w> = <w> Common Client Configs </w> . <w> SECURITY _ PROTOCOL _ CONFIG </w> ;", "target": 0}
{"idx": 997, "func": "<comment> public static final byte <w> OPCODE _ PING </w> = 0x09 ;", "target": 0}
{"idx": 998, "func": "<comment> public java . util . Map < java . lang . String , java . lang . Integer > <w> get String To Int Column </w> ( ) { return <w> string _ to _ int _ column </w> ; }", "target": 0}
{"idx": 999, "func": "private final <w> Model Problem Collector </w> problems ;", "target": 0}
{"idx": 1000, "func": "@ Override protected void <w> to String Append Fields </w> ( final <w> String Builder </w> builder ) { builder . append ( <str-literal> <str-literal> <str-literal> ) ; builder . append ( closed ) ; }", "target": 1}
{"idx": 1001, "func": "<comment> protected static final byte [ ] <w> STREAM _ TERMINATOR </w> = { DASH , DASH } ;", "target": 0}
{"idx": 1002, "func": "<comment> private final int <w> num Postings </w> ;", "target": 0}
{"idx": 1003, "func": "public <w> Weighted Span Term </w> ( float weight , String term , boolean <w> position Sensitive </w> ) { super ( weight , term ) ; this . <w> position Sensitive </w> = <w> position Sensitive </w> ; }", "target": 0}
{"idx": 1004, "func": "<comment> public void <w> ensure Fresh Metadata </w> ( ) { if ( this . metadata . <w> update Requested </w> ( ) | | this . metadata . <w> time To Next Update </w> ( time . milliseconds ( ) ) = = 0 ) <w> await Metadata Update </w> ( ) ; }", "target": 1}
{"idx": 1005, "func": "private static final String [ ] <w> ODT _ FILE </w> private static final String [ ] <w> ODT _ FILE </w>", "target": 1}
{"idx": 1006, "func": "@ Override public int set ( int index , long [ ] arr , int off , int len ) { assert len > 0 : <str-literal> <str-literal> <str-literal> + len + <str-literal> <str-literal> <str-literal> ; assert index > = 0 & & index < <w> value Count </w> ; assert off + len < = arr . length ; final int sets = Math . min ( <w> value Count </w> - index , len ) ; for ( int i = index , o = off , end = index + sets ; i < end ; + + i , + + o ) { values [ i ] = ( short ) arr [ o ] ; } return sets ; }", "target": 1}
{"idx": 1007, "func": "private static final int <w> PARAM _ VALUES </w> = 8 ;", "target": 1}
{"idx": 1008, "func": "private void <w> validate Projects </w> ( List < <w> Maven Project </w> > projects ) { Map < String , <w> Maven Project </w> > <w> projects Map </w> = new <w> Hash Map </w> < > ( ) ; for ( <w> Maven Project </w> p : projects ) { String <w> project Key </w> = <w> Artifact Utils </w> . key ( p . <w> get Group Id </w> ( ) , p . <w> get Artifact Id </w> ( ) , p . <w> get Version </w> ( ) ) ; <w> projects Map </w> . put ( <w> project Key </w> , p ) ; } for ( <w> Maven Project </w> project : projects ) { <comment> for ( Plugin plugin : project . <w> get Build Plugins </w> ( ) ) { if ( plugin . <w> is Extensions </w> ( ) ) { String <w> plugin Key </w> = <w> Artifact Utils </w> . key ( plugin . <w> get Group Id </w> ( ) , plugin . <w> get Artifact Id </w> ( ) , plugin . <w> get Version </w> ( ) ) ; if ( <w> projects Map </w> . <w> contains Key </w> ( <w> plugin Key </w> ) ) { logger . warn ( project . <w> get Name </w> ( ) + <str-literal> <str-literal> <str-literal> + plugin . <w> get Key </w> ( ) + <str-literal> <str-literal> <str-literal> + <str-literal> <str-literal> <str-literal> ) ; } } } } }", "target": 1}
{"idx": 1009, "func": "private <w> J Tabbed Pane </w> tabs ;", "target": 1}
{"idx": 1010, "func": "<comment> public List <w> get Enter Sitemap Event Listeners </w> ( ) { <comment> <comment> return ( List ) ( ( <w> Array List </w> ) this . <w> enter Sitemap Event Listeners </w> ) . clone ( ) ; }", "target": 0}
{"idx": 1011, "func": "private final <w> Linked List </w> < <w> Memory Block </w> > <w> allocated Pages </w> = new <w> Linked List </w> < > ( ) ;", "target": 0}
{"idx": 1012, "func": "protected void <w> check Expired </w> ( ) { synchronized ( <w> expired Mutex </w> ) { Member [ ] expired = membership . expire ( <w> time To Expiration </w> ) ; for ( int i = 0 ; i < expired . length ; i + + ) { final Member member = expired [ i ] ; if ( log . <w> is Debug Enabled </w> ( ) ) log . debug ( <str-literal> <str-literal> <str-literal> + expired [ i ] ) ; try { Runnable t = new Runnable ( ) { @ Override public void run ( ) { String name = Thread . <w> current Thread </w> ( ) . <w> get Name </w> ( ) ; try { Thread . <w> current Thread </w> ( ) . <w> set Name </w> ( <str-literal> <str-literal> <str-literal> ) ; service . <w> member Disappeared </w> ( member ) ; } finally { Thread . <w> current Thread </w> ( ) . <w> set Name </w> ( name ) ; } } } ; executor . execute ( t ) ; } catch ( Exception x ) { log . error ( sm . <w> get String </w> ( <str-literal> <str-literal> <str-literal> ) , x ) ; } } } }", "target": 1}
{"idx": 1013, "func": "public static <w> Storage Level </w> create ( boolean <w> use Disk </w> , boolean <w> use Memory </w> , boolean <w> use Off Heap </w> , boolean deserialized , int replication ) { return <w> Storage Level </w> . apply ( <w> use Disk </w> , <w> use Memory </w> , <w> use Off Heap </w> , deserialized , replication ) ; }", "target": 0}
{"idx": 1014, "func": "<comment> public static boolean <w> APR _ HAS _ THREADS </w> = false ;", "target": 0}
{"idx": 1015, "func": "public int <w> get Port </w> ( ) { if ( port = = - 1 ) { throw new <w> Illegal State Exception </w> ( <str-literal> <str-literal> <str-literal> ) ; } return port ; }", "target": 0}
{"idx": 1016, "func": "<comment> public final long microseconds ;", "target": 1}
{"idx": 1017, "func": "<comment> public static final String <w> APPLICATION _ SERVER _ CONFIG </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 1018, "func": "@ Override public <w> Maven Execution Request </w> <w> set Servers </w> ( List < Server > servers ) { if ( servers ! = null ) { this . servers = new <w> Array List </w> < > ( servers ) ; } else { this . servers = null ; } return this ; }", "target": 1}
{"idx": 1019, "func": "<comment> private long <w> max Rows </w> ;", "target": 0}
{"idx": 1020, "func": "<comment> public <w> Join Windows </w> after ( final long <w> time Difference Ms </w> ) throws <w> Illegal Argument Exception </w> { return new <w> Join Windows </w> ( <w> before Ms </w> , <w> time Difference Ms </w> ) ; }", "target": 0}
{"idx": 1021, "func": "public static <w> Field Type </w> OFFSETS = new <w> Field Type </w> ( <w> Text Field </w> . <w> TYPE _ STORED </w> ) ;", "target": 1}
{"idx": 1022, "func": "<comment> public static final String <w> SYSPROP _ BADAPPLES </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 1023, "func": "private void <w> check All Threads Dead And Set Error </w> ( ) { synchronized ( <w> state Lock </w> ) { <comment> <comment> if ( state ! = <w> PENDING _ SHUTDOWN </w> ) { <comment> for ( final <w> Stream Thread </w> . State state : <w> thread State </w> . values ( ) ) { if ( state ! = <w> Stream Thread </w> . State . DEAD ) { return ; } } log . warn ( <str-literal> <str-literal> <str-literal> , <w> log Prefix </w> ) ; <w> set State </w> ( ERROR ) ; } } }", "target": 1}
{"idx": 1024, "func": "<comment> public static final Schema [ ] <w> HEARTBEAT _ RESPONSE </w> = { <w> HEARTBEAT _ RESPONSE _ V 0 </w> , <w> HEARTBEAT _ RESPONSE _ V 1 </w> } ;", "target": 1}
{"idx": 1025, "func": "<comment> private String alias ;", "target": 0}
{"idx": 1026, "func": "<comment> public static final Schema [ ] <w> FETCH _ RESPONSE </w> = { <w> FETCH _ RESPONSE _ V 0 </w> , <w> FETCH _ RESPONSE _ V 1 </w> , <w> FETCH _ RESPONSE _ V 2 </w> , <w> FETCH _ RESPONSE _ V 3 </w> , <w> FETCH _ RESPONSE _ V 4 </w> , <w> FETCH _ RESPONSE _ V 5 </w> } ;", "target": 1}
{"idx": 1027, "func": "@ Override public <w> Operation Handle </w> <w> get Schemas </w> ( String <w> catalog Name </w> , String <w> schema Name </w> ) throws <w> Hive SQL Exception </w> { acquire ( true ) ; <w> Operation Manager </w> <w> operation Manager </w> = <w> get Operation Manager </w> ( ) ; <w> Get Schemas Operation </w> operation = <w> operation Manager </w> . <w> new Get Schemas Operation </w> ( <w> get Session </w> ( ) , <w> catalog Name </w> , <w> schema Name </w> ) ; <w> Operation Handle </w> <w> op Handle </w> = operation . <w> get Handle </w> ( ) ; try { operation . run ( ) ; <w> op Handle Set </w> . add ( <w> op Handle </w> ) ; return <w> op Handle </w> ; } catch ( <w> Hive SQL Exception </w> e ) { <w> operation Manager </w> . <w> close Operation </w> ( <w> op Handle </w> ) ; throw e ; } finally { release ( true ) ; } }", "target": 1}
{"idx": 1028, "func": "public synchronized int <w> get Name Index </w> ( ) { if ( <w> name Index </w> = = 0 ) { <w> name Index </w> = <w> name Counter </w> . <w> increment And Get </w> ( ) ; } return <w> name Index </w> ; }", "target": 1}
{"idx": 1029, "func": "<comment> private int <w> index Interval Mask </w> ;", "target": 0}
{"idx": 1030, "func": "private static Set < String > <w> get Tags </w> ( String . . . keys ) { Set < String > tags = new <w> Hash Set </w> < String > ( ) ; for ( int i = 0 ; i < keys . length ; i + + ) tags . add ( keys [ i ] ) ; return tags ; }", "target": 1}
{"idx": 1031, "func": "public void <w> inject Authentication </w> ( <w> Repository System Session </w> session , List < <w> Artifact Repository </w> > repositories ) { if ( repositories ! = null & & session ! = null ) { for ( <w> Artifact Repository </w> repository : repositories ) { repository . <w> set Authentication </w> ( <w> get Authentication </w> ( session , repository ) ) ; } } }", "target": 0}
{"idx": 1032, "func": "<comment> public final static int Is = 0x8c ;", "target": 0}
{"idx": 1033, "func": "<comment> private static final long <w> MASK _ LONG _ LOWER _ 51 _ BITS </w> = ( 1l < < 51 ) - 1 ;", "target": 0}
{"idx": 1034, "func": "<comment> public static final String <w> SKIP _ JARS _ PROPERTY </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 1035, "func": "private final <w> Page Info </w> <w> page Info </w> ;", "target": 0}
{"idx": 1036, "func": "private byte [ ] value ;", "target": 1}
{"idx": 1037, "func": "@ Override public void <w> get Bounds </w> ( Bounds bounds ) { for ( <w> Geo Membership Shape </w> shape : shapes ) { shape . <w> get Bounds </w> ( bounds ) ; } }", "target": 1}
{"idx": 1038, "func": "private byte [ ] input ;", "target": 1}
{"idx": 1039, "func": "<comment> static final int <w> DEFAULT _ MAX _ COOKIE _ COUNT </w> = 200 ;", "target": 0}
{"idx": 1040, "func": "public void <w> To Source </w> ( <w> String Builder </w> sb ) { Left . <w> To Source </w> ( sb ) ; sb . append ( <str-literal> <str-literal> <str-literal> ) ; Identifier . <w> To Source </w> ( sb ) ; }", "target": 1}
{"idx": 1041, "func": "public <w> Mutable Value </w> duplicate ( ) { <w> Mutable Value Int </w> v = new <w> Mutable Value Int </w> ( ) ; v . value = this . value ; v . exists = this . exists ; return v ; }", "target": 0}
{"idx": 1042, "func": "<comment> public <w> String Buffer </w> <w> get Request URL </w> ( ) { <comment> throw new <w> Unsupported Operation Exception </w> ( ) ; }", "target": 1}
{"idx": 1043, "func": "<comment> public short <w> get Modifiers </w> ( ) { return modifiers ; }", "target": 1}
{"idx": 1044, "func": "<comment> public long finish ( <w> Index Output </w> out ) throws <w> IO Exception </w> { <comment> <comment> <comment> if ( <w> heap Point Writer </w> = = null & & <w> temp Input </w> = = null ) { throw new <w> Illegal State Exception </w> ( <str-literal> <str-literal> <str-literal> ) ; } if ( <w> offline Point Writer </w> ! = null ) { <w> offline Point Writer </w> . close ( ) ; } if ( <w> point Count </w> = = 0 ) { throw new <w> Illegal State Exception </w> ( <str-literal> <str-literal> <str-literal> ) ; } <w> Long Bit Set </w> <w> ord Bit Set </w> ; if ( <w> num Dims </w> > 1 ) { if ( <w> single Value Per Doc </w> ) { <w> ord Bit Set </w> = new <w> Long Bit Set </w> ( <w> max Doc </w> ) ; } else { <w> ord Bit Set </w> = new <w> Long Bit Set </w> ( <w> point Count </w> ) ; } } else { <w> ord Bit Set </w> = null ; } long <w> count Per Leaf </w> = <w> point Count </w> ; long <w> inner Node Count </w> = 1 ; while ( <w> count Per Leaf </w> > <w> max Points In Leaf Node </w> ) { <w> count Per Leaf </w> = ( <w> count Per Leaf </w> + 1 ) / 2 ; <w> inner Node Count </w> * = 2 ; } int <w> num Leaves </w> = ( int ) <w> inner Node Count </w> ; <w> check Max Leaf Node Count </w> ( <w> num Leaves </w> ) ; <comment> <comment> <comment> byte [ ] <w> split Packed Values </w> = new byte [ Math . <w> to Int Exact </w> ( <w> num Leaves </w> * ( 1 + <w> bytes Per Dim </w> ) ) ] ; <comment> long [ ] <w> leaf Block F Ps </w> = new long [ <w> num Leaves </w> ] ; <comment> assert <w> point Count </w> / <w> num Leaves </w> < = <w> max Points In Leaf Node </w> : <str-literal> <str-literal> <str-literal> + <w> point Count </w> + <str-literal> <str-literal> <str-literal> + <w> num Leaves </w> + <str-literal> <str-literal> <str-literal> + <w> max Points In Leaf Node </w> ; <comment> <w> Path Slice </w> [ ] <w> sorted Point Writers </w> = new <w> Path Slice </w> [ <w> num Dims </w> ] ; <comment> List < Closeable > <w> to Close Heroically </w> = new <w> Array List </w> < > ( ) ; boolean success = false ; try { <comment> for ( int dim = 0 ; dim < <w> num Dims </w> ; dim + + ) { <w> sorted Point Writers </w> [ dim ] = new <w> Path Slice </w> ( sort ( dim ) , 0 , <w> point Count </w> ) ; } <comment> <comment> if ( <w> temp Input </w> ! = null ) { <w> temp Dir </w> . <w> delete File </w> ( <w> temp Input </w> . <w> get Name </w> ( ) ) ; <w> temp Input </w> = null ; } else { assert <w> heap Point Writer </w> ! = null ; <w> heap Point Writer </w> = null ; } final int [ ] <w> parent Splits </w> = new int [ <w> num Dims </w> ] ; build ( 1 , <w> num Leaves </w> , <w> sorted Point Writers </w> , <w> ord Bit Set </w> , out , <w> min Packed Value </w> , <w> max Packed Value </w> , <w> parent Splits </w> , <w> split Packed Values </w> , <w> leaf Block F Ps </w> , <w> to Close Heroically </w> ) ; assert Arrays . equals ( <w> parent Splits </w> , new int [ <w> num Dims </w> ] ) ; for ( <w> Path Slice </w> slice : <w> sorted Point Writers </w> ) { slice . writer . destroy ( ) ; } <comment> assert <w> temp Dir </w> . <w> get Created Files </w> ( ) . <w> is Empty </w> ( ) ; <comment> <comment> success = true ; } finally { if ( success = = false ) { <w> IO Utils </w> . <w> delete Files Ignoring Exceptions </w> ( <w> temp Dir </w> , <w> temp Dir </w> . <w> get Created Files </w> ( ) ) ; <w> IO Utils </w> . <w> close While Handling Exception </w> ( <w> to Close Heroically </w> ) ; } }", "target": 0}
{"idx": 1045, "func": "private final boolean transpositions ;", "target": 1}
{"idx": 1046, "func": "private final Class < ? extends T > klass ;", "target": 0}
{"idx": 1047, "func": "<comment> public static final String <w> STATUS _ STORAGE _ REPLICATION _ FACTOR _ CONFIG </w> = <str-literal> <str-literal> <str-literal> ;", "target": 0}
{"idx": 1048, "func": "<comment> private static final byte [ ] <w> RAW _ VALUE </w> = <str-literal> <str-literal> <str-literal> . <w> get Bytes </w> ( ) ;", "target": 1}
{"idx": 1049, "func": "<comment> public int partition ( ) { return this . <w> topic Partition </w> . partition ( ) ; }", "target": 0}