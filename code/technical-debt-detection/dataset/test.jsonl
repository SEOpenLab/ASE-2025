{"idx": 31710, "func": "we have something like : \"? [op] rhs\"", "target": 0}
{"idx": 31711, "func": "check that a reference zipfileset gets the same attributes as the original", "target": 0}
{"idx": 31712, "func": "This is the most common extension case - exe for windows and OS/2, nothing for nix.", "target": 0}
{"idx": 31713, "func": "protected XmlElement createDefaultConfiguration(String id) { XmlElement child = super.createDefaultConfiguration(id); XmlElement splitpanes = new XmlElement(\"splitpanes\"); splitpanes.addAttribute(\"main\", \"200\"); splitpanes.addAttribute(\"header\", \"200\"); splitpanes.addAttribute(\"attachment\", \"100\"); child.addElement(splitpanes); return child; }", "target": 0}
{"idx": 31714, "func": "If we aren't getting the domain from the workbench part... This happens when this action is used for a global popup action. We try to get the editing domain from one of the objects in the selection. //DMS editingDomain == null) ?", "target": 0}
{"idx": 31715, "func": "protected Object labelProvider;", "target": 0}
{"idx": 31716, "func": "if one side is null, compare with the equality operator", "target": 0}
{"idx": 31717, "func": "boolean not", "target": 0}
{"idx": 31718, "func": "for a subquery, the alias to use depends on a few things (we already know this is not an overall SELECT): 1) if this FROM_ELEMENT represents a correlation to the outer-most query A) if the outer query represents a multi-table persister, we need to use the given alias in anticipation of one of the multi-table executors being used (as this subquery will actually be used in the \"id select\" phase of that multi-table executor) B) otherwise, we need to use the persister's table name as the column qualification 2) otherwise (not correlated), use the given alias", "target": 0}
{"idx": 31719, "func": "then deliver mail to the target", "target": 0}
{"idx": 31720, "func": "TODO: seems to work only with both loops, check why.", "target": 1}
{"idx": 31721, "func": "get the values from the \"not use\" list", "target": 0}
{"idx": 31722, "func": "It's _really_ expensive to check that the class actually exists in the Jar, so we don't do that now.", "target": 0}
{"idx": 31723, "func": "Only try to move if this is the last mapped file and one of the mappings isn't to itself", "target": 0}
{"idx": 31724, "func": "//{{{ ref() method", "target": 0}
{"idx": 31725, "func": "set up all parameters. Some methods are invoked with primitives or collections, so we need to create them accordingly", "target": 0}
{"idx": 31726, "func": "starts pumping away the generated output/error", "target": 0}
{"idx": 31727, "func": "Sequence diagrams are not shown as children of the collaboration that they show but as children of the classifier/operation the collaboration represents. Statediagrams and activitydiagrams are shown as children of the statemachine or activitygraph they belong to.", "target": 0}
{"idx": 31728, "func": "This is an expensive method that we should ensure is called rarely. Hence info level to track easily.", "target": 0}
{"idx": 31729, "func": "if it is in a table, then we need to insert it at the selected position.", "target": 0}
{"idx": 31730, "func": "suppress (value defaults to null)", "target": 0}
{"idx": 31731, "func": "@see org.tigris.gef.presentation.Fig#getEnclosedFigs()", "target": 0}
{"idx": 31732, "func": "//{{{ loadUserProps() method", "target": 0}
{"idx": 31733, "func": "i18n[PreferencesPanel.removeMultiLineCommentLabelTipText=]", "target": 0}
{"idx": 31734, "func": "rowRenderingOrder...", "target": 0}
{"idx": 31735, "func": "Helper method to ensure that format is initialised if initializeLogging() has not yet been called.", "target": 0}
{"idx": 31736, "func": "InputSource xformedInput = chainedTransform(transformFiles, pIs);", "target": 0}
{"idx": 31737, "func": "Fix bug in JVMs that return true/false rather than True/False from the type editor getAsText() method", "target": 1}
{"idx": 31738, "func": "check the error stream for a problem This is a bit questionable since it is possible for processes to output something on stderr but continue processing. But without this, some problems are not seen (e.g. \"bad argument\" type messages from the process).", "target": 1}
{"idx": 31739, "func": "//{{{ isX11() method", "target": 0}
{"idx": 31740, "func": "line 533", "target": 0}
{"idx": 31741, "func": "look for mangling markers for bound, unframed methods in class name", "target": 0}
{"idx": 31742, "func": "//{{{ setFontProperty() method", "target": 0}
{"idx": 31743, "func": "//IAccount account = object.getAccount();", "target": 0}
{"idx": 31744, "func": "we really could refresh the item if it is not a lock, but it might be slower //return freshTimestamp < txTimestamp", "target": 0}
{"idx": 31745, "func": "TODO: Do we want all enabled tabs to listen or only the one that is selected/visible? - tfm", "target": 1}
{"idx": 31746, "func": "pick up headers if failed to execute the request httpMethod can be null if method is unexpected", "target": 0}
{"idx": 31747, "func": "//private final String unquotedIdentifierColumnName;", "target": 0}
{"idx": 31748, "func": "@author: fdietz The following line is not working - just don't know why Main.mainClassLoader.addURLs((URL[]) urlList.toArray(new URL[0])); WORKAROUND: Modify the system class loader instead - horrible! But it works!", "target": 1}
{"idx": 31749, "func": "configure the document builder factory", "target": 0}
{"idx": 31750, "func": "try the system aqua look and feel", "target": 0}
{"idx": 31751, "func": "create To headerfield", "target": 0}
{"idx": 31752, "func": "//{{{ MouseActions constructor", "target": 0}
{"idx": 31753, "func": "//{{{ getNonAlphaNumericWordChars() method", "target": 0}
{"idx": 31754, "func": "Required on Linux.", "target": 0}
{"idx": 31755, "func": "check if the package structure is more than 1 level deep", "target": 0}
{"idx": 31756, "func": "//not null is implicit", "target": 0}
{"idx": 31757, "func": "turn of focus stealing (workaround should be removed in the future!)", "target": 1}
{"idx": 31758, "func": "i18n[FactoryProviderDialog.example=Save example code for a SessionFactorImpl provider class to ...]", "target": 0}
{"idx": 31759, "func": "verify the size of the new list", "target": 0}
{"idx": 31760, "func": "When was the last sample seen?", "target": 0}
{"idx": 31761, "func": "do nothing at all", "target": 0}
{"idx": 31762, "func": "add account to mail-checking manager", "target": 0}
{"idx": 31763, "func": "Add another child.", "target": 0}
{"idx": 31764, "func": "write magic: done by caller who created this stream //this.out.write('B'); //this.out.write('Z');", "target": 0}
{"idx": 31765, "func": "skip if no <extensionlist> element found", "target": 0}
{"idx": 31766, "func": "//System.err.println(\"calculateLength()/str=\" + str);", "target": 0}
{"idx": 31767, "func": "Update the diagram, and other users of these settings:", "target": 0}
{"idx": 31768, "func": "Inserts are not properly separated. We give up.", "target": 0}
{"idx": 31769, "func": "Ensure any remaining contexts are closed", "target": 0}
{"idx": 31770, "func": "eval it", "target": 0}
{"idx": 31771, "func": "Helper function to give a good view of current dynamic scope with captured scopes", "target": 0}
{"idx": 31772, "func": "16 ?", "target": 0}
{"idx": 31773, "func": "Rate is effectively infinite", "target": 0}
{"idx": 31774, "func": "Copy the header", "target": 0}
{"idx": 31775, "func": "cleanAllExtentsBut(model); TODO: why is this causing a crash?!?", "target": 1}
{"idx": 31776, "func": "//{{{ reloadDirectory() method", "target": 0}
{"idx": 31777, "func": "the data implementation", "target": 0}
{"idx": 31778, "func": "we need a different value of initialFoldLevel here!", "target": 0}
{"idx": 31779, "func": "For char or date types this is the maximum number of characters, for numeric or decimal types this is precision.", "target": 0}
{"idx": 31780, "func": "c.gridy = 0; c.gridx = 0; JLabel priLabel = new JLabel(\"Priority:\"); gb.setConstraints(priLabel, c); _mainPanel.add(priLabel);", "target": 0}
{"idx": 31781, "func": "Only resize elements which the user would also be able to resize:", "target": 0}
{"idx": 31782, "func": "find the matching this() constructor for the args", "target": 0}
{"idx": 31783, "func": "Platform.resolve() doesn't work if the project is encoded. //", "target": 0}
{"idx": 31784, "func": "TODO: Comments are on Element in UML 2.x", "target": 0}
{"idx": 31785, "func": "the amount of the \"sidestep\"", "target": 0}
{"idx": 31786, "func": "Called by MainFrame#setEditMenu() which is called by EditCommand#doAction and GuiPackage#localeChanged", "target": 0}
{"idx": 31787, "func": "//no sources = nothing to compare; no targets = nothing to delete:", "target": 0}
{"idx": 31788, "func": "------------------------------------------------------------------------- Exceptions table entries, max stack size and max locals -------------------------------------------------------------------------", "target": 0}
{"idx": 31789, "func": "axis line visible...", "target": 0}
{"idx": 31790, "func": "Set up the right-click popup menu", "target": 0}
{"idx": 31791, "func": "IfController controller = new IfController(\"12==12\"); controller.initialize();", "target": 0}
{"idx": 31792, "func": "If this was done when the header was clicked it prevents MS Excel like adopition of column sizes by double click. See class ButtonTableHeader.", "target": 0}
{"idx": 31793, "func": "(non-Javadoc) @see org.columba.mail.folder.IDataStorage#getMessages()", "target": 0}
{"idx": 31794, "func": "A Mode to interpret user input while creating a permission edge. The permission can connect any model elements including those represented by edges as well as nodes. <p> TODO: In UML 2.x, Permission becomes PackageImport and the class hierarchy has changed so that it is no longer a subtype of Dependency, so this may need to be refactored to work correctly.", "target": 1}
{"idx": 31795, "func": "When all updates are retrieved, tell the user that the updates will be installed upon the next startup.", "target": 0}
{"idx": 31796, "func": "line 1204", "target": 0}
{"idx": 31797, "func": "TODO: This can't depend on ProjectBrowser. It needs to get the current drawing area from the Diagram subsystem or GEF", "target": 1}
{"idx": 31798, "func": "Begin BeanShell Modification - added debug param", "target": 0}
{"idx": 31799, "func": "Specified dir is \"../taskdefs\" -> should exist since it's the location of the buildfile used...", "target": 0}
{"idx": 31800, "func": "parse Content-Type", "target": 0}
{"idx": 31801, "func": "Create.", "target": 0}
{"idx": 31802, "func": "flush log", "target": 0}
{"idx": 31803, "func": "a header", "target": 0}
{"idx": 31804, "func": "Thanks to Slava Pestov (of jEdit fame) for import caching enhancements. Note: This class has gotten too big. It should be broken down a bit.", "target": 1}
{"idx": 31805, "func": "set the anchor value for the vertical axis...", "target": 0}
{"idx": 31806, "func": "long start = Math.max( fromSegment.getSegmentStart(), this.segmentStart ); long end = Math.min(toSegment.getSegmentEnd(), this.segmentEnd);", "target": 0}
{"idx": 31807, "func": "mockSQLMetaData", "target": 0}
{"idx": 31808, "func": "timer to use", "target": 0}
{"idx": 31809, "func": "3100..312F;", "target": 0}
{"idx": 31810, "func": "If the constant is an IDENT, figure out what it means...", "target": 0}
{"idx": 31811, "func": "////////////////////////////////////////////////////////////////////Utility routines. //////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 31812, "func": "two args, no block; load NULL_BLOCK", "target": 0}
{"idx": 31813, "func": "Give all generator adapters the chance to do tear down. //", "target": 0}
{"idx": 31814, "func": "//Copy files from old weblogic jar", "target": 0}
{"idx": 31815, "func": "No argument blocks", "target": 0}
{"idx": 31816, "func": "//get size of document //width in pixels //height in pixels //height of printer page //width of printer page", "target": 0}
{"idx": 31817, "func": "the final chunk will go to the end of aInput", "target": 0}
{"idx": 31818, "func": "Cache for bytes-message, only used when parsing from a file", "target": 0}
{"idx": 31819, "func": "Entered in 0.29.3 Prove that the test below is not needed", "target": 1}
{"idx": 31820, "func": "class name has more than 1 package level 'com.company.Class'", "target": 0}
{"idx": 31821, "func": "//{{{ IOProgressMonitor constructor", "target": 0}
{"idx": 31822, "func": "//{{{ CaretBlinker class", "target": 0}
{"idx": 31823, "func": "the name of this type of ModelElement", "target": 0}
{"idx": 31824, "func": "get plugin directory", "target": 0}
{"idx": 31825, "func": "So this needs to be safe from concurrent modification problems. It is safe because of how IdentityMap implements entrySet()", "target": 0}
{"idx": 31826, "func": "End BeanShell Modification - serializable", "target": 0}
{"idx": 31827, "func": "i18n[SchemaInfo.loadingSchemas=Loading schemas]", "target": 0}
{"idx": 31828, "func": "set rewritten node to be the original", "target": 0}
{"idx": 31829, "func": "some messy, complex stuff here, since createCriteria() can take an aliased path, or a path rooted at the creating criteria instance", "target": 1}
{"idx": 31830, "func": "log at a lower level", "target": 0}
{"idx": 31831, "func": "CON FIXME: I don't know how to make case be an expression...does that logic need to go here?", "target": 1}
{"idx": 31832, "func": "but its position may have been changed:", "target": 0}
{"idx": 31833, "func": "if this is no URI", "target": 0}
{"idx": 31834, "func": "line 1362", "target": 0}
{"idx": 31835, "func": "TODO: other reserved names?", "target": 1}
{"idx": 31836, "func": "The EnumerationLiteral uses a dedicated notation that supports parsing \"name1;name2;name3\" and stereotypes. Also supports deleting a literal by erasing text.", "target": 0}
{"idx": 31837, "func": "Always decode", "target": 0}
{"idx": 31838, "func": "//Element child = getParentElement().getChild(ICALENDAR.CATEGORIES); //List list = child.getChildren();", "target": 0}
{"idx": 31839, "func": "This is necessary to have a file opened from the Finder before jEdit is running set as the currently active buffer.", "target": 0}
{"idx": 31840, "func": "if the version of a newly instantiated object is not the same as the version seed value, use that as the unsaved-value", "target": 0}
{"idx": 31841, "func": "remove leftovers from other tests", "target": 0}
{"idx": 31842, "func": "check for new files in the scripts directory", "target": 0}
{"idx": 31843, "func": "(non-Javadoc) @see org.columba.api.gui.frame.IDock#getDockableIterator()", "target": 0}
{"idx": 31844, "func": "2FF0..2FFF;", "target": 0}
{"idx": 31845, "func": "1800..18AF;", "target": 0}
{"idx": 31846, "func": "5 seconds", "target": 0}
{"idx": 31847, "func": "Long-hand (e.g. %Q{}).", "target": 0}
{"idx": 31848, "func": "if the VFS supports renaming files, we first save to #<filename>#save#, then rename that to <filename>, so that if the save fails, data will not be lost. as of 4.1pre7 we now call vfs.getTwoStageSaveName() instead of constructing the path directly since some VFS's might not allow # in filenames.", "target": 0}
{"idx": 31849, "func": "//setFont( UIManager.getFont(\"TextField.font\") );", "target": 0}
{"idx": 31850, "func": "TODO: support other types of drag. Here you set the owner by dragging into a namespace. An alternative could be to drag states into composite states...", "target": 1}
{"idx": 31851, "func": "sic", "target": 0}
{"idx": 31852, "func": "Check unquoted charset", "target": 0}
{"idx": 31853, "func": "hack to support dockable view title update TODO replace with listener pattern", "target": 1}
{"idx": 31854, "func": "//ChangeFactoryImpl", "target": 0}
{"idx": 31855, "func": "switch //while", "target": 0}
{"idx": 31856, "func": "ActionAddExistingNode enables pasting of an existing node into a Diagram. @author Eugenio Alvarez Data Access Technologies. TODO: Why do we have this class as well as ActionAddExistingNodes?", "target": 1}
{"idx": 31857, "func": "There is no need to close result sets if we call _stmt.getMoreResults() because it implicitly closes any current ResultSet. ON DB2 version 7.1 it is even harmful to close a ResultSet explicitly. _stmt.getMoreResults() will never return true anymore if you do.", "target": 0}
{"idx": 31858, "func": "NOTUSED: long[] longSample = getSamples(); load each node", "target": 1}
{"idx": 31859, "func": "itemLabelGeneratorList", "target": 0}
{"idx": 31860, "func": "evicts don't cascade to uninitialized collections", "target": 0}
{"idx": 31861, "func": "Value used to suppress visibility. //", "target": 0}
{"idx": 31862, "func": "now wait until the spawned process is finished", "target": 0}
{"idx": 31863, "func": "#24918: send standard input to the process by default.", "target": 0}
{"idx": 31864, "func": "add a tooltip for the section...", "target": 0}
{"idx": 31865, "func": "line 317", "target": 0}
{"idx": 31866, "func": "//$NON-NLS-1$ //$NON-NLS-1$ These are the names of the get/set methods", "target": 0}
{"idx": 31867, "func": "test if the size of self substracted list is 0", "target": 0}
{"idx": 31868, "func": "Check if the include pattern is matched", "target": 0}
{"idx": 31869, "func": "advance minuend and subtrahend to intesect", "target": 0}
{"idx": 31870, "func": "TODO: As currently implemented, this expects a list of MultiplicityRanges. Is this an interface change from the NSUML implementation? I suspect it used to accept a list of Integers. - tfm @see org.argouml.model.DataTypesFactory#createMultiplicity(java.util.List)", "target": 1}
{"idx": 31871, "func": "0E80..0EFF;", "target": 0}
{"idx": 31872, "func": "This is now needed, since module Java isn't in by default", "target": 0}
{"idx": 31873, "func": "Check that the two elements aren't already linked the opposite way TODO: This is a part implementation of well-formedness rule UML1.4.2 - 4.5.3.20 [3] Circular inheritance is not allowed. not self.allParents->includes(self)", "target": 1}
{"idx": 31874, "func": "We attempt to put in the MAP and Schema files of CMP beans", "target": 0}
{"idx": 31875, "func": "//NOTICE: no \" or . since they are part of (compound) identifiers", "target": 0}
{"idx": 31876, "func": "It is HTML, try to find out which charset from meta tag: NB: The seach for charset below is very simple. It assumes that the meta tag to find is on ITS OWN LINE, i.e. \" <meta\" can be found at the beginning of the line, and all the content of the tag is found on the same line! Could be better, but this is first shot...", "target": 0}
{"idx": 31877, "func": "//i18n[InformixExceptionFormatter.positionLabel=Position: ]", "target": 0}
{"idx": 31878, "func": "if Reply-To headerfield isn't specified, try to use from", "target": 0}
{"idx": 31879, "func": "MATCH ANY", "target": 0}
{"idx": 31880, "func": "Flag to enable performance testing - off by default", "target": 0}
{"idx": 31881, "func": "//extend Comparison; retain for BC only", "target": 0}
{"idx": 31882, "func": "i18n[DialectUtils.dropPrimaryKeyUnsupported={0} doesn''t support dropping primary keys]", "target": 0}
{"idx": 31883, "func": "Make sure we don't re-release the same cache", "target": 0}
{"idx": 31884, "func": "Here we do the Replacement", "target": 0}
{"idx": 31885, "func": "Refresh the table when a critique is enabled/disabled @see java.util.Observer#update(java.util.Observable, java.lang.Object)", "target": 0}
{"idx": 31886, "func": "temporary structure to hold node's attributes + namespaces in scope", "target": 1}
{"idx": 31887, "func": "i18n[SchemaPropertiesPanel.refreshSchemas=Connect database to refresh Schema table]", "target": 0}
{"idx": 31888, "func": "Fetch these uids and compare them to the local list", "target": 0}
{"idx": 31889, "func": "use wrappers for primitive classes, e.g. int and Integer are treated identically", "target": 0}
{"idx": 31890, "func": "send cancel event to worker", "target": 0}
{"idx": 31891, "func": "cannot be first line either", "target": 0}
{"idx": 31892, "func": "//////////////////////////////////////////////////////////////FileFilter API", "target": 0}
{"idx": 31893, "func": "Returns list of EJBs for processing", "target": 0}
{"idx": 31894, "func": "Edit mode", "target": 0}
{"idx": 31895, "func": "//private final String rootTableName;", "target": 0}
{"idx": 31896, "func": "////////////////LOW-LEVEL CONSTANT INTERFACE //////////////fetch/store/list constants for this module //", "target": 0}
{"idx": 31897, "func": "(non-Javadoc) @see org.columba.mail.folder.event.IFolderListener#messageRemoved(org.columba.mail.folder.event.IFolderEvent)", "target": 0}
{"idx": 31898, "func": "Don't add it again", "target": 0}
{"idx": 31899, "func": "parameters on the property mapping should override parameters in the typedef", "target": 0}
{"idx": 31900, "func": "Do nothing, override in subclass.", "target": 0}
{"idx": 31901, "func": "initialize the Set of queried identifier spaces (ie. tables)", "target": 0}
{"idx": 31902, "func": "//we only like simple mappers.", "target": 0}
{"idx": 31903, "func": "Called by XPathAssertionGui", "target": 0}
{"idx": 31904, "func": "Place the final state last with a little separation", "target": 0}
{"idx": 31905, "func": "safe to cast to IMailFolder here, because only those are visible to the user", "target": 0}
{"idx": 31906, "func": "//{{{ setWrapGuidePainted() method", "target": 0}
{"idx": 31907, "func": "We use null here instead of \"\" because an attribute without a prefix is considered to have the null target namespace...", "target": 0}
{"idx": 31908, "func": "assertSame(script1, script2);", "target": 0}
{"idx": 31909, "func": "$`: string before last match", "target": 0}
{"idx": 31910, "func": "new line to the begining so that sb.append( will be removed new line to the end so that a semi colon at the end will be removed.", "target": 0}
{"idx": 31911, "func": "Init components", "target": 0}
{"idx": 31912, "func": "Action to add a stereotype to a model element. TODO: Appears to be unused? @author Bob Tarling @deprecated for 0.27.2 by tfmorris. Use {@link org.argouml.uml.ActionAddStereotype}.", "target": 1}
{"idx": 31913, "func": "set the default item label positions", "target": 0}
{"idx": 31914, "func": "Process characters after last star", "target": 0}
{"idx": 31915, "func": "We are in the closing event of the Session main window. We don't want to send this event again therefore we pass withEvents = false.", "target": 0}
{"idx": 31916, "func": "generate new UUID if it does not exist yet", "target": 0}
{"idx": 31917, "func": "256 byte 18002 byte 18002 byte", "target": 0}
{"idx": 31918, "func": "//list.add(\"LiteralUnlimitedNatural\");//When other ok", "target": 0}
{"idx": 31919, "func": "Only look at associations", "target": 0}
{"idx": 31920, "func": "i18n[popupeditableIoPanel.cannotCreateTempFile=Cannot create temp file..\\nError was:\\n{0}]", "target": 0}
{"idx": 31921, "func": "pick out return type", "target": 0}
{"idx": 31922, "func": "Valid extension point", "target": 0}
{"idx": 31923, "func": "classExists caches the tests for us", "target": 0}
{"idx": 31924, "func": "could also be a table name", "target": 0}
{"idx": 31925, "func": "//i18n[ImportDataIntoTableExecutor.success={0,choice,0#No records|1#One record|1<{0} records} successfully inserted.]", "target": 0}
{"idx": 31926, "func": "Also check for properly formed URIs. Ant formerly recommended using nonsense URIs such as \"file:./foo.xml\" in XML includes. You shouldn't do that (just \"foo.xml\" is correct) but for compatibility we special-case things when the path is not absolute, and fall back to the old parsing behavior.", "target": 0}
{"idx": 31927, "func": "This is not currently used by JMeter code. As it uses Sun-specific code (the only such in JMeter), it has been commented out for now.", "target": 0}
{"idx": 31928, "func": "create add sequence sql", "target": 0}
{"idx": 31929, "func": "find the target with the longest name", "target": 0}
{"idx": 31930, "func": "Go through each child of the parent and see if it was previously expanded. If it was recursively call this method in order to expand the child.", "target": 0}
{"idx": 31931, "func": "new BulkAccessorException", "target": 0}
{"idx": 31932, "func": "The readers return -1 if they end. So simply read the \"prepend\" after that the \"content\" and at the end the \"append\" file.", "target": 0}
{"idx": 31933, "func": "the segment starts at the back (still extending CLOCKWISE)", "target": 0}
{"idx": 31934, "func": "Embedded URL match regex $NON-NLS-1$", "target": 0}
{"idx": 31935, "func": "(TestElement) el.getProperty(JMSSampler.JMS_PROPERTIES).getObjectValue());", "target": 0}
{"idx": 31936, "func": "FIXME: add setSeriesToolTipGenerator(int, CategoryToolTipGenerator, boolean) ?", "target": 0}
{"idx": 31937, "func": "/////////////////////////////// SWEEP /////////////////////////////////////", "target": 0}
{"idx": 31938, "func": "Return 1..1 multiplicity for empty string", "target": 0}
{"idx": 31939, "func": "The values. Entries may be null, but there will be the correct number.", "target": 0}
{"idx": 31940, "func": "For all the file multiparts, we must tell it to not include the actual file content", "target": 0}
{"idx": 31941, "func": "rb_reg_initialize_str", "target": 0}
{"idx": 31942, "func": "//Do not access the inputstream after this line!", "target": 0}
{"idx": 31943, "func": "Java / and % are not the same as ruby", "target": 0}
{"idx": 31944, "func": "args array", "target": 0}
{"idx": 31945, "func": "we are forced to fork ANTLR since there is a call to System.exit() and there is nothing we can do right now to avoid this. :-( (SBa) I'm not removing this method to keep backward compatibility", "target": 0}
{"idx": 31946, "func": "(non-Javadoc) @see org.columba.core.filter.IFilterAction#getAction()", "target": 0}
{"idx": 31947, "func": "quick fix for Ant.java use of property before initializing the project", "target": 1}
{"idx": 31948, "func": "SWT and AWT share the same style constants.", "target": 0}
{"idx": 31949, "func": "do nothing, override if necessary", "target": 0}
{"idx": 31950, "func": "if no more data could be found, set flag stating that the end of the data was found", "target": 0}
{"idx": 31951, "func": "LINE FEED U+000A", "target": 0}
{"idx": 31952, "func": "... and where they end", "target": 0}
{"idx": 31953, "func": "Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit", "target": 0}
{"idx": 31954, "func": "newEdge.setDiElement( GraphChangeAdapter.getInstance().createElement(gm, edge));", "target": 0}
{"idx": 31955, "func": "classLoader = ClassLoader.getSystemClassLoader();", "target": 0}
{"idx": 31956, "func": "if the property mapping consists of all formulas, make it insertable", "target": 0}
{"idx": 31957, "func": "customise the title position and font", "target": 0}
{"idx": 31958, "func": "//sessionPanel = new SessionPanel(this);", "target": 0}
{"idx": 31959, "func": "has the Sample lasted too long?", "target": 0}
{"idx": 31960, "func": "We'll assume that the copy command can execute and that adding a copy of the clipboard is the same test as adding the clipboard contents itself. //", "target": 0}
{"idx": 31961, "func": "if doc is null, then for whatever reason, the cached file cannot be used...", "target": 0}
{"idx": 31962, "func": "@see java.lang.Object#finalize()", "target": 0}
{"idx": 31963, "func": "Does this dialect support the Oracle-style FOR UPDATE NOWAIT syntax?", "target": 1}
{"idx": 31964, "func": "restrictive security policy; no matter, we only want public classes anyway", "target": 0}
{"idx": 31965, "func": "starting traverse file and build unit tree and table info", "target": 0}
{"idx": 31966, "func": "//Expand all of the rows in the tree if the root is non null.", "target": 0}
{"idx": 31967, "func": "top level file", "target": 0}
{"idx": 31968, "func": "line 1550", "target": 0}
{"idx": 31969, "func": "If that didn't work, try using the 'import' name.", "target": 0}
{"idx": 31970, "func": "call ThreadListener.threadStarted()", "target": 0}
{"idx": 31971, "func": "end class CrTooManyOper", "target": 0}
{"idx": 31972, "func": "but we want properties to hang around", "target": 0}
{"idx": 31973, "func": "---- categoriesButton ----", "target": 0}
{"idx": 31974, "func": "check if this buddy belongs to a group", "target": 0}
{"idx": 31975, "func": "task can contain other tasks - no other nested elements possible", "target": 0}
{"idx": 31976, "func": "i18n[MemoryPanel.runGC=Run garbage collection]", "target": 0}
{"idx": 31977, "func": "Test sending data with UTF-8 encoding", "target": 0}
{"idx": 31978, "func": "create an index on the key columns??", "target": 1}
{"idx": 31979, "func": "//ugly little workaround for fact that createUniqueKeyLoaders() does not handle component properties", "target": 1}
{"idx": 31980, "func": "default level allow override by system properties", "target": 0}
{"idx": 31981, "func": "copy 1", "target": 0}
{"idx": 31982, "func": "i18n[mapdataset.unsupported=<Unsupported>]", "target": 0}
{"idx": 31983, "func": "{tasks, types}", "target": 0}
{"idx": 31984, "func": "//{{{ setTerminateChar() method", "target": 0}
{"idx": 31985, "func": "just in case that someone who developers on a plugin adds the plugin files to his classpath, we try to load them with the default classloader", "target": 0}
{"idx": 31986, "func": "Parent elapsed total should be no smaller than the sum of the individual samples. It may be greater by the timer granularity.", "target": 0}
{"idx": 31987, "func": "If both original args were Primitives return a Primitive result else it was mixed (wrapper/primitive) return the wrapper type Exception is for boolean result, return the primitive", "target": 0}
{"idx": 31988, "func": "line 559", "target": 0}
{"idx": 31989, "func": "//{{{ getCachedServices() method", "target": 0}
{"idx": 31990, "func": "Allow listening to other elements: removeOtherModelEventListeners(listTarget);", "target": 0}
{"idx": 31991, "func": "Return the type-selector", "target": 0}
{"idx": 31992, "func": "TODO is this the right thing to do?", "target": 1}
{"idx": 31993, "func": "Lastly, fill the web polygon if this is required", "target": 0}
{"idx": 31994, "func": "(non-Javadoc) @see org.frapuccino.addresscombobox.PatternSeparatedAutoCompleter#acceptedListItem(java.lang.Object)", "target": 0}
{"idx": 31995, "func": "Completely optional cascading drop clause.", "target": 0}
{"idx": 31996, "func": "all these types are immediately considered \"defined\"", "target": 0}
{"idx": 31997, "func": "part of body", "target": 0}
{"idx": 31998, "func": "Technically this is legal, but a StructuralFeature should probably only ever have an owner instead of a namespace. - tfm", "target": 0}
{"idx": 31999, "func": "assertNotNull(actionSupplier.getValue(Action.SMALL_ICON));", "target": 0}
{"idx": 32000, "func": "Now, for all variables used by 'i' mark them live before 'i'", "target": 0}
{"idx": 32001, "func": "EGenericType", "target": 0}
{"idx": 32002, "func": "first get all the classes", "target": 0}
{"idx": 32003, "func": "If found cache the full name in the BshClassManager", "target": 0}
{"idx": 32004, "func": "Does this item type have a secondary descriptor? If so, we'll need it.", "target": 0}
{"idx": 32005, "func": "//first tick of group did not do zero tick last iteration", "target": 0}
{"idx": 32006, "func": "This call seems not very robust. Yet to determine cause.", "target": 0}
{"idx": 32007, "func": "Dataflow problem with which this node is associated CFG node for which this node contains info.", "target": 0}
{"idx": 32008, "func": "icon", "target": 0}
{"idx": 32009, "func": "$NON-NLS-1$ //- JMX", "target": 0}
{"idx": 32010, "func": "TODO: What does the output directory have to do with the class path? Project p = ProjectManager.getManager().getCurrentProject(); entries.add(p.getProjectSettings().getGenerationOutputDir());", "target": 1}
{"idx": 32011, "func": "try to load the specified name; only if that fails, try to define the class", "target": 0}
{"idx": 32012, "func": "TODO: need to fetch this from localised resources", "target": 1}
{"idx": 32013, "func": "exit immediately", "target": 0}
{"idx": 32014, "func": "// registerColumnType( Types.VARCHAR, 16777215, \"mediumtext\" );", "target": 0}
{"idx": 32015, "func": "//GenModelFactoryImpl", "target": 0}
{"idx": 32016, "func": "If using resources, disallow inline text. This is similar to using GNU 'cat' with file arguments -- stdin is simply ignored.", "target": 0}
{"idx": 32017, "func": "Only set the name if it differs from the text.", "target": 0}
{"idx": 32018, "func": "//TODO: to handle concurrent writes correctly, the client should pass in a Lock", "target": 1}
{"idx": 32019, "func": "fApplication.addApplicationListener(applicationAdapter); fApplication.addPreferencesMenuItem(); fApplication.setEnabledPreferencesMenu(true);", "target": 0}
{"idx": 32020, "func": "//we can use an inner join for the many-to-many", "target": 0}
{"idx": 32021, "func": "Process the new root object if any. //", "target": 0}
{"idx": 32022, "func": "The include failed, so if there is an alternative, we don't skip it. //", "target": 0}
{"idx": 32023, "func": "I thought this prevented GC. It doesn't But if two Sessions are open and one is closed the one left open looses key bindings. For example the Arrow navigation keys. //getKeymap().removeBindings();", "target": 0}
{"idx": 32024, "func": "amazingly, these two will work because AbstractCollection uses iterator() to fill the array", "target": 0}
{"idx": 32025, "func": "simple path, no multimethod", "target": 0}
{"idx": 32026, "func": "meter angle", "target": 0}
{"idx": 32027, "func": "draw the polygon series...", "target": 0}
{"idx": 32028, "func": "//{{{ handleFileCodes() method", "target": 0}
{"idx": 32029, "func": "Specified resource is \"\" -> can such a thing exist?", "target": 0}
{"idx": 32030, "func": "Even primitives should be represented by a data type with a conventional (i.e. capitalized) name. //", "target": 0}
{"idx": 32031, "func": "The diagram already exists in this project. Select it as the current target.", "target": 0}
{"idx": 32032, "func": "the first token is irrelevant", "target": 0}
{"idx": 32033, "func": "i18n[popupeditableIoPanel.errWhileExecutin=Error while executing command.\\nThe command was:\\n {0}\\nThe error was:\\n{1}]", "target": 0}
{"idx": 32034, "func": "//{{{ getIndex() method", "target": 0}
{"idx": 32035, "func": "Use theta style (for regression) Move the node up, after the origin node.", "target": 0}
{"idx": 32036, "func": "Set the bounds so that we re-check when we are closer to the middle. //", "target": 0}
{"idx": 32037, "func": "TODO: This only works if the item is visible (all its parents are expanded) getExpandedDescendants, makeVisible", "target": 1}
{"idx": 32038, "func": "the default...", "target": 0}
{"idx": 32039, "func": "//This is not very nice (and quite slow):", "target": 1}
{"idx": 32040, "func": "silently ignore", "target": 0}
{"idx": 32041, "func": "AXIS 4", "target": 0}
{"idx": 32042, "func": "select the level of import 0 - classifiers only 1 - classifiers plus feature specifications 2 - full import, feature detail", "target": 0}
{"idx": 32043, "func": "Compute the holder of the proxy //", "target": 0}
{"idx": 32044, "func": "fire new message event to interested listeners", "target": 0}
{"idx": 32045, "func": "ArtifactXmlBean", "target": 0}
{"idx": 32046, "func": "//cast everything else to a build exception", "target": 0}
{"idx": 32047, "func": "Fetch embedded identifiers propertynames from the \"virtual\" identifier component", "target": 0}
{"idx": 32048, "func": "//i18n[DumpApplicationCommand.title.status=Application Status Bean]", "target": 0}
{"idx": 32049, "func": "Is this item a copy? @see java.lang.Object#equals(java.lang.Object)", "target": 0}
{"idx": 32050, "func": "context is null, wipe out the SoftReference (this could be done with a reference queue)", "target": 1}
{"idx": 32051, "func": "set the default stroke for all series", "target": 0}
{"idx": 32052, "func": "This makes dragging connected edges very smooth. @see org.tigris.gef.presentation.Fig#getClosestPoint(java.awt.Point)", "target": 0}
{"idx": 32053, "func": "TODO: Workaround for GEF redraw problem Force all child figs into the same layer", "target": 1}
{"idx": 32054, "func": "check that negative items are always ignored", "target": 0}
{"idx": 32055, "func": "//i18n[CSVSettingsPanel.csvSettings=CSV settings]", "target": 0}
{"idx": 32056, "func": "..and let's ask the user whether he wants to save the actual project into a new file or not", "target": 0}
{"idx": 32057, "func": "our column span is the number of columns in the PK", "target": 0}
{"idx": 32058, "func": "brace to match it. Bracket expressions must be", "target": 0}
{"idx": 32059, "func": "@see org.argouml.uml.ui.SourcePathController#deleteSourcePath(java.lang.Object)", "target": 0}
{"idx": 32060, "func": "@see org.argouml.model.ModelEventPump#removeClassModelEventListener( java.beans.PropertyChangeListener, java.lang.Object, java.lang.String)", "target": 0}
{"idx": 32061, "func": "create the real jar", "target": 0}
{"idx": 32062, "func": "collections don't dirty an unversioned parent entity", "target": 0}
{"idx": 32063, "func": "There is a bug in JavaSound 0.90 (jdk1.3beta). It prevents correct termination of the VM. So we have to exit ourselves.", "target": 0}
{"idx": 32064, "func": "i18n[xmlReformatter.xmlWarning5=XML Warning]", "target": 0}
{"idx": 32065, "func": "evaluate each child", "target": 0}
{"idx": 32066, "func": "i18n[SQLHistoryItemWrapper.index=Index]", "target": 0}
{"idx": 32067, "func": "create a line renderer only", "target": 0}
{"idx": 32068, "func": "Now try mode.<mode>.<property>", "target": 0}
{"idx": 32069, "func": "@see org.argouml.application.events.ArgoNotationEventListener#notationRemoved(org.argouml.application.events.ArgoNotationEvent)", "target": 0}
{"idx": 32070, "func": "check if given node should use the default range (i.e. node removed), or extended range (i.e. surrounding nodes removed)", "target": 0}
{"idx": 32071, "func": "If command has no owner specified //", "target": 0}
{"idx": 32072, "func": "Find the next archive path and continue \"recursively\" if there is one. //", "target": 0}
{"idx": 32073, "func": "If we find an instance variable that is not a constant we have succeeded", "target": 0}
{"idx": 32074, "func": "calculate inner arc in reverse direction, for later GeneralPath construction", "target": 0}
{"idx": 32075, "func": "Register F2 hotkey for renaming folder when the message panel has focus", "target": 0}
{"idx": 32076, "func": "-rename", "target": 0}
{"idx": 32077, "func": "Send EditorExiting", "target": 0}
{"idx": 32078, "func": "// final TextAreaDefaults dfts = TextAreaDefaults.getDefaults(); // _columnStyle = dfts.styles[Token.COLUMN]; // _commentStyle = dfts.styles[Token.COMMENT1]; // _keyword1Style = dfts.styles[Token.KEYWORD]; // _keyword2Style = dfts.styles[Token.DATA_TYPE]; // _keyword3Style = dfts.styles[Token.FUNCTION]; // _labelStyle = dfts.styles[Token.LABEL]; // _literalStyle = dfts.styles[Token.LITERAL1]; // _operatorStyle = dfts.styles[Token.OPERATOR]; // _otherStyle = dfts.styles[Token.NULL]; // _tableStyle = dfts.styles[Token.TABLE];", "target": 0}
{"idx": 32079, "func": "TODO: We have some quirk that the a baseClass addition or removal from a steroetype comes back as an AttributeChangeEvent rather than an AssociationChangeEvent. This needs further investigation to see if this can be made consistent.", "target": 1}
{"idx": 32080, "func": "Test for trying to create a file in a directory that does not exist.", "target": 0}
{"idx": 32081, "func": "//{{{ goToMatchingBracket() method", "target": 0}
{"idx": 32082, "func": "Check if the new file is already in the recent list", "target": 0}
{"idx": 32083, "func": "save the latency", "target": 0}
{"idx": 32084, "func": "Should we add the \"_\" separator?", "target": 1}
{"idx": 32085, "func": "a small check for independence", "target": 0}
{"idx": 32086, "func": "//domainGridlinePaint;", "target": 0}
{"idx": 32087, "func": "A problem if we found more than 1 aggregation", "target": 0}
{"idx": 32088, "func": "//////////////////////////////////////////////////////////////////These classes have no package see swingsetthemes.jar", "target": 0}
{"idx": 32089, "func": "TODO: This isn't an exact port of MRI's pipe behavior, so revisit", "target": 1}
{"idx": 32090, "func": "end class CrCircularAssocClass", "target": 0}
{"idx": 32091, "func": "Does not need to be synchronised, as all access is from same thread", "target": 0}
{"idx": 32092, "func": "//+ JMX file attributes $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ //- JMX file attributes", "target": 0}
{"idx": 32093, "func": "line 1135", "target": 0}
{"idx": 32094, "func": "adding 'at' allows distinguish annotations from other members (i.e. inner class verses annotation of a class) //", "target": 0}
{"idx": 32095, "func": "can't do it", "target": 0}
{"idx": 32096, "func": "used for the delayed evaluation...", "target": 0}
{"idx": 32097, "func": "Continue with no instanceClass.", "target": 0}
{"idx": 32098, "func": "draw background annotations", "target": 0}
{"idx": 32099, "func": "bad postURL", "target": 0}
{"idx": 32100, "func": "//MappingImpl", "target": 0}
{"idx": 32101, "func": "join with the threads", "target": 0}
{"idx": 32102, "func": "The only thing we need to deal with is updating is the condition text. @see org.argouml.uml.diagram.ui.FigEdgeModelElement#modelChanged(java.beans.PropertyChangeEvent)", "target": 0}
{"idx": 32103, "func": "Remove trailing \",\"", "target": 0}
{"idx": 32104, "func": "Look for a BeanShell command", "target": 0}
{"idx": 32105, "func": "Override setBounds to keep shapes looking right. The classifier and state Figs are nicely centered vertically, and stretched out over the full width, to allow easy selection with the mouse. The Fig can only be shrunk to half its original size - so that it is not reducible to a few pixels only. @see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int)", "target": 0}
{"idx": 32106, "func": "check if there are new elements in the list if the old and new list are of the same size set the oldTargets to the correct selection", "target": 0}
{"idx": 32107, "func": "[EXEC SQL] CREATE VIEW view_name [(column_name {, column_name})] AS select_stmt [WITH CHECK OPTION]", "target": 0}
{"idx": 32108, "func": "begin ActionListener implementation", "target": 0}
{"idx": 32109, "func": "EOL was \"\\n\"", "target": 0}
{"idx": 32110, "func": "//i18n[SQLResultExecuterPanel.scriptQueryStatistics=Executed {0} //queries; elapsed time (seconds) - Total: {1}, SQL query: {2}, //Building output: {3}]", "target": 0}
{"idx": 32111, "func": "Also Check key is in default", "target": 0}
{"idx": 32112, "func": "Create an simple any type wrapper for the attribute value and use that with the EReference. //", "target": 0}
{"idx": 32113, "func": "try to find the executable", "target": 0}
{"idx": 32114, "func": "try next method", "target": 0}
{"idx": 32115, "func": "Recurse into ourself for each parent", "target": 0}
{"idx": 32116, "func": "Critics Table", "target": 0}
{"idx": 32117, "func": "Backup directory", "target": 0}
{"idx": 32118, "func": "4.5.3.2 AssociationClass", "target": 0}
{"idx": 32119, "func": "Prompt the user for the new name.", "target": 0}
{"idx": 32120, "func": "We're cloning ourselves, so we know the result should be a RubyObject", "target": 0}
{"idx": 32121, "func": "Common mocks", "target": 0}
{"idx": 32122, "func": "just look if the first character alrady an < so can use this mailaddress as the correct address", "target": 0}
{"idx": 32123, "func": "error message strings", "target": 0}
{"idx": 32124, "func": "retrieve item", "target": 0}
{"idx": 32125, "func": "entry exists, proxy has been gc'ed. replace entry.", "target": 0}
{"idx": 32126, "func": "evaluate the instance portion of the block in it Evaluate the initializer block", "target": 0}
{"idx": 32127, "func": "If the solution has changed, add \"dsts\" to the work list. No duplicates please which is why we have bbset.", "target": 0}
{"idx": 32128, "func": "Other class", "target": 0}
{"idx": 32129, "func": "true for the constant defined syntaxes", "target": 0}
{"idx": 32130, "func": "creation of the interpolation structure", "target": 0}
{"idx": 32131, "func": "Set some (hopefully!) useful properties", "target": 0}
{"idx": 32132, "func": "Tab to add to view nodes.", "target": 0}
{"idx": 32133, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#supportsCatalogsInDataManipulation()", "target": 0}
{"idx": 32134, "func": "Distribute the extra height over the visible compartments:", "target": 0}
{"idx": 32135, "func": "Link does not exist in UML2", "target": 0}
{"idx": 32136, "func": "//TODO: inexact, what we really need to know is: are any outer joins used?", "target": 1}
{"idx": 32137, "func": "Not normally used, but is left in here since it can be useful in debugging grammar and lexing problems.", "target": 0}
{"idx": 32138, "func": "//copyValues works by reflection, so explicitly mark the entity instance dirty", "target": 0}
{"idx": 32139, "func": "create data structure containing contents of rows to be deleted We cannot use the getRow() method because that uses MyJTable whereas the indexes that we have are indexes in the SortableTableModel.", "target": 0}
{"idx": 32140, "func": "TODO should this also clear isDynamic, rawParameters, permanentResults?", "target": 1}
{"idx": 32141, "func": "build \"else\" if it exists", "target": 0}
{"idx": 32142, "func": "Make sure that all the old values are cached.", "target": 0}
{"idx": 32143, "func": "line 648", "target": 0}
{"idx": 32144, "func": "optional attributes", "target": 0}
{"idx": 32145, "func": "True if a \\n was read after a \\r. Usually means this is a DOS/Windows file", "target": 0}
{"idx": 32146, "func": "line 1523", "target": 0}
{"idx": 32147, "func": "Aggregates sample results for use by the Statistical remote batch mode. Samples are aggregated by the key defined by getKey(). TODO: merge error count into parent class?", "target": 1}
{"idx": 32148, "func": "Description needed to handle conversion of data to/from Object", "target": 0}
{"idx": 32149, "func": "@see org.argouml.model.AggregationKind#getAggregate()", "target": 0}
{"idx": 32150, "func": "3. Now reposition messages based on their original position", "target": 0}
{"idx": 32151, "func": "inject the WHERE after the parent", "target": 0}
{"idx": 32152, "func": "common expectations", "target": 0}
{"idx": 32153, "func": "original class was not abstract", "target": 0}
{"idx": 32154, "func": "The list of rows may be empty, in which case we just return.", "target": 0}
{"idx": 32155, "func": "adds all stereotypes defined at the profiles applied to the current namespace", "target": 0}
{"idx": 32156, "func": "@see org.argouml.uml.reveng.ImportSettings#getImportLevel()", "target": 0}
{"idx": 32157, "func": "Determine if the parameter might be passed as a 32bit int parameter. This just applies to buffer/pointer types. //", "target": 0}
{"idx": 32158, "func": "E0000..E007F;", "target": 0}
{"idx": 32159, "func": "Ignore since we expect this to fail because of early termination and if there is some other kind of failure, then we'll simply not be able to match the content type.", "target": 0}
{"idx": 32160, "func": "Some dialects support adding columns, but the logic has not been added yet to the dialect. If that is the case the message is \"Not yet implemented\" - fail for all other messages.", "target": 0}
{"idx": 32161, "func": "Replace previous token by STRING", "target": 0}
{"idx": 32162, "func": "This works only on JDK 1.5 With JDK 1.4.x fonts will be bold for all SwingSet themes. See also SwingSet2 demos in JDK 1.4 and JDK 1.5", "target": 1}
{"idx": 32163, "func": "treat empty nested text as no text", "target": 0}
{"idx": 32164, "func": "fireTableRowsUpdated(index,index); fireTableRowsDeleted(index + 1,lastIndex);", "target": 0}
{"idx": 32165, "func": "search the classpath", "target": 0}
{"idx": 32166, "func": "set columba.color flag", "target": 0}
{"idx": 32167, "func": "TODO: I18n", "target": 1}
{"idx": 32168, "func": "i18n[I18n.WorkDirIsNotADirectory=Working directory {0} is not a directory]", "target": 0}
{"idx": 32169, "func": "TODO specifiedEnd??", "target": 0}
{"idx": 32170, "func": "Note: this is only used to implement TestIterationListener#testIterationStart Since this is a frequent event, it makes sense to create the list once rather than scanning each time The memory used will be released when the thread finishes", "target": 0}
{"idx": 32171, "func": "based on this scheduler is enabled or disabled", "target": 0}
{"idx": 32172, "func": "//P4 g-opts and cmd opts (rtfm)", "target": 0}
{"idx": 32173, "func": "crosshairDatasetIndex", "target": 0}
{"idx": 32174, "func": "copy just the first item...", "target": 0}
{"idx": 32175, "func": "if we have only one return value and without type, the return param string is \": ,\", we remove it", "target": 0}
{"idx": 32176, "func": "-full", "target": 0}
{"idx": 32177, "func": "secondary RangeAxes...", "target": 0}
{"idx": 32178, "func": "LOG.log(Level.FINE,result.x + \", \" + result.y + \" theta = \" + theta 180 / Math.PI + \" dx = \" + dx + \" dy = \" + dy);", "target": 0}
{"idx": 32179, "func": "if root of method is rescue, build as a light rescue", "target": 0}
{"idx": 32180, "func": "create intermediary directories - sometimes zip don't add them", "target": 0}
{"idx": 32181, "func": "//{{{ Get things rolling", "target": 0}
{"idx": 32182, "func": "//{{{ insertIndented() method", "target": 0}
{"idx": 32183, "func": "Heuristic algorithm: do not show stereotypes if there is no name.", "target": 0}
{"idx": 32184, "func": "north header cell decorator", "target": 0}
{"idx": 32185, "func": "if parameter name exists in http request then change its value with value obtained with regular expression", "target": 0}
{"idx": 32186, "func": "/////////////////////////////////////////////", "target": 0}
{"idx": 32187, "func": "//{{{ createPrintStream() method", "target": 0}
{"idx": 32188, "func": "If the user checked Auto Logon but gave wrong username/password in the Alias definition. He will be asked to enter username/password again in an extra dialog. Here for convenience we transfer these data back into the Alias. Note: Don't do this when Auto Logon is false.", "target": 0}
{"idx": 32189, "func": "add status information observable", "target": 0}
{"idx": 32190, "func": "The selected value may be \"\" to clear the represented classifier.", "target": 0}
{"idx": 32191, "func": "create a mapping of names if we have supertable info, since we need to find the ITableInfo again for re-ordering.", "target": 0}
{"idx": 32192, "func": "additional cleanup needed, because this would not be removed by ext.destroy():", "target": 1}
{"idx": 32193, "func": "if we haven't got the manifest yet, attempt to get it now and have manifest be the final merge", "target": 0}
{"idx": 32194, "func": "initialize the Checklist", "target": 0}
{"idx": 32195, "func": "Add it to the operation's methods.", "target": 0}
{"idx": 32196, "func": "//create the file", "target": 0}
{"idx": 32197, "func": "Not cached. (non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getCatalogs()", "target": 0}
{"idx": 32198, "func": "Create a default .jetsettings file file", "target": 0}
{"idx": 32199, "func": "line 735", "target": 0}
{"idx": 32200, "func": "FIXME: what if value is null on next line?", "target": 1}
{"idx": 32201, "func": "Since we will do the processing recursively, we need to ensure we don't stack overflow if there is a circular super type. //", "target": 0}
{"idx": 32202, "func": "cycle through again drawing only the sides at the front...", "target": 0}
{"idx": 32203, "func": "delete CallEvents which have this as their operation", "target": 0}
{"idx": 32204, "func": "// settings.setShowSqlEnabled(showSql);", "target": 0}
{"idx": 32205, "func": "Calculate each time, as likely to be called for each add", "target": 0}
{"idx": 32206, "func": "//TODO: implement caching?! proxies?!", "target": 1}
{"idx": 32207, "func": "set Look & Feel", "target": 0}
{"idx": 32208, "func": "The call here is the result of a desperate fight to find a place where the components in the split had not height = 0. If someone knows a better way please tell me I'll apreciate any advice. gerdwagner@users.sourceforge.net", "target": 1}
{"idx": 32209, "func": "//then by fk", "target": 0}
{"idx": 32210, "func": "@see java.util.Enumeration#nextElement()", "target": 0}
{"idx": 32211, "func": "we were woken up without being selected...poll for thread events and go back to sleep", "target": 0}
{"idx": 32212, "func": "A definite node is constructed from a specified number of children. That number of nodes are popped from the stack and made the children of the definite node. Then the definite node is pushed on to the stack.", "target": 0}
{"idx": 32213, "func": "Start second traverse to create mapping objects in memory. //", "target": 0}
{"idx": 32214, "func": "Some people put new line characters in their SQL to have nice debug output. Remove these new line characters too.", "target": 0}
{"idx": 32215, "func": "Something like cvar_cbase() from eval.c, factored out for the benefit of all the classvar-related node evaluations", "target": 0}
{"idx": 32216, "func": "start new row", "target": 0}
{"idx": 32217, "func": "z number format", "target": 0}
{"idx": 32218, "func": "remove mail-checking stuff", "target": 0}
{"idx": 32219, "func": "interfaces are handled as modules", "target": 0}
{"idx": 32220, "func": "line 1231", "target": 0}
{"idx": 32221, "func": "set the outline paint to fully transparent, then the legend shape will just have the same colour as the lines drawn by the renderer", "target": 0}
{"idx": 32222, "func": "Added in version 1.1 $NON-NLS-1$", "target": 0}
{"idx": 32223, "func": "Test here again to avoid method call for non-directories!", "target": 0}
{"idx": 32224, "func": "data include legend tooltips urls", "target": 0}
{"idx": 32225, "func": "generate a real method signature for the method, with to/from coercions", "target": 0}
{"idx": 32226, "func": "increment the version number (if necessary)", "target": 0}
{"idx": 32227, "func": "square", "target": 0}
{"idx": 32228, "func": "XXX: (Jon Skeet) Any reason for writing a message and then using a bare RuntimeException rather than just using a BuildException here? Is it in case the message could end up being written to no loggers (as the loggers could have failed to be created due to this failure)?", "target": 1}
{"idx": 32229, "func": "fill in the current limit length", "target": 0}
{"idx": 32230, "func": "not a special character", "target": 0}
{"idx": 32231, "func": "//gridBandAlternatePaint", "target": 0}
{"idx": 32232, "func": "add encoding if necessary", "target": 0}
{"idx": 32233, "func": "create the JTable that holds auth per row", "target": 0}
{"idx": 32234, "func": "Ignore non-existent and empty names", "target": 0}
{"idx": 32235, "func": "prepare and execute the insert", "target": 0}
{"idx": 32236, "func": "only local options have overwrite attribute", "target": 0}
{"idx": 32237, "func": "Testing with more than one, since it failed with a manual test I made.", "target": 0}
{"idx": 32238, "func": "uri = PersistenceManager.getInstance().fixUriExtension(theProjectUri);", "target": 0}
{"idx": 32239, "func": "MS-DOS read-only attribute", "target": 0}
{"idx": 32240, "func": "The xerces SAXParser sets line number and column number to 1.", "target": 0}
{"idx": 32241, "func": "//{{{ ScriptRunner class", "target": 0}
{"idx": 32242, "func": "revert", "target": 0}
{"idx": 32243, "func": "test a custom instance", "target": 0}
{"idx": 32244, "func": "not really user settable properties on tasks/project components", "target": 0}
{"idx": 32245, "func": "======== contactPanel ========", "target": 0}
{"idx": 32246, "func": "no entries in all users, therefore create an empty Map object", "target": 0}
{"idx": 32247, "func": "Found \"<\" followed by something else", "target": 0}
{"idx": 32248, "func": "Get the current time in milliseconds since the epoch and adjust it to match the epoch required by the specification. //", "target": 0}
{"idx": 32249, "func": "generate method cache initialization code", "target": 0}
{"idx": 32250, "func": "We do need to save every possible point, but the number of clone() invocations here is really a killer for performance on non-stingy repeat operators. I'm open to suggestions...", "target": 1}
{"idx": 32251, "func": "most significant w-r bits", "target": 0}
{"idx": 32252, "func": "izV = stepsnumSteps(int)((value/minZ)/(maxZlog-minZlog)) + 2;", "target": 0}
{"idx": 32253, "func": "create chat connection, if not available yet", "target": 0}
{"idx": 32254, "func": "try the context classloader ClassLoader loader = Thread.currentThread().getContextClassLoader();", "target": 0}
{"idx": 32255, "func": "XXX should this be fired by a different thread?", "target": 1}
{"idx": 32256, "func": "Some XML types declare nebulous Object mappings. They actually map to internal types that shouldn't be generated into code. //", "target": 0}
{"idx": 32257, "func": "errorLogging and successOnlyLogging are mutually exclusive $NON-NLS-1$", "target": 0}
{"idx": 32258, "func": "should be quicker to find the editors if they are registered.", "target": 0}
{"idx": 32259, "func": "When we started dispatching the current event, in milliseconds.", "target": 0}
{"idx": 32260, "func": "line 1103", "target": 0}
{"idx": 32261, "func": "If a closure, the next is simply a return from the closure! If a regular loop, the next is simply a jump to the end of the iteration", "target": 0}
{"idx": 32262, "func": "Create an empty but initialized instance of a UML Interface. @return an initialized UML Interface instance. TODO: This needs an extra parameter to specify the model/extent where the new element should be created.", "target": 1}
{"idx": 32263, "func": "//get the list of weblogic jar entries", "target": 0}
{"idx": 32264, "func": "//File object for doing IO", "target": 0}
{"idx": 32265, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#getPreview(int)", "target": 0}
{"idx": 32266, "func": "Hack: save the package for any transaction controllers", "target": 1}
{"idx": 32267, "func": "//////////////instance varables", "target": 0}
{"idx": 32268, "func": "//System.err.println(\" calculateLength()/str=\" + str);", "target": 0}
{"idx": 32269, "func": "i18n[I18n.tranlations=Translations]", "target": 0}
{"idx": 32270, "func": "FIXME is this correct for", "target": 1}
{"idx": 32271, "func": "The transaction fails if any sub sample fails", "target": 0}
{"idx": 32272, "func": "Draw background of right-side button. //", "target": 0}
{"idx": 32273, "func": "we reached the end", "target": 0}
{"idx": 32274, "func": "Encodes the given string, replacing each ASCII character that is not in the set specified by the 128-bit bitmask and each non-ASCII character below 0xA0 by an escape sequence of % followed by two hex digits. If % is not in the set but ignoreEscaped is true, then % will not be encoded iff it already begins a valid escape sequence.", "target": 0}
{"idx": 32275, "func": "if we hit EOF or reached limit then we're done", "target": 0}
{"idx": 32276, "func": "--- Instance data ---", "target": 0}
{"idx": 32277, "func": "Substitute .xml with .properties", "target": 0}
{"idx": 32278, "func": "//value and property are mutually exclusive attributes", "target": 0}
{"idx": 32279, "func": "Additional Operations in 4.5.3.25", "target": 0}
{"idx": 32280, "func": "malformed URI", "target": 0}
{"idx": 32281, "func": "FIXME: add text mode to mode flags", "target": 1}
{"idx": 32282, "func": "$NON-NLS-1$ Make it easier to enter a Tab $NON-NLS-1$", "target": 0}
{"idx": 32283, "func": "// selectedIndex = cbFieldName.getSelectedIndex(); // DefaultComboBoxModel comboModel = // (DefaultComboBoxModel) cbFieldName.getModel(); // FieldDetails fd = (FieldDetails) comboModel.getElementAt(selectedIndex); // cbFieldName.setSelectedItem(fd.getFieldName()); // cbFieldType.setSelectedItem(fd.getFieldType()); // tfFieldDefault.setText(fd.getDefault()); // chAutoIncrement.setSelected(fd.IsAutoIncrement()); // chNotNull.setSelected(fd.IsNotNull());", "target": 0}
{"idx": 32284, "func": "If we are disabling the Edit-->Remove menu item and the Edit-->Add menu item is disabled, then we also need to disable the Edit menu. The Java Look and Feel Guidelines say to disable a menu if all menu items are disabled.", "target": 0}
{"idx": 32285, "func": "When doing a 'save as', the path to save to (path) will not be the same as the buffer's previous path (buffer.getPath()). In that case, we want to create a backup of the new path, even if the old path was backed up as well (BACKED_UP property set)", "target": 0}
{"idx": 32286, "func": "Push the boolean constant 'true' (for declaredOnly)", "target": 0}
{"idx": 32287, "func": "without full tracing, many events will not fire", "target": 0}
{"idx": 32288, "func": "convert only public static final fields", "target": 0}
{"idx": 32289, "func": "//tomcat4.0 gets the old mangler", "target": 0}
{"idx": 32290, "func": "FIXME: This is wrong", "target": 1}
{"idx": 32291, "func": "no source file generated, nothing to move", "target": 0}
{"idx": 32292, "func": "end class AndCM", "target": 0}
{"idx": 32293, "func": "composer_options.xml: //<options> //<gui> <view id=\"0\"> <window maximized=\"false\" height=\"700\" width=\"600\" y=\"0\" x=\"0\" /> <toolbars infopanel=\"true\" main=\"true\" /> <splitpanes header=\"200\" attachment=\"100\" main=\"200\" /> <addressbook enabled=\"false\" /> </view> //</gui> //<spellcheck executable=\"/usr/bin/aspell\" /> //<external_editor enabled=\"false\" /> //<forward style=\"attachment\" /> //<subject ask_if_empty=\"true\" /> //<html send_as_multipart=\"true\" enable=\"false\" /> //</options>", "target": 0}
{"idx": 32294, "func": "//{{{ unsplit() method", "target": 0}
{"idx": 32295, "func": "Points '('.", "target": 0}
{"idx": 32296, "func": "end of workaround", "target": 1}
{"idx": 32297, "func": "The original name of the property", "target": 0}
{"idx": 32298, "func": "//implicit composite", "target": 0}
{"idx": 32299, "func": "update frame title", "target": 0}
{"idx": 32300, "func": "Retrive the files to be added to JAR from EJB descriptor", "target": 0}
{"idx": 32301, "func": "CEDRIC: not used right now.", "target": 0}
{"idx": 32302, "func": "(non-Javadoc) @see org.columba.mail.folder.headercache.HeaderList#get(java.lang.Object)", "target": 0}
{"idx": 32303, "func": "TODO: Needs completing - stub implementation only! - tfm", "target": 1}
{"idx": 32304, "func": "TODO: specifying soft refs, may want to compare memory consumption, behavior with weak refs (specify WEAK in place of SOFT below)", "target": 1}
{"idx": 32305, "func": "implicit return empty toolbar if icons == null", "target": 0}
{"idx": 32306, "func": "Check to ensure that the tokenizer received is not the default one that should have been overridden.", "target": 0}
{"idx": 32307, "func": "let's update the progress", "target": 0}
{"idx": 32308, "func": "keep value of twoAgo around so we can restore after we unread", "target": 0}
{"idx": 32309, "func": "enable embedded html resources", "target": 0}
{"idx": 32310, "func": "--> correct token data", "target": 0}
{"idx": 32311, "func": "This method has JITed already or has been abandoned. Bail out.", "target": 0}
{"idx": 32312, "func": "collapse 2", "target": 0}
{"idx": 32313, "func": "DROP INDEX indexName [ CASCADE ] [ ON <tableName> ];", "target": 0}
{"idx": 32314, "func": "First try for an accessible version of the exact match. This first lookup seems redundant with below, but is apparently needed. This whole thing is messy.", "target": 1}
{"idx": 32315, "func": "1 value pruned.", "target": 0}
{"idx": 32316, "func": "i18n[FileManager.confirm.filereplace={0} \\nalready exists. Do you want to replace it?]", "target": 0}
{"idx": 32317, "func": "account for multiple samples not yet intialised", "target": 0}
{"idx": 32318, "func": "So, we found a Classifier that is not a ClassifierInState. And at least one state has been selected. Well, let's correct that:", "target": 0}
{"idx": 32319, "func": "Change all EOL characters to match the calculated EOL string. If configured to do so, append a trailing EOL so that the file ends on a EOL.", "target": 0}
{"idx": 32320, "func": "add controls for file handling, but only if DataType can do File operations", "target": 0}
{"idx": 32321, "func": "new stereotype", "target": 0}
{"idx": 32322, "func": "Use the explicitly declared select expression; determine the return types indicated by each select token", "target": 0}
{"idx": 32323, "func": "bit risky if someone changes completor, but useful for method calls", "target": 1}
{"idx": 32324, "func": "package scope", "target": 0}
{"idx": 32325, "func": "create static private method field", "target": 0}
{"idx": 32326, "func": "Dump data types.", "target": 0}
{"idx": 32327, "func": "make sure to close all file handles to the currently cached message -> necessary for windows to be able to delete the local file", "target": 0}
{"idx": 32328, "func": "sectionOutlineStrokeList", "target": 0}
{"idx": 32329, "func": "IdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 32330, "func": "Frontbase requires CASCADE or RESTRICT keywords.", "target": 0}
{"idx": 32331, "func": "Create a new REMatch to hold results", "target": 0}
{"idx": 32332, "func": "//{{{ _log() method", "target": 0}
{"idx": 32333, "func": "TODO is this the best way to do this?", "target": 1}
{"idx": 32334, "func": "//TODO: entities CAN be compared, by PK and entity name, fix this!", "target": 1}
{"idx": 32335, "func": "verify the class", "target": 0}
{"idx": 32336, "func": "use a system manager that prevents from System.exit()", "target": 0}
{"idx": 32337, "func": "First print a quote", "target": 0}
{"idx": 32338, "func": "line 903", "target": 0}
{"idx": 32339, "func": "promise to implement one to three", "target": 0}
{"idx": 32340, "func": "line 1785", "target": 0}
{"idx": 32341, "func": "@see javax.swing.AbstractAction#isEnabled()", "target": 0}
{"idx": 32342, "func": "private boolean startDoc = false; private boolean endDoc = false;", "target": 0}
{"idx": 32343, "func": "Default directory", "target": 0}
{"idx": 32344, "func": "end class CrFinalSubclassed", "target": 0}
{"idx": 32345, "func": "Utility function to add a listener for a given property name and remember the registration. @param element element to listen for changes on @param property name of property to listen for changes of @see org.argouml.model.ModelEventPump#addModelEventListener(PropertyChangeListener, Object, String)", "target": 0}
{"idx": 32346, "func": "all done with lookup attempts, release monitor", "target": 0}
{"idx": 32347, "func": "It's definitely a package if expected constants eNAME, eNS_PREFIX, or eNS_URI appear. //", "target": 0}
{"idx": 32348, "func": "no stack change, but end of current block (with one new successor)", "target": 0}
{"idx": 32349, "func": "boolean resized = true;", "target": 0}
{"idx": 32350, "func": "save previously selected folder options", "target": 0}
{"idx": 32351, "func": "Returns the root node of the AST. It only makes sense to call this after a successful parse.", "target": 0}
{"idx": 32352, "func": "add the procedures.", "target": 0}
{"idx": 32353, "func": "Access should be fast", "target": 0}
{"idx": 32354, "func": "set the endtime for the Thread", "target": 0}
{"idx": 32355, "func": "If anything goes wrong return the stack trace as a string so that we get some useful feedback.", "target": 0}
{"idx": 32356, "func": "the CategoryDataset interface expects a list of categories, but we've stored them in an array...", "target": 0}
{"idx": 32357, "func": "Update the Virtual Header", "target": 0}
{"idx": 32358, "func": "for fast lookup: encoding entry => org.jruby.RubyEncoding", "target": 0}
{"idx": 32359, "func": "N.B. these are not multi-threaded, so don't make it static ISO format $NON-NLS-1$", "target": 0}
{"idx": 32360, "func": "If the location indicates after, add one more. //", "target": 0}
{"idx": 32361, "func": "contained elements:", "target": 0}
{"idx": 32362, "func": "paragraphComboBox.setEnabled(enableHtml);", "target": 0}
{"idx": 32363, "func": "reset error flags before executing the command", "target": 0}
{"idx": 32364, "func": "won't work: writeErrorToClient(HttpReplyHdr.formInternalError()); Generate result (if nec.) and populate it hack to skip processing", "target": 1}
{"idx": 32365, "func": "add the test classes to its classpath", "target": 0}
{"idx": 32366, "func": "Overridden purely to keep our superclass from removing the listener that we just added. @see org.argouml.uml.diagram.ui.FigEdgeModelElement#updateListeners(java.lang.Object, java.lang.Object)", "target": 0}
{"idx": 32367, "func": "should always be the case...", "target": 0}
{"idx": 32368, "func": "strip \"'s", "target": 0}
{"idx": 32369, "func": "Only modified by static block so no need to synchronize subsequent read-only access", "target": 0}
{"idx": 32370, "func": "TODO - should this be done for embedded usage? Note: the element is a ConfigTestElement when used standalone, so we cannot use FTPSampler access methods", "target": 1}
{"idx": 32371, "func": "\"We're going vertical!\" - Goose in \"Top Gun\"", "target": 0}
{"idx": 32372, "func": "/////////////////////////////////////////////////////////////////////////////A deadlock chain is circular and does not have a defined beginning Pid. In order to make the string representation of a deadlock chain unique we put the smallest Pid at the beginning of the chain.", "target": 0}
{"idx": 32373, "func": "todo : add the notion of enabled filters to the CacheKey to differentiate filtered collections from non-filtered; but CacheKey is currently used for both collections and entities; would ideally need to define two seperate ones; currently this works in conjuction with the check on DefaultInitializeCollectionEventHandler.initializeCollectionFromCache() (which makes sure to not read from cache with enabled filters). EARLY EXIT!!!!!", "target": 1}
{"idx": 32374, "func": "//\" collection_ where \" +", "target": 0}
{"idx": 32375, "func": "Stack of entity names, to help detect recursion. //", "target": 0}
{"idx": 32376, "func": "List for recent files menu items", "target": 0}
{"idx": 32377, "func": "//this three attempt trick is to get round quirks in different //Java implementations. Some of them take a few goes to bind //property; we ignore the first couple of such failures.", "target": 0}
{"idx": 32378, "func": "Both diagram types shall show sequence numbers when requested:", "target": 0}
{"idx": 32379, "func": "i18n[userscript.showInStandardMenues1=Show in standard menues]", "target": 0}
{"idx": 32380, "func": "If we have an exception, find a catch", "target": 0}
{"idx": 32381, "func": "SERIES VISIBLE (not yet respected by all renderers)", "target": 0}
{"idx": 32382, "func": "If we enter here, it means that the stylesheet is supplied via style attribute", "target": 0}
{"idx": 32383, "func": "//render the SQL", "target": 0}
{"idx": 32384, "func": "//{{{ SegmentBuffer constructor", "target": 0}
{"idx": 32385, "func": "It is chunked transfer encoding, which we do not really support yet. So we just read without blocking, because we do not know when to stop reading, so we cannot block TODO propery implement support for chunked transfer, i.e. to know when we have read the whole request, and therefore allow the reading to block", "target": 1}
{"idx": 32386, "func": "sectionOutlinePaintList", "target": 0}
{"idx": 32387, "func": "Pop it from the stack. //", "target": 0}
{"idx": 32388, "func": "//FB used to check for parent != null. Need to find the top most model object not including the resource. parent instanceof Eobject only checks for trees in model object space.", "target": 0}
{"idx": 32389, "func": "(non-Javadoc) @see org.columba.mail.imap.IImapServer#getMimePartBodyStream(java.lang.Object, java.lang.Integer[], org.columba.mail.folder.imap.IMAPFolder)", "target": 0}
{"idx": 32390, "func": "throws SAXException", "target": 0}
{"idx": 32391, "func": "//no point doing this if NONE was requested", "target": 0}
{"idx": 32392, "func": "Not a collection? Return the entity property mapping.", "target": 0}
{"idx": 32393, "func": "fixes dirty flag not being reset on save/insert/undo/redo/undo", "target": 0}
{"idx": 32394, "func": "If there is an attribute which is not static => no problem", "target": 0}
{"idx": 32395, "func": "//{{{ isToolsJarAvailable() method", "target": 0}
{"idx": 32396, "func": "Keep the '\\' unless it is one of the escapable chars '$' ',' or '\\' N.B. This method is used to parse function parameters, so must treat ',' as special", "target": 0}
{"idx": 32397, "func": "draw the block without collecting entities", "target": 0}
{"idx": 32398, "func": "featureMap.add(eStructuralFeature, cursor++, o); expectedModCount = featureMap.getModCount(); ++entryCursor; ++lastCursor; lastCursor = -1; prepared = 0;", "target": 0}
{"idx": 32399, "func": "//{{{ createMacrosMenu() method", "target": 0}
{"idx": 32400, "func": "char and Character get special treatment - take the first character", "target": 0}
{"idx": 32401, "func": "all other arg cases without block", "target": 0}
{"idx": 32402, "func": "//{{{ hasScreenMenuBar", "target": 0}
{"idx": 32403, "func": "name of organisation", "target": 0}
{"idx": 32404, "func": "//{{{ evalSelection() method", "target": 0}
{"idx": 32405, "func": "Oracle jdbc driver doesn't properly identify this column in ResultSetMetaData as read-only. For now, just use isAutoIncrement flag to simulate this setting.", "target": 0}
{"idx": 32406, "func": "end of variable scope", "target": 0}
{"idx": 32407, "func": "baseline_root_name", "target": 0}
{"idx": 32408, "func": "also get rid of trailing spaces on Windows", "target": 0}
{"idx": 32409, "func": "//TODO: COPY/PASTE FROM SessionImpl, pull up!", "target": 1}
{"idx": 32410, "func": "add the data to the existing tables", "target": 0}
{"idx": 32411, "func": "SSS FIXME: I could make IR_Loop a scope too ... semantically, it is a scope, but, functionally, not sure if this is required yet ...", "target": 1}
{"idx": 32412, "func": "i18n[laf.tabFonts=Fonts]", "target": 0}
{"idx": 32413, "func": "Object Tree", "target": 0}
{"idx": 32414, "func": "NOTUSED: GuiPackage guiPack =", "target": 1}
{"idx": 32415, "func": "Mono 1.0's wsdl doesn't deal with absolute paths", "target": 0}
{"idx": 32416, "func": "eval value and save it", "target": 0}
{"idx": 32417, "func": "sql-server, at least needed this dropped after use; strange!", "target": 1}
{"idx": 32418, "func": "predefine a few other methods we invoke directly elsewhere", "target": 0}
{"idx": 32419, "func": "let's load the default shortcut for every action", "target": 0}
{"idx": 32420, "func": "Offset in x & y for depth perspective lines of cube. TODO: This is the same value as the member 'D'in {@link org.tigris.gef.presentation.FigCube}, but there is nothing enforcing that correspondence. Things will probably break if they don't match.", "target": 1}
{"idx": 32421, "func": "-------------- Packaged/protected fields and methods below ----------------", "target": 0}
{"idx": 32422, "func": "b_lyear.setEnabled(y > y0);", "target": 0}
{"idx": 32423, "func": "TODO: Convert all to use standard factory registration", "target": 1}
{"idx": 32424, "func": "i18n[ObjectTreeTab.title=Objects]", "target": 0}
{"idx": 32425, "func": "domainCrosshairColumnKey", "target": 0}
{"idx": 32426, "func": "If return type void, return void as the value.", "target": 0}
{"idx": 32427, "func": "TODO: Should this really return null? If not, figure out something better to do here.", "target": 1}
{"idx": 32428, "func": "INTERVAL OPERATOR: {x} | {x,} | {x,y} (RE_INTERVALS && RE_NO_BK_BRACES) \\{x\\} | \\{x,\\} | \\{x,y\\} (RE_INTERVALS && !RE_NO_BK_BRACES) OPEN QUESTION: what is proper interpretation of '{' at start of string?", "target": 1}
{"idx": 32429, "func": "Inconclusive", "target": 0}
{"idx": 32430, "func": "//{{{ setMessageComponent() method", "target": 0}
{"idx": 32431, "func": "If so, we need to start collection here", "target": 0}
{"idx": 32432, "func": "there was a problem with the read It would be nice to report this to the user, but if we try we get in trouble in some cases where the data is continually re-read after the dialog goes away (because the cell is being re-painted). cell is not editable", "target": 0}
{"idx": 32433, "func": "Derby requires that columns be not-null before applying a unique constraint", "target": 0}
{"idx": 32434, "func": "The JavaHelp can't be added to a BorderLayout because it isnt' a component. For this demo we'll use the embeded method since we don't want a Frame to be created.", "target": 1}
{"idx": 32435, "func": "Move any i18n files that are located in the core downloads dir to the i18n downloads dir. The spring application context will not load properly (for some unknown reason) when there are i18n jars in the classpath. So as a work-around, we simply ensure that they are where they should be anyway. Previously we were not as careful about this, so it is possible that i18n jars were copied into the core downloads directory.", "target": 1}
{"idx": 32436, "func": "//private double fixedAutoRange;", "target": 0}
{"idx": 32437, "func": "//ignore subselect keywords", "target": 0}
{"idx": 32438, "func": "Populate our namespace hierarchy to the requested depth. Total number of created elements is children^maxLevel, so be careful not to increase parameters too much.", "target": 0}
{"idx": 32439, "func": "Symbol table, for internalising names. //", "target": 0}
{"idx": 32440, "func": "//{{{ setStringProperty() method", "target": 0}
{"idx": 32441, "func": "Create the BeanShell function and set its parameters.", "target": 0}
{"idx": 32442, "func": "Any features from one package that delegate to features in another. //", "target": 0}
{"idx": 32443, "func": "If a driver says it supports schemas but doesn't provide schema nodes, try to get other nodes.", "target": 0}
{"idx": 32444, "func": "Create Ruby proxies for any input arguments that are not primitives.", "target": 0}
{"idx": 32445, "func": "cleanup code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 32446, "func": "scale the page so the width fits...", "target": 0}
{"idx": 32447, "func": "save default headerfields, as defined in RFC822", "target": 0}
{"idx": 32448, "func": "builder.setDefaultButtonBarGapBorder();", "target": 0}
{"idx": 32449, "func": "method called by add is synchronized //this is a different model from the one used by the result collector", "target": 0}
{"idx": 32450, "func": "-pbranch", "target": 0}
{"idx": 32451, "func": "borderVisible", "target": 0}
{"idx": 32452, "func": "if there is no string given, return a number", "target": 0}
{"idx": 32453, "func": "TODO: add serialization support for images", "target": 1}
{"idx": 32454, "func": "_lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;", "target": 0}
{"idx": 32455, "func": "IOT is also 6", "target": 0}
{"idx": 32456, "func": "verbose level logging for suppressed messages", "target": 0}
{"idx": 32457, "func": "we only collect methods and interfaces for user-defined proxy classes.", "target": 0}
{"idx": 32458, "func": "setText(treeNode.getName()); setIcon(getFolderIcon(treeNode, expanded));", "target": 0}
{"idx": 32459, "func": "return label", "target": 0}
{"idx": 32460, "func": "set global class loader to null", "target": 0}
{"idx": 32461, "func": "if the editing domain wasn't given by the workbench part, try to get it from the selection", "target": 0}
{"idx": 32462, "func": "this is the classname to run as well as its arguments. in case of 'executeJar', the executable is a jar file.", "target": 0}
{"idx": 32463, "func": "Line where current executing unit is being evaluated", "target": 0}
{"idx": 32464, "func": "A dialect delegate for the Axion database. TODO: This dialect is not yet complete. Need to provide implementations wherever \"Not yet implemented\" appears.", "target": 1}
{"idx": 32465, "func": "Test: Before Selection Controller - zero (default) - simple controller 1 - - one - - two - simple controller 2 - - three - - four - five - six After cond = Switch condition exp[] = expected results", "target": 0}
{"idx": 32466, "func": "client isn't from local machine", "target": 0}
{"idx": 32467, "func": "Eliminates right mouse clicks as valid actions", "target": 0}
{"idx": 32468, "func": "set the clip rect to exclude the border & insets", "target": 0}
{"idx": 32469, "func": "//default is compatibility", "target": 0}
{"idx": 32470, "func": "Get the class body BSHBlock", "target": 0}
{"idx": 32471, "func": "javacopts", "target": 0}
{"idx": 32472, "func": "Deal with if and unless properties first", "target": 0}
{"idx": 32473, "func": "seriesOutlinePaint", "target": 0}
{"idx": 32474, "func": "Check to see if the standard name is used (there's no basename)", "target": 0}
{"idx": 32475, "func": "@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAUnaryUnaryExpression(tudresden.ocl.parser.node.AUnaryUnaryExpression)", "target": 0}
{"idx": 32476, "func": "//run", "target": 0}
{"idx": 32477, "func": "now remove the non-digit chars, if any", "target": 0}
{"idx": 32478, "func": "//{{{ XModeHandler constructor", "target": 0}
{"idx": 32479, "func": "Request that we be made visible if we're not? topLevelTabbedPane.setSelectedComponent(t);", "target": 0}
{"idx": 32480, "func": "add to the jitted methods set", "target": 0}
{"idx": 32481, "func": "reset default cursor so that the hand cursor doesn't stick around", "target": 0}
{"idx": 32482, "func": "don't try this at home", "target": 1}
{"idx": 32483, "func": "@see org.xml.sax.EntityResolver#resolveEntity(java.lang.String, java.lang.String)", "target": 0}
{"idx": 32484, "func": "generate the key", "target": 0}
{"idx": 32485, "func": "remove any single matches", "target": 0}
{"idx": 32486, "func": "Hack done to fix bringing the window to the front. At least on windows, Frame.toFront() doesn't cut it. Remove the isWindows check if it's broken under other OSes too.", "target": 1}
{"idx": 32487, "func": "Anyway, here we implement <set> semantics for a <one-to-many> <bag>!", "target": 0}
{"idx": 32488, "func": "Throws EjbcException if unsuccessful", "target": 0}
{"idx": 32489, "func": "TODO: This shouldn't know about the specific type of Fig that is being displayed. That couples it too strongly to things it shouldn't need to know about - tfm - 20070924", "target": 1}
{"idx": 32490, "func": "Called from multiple threads", "target": 0}
{"idx": 32491, "func": "since UML2 it's easier: TDs only via stereotypes", "target": 0}
{"idx": 32492, "func": "Just returns false. @see org.argouml.cognitive.Poster#canFixIt(org.argouml.cognitive.ToDoItem)", "target": 0}
{"idx": 32493, "func": "Create commands to do mapping.getNested().addAll(siblingsToReparent). //", "target": 0}
{"idx": 32494, "func": "Where we get new positions from.", "target": 0}
{"idx": 32495, "func": "line 1207", "target": 0}
{"idx": 32496, "func": "terminate; tryCompile will have printed out an error and we're done", "target": 0}
{"idx": 32497, "func": "remain where we are", "target": 0}
{"idx": 32498, "func": "performance opt", "target": 0}
{"idx": 32499, "func": "It must be an unsettable feature to be null and considered set. //", "target": 0}
{"idx": 32500, "func": "This just tests that the function does not blow up", "target": 0}
{"idx": 32501, "func": "then bind it", "target": 0}
{"idx": 32502, "func": "i18n[AliasPropertiesInternalFrame.ok=OK]", "target": 0}
{"idx": 32503, "func": "Include request body if it is a post or put or patch", "target": 0}
{"idx": 32504, "func": "take care of dependencies", "target": 0}
{"idx": 32505, "func": "initialize new ToDoItem", "target": 0}
{"idx": 32506, "func": "The CollectionEntry.isReached() stuff is just to detect any silly users who set up circular or shared references between/to collections.", "target": 0}
{"idx": 32507, "func": "run ten separate calls into Ruby, with delay and explicit GC", "target": 0}
{"idx": 32508, "func": "Dump meta data.", "target": 0}
{"idx": 32509, "func": "translations are most likely to be found in core lib dir.", "target": 0}
{"idx": 32510, "func": "file begins with UTF-8-Y signature. discard the signature, and read the remainder as UTF-8.", "target": 0}
{"idx": 32511, "func": "Map of label & basic blocks with that label", "target": 0}
{"idx": 32512, "func": "list of parsers //$NON-NLS-1$", "target": 0}
{"idx": 32513, "func": "Replace a string with its translation, if one exists", "target": 0}
{"idx": 32514, "func": "//{{{ LineElement constructor", "target": 0}
{"idx": 32515, "func": "Field access, .length on array, or a method invocation Must handle toLHS case for each.", "target": 0}
{"idx": 32516, "func": "expect a different hashcode for item and item3", "target": 0}
{"idx": 32517, "func": "Look for a likely plugin name. //", "target": 0}
{"idx": 32518, "func": "TODO: not complete", "target": 1}
{"idx": 32519, "func": "the fig that was under the mouse when it was released", "target": 0}
{"idx": 32520, "func": "Use '/' to calculate digest based on file name. This is required in order to get the same result on different platforms.", "target": 0}
{"idx": 32521, "func": "double-check the cache now that we're synchronized", "target": 0}
{"idx": 32522, "func": "We clear the save-required flag on the Swing event thread in the hopes that it gets done after any other background work (listener updates) that is being done there", "target": 0}
{"idx": 32523, "func": "//{{{ getMainRuleSet() method", "target": 0}
{"idx": 32524, "func": "/////////////////////////////////////////////////////////////////////////Place vendor specific tool creations here. ///////////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 32525, "func": "classic translator does not support collection of ordinal param metadata", "target": 0}
{"idx": 32526, "func": "Avoid our initialization here", "target": 0}
{"idx": 32527, "func": "i18n[mysql.fieldProps=Field Properties:]", "target": 0}
{"idx": 32528, "func": "Note that the filename is also used as a key to the pool (if used) Documents provided in the testplan are not currently pooled, as they may change between samples.", "target": 0}
{"idx": 32529, "func": "TODO should this use setDone()? TODO should this use setFirst()?", "target": 1}
{"idx": 32530, "func": "ignore (probably H2 not in the classpath)", "target": 0}
{"idx": 32531, "func": "Traverse the lists looking for the last (innermost) match", "target": 0}
{"idx": 32532, "func": "The next 3 restrictions for Abstraction seem to be Argo specific not something the UML spec requires - tfm - 20070215", "target": 0}
{"idx": 32533, "func": "If there is a temporary file... //", "target": 0}
{"idx": 32534, "func": "set the maxY and minY values to intersect y-value", "target": 0}
{"idx": 32535, "func": "//////////////////////////////////////////////////////////////main parsing methods", "target": 0}
{"idx": 32536, "func": "Setup print document for message", "target": 0}
{"idx": 32537, "func": "try creating a string from the generated modelelements:", "target": 0}
{"idx": 32538, "func": "maps our series into our parent's", "target": 0}
{"idx": 32539, "func": "Then eObject2 must be that previous match. //", "target": 0}
{"idx": 32540, "func": "i18n[RowNumberTableColumn.rowNumber=Row Number]", "target": 0}
{"idx": 32541, "func": "i18n[FactoryProviderController.fileCreateFailed=File {0} could not be created: {1}]", "target": 0}
{"idx": 32542, "func": "line 1072", "target": 0}
{"idx": 32543, "func": "simply use name as it is", "target": 0}
{"idx": 32544, "func": "TODO: We should really be passing the default settings to the diagram factory so they get set at creation time", "target": 1}
{"idx": 32545, "func": "Buffer containing characters which have been decoded from the bytes in inBB.", "target": 0}
{"idx": 32546, "func": "//{{{ canonPath() method", "target": 0}
{"idx": 32547, "func": "TODO: Not yet working for UML2", "target": 1}
{"idx": 32548, "func": "'|'", "target": 0}
{"idx": 32549, "func": "This could also just be true all the time...", "target": 0}
{"idx": 32550, "func": "Get the node to be expanded.", "target": 0}
{"idx": 32551, "func": "@see org.argouml.model.ConcurrencyKind#getGuarded()", "target": 0}
{"idx": 32552, "func": "DB-OBJECTNAME", "target": 0}
{"idx": 32553, "func": "The sample does not use a valid encoding", "target": 0}
{"idx": 32554, "func": "Tell GEF", "target": 0}
{"idx": 32555, "func": "no item exists in table -> nothing todo", "target": 0}
{"idx": 32556, "func": "//{{{ saveRegisters() method", "target": 0}
{"idx": 32557, "func": "//running under an IDE that doesn't set ANT_HOME", "target": 0}
{"idx": 32558, "func": "remains selected", "target": 0}
{"idx": 32559, "func": "no need to reset Locale", "target": 0}
{"idx": 32560, "func": "pre-set for the sake of terminating recursive calls", "target": 0}
{"idx": 32561, "func": "Session management", "target": 0}
{"idx": 32562, "func": "TODO handle filenames", "target": 1}
{"idx": 32563, "func": "These are needed for invoking the method", "target": 0}
{"idx": 32564, "func": "i18n[SchemaInfo.loadingTables=Loading tables]", "target": 0}
{"idx": 32565, "func": "is it installed?", "target": 0}
{"idx": 32566, "func": "draw the box...", "target": 0}
{"idx": 32567, "func": "This should be ignored, as there is no value", "target": 0}
{"idx": 32568, "func": "//super.removeFolder(); do nothing", "target": 0}
{"idx": 32569, "func": "I tried to use the length from the source database (PostgreSQL) which yielded 8192 for this test. So the column def in FB was binary_column bit varying(8192). Yet it gave me an exception that indicated truncation (string data right truncation???) So for now, go back to hard-coded maximal length. registerColumnType(Types.BINARY, 2147000000,\"bit varying($l)\");", "target": 0}
{"idx": 32570, "func": "@see org.argouml.model.OrderingKind#getUnordered()", "target": 0}
{"idx": 32571, "func": "alter table TEST ALTER MYCHAR SET DEFAULT 'FOO' alter table TEST ALTER MYCHAR DROP DEFAULT", "target": 0}
{"idx": 32572, "func": "Don't clear everything here, breaks loading!", "target": 0}
{"idx": 32573, "func": "returns a List", "target": 0}
{"idx": 32574, "func": "background paint", "target": 0}
{"idx": 32575, "func": "check to see if we hit the end of the file without processing the current record", "target": 0}
{"idx": 32576, "func": "line 1175", "target": 0}
{"idx": 32577, "func": "Test for toURI when the file is a directory.", "target": 0}
{"idx": 32578, "func": "Make sure any existing lock is released before we try and close the file", "target": 0}
{"idx": 32579, "func": "(non-Javadoc) @see java.awt.datatransfer.Transferable#isDataFlavorSupported(java.awt.datatransfer.DataFlavor)", "target": 0}
{"idx": 32580, "func": "Create the main draggable label for the association. This can be overridden in subclasses to change behaviour. TODO: Consider introducing this to FigEdgeModelElement and using throughout all edges. @param owner owning uml element @param settings rendering settings", "target": 1}
{"idx": 32581, "func": "Fill 16 of value (byte) -19 Fill 4 of value (byte) 33 Fill 6 of value (byte) -87 Fill 2 of value (byte) 33 Fill 3 of value (byte) -87", "target": 0}
{"idx": 32582, "func": "we need to convert to a different format default to hex", "target": 0}
{"idx": 32583, "func": "create new field and replace it all by original contents", "target": 0}
{"idx": 32584, "func": "itemLabelGenerator", "target": 0}
{"idx": 32585, "func": "//this enables direct text editing for sub figs of a //FigGroup object:", "target": 0}
{"idx": 32586, "func": "cancel button goes on far left", "target": 0}
{"idx": 32587, "func": "//DMS this is totally untested.", "target": 1}
{"idx": 32588, "func": "this is the last period, but it is only partially visible so check that the label will fit before displaying it...", "target": 0}
{"idx": 32589, "func": "BigInteger required a sign byte in incoming array", "target": 0}
{"idx": 32590, "func": "once one criticism is found, exit", "target": 0}
{"idx": 32591, "func": "Keep track of first non-equal comparison to use in case the case-insensitive comparisons all end up equal", "target": 0}
{"idx": 32592, "func": "int selectedIndex = sizeComboBox.getSelectedIndex();", "target": 0}
{"idx": 32593, "func": "skip spaces", "target": 0}
{"idx": 32594, "func": "i18n[SplashScreen.info.loadingfile=Loading file - ]", "target": 0}
{"idx": 32595, "func": "Creates the new entry.", "target": 0}
{"idx": 32596, "func": "we're sure that there is one file because of getSendFileAsPostBody method's return value.", "target": 0}
{"idx": 32597, "func": "RubyContinuation", "target": 0}
{"idx": 32598, "func": "c: bind_eval", "target": 0}
{"idx": 32599, "func": "//registerThreadDumpSignalHandler(runtime);", "target": 0}
{"idx": 32600, "func": "<!-- begin-user-doc --> The <b>Switch</b> for the model's inheritance hierarchy. It supports the call {@link #doSwitch(EObject) doSwitch(object)} to invoke the <code>caseXXX</code> method for each class of the model, starting with the actual class of the object and proceeding up the inheritance hierarchy until a non-null result is returned, which is the result of the switch. <!-- end-user-doc --> @see org.eclipse.emf.mapping.MappingPackage @generated", "target": 0}
{"idx": 32601, "func": "i18n[mysql.grants=MySQL Grants]", "target": 0}
{"idx": 32602, "func": "//{{{ updatePluginList() method", "target": 0}
{"idx": 32603, "func": "disassemble positional parameters", "target": 0}
{"idx": 32604, "func": "Determine the Java version by looking at available classes java.net.Proxy was introduced in JDK 1.5 java.lang.CharSequence was introduced in JDK 1.4 java.lang.StrictMath was introduced in JDK 1.3 java.lang.ThreadLocal was introduced in JDK 1.2 java.lang.Void was introduced in JDK 1.1 Count up version until a NoClassDefFoundError ends the try", "target": 0}
{"idx": 32605, "func": "Otherwise, this is a primitive type.", "target": 0}
{"idx": 32606, "func": "check the case where there is a secondary dataset that doesn't have a renderer (i.e. falls back to renderer 0)", "target": 0}
{"idx": 32607, "func": "XXX - failed to load the class properly. should we print a warning here?", "target": 1}
{"idx": 32608, "func": "we have binding foo but user asks to remove foo bar?", "target": 0}
{"idx": 32609, "func": "aload_2 args", "target": 0}
{"idx": 32610, "func": "The south panel always has tabs - but they are added (later) elsewhere.", "target": 0}
{"idx": 32611, "func": "manage changes of direction...", "target": 0}
{"idx": 32612, "func": "Tell the user that they won't be able to show the explain plan", "target": 0}
{"idx": 32613, "func": "FIXME: This needs to happen for lambdas args.checkArgCount(runtime, parameters.length);", "target": 1}
{"idx": 32614, "func": "//public String getUpdateableText(Object object)", "target": 0}
{"idx": 32615, "func": "//{{{ ExtendedAttribute class", "target": 0}
{"idx": 32616, "func": "throws java.io.IOException", "target": 0}
{"idx": 32617, "func": "line 551", "target": 0}
{"idx": 32618, "func": "gettext //$NON-NLS-1$ //$NON-NLS-1$", "target": 0}
{"idx": 32619, "func": "we support up to 4 im", "target": 0}
{"idx": 32620, "func": "i18n[graph.btnCreateNewGraph=Create new graph]", "target": 0}
{"idx": 32621, "func": "We need this in order to allow the user to see this plugin - which isn't loaded - in the plugin summary dialog, so that they can enable it.", "target": 0}
{"idx": 32622, "func": "//i18n[ColumnDetailsDialog.scaleLabel=Scale: ]", "target": 0}
{"idx": 32623, "func": "Setting the loader needs to reset the class cache", "target": 0}
{"idx": 32624, "func": "InteractionInstanceSets will get deleted automatically because they are associated by composition", "target": 0}
{"idx": 32625, "func": "tree must be editable, otherwise you can't collapse/expand tree nodes", "target": 0}
{"idx": 32626, "func": "Determine if content-type is known to be binary, i.e. not displayable as text. @param ct content type @return true if content-type is of type binary.", "target": 0}
{"idx": 32627, "func": "draw horizontal lines", "target": 0}
{"idx": 32628, "func": "LIST OPERATOR: [...] | [^...]", "target": 0}
{"idx": 32629, "func": "If no flags filter the seach is still valid", "target": 0}
{"idx": 32630, "func": "set properties using JAF", "target": 0}
{"idx": 32631, "func": "Give the static space its class static import important to do this after all classes are defined", "target": 0}
{"idx": 32632, "func": "Shown as Parameter Name on the GUI", "target": 0}
{"idx": 32633, "func": "no binding given, use (eval)", "target": 0}
{"idx": 32634, "func": "place in this row (truncated) anyway", "target": 0}
{"idx": 32635, "func": "Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 32636, "func": "If 'r' is not a constant, it could actually be a compound value! Look in our value map to see if we have a simplified value for the receiver.", "target": 0}
{"idx": 32637, "func": "Appending Separators ---------------------------------------------------", "target": 0}
{"idx": 32638, "func": "i18n[dateTypeTimestamp.stringVersion=Use String version of Timestamp ]", "target": 0}
{"idx": 32639, "func": "//Log.log(Log.DEBUG, MiscUtilities.class, // \"- is not in system classpath.\"); //}}}", "target": 0}
{"idx": 32640, "func": "Optional; logOn() connects if necessary.", "target": 0}
{"idx": 32641, "func": "Enables the scheduler", "target": 0}
{"idx": 32642, "func": "//{{{ DefaultInputHandler constructor", "target": 0}
{"idx": 32643, "func": "BSF uses a hashtable to store values so cannot declareBean with a null value So need to remove any bean of this name as that bean should not be visible", "target": 0}
{"idx": 32644, "func": "add a second series", "target": 0}
{"idx": 32645, "func": "Primary Metal L&F font", "target": 0}
{"idx": 32646, "func": "create sample headerlist", "target": 0}
{"idx": 32647, "func": "//FIXME we should really assert a value", "target": 1}
{"idx": 32648, "func": "we start to iterate through the elements", "target": 0}
{"idx": 32649, "func": "Test for long file names on Windows", "target": 0}
{"idx": 32650, "func": "block until its closed", "target": 0}
{"idx": 32651, "func": "Remove obj3 from weakNodes and newChildren", "target": 0}
{"idx": 32652, "func": "i18n[mssql.scriptIndexses=Script indexes]", "target": 0}
{"idx": 32653, "func": "Progress throws an exception if you try to drop the first index that was created", "target": 0}
{"idx": 32654, "func": "Set the static bsh This callback", "target": 0}
{"idx": 32655, "func": "setFunctionalMode(false); setSerialized(false);", "target": 0}
{"idx": 32656, "func": "if none of the possibilities worked out, break out of do/while", "target": 0}
{"idx": 32657, "func": "renamed from clear", "target": 0}
{"idx": 32658, "func": "we don't recalculate activations, just move them", "target": 0}
{"idx": 32659, "func": "$:: load path", "target": 0}
{"idx": 32660, "func": "///////////////////////////////////////////////////////GET/SET methods. Setters, of course are where ant user passes in values. /////////////////////////////////////////////////////////", "target": 0}
{"idx": 32661, "func": "remove the user defined profile and the directory where it is", "target": 0}
{"idx": 32662, "func": "if there is anything before the node on the same line, create line break and comment out the first line of the node", "target": 0}
{"idx": 32663, "func": "leave dialog empty if no source contact model specified", "target": 0}
{"idx": 32664, "func": "Version information for test plan header This is written to JMX files by ScriptWrapperConverter Also to JTL files by ResultCollector $NON-NLS-1$", "target": 0}
{"idx": 32665, "func": "@see org.argouml.model.CollaborationsHelper#getAllClassifierRoles(java.lang.Object)", "target": 0}
{"idx": 32666, "func": "//list file", "target": 0}
{"idx": 32667, "func": "JUNIT3 test //assertEquals(error, JUnitTestRunner.FAILURES, runner.getRetCode()); //@fixme as of now does not report the original stacktrace. //assertTrue(error, error.indexOf(\"thrown on purpose\") != -1);", "target": 1}
{"idx": 32668, "func": "helper method - also used by constructor", "target": 0}
{"idx": 32669, "func": "loop for all commented out nodes", "target": 0}
{"idx": 32670, "func": "Informative summary message in case of errors", "target": 0}
{"idx": 32671, "func": "save the callstack including the called method, just for error mess", "target": 0}
{"idx": 32672, "func": "draw the axis and category label", "target": 0}
{"idx": 32673, "func": "//TODO: currently keeps Getters and Setters (instead of PropertyAccessors) because of the way getGetter() and getSetter() are implemented currently; yuck!", "target": 1}
{"idx": 32674, "func": "//instanceof AssociationType;", "target": 0}
{"idx": 32675, "func": "TODO investigate typo in spec!!", "target": 1}
{"idx": 32676, "func": "//EcoreAdapterFactory", "target": 0}
{"idx": 32677, "func": "we already have a callback registered; either a local (org.hibernate.Transaction) transaction has accepted callback responsibilities, or we have previously registered a transaction synch.", "target": 0}
{"idx": 32678, "func": "set user-define properties", "target": 0}
{"idx": 32679, "func": "pushes the first block onto the stack of blocks to be visited", "target": 0}
{"idx": 32680, "func": "as far as I know, the Locale for the calendar only affects week number calculations, and since DateTickUnit doesn't do week arithmetic, the default locale (whatever it is) should be fine here...", "target": 0}
{"idx": 32681, "func": "this should be before dockables are initialized", "target": 1}
{"idx": 32682, "func": "@see ProfileModelLoader#loadModel(ProfileReference)", "target": 0}
{"idx": 32683, "func": "making it possible to jump to the modelroots", "target": 0}
{"idx": 32684, "func": "End interface GUISettingsTabInterface", "target": 0}
{"idx": 32685, "func": "The name. Width is the same as the cover, height is the default. The text of the name will be centered by default. In the same place as the stereotype, since at this stage the stereotype is not displayed. Being a classifier role it is underlined", "target": 0}
{"idx": 32686, "func": "// viewer.addInternalFrameListener(_lis);", "target": 0}
{"idx": 32687, "func": "HORIZONTAL TABULATION U+0009", "target": 0}
{"idx": 32688, "func": "There is a better way to save the context. This shouldn't delegate to next, it's for backward compatibility only.", "target": 1}
{"idx": 32689, "func": "//ETypedElement", "target": 0}
{"idx": 32690, "func": "getfield old value of the field", "target": 0}
{"idx": 32691, "func": "target method is NOT addSuperInterface", "target": 0}
{"idx": 32692, "func": "//{{{ indentSelectedLines() method", "target": 0}
{"idx": 32693, "func": "set the Quaqua Look and Feel in the UIManager", "target": 0}
{"idx": 32694, "func": "extend range backward", "target": 0}
{"idx": 32695, "func": "//operations which cascade as far as the collection also cascade to collection elements", "target": 0}
{"idx": 32696, "func": "apply <<profile>> stereotype to make it a \"profile\" (our convention) (hack: create that stereotype instead using the UML 1.4 profile)", "target": 1}
{"idx": 32697, "func": "TODO should this set the thread names for all the subsamples? might be more efficient than fetching the name elsewehere", "target": 1}
{"idx": 32698, "func": "0250..02AF;", "target": 0}
{"idx": 32699, "func": "//TODO add tests for SaveGraphics", "target": 1}
{"idx": 32700, "func": "(non-Javadoc) @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)", "target": 0}
{"idx": 32701, "func": "if creation failed", "target": 0}
{"idx": 32702, "func": "@see org.argouml.model.AbstractModelEventPump#addModelEventListener(java.beans.PropertyChangeListener, java.lang.Object)", "target": 0}
{"idx": 32703, "func": "limit the methods available if no transaction is active", "target": 0}
{"idx": 32704, "func": "selected folder", "target": 0}
{"idx": 32705, "func": "//collapsible.getContentPane().setBackground(Color.WHITE);", "target": 0}
{"idx": 32706, "func": "Although the lock appears to be an instance lock, in fact the lock is shared between all threads in a thread group, but different thread groups have different locks - see the clone() method below The lock ensures that all the variables are processed together, which is important for functions such as __CSVRead and _StringFromFile.", "target": 0}
{"idx": 32707, "func": "(non-Javadoc) @see java.io.InputStream#read(byte[], int, int)", "target": 0}
{"idx": 32708, "func": "//crossJoins.add(name);", "target": 0}
{"idx": 32709, "func": "marker interface only", "target": 0}
{"idx": 32710, "func": "put a warning if tika-app.jar missing (or some dependencies in only tika-core|parsers packages are using) $NON-NLS-1$ $NON-NLS-2$", "target": 0}
{"idx": 32711, "func": "We have a 3rd parameter", "target": 0}
{"idx": 32712, "func": "FIXME: This worries me a bit, since it could allocate a lot with a large newLength", "target": 1}
{"idx": 32713, "func": "And the arguments:", "target": 0}
{"idx": 32714, "func": "20030614, karlpeder only enabled when message(s) selected", "target": 0}
{"idx": 32715, "func": "2. Make sure that all Figs are visible", "target": 0}
{"idx": 32716, "func": "Check for digit", "target": 0}
{"idx": 32717, "func": "collapsed", "target": 0}
{"idx": 32718, "func": "//quick & dirty, to make nested mapped p-sets work:", "target": 1}
{"idx": 32719, "func": "no attributes to read", "target": 0}
{"idx": 32720, "func": "current timestamp support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 32721, "func": "use the id value of a newly instantiated instance as the unsaved-value", "target": 0}
{"idx": 32722, "func": "return \"parsing.help.fig-association-end-name\";", "target": 0}
{"idx": 32723, "func": "we are capturing output Default charset is probably appropriate here.", "target": 0}
{"idx": 32724, "func": "Deactivate the glass pane capabilities", "target": 0}
{"idx": 32725, "func": "Third Run third call should get only those files, which CONTENT changed (no timestamp changes required!)", "target": 0}
{"idx": 32726, "func": "//throw new UnsupportedOperationException(\"Can't write to a readonly object\");", "target": 0}
{"idx": 32727, "func": "spanning match", "target": 0}
{"idx": 32728, "func": "//{{{ getSelectionEndLine() method", "target": 0}
{"idx": 32729, "func": "orphans should not be deleted during merge??", "target": 1}
{"idx": 32730, "func": "If the first identifier in the path referrs to the class alias (not the class name), then this is a correlated subselect. If it's a correlated sub-select, use the existing table alias. Otherwise generate a new one.", "target": 0}
{"idx": 32731, "func": "pw.close();", "target": 0}
{"idx": 32732, "func": "TODO - is this needed?", "target": 1}
{"idx": 32733, "func": "when the x-values are descending, the upper bound is found by comparing against xLow", "target": 0}
{"idx": 32734, "func": "attributed label...", "target": 0}
{"idx": 32735, "func": "Test for path relative to project base directory", "target": 0}
{"idx": 32736, "func": "@see org.argouml.uml.cognitive.critics.UMLWizard#setSuggestion(java.lang.String)", "target": 0}
{"idx": 32737, "func": "i18n[oracle.displaySessionStatistics=Display database session statistics]", "target": 0}
{"idx": 32738, "func": "bench straight-up long fib(30)", "target": 0}
{"idx": 32739, "func": "the outerJoinsAfterWhere needs to come before where clause to properly handle dynamic filters", "target": 0}
{"idx": 32740, "func": "Assumption: tail is never a list node", "target": 0}
{"idx": 32741, "func": "selectors are implicitly ANDed in DirectoryScanner. To revert their logic we wrap them into a <none> selector instead.", "target": 0}
{"idx": 32742, "func": "(non-Javadoc) @see org.apache.jmeter.testelement.TestStateListener#testStarted(java.lang.String)", "target": 0}
{"idx": 32743, "func": "(non-Javadoc) @see org.eclipse.emf.ecore.util.ExtendedMetaData#getType(org.eclipse.emf.ecore.EPackage, java.lang.String)", "target": 0}
{"idx": 32744, "func": "line 1363", "target": 0}
{"idx": 32745, "func": "preserves old behaviour", "target": 0}
{"idx": 32746, "func": "//{{{ performOperationsInWorkThread() method", "target": 0}
{"idx": 32747, "func": "//And the version of the calling program. //This is optional. If you don't want to give out this info, please enter \"N/A\"", "target": 0}
{"idx": 32748, "func": "EATM Leave this disabled for now. //", "target": 0}
{"idx": 32749, "func": "Find the delimiter.", "target": 0}
{"idx": 32750, "func": "Handle remove for non-UML elements (e.g. diagrams)", "target": 0}
{"idx": 32751, "func": "-- Filesystem interface --", "target": 0}
{"idx": 32752, "func": "//\"\" is not the same as no realm", "target": 0}
{"idx": 32753, "func": "get the widest of all textfigs calculate the total height", "target": 0}
{"idx": 32754, "func": "i18n[oracle.displaySnstanceDetails=Display instance details]", "target": 0}
{"idx": 32755, "func": "retrieve method module name", "target": 0}
{"idx": 32756, "func": "i18n[mssql.allViews=All views]", "target": 0}
{"idx": 32757, "func": "i18n[TableExportCsvDlg.formatXLS=Export MS Excel (XLS) file]", "target": 0}
{"idx": 32758, "func": "Class is found in specified classpath", "target": 0}
{"idx": 32759, "func": "Returns true if the given value is an archive scheme, as defined by the org.eclipse.emf.common.util.URI.archiveSchemes system property. By default, \"jar\", \"zip\", and \"archive\" are considered archives.", "target": 0}
{"idx": 32760, "func": "The renderer should be a singleton", "target": 0}
{"idx": 32761, "func": "We do not want to diagnose any error that have already been diagnosed by a super type. //", "target": 0}
{"idx": 32762, "func": "Done this late so that plugins have time to register expanders with the object tree prior to it being built. // getSession().getObjectTreeAPI(_app.getDummyAppPlugin()).refreshTree();", "target": 0}
{"idx": 32763, "func": "//{{{ setFoldColor() method", "target": 0}
{"idx": 32764, "func": "Add body of message to print", "target": 0}
{"idx": 32765, "func": "ignore last character of path to properly handle paths like /foo/bar/", "target": 0}
{"idx": 32766, "func": "add the interval as an exception", "target": 0}
{"idx": 32767, "func": "keep them sorted", "target": 0}
{"idx": 32768, "func": "Create the PropertyFile", "target": 0}
{"idx": 32769, "func": "EMF.Editor generation //", "target": 0}
{"idx": 32770, "func": "todo : currently expects that the individual with expressions apply to the same sql table join. This may not be the case for joined-subclass where the property values might be coming from different tables in the joined hierarchy. At some point we should expand this to support that capability. However, that has some difficulties: 1) the biggest is how to handle ORs when the individual comparisons are linked to different sql joins. 2) here we would need to track each comparison individually, along with the join alias to which it applies and then pass that information back to the FromElement so it can pass it along to the JoinSequence", "target": 1}
{"idx": 32771, "func": "Create an empty but initialized instance of a UML AssociationEnd. @return an initialized UML AssociationEnd instance. TODO: This needs an extra parameter to specify the model/extent where the new element should be created.", "target": 1}
{"idx": 32772, "func": "//{{{ RunRequestsInAWTThread class", "target": 0}
{"idx": 32773, "func": "position variable for pattern test position", "target": 0}
{"idx": 32774, "func": "//rangeGridlinePaint;", "target": 0}
{"idx": 32775, "func": "Check whether this has @model annotation contents. If not, it might be a package interface, for backwards compatibility. //", "target": 0}
{"idx": 32776, "func": "FIXME: Make bodyNode non-null in parser", "target": 1}
{"idx": 32777, "func": "process the sampler result", "target": 0}
{"idx": 32778, "func": "TODO: Why do I need to do this?", "target": 1}
{"idx": 32779, "func": "write a OK reponse to browser, to engage SSL exchange $NON-NLS-1$", "target": 0}
{"idx": 32780, "func": "If we haven't yet encrypted or decrypted, generate a key. This key will only be used for encryption. Decryption keys are always derived from the header of the input stream itself.", "target": 0}
{"idx": 32781, "func": "Backup on every save", "target": 0}
{"idx": 32782, "func": "If only default is specified and the property did not exist in the property file, the property is set to default.", "target": 0}
{"idx": 32783, "func": "//{{{ PaintText class", "target": 0}
{"idx": 32784, "func": "//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$", "target": 0}
{"idx": 32785, "func": "Constants for the entity type. //", "target": 0}
{"idx": 32786, "func": "else this is not a collection initializer (and empty collections will be detected by looking for the owner's identifier in the result set)", "target": 0}
{"idx": 32787, "func": "//in verbose mode we always log stuff", "target": 0}
{"idx": 32788, "func": "// private final static ILogger s_log = // LoggerController.createLogger(AlterTableDialog.class);", "target": 0}
{"idx": 32789, "func": "This is somewhat inconsistent with the design of the constructor that receives the root object by argument. If this is okay then there may be no need for a constructor with that argument.", "target": 0}
{"idx": 32790, "func": "end class StylePanelFigUseCase", "target": 0}
{"idx": 32791, "func": "i18n[RefactoringPreferencesPanel.quoteToolTip=Identifiers appear in quotes]", "target": 0}
{"idx": 32792, "func": "i18n[I18n.bundles=Bundles]", "target": 0}
{"idx": 32793, "func": "If we aren't simply removing all the old values... //", "target": 0}
{"idx": 32794, "func": "//Add session ended listener -- needs for Embedded Derby DB", "target": 0}
{"idx": 32795, "func": "NONE / NONE", "target": 0}
{"idx": 32796, "func": "fragments.addElement(value.substring(pos + 1, pos + 2)); prev = pos + 2;", "target": 0}
{"idx": 32797, "func": "Needs to be accessible by HTTPSampler2", "target": 0}
{"idx": 32798, "func": "calculate the step point", "target": 0}
{"idx": 32799, "func": "TODO: This should not be an instance variable. It should just be created and discarded as needed.", "target": 1}
{"idx": 32800, "func": "Update server port", "target": 0}
{"idx": 32801, "func": "usermanager of jaybird", "target": 0}
{"idx": 32802, "func": "select nodes", "target": 0}
{"idx": 32803, "func": "(non-Javadoc) @see org.columba.core.print.cParagraph#print(java.awt.Graphics2D)", "target": 0}
{"idx": 32804, "func": "if we are the destination of a create action, create the entire activation", "target": 0}
{"idx": 32805, "func": "the URI is not a valid 'file:' URI", "target": 0}
{"idx": 32806, "func": "---- otherPOBoxLabel ----", "target": 0}
{"idx": 32807, "func": "i18n[CancelStatementThread.cancelSucceeded=The database has been asked to cancel the statment.]", "target": 0}
{"idx": 32808, "func": "last mod file date", "target": 0}
{"idx": 32809, "func": "try as an alias", "target": 0}
{"idx": 32810, "func": "starts at the front, finishes at the back (going around the left side)", "target": 0}
{"idx": 32811, "func": "Protected EditorDelegate class //", "target": 0}
{"idx": 32812, "func": "TODO: Hold lock for entire recursive traversal?", "target": 1}
{"idx": 32813, "func": "i18n[generalSessionPropertiesPanel.sqlResults=SQL Results:]", "target": 0}
{"idx": 32814, "func": "for AndroMDA", "target": 0}
{"idx": 32815, "func": "TODO: Allow adding models to a diagram - issue 4172.", "target": 1}
{"idx": 32816, "func": "//{{{ Range class", "target": 0}
{"idx": 32817, "func": "For RemoveCommand, we will find the owner by calling EditingDomain.getParent() on the object(s) being removed. //", "target": 0}
{"idx": 32818, "func": "The value of 1 is for Socket::AI_PASSIVE.", "target": 0}
{"idx": 32819, "func": "Test TestElements - implement the test case", "target": 0}
{"idx": 32820, "func": "small icon for menu //putValue(SMALL_ICON, ImageLoader.getSmallImageIcon(\"16_sign.png\"));", "target": 0}
{"idx": 32821, "func": "//then add the Apt options", "target": 0}
{"idx": 32822, "func": "location", "target": 0}
{"idx": 32823, "func": "insert line break if there is non-whitespace before end of the line", "target": 0}
{"idx": 32824, "func": "On Win 2000 & XP mnemonics are normally hidden. To make them visible you press the alt key. Under the Windows L&F pressing alt may not work. This code is a workaround. See bug report 4736093 for more information.", "target": 1}
{"idx": 32825, "func": "to rupdate the diagram set the stimulus name again TODO: Explain that this really works also in the MDR case. Linus is a sceptic.", "target": 0}
{"idx": 32826, "func": "didn't find a line that contains non-whitespace chars so return index of prior whitespace line", "target": 0}
{"idx": 32827, "func": "Replace the file's extension with '.java'", "target": 0}
{"idx": 32828, "func": "mark the node to be removed", "target": 0}
{"idx": 32829, "func": "ITEM_LABEL_FONT", "target": 0}
{"idx": 32830, "func": "mappings might contain either the \"raw\" extends name (in the case of an entity-name mapping) or a FQN (in the case of a POJO mapping).", "target": 0}
{"idx": 32831, "func": "i18n[mssql.allUserDef=All user-defined data types]", "target": 0}
{"idx": 32832, "func": "mark message as spam", "target": 0}
{"idx": 32833, "func": "aload_1 load callback", "target": 0}
{"idx": 32834, "func": "i18n[ImportFileDialog.suggestColumns=Suggest columns (find matching columns)]", "target": 0}
{"idx": 32835, "func": "HADB reports \"10\" for column size of BLOB/CLOB 2GB (2^32)", "target": 0}
{"idx": 32836, "func": "3000..303F;", "target": 0}
{"idx": 32837, "func": "TODO: pass this in?", "target": 1}
{"idx": 32838, "func": "Define the annotation for the method", "target": 0}
{"idx": 32839, "func": "Don't bother complaining about things with no name, since there are constraints for that problem. //", "target": 0}
{"idx": 32840, "func": "Add the token to the AST.", "target": 0}
{"idx": 32841, "func": "ZERO-OR-ONE REPEAT OPERATOR / STINGY MATCHING OPERATOR ? | \\? depending on RE_BK_PLUS_QM not available if RE_LIMITED_OPS is set stingy matching if RE_STINGY_OPS is set and it follows a quantifier", "target": 0}
{"idx": 32842, "func": "I18n[oracle.dbOutputTitle=Oracle DB output for: {0}]", "target": 0}
{"idx": 32843, "func": "If we want to handle it bidirectional and detached, we also need to load this collection with an eager outer-join fetch, this time with Criteria and not HQL:", "target": 0}
{"idx": 32844, "func": "//{{{ initKeyBindings() method", "target": 0}
{"idx": 32845, "func": "Missing WFRs", "target": 0}
{"idx": 32846, "func": "get color from factory ->factory shares color objects to save memory", "target": 0}
{"idx": 32847, "func": "TODO: set our metaclass to target's class (i.e. scary!)", "target": 1}
{"idx": 32848, "func": "//$NON-NLS-1$ default: bottom //$NON-NLS-1$", "target": 0}
{"idx": 32849, "func": "Process personal namespaces", "target": 0}
{"idx": 32850, "func": "no concrete subclasses defined, this class is \"useless\"", "target": 0}
{"idx": 32851, "func": "//{{{ Add some event listeners", "target": 0}
{"idx": 32852, "func": "Not synch, but it is not modified after creation", "target": 0}
{"idx": 32853, "func": "try to read the dependency info from the map if it is not out of date", "target": 0}
{"idx": 32854, "func": "//do some writing to it", "target": 0}
{"idx": 32855, "func": "Object getImportedPackage(Object element);", "target": 0}
{"idx": 32856, "func": "//{{{ setFlag() method", "target": 0}
{"idx": 32857, "func": "//i18n[parserthread.undefinedTable=undefined table]", "target": 0}
{"idx": 32858, "func": "//{{{ _addToSelection() method", "target": 0}
{"idx": 32859, "func": "value is truncated, so do not use in WHERE clause", "target": 0}
{"idx": 32860, "func": "Not all Oracle's, just 10g and above.", "target": 0}
{"idx": 32861, "func": "description Panel", "target": 0}
{"idx": 32862, "func": "just ignore it for now, it'll get resolved later...", "target": 0}
{"idx": 32863, "func": "Define file format versions $NON-NLS-1$", "target": 0}
{"idx": 32864, "func": "@see tudresden.ocl.parser.analysis.DepthFirstAdapter#outARealLiteral(tudresden.ocl.parser.node.ARealLiteral)", "target": 0}
{"idx": 32865, "func": "delete the single file", "target": 0}
{"idx": 32866, "func": "Define a class loader that looks up classes using the URLs or the parent class loader, and failing those, tries to look up the class in each bundle in the running JVM. //", "target": 0}
{"idx": 32867, "func": "Update attached node figures TODO: Presumably this should only happen on a add or remove event", "target": 1}
{"idx": 32868, "func": "There's not a compelling reason to keep JavaClass instances in a weak map (any proxies created are [were] kept in a non-weak map, so in most cases they will stick around anyway), and some good reasons not to (JavaClass creation is expensive, for one; many lookups are performed when passing parameters to/from methods; etc.). TODO: faster custom concurrent map", "target": 1}
{"idx": 32869, "func": "recreate name of menuitem", "target": 0}
{"idx": 32870, "func": "save current location statically for next time", "target": 0}
{"idx": 32871, "func": "this works because all the IDatabaseObjectInfo objects come from the same source, so their references are equal.", "target": 0}
{"idx": 32872, "func": "Overwrite DefaultHandler methods //", "target": 0}
{"idx": 32873, "func": "//{{{ goToPrevLine() method", "target": 0}
{"idx": 32874, "func": "check the next two characters", "target": 0}
{"idx": 32875, "func": "here, we work under the following assumptions: ------------ valid cases -------------------------------------- 1) datetime + {something other than datetime} : always results in a datetime ( db will catch invalid conversions ) 2) datetime - datetime : always results in a DOUBLE 3) datetime - {something other than datetime} : always results in a datetime ( db will catch invalid conversions ) ------------ invalid cases ------------------------------------ 4) datetime + datetime 5) {something other than datetime} - datetime 6) datetime {any type} 7) datetime / {any type} 8) {any type} / datetime doing so allows us to properly handle parameters as either the left or right side here in the majority of cases", "target": 0}
{"idx": 32876, "func": "line 956", "target": 0}
{"idx": 32877, "func": "do nothing if item is not visible or null", "target": 0}
{"idx": 32878, "func": "Fails on DB2 8.1 for Linux However, Windows 8.1 fixpak 14 driver (2.10.52) works without exception Also, Linux 9.0.1 server with 3.1.57 driver works fine as well", "target": 1}
{"idx": 32879, "func": "log.info(\"testOtherPrevOK\");", "target": 0}
{"idx": 32880, "func": "//axis.setRangeType(RangeType.POSITIVE); //axis.setLowerBound(-5.0); //assertEquals(0.0, axis.getLowerBound(), EPSILON);", "target": 0}
{"idx": 32881, "func": "If data can be < 0, the next 2 methods should be modified", "target": 0}
{"idx": 32882, "func": "Size to set child windows to.", "target": 0}
{"idx": 32883, "func": "//{{{ globToRE() method", "target": 0}
{"idx": 32884, "func": "TODO: This first loop just to count the items appears redundant to me - tfm 20070630", "target": 1}
{"idx": 32885, "func": "SSS FIXME: Is this correctly placed ... at the end of the loop iteration?", "target": 1}
{"idx": 32886, "func": "CREATE [UNIQUE|FULLTEXT|SPATIAL] INDEX index_name [index_type] ON tbl_name (index_col_name,...) index_col_name: col_name [(length)] [ASC | DESC] // index_type: USING {BTREE | HASH} Note; indexType is unused at the moment because the index dialog doesn't accept this. See below.", "target": 0}
{"idx": 32887, "func": "//finally invoke APT Use reflection to be able to build on all JDKs:", "target": 0}
{"idx": 32888, "func": "TODO: list.subList(from, to).clear() is supposed to clear the sublist from the list. How can we support this operation?", "target": 1}
{"idx": 32889, "func": "//TreeSwitch", "target": 0}
{"idx": 32890, "func": "Evaluate our prefix if it needs evaluating first. If this is the first evaluation our prefix mayb be a Node (directly from the PrimaryPrefix) - eval() it to an object. If it's an LHS, resolve to a value. Note: The ambiguous name construct is now necessary where the node may be an ambiguous name. If this becomes common we might want to make a static method nodeToObject() or something. The point is that we can't just eval() - we need to direct the evaluation to the context sensitive type of result; namely object, class, etc.", "target": 0}
{"idx": 32891, "func": "based on defaults from DB, get the default object instance for each column", "target": 0}
{"idx": 32892, "func": "??? bad to have release hardocoded here. Fix later...right.", "target": 1}
{"idx": 32893, "func": "JRMP with simple naming convention", "target": 0}
{"idx": 32894, "func": "duplicate equal to add, so we continue", "target": 0}
{"idx": 32895, "func": "applets can't see sys props", "target": 0}
{"idx": 32896, "func": "Defaults to empty;", "target": 0}
{"idx": 32897, "func": "don't override update(), get the default clear", "target": 0}
{"idx": 32898, "func": "FIXME: calculate xx0", "target": 0}
{"idx": 32899, "func": "fetch listeners from local storage", "target": 0}
{"idx": 32900, "func": "line 1489", "target": 0}
{"idx": 32901, "func": "Check if target of merge is reasonable", "target": 0}
{"idx": 32902, "func": "Oracle SQL", "target": 0}
{"idx": 32903, "func": "this is the second pass through on a merge op, so here we limit the replacement to associations types (value types were already replaced during the first pass)", "target": 0}
{"idx": 32904, "func": "verify t belongs to the curve (range [0, _m-1])", "target": 0}
{"idx": 32905, "func": "escaped unicode form", "target": 0}
{"idx": 32906, "func": "Initial v - the reciprocal v0 = 1/(2x)", "target": 0}
{"idx": 32907, "func": "put a description of the field in the following rows", "target": 0}
{"idx": 32908, "func": "null or brand new collection this will also (inefficiently) handle arrays, which have no snapshot, so we can't do any better", "target": 1}
{"idx": 32909, "func": "Do this first for better error message during setEParameterProperties. //", "target": 0}
{"idx": 32910, "func": "ask user to kill pending running commands or wait", "target": 0}
{"idx": 32911, "func": "reverse the entire area of the array selected if it's reversed.", "target": 0}
{"idx": 32912, "func": "Java.getProxyClass deals with sync issues, so we won't duplicate the logic here", "target": 0}
{"idx": 32913, "func": "Remember what handle was clicked for the case where the drag is released over empty space", "target": 0}
{"idx": 32914, "func": "XXX actually only on windows...", "target": 1}
{"idx": 32915, "func": "make sure the test annotation are accepted", "target": 0}
{"idx": 32916, "func": "At least one recent file menu item is visible", "target": 0}
{"idx": 32917, "func": "Implements JMeterGuiComponent.modifyTestElement(TestElement)", "target": 0}
{"idx": 32918, "func": "collectionPersister should not be null, but we don't want to throw an exception if it is null", "target": 0}
{"idx": 32919, "func": "//assume Unix or Linux", "target": 0}
{"idx": 32920, "func": "datasetToRangeAxisMap...", "target": 0}
{"idx": 32921, "func": "not a comment subexpression", "target": 0}
{"idx": 32922, "func": "Foreground color", "target": 0}
{"idx": 32923, "func": "Keep a record of the pre-thread pools so that they can be disposed of at the end of a test", "target": 0}
{"idx": 32924, "func": "i18n[DataSetUpdateableTableModelImpl.error.retrievingdefaultvalues=Error retrieving default column values]", "target": 0}
{"idx": 32925, "func": "//FILL PAINT /////////////////////////////////////////////////////////", "target": 0}
{"idx": 32926, "func": "TODO some more invalid sequence tests needed", "target": 1}
{"idx": 32927, "func": "Map to EClass, EEnum or EInerface. Note that we do not map structure and primitive type class. //", "target": 0}
{"idx": 32928, "func": "Get the sampler ready to sample", "target": 0}
{"idx": 32929, "func": "If we don't have a previous cached command... //", "target": 0}
{"idx": 32930, "func": "now update the class.path property", "target": 0}
{"idx": 32931, "func": "during deserialization, we need to reconnect all proxies and collections to this session, as well as the EntityEntry and CollectionEntry instances; these associations are transient because serialization is used for different things.", "target": 0}
{"idx": 32932, "func": "end class StandardCM", "target": 0}
{"idx": 32933, "func": "//{{{ MutableCaretEvent constructor", "target": 0}
{"idx": 32934, "func": "Generate code to invoke the ClassGeneratorUtil initInstance() method", "target": 0}
{"idx": 32935, "func": "initTagValsTab(); tabs.addTab(Translator.localize(\"dialog.find.tab.tagged-values\"), tagValsTab); tabs.setEnabledAt(2, false);", "target": 0}
{"idx": 32936, "func": "Implementation Note: Unlike many of the interfaces to the model there is no control to force a single instance of an XmiReader. This is to allow work objects generated by the implementation to be garbage collected when an XmiReader instance falls out of scope.", "target": 0}
{"idx": 32937, "func": "FIXME: for some reason this dispatcher causes a VerifyError... //classClass.dispatcher = callbackFactory.createDispatcher(classClass);", "target": 1}
{"idx": 32938, "func": "If we could not find the method, store the exception here", "target": 0}
{"idx": 32939, "func": "FIXME: add setBaseItemLabelFont(Font, boolean) ?", "target": 0}
{"idx": 32940, "func": "line 833", "target": 0}
{"idx": 32941, "func": "form feed", "target": 0}
{"idx": 32942, "func": "if text cannot be edited in the cell but can be edited in // the popup, show that by changing the text colors.", "target": 0}
{"idx": 32943, "func": "@see java.awt.dnd.DropTargetListener#dropActionChanged( java.awt.dnd.DropTargetDragEvent)", "target": 0}
{"idx": 32944, "func": "//i18n[ColumnDetailsDialog.tableNameLabel=Table Name: ]", "target": 0}
{"idx": 32945, "func": "//couldnt use the xerces or jaxp calls", "target": 0}
{"idx": 32946, "func": "Wrap the defaults in our custom trust manager", "target": 0}
{"idx": 32947, "func": "TODO: Distinguish between deferred resolution and things which are unresolved at end of load and should be reported to user.", "target": 1}
{"idx": 32948, "func": "for now just swallow the exception", "target": 0}
{"idx": 32949, "func": "i'th argument", "target": 0}
{"idx": 32950, "func": "Only create this if we are overriding whatever default there may be If there are no arguments, we can send a file as the body of the request", "target": 0}
{"idx": 32951, "func": "save first", "target": 0}
{"idx": 32952, "func": "Check if a create of this property is already present add takes preference over create for CB purposes", "target": 0}
{"idx": 32953, "func": "////////////////////////////Getters for plugin modules: //////////////////////////////", "target": 0}
{"idx": 32954, "func": "NOTE: we need to do the wrap here even if its not \"dirty\", because collections need wrapping but changes to _them_ don't dirty the container. Also, for versioned data, we need to wrap before calling searchForDirtyCollections", "target": 0}
{"idx": 32955, "func": "This should not happen with checkOnly true", "target": 0}
{"idx": 32956, "func": "left == default case", "target": 0}
{"idx": 32957, "func": "TODO: What are these magic numbers?", "target": 1}
{"idx": 32958, "func": "reponse code doesn't really apply, since the soap driver doesn't provide a response code", "target": 0}
{"idx": 32959, "func": "actual value set below", "target": 0}
{"idx": 32960, "func": "TODO downcase UPPER case non-final variables", "target": 1}
{"idx": 32961, "func": "The figure that holds the text of the note.", "target": 0}
{"idx": 32962, "func": "give ourselves some time for the system call to execute... tweak if you have a really over loaded system.", "target": 0}
{"idx": 32963, "func": "propagate", "target": 0}
{"idx": 32964, "func": "//Method 1: //(collect data and assign later in endElement() method). //Hashtable<String, String> ht = new Hashtable<String, String>(); //ht.put(\"classname\", classname); //ht.put(\"figclassname\", figclassname); //ht.put(\"ownerhref\", ownerhref); //ht.put(\"angle\", angle); //ht.put(\"offset\", offset); //pathItemAttrs.add(ht);", "target": 0}
{"idx": 32965, "func": "need to change selection Set ignore flag", "target": 0}
{"idx": 32966, "func": "test if both grahphs have a vertical rise at the same x-value", "target": 0}
{"idx": 32967, "func": "//{{{ getLineParenWeight() method", "target": 0}
{"idx": 32968, "func": "Tainting here if we ever want it. (secure 4)", "target": 0}
{"idx": 32969, "func": "Name & stereotypes get updated by superclass", "target": 0}
{"idx": 32970, "func": "&& e.getX() >= getWidth() - borderWidth 2", "target": 0}
{"idx": 32971, "func": "FIXME //this.image = SerialUtilities.readImage(stream);", "target": 0}
{"idx": 32972, "func": "//private JLabel enableTextIndexingLabel;", "target": 0}
{"idx": 32973, "func": "Get a WrapperEditor to provide the field or combo -- we'll delegate most methods to it:", "target": 0}
{"idx": 32974, "func": "Test https works too", "target": 0}
{"idx": 32975, "func": "//{{{ prevTextArea() method", "target": 0}
{"idx": 32976, "func": "//i18n[VersionColumnsTab.hint=Show columns that are automatically //updated when the row is updated]", "target": 0}
{"idx": 32977, "func": "Assume this thread only 1 per second Should delay for 1 second 1 per milli-second Should delay for 1 milli-second", "target": 0}
{"idx": 32978, "func": "Multi select", "target": 0}
{"idx": 32979, "func": "(non-Javadoc) @see org.eclipse.emf.mapping.action.AddRootBottomAction#getBottomsToAdd()", "target": 0}
{"idx": 32980, "func": "for backwards compatibility", "target": 0}
{"idx": 32981, "func": "test for searching parents", "target": 0}
{"idx": 32982, "func": "//no need to check laziness, dirty checking handles that", "target": 0}
{"idx": 32983, "func": "//sometimes there's \"info1:", "target": 0}
{"idx": 32984, "func": "This depends on the class or invokee and either args or types; it is set once by doCreateMethod(), which must be the only method to access it.", "target": 0}
{"idx": 32985, "func": "This is a rather hairy case. One of our subclasses knows that we need to update the archive, but at the same time, there are no resources known to us that would need to be added. Only the subclass seems to know what's going on. This happens if <jar> detects that the manifest has changed, for example. The manifest is not part of any resources because of our support for inline <manifest>s. If we invoke createEmptyZip like Ant 1.5.2 did, we'll loose all stuff that has been in the original archive (bugzilla report 17780).", "target": 1}
{"idx": 32986, "func": "line 1424", "target": 0}
{"idx": 32987, "func": "no need to specify the port if it is the default", "target": 0}
{"idx": 32988, "func": "Pick up Actual path (after redirects)", "target": 0}
{"idx": 32989, "func": "TODO: Why isn't this done in save?", "target": 1}
{"idx": 32990, "func": "(MStateVertex)", "target": 0}
{"idx": 32991, "func": "milliseconds somewhere in 2006", "target": 0}
{"idx": 32992, "func": "this method must be overridden if you want to display images", "target": 0}
{"idx": 32993, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getTypeInfo() @deprecated Replaced by getDataTypes", "target": 0}
{"idx": 32994, "func": "Java on Mac OS can add a second entry to the initial classpath $NON-NLS-1$", "target": 0}
{"idx": 32995, "func": "the class is in the diagram so we are on a second pass, find the fig for this class can update its visible state.", "target": 0}
{"idx": 32996, "func": "Channel that provides stable release updates", "target": 0}
{"idx": 32997, "func": "small icon for JMenuItem", "target": 0}
{"idx": 32998, "func": "skip this message, if it doesn't exist in source folder", "target": 0}
{"idx": 32999, "func": "string given", "target": 0}
{"idx": 33000, "func": "b_lmonth.setFocusPainted(false); b_lmonth.setOpaque(false); b_lmonth.addActionListener(this);", "target": 0}
{"idx": 33001, "func": "//build table of Pf values", "target": 0}
{"idx": 33002, "func": "private TreeView treeViewer;", "target": 0}
{"idx": 33003, "func": "Since dialect doesn't support altering sequences, drop then re-create.", "target": 0}
{"idx": 33004, "func": "Note: position of these elements in the menu must match the corresponding ProxyControl.GROUPING_ values. $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$", "target": 0}
{"idx": 33005, "func": "//{{{ updateStructureHighlight() method", "target": 0}
{"idx": 33006, "func": "'itemLabelsVisible' : immutable, no need to clone reference", "target": 0}
{"idx": 33007, "func": "line 1369", "target": 0}
{"idx": 33008, "func": "i18n[HibernateSQLPanel.appendSql=Append]", "target": 0}
{"idx": 33009, "func": "= elapsed", "target": 0}
{"idx": 33010, "func": "Association", "target": 0}
{"idx": 33011, "func": "replace with the modified classpath", "target": 0}
{"idx": 33012, "func": "line 1532", "target": 0}
{"idx": 33013, "func": "skip if message is not marked as spam", "target": 0}
{"idx": 33014, "func": "select the menu item corresponding to present format", "target": 0}
{"idx": 33015, "func": "Fire ActionEvent", "target": 0}
{"idx": 33016, "func": "According to both the ANSI-SQL and JPA specs, trim takes a variable number of parameters between 1 and 4. at least one paramer (trimSource) is required. From the SQL spec: <trim function> ::= TRIM <left paren> <trim operands> <right paren> <trim operands> ::= [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> <trim specification> ::= LEADING | TRAILING | BOTH If <trim specification> is omitted, BOTH is assumed. If <trim character> is omitted, space is assumed", "target": 0}
{"idx": 33017, "func": "An interface should be abstract, but this makes sure of that fact. //", "target": 0}
{"idx": 33018, "func": "substract the uids that we already downloaded -> newUids contains all uids to fetch from the server", "target": 0}
{"idx": 33019, "func": "url decode", "target": 0}
{"idx": 33020, "func": "TODO: Update setting", "target": 0}
{"idx": 33021, "func": "@see org.argouml.uml.diagram.layout.Layouter#getObject(int)", "target": 0}
{"idx": 33022, "func": "set up the list of column names and the data for the rows", "target": 0}
{"idx": 33023, "func": "Maintain a list of classifiers for looking up conflicts. //", "target": 0}
{"idx": 33024, "func": "construct a BeanShell snippet instead of invoking directly so that user can record property changes in macros.", "target": 0}
{"idx": 33025, "func": "Must agree with the order of entries in the drop-down created in ProxyControlGui.createGroupingPanel() //private static final int GROUPING_NO_GROUPS = 0;", "target": 0}
{"idx": 33026, "func": "update", "target": 0}
{"idx": 33027, "func": "private static final int ATTR_UNDERLINE = 3; private static final int ATTR_BLINK = 5; private static final int ATTR_REVERSE = 7; private static final int ATTR_HIDDEN = 8;", "target": 0}
{"idx": 33028, "func": "The keyword fig already exists.", "target": 0}
{"idx": 33029, "func": "There is no good way using JDBC metadata to tell if the table is a materialized view. So, we need to query the data dictionary to find that out. Get all table names whose comment indicates that they are a materialized view.", "target": 0}
{"idx": 33030, "func": "\"server\" \"port\" \"database file\" \"backup file\"", "target": 0}
{"idx": 33031, "func": "finally, grab the script", "target": 0}
{"idx": 33032, "func": "//Get all the data types available", "target": 0}
{"idx": 33033, "func": "deal with case when \"other\" is not a string", "target": 0}
{"idx": 33034, "func": "get notified if search result arrived, to update view", "target": 0}
{"idx": 33035, "func": "this node is category folder -> don't make it editable", "target": 0}
{"idx": 33036, "func": "------------------------------------------------------------------------ Methods implemented from interface org.apache.jmeter.config.Modifier ------------------------------------------------------------------------", "target": 0}
{"idx": 33037, "func": "//cant instantiate", "target": 0}
{"idx": 33038, "func": "will revert to last valid value if invalid", "target": 0}
{"idx": 33039, "func": "collect the to be removed stereotypes", "target": 0}
{"idx": 33040, "func": "line 1085", "target": 0}
{"idx": 33041, "func": "If there is no sqlPanelAPI (e.g. the Object tree find editor) we assume no parser is necessary and thus provide a dummy impl.", "target": 0}
{"idx": 33042, "func": "(NOT (IS_NOT_NULL a b) ) => (IS_NULL a b)", "target": 0}
{"idx": 33043, "func": "Mark all files which should be selected as (T)rue and all others as (F)alse. Directories are always selected so they always are (T)rue.", "target": 0}
{"idx": 33044, "func": "i18n[StringFunctionsTab.title=String Functions]", "target": 0}
{"idx": 33045, "func": "Simple (non-compound) variable assignment e.g. x=5;", "target": 0}
{"idx": 33046, "func": "we have a single character; could be a token it is a token", "target": 0}
{"idx": 33047, "func": "look for Objects", "target": 0}
{"idx": 33048, "func": "If location of ss.ini is specified we need to set the environment-variable SSDIR to this value", "target": 0}
{"idx": 33049, "func": "Reenable Updating the mailbox", "target": 0}
{"idx": 33050, "func": "use global class loader to bootstrap Columba", "target": 0}
{"idx": 33051, "func": "While LAST, previous sample failed - should not run", "target": 0}
{"idx": 33052, "func": "@see org.argouml.uml.diagram.UMLMutableGraphSupport#isRemoveFromDiagramAllowed(Collection)", "target": 0}
{"idx": 33053, "func": "mark all activities with the tag", "target": 0}
{"idx": 33054, "func": "drop them in reverse order in case db needs it done that way...", "target": 0}
{"idx": 33055, "func": "@see org.tigris.gef.base.Command#execute()", "target": 0}
{"idx": 33056, "func": "(non-Javadoc) @see org.columba.mail.imap.IImapServer#ensureSelectedState(org.columba.mail.folder.imap.IMAPFolder)", "target": 0}
{"idx": 33057, "func": "valid elements for a Profile to contain", "target": 0}
{"idx": 33058, "func": "@see org.argouml.uml.ui.UMLComboBox2#UMLComboBox2( UMLComboBoxModel, Action)", "target": 0}
{"idx": 33059, "func": "Loop until we end up back at '>'", "target": 0}
{"idx": 33060, "func": "//{{{ setExtendedState() method", "target": 0}
{"idx": 33061, "func": "TODO: Moved this out of the implementation-specific piece - tfm everything is primary for now (ie not reverse engineered)", "target": 1}
{"idx": 33062, "func": "//{{{ FontSelectorDialog class", "target": 0}
{"idx": 33063, "func": "TODO: We can probably use this instead of all of the above legacy UML 1.3 code - tfm - 20070915", "target": 1}
{"idx": 33064, "func": "line 534", "target": 0}
{"idx": 33065, "func": "system beep", "target": 0}
{"idx": 33066, "func": "Fill 71 of value (byte) -19 Fill 2 of value (byte) 33 Fill 5 of value (byte) -19", "target": 0}
{"idx": 33067, "func": "i18n[dataTypeDate.useDefaultFormat=Use default format ({0})]", "target": 0}
{"idx": 33068, "func": "Is stack created ? (will happen if the JET file we're looking at is missing. //", "target": 0}
{"idx": 33069, "func": "get desired width and height from somewhere then...", "target": 0}
{"idx": 33070, "func": "On Motif, selection color may be set as background. //", "target": 0}
{"idx": 33071, "func": "An atomic long for generating DynamicMethod serial numbers", "target": 0}
{"idx": 33072, "func": "Add menu.", "target": 0}
{"idx": 33073, "func": "Loop through the files seeing if any has been touched more recently than the destination jar.", "target": 0}
{"idx": 33074, "func": "MouseListener sorts table when clicking on a column header", "target": 0}
{"idx": 33075, "func": "for version properties marked as being generated, make sure they are \"always\" generated; aka, \"insert\" is invalid; this is dis-allowed by the DTD, but just to make sure...", "target": 0}
{"idx": 33076, "func": "First call", "target": 0}
{"idx": 33077, "func": "boolean autoScale = true;", "target": 0}
{"idx": 33078, "func": "If the result is not a proxy, cache it. //", "target": 0}
{"idx": 33079, "func": "Ant javadoc task rules for group attribute: Args are comma-delimited. Each arg is 2 space-delimited strings. E.g., group=\"XSLT_Packages org.apache.xalan.xslt, XPath_Packages org.apache.xalan.xpath\"", "target": 0}
{"idx": 33080, "func": "This method takes as input a map of operands to their values, and outputs the result of this instruction. If the value map provides a value for any of the instruction's operands the expectation is that the operand will be replaced with the simplified value. It is not required that it do so -- code correctness is not compromised by failure to simplify. @param valueMap Mapping from operands to their simplified values @returns simplified result / output of this instruction", "target": 0}
{"idx": 33081, "func": "FE30..FE4F;", "target": 0}
{"idx": 33082, "func": "//private JTextPane textpane;", "target": 0}
{"idx": 33083, "func": "TODO: This doesn't work, but should Collection elements = Model.getFacade().getRootElements(); Model.getUmlHelper().deleteCollection(elements); elements = Model.getFacade().getRootElements(); assertTrue(\"Failed to create clean environment\", elements.isEmpty());", "target": 1}
{"idx": 33084, "func": "Build the new module", "target": 0}
{"idx": 33085, "func": "load the base class through this loader.", "target": 0}
{"idx": 33086, "func": "// private ArrayList _usedTabs = new ArrayList();", "target": 0}
{"idx": 33087, "func": "i18n[SupportedRefactoringsTab.title=Supported Refactorings]", "target": 0}
{"idx": 33088, "func": "i18n[AboutBoxDialog.info.endmemtimer=Ending memory timer (AboutBox)]", "target": 0}
{"idx": 33089, "func": "protected JButton defaultButton;", "target": 0}
{"idx": 33090, "func": "@see org.argouml.model.ModelImplementation#getVisibilityKind()", "target": 0}
{"idx": 33091, "func": "disable bar outlines...", "target": 0}
{"idx": 33092, "func": "Pane to add window content to.", "target": 0}
{"idx": 33093, "func": "now set the individual categories (if any)", "target": 0}
{"idx": 33094, "func": "Push 'this'", "target": 0}
{"idx": 33095, "func": "If the id does not look like a top-level Fig then we can assume that this is an id of a FigEdgePort inside some FigEdge. So extract the FigEdgePort from the FigEdge and return that as the FigNode.", "target": 0}
{"idx": 33096, "func": "i18n[sqlval.disconnected=Disconnected from the SQL Validation web service]", "target": 0}
{"idx": 33097, "func": "//{{{ View constructor", "target": 0}
{"idx": 33098, "func": "already at EOF", "target": 0}
{"idx": 33099, "func": "i18n[sqlval.loOnAs=Log on as]", "target": 0}
{"idx": 33100, "func": "add a line marker at the end for proper offset manager operation", "target": 0}
{"idx": 33101, "func": "Execute the sample. In this case sleep for the specified time.", "target": 0}
{"idx": 33102, "func": "If repeat was true originally, clear it Otherwise it might have been set by the action, etc", "target": 0}
{"idx": 33103, "func": "Updates stereotype setting, adds all children per treemodel 'build on demand' design. @see javax.swing.event.TreeWillExpandListener#treeWillExpand(javax.swing .event.TreeExpansionEvent)", "target": 0}
{"idx": 33104, "func": "have to do this hack until VFSPath class is written", "target": 1}
{"idx": 33105, "func": "categoryAnchor", "target": 0}
{"idx": 33106, "func": "i18n[graph.unit=Unit]", "target": 0}
{"idx": 33107, "func": "unless we are matching to the end of the buffer, $ should not match on the end of the substring", "target": 0}
{"idx": 33108, "func": "intializes result by side-effect", "target": 0}
{"idx": 33109, "func": "This is the old way and is deprecated - classespath is the right way to do this and is above", "target": 1}
{"idx": 33110, "func": "Gcj has no option for source-path so we will add it to classpath.", "target": 0}
{"idx": 33111, "func": "Consider each GenModel location URI for each required plugin. //", "target": 0}
{"idx": 33112, "func": "If it had a different type throw error. This allows declaring the same var again, but not with a different (even if assignable) type.", "target": 0}
{"idx": 33113, "func": "Not a .class file or the one we'd generate", "target": 0}
{"idx": 33114, "func": "get the text response and image icon to determine which is NOT null", "target": 0}
{"idx": 33115, "func": "bi (degree 2)", "target": 0}
{"idx": 33116, "func": "does this need holdlock also? : return tableName + \" with (updlock, rowlock, holdlock)\";", "target": 1}
{"idx": 33117, "func": "links visible", "target": 0}
{"idx": 33118, "func": "ZStream actually isn't allocatable", "target": 0}
{"idx": 33119, "func": "Create our bandbuffer which is just a small slice of the image TODO: We used a fixed height buffer now, but we could be smarter and compute a height which would fit in some memory budget, allowing us to use taller buffers with narrower images, minimizing the overhead of multiple rendering passes", "target": 1}
{"idx": 33120, "func": "get outbox folder", "target": 0}
{"idx": 33121, "func": "<p> Super-class for TestElements that can be applied to main sample, sub-samples or both. [Assertions use a different class because they use a different value for the {@link #getScopeName()} constant] </p> <p> Their corresponding GUI classes need to add the ScopePanel to the GUI using the AbstractXXXGui methods: <ul> <li>createScopePanel()</li> <li>saveScopeSettings()</li> <li>showScopeSettings()</li> </ul> </p>", "target": 0}
{"idx": 33122, "func": "//{{{ getMatch() method", "target": 0}
{"idx": 33123, "func": "make sure that we've got a srcdir", "target": 0}
{"idx": 33124, "func": "make \"enabled\" column fixed size", "target": 0}
{"idx": 33125, "func": "i18n[SQLFilterSheet.contentsMsg=You must have the Contents Tab selected to activate the SQL Filter]", "target": 0}
{"idx": 33126, "func": "create a single array of arguments for the compiler", "target": 0}
{"idx": 33127, "func": "Unique ID assigned to this variable", "target": 0}
{"idx": 33128, "func": "//{{{ invertSelection() method", "target": 0}
{"idx": 33129, "func": "frequency", "target": 0}
{"idx": 33130, "func": "temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 33131, "func": "//this.forceCacheRefresh = forceCacheRefresh;", "target": 0}
{"idx": 33132, "func": "Utility function to localize the given string with help text, and show it in the status bar of the ArgoUML window. This function is used in favour of the inline call to enable later improvements; e.g. it would be possible to show a help-balloon. TODO: Work this out. One matter to possibly improve: show multiple lines. @param s the given string to be localized and shown", "target": 1}
{"idx": 33133, "func": "Although we register for notification of diagrams being deleted, we currently depend on the TargetManager to assign a new target when this happens When we implement MDI and have our own list of open diagrams we can ressurect the use of this", "target": 0}
{"idx": 33134, "func": "We only cache entire physical lines at once; don't want to split a physical line into screen lines and only have some valid.", "target": 0}
{"idx": 33135, "func": "Use for x-axis scale", "target": 0}
{"idx": 33136, "func": "domainAxes...", "target": 0}
{"idx": 33137, "func": "(non-Javadoc) @see org.columba.mail.imap.IImapServer#expunge(org.columba.mail.folder.imap.IMAPFolder)", "target": 0}
{"idx": 33138, "func": "//return lhsPersister.getSubclassPropertyColumnNames(property);", "target": 0}
{"idx": 33139, "func": "(non-Javadoc) @see org.columba.mail.message.ICloseableIterator#close()", "target": 0}
{"idx": 33140, "func": "no digits, error", "target": 0}
{"idx": 33141, "func": "Setting SamplingStarted before the contollers are initialised allows them to access the running values of functions and variables (however it does not seem to help with the listeners)", "target": 1}
{"idx": 33142, "func": "50k", "target": 0}
{"idx": 33143, "func": "split the hierarchical name with at the delimiters", "target": 0}
{"idx": 33144, "func": "if in debug mode, register context debugger view", "target": 0}
{"idx": 33145, "func": "i18n[Session.driverCompliance=The driver being used for alias ''{0}'' is not JDBC 2.1 compliant.\\nYou should consider getting a more recent version of this driver]", "target": 0}
{"idx": 33146, "func": "JBC put a version in the node when it created as part of some internal operation. We are always newer, but if the JBC version is > 1 something odd has happened", "target": 0}
{"idx": 33147, "func": "@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAMultiplicativeExpressionTail(tudresden.ocl.parser.node.AMultiplicativeExpressionTail)", "target": 0}
{"idx": 33148, "func": "merge() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 33149, "func": "//off by default", "target": 0}
{"idx": 33150, "func": "column 3 is loaded status", "target": 0}
{"idx": 33151, "func": "If this is a feature map... //", "target": 0}
{"idx": 33152, "func": "set this class's method names in var @__java_ovrd_methods if this is the new class; otherwise, get method names from there if this is a proxy superclass.", "target": 0}
{"idx": 33153, "func": "Operations ...", "target": 0}
{"idx": 33154, "func": "//////////////////////////////////////////////////////////////TargetListener implementation", "target": 0}
{"idx": 33155, "func": "i18n[graph.graphRemoved=Removed graph file \"{0}\"]", "target": 0}
{"idx": 33156, "func": "the closure of all columns used by the entire hierarchy including subclasses and superclasses of this class", "target": 0}
{"idx": 33157, "func": "i18n[sessionPropertiesPanel.catalogPrefix=Limit Catalog Objects using these comma-delimited prefixes:]", "target": 0}
{"idx": 33158, "func": "Override Task#init", "target": 0}
{"idx": 33159, "func": "Evaluate All checkbox $NON-NLS-1$", "target": 0}
{"idx": 33160, "func": "Begin BeanShell Modification - super constructor args null node, null callstack, ParseException knows where the error is.", "target": 0}
{"idx": 33161, "func": "two characters form the hex value.", "target": 0}
{"idx": 33162, "func": "otherwise, there's a receiver, so we pass that in directly for the sclass logic", "target": 0}
{"idx": 33163, "func": "only add all if there are some to add.", "target": 0}
{"idx": 33164, "func": "draw all the charts", "target": 0}
{"idx": 33165, "func": "Configured using the JAXP Configurator", "target": 0}
{"idx": 33166, "func": "//final boolean forceCacheRefresh,", "target": 0}
{"idx": 33167, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider#getDestSelectedDatabaseObject()", "target": 0}
{"idx": 33168, "func": "Adds a segment to a stack, skipping empty segments and self references, and interpreting parent references.", "target": 0}
{"idx": 33169, "func": "set to start of string", "target": 0}
{"idx": 33170, "func": "//i18n[FormatterSourceTab.noSourceAvailable=No object source code is //available]", "target": 0}
{"idx": 33171, "func": "For completeness", "target": 0}
{"idx": 33172, "func": "ComparableObjectItem item1 =", "target": 0}
{"idx": 33173, "func": "//ChangeFactory", "target": 0}
{"idx": 33174, "func": "word char or symbol; stop", "target": 0}
{"idx": 33175, "func": "Ignore TestElement properties which don't have an explicit editor:", "target": 0}
{"idx": 33176, "func": "retrieve service instance", "target": 0}
{"idx": 33177, "func": "Class to display graphics for N-ary association (association node), i.e. the diamond. <p> TODO: Improve the location of the stereotypes! @author pepargouml@yahoo.es", "target": 1}
{"idx": 33178, "func": "//{{{ VFSFileChooserDialog constructor", "target": 0}
{"idx": 33179, "func": "line 1193", "target": 0}
{"idx": 33180, "func": "We have to do this to set the LAF for the splash screen", "target": 0}
{"idx": 33181, "func": "remove memorized search folders", "target": 0}
{"idx": 33182, "func": "TODO: Fix this so that new sequence diagrams are tested", "target": 1}
{"idx": 33183, "func": "The following is the default implementation for diagrams of which the owner is a namespace.", "target": 0}
{"idx": 33184, "func": "//{{{ Capabilities", "target": 0}
{"idx": 33185, "func": "TODO ought to be a FileChooser ...", "target": 1}
{"idx": 33186, "func": "TL - TE", "target": 0}
{"idx": 33187, "func": "for example: \"Re: this is a subject\"", "target": 0}
{"idx": 33188, "func": "Fix bug #922951 Off-by-one error in Word Count", "target": 0}
{"idx": 33189, "func": "Draw the new zoom rectangle...", "target": 0}
{"idx": 33190, "func": "One or the other should be absolute on Windows or CE", "target": 0}
{"idx": 33191, "func": "This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and (2) Socket.getChannel() seems to return null in some cases", "target": 0}
{"idx": 33192, "func": "Create a segmented time line (segment size : 15 minutes)", "target": 0}
{"idx": 33193, "func": "the requested precision", "target": 0}
{"idx": 33194, "func": "Category.getRoot().getLoggerRepository().setThreshold(Level.OFF); TODO: Find the proper implementation in java.util.logging API", "target": 1}
{"idx": 33195, "func": "//flat recursive algorithm", "target": 0}
{"idx": 33196, "func": "Ignore close exception", "target": 0}
{"idx": 33197, "func": "1. Wait for user to click ok/close", "target": 0}
{"idx": 33198, "func": "allow use of relative file URLs", "target": 0}
{"idx": 33199, "func": "ensure we have a maximum value to use on the axes", "target": 0}
{"idx": 33200, "func": "Create a new or replaced entry and continue processing the remaining archives. //", "target": 0}
{"idx": 33201, "func": "Parsed response headers", "target": 0}
{"idx": 33202, "func": "//append the ... suffix if not there already", "target": 0}
{"idx": 33203, "func": "Auth Settings", "target": 0}
{"idx": 33204, "func": "//if we only returned one entity, query by key is more efficient", "target": 0}
{"idx": 33205, "func": "End BeanShell Modification - constructor", "target": 0}
{"idx": 33206, "func": "//{{{ isUnix() method", "target": 0}
{"idx": 33207, "func": "i18n[ValidatorGlobalPreferencesTab.title=SQL Validator]", "target": 0}
{"idx": 33208, "func": "//the database has changed now, so the subselect results need to be invalidated", "target": 0}
{"idx": 33209, "func": "the polynomial calculation is done by the (fast) Euler method", "target": 0}
{"idx": 33210, "func": "last mod. time and date", "target": 0}
{"idx": 33211, "func": "end stuff that was tacked on for boolean short-circuiting.", "target": 0}
{"idx": 33212, "func": "Remove old listeners:", "target": 0}
{"idx": 33213, "func": "//newFC = _content;", "target": 0}
{"idx": 33214, "func": "//{{{ FileCellRenderer constructor", "target": 0}
{"idx": 33215, "func": "Begin Method components", "target": 0}
{"idx": 33216, "func": "filter nodes", "target": 0}
{"idx": 33217, "func": "Look through the FromElement's children to find any collections of values that should be fetched...", "target": 0}
{"idx": 33218, "func": "we already know current is not null...", "target": 0}
{"idx": 33219, "func": "do a simple check to see if the string might contain XML or not", "target": 0}
{"idx": 33220, "func": "Lookup key - must agree with all the values used to create the HttpClient.", "target": 0}
{"idx": 33221, "func": "set the body", "target": 0}
{"idx": 33222, "func": "for regular expressions with the /o flag", "target": 0}
{"idx": 33223, "func": "The maximum index of the tags in the combo box", "target": 0}
{"idx": 33224, "func": "This also handles unsigned int -> negative signed int conversion", "target": 0}
{"idx": 33225, "func": "Remove the other (parsed) tab if present", "target": 0}
{"idx": 33226, "func": "We use the attributes and flags from the cache but the parsed header from the parsed message", "target": 0}
{"idx": 33227, "func": "ADDONLY_COMMAND determines a changeability kind. TODO: Removed from UML 2.x. Phase out of UI - tfm - 20070529", "target": 0}
{"idx": 33228, "func": "load always uses IRubyObject[], so simple closure offset calculation here", "target": 0}
{"idx": 33229, "func": "for objects that came in via update()", "target": 0}
{"idx": 33230, "func": "line 1323", "target": 0}
{"idx": 33231, "func": "jScrollPane1.setRowHeaderView(_rowHeader);", "target": 0}
{"idx": 33232, "func": "CLOB exists, so try to read the data from it based on the user's directions", "target": 0}
{"idx": 33233, "func": "List of value by sampler", "target": 0}
{"idx": 33234, "func": "TODO: get SQL rendering out of here, create an AST for the join expressions. Use the SQL generator grammar to generate the SQL text for the index expression.", "target": 1}
{"idx": 33235, "func": "//TODO no methods yet for getClassname //TODO no method for newInstance using a reverse-classloader", "target": 1}
{"idx": 33236, "func": "can't shift floating-point values", "target": 0}
{"idx": 33237, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getColumnInfo(net.sourceforge.squirrel_sql.fw.sql.ITableInfo)", "target": 0}
{"idx": 33238, "func": "Algorithm Check for any level one nullability breaks Look at non null components to recursively check next level of nullability breaks Look at Collections contraining component to recursively check next level of nullability breaks In the previous implementation, not-null stuffs where checked filtering by level one only updateable or insertable columns. So setting a sub component as update=\"false\" has no effect on not-null check if the main component had good checkeability In this implementation, we keep this feature. However, I never see any documentation mentioning that, but it's for sure a limitation.", "target": 1}
{"idx": 33239, "func": "Now we need to hook up keys by finding the named feature in the type. //", "target": 0}
{"idx": 33240, "func": "the entity name", "target": 0}
{"idx": 33241, "func": "not necessarily a unique property reference", "target": 0}
{"idx": 33242, "func": "// true/false", "target": 0}
{"idx": 33243, "func": "//{{{ loadFavorites() method", "target": 0}
{"idx": 33244, "func": "//System.err.println(\" stringToLong/converted c=\" + c);", "target": 0}
{"idx": 33245, "func": "Command executes the search. <p> In case new result results arrive, it ensures that all interested listeners are notified from inside the EDT. <p> FIXME: fdietz: No locking of folders currently implemented! TODO: fdietz: create new Command for every provider to introduce real \"parallel\" search @author fdietz", "target": 1}
{"idx": 33246, "func": "Write simple script", "target": 0}
{"idx": 33247, "func": "remove the point i-periodCount out of the rolling sum.", "target": 0}
{"idx": 33248, "func": "//SecurityManager can not be installed here for backwards //compatibility reasons (PD). Needs to be loaded prior to //ant class if we are going to implement it. //System.setSecurityManager(new NoExitSecurityManager());", "target": 0}
{"idx": 33249, "func": "if there is no specific font, use the general one...", "target": 0}
{"idx": 33250, "func": "send it along as arity-specific, we don't need the array", "target": 0}
{"idx": 33251, "func": "sum of x, x^2, x y, y", "target": 0}
{"idx": 33252, "func": "stop server when shutting down", "target": 0}
{"idx": 33253, "func": "Need to append something so delimiter is added", "target": 0}
{"idx": 33254, "func": "//_treeAPI.addDetailTab(DatabaseObjectType.SEQUENCE, new DatabaseObjectInfoTab()); //_treeAPI.addDetailTab(DatabaseObjectType.SEQUENCE, new SequenceDetailsTab());", "target": 0}
{"idx": 33255, "func": "empty encoding, return to platorm default", "target": 0}
{"idx": 33256, "func": "TODO before inserting, find out if there's already a menu item with the same action command. if so, replace it, otherwise insert new", "target": 1}
{"idx": 33257, "func": "this is the case that starting process rose file by passing cat file name this is a special case. normally, user should pass mdl file instead of cat file file is a cat file modelTree did contain quid info", "target": 0}
{"idx": 33258, "func": "//{{{ updateFilterEnabled() method", "target": 0}
{"idx": 33259, "func": "@see java.awt.dnd.DragSourceListener#dropActionChanged(java.awt.dnd.DragSourceDragEvent)", "target": 0}
{"idx": 33260, "func": "Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get(\"foo\")).getJITCompilerScript().getClass(); Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get(\"foo\")).getJITCompilerScript().getClass();", "target": 0}
{"idx": 33261, "func": "//nativeThread.setPriority(priority);", "target": 0}
{"idx": 33262, "func": "method is STORED and we used RandomAccessFile", "target": 0}
{"idx": 33263, "func": "putfield", "target": 0}
{"idx": 33264, "func": "delete folders", "target": 0}
{"idx": 33265, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#storesLowerCaseQuotedIdentifiers()", "target": 0}
{"idx": 33266, "func": "update progress bar", "target": 0}
{"idx": 33267, "func": "If the classifier does not have a name, then no problem - the model is not finished anyhow.", "target": 0}
{"idx": 33268, "func": "TODO: this isn't handling multibyte yet", "target": 1}
{"idx": 33269, "func": "use negative condition so missing (null) value is treated as FALSE", "target": 0}
{"idx": 33270, "func": "Magic: UNTITLED is only set if newFile param to constructor is set, NEW_FILE is also set if file doesn't exist on disk. This is so that we can tell apart files created with jEdit.newFile(), and those that just don't exist on disk. Why do we need to tell the difference between the two? jEdit.addBufferToList() checks if the only opened buffer is an untitled buffer, and if so, replaces it with the buffer to add. We don't want this behavior to occur with files that don't exist on disk; only untitled ones.", "target": 0}
{"idx": 33271, "func": "Check if the request itself tells us what the encoding is", "target": 0}
{"idx": 33272, "func": "Don't care if it's not there", "target": 0}
{"idx": 33273, "func": "//{{{ narrow() method", "target": 0}
{"idx": 33274, "func": "end class DocumentationManager", "target": 0}
{"idx": 33275, "func": "//{{{ Deferred class", "target": 0}
{"idx": 33276, "func": "retrieve headerlist of tempate folder", "target": 0}
{"idx": 33277, "func": "$NON-NLS-1$ (do not change) $NON-NLS-1$ (Firefox and Windows) $NON-NLS-1$ (Opera)", "target": 0}
{"idx": 33278, "func": "//{{{ removeAllMarkers() method", "target": 0}
{"idx": 33279, "func": "TODO: factor out @param rule the rule to be added", "target": 0}
{"idx": 33280, "func": "//////////////////////////////////////////////////////////Methods to implement the ModelListener. ////////////////////////////////////////////////////////////", "target": 0}
{"idx": 33281, "func": "0C00..0C7F;", "target": 0}
{"idx": 33282, "func": "/////////////////////////////////////Add field(s) to panel ///////////////////////////////////////", "target": 0}
{"idx": 33283, "func": "Note: If we are here _cacheSchemaIndependentMetaData must be false", "target": 0}
{"idx": 33284, "func": "//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), \"redefining constant Struct::\" + name, name);", "target": 0}
{"idx": 33285, "func": "i18n[DataTypePreferencesPanel.propsPanel.hint=Set options for specific Data Types]", "target": 0}
{"idx": 33286, "func": "//{{{ If nothing entered, show search and replace dialog box", "target": 0}
{"idx": 33287, "func": "athrow", "target": 0}
{"idx": 33288, "func": "the following code handles the line for the y-values...it's all done by code in the super class", "target": 0}
{"idx": 33289, "func": "any BigInteger is bigger than Fixnum and we don't have FIXABLE", "target": 0}
{"idx": 33290, "func": "override allowed on <available>", "target": 0}
{"idx": 33291, "func": "the object is transient or detached", "target": 0}
{"idx": 33292, "func": "result = new XMLResource.XMLInfoImpl(); result.setXMLRepresentation(XMLResource.XMLInfo.UNSPECIFIED);", "target": 0}
{"idx": 33293, "func": "Core class that exists in system classpath is not ignored with default ignoresystemclasses value", "target": 0}
{"idx": 33294, "func": "//////////////////////////////////////////////////Is done in dispose itself because listeners must be fired even in DO_NOTHING_ON_CLOSE mode tabHandle.fireClosed(e); ///////////////////////////////////////////////////", "target": 0}
{"idx": 33295, "func": "END public class ExternalEditor", "target": 0}
{"idx": 33296, "func": "end class ActionPaste", "target": 0}
{"idx": 33297, "func": "may be final", "target": 0}
{"idx": 33298, "func": "Loop over the entries in the zip stream. //", "target": 0}
{"idx": 33299, "func": "Superclass method invocation? (e.g. super.foo())", "target": 0}
{"idx": 33300, "func": "//{{{ getAbovePosition() method", "target": 0}
{"idx": 33301, "func": "Do nothing for now, and avoid propagating the exception. How should builders handle cancel?", "target": 1}
{"idx": 33302, "func": "fall back to default path", "target": 0}
{"idx": 33303, "func": "Show the primary descriptor. There should always be one.", "target": 0}
{"idx": 33304, "func": "//ETypedElementImpl", "target": 0}
{"idx": 33305, "func": "//not sure if this would ever be null but wanted to be careful", "target": 0}
{"idx": 33306, "func": "Normal InputStream is not available", "target": 0}
{"idx": 33307, "func": "All three specified and all three exist -> true", "target": 0}
{"idx": 33308, "func": "//The child is sometimes not found when the tree is being updated", "target": 0}
{"idx": 33309, "func": "Helper method for changeConnectedNode. TODO: This should probably be in superclass. Associations can be on several diagram types.", "target": 1}
{"idx": 33310, "func": "Find the compartment fig for this umlObject:", "target": 0}
{"idx": 33311, "func": "meta tag with content definition found", "target": 0}
{"idx": 33312, "func": "TODO: InstanceSpecification -> Classifier association isn't navigable in this direction", "target": 1}
{"idx": 33313, "func": "If we do not know the encoding, we just use the encoded value The browser has already done the encoding, so save the values as is", "target": 0}
{"idx": 33314, "func": "read attribute \"value\"", "target": 0}
{"idx": 33315, "func": "might read too much", "target": 0}
{"idx": 33316, "func": "TODO: this class should be moved to package org.argouml.uml.ui.behavior.common_behavior.", "target": 1}
{"idx": 33317, "func": "Activate another session since the current active session has closed.", "target": 0}
{"idx": 33318, "func": "FIXME this is actually not very cpu cycles friendly as we are converting from dos to java while the underlying Sun implementation will convert from java to dos time for internal storage...", "target": 1}
{"idx": 33319, "func": "FIXME: There's some code duplication here with RubyObject#inspect", "target": 1}
{"idx": 33320, "func": "Also set name in constraint body -- Added 03/14/2001", "target": 0}
{"idx": 33321, "func": "Try to create a new class diagram.", "target": 0}
{"idx": 33322, "func": "Traverse the instructions in this basic block in reverse order!", "target": 0}
{"idx": 33323, "func": "This variant of newStruct is called from StructLayoutBuilder", "target": 0}
{"idx": 33324, "func": "&& ((Action) handle).get", "target": 0}
{"idx": 33325, "func": "1st step: As explained above, resizing an instruction may require to resize another one, which may require to resize yet another one, and so on. The first step of the algorithm consists in finding all the instructions that need to be resized, without modifying the code. This is done by the following \"fix point\" algorithm: - parse the code to find the jump instructions whose offset will need more than 2 bytes to be stored (the future offset is computed from the current offset and from the number of bytes that will be inserted or removed between the source and target instructions). For each such instruction, adds an entry in (a copy of) the indexes and sizes arrays (if this has not already been done in a previous iteration!) - if at least one entry has been added during the previous step, go back to the beginning, otherwise stop. In fact the real algorithm is complicated by the fact that the size of TABLESWITCH and LOOKUPSWITCH instructions depends on their position in the bytecode (because of padding). In order to ensure the convergence of the algorithm, the number of bytes to be added or removed from these instructions is over estimated during the previous loop, and computed exactly only after the loop is finished (this requires another pass to parse the bytecode of the method).", "target": 0}
{"idx": 33326, "func": "Add a predicate for ArgoUML's default capabilities:", "target": 0}
{"idx": 33327, "func": "End method components", "target": 0}
{"idx": 33328, "func": "//{{{ getMaximum() method", "target": 0}
{"idx": 33329, "func": "END public class XmlElement", "target": 0}
{"idx": 33330, "func": "//{{{ JAR class", "target": 0}
{"idx": 33331, "func": "This is done to ensure that this new copy is treated as an output by the domain. The CreateMappingCommand will rely on this setting. //", "target": 0}
{"idx": 33332, "func": "format (HMTL, XHTML, XML)", "target": 0}
{"idx": 33333, "func": "pid 25493, lock examples: 5 [\" /db1/shd_data_4_3/\"]User.ygwaBvbPosKorrD(1) 25493 1D, 25499 X E 5 [\" /db1/shd_data_4_3/\"]User.ygwaBvbPosKorrD(1) 25493 1D, 25499,25506 X,X E,E 5 [\" /db1/shd_data_4_3/\"]User.ygwaBvbPosKorrD(1) 25493 1D, 25499,25506,25508 X,X,X E,E,E oder //6 [\" d:\\db\\shd_data_lov\\\"]User.WLagerartikelD(76) 5544 1D, //7 [\" d:\\db\\shd_data_lov\\\"]User.WLagerartikelD(77) 5544 1D, 3804 S E //8 [\" d:\\db\\shd_data_lov\\\"]User.WVorgangD(24) 5544 1D, oder fuer kein Lock: //3 [\" f:\\db\\shd_data\\\"]User.ygwaTestD(989) 3792 1D, //4 [\" f:\\db\\shd_data\\\"]User.ygwaTestD(990) 3792 1D, //5 [\" f:\\db\\shd_data\\\"]User.ygwaTestD(991) 3792 1D, //6 [\" f:\\db\\shd_data\\\"]User.ygwaTestD(992) 3792 1D, //7 [\" f:\\db\\shd_data\\\"]User.ygwaTestD(993) 3792 1D, //8 [\" f:\\db\\shd_data\\\"]User.ygwaTestD(994) 3792 1D, //9 [\" f:\\db\\shd_data\\\"]User.ygwaTestD(995) 3792 1D, //", "target": 0}
{"idx": 33334, "func": "Info", "target": 0}
{"idx": 33335, "func": "Parameters for call.", "target": 0}
{"idx": 33336, "func": "//bottom.setLayout( new BoxLayout( bottom, BoxLayout.X_AXIS ) ); //bottom.add( Box.createHorizontalStrut());", "target": 0}
{"idx": 33337, "func": "Second 2 are the minor number", "target": 0}
{"idx": 33338, "func": "Also add each required plugin for consideration in the loop. //", "target": 0}
{"idx": 33339, "func": "updating position for same line; skip", "target": 0}
{"idx": 33340, "func": "//override on some subclasses", "target": 0}
{"idx": 33341, "func": "Get class box, because we will set it's bounding box in text field", "target": 0}
{"idx": 33342, "func": "A thread pool to use for executing this runtime's Ruby threads", "target": 0}
{"idx": 33343, "func": "remove an item", "target": 0}
{"idx": 33344, "func": "the x value is not within the axis range", "target": 0}
{"idx": 33345, "func": "after adding a point to a series, check that there are now 7 items in each series", "target": 0}
{"idx": 33346, "func": "directory with respect to", "target": 0}
{"idx": 33347, "func": "//{{{ Folding", "target": 0}
{"idx": 33348, "func": "TODO: Why was this next line in the code so long?", "target": 1}
{"idx": 33349, "func": "private MainInterface mainInterface;", "target": 0}
{"idx": 33350, "func": "TODO: This is ambiguous as to whether it should be adding a container or resident.", "target": 1}
{"idx": 33351, "func": "map loose return to Object", "target": 0}
{"idx": 33352, "func": "Create an XML processor that is aware of XML Schema specified. @param schemaURIs - a URI {@link org.eclipse.common.util.URI} which point to an XML Schema", "target": 0}
{"idx": 33353, "func": "Label count Mean median 90% Min Max Error %age //$NON-NLS-1$ Throughput //$NON-NLS-1$ pageSize //$NON-NLS-1$", "target": 0}
{"idx": 33354, "func": "Where we started this marker match", "target": 0}
{"idx": 33355, "func": "if we are limiting all columns, then we need to re-read because we do not know if we have all the data or not", "target": 0}
{"idx": 33356, "func": "add our classpath to the mix", "target": 0}
{"idx": 33357, "func": "reuse time event:", "target": 0}
{"idx": 33358, "func": "But if that series array already exists, just overwrite its contents", "target": 0}
{"idx": 33359, "func": "no entry selected", "target": 0}
{"idx": 33360, "func": "this is the actual command that colors the stuff. Color stuff with the description of the style matched to the hash table that has been set up ahead of time.", "target": 0}
{"idx": 33361, "func": "BshClassManager", "target": 0}
{"idx": 33362, "func": "//{{{ VFSFileNameField constructor", "target": 0}
{"idx": 33363, "func": "getRoot() doesn't appear to return the deepest Window, but the first one. If you have a dialog owned by a window you get the dialog, not the window.", "target": 0}
{"idx": 33364, "func": "separators need preferred size in GridBagLayout", "target": 0}
{"idx": 33365, "func": "generate classpath, because kjc doesn't support sourcepath.", "target": 0}
{"idx": 33366, "func": "Use the passed in base in preference to the base from matchingEntry, which is either null or the directory in which the external catalog file from which it was obtained is located. We make a copy so matchingEntry's original base is untouched. Of course, if there is no base, no need to make a copy... This is the standard behavior as per my reading of the JAXP and XML Catalog specs. CKS 11/7/2002 //", "target": 0}
{"idx": 33367, "func": "//sql = update;", "target": 0}
{"idx": 33368, "func": "now remove the ones already applied.", "target": 0}
{"idx": 33369, "func": "'8' and '9' already handled", "target": 0}
{"idx": 33370, "func": "//class-ModifiedSelectorTest", "target": 0}
{"idx": 33371, "func": "true (non relative) max stack size", "target": 0}
{"idx": 33372, "func": "clear existing attachments from the view 20031105, karlpeder Added to avoid dupplicating attachments when switching btw. html and plain text.", "target": 0}
{"idx": 33373, "func": "sectionPaint", "target": 0}
{"idx": 33374, "func": "menu.add(new CMenuItem(new OpenNewMailWindowAction(null))); menu.add(new CMenuItem(new OpenNewAddressbookWindowAction(null))); menu.addSeparator(); menu.add(new CMenuItem(new AboutDialogAction(null))); menu.add(new CMenuItem(new ShowHelpAction(null))); menu.addSeparator(); menu.add(new CMenuItem(new ExitAction(null)));", "target": 0}
{"idx": 33375, "func": "//{{{ getFilenameFilter() method", "target": 0}
{"idx": 33376, "func": "Create an import manager for this compilation unit", "target": 0}
{"idx": 33377, "func": "i18n[syntax.prefSyntaxHint=Syntax Highlighting]", "target": 0}
{"idx": 33378, "func": "2400..243F;", "target": 0}
{"idx": 33379, "func": "Body data", "target": 0}
{"idx": 33380, "func": "updating the radiobuttons container's title", "target": 0}
{"idx": 33381, "func": "//StyleConstants.setBackground(saSetErrorHistory, Color.pink);", "target": 0}
{"idx": 33382, "func": "line 469", "target": 0}
{"idx": 33383, "func": "USED BY PGML.tee. @return the class name and bounds together with compartment visibility. TODO: Is this not duplicate with the parent?", "target": 1}
{"idx": 33384, "func": "((MailFrameController) frameMediator).registerTreeSelectionListener( this);", "target": 0}
{"idx": 33385, "func": "TODO: This is probably related to the SendEvent that is sending the Signal, but the association is not navigable in that direction", "target": 1}
{"idx": 33386, "func": "//{{{ showMemoryStatusDialog() method", "target": 0}
{"idx": 33387, "func": "@see org.argouml.uml.ui.ActionSetMultiplicity#setSelectedItem( java.lang.Object, java.lang.Object)", "target": 0}
{"idx": 33388, "func": "let's enable the radiobuttons container", "target": 0}
{"idx": 33389, "func": "move read position [index] clicks from 'charAt(0)'", "target": 0}
{"idx": 33390, "func": "FigMyCircle is a FigCircle with corrected connectionPoint method: this methods calculates where a connected edge ends.<p> TODO: Once we are at GEF version 0.13.1M4, this whole class can be removed, since it was taken over by GEF.", "target": 1}
{"idx": 33391, "func": "baseSeriesOutlinePaint", "target": 0}
{"idx": 33392, "func": "line 1026", "target": 0}
{"idx": 33393, "func": "//{{{ mouseEntered() method", "target": 0}
{"idx": 33394, "func": "check that setting the max date to something on or before the current min date works...", "target": 0}
{"idx": 33395, "func": "we want the b: Foo attribute, that is the second in the list", "target": 0}
{"idx": 33396, "func": "so that we don't see the same tip again if the user clicks 'Next Tip'", "target": 0}
{"idx": 33397, "func": "i18n[Application.splash.showmainwindow=Showing main window...]", "target": 0}
{"idx": 33398, "func": "nonexistent resources could only occur if we already deleted something from a fileset:", "target": 0}
{"idx": 33399, "func": "alter default clauses", "target": 0}
{"idx": 33400, "func": "Only used by GUI", "target": 0}
{"idx": 33401, "func": "i18n[codecompletion.prefs.table.spWithParams=SP with params]", "target": 0}
{"idx": 33402, "func": "Private constructor for use of static factory methods.", "target": 0}
{"idx": 33403, "func": "Add other category if applicable", "target": 0}
{"idx": 33404, "func": "i18n[MemoryPanel.statusDialogTitle=Session garbage collection status]", "target": 0}
{"idx": 33405, "func": "cool case, //we do not need to scan all the subdirs in the relative path", "target": 0}
{"idx": 33406, "func": "'(?:' '(?(' (?modifiers ... )", "target": 0}
{"idx": 33407, "func": "Translate any sequence diagrams create with any previous svn work in progress", "target": 0}
{"idx": 33408, "func": "i18n[SQLHistoryDlg.filtered=Filtered]", "target": 0}
{"idx": 33409, "func": "validate that the throws names are class names", "target": 0}
{"idx": 33410, "func": "---------------------------- javadoc2 arguments for default doclet", "target": 0}
{"idx": 33411, "func": "Create transformer and do transformation", "target": 0}
{"idx": 33412, "func": "itemLabelsVisibleList", "target": 0}
{"idx": 33413, "func": "//then rethrow the exception", "target": 0}
{"idx": 33414, "func": "read configuration from options.xml file", "target": 0}
{"idx": 33415, "func": "Standard UML 1.4 profile", "target": 0}
{"idx": 33416, "func": "WIN9x uses a bat file for executing commands", "target": 0}
{"idx": 33417, "func": "Put the 'AND' or the 'OR' in front of the clause if there are already values in the text area.", "target": 0}
{"idx": 33418, "func": "(non-Javadoc) @see org.columba.core.filter.IFilterRule#getCondition()", "target": 0}
{"idx": 33419, "func": "//{{{ expandAllFolds() method", "target": 0}
{"idx": 33420, "func": "if auto wrap is on, always restart search. if auto wrap is off, and we're called from a macro, stop search. If we're called interactively, ask the user what to do.", "target": 0}
{"idx": 33421, "func": "4. Line with PreviewLabel", "target": 0}
{"idx": 33422, "func": "QuickNotepadActions implementation //", "target": 0}
{"idx": 33423, "func": "table should be updated when tree selection changes", "target": 0}
{"idx": 33424, "func": "And even if it is contained, it must not be a forward reference. eTypeParameterIndex == index is allowed when the type parameter is the type argument of the bound, though //", "target": 0}
{"idx": 33425, "func": "If that fails, determine the URL for the class itself. The URL will be of one of the following forms, so there are a few good places to consider looking for the plugin.properties. For a plugin.xml with runtime=\"common.jar\": jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/common.jar!/org/eclipse/common/CommonPlugin.class For a plugin.xml with runtime=\"runtime/common.jar\": jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/runtime/common.jar!/org/eclipse/common/CommonPlugin.class For a plugin.xml with runtime=\".\" where the plugin is jarred: jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common.jar!/org/eclipse/common/CommonPlugin.class For a plugin.xml with runtime=\".\" where the plugin is not jarred. file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/org/eclipse/emf/common/CommonPlugin.class Running in PDE with bin on classpath: file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/bin/org/eclipse/emf/common/CommonPlugin.class //", "target": 0}
{"idx": 33426, "func": "add listener to get notified when active diagram changes", "target": 0}
{"idx": 33427, "func": "if at least one property listed here is true, load the plugin", "target": 0}
{"idx": 33428, "func": "-1 == don't set permissions", "target": 0}
{"idx": 33429, "func": "ask ant to update the properties...", "target": 0}
{"idx": 33430, "func": "Remaining arguments are for the script itself", "target": 0}
{"idx": 33431, "func": "//{{{ getExpandedDirectories() method", "target": 0}
{"idx": 33432, "func": "Generate a test error", "target": 0}
{"idx": 33433, "func": "deletes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 33434, "func": "Obtain the propertyEditors:", "target": 0}
{"idx": 33435, "func": "private MonitorModel DATA;", "target": 0}
{"idx": 33436, "func": "Specified dir is \"\" -> this is the current directory and should always exist", "target": 0}
{"idx": 33437, "func": "Constants for attribute type. //", "target": 0}
{"idx": 33438, "func": "do not load the class if not used", "target": 0}
{"idx": 33439, "func": "Overrides REToken.setUncle", "target": 0}
{"idx": 33440, "func": "v is defined => It is no longer live before 'i'", "target": 0}
{"idx": 33441, "func": "// public SQLFilterClauses getSQLFilterClauses() // { // return _sqlFilterClauses; // }", "target": 0}
{"idx": 33442, "func": "INSTANCE VARIABLE RUBY METHODS //", "target": 0}
{"idx": 33443, "func": "no mb || ismbchar(term)", "target": 0}
{"idx": 33444, "func": "hide addTask for TaskContainers", "target": 0}
{"idx": 33445, "func": "TODO: this is kinda gross", "target": 1}
{"idx": 33446, "func": "Get the attribute name: //", "target": 0}
{"idx": 33447, "func": "//SECTION OUTLINE PAINT ////////////////////////////////////////////////", "target": 0}
{"idx": 33448, "func": "wait for the go signal", "target": 0}
{"idx": 33449, "func": "----- additional -----", "target": 0}
{"idx": 33450, "func": "draw the axis label (note that 'state' is passed in and returned)...", "target": 0}
{"idx": 33451, "func": "if the method is extending something, then we have to test if the handler is initialized...", "target": 1}
{"idx": 33452, "func": "make sure this setting exists in the configuration file to facilitate changing:", "target": 0}
{"idx": 33453, "func": "$>: default output handle", "target": 0}
{"idx": 33454, "func": "Bottom buttons bar", "target": 0}
{"idx": 33455, "func": "(non-Javadoc) @see org.columba.mail.imap.IImapServer#warningMessage(java.lang.String)", "target": 0}
{"idx": 33456, "func": "Close any previous logging.", "target": 0}
{"idx": 33457, "func": "the SWTGraphics2D class doesn't handle GradientPaint well, so replace the gradient painter from the default theme with a standard painter...", "target": 0}
{"idx": 33458, "func": "add null entries for any additional slots required.", "target": 0}
{"idx": 33459, "func": "Do search on Enter //$NON-NLS-1$", "target": 0}
{"idx": 33460, "func": "JRubyService", "target": 0}
{"idx": 33461, "func": "there can be only one default in truth, but the model allows more than one.", "target": 0}
{"idx": 33462, "func": "i18n[AboutBoxDialog.error.creditsfileurl=Couldn't retrieve Credits File URL]", "target": 0}
{"idx": 33463, "func": "//{{{ compareChars()", "target": 0}
{"idx": 33464, "func": "we need this for the focus manager", "target": 0}
{"idx": 33465, "func": "Portion of line right after beginning marker", "target": 0}
{"idx": 33466, "func": "-branch", "target": 0}
{"idx": 33467, "func": "if current char is comma, insert line break after it we should be able to find the comma because the range for enum constants includes all trailing comments up to the separator if TargetSourceRangeComputer of ASTRewrite changes, this logic should change to skip comments see org.eclipse.emf.codegen.merge.java.facade.ast.CommentAwareSourceRangeComputer#getEnumConstantSourceRange(ASTNode)", "target": 1}
{"idx": 33468, "func": "This is a private method in Model.", "target": 0}
{"idx": 33469, "func": "let the user know what's going to happen", "target": 0}
{"idx": 33470, "func": "//reset the $loadTestvar", "target": 0}
{"idx": 33471, "func": "set up second pass", "target": 0}
{"idx": 33472, "func": "reuse call event:", "target": 0}
{"idx": 33473, "func": "(non-Javadoc) @see org.columba.core.filter.IFilterList#moveUp(org.columba.core.filter.Filter)", "target": 0}
{"idx": 33474, "func": "set display text - possibly with a mnemonic defined using &", "target": 0}
{"idx": 33475, "func": "negativeItemLabelPositionList;", "target": 0}
{"idx": 33476, "func": "TODO: Not sure whether the above is better in some cases, but the code below is better for both Java Web Start and Eclipse.", "target": 1}
{"idx": 33477, "func": "the 1 is for the stripped sign char", "target": 0}
{"idx": 33478, "func": "//i18n[DumpApplicationCommand.title.aliases=Aliases]", "target": 0}
{"idx": 33479, "func": "Don't save empty comments", "target": 0}
{"idx": 33480, "func": "can happen when switching buffers sometimes", "target": 0}
{"idx": 33481, "func": "//information about all properties in class hierarchy", "target": 0}
{"idx": 33482, "func": "> 16 bits, surrogate needed", "target": 0}
{"idx": 33483, "func": "i18n[xmlReformatter.yes=YES]", "target": 0}
{"idx": 33484, "func": "downloads/plugin directory", "target": 0}
{"idx": 33485, "func": "//If we get here, it could be because we are trying to put a //directory entry that already exists. //For example, we're trying to write \"com\", but a previous //entry from another mergefile was called \"com\". //In that case, just ignore the error and go on to the //next entry.", "target": 0}
{"idx": 33486, "func": "check that two empty datasets are equal", "target": 0}
{"idx": 33487, "func": "can't remove the last file", "target": 0}
{"idx": 33488, "func": "normal closure", "target": 0}
{"idx": 33489, "func": "7!", "target": 0}
{"idx": 33490, "func": "@see org.argouml.model.UseCasesHelper#getAllUseCases(java.lang.Object)", "target": 0}
{"idx": 33491, "func": "get runtime, create jump error, and throw it", "target": 0}
{"idx": 33492, "func": "Get session", "target": 0}
{"idx": 33493, "func": "//setBlinkPorts(false); //make port invisible unless mouse enters", "target": 0}
{"idx": 33494, "func": "//EcoreFactoryImpl", "target": 0}
{"idx": 33495, "func": "Element type currently in force. //", "target": 0}
{"idx": 33496, "func": "Under JDK1.4 an empty JComboBox has an almost zero width.", "target": 0}
{"idx": 33497, "func": "we don't need to worry about any condition in the ON clause here (toFromFragmentString), since anything in the ON condition is already applied to the whole query", "target": 0}
{"idx": 33498, "func": "i.e. eventType == Notification.REMOVE", "target": 0}
{"idx": 33499, "func": "promise to implement zero to N with block", "target": 0}
{"idx": 33500, "func": "\"<?xml \"", "target": 0}
{"idx": 33501, "func": "// JScrollPane sp = new JScrollPane(createDataTypesPanel()); // sp.setPreferredSize(new Dimension(600, 450)); // add(sp, gbc);", "target": 0}
{"idx": 33502, "func": "check if the target file exists in the current directory", "target": 0}
{"idx": 33503, "func": "//it is always thrown as said in Embedded Derby API. //So it is not error it is info", "target": 0}
{"idx": 33504, "func": "prepend", "target": 0}
{"idx": 33505, "func": "Get rid of empty directories on the destination side", "target": 0}
{"idx": 33506, "func": "/////////////////End GEF methods ////////////////////////", "target": 0}
{"idx": 33507, "func": "not that the editor ui only supports max of 3 addresses to edit", "target": 0}
{"idx": 33508, "func": "try cwd first", "target": 0}
{"idx": 33509, "func": "//Inside a BETWEEN ... AND ... expression", "target": 0}
{"idx": 33510, "func": "JButton[] buttons = new JButton[2];", "target": 0}
{"idx": 33511, "func": "add the views.", "target": 0}
{"idx": 33512, "func": "stop clear timer", "target": 0}
{"idx": 33513, "func": "apply transformation", "target": 0}
{"idx": 33514, "func": "TODO should we allow mimetype only?", "target": 1}
{"idx": 33515, "func": "load configuration from persistence", "target": 0}
{"idx": 33516, "func": "Download concurrent resources $NON-NLS-1$", "target": 0}
{"idx": 33517, "func": "begin source and eval", "target": 0}
{"idx": 33518, "func": "get a connection from the pool (thru DriverManager, cfr. Proxool doc)", "target": 0}
{"idx": 33519, "func": "for future compatibility as constructors move toward not accepting metaclass?", "target": 0}
{"idx": 33520, "func": "i18n[TableExportCsvDlg.Cancel=Cancel]", "target": 0}
{"idx": 33521, "func": "//get and clean up innerclass name", "target": 0}
{"idx": 33522, "func": "//deal with plot appearance", "target": 0}
{"idx": 33523, "func": "do nothing //}}}", "target": 0}
{"idx": 33524, "func": "3!", "target": 0}
{"idx": 33525, "func": "//don't need filters for the static loaders", "target": 0}
{"idx": 33526, "func": "// paintNumWaitingGC(g);", "target": 0}
{"idx": 33527, "func": "//Class/genOperation.annotations.insert.javajetinc", "target": 0}
{"idx": 33528, "func": "line 1992", "target": 0}
{"idx": 33529, "func": "INDEX AND ROW SELECT", "target": 0}
{"idx": 33530, "func": "what if we don't want the interval?", "target": 0}
{"idx": 33531, "func": "Mount the glasspane on the component window", "target": 0}
{"idx": 33532, "func": "Look for a single-char work delimiter: //", "target": 0}
{"idx": 33533, "func": "For multipart Content-Types we need to take action (if boundary is nonexistent): Eudora stores content type = multipart even though the message is not really multipart - e.g. because an attachment already has has been decoded by Eudora)", "target": 0}
{"idx": 33534, "func": "Wrapper to convert a JUnit4 class into a TestCase TODO - work out how to convert JUnit4 assertions so they are treated as failures rather than errors", "target": 1}
{"idx": 33535, "func": "This method may be called many times!!", "target": 0}
{"idx": 33536, "func": "test a series with two items", "target": 0}
{"idx": 33537, "func": "close if this buffer is currently visible in the view.", "target": 0}
{"idx": 33538, "func": "i18n[HelpViewerWindow.licences=Licences]", "target": 0}
{"idx": 33539, "func": "\"RENAME VIEW $oldObjectName$ TO $newObjectName$\";", "target": 0}
{"idx": 33540, "func": "We must set res to null now, before sending the event for the transaction, so that we can ignore that event in our sampleOccured method", "target": 0}
{"idx": 33541, "func": "i18n[mysql.selectSingleTable=Must select a single table]", "target": 0}
{"idx": 33542, "func": "never visited, should be ok", "target": 0}
{"idx": 33543, "func": "//note that i parameter is now unused (delete it?)", "target": 1}
{"idx": 33544, "func": "worst case. look for a public String constructor and use it also supports new Whatever(Project, String) as for Path or Reference This is used (deliberately) for all primitives/wrappers other than char and boolean", "target": 0}
{"idx": 33545, "func": "Use the lower case function name. Remember whether we're in a SELECT clause or not.", "target": 0}
{"idx": 33546, "func": "//it is possible that the tree-walking in OuterJoinLoader can get to //an association defined by a subclass, in which case the property-ref //might refer to a property defined on a subclass of the current class //in this case, the table name is not known - this temporary solution //assumes that the property-ref refers to a property of the subclass //table that the association belongs to (a reasonable guess) //TODO: fix this, add: OuterJoinLoadable.getSubclassPropertyTableName(String propertyName)", "target": 1}
{"idx": 33547, "func": "remove the ones already selected (if a perspective is selected)", "target": 0}
{"idx": 33548, "func": "public Collection<Element> getExtendedElements(Object handle) {", "target": 0}
{"idx": 33549, "func": "DigestLibrary", "target": 0}
{"idx": 33550, "func": "Electric borders", "target": 0}
{"idx": 33551, "func": "i18n[laf.lf=L & F]", "target": 0}
{"idx": 33552, "func": "i18n[graph.cm=cm]", "target": 0}
{"idx": 33553, "func": "this is a headeritem from autocompletion", "target": 0}
{"idx": 33554, "func": "@see org.argouml.uml.ui.behavior.state_machines.ActionNewEvent#createEvent(java.lang.Object)", "target": 0}
{"idx": 33555, "func": "Are we processing the first sample?", "target": 0}
{"idx": 33556, "func": "fill the bins", "target": 0}
{"idx": 33557, "func": "build data", "target": 0}
{"idx": 33558, "func": "Method left empty here, but allows subclasses to override", "target": 0}
{"idx": 33559, "func": "Add a new package at the top level, i.e. a model.<p> TODO: ArgoUML currently only supports one model.", "target": 1}
{"idx": 33560, "func": "draw the foreground markers...", "target": 0}
{"idx": 33561, "func": "i18n[dateTypeTimestamp.jdbcEscape=Use JDBC standard escape format ]", "target": 0}
{"idx": 33562, "func": "return len - n;", "target": 0}
{"idx": 33563, "func": "OnlyOnce inside InterleaveController", "target": 0}
{"idx": 33564, "func": "Returns whether the given character is in the set specified by the given bitmask.", "target": 0}
{"idx": 33565, "func": "//do two passes, for collection property-ref!", "target": 0}
{"idx": 33566, "func": "@see java.awt.datatransfer.ClipboardOwner#lostOwnership( java.awt.datatransfer.Clipboard, java.awt.datatransfer.Transferable)", "target": 0}
{"idx": 33567, "func": "//{{{ ViewOptionPane constructor", "target": 0}
{"idx": 33568, "func": "public", "target": 0}
{"idx": 33569, "func": "Constructor for TestElement tests", "target": 0}
{"idx": 33570, "func": "loading ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 33571, "func": "//{{{ isDragEnabled() method", "target": 0}
{"idx": 33572, "func": "when the test is started by the build.xml of ant if the property tests.and.ant.share.classloader is not set in the build.xml a sysproperty with name tests.and.ant.share.classloader and value ${tests.and.ant.share.classloader} will be set we are trying to catch this here.", "target": 0}
{"idx": 33573, "func": "Holds details of which sample attributes to save. The pop-up dialogue for this is created by the class SavePropertyDialog, which assumes: For each field XXX - methods have the signature \"boolean saveXXX()\" - a corresponding \"void setXXX(boolean)\" method - messages.properties contains the key save_XXX", "target": 0}
{"idx": 33574, "func": "setBorder(BorderFactory.createEmptyBorder(1, 2, 1, 2));", "target": 0}
{"idx": 33575, "func": "Can't use for loop here because we remove elements", "target": 0}
{"idx": 33576, "func": "@see org.argouml.uml.diagram.layout.Layouter#getObjects()", "target": 0}
{"idx": 33577, "func": "new JEditLauncherOSTask(installer)", "target": 0}
{"idx": 33578, "func": "This causes the factory to instantiate the desired class.", "target": 0}
{"idx": 33579, "func": "//{{{ getHighlightInterval() method", "target": 0}
{"idx": 33580, "func": "//select SQL", "target": 0}
{"idx": 33581, "func": "generate default unique id", "target": 0}
{"idx": 33582, "func": "Update the workbench's knowledge of the file's contents. //", "target": 0}
{"idx": 33583, "func": "Draw down arrow, offset if dropped. //", "target": 0}
{"idx": 33584, "func": "//reset progress bar", "target": 0}
{"idx": 33585, "func": "/////////////////////////////////////////////////////////////////////////Execute method ///////////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 33586, "func": "returns empty array for null", "target": 0}
{"idx": 33587, "func": "rename folder", "target": 0}
{"idx": 33588, "func": "i18n[oracle.buffer.getsPerRow=Buffer Gets per Row]", "target": 0}
{"idx": 33589, "func": "Fetch properties", "target": 0}
{"idx": 33590, "func": "-1 no match; 0 it is dot file not extension", "target": 0}
{"idx": 33591, "func": "add a ToDoItem", "target": 0}
{"idx": 33592, "func": "CREATE VIEW viewName AS definition;", "target": 0}
{"idx": 33593, "func": "ATTRIBUTES", "target": 0}
{"idx": 33594, "func": "TestDataGenerator.generateTestData();", "target": 0}
{"idx": 33595, "func": "we want to return the context that is actually in the map if it's the first put we will have a null result", "target": 0}
{"idx": 33596, "func": "send as text/html", "target": 0}
{"idx": 33597, "func": "Check if a string is a valid JMeter 'expression'. <p> The current implementation is very basic: it just accepts any string containing \"${\" as a valid expression. TODO: improve, but keep returning true for \"${}\".", "target": 1}
{"idx": 33598, "func": "try a netware-volume length path w/forward slash, see how it is handled", "target": 0}
{"idx": 33599, "func": "//skip non-abs. paths if basedir == null:", "target": 0}
{"idx": 33600, "func": "return the expected format for this data default to hex", "target": 0}
{"idx": 33601, "func": "set the whole initializer", "target": 0}
{"idx": 33602, "func": "return a bogus number", "target": 0}
{"idx": 33603, "func": "XXX //e.printStackTrace();", "target": 0}
{"idx": 33604, "func": "-------------TreeSelectionListener implementation -----------", "target": 0}
{"idx": 33605, "func": "is this right?", "target": 1}
{"idx": 33606, "func": "//{{{ autosave() method", "target": 0}
{"idx": 33607, "func": "The second time that schemas are asked for, return two", "target": 0}
{"idx": 33608, "func": "TODO: assumes public, user pref for default visibility? //do I have to check the namespace here? (Toby)", "target": 0}
{"idx": 33609, "func": "Return a String representation of the cipher text", "target": 0}
{"idx": 33610, "func": "init the callstack.", "target": 0}
{"idx": 33611, "func": "non existent in UML1", "target": 0}
{"idx": 33612, "func": "How many characters have we read?", "target": 0}
{"idx": 33613, "func": "Create the EPackage on demand. //", "target": 0}
{"idx": 33614, "func": "3130..318F;", "target": 0}
{"idx": 33615, "func": "////////////////CONSTANT RUBY METHODS ////////////////", "target": 0}
{"idx": 33616, "func": "We don't want to show expert beans in the menus unless we're in expert mode:", "target": 0}
{"idx": 33617, "func": "i18n[exportconfig.fileSavedTo={0} saved to {1}]", "target": 0}
{"idx": 33618, "func": "Create a frame controller for this view view = null => defaults specified by frame controller is used", "target": 0}
{"idx": 33619, "func": "Add grandchild.", "target": 0}
{"idx": 33620, "func": "i18n[mysql.btRemove=Remove]", "target": 0}
{"idx": 33621, "func": "Saves the error if one occurs", "target": 0}
{"idx": 33622, "func": "Hook up the MemoryPointer class if its not already there //", "target": 0}
{"idx": 33623, "func": "TODO check conformancy to specification", "target": 1}
{"idx": 33624, "func": "e.g. Long.MAX_VALUE", "target": 0}
{"idx": 33625, "func": "//{{{ _getLineManager() method", "target": 0}
{"idx": 33626, "func": "Validates property", "target": 0}
{"idx": 33627, "func": "ID UNSAVED-VALUE", "target": 0}
{"idx": 33628, "func": "//convert from a package to a path", "target": 0}
{"idx": 33629, "func": "Don't change the string, as it is used in JMX files $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$", "target": 0}
{"idx": 33630, "func": "//reader.reset(start); //return false;", "target": 0}
{"idx": 33631, "func": "ignore because properties file is not required", "target": 0}
{"idx": 33632, "func": "i18n[ViewLogsSheet.error.setcaret=Error positioning caret in log text component]", "target": 0}
{"idx": 33633, "func": "// builder.addGridded(new JButton(\"Alter\")); // builder.addRelatedGap();", "target": 0}
{"idx": 33634, "func": "1 because we've already 'seen' the first bracket", "target": 0}
{"idx": 33635, "func": "Get the target object from the item widget and the mouse location in it. //", "target": 0}
{"idx": 33636, "func": "For CreateChildCommand, we will find the owner by calling EditingDomain.getParent() on the first selected object", "target": 0}
{"idx": 33637, "func": "Create a ClassLoader for all the LAF jars. Install all Look and Feels into the UIManager.", "target": 0}
{"idx": 33638, "func": "Create commands to do parentMapping.getNested().removeAll(siblingsToReparent). //", "target": 0}
{"idx": 33639, "func": "//return toTimelineValue(dateDomainValue.getTime());", "target": 0}
{"idx": 33640, "func": "i18n[HibernateTabController.title=Hibernate]", "target": 0}
{"idx": 33641, "func": "Get all our sub Figs and hit them with the big stick too", "target": 0}
{"idx": 33642, "func": "handle the case when there is a replace edit that covers these lines", "target": 0}
{"idx": 33643, "func": "if package", "target": 0}
{"idx": 33644, "func": "Some kind of field access?", "target": 0}
{"idx": 33645, "func": "We get the AuthManager and pass it to the WSDLHelper once the sampler is updated to Axis, all of this stuff should not be necessary. Now I just need to find the time and motivation to do it.", "target": 0}
{"idx": 33646, "func": "---- telephoneTextField3 ----", "target": 0}
{"idx": 33647, "func": "reuse Opaque..., just set it's attributes", "target": 0}
{"idx": 33648, "func": "end class ActionCreatePseudostate", "target": 0}
{"idx": 33649, "func": "There should be one row in the data, so try to move to it", "target": 0}
{"idx": 33650, "func": "alias subject", "target": 0}
{"idx": 33651, "func": "\"-L\" use local tests only String cmd = \"spamassassin -L\"; String cmd = \"spamc -c -L\";", "target": 0}
{"idx": 33652, "func": "Incomplete tokens", "target": 0}
{"idx": 33653, "func": "@see org.argouml.cognitive.critics.Critic#isEnabled()", "target": 0}
{"idx": 33654, "func": "For the .uml files in the eclipse jar files, we need this:", "target": 0}
{"idx": 33655, "func": "SSS FIXME: What happens to the add class in this case??", "target": 1}
{"idx": 33656, "func": "PR 21996", "target": 0}
{"idx": 33657, "func": "Obtain message formats: //$NON-NLS-1$ //$NON-NLS-1$", "target": 0}
{"idx": 33658, "func": "TODO: It's perhaps just a coincidence that all the channels for which we should raise are instanceof SelectableChannel, since stdio is not...so this bothers me slightly. -CON", "target": 1}
{"idx": 33659, "func": "can't use -v and stdin", "target": 0}
{"idx": 33660, "func": "calculate 9am on the first Monday after 2001-01-01", "target": 0}
{"idx": 33661, "func": "//{{{ setMultipleSelectionColor() method", "target": 0}
{"idx": 33662, "func": "//{{{ directoryLoaded() method", "target": 0}
{"idx": 33663, "func": "If there are bits of an association class then remember their location and path.", "target": 0}
{"idx": 33664, "func": "line 1779", "target": 0}
{"idx": 33665, "func": "//{{{ loadTOC() method", "target": 0}
{"idx": 33666, "func": "1. Find the local release.xml file. Bail with exception if we cannot find it.", "target": 0}
{"idx": 33667, "func": "//verify special operations", "target": 0}
{"idx": 33668, "func": "initialize global class loader", "target": 0}
{"idx": 33669, "func": "Delegate the final check to the typeEditor:", "target": 0}
{"idx": 33670, "func": "this page intentionally left blank :)", "target": 0}
{"idx": 33671, "func": "//{{{ getLineSubregionCount() method", "target": 0}
{"idx": 33672, "func": "//catch invalidness", "target": 0}
{"idx": 33673, "func": "now, any collections that are initialized inside this block do not get updated - they are ignored until the next flush", "target": 0}
{"idx": 33674, "func": "ignore it; the incoming property could not be found so we cannot be sure what to do here. At the very least, the safest is to simply not apply any dereference toggling...", "target": 1}
{"idx": 33675, "func": "number of variables in this scope representing optional arguments", "target": 0}
{"idx": 33676, "func": "end class LoadModules", "target": 0}
{"idx": 33677, "func": "////////////////////////////////////////////////////////////////////////////////////////////////////////////The ctrl enter short cut in the Netbeans editor is set in org.netbeans.editor.ext.BaseKit to the org.netbeans.editor.ext.BaseKit.SplitLineAction. Since the ctrl enter shorcut is a basic SQuirreL short cut and is defined via the main menu action we must remove this binding here.", "target": 0}
{"idx": 33678, "func": "two column", "target": 0}
{"idx": 33679, "func": "Set the attributes of the property reference expression.", "target": 0}
{"idx": 33680, "func": "The first point is (x, this.baseYValue)", "target": 0}
{"idx": 33681, "func": "return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));", "target": 0}
{"idx": 33682, "func": "For example, if the current fileset is a directory, C+g will find the next match within that fileset. This can be annoying if you have just done an incremental search and want the next occurrence in the current buffer.", "target": 0}
{"idx": 33683, "func": "Build the table types returned by PostgreSQL", "target": 0}
{"idx": 33684, "func": "Construct a CheckItem", "target": 0}
{"idx": 33685, "func": "//$NON-NLS-1$ TODO should this be variable?", "target": 1}
{"idx": 33686, "func": "//{{{ selectWord() method", "target": 0}
{"idx": 33687, "func": "md = new MemoryDiagnostics();", "target": 0}
{"idx": 33688, "func": "lafClass == null ||", "target": 0}
{"idx": 33689, "func": "line 1433", "target": 0}
{"idx": 33690, "func": "//{{{ isFoldStart() method", "target": 0}
{"idx": 33691, "func": "Adds a file to the output stream.", "target": 0}
{"idx": 33692, "func": "Functor count = 0 is handled specially", "target": 0}
{"idx": 33693, "func": "Bug #1757076 always use false unless user specifies otherwise; this breaks date editing in Derby (possibly DB2 as well)", "target": 1}
{"idx": 33694, "func": "//{{{ stringsEqual() method", "target": 0}
{"idx": 33695, "func": "//{{{ getBelowPosition() method", "target": 0}
{"idx": 33696, "func": "$NON-NLS-1$ //- JMX file attributes", "target": 0}
{"idx": 33697, "func": "type is correct here", "target": 0}
{"idx": 33698, "func": "retrieve total result count", "target": 0}
{"idx": 33699, "func": "append the err and output streams to the log", "target": 0}
{"idx": 33700, "func": "get plugin ID", "target": 0}
{"idx": 33701, "func": "//{{{ check if current character is a word separator", "target": 0}
{"idx": 33702, "func": "Already failed", "target": 0}
{"idx": 33703, "func": "//viewer.removeInternalFrameListener(_lis);", "target": 0}
{"idx": 33704, "func": "Write element close", "target": 0}
{"idx": 33705, "func": "Now that we have run the view definition query, and retrieved the SQL that is the body of the view (that is, it's query part minus the \"CREATE VIEW AS\" prefix), we can drop the view.", "target": 0}
{"idx": 33706, "func": "Routine to perform the output (also used by __logn() function)", "target": 0}
{"idx": 33707, "func": "//{{{ getAutosaveFile() method", "target": 0}
{"idx": 33708, "func": "//{{{ loadToolBars() method", "target": 0}
{"idx": 33709, "func": "//{{{ allowWrite() method", "target": 0}
{"idx": 33710, "func": "Remember the system id of our root document so that we can write out profiles and linked models to a different file if requested", "target": 0}
{"idx": 33711, "func": "getting next node", "target": 0}
{"idx": 33712, "func": "@bgen(jjtree)", "target": 0}
{"idx": 33713, "func": "//TODO: terrible implementation!", "target": 1}
{"idx": 33714, "func": "zeros", "target": 0}
{"idx": 33715, "func": "cancel command execution/updateGUI methods, if folder or message selection has been modified", "target": 0}
{"idx": 33716, "func": "down-pointing triangle", "target": 0}
{"idx": 33717, "func": "standard sql92 functions", "target": 0}
{"idx": 33718, "func": "block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : \"argsNode is not null\";", "target": 0}
{"idx": 33719, "func": "the process is not terminated, if this is really a timeout and not a manual stop then kill it.", "target": 0}
{"idx": 33720, "func": "If we're drawing from an edge", "target": 0}
{"idx": 33721, "func": "Return the configured component", "target": 0}
{"idx": 33722, "func": "remove unneeded nodes", "target": 0}
{"idx": 33723, "func": "for now, just \"re-flatten\" the metamodel since this is temporary stuff anyway (HHH-1907)", "target": 0}
{"idx": 33724, "func": "any errors here result in an un-editable table, which should be no problem", "target": 0}
{"idx": 33725, "func": "i18n[mysql.btCancel=Cancel]", "target": 0}
{"idx": 33726, "func": "empty string ('') seems to be represented as null in some drivers. Not sure if this is the best thing to do here, but it fixes an issue where SQL returns is set default to '', when it is already null.", "target": 1}
{"idx": 33727, "func": "close without removing from finalizers", "target": 0}
{"idx": 33728, "func": "Compute the index within that bit pattern for this feature ID and fetch that bit at that index. //", "target": 0}
{"idx": 33729, "func": "Test mail button", "target": 0}
{"idx": 33730, "func": "Ecore2EcoreMappingRoot", "target": 0}
{"idx": 33731, "func": "Generate the grid", "target": 0}
{"idx": 33732, "func": "select message in message list", "target": 0}
{"idx": 33733, "func": "handle item label drawing, now that we know all the bars have been drawn...", "target": 0}
{"idx": 33734, "func": "//register collection role", "target": 0}
{"idx": 33735, "func": "FILE MENU //$NON-NLS-1$", "target": 0}
{"idx": 33736, "func": "Parse the arguments in querystring, assuming specified encoding for values", "target": 0}
{"idx": 33737, "func": "Map of constants defined in this scope (not valid for methods!)", "target": 0}
{"idx": 33738, "func": "deactivate this test as imports within targets are not allowed", "target": 0}
{"idx": 33739, "func": "should perhaps be log.warn, but this causes the client-server test to fail", "target": 0}
{"idx": 33740, "func": "//{{{ getLogListModel() method", "target": 0}
{"idx": 33741, "func": "//private JButton taskButton;", "target": 0}
{"idx": 33742, "func": "line 1119", "target": 0}
{"idx": 33743, "func": "couldn't find compiler - try to find tools.jar based on java.home setting", "target": 0}
{"idx": 33744, "func": "Make a hash of the interface hashcodes in order to cache them", "target": 0}
{"idx": 33745, "func": "BufferedImage img =", "target": 0}
{"idx": 33746, "func": "remove disabled column", "target": 0}
{"idx": 33747, "func": "Test for a match, and push the character back if the match fails.", "target": 0}
{"idx": 33748, "func": "//{{{ saveCaretInfo() method", "target": 0}
{"idx": 33749, "func": "@throws SAXException when things go wrong with SAX @throws IOException when there's an IO error @throws ParserConfigurationException when the parser finds wrong syntax TODO: Unused?", "target": 1}
{"idx": 33750, "func": "need to clear because the", "target": 0}
{"idx": 33751, "func": "Skip the example samplers ...", "target": 0}
{"idx": 33752, "func": "end class ActionPrint", "target": 0}
{"idx": 33753, "func": "line 1234", "target": 0}
{"idx": 33754, "func": "Don't use bit(1) for boolean as Frontbase then reports it as BINARY type instead of BIT.", "target": 0}
{"idx": 33755, "func": "$': string after last match", "target": 0}
{"idx": 33756, "func": "Delete the model and make sure everything inside goes with it", "target": 0}
{"idx": 33757, "func": "non-ascii", "target": 0}
{"idx": 33758, "func": "@param message", "target": 0}
{"idx": 33759, "func": "check its exit value", "target": 0}
{"idx": 33760, "func": "Number of characters in 'buf' array. InputStream.read() doesn't always fill the array (eg, the file size is not a multiple of IOBUFSIZE, or it is a GZipped file, etc)", "target": 0}
{"idx": 33761, "func": "distribute submenu", "target": 0}
{"idx": 33762, "func": "(NOT (EQ a b) ) => (NE a b)", "target": 0}
{"idx": 33763, "func": "register statusbar at global taskmanager", "target": 0}
{"idx": 33764, "func": "might come in handy useful some time", "target": 0}
{"idx": 33765, "func": "move pos to last character of match sequence", "target": 0}
{"idx": 33766, "func": "//{{{ IconListEntry class", "target": 0}
{"idx": 33767, "func": "1024 byte 1024 byte 256 byte", "target": 0}
{"idx": 33768, "func": "swallow as we've hit the max class version that we have", "target": 0}
{"idx": 33769, "func": "// generate label for menuitem", "target": 0}
{"idx": 33770, "func": "Called from ctor, so must be private (or final, but it does not seem useful elsewhere)", "target": 0}
{"idx": 33771, "func": "If we can't determine the parent. //", "target": 0}
{"idx": 33772, "func": "//1i8n[MetaDataDecoratorDataSet.classNameLabel=JDBC Driver CLASSNAME]", "target": 0}
{"idx": 33773, "func": "draw border", "target": 0}
{"idx": 33774, "func": "give it some time to display", "target": 0}
{"idx": 33775, "func": "check whether this shortcut already exists", "target": 0}
{"idx": 33776, "func": "//{{{ We need these initializations very early on", "target": 0}
{"idx": 33777, "func": "Entities aren't supported for DOM.", "target": 0}
{"idx": 33778, "func": "NOTE: Because we're using ASTUtil.createParent(), the tree must be created from the bottom up. IS EMPTY x => (EXISTS (QUERY (SELECT_FROM (FROM x) ) ) )", "target": 0}
{"idx": 33779, "func": "Data types", "target": 0}
{"idx": 33780, "func": "setting the icon", "target": 0}
{"idx": 33781, "func": "tabs.setMinimumSize(new Dimension(300, 250));", "target": 0}
{"idx": 33782, "func": "//stores the action command into the UMLPlainTextDocument //class which is also used //for setProperty and getProperty", "target": 0}
{"idx": 33783, "func": "//{{{ Some constants", "target": 0}
{"idx": 33784, "func": "//setupTabbedPane((ObjectTreeTabbedPane)it.next());", "target": 0}
{"idx": 33785, "func": "//next test for a 304 result (HTTP only)", "target": 0}
{"idx": 33786, "func": "(non-Javadoc) @see org.columba.chat.ui.roaster.IRoasterTree#getSelected()", "target": 0}
{"idx": 33787, "func": "//@GuardedBy(\"myTotals\")", "target": 0}
{"idx": 33788, "func": "Time class methods", "target": 0}
{"idx": 33789, "func": "@see org.omg.uml.diagraminterchange.ADiagramElementProperty#getProperty( org.omg.uml.diagraminterchange.DiagramElement)", "target": 0}
{"idx": 33790, "func": "//EcorePackage", "target": 0}
{"idx": 33791, "func": "Major Minor", "target": 0}
{"idx": 33792, "func": "This class provides a text field that can be used to display the text of all Comments associated with an annotated ModelElement. TODO: This could use more work. Currently it returns all Comment.name or Comment.body attributes concatenated together into a single read-only document. @since 1 Nov 2005 @author Tom Morris (tfmorris@gmail.com)", "target": 1}
{"idx": 33793, "func": "Text drag and drop", "target": 0}
{"idx": 33794, "func": "need to keep the package private version for backwards compatibility", "target": 0}
{"idx": 33795, "func": "xxx shouldn't check if valid option variable", "target": 1}
{"idx": 33796, "func": "Label count Mean median 90% Min Max Error %age Throughpur pageSize", "target": 0}
{"idx": 33797, "func": "all good", "target": 0}
{"idx": 33798, "func": "set flag true if negative values not allowed and the lower bound is between 0 and 10:", "target": 0}
{"idx": 33799, "func": "Expand buffer if necessary.", "target": 0}
{"idx": 33800, "func": "Ensure that directory URLs end in \"/\" $NON-NLS-1$ $NON-NLS-1$", "target": 0}
{"idx": 33801, "func": "end period is not in original series this is first item AFTER end period so this is last item BEFORE end", "target": 0}
{"idx": 33802, "func": "Mainly for bsh.EvalError", "target": 0}
{"idx": 33803, "func": "All currently installed artifacts will be marked with INSTALL action.", "target": 0}
{"idx": 33804, "func": "generated properties can never be insertable...", "target": 0}
{"idx": 33805, "func": "//{{{ getTree() method", "target": 0}
{"idx": 33806, "func": "Consume the rest of the appropriate children. //", "target": 0}
{"idx": 33807, "func": "FeatureChange", "target": 0}
{"idx": 33808, "func": "parse all message files to recreate the header cache", "target": 0}
{"idx": 33809, "func": "Dump session properties.", "target": 0}
{"idx": 33810, "func": "i18n[DownloadStatusEventHandler.fileLabel=File]", "target": 0}
{"idx": 33811, "func": "Single '~' as whole path to expand", "target": 0}
{"idx": 33812, "func": "we're removing from the first visible to after the last visible", "target": 0}
{"idx": 33813, "func": "view = editor.getView();", "target": 0}
{"idx": 33814, "func": "Strings used to set up and process actions in this menu The strings need to agree with the those in the Action routines", "target": 0}
{"idx": 33815, "func": "i18n[mssql.monitorAsOf=Monitor (as of {0,date,full})]", "target": 0}
{"idx": 33816, "func": "if a source extension is specified, try all source extensions", "target": 0}
{"idx": 33817, "func": "encapsulate bodytext in HTML code", "target": 0}
{"idx": 33818, "func": "Create move commands for all the objects in the collection. //", "target": 0}
{"idx": 33819, "func": "Test sending data as UTF-8, with values similar to __VIEWSTATE parameter that .net uses, with values urlencoded, but the always encode set to false for the arguments This is how the HTTP Proxy server adds arguments to the sampler", "target": 0}
{"idx": 33820, "func": "enable timer", "target": 0}
{"idx": 33821, "func": "line 515", "target": 0}
{"idx": 33822, "func": "//Yuck:", "target": 1}
{"idx": 33823, "func": "FIXME: This determine module is in a strange location and should somehow be in block", "target": 1}
{"idx": 33824, "func": "//{{{ getBaseURL() method", "target": 0}
{"idx": 33825, "func": "Names of properties that are handled specially", "target": 0}
{"idx": 33826, "func": "we are done - clear status text with a delay (if this is not done, the initial text will stay in case no messages were sent)", "target": 0}
{"idx": 33827, "func": "add in the warnings", "target": 0}
{"idx": 33828, "func": "The property is a component...", "target": 0}
{"idx": 33829, "func": "test null source", "target": 0}
{"idx": 33830, "func": "i18n[popupeditableIoPanel.exportError2=Export Error]", "target": 0}
{"idx": 33831, "func": "Check to see if the string is a file uri.", "target": 0}
{"idx": 33832, "func": "XXX I really don't like this - the XML processor is still too 'involved' in the processing. A better solution (IMO) would be to create UE for Project and Target too, and then process the tree and have Project/Target deal with its attributes ( similar with Description ). If we eventually switch to ( or add support for ) DOM, things will work smoothly - UE can be avoided almost completely ( it could still be created on demand, for backward compatibility )", "target": 1}
{"idx": 33833, "func": "some server have a bogus apop try user/pass to check if the password is correct", "target": 0}
{"idx": 33834, "func": "still 2", "target": 0}
{"idx": 33835, "func": "only arrays that are \"lightweight\" are being used as args arrays", "target": 0}
{"idx": 33836, "func": "we only release the connection", "target": 0}
{"idx": 33837, "func": "Delete all old temporary files", "target": 0}
{"idx": 33838, "func": "access flags", "target": 0}
{"idx": 33839, "func": "The split config is recorded in a simple RPN \"language\".", "target": 0}
{"idx": 33840, "func": "i18n[sqlval.info=This plugin uses version 1.0 of the SQL Validator Web Service developed by MimerSQL http://sqlvalidator.mimer.com. The SQL Statement is stored anonymously to be used by the ISO SQL Standards committee.]", "target": 0}
{"idx": 33841, "func": "checkcast cast the bean into a raw bean", "target": 0}
{"idx": 33842, "func": "Update with changed Bean class", "target": 0}
{"idx": 33843, "func": "//{{{ getParagraphElement() method", "target": 0}
{"idx": 33844, "func": "convert to dot-separated format if necessary...", "target": 0}
{"idx": 33845, "func": "check if there is no OCL_END; if so, the critic expression is not correct and can not be expanded", "target": 0}
{"idx": 33846, "func": "default: serial download embedded resources", "target": 0}
{"idx": 33847, "func": "XXX: does this really belong here?", "target": 1}
{"idx": 33848, "func": "String sourceSchema = null; MySQL uses catalogs instead of schemas", "target": 0}
{"idx": 33849, "func": "//Do not process this file", "target": 0}
{"idx": 33850, "func": "//{{{ UrlVFS constructor", "target": 0}
{"idx": 33851, "func": "line 1448", "target": 0}
{"idx": 33852, "func": "Should we use java.naming.security.[principal|credentials] to create the QueueConnection?", "target": 1}
{"idx": 33853, "func": "@see org.argouml.uml.diagram.state.ui.FigStateVertex#initNotationProviders(java.lang.Object)", "target": 0}
{"idx": 33854, "func": "Returns the classpath entries that match the search list of jars and paths", "target": 0}
{"idx": 33855, "func": "If a new collection was allocated, continue to populate it. //", "target": 0}
{"idx": 33856, "func": "PR: Hack for ant-type value an ant-type is a component name which can be namespaced, need to extract the name and convert from qualified name to uri/name", "target": 1}
{"idx": 33857, "func": "fire in EDT", "target": 0}
{"idx": 33858, "func": "Add the Classpath before the \"internal\" one.", "target": 0}
{"idx": 33859, "func": "This pop is safe because a section couldn't have been started without an include that pushed. //", "target": 0}
{"idx": 33860, "func": "call normal shutdown (wait ending all tasks)", "target": 0}
{"idx": 33861, "func": "line 1587", "target": 0}
{"idx": 33862, "func": "//{{{ setQuickCopyEnabled() method", "target": 0}
{"idx": 33863, "func": "Convert to an EReference. //", "target": 0}
{"idx": 33864, "func": "Should this also fail the sample? Can happen for incorrect XPath expression", "target": 1}
{"idx": 33865, "func": "//{{{ getHighlightDigits() method", "target": 0}
{"idx": 33866, "func": "Register for name changes, added extensionPoints and abstract makes the text italic. All Figs need to listen to \"remove\", too:", "target": 0}
{"idx": 33867, "func": "i18n[codeCompletion.UDFWithParams=user defined function with parameter info: myFunct(<IN INTEGER tid>)]", "target": 0}
{"idx": 33868, "func": "hack so that 'select all' does not change current buffer", "target": 1}
{"idx": 33869, "func": "just push the same empty scope, since we won't use one", "target": 0}
{"idx": 33870, "func": "unsupported.", "target": 0}
{"idx": 33871, "func": "//Now, we link it to the modelelements which are represented by FigNode", "target": 0}
{"idx": 33872, "func": "Set the title for the first tab //$NON-NLS-1$ Add the other tabs if not present $NON-NLS-1$ $NON-NLS-1$", "target": 0}
{"idx": 33873, "func": "second point is outside, so we update it against one of the four sides then continue", "target": 0}
{"idx": 33874, "func": "Junk flag", "target": 0}
{"idx": 33875, "func": "Mocks", "target": 0}
{"idx": 33876, "func": "Helper methods N.B. setStartTime must be called before setEndTime setStartTime is used by HTTPSampleResult to clone the parent sampler and allow the original start time to be kept", "target": 0}
{"idx": 33877, "func": "//{{{ updateSize() method", "target": 0}
{"idx": 33878, "func": "Generate the delegate methods", "target": 0}
{"idx": 33879, "func": "//negative values are allowed", "target": 0}
{"idx": 33880, "func": "The following constants capture pre-known static call sites -- used to implement ruby internals", "target": 0}
{"idx": 33881, "func": "delete plugin from disk", "target": 0}
{"idx": 33882, "func": "TRY MOVING IN A SIMPLE MANER", "target": 0}
{"idx": 33883, "func": "the UIDS start UIDNext till UIDNext + uids.length", "target": 0}
{"idx": 33884, "func": "one builder for all requests in a thread", "target": 0}
{"idx": 33885, "func": "i18n[BookmarksAccessor.bookmarksPluginNeeded=Running bookmarks is only available with the Bookmarks Plugin.\\nGet the plugin from www.squirrelsql.org. It's free.]", "target": 0}
{"idx": 33886, "func": "Listen for a RemoveAssociationEvent between the comment and the annotated element. When recieved delete the CommentEdge and this FigEdgeNote. @see org.argouml.uml.diagram.ui.FigEdgeModelElement#modelChanged(java.beans.PropertyChangeEvent)", "target": 0}
{"idx": 33887, "func": "A critic to detect when a classifier has to many operations). <p> TODO: exclude getter and setter operations from count", "target": 1}
{"idx": 33888, "func": "//{{{ updateGutterBorders() method", "target": 0}
{"idx": 33889, "func": "@see Observable#notifyObservers()", "target": 0}
{"idx": 33890, "func": "TODO: The following can be used when we drop Java 5 support or when an ImageIO GIF writer plugin is bundled cmd = new SaveGIFAction2(Translator.localize(\"action.save-gif\"));", "target": 0}
{"idx": 33891, "func": "do layout", "target": 0}
{"idx": 33892, "func": "We don't want to copy insert an object before or after itself... //", "target": 0}
{"idx": 33893, "func": "(MModelElement)", "target": 0}
{"idx": 33894, "func": "Original (rather odd) behaviour start at the end", "target": 0}
{"idx": 33895, "func": "Map of translations for tags; only created if there is at least one tag and a ResourceBundle has been provided.", "target": 0}
{"idx": 33896, "func": "for Thread Pool for resources but no need to use a special value?", "target": 0}
{"idx": 33897, "func": "delete Messages which have this as sender or receiver", "target": 0}
{"idx": 33898, "func": "//now render the select clause", "target": 0}
{"idx": 33899, "func": "Returns the lower half bitmask for all ASCII characters between the two given characters, inclusive.", "target": 0}
{"idx": 33900, "func": "Get the default trust managers", "target": 0}
{"idx": 33901, "func": "Strip off the O_ prefix, so they become File::RDONLY, and so on", "target": 0}
{"idx": 33902, "func": "DotNode uses null here...", "target": 0}
{"idx": 33903, "func": "try a Double.POSITIVE_INFINITY", "target": 0}
{"idx": 33904, "func": "mark it as selected", "target": 0}
{"idx": 33905, "func": "renderers...", "target": 0}
{"idx": 33906, "func": "@see org.tigris.gef.graph.GraphListener#edgeRemoved(org.tigris.gef.graph.GraphEvent)", "target": 0}
{"idx": 33907, "func": "downloads/core directory", "target": 0}
{"idx": 33908, "func": "generate id select fragment and then property select fragment for each expression, just like generateSelectFragments().", "target": 0}
{"idx": 33909, "func": "add a message when no request data (ex. Java request)", "target": 0}
{"idx": 33910, "func": "check arity", "target": 0}
{"idx": 33911, "func": "Process characters before first star", "target": 0}
{"idx": 33912, "func": "unhappy about this being public ... is there a better way?", "target": 1}
{"idx": 33913, "func": "the shortcut has already been assigned to another action!", "target": 0}
{"idx": 33914, "func": "if we could not identify which table to edit, just return", "target": 0}
{"idx": 33915, "func": "//TODO: to handle concurrent writes correctly, this should return a Lock to the client", "target": 1}
{"idx": 33916, "func": "@see org.tigris.gef.event.ModeChangeListener#modeChange(org.tigris.gef.event.ModeChangeEvent)", "target": 0}
{"idx": 33917, "func": "this.file = F;", "target": 0}
{"idx": 33918, "func": "Is it an exception wrapped in a JavaScriptException?", "target": 1}
{"idx": 33919, "func": "if no text is specified, we are done now", "target": 0}
{"idx": 33920, "func": "alter table foo add constraint foocon UNIQUE (myid)", "target": 0}
{"idx": 33921, "func": "we can't use the following valueOf() method, because it won't compile with JDK1.4 this.colorsPool.get(Integer.valueOf(awtColor.getRGB()));", "target": 0}
{"idx": 33922, "func": "i18n[PreferencesPanel.useCustomQTLabel=Use Custom Query Tokenizer]", "target": 0}
{"idx": 33923, "func": "Used by the copy functions. Do not call this function directly. TODO: template parameters, default type TODO: constraining elements TODO: flows, dependencies, comments, bindings, contexts ??? TODO: contents, residences ??? @param source the source me @param target the target me", "target": 0}
{"idx": 33924, "func": "ignore if already added. see comment in loadMacros().", "target": 0}
{"idx": 33925, "func": "TODO: This does not belong here - use getImportedElement.", "target": 1}
{"idx": 33926, "func": "TODO do tests for navigation to association classes (8.5.5), even though it is not yet supported", "target": 1}
{"idx": 33927, "func": "a and b should be equal", "target": 0}
{"idx": 33928, "func": "line 484", "target": 0}
{"idx": 33929, "func": "32-bit encodings", "target": 0}
{"idx": 33930, "func": "add a variable position for each of the columns", "target": 0}
{"idx": 33931, "func": "TODO: Add IR instructions for checking method arity! s.getVariableCompiler().checkMethodArity(required, opt, rest);", "target": 1}
{"idx": 33932, "func": "@see org.argouml.cognitive.critics.Critic#critique(java.lang.Object, org.argouml.cognitive.Designer)", "target": 0}
{"idx": 33933, "func": "6!", "target": 0}
{"idx": 33934, "func": "// double headerWidth = tableHeader.getWidth() scale;", "target": 0}
{"idx": 33935, "func": "Just get the stream from the URL. //", "target": 0}
{"idx": 33936, "func": "Remove the core items since they are the most recent, and the user is not allowed to remove them", "target": 0}
{"idx": 33937, "func": "RETURN ESCAPE \\r", "target": 0}
{"idx": 33938, "func": "en fr de $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ ja zh_CN zh_TW", "target": 0}
{"idx": 33939, "func": "TODO: why this: .setResult();", "target": 0}
{"idx": 33940, "func": "TODO: Someday, enable.", "target": 1}
{"idx": 33941, "func": "//only necessary for postgre < 7.4 //http://anoncvs.postgresql.org/cvsweb.cgi/pgsql/doc/src/sgml/ref/create_sequence.sgml", "target": 0}
{"idx": 33942, "func": "FIXME: add setSeriesItemURLGenerator(int, CategoryURLGenerator, boolean)?", "target": 1}
{"idx": 33943, "func": "//{{{ updateMiscStatus() method", "target": 0}
{"idx": 33944, "func": "no stack change, but end of current block (no successor)", "target": 0}
{"idx": 33945, "func": "non-existing files are not allowed", "target": 0}
{"idx": 33946, "func": "Since this is a complex polygon, there's no easy way to resize it.", "target": 0}
{"idx": 33947, "func": "FIXED / NONE", "target": 0}
{"idx": 33948, "func": "//umlReserved.add(\"destroy\");", "target": 0}
{"idx": 33949, "func": "case ClassWriter.MANA_INSN:", "target": 0}
{"idx": 33950, "func": "//{{{ selectBlock() method", "target": 0}
{"idx": 33951, "func": "Is this a class?", "target": 0}
{"idx": 33952, "func": "specifies valid elements for a Operation to contain", "target": 0}
{"idx": 33953, "func": "perform other database configurations", "target": 0}
{"idx": 33954, "func": "Test to ensure that we allow sessions that are ending to be GC'd.", "target": 0}
{"idx": 33955, "func": "Used by ResultCollector.sampleOccurred(SampleEvent event)", "target": 0}
{"idx": 33956, "func": "move message to trash if marked as expunged", "target": 0}
{"idx": 33957, "func": "strip HTML message -> remove all HTML tags", "target": 0}
{"idx": 33958, "func": "b.addSeparator(\"Account Options\");", "target": 0}
{"idx": 33959, "func": "SSS FIXME: This method (at least in the context of multiple assignment) is a little weird. It calls regular to_ary on the object. But, if it encounters a method_missing, the value is inserted into an 1-element array! try \"a,b,c = 1\" first; then define Fixnum.to_ary method and try it again. Ex: http://gist.github.com/163551", "target": 1}
{"idx": 33960, "func": "Select prop panel if current panel is not appropriate for selected target", "target": 0}
{"idx": 33961, "func": "TODO: Add Tags & Constraints addMenu.add(TargetManager.getInstance().getAddAttributeAction()); addMenu.add(TargetManager.getInstance().getAddOperationAction());", "target": 0}
{"idx": 33962, "func": "skips instruction", "target": 0}
{"idx": 33963, "func": "return the pagesize divided by 1024 to get kilobytes", "target": 0}
{"idx": 33964, "func": "line 682", "target": 0}
{"idx": 33965, "func": "TableColumn col1 = getColumnModel().getColumn(0); col1.setMinWidth(20); col1.setMaxWidth(20); col1.setPreferredWidth(20);", "target": 0}
{"idx": 33966, "func": "Assume we will be successful", "target": 0}
{"idx": 33967, "func": "////////////////////////////////////////////////////////////////////INNER CLASSES", "target": 0}
{"idx": 33968, "func": "These are not used", "target": 0}
{"idx": 33969, "func": "//end point is lower right corner --> diagonal gradient", "target": 0}
{"idx": 33970, "func": "if the given name is un-qualified we may neen to qualify it", "target": 0}
{"idx": 33971, "func": "info level for the rest.", "target": 0}
{"idx": 33972, "func": "update panel", "target": 0}
{"idx": 33973, "func": "//{{{ getElementAt() method", "target": 0}
{"idx": 33974, "func": "finally, merge the names so it's clear they've been merged", "target": 0}
{"idx": 33975, "func": "no need to instantiate this class", "target": 0}
{"idx": 33976, "func": "// double tableWidth =_table.getColumnModel().getTotalColumnWidth() scale;", "target": 0}
{"idx": 33977, "func": "shape sequence", "target": 0}
{"idx": 33978, "func": "//a proxy cannot be transient and it breaks ForeignKeys.isTransient", "target": 0}
{"idx": 33979, "func": "remove old", "target": 0}
{"idx": 33980, "func": "Set the contents of the component without resetting the original value.", "target": 0}
{"idx": 33981, "func": "(non-Javadoc) @see org.columba.calendar.ui.list.api.ICalendarListView#getView()", "target": 0}
{"idx": 33982, "func": "append recent message count -> using blue font", "target": 0}
{"idx": 33983, "func": "should we do this for both cases above?", "target": 1}
{"idx": 33984, "func": "Shorthand notation for convenience", "target": 0}
{"idx": 33985, "func": "TODO: need to get this back into the method signature...now is too late...", "target": 1}
{"idx": 33986, "func": "JL: comment extracted from JUnitTask (and slightly modified)", "target": 0}
{"idx": 33987, "func": "//notAfterClassTokens.add(\",\");", "target": 0}
{"idx": 33988, "func": "//{{{ showDockable() method", "target": 0}
{"idx": 33989, "func": "\\ + c backsolidus", "target": 0}
{"idx": 33990, "func": "If we're not provided a namespace then get it from the diagram or the root", "target": 0}
{"idx": 33991, "func": "remove header", "target": 0}
{"idx": 33992, "func": "TODO: I don't really like this implementation; it would be better if this was handled by searchForDirtyCollections()", "target": 1}
{"idx": 33993, "func": "//hand osfamily off to Os class, if set", "target": 0}
{"idx": 33994, "func": "This event does not always hit the righr editor !? That's why we can't use _sqlEntryPanelIdentifier", "target": 0}
{"idx": 33995, "func": "----------------------------------------------------------- Constructors", "target": 0}
{"idx": 33996, "func": "TODO: Figure out how this can happen and possibly remove", "target": 1}
{"idx": 33997, "func": "set dialog", "target": 0}
{"idx": 33998, "func": "We have to compare the decompressed content instead:", "target": 0}
{"idx": 33999, "func": "getSelectedController() == null means: Create a new Graph", "target": 0}
{"idx": 34000, "func": "Apply the change and reverse the change information. //", "target": 0}
{"idx": 34001, "func": "verify the copied package", "target": 0}
{"idx": 34002, "func": "SAXXMIHandler", "target": 0}
{"idx": 34003, "func": "Find the highest Untitled-n file", "target": 0}
{"idx": 34004, "func": "\\0, \\0O, \\0OO", "target": 0}
{"idx": 34005, "func": "i18n[firebird.genDetails=Details]", "target": 0}
{"idx": 34006, "func": "for value in bounds, do the lookup...", "target": 0}
{"idx": 34007, "func": "See if we have a custom data-type registered.", "target": 0}
{"idx": 34008, "func": "non-interactive, return control now", "target": 0}
{"idx": 34009, "func": "//{{{ getMergeEdit() method", "target": 0}
{"idx": 34010, "func": "//{{{ SendVFSUpdatesSafely class", "target": 0}
{"idx": 34011, "func": "i18n[sessionPropertiesPanel.loadSchemasCatalogs=Load Schemas/Catalogs into object tree]", "target": 0}
{"idx": 34012, "func": "TODO: call ruby method", "target": 1}
{"idx": 34013, "func": "//{{{ ButtonActionHandler class", "target": 0}
{"idx": 34014, "func": "lastPos, currentPos points at the next chars that will be copied later", "target": 0}
{"idx": 34015, "func": "//{{{ getFileSeparator() method", "target": 0}
{"idx": 34016, "func": "//upper bound and margin OK; get log10 of upper bound", "target": 0}
{"idx": 34017, "func": "Step 1:", "target": 0}
{"idx": 34018, "func": "calling disconnect doesn't close the connection immediately, but indicates we're through with it. The JVM should close it when necessary. we don't want interrupt to try disconnection again Disconnect unless using KeepAlive", "target": 0}
{"idx": 34019, "func": "Only work for associations", "target": 0}
{"idx": 34020, "func": "if config-folder is really empty -> delete folder", "target": 0}
{"idx": 34021, "func": "If the base was not changed, then only set the name:", "target": 0}
{"idx": 34022, "func": "Clear the associated ID maps & reset starting collection", "target": 0}
{"idx": 34023, "func": "refresh call adapter, since it matters if this is iter-based or not", "target": 0}
{"idx": 34024, "func": "Include pipes on multiple arg type", "target": 0}
{"idx": 34025, "func": "peek ahead", "target": 0}
{"idx": 34026, "func": "FIXME //SerialUtilities.writeImage(this.image, stream);", "target": 0}
{"idx": 34027, "func": "Make a new one if necessary.", "target": 0}
{"idx": 34028, "func": "bottomPanel.setBorder(new WizardTopBorder()); Border border = bottomPanel.getBorder(); Border margin = BorderFactory.createEmptyBorder(15, 10, 10, 10); bottomPanel.setBorder(new CompoundBorder(border, margin));", "target": 0}
{"idx": 34029, "func": "need to make sure we are adding after any duplicates", "target": 0}
{"idx": 34030, "func": "execute application, enabling blocking", "target": 0}
{"idx": 34031, "func": "//@GuardedBy(\"LOCK\") Keep track of how many instances are active", "target": 0}
{"idx": 34032, "func": "0D00..0D7F;", "target": 0}
{"idx": 34033, "func": "@see org.argouml.kernel.ProjectMember#repair()", "target": 0}
{"idx": 34034, "func": "i18n[DialectUtils.columnNameUnsupported={0} doesn''t support altering a column''s name]", "target": 0}
{"idx": 34035, "func": "make sure we don't have an illegal set of options", "target": 0}
{"idx": 34036, "func": "check boxPaint null also", "target": 0}
{"idx": 34037, "func": "If not found and there are arguments to match - Look for an overloaded assignable match (First find the method, then find accessible version of it)", "target": 0}
{"idx": 34038, "func": "ug", "target": 0}
{"idx": 34039, "func": "//Unfortunately we need to remove the exising tree table component and create a //new one due to limitations with replacing models in the existing //sun implementation. Why on earth they couldnt formalise the tree //table example on JFC (which we use) a bit more is anyones guess.", "target": 1}
{"idx": 34040, "func": "the CASE instruction", "target": 0}
{"idx": 34041, "func": "//i18n[MappingRoot.driverName=JDBC driver name (Hibernate)]", "target": 0}
{"idx": 34042, "func": "Put a placeholder in entries, so we don't recurse back and try to save() the same object again. QUESTION: should this be done before onSave() is called? likewise, should it be done before onUpdate()?", "target": 1}
{"idx": 34043, "func": "TODO: {name} is not expanded for diagram objects", "target": 1}
{"idx": 34044, "func": "//Hashtable autoCorrects = plugin.getAutoCorrectProviderImpl().getAutoCorrects(); //javaAbbrevMap.putAll(autoCorrects);", "target": 0}
{"idx": 34045, "func": "Found \"&\"", "target": 0}
{"idx": 34046, "func": "//OUTLINE STROKE ////////////////////////////////////////////////////////", "target": 0}
{"idx": 34047, "func": "from encoding, special-casing ASCII to ASCII", "target": 0}
{"idx": 34048, "func": "thread context", "target": 0}
{"idx": 34049, "func": "singletons - since all state is in the context", "target": 0}
{"idx": 34050, "func": "empty last segment -> trailing separator", "target": 0}
{"idx": 34051, "func": "Only accept an open brace if there is a close", "target": 0}
{"idx": 34052, "func": "stripOutlineStroke", "target": 0}
{"idx": 34053, "func": "//{{{ Parse command line", "target": 0}
{"idx": 34054, "func": "Identity map of CollectionEntry instances, by the collection wrapper", "target": 0}
{"idx": 34055, "func": "Test creation of Collaboration diagrams. TODO: Test creating on an operation. @author jaap.branderhorst@xs4all.nl @since Jan 9, 2003", "target": 1}
{"idx": 34056, "func": "private JFrame frame;", "target": 0}
{"idx": 34057, "func": "i18n[dataSetViewerTablePanel.conversionError=Conversion Error]", "target": 0}
{"idx": 34058, "func": "do nothing by default.", "target": 0}
{"idx": 34059, "func": "We need to add a second column to have a unique constraint so that we can drop that one. Progress doesn't allow the very first index to ever be dropped.", "target": 0}
{"idx": 34060, "func": "Manages a ProgressMonitor dialog. NOTE: Users of this class should use the type of the interface {@link org.argouml.taskmgmt.ProgressMonitor} wherever possible to maintain GUI independence. @author andrea_nironi@tigris.org TODO: Bob says: I don't like the naming of this class. Its confusing that its called ...Window and yet it is not a window. Lets rename once we have it hidden.", "target": 1}
{"idx": 34061, "func": "// header-item", "target": 0}
{"idx": 34062, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsStoredProcedures()", "target": 0}
{"idx": 34063, "func": "//{{{ VFSDirectoryEntryTableModel constructor", "target": 0}
{"idx": 34064, "func": "//dummy", "target": 0}
{"idx": 34065, "func": "The part of the design this issue affects. <p> Each member is either a model element, a {@link Fig}, or a {@link Diagram}. <p> TODO: Offenders need to be more strongly typed. Because there is not a common supertype for these three types, we can't type this list. We should introduce a common supertype/interface. - tfm 20070630 <p> The list of offenders is set once (e.g. by the constructor) and cannot change. <p>", "target": 1}
{"idx": 34066, "func": "remove characters after </html> tag", "target": 0}
{"idx": 34067, "func": "Otherwise, we could check that the adapter implements interface IItemFontProvider. //", "target": 0}
{"idx": 34068, "func": "no correct value!", "target": 0}
{"idx": 34069, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getCatalogTerm()", "target": 0}
{"idx": 34070, "func": "Point to return statement point if we had one. (else it was implicit return? What's the case here?)", "target": 0}
{"idx": 34071, "func": "Not synchronised, so can't be shared", "target": 0}
{"idx": 34072, "func": "Default concurrent pool size for download embedded resources", "target": 0}
{"idx": 34073, "func": "Check for special shell characters [<>|] at the beginning and end of each command word and don't run in process if we find them.", "target": 0}
{"idx": 34074, "func": "i18n[UpdatePreferencesPanel.autoCheckFrequency=How often to check for updates:]", "target": 0}
{"idx": 34075, "func": "next jump", "target": 0}
{"idx": 34076, "func": "Must be local content - or not using pool", "target": 0}
{"idx": 34077, "func": "Begin methods which simply delegate to our parent (enclosing scope) //", "target": 0}
{"idx": 34078, "func": "single sender - re-use identity type", "target": 0}
{"idx": 34079, "func": "TODO: unfinished implementation", "target": 1}
{"idx": 34080, "func": "avoid multiple configurations", "target": 0}
{"idx": 34081, "func": "There were 2 ElementResidences .. strange case.", "target": 0}
{"idx": 34082, "func": "maybe next test is going to change in future", "target": 0}
{"idx": 34083, "func": "============================ End of hash internals ============================", "target": 0}
{"idx": 34084, "func": "Get rest of line. lineBuffer filled as side-effect...", "target": 0}
{"idx": 34085, "func": "ReplaceRegExpTest", "target": 0}
{"idx": 34086, "func": "add aNewPattern to take place of aOldPattern", "target": 0}
{"idx": 34087, "func": "//{{{ doDelayedUpdate() method", "target": 0}
{"idx": 34088, "func": "//i18n[MainFrame.saveSize=Save size]", "target": 0}
{"idx": 34089, "func": "Remove and dispose any wrappers for remaining old children. //", "target": 0}
{"idx": 34090, "func": "(non-Javadoc) @see org.columba.ristretto.message.Message#getBodyPart()", "target": 0}
{"idx": 34091, "func": "//{{{ Action hints", "target": 0}
{"idx": 34092, "func": "line 936", "target": 0}
{"idx": 34093, "func": "Force a sensible start time", "target": 0}
{"idx": 34094, "func": "Don't explicitly check if element is null", "target": 0}
{"idx": 34095, "func": "Increment cannot be < 1", "target": 0}
{"idx": 34096, "func": "skip empty segments and self references; push everything else", "target": 0}
{"idx": 34097, "func": "TODO: Remove this old implementation after 0.22 if it's demonstrated that it's not needed. - tfm", "target": 1}
{"idx": 34098, "func": "If the script of the Action is empty, (or only specifies arguments and no method name) then we generate a string based on a different model element:", "target": 0}
{"idx": 34099, "func": "//$@ returns nil if $!.backtrace is not an array", "target": 0}
{"idx": 34100, "func": "end class OCLExpander", "target": 0}
{"idx": 34101, "func": "The Referenced State or one of his path's states has got a new name", "target": 0}
{"idx": 34102, "func": "rb_ary_new4", "target": 0}
{"idx": 34103, "func": "Note: it's ok to cache class resolution here because when the class space changes the namespace will discard cached names.", "target": 0}
{"idx": 34104, "func": "start the string for use in the prepared statment", "target": 0}
{"idx": 34105, "func": "// buf.append( selectFragment( lhsAlias, \"\" ) )//ignore suffix for collection columns!", "target": 0}
{"idx": 34106, "func": "//i18n[DeleteDriverAction.error.selectingwindow=Error selecting window]", "target": 0}
{"idx": 34107, "func": "//{{{ Top...", "target": 0}
{"idx": 34108, "func": "in this case, we can't directly call view.close(); we have to call closeView() for all open views", "target": 0}
{"idx": 34109, "func": "@bgen(jjtree) VariableDeclarator", "target": 0}
{"idx": 34110, "func": "cannot edit something that we do not know anything about", "target": 0}
{"idx": 34111, "func": "the user provided resulttransformer, not the one used with \"select new\". Here to avoid mangling transformed/non-transformed results.", "target": 0}
{"idx": 34112, "func": "add tag id as last", "target": 0}
{"idx": 34113, "func": "Mark the contain FigPoly as complete. TODO: I think more work is needed in GEF to either do this automatically when both ends are set or at the very least Give a setComplete method on FigPolyEdge that calls its contained poly", "target": 1}
{"idx": 34114, "func": "This stores the state of the TestElement", "target": 0}
{"idx": 34115, "func": "// final String docTitle = (String)_docTitles.get(i);", "target": 0}
{"idx": 34116, "func": "normal new class implementing interfaces", "target": 0}
{"idx": 34117, "func": "//file length checks rely on touch generating a zero byte file", "target": 0}
{"idx": 34118, "func": "%upper is deprecated", "target": 0}
{"idx": 34119, "func": "Gone in UML 2.x - just Classifier now", "target": 0}
{"idx": 34120, "func": "Use default encoding", "target": 0}
{"idx": 34121, "func": "different dates => different files", "target": 0}
{"idx": 34122, "func": "updates the global max stack size", "target": 0}
{"idx": 34123, "func": "//////////////////////////////////////////////////////////////KeyListener implementation", "target": 0}
{"idx": 34124, "func": "Set the range so that we re-check when we get into the other half. //", "target": 0}
{"idx": 34125, "func": "copy - can't iterate modify live collection while iterating it", "target": 0}
{"idx": 34126, "func": "categoryLabelPositions", "target": 0}
{"idx": 34127, "func": "Figure out which day the mouse click is on.", "target": 0}
{"idx": 34128, "func": "Check the request", "target": 0}
{"idx": 34129, "func": "We do not want to capture cached methods", "target": 0}
{"idx": 34130, "func": "@author fdietz -> Moved code for updating mailfolderinfo to markMessage() intentionally! //", "target": 0}
{"idx": 34131, "func": "tweak diff HC3 vs HC4", "target": 0}
{"idx": 34132, "func": "True iff we're currently processing an event triggered by the user selecting the \"Edit\" option. Used to prevent reverting the combo to non-editable during processing of secondary events.", "target": 0}
{"idx": 34133, "func": "//{{{ ParserRuleSet constructor", "target": 0}
{"idx": 34134, "func": "Parameters are stored here", "target": 0}
{"idx": 34135, "func": "Content", "target": 0}
{"idx": 34136, "func": "all of the following have been converted to use the DataType objects So, why not just have case Types.NULL and default??? (this seems pointless) RMM 20070726", "target": 1}
{"idx": 34137, "func": "z date format", "target": 0}
{"idx": 34138, "func": "TODO: just noticed that MySQL 5.0 supports a multi-bit BIT column by using the getObject/setObject methods with a byte[]. So it would be valuable at some point to make this code a bit more dbms-specific", "target": 1}
{"idx": 34139, "func": "//SQL Exception converter:", "target": 0}
{"idx": 34140, "func": "look for __file__ method name for compiled roots", "target": 0}
{"idx": 34141, "func": "//i18n[RefactoringPreferencesTab.title=Refactoring]", "target": 0}
{"idx": 34142, "func": "If we've found thing with type parameters, search them for a match. //", "target": 0}
{"idx": 34143, "func": "assertNotNull(Model.getUmlFactory().buildNode( Model.getMetaTypes().getState()));", "target": 0}
{"idx": 34144, "func": "if everything went fine then xml schema validation is valid", "target": 0}
{"idx": 34145, "func": "ExplorerEventAdaptor.getInstance().structureChanged(); ProjectBrowser.getInstance().getStatusBar().showProgress(0);", "target": 0}
{"idx": 34146, "func": "rangeAxisLocations...", "target": 0}
{"idx": 34147, "func": "Make the topmost diagram (that is not the one being deleted) current.", "target": 0}
{"idx": 34148, "func": "//{{{ checkForExistingAbbrev() method", "target": 0}
{"idx": 34149, "func": "pushes handler block onto the stack of blocks to be visited", "target": 0}
{"idx": 34150, "func": "Couldn't locate the table - just try to fake it.", "target": 0}
{"idx": 34151, "func": "Lock used to guard static mutable variables", "target": 0}
{"idx": 34152, "func": "//i18n[syntax.replaceNetbeansOnly=Replace is only available when the Netbeans editor is used.\\nSee menu File --> New Session Properties --> Tab Syntax]", "target": 0}
{"idx": 34153, "func": "Set up FigText to hold the condition.", "target": 0}
{"idx": 34154, "func": "//{{{ claimWriteLock() method", "target": 0}
{"idx": 34155, "func": "Hide warning also as it makes no sense since the filesetmanifest attribute itself has been hidden", "target": 0}
{"idx": 34156, "func": "Add the list of column names we will be inserting into - be sure to skip the rowId column and any auto increment columns.", "target": 0}
{"idx": 34157, "func": "autoalloc", "target": 0}
{"idx": 34158, "func": "response message label", "target": 0}
{"idx": 34159, "func": "Job done.", "target": 0}
{"idx": 34160, "func": "TODO: A more strongly typed data structure could be used here.", "target": 1}
{"idx": 34161, "func": "Create the parser using whatever parser the system dictates", "target": 0}
{"idx": 34162, "func": "Ordering of array traversal not important, just intuitive", "target": 0}
{"idx": 34163, "func": "if we don't have opt args, start after args (they will be assigned later) this is for crap like def foo(a = (b = true; 1)) which numbers b before a FIXME: only starting after required args, since opt args may access others and rest args conflicts with compileRoot using \"0\" to indicate [] signature.", "target": 1}
{"idx": 34164, "func": "Overrides REToken.chain", "target": 0}
{"idx": 34165, "func": "3200..32FF;", "target": 0}
{"idx": 34166, "func": "//inject the data", "target": 0}
{"idx": 34167, "func": "use default Java classlodaer", "target": 0}
{"idx": 34168, "func": "use later", "target": 0}
{"idx": 34169, "func": "Load the Rose .mdl or .cat file, and create mappings for the objects. //", "target": 0}
{"idx": 34170, "func": "Key is String or Integer", "target": 0}
{"idx": 34171, "func": "Evaluate the constructor", "target": 0}
{"idx": 34172, "func": "0", "target": 0}
{"idx": 34173, "func": "Unregister/register as Folder listener", "target": 0}
{"idx": 34174, "func": "The problem we trying to solve below: STDIN in Java is blocked and non-interruptible, so if we invoke read on it, we might never be able to interrupt such thread. So, we use in.available() to see if there is any input ready, and only then read it. But this approach can't tell whether the end of stream reached or not, so we might end up looping right at the end of the stream. Well, at least, we can improve the situation by checking if some input was ever available, and if so, not checking for available anymore, and just go to read.", "target": 0}
{"idx": 34175, "func": "only prompt user, if composer contains some text", "target": 0}
{"idx": 34176, "func": "save every message in a list", "target": 0}
{"idx": 34177, "func": "//{{{ isReadOnly() method", "target": 0}
{"idx": 34178, "func": "first try our custom-generated Unsafe", "target": 0}
{"idx": 34179, "func": "//Set internal state", "target": 0}
{"idx": 34180, "func": "//if the identifier is quoted, remove the quotes", "target": 0}
{"idx": 34181, "func": "Expression syntax follows.", "target": 0}
{"idx": 34182, "func": "stat function for linear slope y = a + bx a = ybar - b xbar sum(x y) - (sum (x) sum(y)) / n b = ------------------------------------ sum (x^2) - (sum(x)^2 / n", "target": 0}
{"idx": 34183, "func": "file doesn't exist -> property 'test' == null", "target": 0}
{"idx": 34184, "func": "If it's a parameterized type... //", "target": 0}
{"idx": 34185, "func": "//this.setLocale(Locale.getDefault());", "target": 0}
{"idx": 34186, "func": "/////////////////////////////////////////////////////////", "target": 0}
{"idx": 34187, "func": "//{{{ getMemberIndex() method", "target": 0}
{"idx": 34188, "func": "i18n[mssql.activity=Displays the current activity on the SQL Server.]", "target": 0}
{"idx": 34189, "func": "(non-Javadoc) @see org.columba.core.gui.frame.IFrameManager#getActiveFrameMediator()", "target": 0}
{"idx": 34190, "func": "different scheme: need complete, absolute URI", "target": 0}
{"idx": 34191, "func": "Unqualified name check imported", "target": 0}
{"idx": 34192, "func": "3040..309F;", "target": 0}
{"idx": 34193, "func": "read existing file names from configuration", "target": 0}
{"idx": 34194, "func": "DELIMITER sets the separator that tells us when a procedure. This is MySQL-specific", "target": 0}
{"idx": 34195, "func": "Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather makes it a final field. The theory is that doing so should force a happens-before relationship WRT the WeakReference constructor, guaranteeing that the key will be visibile to other threads (unless it's been GC'ed). See JLS 17.5 (final fields) and 17.4.5 (Happens-before order) to confirm or refute my reasoning here.", "target": 0}
{"idx": 34196, "func": "TODO: Move to Diagram subsystem?", "target": 1}
{"idx": 34197, "func": "mainPanel.add(createFilenamePanel());", "target": 0}
{"idx": 34198, "func": "We must ask the user if it is ok to close current project i.e. it is OPEN", "target": 0}
{"idx": 34199, "func": "match was successful", "target": 0}
{"idx": 34200, "func": "based on e291. Getting the Name of a JDBC Type from javaalmanac.com http://javaalmanac.com/egs/java.sql/JdbcInt2Str.html", "target": 0}
{"idx": 34201, "func": "//{{{ updateChunksUpTo() method", "target": 0}
{"idx": 34202, "func": "b_rmonth.setFocusPainted(false); b_rmonth.setOpaque(false); b_rmonth.addActionListener(this);", "target": 0}
{"idx": 34203, "func": "getting prev node", "target": 0}
{"idx": 34204, "func": "init all components", "target": 0}
{"idx": 34205, "func": "The name of the UMLDiagram represented by this node has changed.", "target": 0}
{"idx": 34206, "func": "Now rerun with match fail", "target": 0}
{"idx": 34207, "func": "line 646", "target": 0}
{"idx": 34208, "func": "project events", "target": 0}
{"idx": 34209, "func": "i18n[I18n.SourceDir=Source directory]", "target": 0}
{"idx": 34210, "func": "in main table (evt mousePressed because cell is editable)", "target": 0}
{"idx": 34211, "func": "And find the one that holds this proxy. //", "target": 0}
{"idx": 34212, "func": "Keep a hashtable of attributes added by this task. This task is allow to override its own properties but not other properties. So we need to keep track of which properties we've added.", "target": 0}
{"idx": 34213, "func": "// alias.setUseDriverProperties(_useDriverPropsChk.isSelected()); // alias.setDriverProperties(_sqlDriverProps);", "target": 0}
{"idx": 34214, "func": "i18n[HelpViewerWindow.error.loadwelcomefile=Error retrieving Welcome file URL for {0}]", "target": 0}
{"idx": 34215, "func": "SSS FIXME: For constant arrays, we should never get here!", "target": 1}
{"idx": 34216, "func": "start the timeout thread", "target": 0}
{"idx": 34217, "func": "todo : potentially look at optimizing these two arrays", "target": 1}
{"idx": 34218, "func": "Gather all of the methods of class and parents", "target": 0}
{"idx": 34219, "func": "Add the end of multipart", "target": 0}
{"idx": 34220, "func": "JASON: What are its valid values?", "target": 0}
{"idx": 34221, "func": "send full range of events to avoid breaking plugins", "target": 0}
{"idx": 34222, "func": "getXxx() ftns can ignore the \"series\" argument: Don't synchronize this!! Instead, synchronize the loop that calls it.", "target": 0}
{"idx": 34223, "func": "cut table image and draw on the page", "target": 0}
{"idx": 34224, "func": "--Commented out by Inspection (12/11/04 10:56 AM): int getWarningCount();", "target": 0}
{"idx": 34225, "func": "final String key = (String) keys.next();", "target": 0}
{"idx": 34226, "func": "//++ Action command names //$NON-NLS-1$", "target": 0}
{"idx": 34227, "func": "END public boolean startExternalEditor()", "target": 0}
{"idx": 34228, "func": "FIXME: Maybe not best place, but move it to a good home", "target": 1}
{"idx": 34229, "func": "this loader was first but it didn't find it - try the parent", "target": 0}
{"idx": 34230, "func": "TODO Why not use the timestamp in a DataVersion?", "target": 1}
{"idx": 34231, "func": "Take canvas scrolling into account. The implementation below does place the element correctly when the canvas has been scrolled.", "target": 0}
{"idx": 34232, "func": "Try and unload the autoload specified from internedName", "target": 0}
{"idx": 34233, "func": "check if there is a suite method", "target": 0}
{"idx": 34234, "func": "pass values to other constructor", "target": 0}
{"idx": 34235, "func": "initializes extra data to an empty byte array", "target": 0}
{"idx": 34236, "func": "Should the data be first cloned so that the sorting doesn't take place on the array that is used in getValue() TODO: This is a must if sorting is done in a thread! ??", "target": 1}
{"idx": 34237, "func": "Tables might have triggers that depend on sequences, so drop tables next.", "target": 0}
{"idx": 34238, "func": "isArrowAtTop", "target": 0}
{"idx": 34239, "func": "//Create the Node Fig for the comment itself and draw it", "target": 0}
{"idx": 34240, "func": "1.9 seems to just do inspect for to_s now", "target": 0}
{"idx": 34241, "func": "Check the type", "target": 0}
{"idx": 34242, "func": "should check to disallow continue here?", "target": 0}
{"idx": 34243, "func": "for backwards compatibility with plugins that fiddle with jEdit's UI layout", "target": 0}
{"idx": 34244, "func": "FIXME This function needs documentation @return Vector", "target": 1}
{"idx": 34245, "func": "default is POJO", "target": 0}
{"idx": 34246, "func": "Z", "target": 0}
{"idx": 34247, "func": "Parse arguments singly", "target": 0}
{"idx": 34248, "func": "regression test for HARMONY-1497", "target": 0}
{"idx": 34249, "func": "fallback on non-pregenerated logic", "target": 0}
{"idx": 34250, "func": "failed to recognise the header", "target": 0}
{"idx": 34251, "func": "2^N 2^N-1", "target": 0}
{"idx": 34252, "func": "chars", "target": 0}
{"idx": 34253, "func": "Now set the editors to the element's values:", "target": 0}
{"idx": 34254, "func": "======== panel7 ========", "target": 0}
{"idx": 34255, "func": "This is what the spec says: CREATE SEQUENCE [schema_name.]sequence_name [INCREMENT BY value], [START WITH value], [MAXVALUE value | NOMAXVALUE], [MINVALUE value | NOMINVALUE], [CYLCE | NOCYLCE]", "target": 0}
{"idx": 34256, "func": "line 457", "target": 0}
{"idx": 34257, "func": "label insets...", "target": 0}
{"idx": 34258, "func": "getfield get each field", "target": 0}
{"idx": 34259, "func": "Do we have a dynamic container?", "target": 0}
{"idx": 34260, "func": "TODO: what I really want to do here is get the SQL script and replace \"CREATE PROCEDURE\" with \"ALTER PROCEDURE\", then put that in the SQL pane and NOT execute it.", "target": 1}
{"idx": 34261, "func": "Default file name $NON-NLS-1$", "target": 0}
{"idx": 34262, "func": "4.5.2.11 Comment", "target": 0}
{"idx": 34263, "func": "the new value, this needs to be here because it is required to calculate the next position to search from at the end of the loop", "target": 0}
{"idx": 34264, "func": "check for more literals (';' separated):", "target": 0}
{"idx": 34265, "func": "Arctan only returns -PI/2 to PI/2 Handle the other two quadrants and normalize to 0 - 2PI", "target": 0}
{"idx": 34266, "func": "//fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());", "target": 0}
{"idx": 34267, "func": "even though the axis is not visible, we need to refresh ticks in case the grid is being drawn...", "target": 0}
{"idx": 34268, "func": "Test make many paths", "target": 0}
{"idx": 34269, "func": "-identical", "target": 0}
{"idx": 34270, "func": "This is a funny functionality anyway and leads to problems with the DockTabStyle. E.g. when SessionProperties is closed first tab gets selected.", "target": 0}
{"idx": 34271, "func": "IBM's 1.4 has rt.jar split into 4 smaller jars and a combined JCE/JSSE in security.jar.", "target": 0}
{"idx": 34272, "func": "If so, revalidate the command. //", "target": 0}
{"idx": 34273, "func": "If the PathItemPlacement was unknown, leave the diagram with the default settings.", "target": 0}
{"idx": 34274, "func": "some formats (e.g. hex & octal) extend a negative number to multiple places (e.g. FC becomes FFFC), so chop off extra stuff in front", "target": 0}
{"idx": 34275, "func": "INSTANCE VARIABLE METHODS //", "target": 0}
{"idx": 34276, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getTables(java.lang.String, java.lang.String, java.lang.String, java.lang.String[], net.sourceforge.squirrel_sql.fw.sql.ProgressCallBack)", "target": 0}
{"idx": 34277, "func": "Add list of attachments if applicable", "target": 0}
{"idx": 34278, "func": "If any children were added or removed, reset the indices.", "target": 0}
{"idx": 34279, "func": "hacked BufferIORequest to send VFSUpdates in case two stage save is off now...", "target": 1}
{"idx": 34280, "func": "Assume this thread only 1 per second Initialise", "target": 0}
{"idx": 34281, "func": "// private Map _allTabs = new HashMap();", "target": 0}
{"idx": 34282, "func": "i18n[DatabaseMetaData.nullableTypeNoNulls=false]", "target": 0}
{"idx": 34283, "func": "if there's args left and we want them, assign to rest arg", "target": 0}
{"idx": 34284, "func": "stylesheet is created dynamically because user configurable fonts are used", "target": 0}
{"idx": 34285, "func": "Note: technically I think we could get by passing in only the current namespace or perhaps BshClassManager here instead of CallStack and Interpreter. However let's just play it safe in case of future changes - anywhere you eval a node you need these.", "target": 0}
{"idx": 34286, "func": "autoPopulateSectionOutlineStroke", "target": 0}
{"idx": 34287, "func": "assertTrue(\"same timestamp is up to date\", fu.isUpToDate(firstTime, firstTime));", "target": 0}
{"idx": 34288, "func": "Not overlapped src: o-----o sub: o-----o res: o-----o Reuse sub", "target": 0}
{"idx": 34289, "func": "Have we already dumped a stack trace for the current event dispatch?", "target": 0}
{"idx": 34290, "func": "doesn't happen", "target": 0}
{"idx": 34291, "func": "if the last key was a numeric keypad key and NumLock is off, filter it out", "target": 0}
{"idx": 34292, "func": "formatted name", "target": 0}
{"idx": 34293, "func": "if the corresponding SQL value is NULL, the reader we got is NULL as well", "target": 0}
{"idx": 34294, "func": "Do not allow an empty name", "target": 0}
{"idx": 34295, "func": "paint sequence", "target": 0}
{"idx": 34296, "func": "Marker delimiting heredoc boundary", "target": 0}
{"idx": 34297, "func": "if the hour is 0 - 23 then create an hour", "target": 0}
{"idx": 34298, "func": "got a bit annoyed that I couldn't find a pad function", "target": 0}
{"idx": 34299, "func": "this is package-private so that the painter can use it without having to call getSelection() (which involves an array copy)", "target": 0}
{"idx": 34300, "func": "now validate the result", "target": 0}
{"idx": 34301, "func": "//the code bellow is only for Embedded Derby Driver", "target": 0}
{"idx": 34302, "func": "now, iterate through children.", "target": 0}
{"idx": 34303, "func": "//{{{ getPrevVisibleLine() method", "target": 0}
{"idx": 34304, "func": "/////////////////////////////// PULL /////////////////////////////////////", "target": 0}
{"idx": 34305, "func": "middle of shortcut", "target": 0}
{"idx": 34306, "func": "this column cannot be used in a WHERE clause", "target": 0}
{"idx": 34307, "func": "ID of configuration plugin of this theme plugin", "target": 0}
{"idx": 34308, "func": "log.warn(\"ThreadContext was not set up - should only happen in JUnit testing...\" ,new Throwable(\"Debug\"));", "target": 0}
{"idx": 34309, "func": "if no basedir and no includes, nothing to do:", "target": 0}
{"idx": 34310, "func": "changes IFNULL and IFNONNULL to opcodes 218 and 219 (inclusive)", "target": 0}
{"idx": 34311, "func": "The HQL class alias refers to the class name.", "target": 0}
{"idx": 34312, "func": "TODO: replace all this url2 mess with a proper method \"areEquivalent(url1, url2)\" that would also ignore case in protocol and host names, etc. -- use that method in the CookieManager too.", "target": 1}
{"idx": 34313, "func": "//TODO: this class does too many things! we need a different //kind of path expression parser for each of the diffferent //ways in which path expressions can occur", "target": 1}
{"idx": 34314, "func": "Three arguments are expected: the .xml getControlModel() URI, the source java URI, and the target java URI. //", "target": 0}
{"idx": 34315, "func": "@see TableModel#getColumnClass(int)", "target": 0}
{"idx": 34316, "func": "//\" a read \"", "target": 0}
{"idx": 34317, "func": "@see ISQLEntryPanel#hasOwnUndoableManager()", "target": 0}
{"idx": 34318, "func": "There are some fields that cannot be used in a WHERE clause, either because there cannot be an exact match (e.g. REAL, FLOAT), or because we may not have the actual data in hand (BLOB/CLOB), or because the data cannot be expressed in a string form (e.g. BINARY). An update to one of those fields will look like we are replacing one row with an identical row (because we can only \"see\" the fields that we know how to do WHEREs on). Therefore, when we are updating them, there should be exactly one row that matches all of our other fields, and when we are not updating one of these special types of fields, there should be no rows that exactly match our criteria (we hope). We determine whether this field is one that cannot be used in the WHERE clause by checking the value returned for that field to use in the WHERE clause. Any field that can be used there will return something of the form \"<fieldName> = <value>\", and a field that cannot be used will return a null or zero-length string.", "target": 0}
{"idx": 34319, "func": "save header and attributes. Copy the flags!", "target": 0}
{"idx": 34320, "func": "returnType", "target": 0}
{"idx": 34321, "func": "//{{{ getStringMapKey() method", "target": 0}
{"idx": 34322, "func": "line 1359", "target": 0}
{"idx": 34323, "func": "//DRAWING //////////////////////////////////////////////////////////////", "target": 0}
{"idx": 34324, "func": "TODO this bit of code needs to be tidied up Unfortunately ModuleController is in components, not core Bug 47165", "target": 1}
{"idx": 34325, "func": "\"ALTER TABLE $tableName$ \" + \"ALTER $columnName$ SET DATA TYPE $dataType$\";", "target": 0}
{"idx": 34326, "func": "show the classname to the user", "target": 0}
{"idx": 34327, "func": "Create no entry since we are deleting and return immediately. //", "target": 0}
{"idx": 34328, "func": "need to load Task via system classloader or the new task we want to define will never be a Task but always be wrapped into a TaskAdapter.", "target": 0}
{"idx": 34329, "func": "No hex value after the 'x'.", "target": 0}
{"idx": 34330, "func": "4.5.2.10 Classifier", "target": 0}
{"idx": 34331, "func": "line 1677", "target": 0}
{"idx": 34332, "func": "//private File file;", "target": 0}
{"idx": 34333, "func": "//{{{ getAutoWrap() method", "target": 0}
{"idx": 34334, "func": "layout center panel", "target": 0}
{"idx": 34335, "func": "//plugin supports Session main window only", "target": 0}
{"idx": 34336, "func": "Core class that exists in system classpath is not ignored with ignoresystemclass=\"false\"", "target": 0}
{"idx": 34337, "func": "//i18n[explainplanexecuter.cost=Cost]", "target": 0}
{"idx": 34338, "func": "While processing loops, this returns the loop that we are processing.", "target": 0}
{"idx": 34339, "func": "'reasonable' default, if the component is used without a Project ( for example as a standalone Bean ). Most ant components can be used this way.", "target": 0}
{"idx": 34340, "func": "add a second dataset and renderer...", "target": 0}
{"idx": 34341, "func": "Iterate over the children to find the owner. //", "target": 0}
{"idx": 34342, "func": "Add the explicit resource collections to the archive.", "target": 0}
{"idx": 34343, "func": "$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$", "target": 0}
{"idx": 34344, "func": "Skip any whitespace till we should be on an equals sign.", "target": 0}
{"idx": 34345, "func": "print fore color will be gray", "target": 0}
{"idx": 34346, "func": "There were some spaces in the URL", "target": 0}
{"idx": 34347, "func": "its a long option", "target": 0}
{"idx": 34348, "func": "Tabbed pane that contains parameters and raw body", "target": 0}
{"idx": 34349, "func": "POSITIVE ITEM LABEL POSITION", "target": 0}
{"idx": 34350, "func": "Check all of the properties that are required.", "target": 0}
{"idx": 34351, "func": "@see org.argouml.uml.diagram.ui.FigNodeModelElement#addEnclosedFig(org.tigris.gef.presentation.Fig)", "target": 0}
{"idx": 34352, "func": "Although Operation and Signal are peers in the UML type hierarchy they share the attributes isRoot, isLeaf, isAbstract, and specification. Concurrency is not shared and is specific to Operation.", "target": 0}
{"idx": 34353, "func": "4. Make sure all FigNodes and FigEdges have an owner The report", "target": 0}
{"idx": 34354, "func": "We just set the prefix for this fileset, and pass it up. Do we need to do this? LH", "target": 1}
{"idx": 34355, "func": "Users should not normally see this.", "target": 0}
{"idx": 34356, "func": "textField.setText(criteria.getPattern());", "target": 0}
{"idx": 34357, "func": "/Squares", "target": 0}
{"idx": 34358, "func": "i18n[laf.skinThemPack=Theme Pack:]", "target": 0}
{"idx": 34359, "func": "west header", "target": 0}
{"idx": 34360, "func": "TODO : not sure which (either?) is correct, could not find docs on how to do this. did find various blogs and forums mentioning that select CURRENT_TIMESTAMP does not work...", "target": 1}
{"idx": 34361, "func": "This can execute if there is an owner list and a collection and the owner list contains all the objects of the collection. //", "target": 0}
{"idx": 34362, "func": "Start receiving all events and consume them if necessary", "target": 0}
{"idx": 34363, "func": "HELLA IMPORTANT OPTIMIZATION!!!", "target": 0}
{"idx": 34364, "func": "delete AttributeLinks where this is the Attribute", "target": 0}
{"idx": 34365, "func": "<p> Returns a <code>String</code> value for a character-delimited column value enclosed in the quote character, if required. </p> <p> If the value contains a special character, then the String value is returned enclosed in the quote character. </p> <p> Any quote characters in the value are doubled up. </p> <p> If the value does not contain any special characters, then the String value is returned unchanged. </p> <p> N.B. The list of special characters includes the quote character. </p> @param input the input column String, may be null (without enclosing delimiters) @param specialChars special characters; second one must be the quote character @return the input String, enclosed in quote characters if the value contains a special character, <code>null</code> for null string input", "target": 0}
{"idx": 34366, "func": "this will disable most operations if files of multiple types are selected", "target": 0}
{"idx": 34367, "func": "i18n[oracle.diskReadsPerExec=Disk Reads per Exec]", "target": 0}
{"idx": 34368, "func": "add listener to intercept texttofind changes and reset search", "target": 0}
{"idx": 34369, "func": "jScrollPane1.setCorner(JScrollPane.UPPER_LEFT_CORNER, corner);", "target": 0}
{"idx": 34370, "func": "For access from test code", "target": 0}
{"idx": 34371, "func": "if argument is 'next' - go to the next line //$NON-NLS-1$ //$NON-NLS-2$", "target": 0}
{"idx": 34372, "func": "NT Includes other types of Credentials", "target": 0}
{"idx": 34373, "func": "MBCLEN_NEEDMORE_P", "target": 0}
{"idx": 34374, "func": "Needs to be package protected for Unit test", "target": 0}
{"idx": 34375, "func": "end class ProjectBrowser", "target": 0}
{"idx": 34376, "func": "//SERIES PAINT /////////////////////////", "target": 0}
{"idx": 34377, "func": "let's reload the shortcuts", "target": 0}
{"idx": 34378, "func": "save contact to outputstream", "target": 0}
{"idx": 34379, "func": "Should the TestBean be hidden?", "target": 1}
{"idx": 34380, "func": "Add some new messages and remove the same number of old messages", "target": 0}
{"idx": 34381, "func": "Listen to machine deletion, to delete the diagram.", "target": 0}
{"idx": 34382, "func": "ends current block (with one new successor)", "target": 0}
{"idx": 34383, "func": "isRootPath", "target": 0}
{"idx": 34384, "func": "\"select 'CREATE VIEW ' || VIEWNAME || ' AS ' || VIEWDEFINITION \" + \"from POINTBASE.SYSVIEWS v, POINTBASE.SYSSCHEMATA s \" + \"where v.SCHEMAID = s.SCHEMAID \" + \"and v.VIEWNAME = 'TESTVIEW' \" + \"and s.SCHEMANAME = 'DBCOPY' \";", "target": 0}
{"idx": 34385, "func": "FIXME: what is correct 'recv' argument? (this does produce the desired behavior)", "target": 0}
{"idx": 34386, "func": "middle mouse button drag inserts selection at caret position", "target": 0}
{"idx": 34387, "func": "---- emailTextField4 ----", "target": 0}
{"idx": 34388, "func": "RubySignal", "target": 0}
{"idx": 34389, "func": "DumpingInvocationMethodFactory", "target": 0}
{"idx": 34390, "func": "the row may not have an entry for this key, in which case the return value is null", "target": 0}
{"idx": 34391, "func": "ALTER TABLE tableName ADD CONSTRAINT constraintName UNIQUE (column1, column2);", "target": 0}
{"idx": 34392, "func": "---- privateCityTextField ----", "target": 0}
{"idx": 34393, "func": "Utility function to remove an element listener and adapt the remembered list of registration. @param element element to listen for changes on @see org.argouml.model.ModelEventPump#addModelEventListener(PropertyChangeListener, Object, String)", "target": 0}
{"idx": 34394, "func": "SizeConstraint sConstr1 = new SizeConstraint(new AtFixed(10), new AtFraction(1), 1.0f);", "target": 0}
{"idx": 34395, "func": "is the message marked as draft ?", "target": 0}
{"idx": 34396, "func": "Either set or unset the old value. //", "target": 0}
{"idx": 34397, "func": "//i18n[IndexesTab.hint=Show indexes for the selected table]", "target": 0}
{"idx": 34398, "func": "i18n[editWherColsSheet.output=Output]", "target": 0}
{"idx": 34399, "func": "// private static final ILogger s_log = // LoggerController.createLogger(UserParentExpander.class);", "target": 0}
{"idx": 34400, "func": "md5HexInput.addFocusListener(this);", "target": 0}
{"idx": 34401, "func": "$\\: output record separator", "target": 0}
{"idx": 34402, "func": "make a time zone with no DST for our Calendar calculations", "target": 0}
{"idx": 34403, "func": "DEBUGGING HELP", "target": 0}
{"idx": 34404, "func": "//i18n[MappingRoot.user=JDBC User (Hibernate)]", "target": 0}
{"idx": 34405, "func": "Restore original resource URI values. //", "target": 0}
{"idx": 34406, "func": "Iterate over the map entries and apply each one. Stop when one of the entries actually changes the element.", "target": 0}
{"idx": 34407, "func": "If we're setting a handler, enable the Preferences menu item by calling com.apple.eawt.Application reflectively", "target": 0}
{"idx": 34408, "func": "Test method for 'org.apache.jmeter.protocol.http.sampler.postWriter.sendPostData(URLConnection, HTTPSampler)' This method test sending only a formdata, as a multipart/form-data request.", "target": 0}
{"idx": 34409, "func": "// private final JMenu _editMenu;", "target": 0}
{"idx": 34410, "func": "//Java1.5: reachable = address.isReachable(timeout 1000);", "target": 0}
{"idx": 34411, "func": "Tidy up any objects we created", "target": 0}
{"idx": 34412, "func": "save boolean headerfields, compressing them to one int value", "target": 0}
{"idx": 34413, "func": "We have credentials - should we set pre-emptive authentication?", "target": 0}
{"idx": 34414, "func": "check that an invalid suite generates an error.", "target": 0}
{"idx": 34415, "func": "Now force minimum dimensions for the text:", "target": 0}
{"idx": 34416, "func": "inner class, use $ to delimit", "target": 0}
{"idx": 34417, "func": "if already in roster", "target": 0}
{"idx": 34418, "func": "----- 'beautiful' output -----", "target": 0}
{"idx": 34419, "func": "//getFrameController().close();", "target": 0}
{"idx": 34420, "func": "Used by findTestFile", "target": 0}
{"idx": 34421, "func": "TODO: To enable models and subsystems, change this flag Work started by Markus I believe where does this stand? - Bob.", "target": 1}
{"idx": 34422, "func": "Process each individual query.", "target": 0}
{"idx": 34423, "func": "Do upgrade translation:", "target": 0}
{"idx": 34424, "func": "If this mapping isn't a parent, it's children definitely won't be either. //", "target": 0}
{"idx": 34425, "func": "part is only needed if we don't send an .eml-file", "target": 0}
{"idx": 34426, "func": "Clear", "target": 0}
{"idx": 34427, "func": "\\\\u{H HH HHH HHHH HHHHH HHHHHH ...}", "target": 0}
{"idx": 34428, "func": "First Run the first call should get all files, because nothing is in the cache //", "target": 0}
{"idx": 34429, "func": "Check that all necessary keys are there:", "target": 0}
{"idx": 34430, "func": "for UNIoN", "target": 0}
{"idx": 34431, "func": "//{{{ splitVertically() method", "target": 0}
{"idx": 34432, "func": "@see org.argouml.model.DirectionKind#getInParameter()", "target": 0}
{"idx": 34433, "func": "Note: which of these things should be checked at parse time vs. run time?", "target": 1}
{"idx": 34434, "func": "unknown extension, fall back to exact search", "target": 0}
{"idx": 34435, "func": "we don't know anything about the ordering of the x-values, but we can still skip any trailing values that fall outside the range...", "target": 0}
{"idx": 34436, "func": "has children", "target": 0}
{"idx": 34437, "func": "there was a problem inserting into the DB", "target": 0}
{"idx": 34438, "func": "Default constructor public XmlIO() { }", "target": 0}
{"idx": 34439, "func": "//{{{ invalidateScreenLineCounts() method", "target": 0}
{"idx": 34440, "func": "== C+", "target": 0}
{"idx": 34441, "func": "pointer to the viewer This is needed for insert and delete operations", "target": 0}
{"idx": 34442, "func": "i18n[sqlscript.configYourMultiTableScriptIxAfterEach=Constraints and indexes after each table]", "target": 0}
{"idx": 34443, "func": "No index specified when removing all elements. //", "target": 0}
{"idx": 34444, "func": "make sure start of match is visible", "target": 0}
{"idx": 34445, "func": "Each call to _stmt.getMoreResults() places the to the next output. As long as it is a ResultSet, we process it ...", "target": 0}
{"idx": 34446, "func": "The local file name is simply the local target path (tgt) which has been passed recursively down from the top of the tree, with the item's name appended.", "target": 0}
{"idx": 34447, "func": "Licence document.", "target": 0}
{"idx": 34448, "func": "Do the substitution", "target": 0}
{"idx": 34449, "func": "autoPopulateSectionPaint", "target": 0}
{"idx": 34450, "func": "//-- JMX file constants - do not change", "target": 0}
{"idx": 34451, "func": "i18n[exportconfig.ioErrorWritingTo=IO Error writing to\\n{0}]", "target": 0}
{"idx": 34452, "func": "end class ActionOpenProject", "target": 0}
{"idx": 34453, "func": "unknown value??!!!", "target": 0}
{"idx": 34454, "func": "Copys the distinct values from the source column into the lookup table.", "target": 0}
{"idx": 34455, "func": "add to jpanel pane", "target": 0}
{"idx": 34456, "func": "not a HighLowDataset, so just draw a line connecting this point with the previous point...", "target": 0}
{"idx": 34457, "func": "//regularFont;", "target": 0}
{"idx": 34458, "func": "i18n[OraclePlugin.timestampWarning=The setting to use string literals for timestamps may result in the inability to edit tables containing these columns. If this problem occurs, open Global Preferences -> Data Type Controls and set Timestamps to use \"JDBC standard escape format\"]", "target": 0}
{"idx": 34459, "func": "//patch file into the fileset", "target": 0}
{"idx": 34460, "func": "we have a mapped identifier property and the root of the incoming property path matched that identifier property", "target": 0}
{"idx": 34461, "func": "as long as they aren't both null (or a really rare identical string pointer)", "target": 0}
{"idx": 34462, "func": "Test CSV file with a header line and recycle is true", "target": 0}
{"idx": 34463, "func": "FileWrapper mockDownloadsDirectory = mockHelper.createMock(\"mockDownloadsDirectory\", FileWrapper.class); expect(mockDownloadsDirectory.isDirectory()).andStubReturn(true); expect(mockFileWrapperFactory.create(mockUpdateDirectory, UpdateUtil.DOWNLOADS_DIR_NAME)); expectLastCall().andReturn(mockDownloadsDirectory);", "target": 0}
{"idx": 34464, "func": "The tag element is not used as a fileset, but specifies the tag directly.", "target": 0}
{"idx": 34465, "func": "root-level classes", "target": 0}
{"idx": 34466, "func": "//this call should succeed as unless overrides if", "target": 0}
{"idx": 34467, "func": "parse header", "target": 0}
{"idx": 34468, "func": "recheck condition", "target": 0}
{"idx": 34469, "func": "for Ecore or something that explicitly extends it, we need to exclude EObject, which is already handled by the default case", "target": 0}
{"idx": 34470, "func": "or a treenode from the same tree", "target": 0}
{"idx": 34471, "func": "check if this message was already learned -> only add if this is not the case", "target": 0}
{"idx": 34472, "func": "cascade the refresh prior to refreshing this entity", "target": 0}
{"idx": 34473, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.mainpanel.IMainPanelTab#getComponent()", "target": 0}
{"idx": 34474, "func": "the line is visible - if it wasn't, we'd have returned false from within the while loop above", "target": 0}
{"idx": 34475, "func": "//{{{ getRootElements() method", "target": 0}
{"idx": 34476, "func": "decode from \"from\" and encode to \"to\"", "target": 0}
{"idx": 34477, "func": "10", "target": 0}
{"idx": 34478, "func": "TODO: could change this to itemFillPaint(). For backwards compatibility, it might require a useFillPaint flag.", "target": 1}
{"idx": 34479, "func": "changing the overwritten record shouldn't affect the series", "target": 0}
{"idx": 34480, "func": "raw supports <CRLF>.<CRLF>", "target": 0}
{"idx": 34481, "func": "// private final static ILogger s_log = // LoggerController.createLogger(DatabaseStatusTab.class);", "target": 0}
{"idx": 34482, "func": "A \"location\" attribute for a node within a Path object.", "target": 0}
{"idx": 34483, "func": "convert only fields of the same type as parent", "target": 0}
{"idx": 34484, "func": "Loop over the checksums and generate a total hash.", "target": 0}
{"idx": 34485, "func": "//Make the button looks the same for all Laf's", "target": 0}
{"idx": 34486, "func": "Initialization is deferred until adapters are attached to all the objects of interest and we're about to ask them to generate. //", "target": 0}
{"idx": 34487, "func": "remove session from \"current context\"", "target": 0}
{"idx": 34488, "func": "The following will bring up a dialog box, so can't be run headless actionSupplier.actionPerformed(new ActionEvent(this, 0, \"foo\"));", "target": 0}
{"idx": 34489, "func": "i18n[HibernateTabPanel.configuration=Configuration]", "target": 0}
{"idx": 34490, "func": "add interpereter and namespace to args list", "target": 0}
{"idx": 34491, "func": "line 333", "target": 0}
{"idx": 34492, "func": "tell the underlying data model to make itself editable, which includes telling the GUI to rebuild itself", "target": 0}
{"idx": 34493, "func": "Create popup tool if we have a single row", "target": 0}
{"idx": 34494, "func": "passwordTextField.setText(account.getPassword());", "target": 0}
{"idx": 34495, "func": "Maintain backward compatibility (bytes was not in the JMX file)", "target": 0}
{"idx": 34496, "func": "i18n[ImportDataIntoTableExecutor.wrongFormat=Imported column has not the required format.\\nLine is: {0}, column is: {1}]", "target": 0}
{"idx": 34497, "func": "//{{{ readURI() method", "target": 0}
{"idx": 34498, "func": "line 1556", "target": 0}
{"idx": 34499, "func": "first char is more restrictive than the rest", "target": 0}
{"idx": 34500, "func": "//named query parameter", "target": 0}
{"idx": 34501, "func": "update start/end time", "target": 0}
{"idx": 34502, "func": "Let's save this project as the last used one in the configuration file", "target": 0}
{"idx": 34503, "func": "Does not need to be synch. because it is only accessed from the sampler thread The ClientPool does access it in a different thread, but ClientPool is fully synch.", "target": 0}
{"idx": 34504, "func": "requires version 2 as we are going to store length info in the data descriptor", "target": 0}
{"idx": 34505, "func": "do nothing, because the plot is not pannable along the domain axes", "target": 0}
{"idx": 34506, "func": "for each row in table, count how many rows match where clause if not exactly one, generate message describing situation", "target": 0}
{"idx": 34507, "func": "write doctype", "target": 0}
{"idx": 34508, "func": "implementation adapted from ...taskdefs.Checksum, thanks to Magesh for hint", "target": 0}
{"idx": 34509, "func": "//{{{ transitiveClosure() method", "target": 0}
{"idx": 34510, "func": "TODO ElementOwnership is not in ModelSubsys!!", "target": 1}
{"idx": 34511, "func": "todo : should we check the current isolation mode explicitly?", "target": 1}
{"idx": 34512, "func": "generate variable writers initialization code", "target": 0}
{"idx": 34513, "func": "a|b|c -> FC_TERMINAL a|.|c -> FC_ANY a|b| -> FC_CONTINUE", "target": 0}
{"idx": 34514, "func": "i18n[Application.error.loadcolsinfo=Unable to load Edit 'Where' Columns selections.]", "target": 0}
{"idx": 34515, "func": "//before cascade! //TODO: should this be Session.instantiate(Persister, ...)?", "target": 1}
{"idx": 34516, "func": "XXX this is not thread-safe, though luck. It isn't supposed to be.", "target": 1}
{"idx": 34517, "func": "GeneralPath path = generatePath(h, w); g2.setColor(fillColor); g2.fill(path); path = generateTopPath(w); GradientPaint painter = new GradientPaint(0, 0, startColor, 0, 5, midColor); g2.setPaint(painter); g2.fill(path); path = generatePath(h, w); g2.setColor(UIManager.getColor(\"controlDkShadow\")); g2.draw(path);", "target": 0}
{"idx": 34518, "func": "//log.warn(\"DEBUG\",ex); e.g. javax.naming.SizeLimitExceededException: [LDAP: error code 4 - Sizelimit Exceeded]; remaining name '' 123456789012345678901 TODO: tidy this up", "target": 0}
{"idx": 34519, "func": "@see org.argouml.application.events.ArgoNotationEventListener#notationAdded(org.argouml.application.events.ArgoNotationEvent)", "target": 0}
{"idx": 34520, "func": "Could this be some other type of internal error that we want to handle differently? Don't think so. - tfm", "target": 1}
{"idx": 34521, "func": "i18n[ErrorStream.multipleerrors={0} errors detected]", "target": 0}
{"idx": 34522, "func": "Size non-tool child window.", "target": 0}
{"idx": 34523, "func": "If the resolved object doesn't contain a reference to the proxy holder as it should. //", "target": 0}
{"idx": 34524, "func": "Conversion Constants", "target": 0}
{"idx": 34525, "func": "First write the start multipart file TODO - charset?", "target": 0}
{"idx": 34526, "func": "A HTTP GET request, with ISO-8859-1 encoding", "target": 0}
{"idx": 34527, "func": "If we have resolved to an EClass but we have an EAttribute, we can change it to be an EReference. //", "target": 0}
{"idx": 34528, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.IQueryTokenizer#getSQLStatementSeparator()", "target": 0}
{"idx": 34529, "func": "get element from view list", "target": 0}
{"idx": 34530, "func": "This case is a bit different, because of the parameters. If the event already exists, the parameters are ignored.", "target": 0}
{"idx": 34531, "func": "this is a hack for the multiline column", "target": 1}
{"idx": 34532, "func": "rb_str_cmp_m", "target": 0}
{"idx": 34533, "func": "Extra care to be taken since allOffenders can be reset while this method is running.", "target": 0}
{"idx": 34534, "func": "@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent )", "target": 0}
{"idx": 34535, "func": "System Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 34536, "func": "End of Classname inner class", "target": 0}
{"idx": 34537, "func": "//Set the list disabled if allfields of table are to be copied", "target": 0}
{"idx": 34538, "func": "//sequential", "target": 0}
{"idx": 34539, "func": "End mutable instance variables. ---------------------------------------------------------", "target": 0}
{"idx": 34540, "func": "@see org.argouml.cognitive.critics.Critic#addSupportedDecision(org.argouml.cognitive.Decision)", "target": 0}
{"idx": 34541, "func": "we know that name.endsWith(\".class\")", "target": 0}
{"idx": 34542, "func": "bit_length feels a bit broken to me. We have to cast to char in order to pass when a numeric value is supplied. But of course the answers given will be wildly different for these two datatypes. 1234.5678 will be 9 bytes as a char string but will be 8 or 16 bytes as a true numeric. Jay Nance 2006-09-22", "target": 0}
{"idx": 34543, "func": "Our cleartext as bytes", "target": 0}
{"idx": 34544, "func": "ALPHANUMERIC OPERATOR \\w", "target": 0}
{"idx": 34545, "func": "InterSystems Cache' does not current support \"SELECT ... FOR UPDATE\" syntax... Set your transaction mode to READ_COMMITTED before using", "target": 0}
{"idx": 34546, "func": "ActionSequence.class", "target": 0}
{"idx": 34547, "func": "a good introduction to the Boyer-Moore fast string matching algorithm may be found on Moore's website at: http://www.cs.utexas.edu/users/moore/best-ideas/string-searching/", "target": 0}
{"idx": 34548, "func": "Set the instance This reference on the instance", "target": 0}
{"idx": 34549, "func": "load the specified class", "target": 0}
{"idx": 34550, "func": "//log uptodateness of all targets:", "target": 0}
{"idx": 34551, "func": "@jve:decl-index=0:visual-constraint=\"10,10\"", "target": 0}
{"idx": 34552, "func": "//{{{ formatFileSize() method", "target": 0}
{"idx": 34553, "func": "Avoid a function call... //", "target": 0}
{"idx": 34554, "func": "methods with required = 4 or higher should bind and be callable using reflection JRUBY-3649", "target": 0}
{"idx": 34555, "func": "return minimumCapacity;", "target": 0}
{"idx": 34556, "func": "ensure that -D properties take precedence", "target": 0}
{"idx": 34557, "func": "TimesTen reference claims this is a supported operation, but it yields an exception for me: ALTER TABLE test MODIFY noDefaultVarcharCol DEFAULT 'Default Value' Exception in thread \"main\" java.sql.SQLException: [TimesTen][TimesTen 6.0.1 ODBC Driver][TimesTen]TT1001: Syntax error in SQL statement before or at: \"NODEFAULTVARCHARCOL\", character position: 26 -- file \"ptSqlY.y\", lineno 1940, procedure \"sbPtParseSql()\" String alterClause = DialectUtils.MODIFY_CLAUSE; String defaultClause = DialectUtils.DEFAULT_CLAUSE; return DialectUtils.getColumnDefaultAlterSQL(this, info, alterClause, false, defaultClause); So, for now, just throw an exception:", "target": 0}
{"idx": 34558, "func": "etc...", "target": 0}
{"idx": 34559, "func": "setup source mock file", "target": 0}
{"idx": 34560, "func": "//{{{ Painting", "target": 0}
{"idx": 34561, "func": "//_parent = unused;", "target": 0}
{"idx": 34562, "func": "Builds a method with a given name. @param name is the given name @return method TODO: This needs an extra parameter to specify the model/extent where the new element should be created.", "target": 1}
{"idx": 34563, "func": "Use an existing getReferenceValue() override. //", "target": 0}
{"idx": 34564, "func": "Perhaps something like the following would work instead Rectangle drawingArea = Globals.curEditor().getJComponent().getVisibleRect();", "target": 1}
{"idx": 34565, "func": "//i18n[ColumnListDialog.dropPrimaryKeyTitle=Drop Primary Key]", "target": 0}
{"idx": 34566, "func": "//Shutdown Embedded Derby DB", "target": 0}
{"idx": 34567, "func": "Avoid the hit next time", "target": 0}
{"idx": 34568, "func": "at least one address to send to/cc/bcc is required", "target": 0}
{"idx": 34569, "func": "memorize location URI", "target": 0}
{"idx": 34570, "func": "Determine the inverse map from plugin IDs to their registered GenModel locations. //", "target": 0}
{"idx": 34571, "func": "//there are only four 9x platforms that we look for", "target": 0}
{"idx": 34572, "func": "\\OOO", "target": 0}
{"idx": 34573, "func": "now add a third value to the series...", "target": 0}
{"idx": 34574, "func": "Create the output stream to the temporary file and the input stream for the delegate URL. //", "target": 0}
{"idx": 34575, "func": "Expecting an exception to be thrown by this call: IllegalArgumentException: wrong number of Arguments", "target": 0}
{"idx": 34576, "func": "add the proxy elements", "target": 0}
{"idx": 34577, "func": "List in the centre of the window.", "target": 0}
{"idx": 34578, "func": "(non-Javadoc) @see org.columba.chat.jabber.IBuddyStatus#getName()", "target": 0}
{"idx": 34579, "func": "execute resyncing command", "target": 0}
{"idx": 34580, "func": "copy the header data from the column array to the header string array", "target": 0}
{"idx": 34581, "func": "super.validateAttributes(); don't want to call this method", "target": 1}
{"idx": 34582, "func": "line 329", "target": 0}
{"idx": 34583, "func": "This enables tooltips for tree; this one won't be shown:", "target": 0}
{"idx": 34584, "func": "//if we stopped at line break, increase array index pointer", "target": 0}
{"idx": 34585, "func": "(non-Javadoc) @see org.columba.chat.ui.conversation.IConversationController#get(int)", "target": 0}
{"idx": 34586, "func": "Editable Text", "target": 0}
{"idx": 34587, "func": "//{{{ isHorizontalLayout() method", "target": 0}
{"idx": 34588, "func": "//Class.basicUnsetGenFeature.override.javajetinc", "target": 0}
{"idx": 34589, "func": "OK, because used in synchronised method", "target": 0}
{"idx": 34590, "func": "In theory there can be multiple details pane (work in progress). It must first be determined which details page contains the properties tab. Bob Tarling 7 Dec 2002", "target": 0}
{"idx": 34591, "func": "Skip whitespace at the start.", "target": 0}
{"idx": 34592, "func": "//{{{ ShowRecentMenuItem class", "target": 0}
{"idx": 34593, "func": "set non proxy hosts list", "target": 0}
{"idx": 34594, "func": "Careful here: else fall through to override and install the new typed version", "target": 0}
{"idx": 34595, "func": "If none of the arguments have a name specified, we just send all the values as the entity body", "target": 0}
{"idx": 34596, "func": "//{{{ RecentDirMenu class", "target": 0}
{"idx": 34597, "func": "process all range axes", "target": 0}
{"idx": 34598, "func": "//{{{ browseDirectoryInNewWindow() method", "target": 0}
{"idx": 34599, "func": "//{{{ Request class", "target": 0}
{"idx": 34600, "func": "add column if neeeded", "target": 0}
{"idx": 34601, "func": "remove XmlElement", "target": 0}
{"idx": 34602, "func": "second row showing the minutes", "target": 0}
{"idx": 34603, "func": "create contact card", "target": 0}
{"idx": 34604, "func": "//{{{ Tab size", "target": 0}
{"idx": 34605, "func": "//this.myColor = new Color(getDisplay(), color.getRGB());", "target": 0}
{"idx": 34606, "func": "//i18n[SQLScriptPreferencesPanel.deleteRefActionCheckboxLabel=Add delete //referential action to the FK definition]", "target": 0}
{"idx": 34607, "func": "query provider", "target": 0}
{"idx": 34608, "func": "now fetch the row data - need to bear in mind that the row structure may not have an entry for the column key, but that we have already checked that the key is valid for the 2D structure", "target": 0}
{"idx": 34609, "func": "TODO: This filtering is kind of gross...it would be nice to get some parser help here", "target": 1}
{"idx": 34610, "func": "And the parameter names and values:", "target": 0}
{"idx": 34611, "func": "APOP?", "target": 0}
{"idx": 34612, "func": "check that having no suite generates no errors", "target": 0}
{"idx": 34613, "func": "line 1492", "target": 0}
{"idx": 34614, "func": "This is for brute force detection of columns whose column size is 0", "target": 0}
{"idx": 34615, "func": "Logging.log.severe(\"Error parsing body for attachments\", e);", "target": 0}
{"idx": 34616, "func": "//{{{ StatusBar constructor", "target": 0}
{"idx": 34617, "func": "updating the shortcut field", "target": 0}
{"idx": 34618, "func": "i18n[mssql.allTables=All tables]", "target": 0}
{"idx": 34619, "func": "Noop", "target": 0}
{"idx": 34620, "func": "make sure the lhs is \"assignable\"...", "target": 0}
{"idx": 34621, "func": "double check this logic make sure it makes sense", "target": 0}
{"idx": 34622, "func": "int index = list.size() - 1; remove(index);", "target": 0}
{"idx": 34623, "func": "TODO: Add EnumerationLiteral someplace", "target": 1}
{"idx": 34624, "func": "Disable Compression", "target": 0}
{"idx": 34625, "func": "Check \"Undefined\" does not become a \"reserved word\":", "target": 0}
{"idx": 34626, "func": "Then eObject1 must be that match. //", "target": 0}
{"idx": 34627, "func": "associate inbox with root folder", "target": 0}
{"idx": 34628, "func": "RubyBasicSocket", "target": 0}
{"idx": 34629, "func": "search all messages which match this filter", "target": 0}
{"idx": 34630, "func": "line 869", "target": 0}
{"idx": 34631, "func": "ensure data is set up OK initially", "target": 0}
{"idx": 34632, "func": "//{{{ paintChildren() method", "target": 0}
{"idx": 34633, "func": "Changes to the parameters should also update the label. //", "target": 0}
{"idx": 34634, "func": "//System.err.println(\"(\"+extractor.getClass().getSimpleName()+\"):The SQL generated by \" + referenceDialect.getDisplayName() + \" works !!!\");", "target": 0}
{"idx": 34635, "func": "TYPE FIELD", "target": 0}
{"idx": 34636, "func": "for other xmi files with further namespaces:", "target": 0}
{"idx": 34637, "func": "are inner classes OK?", "target": 0}
{"idx": 34638, "func": "To resize only when a new concurrent region is added, changing the height. TODO: Probably shouldn't exist as this class should be listening for added concurrent regions and call this internally itself. @param h the new height", "target": 1}
{"idx": 34639, "func": "// builder.append(showAttachmentsInlineCheckBox, 4); // builder.nextLine();", "target": 0}
{"idx": 34640, "func": "a Long kept updated by advanceTime()", "target": 0}
{"idx": 34641, "func": "test cases for making Url, and exercise method addArgument(String name,String value,String metadata)", "target": 0}
{"idx": 34642, "func": "Outer only once + (\"three\" + \"only once five and six\" + \"eight in interleave only once\" + (\"four\" + \"interleave\" + \"eleven\") innerLoopCount) outerLoopCount;", "target": 0}
{"idx": 34643, "func": "//i18n[ColumnDetailsDialog.typeLabel=Type: ]", "target": 0}
{"idx": 34644, "func": "label paint...", "target": 0}
{"idx": 34645, "func": "Add chart to deletion list in session", "target": 0}
{"idx": 34646, "func": "<model> is not used in current implementation", "target": 0}
{"idx": 34647, "func": "confirm minimum args provided", "target": 0}
{"idx": 34648, "func": "on the inverse, it makes sense that if a ThreadLocalSessionContext- bound session then gets deserialized to go ahead and re-bind it to the ThreadLocalSessionContext session map.", "target": 0}
{"idx": 34649, "func": "tickLabelOffset", "target": 0}
{"idx": 34650, "func": "finish class initializer", "target": 0}
{"idx": 34651, "func": "... but if HyperSearch results window is floating, the workaround causes problems!", "target": 1}
{"idx": 34652, "func": "9!", "target": 0}
{"idx": 34653, "func": "treat the last column value as an absolute", "target": 0}
{"idx": 34654, "func": "?f | boolean | True if file1 exists and is a regular file", "target": 0}
{"idx": 34655, "func": "Copy the type //", "target": 0}
{"idx": 34656, "func": "The TV existed, but maybe it was not \"true\":", "target": 0}
{"idx": 34657, "func": "make this the same size as the fileNameField", "target": 0}
{"idx": 34658, "func": "first off, make sure that we've got a from and to extension", "target": 0}
{"idx": 34659, "func": "//{{{ getLastActionCount() method", "target": 0}
{"idx": 34660, "func": "XMLesque Close tags", "target": 0}
{"idx": 34661, "func": "//take a snapshot", "target": 0}
{"idx": 34662, "func": "//action.addAttribute(\"class\", \"org.columba.mail.filter.action.MarkMessageAsReadFilterAction\");", "target": 0}
{"idx": 34663, "func": "store previous exception for restoration if we rescue something", "target": 0}
{"idx": 34664, "func": "Register our directive. //", "target": 0}
{"idx": 34665, "func": "clear runtime so it doesn't get stuck in memory (JRUBY-2933)", "target": 0}
{"idx": 34666, "func": "class doesn't exist -> property 'test' == null", "target": 0}
{"idx": 34667, "func": "If there aren't enough repeats, then fail", "target": 0}
{"idx": 34668, "func": "Get the ConstructorArgs selector field from ConstructorArgs", "target": 0}
{"idx": 34669, "func": "foregroundAlpha", "target": 0}
{"idx": 34670, "func": "Should be OK", "target": 0}
{"idx": 34671, "func": "final IObjectTreeAPI api = Compat.getIObjectTreeAPI(session, this);", "target": 0}
{"idx": 34672, "func": "no binding given, use 0 for both", "target": 0}
{"idx": 34673, "func": "Default for writing//$NON-NLS-1$", "target": 0}
{"idx": 34674, "func": "i18n[Application.error.savecolsinfo=Unable to write Edit Where Cols options to persistant storage.]", "target": 0}
{"idx": 34675, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#supportsStoredProcedures()", "target": 0}
{"idx": 34676, "func": "//if, by any means, the destfile and source match,", "target": 0}
{"idx": 34677, "func": "//branch.satisfyDependencies(roster,installDirectory, // downloadSource);", "target": 0}
{"idx": 34678, "func": "List of objects. NOTE: This methods which read/write this don't appear to be used.", "target": 0}
{"idx": 34679, "func": "MRI behavior: -0 and +0 are two different things", "target": 0}
{"idx": 34680, "func": "//{{{ doSingleDrag() method", "target": 0}
{"idx": 34681, "func": "map voids to nulls for the outside world", "target": 0}
{"idx": 34682, "func": "Primary interpreter set and get variable methods Note: These are squeltching errors... should they?", "target": 1}
{"idx": 34683, "func": "isTransactionCallbackRegistered denotes whether any Hibernate Transaction has registered as a callback against this JDBCContext; only one such callback is allowed. Directly serializing this value causes problems with JDBCTransaction, or really any Transaction impl where the callback is local to the Transaction instance itself, since that Transaction is not serialized along with the JDBCContext. Thus we handle that fact here explicitly...", "target": 0}
{"idx": 34684, "func": "shortcut key //putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(\"B\"));", "target": 0}
{"idx": 34685, "func": "need to reset java.class.path property since the NetRexx compiler has no option for the classpath", "target": 0}
{"idx": 34686, "func": "If it's the selection viewer, then we want it to select the same selection as this selection. //", "target": 0}
{"idx": 34687, "func": "//subcommands.appendAndExecute(new RemoveCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), nestedMappings)); //subcommands.appendAndExecute(new AddCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), nestedMappings));", "target": 0}
{"idx": 34688, "func": "exceptionNext target is for a next that doesn't push a new value, like this one", "target": 0}
{"idx": 34689, "func": "we could tell user here that export was canceled, but I don't think its necessary, and that avoids forcing user to do yet another annoying mouse click.", "target": 0}
{"idx": 34690, "func": "TODO Maybe we should have a checkbox to allow the user to toggle default value on/off. Some dbs (like DB2) treat empty string \"\" as a different default value than null.", "target": 1}
{"idx": 34691, "func": "//{{{ isWindowsNT() method", "target": 0}
{"idx": 34692, "func": "FIXME: This isn't right for within ensured/rescued code", "target": 1}
{"idx": 34693, "func": "is the zip file in the cache", "target": 0}
{"idx": 34694, "func": "add in reverse order", "target": 0}
{"idx": 34695, "func": "Remove the collection from the list by index. //", "target": 0}
{"idx": 34696, "func": "META-INF would be skipped anyway, avoid index for manifest-only jars.", "target": 0}
{"idx": 34697, "func": "See if this is the same statement", "target": 0}
{"idx": 34698, "func": "make it circular-reference safe", "target": 0}
{"idx": 34699, "func": "row keys provide potential keys for individual pies", "target": 0}
{"idx": 34700, "func": "result.addRange(0, RegularExpression.LINE_FEED-1); result.addRange(RegularExpression.LINE_FEED+1, RegularExpression.CARRIAGE_RETURN-1); result.addRange(RegularExpression.CARRIAGE_RETURN+1, RegularExpression.LINE_SEPARATOR-1); result.addRange(RegularExpression.PARAGRAPH_SEPARATOR+1, UTF16_MAX); return 1;", "target": 0}
{"idx": 34701, "func": "Parser the header", "target": 0}
{"idx": 34702, "func": "Enebo : Should ~frogger\\\\foo work (it doesnt in linux ruby)?", "target": 1}
{"idx": 34703, "func": "Fix up Windows paths", "target": 0}
{"idx": 34704, "func": "Now the coding tables.", "target": 0}
{"idx": 34705, "func": "//Clear any previous plan", "target": 0}
{"idx": 34706, "func": "The TreeTableNode interface. //", "target": 0}
{"idx": 34707, "func": "no charset specified -> automatic mode -> try to determine charset based on content parameter", "target": 0}
{"idx": 34708, "func": "Returns the lower half bitmask for all the ASCII characters in the given string.", "target": 0}
{"idx": 34709, "func": "//{{{ setPerspectiveDirty() method", "target": 0}
{"idx": 34710, "func": "HttpsURLConnection secureConn = (HttpsURLConnection) conn; secureConn.setSSLSocketFactory(this.getContext().getSocketFactory());", "target": 0}
{"idx": 34711, "func": "If we fail to find as a normal Ruby script, we try to find as an extension, checking for a builtin first.", "target": 0}
{"idx": 34712, "func": "TODO : what amount of significant digits need to be supported here? - from the DecimalFormat docs: [significant digits] = [minimum integer digits] + [maximum fraction digits]", "target": 1}
{"idx": 34713, "func": "for each filter", "target": 0}
{"idx": 34714, "func": "make sure we do not get a NPE", "target": 0}
{"idx": 34715, "func": "Fonts and colors should get updated automatically for contained figs", "target": 0}
{"idx": 34716, "func": "TreePath path = tree.getSelectionPath();", "target": 0}
{"idx": 34717, "func": "light blue colors", "target": 0}
{"idx": 34718, "func": "We always want to override the HTTPS scheme, because we want to trust all certificates and hosts", "target": 0}
{"idx": 34719, "func": "If we drop out we didn't meet both criteria, and all is well.", "target": 0}
{"idx": 34720, "func": "TODO: verify this", "target": 1}
{"idx": 34721, "func": "define filter to select only names using the fileBase", "target": 0}
{"idx": 34722, "func": "Done before actually reading the data from the ResultSet. If done after reading the data from the ResultSet Oracle throws a NullPointerException when processing ResultSetMetaData methods for the ResultSet returned for DatabasemetaData.getExportedKeys.", "target": 0}
{"idx": 34723, "func": "The instance class name is the erasure. //", "target": 0}
{"idx": 34724, "func": "Can cause NPE in HttpClient 3.1 //((SimpleHttpConnectionManager)cl.getHttpConnectionManager()).shutdown();Closes the connection Revert to original method: Closes the connection", "target": 0}
{"idx": 34725, "func": "//These are the positions of child figs inside this fig //They must be added in the constructor in this order. //For now the name must not be last as this would force //zero width lines (until GEF is fixed)", "target": 0}
{"idx": 34726, "func": "get localised strings once only", "target": 0}
{"idx": 34727, "func": "Tab for the settings dialog that makes it possible to select the modules that are to be enabled. TODO: Header for the table. @author Linus Tolke", "target": 0}
{"idx": 34728, "func": "--------------------------------------------------------- Public Methods", "target": 0}
{"idx": 34729, "func": "The submachine has got a new name", "target": 0}
{"idx": 34730, "func": "// TagList tagList = new CalendarTagList(this); // JScrollPane tagListScrollPane = new JScrollPane(tagList); // tagListScrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER); // tagListScrollPane // .setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));", "target": 0}
{"idx": 34731, "func": "create tree structure", "target": 0}
{"idx": 34732, "func": "If the segment must be splitted, insert a new point Strict test forces to have real segments (not 2 equal points) and avoids division by 0", "target": 0}
{"idx": 34733, "func": "wrapper to primitive Convert value to Primitive and check/cast it.", "target": 0}
{"idx": 34734, "func": "Copy the rest", "target": 0}
{"idx": 34735, "func": "TODO: This is temporary. We need a new list for UML 2.x The following UML 1.4 elements are not in UML 2.x", "target": 1}
{"idx": 34736, "func": "set up dialog to ask user if it is ok to proceed IMPORTANT: this dialog is SYNCHRONOUS (ie. we do not proceed until user gives a response). This is critical since this function provides a return value to its caller that depends on the user input. i18n[baseDataSetViewerDestination.warning2=Warning]", "target": 0}
{"idx": 34737, "func": "public String getExtendedItemProviderClassName() { return getPrefixedName(\"ItemProviderAdapter\"); }", "target": 0}
{"idx": 34738, "func": "//{{{ getLastAction() method", "target": 0}
{"idx": 34739, "func": "ratio represents pixels", "target": 0}
{"idx": 34740, "func": "load profile name", "target": 0}
{"idx": 34741, "func": "Loads the project file and opens all kinds of error message windows if it doesn't work for some reason. In those cases it preserves the old project. @param file the file to open. @param showUI true if an error message may be shown to the user, false if run in commandline mode @param pmw the ProgressMonitor to be updated; if not needed, use null @return project the project that was created based on the file that was successfully opened TODO: Separate this into a Swing specific class - tfm", "target": 1}
{"idx": 34742, "func": "Use it for the operation and drag under effect. //", "target": 0}
{"idx": 34743, "func": "remove references for gc", "target": 0}
{"idx": 34744, "func": "ensure root exists", "target": 0}
{"idx": 34745, "func": "cached DirectoryScanner instance", "target": 0}
{"idx": 34746, "func": "//////////////////////////////////////////////////////////////////////Reload all matching table types", "target": 0}
{"idx": 34747, "func": "keep track of the original types", "target": 0}
{"idx": 34748, "func": "number of times we've matched so far", "target": 0}
{"idx": 34749, "func": "FIXME warning", "target": 0}
{"idx": 34750, "func": "utilitary methods", "target": 0}
{"idx": 34751, "func": "Clear maps", "target": 0}
{"idx": 34752, "func": "according WFR: in case of ActivityGraph only.", "target": 0}
{"idx": 34753, "func": "There is already a correct ElementResidence", "target": 0}
{"idx": 34754, "func": "line 1302", "target": 0}
{"idx": 34755, "func": "Not in cache, so create new one and cache it", "target": 0}
{"idx": 34756, "func": "Common output function", "target": 0}
{"idx": 34757, "func": "//{{{ getJARCacheDirectory() method", "target": 0}
{"idx": 34758, "func": "All events going to the Explorer must pass through here first!<p> Most will come from the uml model via the EventAdapter interface.<p> TODO: In some cases (test cases) this object is created without setting the treeModel. I (Linus) will add tests for this now. It would be better if this is created only when the Explorer is created. <p> TODO: The ExplorerTreeNode also listens to some events (from Diagrams), so it does not follow the rule above. @since 0.15.2, Created on 16 September 2003, 23:13 @author alexb", "target": 1}
{"idx": 34759, "func": "load the project", "target": 0}
{"idx": 34760, "func": "Execute this action from the command line. TODO: The underlying GEF library relies on Acme that doesn't allow us to create these files unless there is a window showing. For this reason I have had to split the performing of commands in {@link org.argouml.application.Main#main(String[])} so that we can, by not supplying the -batch option, run these commands with the window showing. Hopefully this can eventually be fixed. @see org.argouml.application.api.CommandLineInterface#doCommand(String) @param argument is the file name that we save to. @return true if it is OK.", "target": 1}
{"idx": 34761, "func": "4.5.2.7 BehavioralFeature", "target": 0}
{"idx": 34762, "func": "The stereotype. Width is the same as the cover, height is its default (since the font is not yet set). The text should be centered.", "target": 0}
{"idx": 34763, "func": "Binary data viewing option: which radix to use This object is only non-null when the data is binary data", "target": 0}
{"idx": 34764, "func": "@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAConstraint(tudresden.ocl.parser.node.AConstraint)", "target": 0}
{"idx": 34765, "func": "//{{{ Dependency class", "target": 0}
{"idx": 34766, "func": "public boolean equals(Object other) { read(); return bag.equals(other); } public int hashCode(Object other) { read(); return bag.hashCode(); }", "target": 0}
{"idx": 34767, "func": "anchorValue", "target": 0}
{"idx": 34768, "func": "//{{{ goToParent() method", "target": 0}
{"idx": 34769, "func": "show message content", "target": 0}
{"idx": 34770, "func": "In case when the number of occurences is explicitly specified, we have to read up the remaining garbage after the '\\0' to satisfy the requested pattern.", "target": 0}
{"idx": 34771, "func": "tick mark inside length...", "target": 0}
{"idx": 34772, "func": "//{{{ PaintLineBackground class", "target": 0}
{"idx": 34773, "func": "//{{{ Load it, if not yet done:", "target": 0}
{"idx": 34774, "func": "If null callstack", "target": 0}
{"idx": 34775, "func": "//{{{ isAbsolutePath() method", "target": 0}
{"idx": 34776, "func": "TODO: Delete old multiplicity? Why is \"copy\" using hard coded value? - tfm", "target": 1}
{"idx": 34777, "func": "Our children are a prefix expression and any number of suffixes. <p> We don't eval() any nodes until the suffixes have had an opportunity to work through them. This lets the suffixes decide how to interpret an ambiguous name (e.g. for the .class operation).", "target": 0}
{"idx": 34778, "func": "Detach any edges (such as comment edges) already attached to the FigAssociation before the FigAssociation is removed. They'll later be re-attached to the new FigNodeAssociation", "target": 0}
{"idx": 34779, "func": "Although this field is mutable, it is only accessed within the synchronized method deliverSampler()", "target": 0}
{"idx": 34780, "func": "This is the tooltip of a comment link", "target": 0}
{"idx": 34781, "func": "shadowPaint", "target": 0}
{"idx": 34782, "func": "//{{{ getRegisterStatusPrompt() method", "target": 0}
{"idx": 34783, "func": "//SubjectDialog dialog = new SubjectDialog(composerInterface.composerFrame);", "target": 0}
{"idx": 34784, "func": "register Component as FocusOwner FocusManager.getInstance().registerComponent(this);", "target": 0}
{"idx": 34785, "func": "this is the constraint that is dropped in drop constraint test", "target": 0}
{"idx": 34786, "func": "Encoding", "target": 0}
{"idx": 34787, "func": "TimesTen has no known variation of a \"SELECT ... FOR UPDATE\" syntax...", "target": 0}
{"idx": 34788, "func": "We will iterate over the whole collection, removing some as we go. //", "target": 0}
{"idx": 34789, "func": "create empty list", "target": 0}
{"idx": 34790, "func": "line 344", "target": 0}
{"idx": 34791, "func": "if we are unnamed eliminate all classifiers which are already the base of some role", "target": 0}
{"idx": 34792, "func": "no new here, method is called very often.", "target": 0}
{"idx": 34793, "func": "load all frames from configuration file", "target": 0}
{"idx": 34794, "func": "------------------------------------------------------------------------- Methods implemented from org.xml.sax.ContentHandler -----------------------------------------------------------------------", "target": 0}
{"idx": 34795, "func": "implicit joins are always(?) ok to reuse", "target": 1}
{"idx": 34796, "func": "we only need the first message", "target": 0}
{"idx": 34797, "func": "0A80..0AFF;", "target": 0}
{"idx": 34798, "func": "SELECT viewtext FROM informix.systables AS T1, informix.sysviews AS T2 WHERE tabname = 'a_view' AND T2.tabid = T1.tabid", "target": 0}
{"idx": 34799, "func": "If this is a standard EJB 1.1 descriptor, we are looking for one set of data, while if this is an iAS-specific descriptor, we're looking for different set of data. Hand the processing off to the appropriate method.", "target": 0}
{"idx": 34800, "func": "Convert the old numeric types - just in case someone wants to reload the workbench", "target": 0}
{"idx": 34801, "func": "freq table collected to save a pass over the data during decompression.", "target": 0}
{"idx": 34802, "func": "add new renderer", "target": 0}
{"idx": 34803, "func": "Now we need to hook up opposites by finding the named feature in the type. //", "target": 0}
{"idx": 34804, "func": "builder2.addGlue();", "target": 0}
{"idx": 34805, "func": "@see org.tigris.gef.presentation.Fig#isSelectable()", "target": 0}
{"idx": 34806, "func": "i18n[sqlval.infoBorder=Info]", "target": 0}
{"idx": 34807, "func": "---- otherCityLabel ----", "target": 0}
{"idx": 34808, "func": "return the uids that are new", "target": 0}
{"idx": 34809, "func": "As is.", "target": 0}
{"idx": 34810, "func": "FIXME weakref.rb also does caller(2) here for the backtrace", "target": 1}
{"idx": 34811, "func": "//{{{ getRate() method", "target": 0}
{"idx": 34812, "func": "now render data items...", "target": 0}
{"idx": 34813, "func": "TODO: Fully implement this!", "target": 1}
{"idx": 34814, "func": "segment starts at back", "target": 0}
{"idx": 34815, "func": "//{{{ Figure out some minor things", "target": 0}
{"idx": 34816, "func": "if the collection belonged to a different entity, clean up the existing state of the collection", "target": 0}
{"idx": 34817, "func": "The constructor. TODO: The \"name\" parameter is used for the icon and for the tooltip. This makes i18n of the tooltip impossible. @param modeClass the next global editor mode @param modeArgs arguments for the new mode @param name the name of the command that is the tooltip text.", "target": 1}
{"idx": 34818, "func": "may be null for PUT In an application/x-www-form-urlencoded request, we only support parameters, no file upload is allowed", "target": 0}
{"idx": 34819, "func": "Byebye...", "target": 0}
{"idx": 34820, "func": "Can't call it getClass()", "target": 0}
{"idx": 34821, "func": "get one of the default profile dirs, if available (as a default value for the following save dialog)", "target": 0}
{"idx": 34822, "func": "I guess this is when we pass it as an argument? Setting locally", "target": 0}
{"idx": 34823, "func": "$NON-NLS-1$ Supported methods:", "target": 0}
{"idx": 34824, "func": "N.B. These values are used in jmeter.properties (jmeter.httpsampler) - do not change They can alse be used as the implementation name", "target": 0}
{"idx": 34825, "func": "Don't care about plugin class; we can generate a model without one.", "target": 0}
{"idx": 34826, "func": "//fetch the generated id in a separate query", "target": 0}
{"idx": 34827, "func": "reduce (yyN)", "target": 0}
{"idx": 34828, "func": "skip throws", "target": 0}
{"idx": 34829, "func": "Add toolbar.", "target": 0}
{"idx": 34830, "func": "security", "target": 0}
{"idx": 34831, "func": "axis line paint...", "target": 0}
{"idx": 34832, "func": "i18n[HibernateConfigController.NoConfigToRemove=No configuration selected to remove.]", "target": 0}
{"idx": 34833, "func": "This is the XMI version used to encode the metamodel. We could parse deeper to pull out the actual UML version. The UML 1.4 version is at XMI/XMI.header/XMI.model[@xmi.version]. The UML 2.1.1 metamodel doesn't actually seem to contain its version.", "target": 0}
{"idx": 34834, "func": "//{{{ 2. Check whether it is in the jEdit user settings jars folder:", "target": 0}
{"idx": 34835, "func": "Because of the old factoring approach in the create method, it might be the case that the state of the old value has changed by the time we get here, and in that case, we don't want to duplicate the removals in this code. //", "target": 1}
{"idx": 34836, "func": "cycle through once drawing only the sides at the back...", "target": 0}
{"idx": 34837, "func": "no binding, just eval in \"current\" frame (caller's frame)", "target": 0}
{"idx": 34838, "func": "default behavior: toString", "target": 0}
{"idx": 34839, "func": "does not apply to Java implementation", "target": 0}
{"idx": 34840, "func": "Strip all characters out of <var>s</var> that could not be part of a valid Java identifier. Return either the given string (if all characters were valid), or a new string with all invalid characters stripped out. This allows automatic conversion of strings containing punctuation and spaces to a resource name that can be looked up.", "target": 0}
{"idx": 34841, "func": "Try straightforward class name first", "target": 0}
{"idx": 34842, "func": "force a redraw new entity code...", "target": 0}
{"idx": 34843, "func": "truncate buffer string to zero, if provided", "target": 0}
{"idx": 34844, "func": "handler.resolveEntity(publicId, systemId);", "target": 0}
{"idx": 34845, "func": "max distance is set at 100 pixels, (rSquared = 100^2)", "target": 0}
{"idx": 34846, "func": "[euluis] Using Windows style initial path, don't know if this fails in nixes.", "target": 0}
{"idx": 34847, "func": "//{{{ smartEnd() method", "target": 0}
{"idx": 34848, "func": "//{{{ isWindows9x() method", "target": 0}
{"idx": 34849, "func": "we may have more than one statement in sql at this point", "target": 0}
{"idx": 34850, "func": "//{{{ RotatedTextIcon constructor", "target": 0}
{"idx": 34851, "func": "Finally set the bounds of the big box and the border fig:", "target": 0}
{"idx": 34852, "func": "Finds all classes that extend the class, searching in the listAllClasses ArrayList. @param theClass the parent class @param listAllClasses the collection of classes to search in @param listSubClasses the collection of discovered subclasses @param innerClasses indicates whether inners classes should be included in the search", "target": 0}
{"idx": 34853, "func": "Look for the sibling value or an equivalent in the new child's feature. If it is found, the child should immediately follow it. //", "target": 0}
{"idx": 34854, "func": "TODO: do something here?", "target": 1}
{"idx": 34855, "func": "// public String marshall(IStructureType type); // public IStructureType unmarshall(String xmlString);", "target": 0}
{"idx": 34856, "func": "i18n[OraclePluginPreferencesPanel.sessionTimezoneTT=Set the session timezone to view //'WITH LOCAL TIMEZONE' data types]", "target": 0}
{"idx": 34857, "func": "$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$", "target": 0}
{"idx": 34858, "func": "TODO: Add a button to force garbage collection", "target": 1}
{"idx": 34859, "func": "Center text vertically.", "target": 0}
{"idx": 34860, "func": "i18n[ResultTab.metadataTabTitle=MetaData]", "target": 0}
{"idx": 34861, "func": "Java requires \"w\" for creating a file that does not exist", "target": 0}
{"idx": 34862, "func": "calculate the box width", "target": 0}
{"idx": 34863, "func": "select", "target": 0}
{"idx": 34864, "func": "MSB is 1; assuring non-zero initial array", "target": 0}
{"idx": 34865, "func": "4.5.2.31 Parameter", "target": 0}
{"idx": 34866, "func": "If true then execute db updates, otherwise just generate and display updates", "target": 0}
{"idx": 34867, "func": "Could not access file or other error", "target": 0}
{"idx": 34868, "func": "//i18n[DumpApplicationCommand.error.sessiondump=Error dumping sessions]", "target": 0}
{"idx": 34869, "func": "@see java.awt.event.WindowListener#windowClosed(java.awt.event.WindowEvent)", "target": 0}
{"idx": 34870, "func": "i.e. EOF", "target": 0}
{"idx": 34871, "func": "skip comments", "target": 0}
{"idx": 34872, "func": "if the source file isn't there, throw an exception", "target": 0}
{"idx": 34873, "func": "priority as integer value", "target": 0}
{"idx": 34874, "func": "//{{{ ActionListHandler constructor", "target": 0}
{"idx": 34875, "func": "looks like someone's trying to raise a Java exception. Let them.", "target": 0}
{"idx": 34876, "func": "Unfortunately we cannot simply call getColumnTypeAlterSQL since \"serial\" type is 4 (which is the same as java.sql.Types.Integer, so we would get back an integer column, not a serial column). So we piece it together ourselves: ALTER TABLE dbcopydest:\"informix\".serialtest MODIFY myid integer", "target": 0}
{"idx": 34877, "func": "IMessageHandler messageHandler = getEasyMockMessageHandler();", "target": 0}
{"idx": 34878, "func": "02B0..02FF;", "target": 0}
{"idx": 34879, "func": "//TODO: would be nice to handle proxy classes elegantly!", "target": 1}
{"idx": 34880, "func": "//this is kinda the best we can do...", "target": 1}
{"idx": 34881, "func": "//{{{ FloatingWindowContainer constructor", "target": 0}
{"idx": 34882, "func": "domainGridlinePaint", "target": 0}
{"idx": 34883, "func": "//{{{ Branch class", "target": 0}
{"idx": 34884, "func": "//NOTUSED private static final String DATABASE = \"db\"; $NON_NLS-1$", "target": 0}
{"idx": 34885, "func": "//setup flag based on bounds values", "target": 0}
{"idx": 34886, "func": "Allow access to context and variables directly //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$", "target": 0}
{"idx": 34887, "func": "Generate result (if nec.) and populate it", "target": 0}
{"idx": 34888, "func": "Execute the sample. In this case sleep for the specified time, if any", "target": 0}
{"idx": 34889, "func": "SEARCHABLE column of result set.", "target": 0}
{"idx": 34890, "func": "//{{{ getRuleSetAtOffset() method", "target": 0}
{"idx": 34891, "func": "Possible positions for the next repeat to match at", "target": 0}
{"idx": 34892, "func": "//i18n[ModifyDriverAction.error.selectingwindow=Error selecting window]", "target": 0}
{"idx": 34893, "func": "A Profile is a special package having the <<profile>> stereotype which can only contain the following types", "target": 0}
{"idx": 34894, "func": "Don't show indexes dialog if only one index exists to be modified", "target": 0}
{"idx": 34895, "func": "check box for whether to do any limiting of the data read during initial table load", "target": 0}
{"idx": 34896, "func": "but the row data requires a deep copy", "target": 0}
{"idx": 34897, "func": "should be a user provided class name", "target": 0}
{"idx": 34898, "func": "(non-Javadoc) @see org.columba.mail.folder.headercache.HeaderList#clear()", "target": 0}
{"idx": 34899, "func": "only association end has an aggregation option box", "target": 0}
{"idx": 34900, "func": "i18n[dataSetViewerTablePanel.makeEditable=Make Editable]", "target": 0}
{"idx": 34901, "func": "calculate based on a, b, c and d", "target": 0}
{"idx": 34902, "func": "parameterlist is guaranteed to contain at least \"(\"", "target": 0}
{"idx": 34903, "func": "pre-determine and cache the hashcode", "target": 0}
{"idx": 34904, "func": "The operation allConnections results in the set of all AssociationEnds of the AssociationClass, including all connections defined by its parent (transitive closure).", "target": 0}
{"idx": 34905, "func": "If the jarfile already exists then whack it and recreate it. Should probably think of a more elegant way to handle this so that in case of errors we don't leave people worse off than when we started =)", "target": 1}
{"idx": 34906, "func": "Brooms all the message which y coordinate is upper than the position of the broom. TODO: Provide a ModeFactory and then this class can become package scope. @author penyaskito", "target": 1}
{"idx": 34907, "func": "Add the names of all LAF objects to control. By doing thru the Map these will be sorted.", "target": 0}
{"idx": 34908, "func": "note that the copied tree should not be modified by wrapped ASTJField the copied tree will have source ranges for all nodes in the source file, hence, the get methods in the new ASTJField will not return the right contents", "target": 0}
{"idx": 34909, "func": "listeners are not restored automatically, but storage must be provided...", "target": 0}
{"idx": 34910, "func": "data must fit into the column's max size", "target": 0}
{"idx": 34911, "func": "this notifies each display manager editing this buffer of the screen line count change", "target": 0}
{"idx": 34912, "func": "line 414", "target": 0}
{"idx": 34913, "func": "None of the actions revoked, so all allowed.", "target": 0}
{"idx": 34914, "func": "For directories:", "target": 0}
{"idx": 34915, "func": "Make sure the names didn't change again", "target": 0}
{"idx": 34916, "func": "Assume objs[0] is a schema/catalog", "target": 0}
{"idx": 34917, "func": "The text field should expand horizontally, but have a fixed height", "target": 0}
{"idx": 34918, "func": "// go through whole tree and sort the siblings after date", "target": 0}
{"idx": 34919, "func": "//try creating a TimeEvent", "target": 0}
{"idx": 34920, "func": "pass tree to model, used by the threaded-view", "target": 0}
{"idx": 34921, "func": "//{{{ deleteWord() method", "target": 0}
{"idx": 34922, "func": "ModifierOp", "target": 0}
{"idx": 34923, "func": "reset progress bar", "target": 0}
{"idx": 34924, "func": "we have an embedded composite identifier", "target": 0}
{"idx": 34925, "func": "Overlapped src1: o--------o src2: o----o src2: o----o src2: o----o src2: o------------o", "target": 0}
{"idx": 34926, "func": "//{{{ ManagePanel constructor", "target": 0}
{"idx": 34927, "func": "//i18n[UpdateSummaryTable.allPluginsLabel=All plugins]", "target": 0}
{"idx": 34928, "func": "The property is a collection...", "target": 0}
{"idx": 34929, "func": "loop over headers and modify them as needed", "target": 0}
{"idx": 34930, "func": "=========================================================== JFreeChart : a free chart library for the Java(tm) platform =========================================================== (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. Project Info: http://www.jfree.org/jfreechart/index.html This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version. This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details. You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA. [Oracle and Java are registered trademarks of Oracle and/or its affiliates. Other names may be trademarks of their respective owners.] ----------------- ChartFactory.java ----------------- (C) Copyright 2001-2014, by Object Refinery Limited and Contributors. Original Author: David Gilbert (for Object Refinery Limited); Contributor(s): Serge V. Grachov; Joao Guilherme Del Valle; Bill Kelemen; Jon Iles; Jelai Wang; Richard Atkinson; David Browning (for Australian Institute of Marine Science); Benoit Xhenseval; Changes ------- 19-Oct-2001 : Version 1, most methods transferred from JFreeChart.java (DG); 22-Oct-2001 : Added methods to create stacked bar charts (DG); Renamed DataSource.java --> Dataset.java etc. (DG); 31-Oct-2001 : Added 3D-effect vertical bar and stacked-bar charts, contributed by Serge V. Grachov (DG); 07-Nov-2001 : Added a flag to control whether or not a legend is added to the chart (DG); 17-Nov-2001 : For pie chart, changed dataset from CategoryDataset to PieDataset (DG); 30-Nov-2001 : Removed try/catch handlers from chart creation, as the exception are now RuntimeExceptions, as suggested by Joao Guilherme Del Valle (DG); 06-Dec-2001 : Added createCombinableXXXXXCharts methods (BK); 12-Dec-2001 : Added createCandlestickChart() method (DG); 13-Dec-2001 : Updated methods for charts with new renderers (DG); 08-Jan-2002 : Added import for com.jrefinery.chart.combination.CombinedChart (DG); 31-Jan-2002 : Changed the createCombinableVerticalXYBarChart() method to use renderer (DG); 06-Feb-2002 : Added new method createWindPlot() (DG); 23-Apr-2002 : Updates to the chart and plot constructor API (DG); 21-May-2002 : Added new method createAreaChart() (JI); 06-Jun-2002 : Added new method createGanttChart() (DG); 11-Jun-2002 : Renamed createHorizontalStackedBarChart() --> createStackedHorizontalBarChart() for consistency (DG); 06-Aug-2002 : Updated Javadoc comments (DG); 21-Aug-2002 : Added createPieChart(CategoryDataset) method (DG); 02-Oct-2002 : Fixed errors reported by Checkstyle (DG); 09-Oct-2002 : Added methods including tooltips and URL flags (DG); 06-Nov-2002 : Moved renderers into a separate package (DG); 18-Nov-2002 : Changed CategoryDataset to TableDataset (DG); 21-Mar-2003 : Incorporated HorizontalCategoryAxis3D, see bug id 685501 (DG); 13-May-2003 : Merged some horizontal and vertical methods (DG); 24-May-2003 : Added support for timeline in createHighLowChart (BK); 07-Jul-2003 : Added createHistogram() method contributed by Jelai Wang (DG); 27-Jul-2003 : Added createStackedAreaXYChart() method (RA); 05-Aug-2003 : added new method createBoxAndWhiskerChart (DB); 08-Sep-2003 : Changed ValueAxis API (DG); 07-Oct-2003 : Added stepped area XY chart contributed by Matthias Rose (DG); 06-Nov-2003 : Added createWaterfallChart() method (DG); 20-Nov-2003 : Set rendering order for 3D bar charts to fix overlapping problems (DG); 25-Nov-2003 : Added createWaferMapChart() method (DG); 23-Dec-2003 : Renamed createPie3DChart() --> createPieChart3D for consistency (DG); 20-Jan-2004 : Added createPolarChart() method (DG); 28-Jan-2004 : Fixed bug (882890) with axis range in createStackedXYAreaChart() method (DG); 25-Feb-2004 : Renamed XYToolTipGenerator --> XYItemLabelGenerator (DG); 11-Mar-2004 : Updated for pie chart changes (DG); 27-Apr-2004 : Added new createPieChart() method contributed by Benoit Xhenseval (see RFE 942195) (DG); 11-May-2004 : Split StandardCategoryItemLabelGenerator --> StandardCategoryToolTipGenerator and StandardCategoryLabelGenerator (DG); 06-Jan-2005 : Removed deprecated methods (DG); 27-Jan-2005 : Added new constructor to LineAndShapeRenderer (DG); 28-Feb-2005 : Added docs to createBubbleChart() method (DG); 17-Mar-2005 : Added createRingPlot() method (DG); 21-Apr-2005 : Replaced Insets with RectangleInsets (DG); 29-Nov-2005 : Removed signal chart (DG); ------------- JFREECHART 1.0.x --------------------------------------------- 26-Jan-2006 : Corrected API docs for createScatterPlot() (DG); 23-Aug-2006 : Modified createStackedXYAreaChart() to use StackedXYAreaRenderer2, because StackedXYAreaRenderer doesn't handle negative values (DG); 27-Sep-2006 : Update createPieChart() method for deprecated code (DG); 29-Nov-2006 : Update createXYBarChart() to use a time based tool tip generator is a DateAxis is requested (DG); 17-Jan-2007 : Added createBoxAndWhiskerChart() method from patch 1603937 submitted by Darren Jung (DG); 10-Jul-2007 : Added new methods to create pie charts with locale for section label and tool tip formatting (DG); 14-Aug-2008 : Added ChartTheme facility (DG); 23-Oct-2008 : Check for legacy theme in setChartTheme() and reset default bar painters (DG); 20-Dec-2008 : In createStackedAreaChart(), set category margin to 0.0 (DG); 02-Jul-2013 : Use ParamChecks class (DG);", "target": 0}
{"idx": 34931, "func": "convert the selection to a collection of the selected objects", "target": 0}
{"idx": 34932, "func": "////////////////////Transaction Controller - additional sample //////////////////////////////", "target": 0}
{"idx": 34933, "func": "height of content + top margin + bottom margin height corrected for scaling", "target": 0}
{"idx": 34934, "func": "Can happen for bad input document", "target": 0}
{"idx": 34935, "func": "return result if we're still good", "target": 0}
{"idx": 34936, "func": "Check if it is exactly the name of a type parameter that's in scope. //", "target": 0}
{"idx": 34937, "func": "This ensure that this package itself is traversed even if the reference type is EObject... //", "target": 0}
{"idx": 34938, "func": "load docking settings from last user session", "target": 0}
{"idx": 34939, "func": "mustSearchPath is false, or no PATH or not found - keep our fingers crossed.", "target": 0}
{"idx": 34940, "func": "Get the control flow graph for this scope -- only valid for methods & closures", "target": 0}
{"idx": 34941, "func": "//set to empty str if no local path return", "target": 0}
{"idx": 34942, "func": "TODO real numbers not yet supported //assertEquals(DefaultOclEvaluator.getInstance() //.evaluate(null, null, \"1.5\"), 1.5);", "target": 0}
{"idx": 34943, "func": "Handle escapes", "target": 0}
{"idx": 34944, "func": "start from previous height (ph1)", "target": 0}
{"idx": 34945, "func": "//Empty override of superclass method", "target": 0}
{"idx": 34946, "func": "//i18n[ColumnListDialog.columnNameLabel=Column: ]", "target": 0}
{"idx": 34947, "func": "or just the owner?", "target": 0}
{"idx": 34948, "func": "This is ugly; checking for the root folder.", "target": 1}
{"idx": 34949, "func": "targetType == TARGET_TYPE_SQL", "target": 0}
{"idx": 34950, "func": "tick label paint...", "target": 0}
{"idx": 34951, "func": "TODO: This is a part implementation of well-formedness rule UML1.4.2 - 4.5.3.20 [3] Circular inheritance is not allowed. not self.allParents->includes(self)", "target": 1}
{"idx": 34952, "func": "Get all the request properties, which are the headers set on the connection", "target": 0}
{"idx": 34953, "func": "//{{{ fireActionPerformed() method", "target": 0}
{"idx": 34954, "func": "buffer = str.getByteList();", "target": 0}
{"idx": 34955, "func": "line 916", "target": 0}
{"idx": 34956, "func": "i18n[FileManager.error.cannotwritefile=File {0} \\ncannot be written to.]", "target": 0}
{"idx": 34957, "func": "// chooser.setDialogTitle(\"Select???\");", "target": 0}
{"idx": 34958, "func": "end class ActionImportFromSources", "target": 0}
{"idx": 34959, "func": "3 = loop again, 2 = loop ended, 1 = last pass, 0 = done", "target": 0}
{"idx": 34960, "func": "no shortcuts --> NONE", "target": 0}
{"idx": 34961, "func": "This is the feedback we use to indicate drop on; it will only be used if the command is executable. //", "target": 0}
{"idx": 34962, "func": "scripts and modules", "target": 0}
{"idx": 34963, "func": "No invalid columns in this TableModel implementation", "target": 0}
{"idx": 34964, "func": "RRULE:FREQ=WEEKLY;COUNT=8;INTERVAL=2;BYDAY=TU,TH RRULE:FREQ=MONTHLY;UNTIL=20070627T215959;INTERVAL=2;BYDAY=4WE RRULE:FREQ=YEARLY;INTERVAL=1 RRULE:FREQ=YEARLY;INTERVAL=1;BYDAY=-1SU;BYMONTH=3 RRULE:FREQ=YEARLY;INTERVAL=1;BYDAY=-1SU;BYMONTH=10", "target": 0}
{"idx": 34965, "func": "boolean pass = true;", "target": 0}
{"idx": 34966, "func": "20030623, karlpeder \" and space handled also", "target": 0}
{"idx": 34967, "func": "It's just a single value //", "target": 0}
{"idx": 34968, "func": "Models the designers goals in making this design. Provides useful control information to the Agency so that only critics relevant to the designers goals are ever executed. TODO: Really this should be part of a domain extension and not the kernel. I have not developed this part of Argo very much. @author Jason Robbins", "target": 1}
{"idx": 34969, "func": "start from Y = rangeBase", "target": 0}
{"idx": 34970, "func": "//$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$ //$NON-NLS-1$ $NON-NLS-2$ //$NON-NLS-1$", "target": 0}
{"idx": 34971, "func": "i18n[userscript.dlgTabScriptsAdd2=Add...]", "target": 0}
{"idx": 34972, "func": "remove all sourceSeparator characters", "target": 0}
{"idx": 34973, "func": "TODO - needs more work ...", "target": 1}
{"idx": 34974, "func": "selected messages", "target": 0}
{"idx": 34975, "func": "See if module is in chain...Cannot match against itself so start at superClass.", "target": 0}
{"idx": 34976, "func": "Eof has been reached", "target": 0}
{"idx": 34977, "func": "look for any keys that we don't already know about...", "target": 0}
{"idx": 34978, "func": "This feels sloppy, especially for non-U.S. locales.", "target": 1}
{"idx": 34979, "func": "get UID list of messages", "target": 0}
{"idx": 34980, "func": "RubySocket", "target": 0}
{"idx": 34981, "func": "create a class in the project model", "target": 0}
{"idx": 34982, "func": "On OpenVMS Runtime#exec() doesn't support the environment array, so we only return the new values which then will be set in the generated DCL script, inheriting the parent process environment", "target": 0}
{"idx": 34983, "func": "private Border unselectedBorder = null; private Border selectedBorder = null; private Color background; private Color foreground;", "target": 0}
{"idx": 34984, "func": "lax (str.to_f) allows underscores between e/E and sign", "target": 0}
{"idx": 34985, "func": "Create a new RETokenOneOf", "target": 0}
{"idx": 34986, "func": "set up after init()", "target": 0}
{"idx": 34987, "func": "stop double-reporting", "target": 0}
{"idx": 34988, "func": "Get the syntax token at 'offset' only tokens with the same type will be checked for the corresponding bracket", "target": 0}
{"idx": 34989, "func": "//parameter value is > 0 The Math.log() function is based on e not 10.", "target": 0}
{"idx": 34990, "func": "line 1610", "target": 0}
{"idx": 34991, "func": "positiveBarPaint;", "target": 0}
{"idx": 34992, "func": "its maybe better to leave this option out of the dialog -> make it configurable in the xml file anyway", "target": 1}
{"idx": 34993, "func": "Implement String += value; According to the JLS, value may be anything. In BeanShell, we'll disallow VOID (undefined) values. (or should we map them to the empty string?)", "target": 1}
{"idx": 34994, "func": "We promote our box to being its own box since we're changing visibilities, and need it to be reflected on this method object independent of any other sharing the box.", "target": 0}
{"idx": 34995, "func": "skip if it doesn't exist", "target": 0}
{"idx": 34996, "func": "i18n[TableExportCsvController.noCommand=You must provide a command string or uncheck \"Execute command\".]", "target": 0}
{"idx": 34997, "func": "Allow for empty name", "target": 0}
{"idx": 34998, "func": "TODO: This class is part of a dependency cycle with ProjectBrowser and", "target": 1}
{"idx": 34999, "func": "// public JComponent getComponent() { // JPanel panel = new JPanel(); // panel.setLayout(new BorderLayout()); // panel.add(messageController, BorderLayout.CENTER); // // return panel; // }", "target": 0}
{"idx": 35000, "func": "whole segment stays at the back", "target": 0}
{"idx": 35001, "func": "if a file is selected in OPEN_DIALOG or SAVE_DIALOG mode, just let the listener(s) handle it", "target": 0}
{"idx": 35002, "func": "This Method frees a given String from Comments defined in Rfc822", "target": 0}
{"idx": 35003, "func": "Do we need to add tests for the following? AggregationKind ChangeableKind MessageDirectionKind OrderingKind ParameterDirectionKind PseudostateKind ScopeKind VisibilityKind //", "target": 1}
{"idx": 35004, "func": "fallback in case we have trouble loading the class or don't know how to handle it (there is no easy way to know what IDL mode would generate. This is supposed to make Ant always recompile the class, as a file of that name should not exist.", "target": 1}
{"idx": 35005, "func": "//no match? ask for the non-lower-cased type", "target": 0}
{"idx": 35006, "func": "TODO: What is the behavior of this in the case of nested models?", "target": 1}
{"idx": 35007, "func": "If the flag will straddle two fields, bump it to the next one. //", "target": 0}
{"idx": 35008, "func": "by default, double the snooze interval each time", "target": 0}
{"idx": 35009, "func": "Note. Some DBMSs such as Oracle do not allow: \"select , rowid from table\" You cannot have any column name in the columns clause if you have in there. Aliasing the table name seems to be the best way to get around the problem.", "target": 1}
{"idx": 35010, "func": "(non-Javadoc) @see org.columba.addressbook.facade.IGroupItem#getContacts()", "target": 0}
{"idx": 35011, "func": "//{{{ loadPluginProps() method", "target": 0}
{"idx": 35012, "func": "If the source of the event is an UML object, then the UML model has been changed.", "target": 0}
{"idx": 35013, "func": "MULTIPLICITY.ONE is default", "target": 0}
{"idx": 35014, "func": "TODO add test methods here. The name must begin with 'test'. For example:", "target": 1}
{"idx": 35015, "func": "//return here.", "target": 0}
{"idx": 35016, "func": "number of goals should now be 1", "target": 0}
{"idx": 35017, "func": "We silently ignore requests which conflict with UML 1.4 WFR 2.5.3.1 #3 - no aggregation for n-ary associations", "target": 0}
{"idx": 35018, "func": "Buffers for decoded but unparsed character input. //", "target": 0}
{"idx": 35019, "func": "//{{{ ToolTipLabel class", "target": 0}
{"idx": 35020, "func": "modal JDialog", "target": 0}
{"idx": 35021, "func": "init update timer", "target": 0}
{"idx": 35022, "func": "first column is a tree", "target": 0}
{"idx": 35023, "func": "@see org.argouml.model.ModelImplementation#getUmlFactory()", "target": 0}
{"idx": 35024, "func": "ViewItem viewItem = getViewItem();", "target": 0}
{"idx": 35025, "func": "//TODO: simply remove this override if we fix the above todos", "target": 1}
{"idx": 35026, "func": "We are displaying a SampleResult", "target": 0}
{"idx": 35027, "func": "//{{{ getBrowser() method", "target": 0}
{"idx": 35028, "func": "why does this matter?", "target": 1}
{"idx": 35029, "func": "Set timer to one-shot mode", "target": 0}
{"idx": 35030, "func": "if \"expression\" implements one of the combobox, select it TODO ? Do it in eUML module project ?", "target": 1}
{"idx": 35031, "func": "we have a match", "target": 0}
{"idx": 35032, "func": "//{{{ releaseDisplayManager() method", "target": 0}
{"idx": 35033, "func": "setup the class", "target": 0}
{"idx": 35034, "func": "We don't append '+' since Java number parser gets confused", "target": 0}
{"idx": 35035, "func": "Static variables", "target": 0}
{"idx": 35036, "func": "Ensure that this is a Plastic Theme.", "target": 0}
{"idx": 35037, "func": "Fix up the resident flag", "target": 0}
{"idx": 35038, "func": "Must first convert to absolute path names to ensure parents are available", "target": 0}
{"idx": 35039, "func": "A specialist Selection class for FigPartitions. This ensures that all swimlanes are the same length (ie height). TODO: Make sure that all swimlanes appear side by side (UML spec states \"separated from neighboring swimlanes by vertical solid lines on both sides\". TODO: Allow drag of the west and east edge to resize both the selected Fig and the fig connected to that side. TODO: Show NorthWest and SouthWest handle only on leftmost swimlane. TODO: Show NorthEast and SouthEast handle only on rightmost swimlane. @author Bob", "target": 1}
{"idx": 35040, "func": "selected nodes", "target": 0}
{"idx": 35041, "func": "//store data as Long", "target": 0}
{"idx": 35042, "func": "We won't test restricted-access classes.", "target": 0}
{"idx": 35043, "func": "initialize the GoalModel", "target": 0}
{"idx": 35044, "func": "IMAP folder specific - Is this folder selectable (does it contain messages?)", "target": 0}
{"idx": 35045, "func": "//increase minimum height by line height and line spacing", "target": 0}
{"idx": 35046, "func": "Should we match using regexes?", "target": 0}
{"idx": 35047, "func": "draw the chart background...", "target": 0}
{"idx": 35048, "func": "create app start script", "target": 0}
{"idx": 35049, "func": "Different from TestHTTPMirrorThread port and standard mirror server", "target": 0}
{"idx": 35050, "func": "i18n[editextras.timeStamp=Time stamp]", "target": 0}
{"idx": 35051, "func": "Find the index of a feature containing the sibling, or an equivalent value, in the collection of children features. //", "target": 0}
{"idx": 35052, "func": "Well-formedness rule for Package. Check that the alias for an imported element doesn't conflict with any existing name. Section 4.14.3.3 of UML 1.4 spec. <p> Other types of name conflicts in a Namespace are checked by {@link CrNameConflict}. <p> TODO: MVW: If an Alias is the same as another class' name, then this critic fires, but the explanation and wizard are wrong!", "target": 1}
{"idx": 35053, "func": "(non-Javadoc) @see org.columba.api.gui.frame.IFrameMediator#getContentPane()", "target": 0}
{"idx": 35054, "func": "Test whether or not the dialect correctly converts nullable columns to not-null before applying the primary key - if necessary", "target": 0}
{"idx": 35055, "func": "i18n[graphToClipboard.title=Copy graph image pages to clipboard]", "target": 0}
{"idx": 35056, "func": "Set of EntityKeys of deleted objects", "target": 0}
{"idx": 35057, "func": "TODO Should this method be synchronized ? all other function execute are", "target": 1}
{"idx": 35058, "func": "//XXX task.setTaskType(tag);", "target": 0}
{"idx": 35059, "func": "Create a proxy that will create an add command. //", "target": 0}
{"idx": 35060, "func": "//initalize xValues, yValues, and zValues arrays.", "target": 0}
{"idx": 35061, "func": "Does this dialect support the FOR UPDATE syntax?", "target": 1}
{"idx": 35062, "func": "|| modelElement instanceof StateMachine", "target": 0}
{"idx": 35063, "func": "Remove any elements not in requested namespace", "target": 0}
{"idx": 35064, "func": "Special classes like Collections.EMPTY_LIST are inner classes that are private but implement public interfaces. Their methods are all public methods for the public interface. Let these public methods execute via setAccessible(true).", "target": 0}
{"idx": 35065, "func": "//{{{ Right click popup", "target": 0}
{"idx": 35066, "func": "XXX: const lookup can trigger const_missing; is that enough to warrant it always being executed?", "target": 1}
{"idx": 35067, "func": "Package protected to allow test case access", "target": 0}
{"idx": 35068, "func": "has the imap account no trash folder using the default trash folder", "target": 0}
{"idx": 35069, "func": "Some character classes, as defined in RFC 2396's BNF for URI. These are 128-bit bitmasks, stored as two longs, where the Nth bit is set iff the ASCII character with value N is included in the set. These are created with the highBitmask() and lowBitmask() methods defined below, and a character is tested against them using matches(). //", "target": 0}
{"idx": 35070, "func": "get the header of the message", "target": 0}
{"idx": 35071, "func": "If there is a upper bound, the bound must bound it. //", "target": 0}
{"idx": 35072, "func": "If we are running in background mode and reallyExit was not specified, then return here.", "target": 0}
{"idx": 35073, "func": "'_' in number just ignored", "target": 0}
{"idx": 35074, "func": "the group of the given parent", "target": 0}
{"idx": 35075, "func": "FIXME: shouldn't need @__java_ovrd_methods, just query locally defined methods.", "target": 1}
{"idx": 35076, "func": "The following constants capture pre-known static call sites -- JRuby implementations of methods of ruby classes SSS FIXME: Note that compiler/impl/BaseBodyCompiler is using op_match2 for match() and and op_match for match2 ... Is this a bug there?", "target": 1}
{"idx": 35077, "func": "Done this late so that plugins have time to register expanders with the object tree prior to it being built.", "target": 0}
{"idx": 35078, "func": "The text the user has filled in the textfield is first checked to see if it's a valid multiplicity. If so then that is the multiplicity to be set. If not the input is rejected.", "target": 0}
{"idx": 35079, "func": "Implement LexicalHandler methods //", "target": 0}
{"idx": 35080, "func": "we got here because we assumed that an instance with an assigned id was detached, when it was really persistent", "target": 0}
{"idx": 35081, "func": "We only have this here until we have stereotypes list on property panel", "target": 0}
{"idx": 35082, "func": "If we have any number of stereotypes displayed, then allow some space for that (only width, height is included in nameFig):", "target": 0}
{"idx": 35083, "func": "Expected IllegalArgumentException seen", "target": 0}
{"idx": 35084, "func": "//name from a super query (a bit inelegant that it shows up here)", "target": 1}
{"idx": 35085, "func": "REQUIRED COMMAND LINE PARAMETERS", "target": 0}
{"idx": 35086, "func": "i18n[laf.skinThemePackDir=Theme Pack Directory:]", "target": 0}
{"idx": 35087, "func": "if either a file or path location is given, get the file object. we have a file", "target": 0}
{"idx": 35088, "func": "//i18n[DumpApplicationCommand.title.systemprops=System Properties]", "target": 0}
{"idx": 35089, "func": "initial check of input:", "target": 0}
{"idx": 35090, "func": "update ComposerModel based on user-changes in ComposerView", "target": 0}
{"idx": 35091, "func": "If no object is specified, but an existing sibling is, the object is its parent. //", "target": 0}
{"idx": 35092, "func": "(non-Javadoc) @see org.apache.jmeter.report.engine.ReportEngine#reset()", "target": 0}
{"idx": 35093, "func": "default behavior if no DataType object is to use the DefaultColumnRenderer with no modification.", "target": 0}
{"idx": 35094, "func": "//GenAnnotationImpl", "target": 0}
{"idx": 35095, "func": "~a tic every 50 px", "target": 0}
{"idx": 35096, "func": "DELAY DEVIATION", "target": 0}
{"idx": 35097, "func": "if it's a compiled JRuby script, instantiate and run it", "target": 0}
{"idx": 35098, "func": "//{{{ isTransactionInProgress() method", "target": 0}
{"idx": 35099, "func": "TODO: It doesn't really make sense that a namespace would be returned as part of its own contents, but that's the historical behavior.", "target": 1}
{"idx": 35100, "func": "Not an expression (isn't or can't be), not null.", "target": 0}
{"idx": 35101, "func": "TODO: This is only checking immediate siblings when it needs to be checking all imported elements both here and by our parents and also taking into account visibility", "target": 1}
{"idx": 35102, "func": "Whether this dialect has an Identity clause added to the data type or a completely seperate identity data type", "target": 0}
{"idx": 35103, "func": "Argo customization", "target": 0}
{"idx": 35104, "func": "this must be in reverse order so that modes from the user catalog get checked first!", "target": 0}
{"idx": 35105, "func": "Run through any stylesheet upgrades", "target": 0}
{"idx": 35106, "func": "show selected message", "target": 0}
{"idx": 35107, "func": "Test for NPE in DBUtil.getForeignKeySQL when the TableInfo returns null for getImportedKeys", "target": 0}
{"idx": 35108, "func": "there is always a paramsNode", "target": 0}
{"idx": 35109, "func": "scope", "target": 0}
{"idx": 35110, "func": "set the destination directory relative from the project if needed.", "target": 0}
{"idx": 35111, "func": "Register so that we can display different tooltips depending which entry in tree mouse is over.", "target": 0}
{"idx": 35112, "func": "compute numerators", "target": 0}
{"idx": 35113, "func": "//{{{ Handle backslash", "target": 0}
{"idx": 35114, "func": "@bgen(jjtree) MethodInvocation", "target": 0}
{"idx": 35115, "func": "copy and paste from RESyntaxMatcher to make syntax package independent of jEdit itself", "target": 1}
{"idx": 35116, "func": "make sure the cache is cleared.", "target": 0}
{"idx": 35117, "func": "How many classes can we assign from? TODO: there must be a nicer way...", "target": 1}
{"idx": 35118, "func": "//i18n[syntax.background=Select background color]", "target": 0}
{"idx": 35119, "func": "support for -source 1.1 and -source 1.2 has been added with JDK 1.4.2 - and isn't present in 1.5.0 either", "target": 0}
{"idx": 35120, "func": "Check for NDATA declaration.", "target": 0}
{"idx": 35121, "func": "TODO: read into buffer using all the fread logic int read = openFile.getMainStream().fread(buffer);", "target": 0}
{"idx": 35122, "func": "TODO (@author fdietz): show error dialoghere", "target": 1}
{"idx": 35123, "func": "public Object getGoalInfo(String goal) { return _goals.getProperty(goal); TODO: we need a better representation of goals }", "target": 1}
{"idx": 35124, "func": "//{{{ getFoldColor() method", "target": 0}
{"idx": 35125, "func": "//validating", "target": 0}
{"idx": 35126, "func": "line 1458", "target": 0}
{"idx": 35127, "func": "//If it ended in a dot, throw an exception", "target": 0}
{"idx": 35128, "func": "Is any node an instance of one of the classes?", "target": 0}
{"idx": 35129, "func": "This check is needed since processing leaves the cursor after the last physical row for the current logical row; thus if we are after the last physical row, this might be caused by either: 1) scrolling to the last logical row 2) scrolling past the last logical row In the latter scenario, the previous logical row really is the last logical row. In all other cases, we should process back two logical records (the current logic row, plus the previous logical row).", "target": 0}
{"idx": 35130, "func": "Called after the notation default property gets changed. @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)", "target": 0}
{"idx": 35131, "func": "then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available", "target": 0}
{"idx": 35132, "func": "create the mailbox on the server", "target": 0}
{"idx": 35133, "func": "FIXME: the following throws: org.argouml.model.InvalidElementException: javax.jmi.reflect.InvalidObjectException: Object with MOFID 127-0-1-1-(...)000E75 no longer exists. applicableTagDefs = tagDefCBModel.getApplicableTagDefinitions(aClass); assertNotNull(\"Tag Definition wasn't found in return value of \" + \"tagDefCBModel.getApplicableTagDefinitions(aClass), \" + \"after loading the project.\", TestStereotypeUtility.findModelElementNamed( ProfileMother.TAG_DEFINITION_NAME_TD, applicableTagDefs));", "target": 1}
{"idx": 35134, "func": "keep comments between nodes when removing or moving nodes", "target": 0}
{"idx": 35135, "func": "real stupid recreation of whole menu model", "target": 1}
{"idx": 35136, "func": "//{{{ loadSystemProps() method", "target": 0}
{"idx": 35137, "func": "save caret info. Buffer.load() will load it.", "target": 0}
{"idx": 35138, "func": "Since data is editable, we need to add control panel to manage user requests for DB update, file IO, etc.", "target": 0}
{"idx": 35139, "func": "1780..17FF;", "target": 0}
{"idx": 35140, "func": "Register with the save action with other subsystems so that any changes in those subsystems will enable the save button/menu item etc.", "target": 0}
{"idx": 35141, "func": "Check it out; also ugly.", "target": 1}
{"idx": 35142, "func": "Called after the diagram font gets changed. <p> TODO: Do we need to do anything here? @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)", "target": 1}
{"idx": 35143, "func": "i18n[dataSetViewerEditableTablePanel.selectionNeeded=You must select something in the table to delete.]", "target": 0}
{"idx": 35144, "func": "Buffer to hold the entity body", "target": 0}
{"idx": 35145, "func": "we return the original string", "target": 0}
{"idx": 35146, "func": "for each sourcePath entry, add a directoryset with includes taken from packagenames attribute and nested package elements and excludes taken from excludepackages attribute and nested excludepackage elements", "target": 0}
{"idx": 35147, "func": "load core extension handlers", "target": 0}
{"idx": 35148, "func": "Anticipate the same issue for BLOBS as for BINARY and LONGVARBINARY. registerColumnType(Types.BLOB, 2147000000, \"bit varying($l)\");", "target": 0}
{"idx": 35149, "func": "BuildListener stuff", "target": 0}
{"idx": 35150, "func": "synchronized to avoid multi-thread access issues; defined as method synch to avoid potential deadlock issues due to nature of code.", "target": 0}
{"idx": 35151, "func": "no device: use base's", "target": 0}
{"idx": 35152, "func": "//{{{ Find fold start and end...", "target": 0}
{"idx": 35153, "func": "Used by ResultCollector#recordStats()", "target": 0}
{"idx": 35154, "func": "Don't create a stereotype for <<signal>> on a Reception but create any other parsed stereotypes as needed", "target": 0}
{"idx": 35155, "func": "//get major dimension", "target": 0}
{"idx": 35156, "func": "//private Type[] sqlResultTypes;", "target": 0}
{"idx": 35157, "func": "Iterate over the owner list twice, first matching objects from the collection by identity (==), then matching objects by value equality (.equals()). The positions of matched objects in the owner list are recorded, and the objects are stored in the same order. The lists are then merged to form a final, in-order list of objects and corresponding indices in ownerList. This is very important for undo to interpret the indices correctly. Also, this yields exactly one object removed for each object in the collection, with preference given to identity over value equality. //", "target": 0}
{"idx": 35158, "func": "Does not appear to be used yet", "target": 1}
{"idx": 35159, "func": "Since we can use a correlated sub-query to update all rows in one statement, we don't care about the set values, unless fromTables is null, in which case we go with a normal update. Using the set values would require an update statement for each row in the merged table for each column that was merged in, which is incredibly inefficient. However, the API is intended to support database dialects that can't handle correlated sub-queries.", "target": 0}
{"idx": 35160, "func": "Store each line into this list if not null.", "target": 0}
{"idx": 35161, "func": "TODO: exec should replace the current process. This could be possible with JNA.", "target": 1}
{"idx": 35162, "func": "this.startDoc = true; Reset all work variables so reusing the instance starts afresh.", "target": 0}
{"idx": 35163, "func": "Now, parse initial request (in case it is a CONNECT request)", "target": 0}
{"idx": 35164, "func": "This method is intended only for defining new modules in Ruby code", "target": 0}
{"idx": 35165, "func": "//MessageNode getRootNode();", "target": 0}
{"idx": 35166, "func": "if it is a compound path", "target": 0}
{"idx": 35167, "func": "The system clock has been rewound so the clock sequence must be incremented to ensure that a duplicate UUID is not generated. //", "target": 0}
{"idx": 35168, "func": "rangeAxes...", "target": 0}
{"idx": 35169, "func": "//sync says \"error:\" when a file is up-to-date", "target": 0}
{"idx": 35170, "func": "Builds an interface with a given name. @param name is the given name. @return Interface TODO: This needs an extra parameter to specify the model/extent where the new element should be created.", "target": 1}
{"idx": 35171, "func": "Our first button is invisible. Selecting it deselects all visible buttons.", "target": 0}
{"idx": 35172, "func": "setDrawBarOutline()", "target": 0}
{"idx": 35173, "func": "//{{{ getWindowContainer() method", "target": 0}
{"idx": 35174, "func": "// private int _lastSessionIdx = 1;", "target": 0}
{"idx": 35175, "func": "deleting it all", "target": 0}
{"idx": 35176, "func": "Try super import if available Note: we do this last to allow explicitly imported classes and packages to take priority. This method will also throw an error indicating ambiguity if it exists...", "target": 0}
{"idx": 35177, "func": "//Access cached SQL", "target": 0}
{"idx": 35178, "func": "open message in new message-frame", "target": 0}
{"idx": 35179, "func": "isInterface", "target": 0}
{"idx": 35180, "func": "setTextValue(conditionNode, s);", "target": 0}
{"idx": 35181, "func": "Begin BeanShell Modification - public, extend EvalError", "target": 0}
{"idx": 35182, "func": "if use proxy is set, we try to pick up the proxy host and port from either the text fields or from JMeterUtil if they were passed from command line", "target": 0}
{"idx": 35183, "func": "ENEBO: Perhaps slow but simple for now", "target": 0}
{"idx": 35184, "func": "TODO: check if key contains the owner ID", "target": 1}
{"idx": 35185, "func": "find insertion point from returned result (-(insertion point) - 1) commentIndex is an index of the first element that has start position > rangeStartPos", "target": 0}
{"idx": 35186, "func": "=========================================================== JFreeChart : a free chart library for the Java(tm) platform =========================================================== (C) Copyright 2000-2013, by Object Refinery Limited and Contributors. Project Info: http://www.jfree.org/jfreechart/index.html This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version. This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details. You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA. [Oracle and Java are registered trademarks of Oracle and/or its affiliates. Other names may be trademarks of their respective owners.] ------------------------- CategoryItemRenderer.java ------------------------- (C) Copyright 2001-2011, by Object Refinery Limited and Contributors. Original Author: David Gilbert (for Object Refinery Limited); Contributor(s): Mark Watson (www.markwatson.com); Changes ------- 23-Oct-2001 : Version 1 (DG); 16-Jan-2002 : Renamed HorizontalCategoryItemRenderer.java --> CategoryItemRenderer.java (DG); 05-Feb-2002 : Changed return type of the drawCategoryItem method from void to Shape, as part of the tooltips implementation (DG) NOTE (30-May-2002) : this has subsequently been changed back to void, tooltips are now collected along with entities in ChartRenderingInfo (DG); 14-Mar-2002 : Added the initialise method, and changed all bar plots to use this renderer (DG); 23-May-2002 : Added ChartRenderingInfo to the initialise method (DG); 29-May-2002 : Added the getAxisArea(Rectangle2D) method (DG); 06-Jun-2002 : Updated Javadoc comments (DG); 26-Jun-2002 : Added range axis to the initialise method (DG); 24-Sep-2002 : Added getLegendItem() method (DG); 23-Oct-2002 : Added methods to get/setToolTipGenerator (DG); 05-Nov-2002 : Replaced references to CategoryDataset with TableDataset (DG); 06-Nov-2002 : Added the domain axis to the drawCategoryItem method. Renamed drawCategoryItem() --> drawItem() (DG); 20-Nov-2002 : Changed signature of drawItem() method to reflect use of TableDataset (DG); 26-Nov-2002 : Replaced the isStacked() method with the getRangeType() method (DG); 08-Jan-2003 : Changed getSeriesCount() --> getRowCount() and getCategoryCount() --> getColumnCount() (DG); 09-Jan-2003 : Changed name of grid-line methods (DG); 21-Jan-2003 : Merged TableDataset with CategoryDataset (DG); 10-Apr-2003 : Changed CategoryDataset to KeyedValues2DDataset in drawItem() method (DG); 29-Apr-2003 : Eliminated Renderer interface (DG); 02-Sep-2003 : Fix for bug 790407 (DG); 16-Sep-2003 : Changed ChartRenderingInfo --> PlotRenderingInfo (DG); 20-Oct-2003 : Added setOutlinePaint() method (DG); 06-Feb-2004 : Added missing methods, and moved deprecated methods (DG); 19-Feb-2004 : Added extra setXXXLabelsVisible() methods (DG); 29-Apr-2004 : Changed Integer --> int in initialise() method (DG); 18-May-2004 : Added methods for item label paint (DG); 05-Nov-2004 : Added getPassCount() method and 'pass' parameter to drawItem() method (DG); 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds (DG); 11-Jan-2005 : Removed deprecated code in preparation for 1.0.0 release (DG); 23-Feb-2005 : Now extends LegendItemSource (DG); 20-Apr-2005 : Renamed CategoryLabelGenerator --> CategoryItemLabelGenerator (DG); 20-May-2005 : Added drawDomainMarker() method (DG); ------------- JFREECHART 1.0.x --------------------------------------------- 20-Feb-2007 : Updated API docs (DG); 19-Apr-2007 : Deprecated seriesVisible and seriesVisibleInLegend flags (DG); 20-Apr-2007 : Deprecated paint, fillPaint, outlinePaint, stroke, outlineStroke, shape, itemLabelsVisible, itemLabelFont, itemLabelPaint, positiveItemLabelPosition, negativeItemLabelPosition and createEntities override fields (DG); 26-Jun-2008 : Added new method required for crosshair support - THIS CHANGES THE API as of version 1.0.11 (DG);", "target": 0}
{"idx": 35187, "func": "//{{{ FavoritesMenuButton constructor", "target": 0}
{"idx": 35188, "func": "//TODO: get all properties, not just the fetched ones!", "target": 1}
{"idx": 35189, "func": "//{{{ createRegexpSequenceRule() method", "target": 0}
{"idx": 35190, "func": "//no pointbase BIT", "target": 0}
{"idx": 35191, "func": "We've got a profile read pending - handle it ourselves now", "target": 0}
{"idx": 35192, "func": "//+ JMX file attributes $NON-NLS-1$", "target": 0}
{"idx": 35193, "func": "//throw new Error(\"No default bundle for class \" + className);", "target": 0}
{"idx": 35194, "func": "line 358", "target": 0}
{"idx": 35195, "func": "No further methods necessary. This is just an amalgamation of two other interfaces.", "target": 0}
{"idx": 35196, "func": "///////////////////////////////////////////////////////////////////////////////This formula can be found in the API Doc for methode relocate() of class org.netbeans.editor.Syntax. See the description of the last parameter 'stopPosition'. relocate() is always called before the parseTocken() method of this class.", "target": 0}
{"idx": 35197, "func": "get grant target", "target": 0}
{"idx": 35198, "func": "//{{{ Menus, tool bars", "target": 0}
{"idx": 35199, "func": "package protected so can be accessed by test class", "target": 0}
{"idx": 35200, "func": "add Script#run impl, used for running this script with a specified threadcontext and self root method of a script is always in __file__ method", "target": 0}
{"idx": 35201, "func": "disable visible items optimisation - it doesn't work for this renderer...", "target": 0}
{"idx": 35202, "func": "//{{{ setFirstInvalidFoldLevel() method", "target": 0}
{"idx": 35203, "func": "end class ConfigurationFactory", "target": 0}
{"idx": 35204, "func": "line 1283", "target": 0}
{"idx": 35205, "func": "Border width", "target": 0}
{"idx": 35206, "func": "Windows JDK workaround", "target": 1}
{"idx": 35207, "func": "<!-- begin-user-doc --> The <b>Adapter Factory</b> for the model. It provides an adapter <code>createXXX</code> method for each class of the model. <!-- end-user-doc --> @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage @generated", "target": 0}
{"idx": 35208, "func": "line 860", "target": 0}
{"idx": 35209, "func": "will have a trailing '.' g fills trailing zeroes if #", "target": 0}
{"idx": 35210, "func": "//titleLabel.setBackground(WorkbenchColors.getActiveGradient(), WorkbenchColors.getActiveGradientPercents()); titleLabel.setForeground(titleLabel.getDisplay().getSystemColor(SWT.COLOR_TITLE_FOREGROUND));", "target": 0}
{"idx": 35211, "func": "TODO should we just collect these like with the collections above?", "target": 1}
{"idx": 35212, "func": "promise to implement three to N with block", "target": 0}
{"idx": 35213, "func": "Property prop = new Property(); prop.setName(\"id\"); prop.setPropertyAccessorName(\"embedded\"); prop.setValue(id); entity.setIdentifierProperty(prop);", "target": 0}
{"idx": 35214, "func": "double and float have no scale - that is DECIMAL_DIGITS is null. Assume that is because it's variable - \"floating\" point.", "target": 0}
{"idx": 35215, "func": "for the parent directory right-click; on the click we select the clicked item, but when the popup goes away we select the currently showing directory.", "target": 0}
{"idx": 35216, "func": "IO class methods.", "target": 0}
{"idx": 35217, "func": "Create the StringFromFile function and set its parameters.", "target": 0}
{"idx": 35218, "func": "i18n[graph.invalidNumberFormat=Invalid number format. Can not calculate new unit.]", "target": 0}
{"idx": 35219, "func": "//{{{ Flags", "target": 0}
{"idx": 35220, "func": "save width", "target": 0}
{"idx": 35221, "func": "//{{{ removeDockableWindow() method", "target": 0}
{"idx": 35222, "func": "//{{{ BrowserColorsModel class", "target": 0}
{"idx": 35223, "func": "TODO: This functionality is in the worn place. We should be able to call setVisible on the compartment itself and then this class should react to that event. Improvements will follow in later releases. Hence this method should not be considered stable for module developers. @param compartment the compartment to be changed @param isVisible true if the attribute compartment is visible", "target": 1}
{"idx": 35224, "func": "retry handling in the rescue blocks", "target": 0}
{"idx": 35225, "func": "//{{{ invalidateLine() method", "target": 0}
{"idx": 35226, "func": "//if the index is not a multiple of 8, we are not on a byte boundary", "target": 0}
{"idx": 35227, "func": "package-private for speed", "target": 0}
{"idx": 35228, "func": "We are looking first to match with 3 different constructor types. We would not expect a Fig to have any mix of these. Any constructor other than these should be deprecated so we look for these first. Fig(DiagramEdgeSettings, DiagramSettings) Fig(Object, Rectangle, DiagramSettings) Fig(Rectangle, DiagramSettings)", "target": 0}
{"idx": 35229, "func": "use commandline-specified location", "target": 0}
{"idx": 35230, "func": "the returnparameters", "target": 0}
{"idx": 35231, "func": "make sure this configuration is also visually working immediately", "target": 0}
{"idx": 35232, "func": "END class ManifestClassPathTest", "target": 0}
{"idx": 35233, "func": "this is a UDF, not a stored procedure.", "target": 0}
{"idx": 35234, "func": "draw minor tick marks", "target": 0}
{"idx": 35235, "func": "i18n[UpdatePreferencesPanel.channel=Channel:]", "target": 0}
{"idx": 35236, "func": "@see org.argouml.cognitive.Poster#getSupportedGoals()", "target": 0}
{"idx": 35237, "func": "Encode the parameter value in the specified content encoding", "target": 0}
{"idx": 35238, "func": "FIXME: This is copied code from RubyArray. Both RE, Struct, and Array should share one impl This is also hacky since I construct ruby objects to access ruby arrays through aref instead of something lower.", "target": 1}
{"idx": 35239, "func": "null sql means that the only lazy properties are shared PK one-to-one associations which are handled differently in the Type#nullSafeGet code...", "target": 0}
{"idx": 35240, "func": "//{{{ getEditServer() method", "target": 0}
{"idx": 35241, "func": "only ever return true if space was pressed with logicalLength == maxLineLen", "target": 0}
{"idx": 35242, "func": "shapeFilled", "target": 0}
{"idx": 35243, "func": "Don't get tripped up by RE chars in the arg name", "target": 0}
{"idx": 35244, "func": "only stub, no tie", "target": 0}
{"idx": 35245, "func": "Execution methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 35246, "func": "TODO: associationclasses fit both of the next 2 cases", "target": 1}
{"idx": 35247, "func": "compile condition as non-expr and just compile \"then\" body", "target": 0}
{"idx": 35248, "func": "retrieve JDom Document from inputstream", "target": 0}
{"idx": 35249, "func": "rotationAnchor", "target": 0}
{"idx": 35250, "func": "(non-Javadoc) @see org.apache.jmeter.report.engine.ReportEngine#exit()", "target": 0}
{"idx": 35251, "func": "treat it like a time - no date component", "target": 0}
{"idx": 35252, "func": "Simple tests that require no synchronization", "target": 0}
{"idx": 35253, "func": "elements have empty nodeValue, but we are usually interested in their content", "target": 0}
{"idx": 35254, "func": "//initCallStack( namespace );", "target": 0}
{"idx": 35255, "func": "e.g. this.x=5; or someThisType.x=5;", "target": 0}
{"idx": 35256, "func": "Allow enough time for JVM to exit", "target": 0}
{"idx": 35257, "func": "A parameterized class can only be the client of a single binding", "target": 0}
{"idx": 35258, "func": "//{{{ reloadModes() method", "target": 0}
{"idx": 35259, "func": "//i18n[AbstractRefactoringDialog.editButtonLabel=Edit SQL]", "target": 0}
{"idx": 35260, "func": "//_treeAPI.addDetailTab(DatabaseObjectType.PROCEDURE, new ProcedureSourceTab(i18n.SHOW_PROCEDURE_SOURCE));", "target": 0}
{"idx": 35261, "func": "// private static final StringManager s_stringMgr = // StringManagerFactory.getStringManager(TableCopyCommand.class);", "target": 0}
{"idx": 35262, "func": "updateTimer.start();", "target": 0}
{"idx": 35263, "func": "(non-Javadoc) @see javax.swing.table.AbstractTableModel#setValueAt(java.lang.Object, int, int)", "target": 0}
{"idx": 35264, "func": "if its an uninitialized proxy it can't be transient", "target": 0}
{"idx": 35265, "func": "$NON-NLS-1$ $NON-NLS-1$ default is not in range of a byte", "target": 0}
{"idx": 35266, "func": "generate variable readers initialization code", "target": 0}
{"idx": 35267, "func": "end of else", "target": 0}
{"idx": 35268, "func": "and when the Operation is replaced:", "target": 0}
{"idx": 35269, "func": "Clean up after ourselves by deleting profile model", "target": 0}
{"idx": 35270, "func": "Toolbar boundary is the area between the menu and the status bar. It contains the workarea at centre and the toolbar position north, south, east or west.", "target": 0}
{"idx": 35271, "func": "// private ISession _session;", "target": 0}
{"idx": 35272, "func": "If there is persistant state for this toolbar, respect it, or add it to persistance data", "target": 0}
{"idx": 35273, "func": "if there is nothing selected return", "target": 0}
{"idx": 35274, "func": "line 929", "target": 0}
{"idx": 35275, "func": "bytecode of the method indexes in b loop indexes", "target": 0}
{"idx": 35276, "func": "(1|intlen).prec", "target": 0}
{"idx": 35277, "func": "(non-Javadoc) @see org.columba.core.filter.IFilterList#moveDown(org.columba.core.filter.Filter)", "target": 0}
{"idx": 35278, "func": "//{{{ Do keywords", "target": 0}
{"idx": 35279, "func": "//i18n[AbstractRefactoringDialog.tableNameLabel=Table Name: ]", "target": 0}
{"idx": 35280, "func": "more space below", "target": 0}
{"idx": 35281, "func": "//System.err.println(\" figureOutBase/base=\" + base);", "target": 0}
{"idx": 35282, "func": "UCS-4 must begin with \"<!XML\" 0x00 0x00 0x00 0x3c: UCS-4, big-endian (1234)", "target": 0}
{"idx": 35283, "func": "//{{{ invalidateSelectedLines() method", "target": 0}
{"idx": 35284, "func": "//////////////////////////////////////////////////////////////////////////PROTECTED METHODS These provide the opportunity to subclass the standard renderer and create custom effects. ////////////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 35285, "func": "Create a code formatter for this compilation unit, if needed", "target": 0}
{"idx": 35286, "func": "value error shouldn't happen", "target": 0}
{"idx": 35287, "func": "try some nulls", "target": 0}
{"idx": 35288, "func": "TODO: set font?", "target": 0}
{"idx": 35289, "func": "initialize the root of the class hierarchy completely", "target": 0}
{"idx": 35290, "func": "Skip the <?xml... first line", "target": 0}
{"idx": 35291, "func": "FastInvocationCallback", "target": 0}
{"idx": 35292, "func": "don't call super.close() because that reader is used on other places ...", "target": 1}
{"idx": 35293, "func": "i.e. mailBody is empty", "target": 0}
{"idx": 35294, "func": "//{{{ setDigitRegexp() method", "target": 0}
{"idx": 35295, "func": "You can not compute a value for a directory", "target": 0}
{"idx": 35296, "func": "assume this ident's text does not refer to a property on the given persister", "target": 0}
{"idx": 35297, "func": "Private iterator used to unwrap the URL from the URLString class", "target": 0}
{"idx": 35298, "func": "If there's no second argument, simply use the working directory of the runtime.", "target": 0}
{"idx": 35299, "func": "//{{{ WorkThreadHandler class", "target": 0}
{"idx": 35300, "func": "'~/...' as path to expand", "target": 0}
{"idx": 35301, "func": "inport the certificate", "target": 0}
{"idx": 35302, "func": "Replace \"..\" with \"\" This is to prevent access to the rest of the file system", "target": 0}
{"idx": 35303, "func": "protocol://[user:pass@]host:[port]", "target": 0}
{"idx": 35304, "func": "we return something valid even if there is a DB error", "target": 0}
{"idx": 35305, "func": "TODO: MRI behavior: Call \"+\" or \"add\", depending on the call. But this leads to exceptions when Floats are added. See: http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/17374 return callCoerced(context, op, b, true); -- this is MRI behavior. We'll use ours for now, thus providing an ability to add Floats.", "target": 1}
{"idx": 35306, "func": "//{{{ goToNextMarker() method", "target": 0}
{"idx": 35307, "func": "i18n[userscript.selClasspathToDel=Please select the classpath entry to delete]", "target": 0}
{"idx": 35308, "func": "the number of decimal digits allowed to the right of the decimal point in the number", "target": 0}
{"idx": 35309, "func": "AttributeLink.class", "target": 0}
{"idx": 35310, "func": "create field declaration with 1 variable declaration fragment", "target": 0}
{"idx": 35311, "func": "Handle application genmodel stub //", "target": 0}
{"idx": 35312, "func": "//for backwards compatibility, the color variable is stored also as a property", "target": 0}
{"idx": 35313, "func": "If the fifo could not be restored initialize it", "target": 0}
{"idx": 35314, "func": "prepare a faster handle if handles are enabled and the method and class are public", "target": 0}
{"idx": 35315, "func": "evict() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 35316, "func": "tray icon not supported on Mac", "target": 0}
{"idx": 35317, "func": "minorTickCount", "target": 0}
{"idx": 35318, "func": "//import the data back from the same file", "target": 0}
{"idx": 35319, "func": "check that an exception in the constructor is noticed", "target": 0}
{"idx": 35320, "func": "@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseALetExpression(tudresden.ocl.parser.node.ALetExpression)", "target": 0}
{"idx": 35321, "func": "load the encoding", "target": 0}
{"idx": 35322, "func": "public String getDropIndexSQL(String tableName, String indexName, boolean cascade, DatabaseObjectQualifier qualifier, SqlGenerationPreferences prefs) { return null; }", "target": 0}
{"idx": 35323, "func": "ask the DataType object if the two values are the same", "target": 0}
{"idx": 35324, "func": "build string", "target": 0}
{"idx": 35325, "func": "detached collections that get found + reattached during flush shouldn't be ignored", "target": 0}
{"idx": 35326, "func": "Note: no way to mutate the Throwable message, must maintain our own", "target": 0}
{"idx": 35327, "func": "messages.properties", "target": 0}
{"idx": 35328, "func": "TODO: Should the method signature of this method be changed to match the super-implementation (using a TestElement parameter instead of AbstractListenerElement)? This would require an instanceof check before adding the listener (below), but would also make the behavior a bit more obvious for sub-classes -- the Java rules dealing with this situation aren't always intuitive, and a subclass may think it is calling this version of the method when it is really calling the superclass version instead.", "target": 1}
{"idx": 35329, "func": "DB2 cannot alter a column's null attribute directly (only through constraints). Not only that, but it's apparently not a valid thing to do to create a primary key using a column that has been made \"not null\" via a check constraint. Therefore, the only columns that qualify to be made PKs are those that were declared not null at the time of table creation.", "target": 0}
{"idx": 35330, "func": "See if there are any inner classes for this class and add them in if there are", "target": 0}
{"idx": 35331, "func": "Trying to cast primitive to an object type Primitive.NULL can be cast to any object type", "target": 0}
{"idx": 35332, "func": "BufferUpdate.CLOSED", "target": 0}
{"idx": 35333, "func": "create a rounded clip LARGER than the comp", "target": 0}
{"idx": 35334, "func": "load properties from file if specified, otherwise use Ant's properties", "target": 0}
{"idx": 35335, "func": "go ahead and set the lazy here, since pojo.proxy can override it.", "target": 0}
{"idx": 35336, "func": "line 948", "target": 0}
{"idx": 35337, "func": "get text where to find pattern", "target": 0}
{"idx": 35338, "func": "UML 2.x", "target": 0}
{"idx": 35339, "func": "StylePanel class which provides additional parameters for changing Text elements provided by GEF. TODO: i18n", "target": 1}
{"idx": 35340, "func": "Lu Ll Lo", "target": 0}
{"idx": 35341, "func": "// private boolean _bracketHighlighting = true;", "target": 0}
{"idx": 35342, "func": "//{{{ isWrapGuidePainted() method", "target": 0}
{"idx": 35343, "func": "test monday though friday timeline", "target": 0}
{"idx": 35344, "func": "need nested read/write elements", "target": 0}
{"idx": 35345, "func": "2. Display global preferences", "target": 0}
{"idx": 35346, "func": "Increase the height of the fig:", "target": 0}
{"idx": 35347, "func": "todo : remove this once ComponentMetamodel is complete and merged", "target": 1}
{"idx": 35348, "func": "30A0..30FF;", "target": 0}
{"idx": 35349, "func": "show attachment panel", "target": 0}
{"idx": 35350, "func": "i18n[editextras.escapeDate=Escape date]", "target": 0}
{"idx": 35351, "func": "Only work for associatins", "target": 0}
{"idx": 35352, "func": "Some drivers for both MS SQL and Sybase don't return guest as a schema name.", "target": 0}
{"idx": 35353, "func": "TODO: Make the running indicator its own class instead of a JButton", "target": 1}
{"idx": 35354, "func": "arg grouping, use slower arg walking logic", "target": 0}
{"idx": 35355, "func": "We just can't do it. //", "target": 0}
{"idx": 35356, "func": "if this successor has not already been pushed onto the stack...", "target": 0}
{"idx": 35357, "func": "//{{{ getIndentSize() method", "target": 0}
{"idx": 35358, "func": "Adds contents of a directory to the output.", "target": 0}
{"idx": 35359, "func": "i18n[mssql.fileOptions=File Options]", "target": 0}
{"idx": 35360, "func": "Used by editing operations to reset the field to its original value.", "target": 0}
{"idx": 35361, "func": "Note: Only used by compiler until it can use getConstant again or use some other refactoring", "target": 0}
{"idx": 35362, "func": "Here we can either revert any unchanged files in a changelist or any files regardless of whether they have been changed or not The whole process also accepts a p4 filespec", "target": 0}
{"idx": 35363, "func": "tell user that there was a problem", "target": 0}
{"idx": 35364, "func": "//{{{ getReverseSearch() method", "target": 0}
{"idx": 35365, "func": "NOT_SUPPORTED_SHOULD_USE_JDBC3_PreparedStatement.getGeneratedKeys_method", "target": 0}
{"idx": 35366, "func": "//private Shape rightArrow;", "target": 0}
{"idx": 35367, "func": "TODO: Do nothing until code is reviewed", "target": 0}
{"idx": 35368, "func": "XXX - we are committing CombiningChar and Extender here", "target": 1}
{"idx": 35369, "func": "write a Properties file in each directory:", "target": 0}
{"idx": 35370, "func": "now do the work...", "target": 0}
{"idx": 35371, "func": "use this for JRuby-internal finalizers", "target": 0}
{"idx": 35372, "func": "user asks to remove non-existent", "target": 0}
{"idx": 35373, "func": "If this thread is sleeping or stopped, wake it", "target": 0}
{"idx": 35374, "func": "//{{{ loadDockableWindows() method", "target": 0}
{"idx": 35375, "func": "draw domain crosshair if required...", "target": 0}
{"idx": 35376, "func": "Handle eOpposite specially. //", "target": 0}
{"idx": 35377, "func": "we do nothing", "target": 0}
{"idx": 35378, "func": "Transfer the data and convert the structured selection to a collection of objects. //", "target": 0}
{"idx": 35379, "func": "line 1116", "target": 0}
{"idx": 35380, "func": "//we are defined, so it is an instantiation problem", "target": 0}
{"idx": 35381, "func": "END class SubAnt", "target": 0}
{"idx": 35382, "func": "TODO: We shouldn't need this reflection any more once we have convinced ourselves that everything with a getItemUID method is implementing IItemUID", "target": 1}
{"idx": 35383, "func": "put everything together", "target": 0}
{"idx": 35384, "func": "Error generated during parsing", "target": 0}
{"idx": 35385, "func": "a TestSuite can contain Tests from multiple classes, even tests with the same name - disambiguate them.", "target": 0}
{"idx": 35386, "func": "//{{{ setFrames() method", "target": 0}
{"idx": 35387, "func": "notification of menu bar", "target": 0}
{"idx": 35388, "func": "If the adapter factory is composeable, we'll adapt using the root. //", "target": 0}
{"idx": 35389, "func": "if it is in a scroll pane, then we add to the end of the list.", "target": 0}
{"idx": 35390, "func": "//{{{ cellRectIsVisible() method", "target": 0}
{"idx": 35391, "func": "//columns", "target": 0}
{"idx": 35392, "func": "set transient fields", "target": 0}
{"idx": 35393, "func": "TODO: Maybe prompt the user to ask to append the records, ignoring errors for constraint violations?", "target": 1}
{"idx": 35394, "func": "//GenModelPackage", "target": 0}
{"idx": 35395, "func": "line 1643", "target": 0}
{"idx": 35396, "func": "//{{{ Event firing methods", "target": 0}
{"idx": 35397, "func": "line 1784", "target": 0}
{"idx": 35398, "func": "Now, process the returns", "target": 0}
{"idx": 35399, "func": "//check if the detached object being merged is the parent", "target": 0}
{"idx": 35400, "func": "rb_yield_values(2,...) equivalent", "target": 0}
{"idx": 35401, "func": "Regexp engine 'java'", "target": 0}
{"idx": 35402, "func": "fire all of the status events", "target": 0}
{"idx": 35403, "func": "create a message", "target": 0}
{"idx": 35404, "func": "LOOP LABEL $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$", "target": 0}
{"idx": 35405, "func": "'baseItemLabelFont' : immutable, no need to clone reference", "target": 0}
{"idx": 35406, "func": "least significant r bits", "target": 0}
{"idx": 35407, "func": "//see if it is a package or a class", "target": 0}
{"idx": 35408, "func": "we are done", "target": 0}
{"idx": 35409, "func": "dataExtractOrder", "target": 0}
{"idx": 35410, "func": "Ignore if we can't freeze.", "target": 0}
{"idx": 35411, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsNonNullableColumns()", "target": 0}
{"idx": 35412, "func": "//TODO: initial value", "target": 0}
{"idx": 35413, "func": "//assertEquals(\"1a:aa.\",f1a.invoke());", "target": 0}
{"idx": 35414, "func": "always add markers on selected lines", "target": 0}
{"idx": 35415, "func": "//{{{ setBooleanProperty() method", "target": 0}
{"idx": 35416, "func": "//render the where and from parts", "target": 0}
{"idx": 35417, "func": "//use fle from original websphere jar", "target": 0}
{"idx": 35418, "func": "Always create hash because we will always need it", "target": 0}
{"idx": 35419, "func": "////////////////////////////////////////////////////////////event related stuff", "target": 0}
{"idx": 35420, "func": "end class SPFigEdgeModelElement", "target": 0}
{"idx": 35421, "func": "i18n[SchemaPropertiesPanel.loadAndCacheAll=Load all and cache all Schemas]", "target": 0}
{"idx": 35422, "func": "//{{{ getFontRenderContext() method", "target": 0}
{"idx": 35423, "func": "Group all columns by index", "target": 0}
{"idx": 35424, "func": "Some databases cannot order by LONG/LOB columns.", "target": 0}
{"idx": 35425, "func": "//Check API for these - it's how CVS does it...", "target": 0}
{"idx": 35426, "func": "Note: initialised with error = failure = false", "target": 0}
{"idx": 35427, "func": "g2.setColor(fillColor); g2.fillRect(0,0,w,h);", "target": 0}
{"idx": 35428, "func": "$?: last status", "target": 0}
{"idx": 35429, "func": "throw new IllegalArgumentException(\"Property '\" + attribute + \"' doesn't exist in metamodel\");", "target": 0}
{"idx": 35430, "func": "Bean for the global preferences", "target": 0}
{"idx": 35431, "func": "cannot delete rows in read-only table", "target": 0}
{"idx": 35432, "func": "//MUST do this for background to show up.", "target": 0}
{"idx": 35433, "func": "31A0..31BF;", "target": 0}
{"idx": 35434, "func": "_inWidgetSetVisible was introduced to allow moveToFront to be called from within setVisible. See EditWhereColsSheet or SQLFilterSheet", "target": 0}
{"idx": 35435, "func": "not used by plot", "target": 1}
{"idx": 35436, "func": "//Public //Private //Family //Assembly //Family and Assembly //Family or Assembly //Private Scope", "target": 0}
{"idx": 35437, "func": "//SessionFactory name:", "target": 0}
{"idx": 35438, "func": "Test that requiring a normal Java class raises an error (JRUBY-3214", "target": 0}
{"idx": 35439, "func": "/ for test only - ignore tests where we arent work at the moment public static junit.framework.Test suite() { junit.framework.TestSuite suite= new junit.framework.TestSuite(); suite.addTest(new ModifiedSelectorTest(\"testValidateWrongCache\")); return suite; }", "target": 0}
{"idx": 35440, "func": "Keep a reference to the temporary memory in the cache so it does not get freed by the GC until the struct is freed //", "target": 0}
{"idx": 35441, "func": "//now done in EntityIdentityInsertAction //persister.setIdentifier( entity, id, source.getEntityMode() );", "target": 0}
{"idx": 35442, "func": "//{{{ lineToChunkList() method", "target": 0}
{"idx": 35443, "func": "//stats", "target": 0}
{"idx": 35444, "func": "//{{{ PosTopHalf class", "target": 0}
{"idx": 35445, "func": "Override the implementations of the superclass, forwarding all methods from the CellEditor interface to our delegate. //", "target": 0}
{"idx": 35446, "func": "//bail on no references listed", "target": 0}
{"idx": 35447, "func": "Load the resource through the editing domain. This will create a context and associate it with the resource set. //", "target": 0}
{"idx": 35448, "func": "set arguments and body", "target": 0}
{"idx": 35449, "func": "we don't handle key pressed A+", "target": 0}
{"idx": 35450, "func": "//{{{ Occur class", "target": 0}
{"idx": 35451, "func": "can this happen?", "target": 0}
{"idx": 35452, "func": "NOW DO SOME OPTIONAL CUSTOMISATION OF THE CHART...", "target": 0}
{"idx": 35453, "func": "TODO: Why is this throwing a generic runtime exception?!?!", "target": 1}
{"idx": 35454, "func": "Already processed", "target": 0}
{"idx": 35455, "func": "line 1488", "target": 0}
{"idx": 35456, "func": "for every message", "target": 0}
{"idx": 35457, "func": "Don't allow drag outside of bounds of diagram", "target": 0}
{"idx": 35458, "func": "0100..017F;", "target": 0}
{"idx": 35459, "func": "Operation", "target": 0}
{"idx": 35460, "func": "//registerFunction( \"trim\", new StandardSQLFunction( \"trim\", Hibernate.STRING ) );", "target": 0}
{"idx": 35461, "func": "mark as read", "target": 0}
{"idx": 35462, "func": "System bar.", "target": 0}
{"idx": 35463, "func": "Save various information which is needed to do Update & Cancel.", "target": 0}
{"idx": 35464, "func": "//tstich: CA-41 bugfix", "target": 0}
{"idx": 35465, "func": "write everything up to the from", "target": 0}
{"idx": 35466, "func": "//ResourceChangeImpl", "target": 0}
{"idx": 35467, "func": "destFolder.fireMessageAdded(uids[i]);", "target": 0}
{"idx": 35468, "func": "I wish I could make this \"friendly\" to only NameSpace", "target": 1}
{"idx": 35469, "func": "What's the difference between id and name ?", "target": 0}
{"idx": 35470, "func": "we need to escape the description in case there are /", "target": 0}
{"idx": 35471, "func": "set the Transaction Isolation if defined", "target": 0}
{"idx": 35472, "func": "If it's not implied or it is implied and it's a many to many join where the target wasn't found.", "target": 0}
{"idx": 35473, "func": "\"var\" means untyped, return null class", "target": 0}
{"idx": 35474, "func": "Init the sequence diagrams from the module", "target": 0}
{"idx": 35475, "func": "vertical rectangle", "target": 0}
{"idx": 35476, "func": "We'll rethrow the original exception, not this one.", "target": 0}
{"idx": 35477, "func": "//Ignore - we will use the defaults.", "target": 0}
{"idx": 35478, "func": "//{{{ PaintCaret class", "target": 0}
{"idx": 35479, "func": "//tickLabelFontField.setFont(SwtUtils.toSwtFontData(getDisplay(), axis.getTickLabelFont()));", "target": 0}
{"idx": 35480, "func": "------------------------ --- Member Variables --- ------------------------", "target": 0}
{"idx": 35481, "func": "(non-Javadoc) @see org.apache.jmeter.testelement.TestStateListener#testStarted()", "target": 0}
{"idx": 35482, "func": "gather result results", "target": 0}
{"idx": 35483, "func": "need to carry over file name and first line globs because they are not given to us by the XMode handler, but instead are filled in by the catalog loader.", "target": 0}
{"idx": 35484, "func": "VERSION UNSAVED-VALUE", "target": 0}
{"idx": 35485, "func": "line 1082", "target": 0}
{"idx": 35486, "func": "check null list", "target": 0}
{"idx": 35487, "func": "if needed, comment out a comma of the previous enum constant", "target": 0}
{"idx": 35488, "func": "in case saved geometry is too small", "target": 0}
{"idx": 35489, "func": "//for EJB3", "target": 0}
{"idx": 35490, "func": "pieIndex...", "target": 0}
{"idx": 35491, "func": "collections cannot be compared", "target": 0}
{"idx": 35492, "func": "register hibernate types for default use in scalar sqlquery type auto detection", "target": 0}
{"idx": 35493, "func": "maxCandleWidthInMilliseconds", "target": 0}
{"idx": 35494, "func": "TODO: Implement tty? and isatty. We have no real capability to determine this from java, but if we could set tty status, then we could invoke jruby differently to allow stdin to return true on this. This would allow things like cgi.rb to work properly.", "target": 1}
{"idx": 35495, "func": "jetNature.setTemplateContainers(newTemplateContainers);", "target": 0}
{"idx": 35496, "func": "let this take precedence if defined, since it works for assigned identifiers", "target": 0}
{"idx": 35497, "func": "//{{{ ColorRenderer class", "target": 0}
{"idx": 35498, "func": "//do we even really need this? the update will fail anyway....", "target": 1}
{"idx": 35499, "func": "right represents a joins originating from left; or both right and left reprersent joins originating from the same FromElement", "target": 0}
{"idx": 35500, "func": "Nasty hardcoded values", "target": 1}
{"idx": 35501, "func": "//{{{ No rotation", "target": 0}
{"idx": 35502, "func": "//create tick object and add to list:", "target": 0}
{"idx": 35503, "func": "//layout.setRowGroups(new int[][]{ {1, 3, 5, 7, 9, 11, 13, 15} });", "target": 0}
{"idx": 35504, "func": "find the batch number associated with the current association, if any.", "target": 0}
{"idx": 35505, "func": "added the following hint because of http://stackoverflow.com/questions/7785082/", "target": 0}
{"idx": 35506, "func": "Incorrect number of type arguments. //", "target": 0}
{"idx": 35507, "func": "build the command line from what we got the format is ss Checkout VSS items [-G] [-C] [-H] [-I-] [-N] [-O] [-R] [-V] [-Y] [-?] as specified in the SS.EXE help", "target": 0}
{"idx": 35508, "func": "//{{{ getEditorIcon() method", "target": 0}
{"idx": 35509, "func": "Column not in model", "target": 0}
{"idx": 35510, "func": "//{{{ endRequest() method", "target": 0}
{"idx": 35511, "func": "For backward compatibility everything is above and right TODO: Do in polar domain?", "target": 1}
{"idx": 35512, "func": "TODO: make it cross runtime safe by COW or eager copy", "target": 1}
{"idx": 35513, "func": "Make sure any read()s after close fail.", "target": 0}
{"idx": 35514, "func": "Test duplicate cookie handling", "target": 0}
{"idx": 35515, "func": "TODO: I18N Don't use the empty string for this or it won't show in the list", "target": 0}
{"idx": 35516, "func": "Dialect list", "target": 0}
{"idx": 35517, "func": "alter name clauses", "target": 0}
{"idx": 35518, "func": "Single node in list", "target": 0}
{"idx": 35519, "func": "line 1995", "target": 0}
{"idx": 35520, "func": "put in the newroots map the include patterns without wildcard tokens", "target": 0}
{"idx": 35521, "func": "now do it again for the directories so they appear last.", "target": 0}
{"idx": 35522, "func": "if no folder was passed as argument, use global options", "target": 0}
{"idx": 35523, "func": "setBorder(noFocusBorder);", "target": 0}
{"idx": 35524, "func": "Backup suffix", "target": 0}
{"idx": 35525, "func": "//return the proxied object", "target": 0}
{"idx": 35526, "func": "needs to be same time for all threads in the group", "target": 0}
{"idx": 35527, "func": "//set up the args", "target": 0}
{"idx": 35528, "func": "//{{{ getStringWidth() method", "target": 0}
{"idx": 35529, "func": "XMLMap", "target": 0}
{"idx": 35530, "func": "block argument to the method closure present class present method table mutations, def, defs, undef, alias likely call to eval makes calls that are aware of the frame makes calls that are aware of the frame's self makes calls that are aware of the frame's visibility makes calls that are aware of the frame's block makes calls that are aware of the frame's name makes calls that set or get backref makes calls that set or get lastline makes calls that are aware of the frame's class optional arguments to the method rest arg to the method makes calls that are aware of the scope makes a zero-argument super call accesses or sets constants accesses or sets class variables makes normal super call contains a retry", "target": 0}
{"idx": 35531, "func": "Draw 3D effect on right-side button. //", "target": 0}
{"idx": 35532, "func": "cp1252 is often the default, but windows-1252 is the name listed by Charset.availableCharsets", "target": 0}
{"idx": 35533, "func": "See if there is a plugin-registered DataTypeComponent that can handle this column.", "target": 0}
{"idx": 35534, "func": "i18n[SQLScriptPreferencesPanel.prefsToolTip=Table names appear in scripts as SCHEMA.TABLE]", "target": 0}
{"idx": 35535, "func": "See if two copies look like copies of each other", "target": 0}
{"idx": 35536, "func": "can safely ignore", "target": 0}
{"idx": 35537, "func": "//Class/basicUnsetGenFeature.todo.override.javajetinc", "target": 0}
{"idx": 35538, "func": "set all tags/categories to be not selected", "target": 0}
{"idx": 35539, "func": "create an anonymous class as a kind of adaptor for the cognitive System to provide proper translation/i18n.", "target": 0}
{"idx": 35540, "func": "Generate an explicit join for the root dot node. The implied joins will be collected and passed up to the root dot node.", "target": 0}
{"idx": 35541, "func": "VERSION / TIMESTAMP", "target": 0}
{"idx": 35542, "func": "now stop the watchdog.", "target": 0}
{"idx": 35543, "func": "The ResourceLocation may specify a relative path for its location attribute. This is resolved using the appropriate base. //", "target": 0}
{"idx": 35544, "func": "if we got here all slots in use, so sleep until something happens", "target": 0}
{"idx": 35545, "func": "See also loadSchemaNames()", "target": 0}
{"idx": 35546, "func": "verify that changing the clone didn't affect the original", "target": 0}
{"idx": 35547, "func": "Normalise all other whitespace to a single space.", "target": 0}
{"idx": 35548, "func": "//i18n[OracleExceptionFormatter.positionLabel=Position: ]", "target": 0}
{"idx": 35549, "func": "//{{{ Handle brackets", "target": 0}
{"idx": 35550, "func": "remove old renderer", "target": 0}
{"idx": 35551, "func": "//NOTE: early return", "target": 0}
{"idx": 35552, "func": "Utility function to add a listener for an array of property names and remember the registration. @param element element to listen for changes on @param property array of property names (Strings) to listen for changes of @see org.argouml.model.ModelEventPump#addModelEventListener(PropertyChangeListener, Object, String)", "target": 0}
{"idx": 35553, "func": "some plugins add stuff in a \"right-hand\" gutter", "target": 0}
{"idx": 35554, "func": "Test for hashCode()", "target": 0}
{"idx": 35555, "func": "Make sure that depends attribute does not end in a ,", "target": 0}
{"idx": 35556, "func": "-I- ignore all errors -Vd", "target": 0}
{"idx": 35557, "func": "expand the destination node", "target": 0}
{"idx": 35558, "func": "// System.err.println(\"NullPointerException ignored.\");", "target": 0}
{"idx": 35559, "func": "Correct lazy initialization of static field without further updates:", "target": 0}
{"idx": 35560, "func": "mainPanel.add(threadPropsPanel, BorderLayout.NORTH); add(mainPanel, BorderLayout.CENTER);", "target": 0}
{"idx": 35561, "func": "i18n[UpdatePreferencesPanel.statusLableSuccessMsg=Connected Successfully]", "target": 0}
{"idx": 35562, "func": "try declaredField", "target": 0}
{"idx": 35563, "func": "shouldn't happen, but if a superclass is specified, it's not ours", "target": 0}
{"idx": 35564, "func": "//{{{ getClassName() method", "target": 0}
{"idx": 35565, "func": "There are no regions so create one and place the vertex //there.", "target": 0}
{"idx": 35566, "func": "superClass may be null.", "target": 0}
{"idx": 35567, "func": "@see org.argouml.uml.diagram.ui.FigEdgeModelElement#getDestination()", "target": 0}
{"idx": 35568, "func": "//figClone._polygon = (Polygon) _polygon.clone();", "target": 0}
{"idx": 35569, "func": "If non-null, then any argument list passed to invoke() will be ignored.", "target": 0}
{"idx": 35570, "func": "//load should work several times in a row", "target": 0}
{"idx": 35571, "func": "JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it", "target": 0}
{"idx": 35572, "func": "We are in eval with binding break out early FIXME: This is broken with the new backtrace stuff", "target": 1}
{"idx": 35573, "func": "return new Dimension(width, 400);", "target": 0}
{"idx": 35574, "func": "//{{{ setInterval() method", "target": 0}
{"idx": 35575, "func": "TODO: This needs more work. Test e.g. creation when an operation is selected. @author jaap.branderhorst@xs4all.nl @since Jan 9, 2003", "target": 1}
{"idx": 35576, "func": "TODO: This is going to cause the color to be reset on a refresh", "target": 1}
{"idx": 35577, "func": "For debugging", "target": 0}
{"idx": 35578, "func": "//IServiceManager.getInstance().createService(\"\");", "target": 0}
{"idx": 35579, "func": "We don't know how many entries will be skipped", "target": 0}
{"idx": 35580, "func": "//{{{ getResourceAsPath() method", "target": 0}
{"idx": 35581, "func": "-log logname", "target": 0}
{"idx": 35582, "func": "@see org.argouml.model.ModelEventPump#stopPumpingEvents()", "target": 0}
{"idx": 35583, "func": "hasFocus", "target": 0}
{"idx": 35584, "func": "Record the part. //", "target": 0}
{"idx": 35585, "func": "threadContext is not thread-safe, so keep within thread", "target": 0}
{"idx": 35586, "func": "TODO: Need to allow user to specify this", "target": 1}
{"idx": 35587, "func": "This handles IStructuredSelection. //", "target": 0}
{"idx": 35588, "func": "Custom TrustManager ignores all certificate errors TODO: implement conditional checking and logging (Derived from AuthSSLX509TrustManager in HttpClient contrib directory)", "target": 1}
{"idx": 35589, "func": "(non-Javadoc) @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)", "target": 0}
{"idx": 35590, "func": "//{{{ getThread() method", "target": 0}
{"idx": 35591, "func": "TODO: I think we need to make sure the keys are actually cloned, whereas the stroke instances are always immutable so they're OK", "target": 1}
{"idx": 35592, "func": "//no point in setting a message", "target": 0}
{"idx": 35593, "func": "read 1st line read 5 lines + restart to file begin line 2 line 3 line 4 line 5 return to 2nd line (first line is names)", "target": 0}
{"idx": 35594, "func": "If SQL executing produced warnings then write them out to the session message handler. TODO: This is a pain. PostgreSQL sends \"raise notice\" messages to the connection, not to the statment so they will be mixed up with warnings from other statements.", "target": 1}
{"idx": 35595, "func": "//{{{ updatePosition() method", "target": 0}
{"idx": 35596, "func": "labels should stay put, while user-input fields are allowed to grow as the user desires.", "target": 0}
{"idx": 35597, "func": "Types.CHAR, Types.VARCHAR, Types.LONGVARCHAR, Types.BINARY, Types.VARBINARY Types.LONGVARBINARY Types.NULL Types.JAVA_OBJECT Types.DISTINCT Types.ARRAY Types.BLOB Types.CLOB Types.REF Types.DATALINK", "target": 0}
{"idx": 35598, "func": "Satisfy java.util.List interface (for Java integration)", "target": 0}
{"idx": 35599, "func": "TODO: Check that this is correct", "target": 1}
{"idx": 35600, "func": "Add node for each object.", "target": 0}
{"idx": 35601, "func": "line 818", "target": 0}
{"idx": 35602, "func": "Log that the file is up to date...", "target": 0}
{"idx": 35603, "func": "@see java.util.List#lastIndexOf(java.lang.Object)", "target": 0}
{"idx": 35604, "func": "return eVirtualValues;", "target": 0}
{"idx": 35605, "func": "Delegate to the parent:", "target": 0}
{"idx": 35606, "func": "draw the cap if there is one...", "target": 0}
{"idx": 35607, "func": "this is a virtual id property...", "target": 0}
{"idx": 35608, "func": "i18n[syntax.prefSyntax=Syntax]", "target": 0}
{"idx": 35609, "func": "(non-Javadoc) @see org.columba.api.gui.frame.IDock#dock(org.columba.api.gui.frame.IDockable, org.columba.api.gui.frame.IDockable, org.columba.api.gui.frame.IDock.REGION, float)", "target": 0}
{"idx": 35610, "func": "Continue and try to close.", "target": 0}
{"idx": 35611, "func": "set the singleton instance of the Saver class to be the instance just created by the XMLBeanReader", "target": 0}
{"idx": 35612, "func": "Execute iterateMethod again.", "target": 0}
{"idx": 35613, "func": "For modules, it would be usefule to be able to remove their factories.<p> TODO: The effect of this method is not yet tested! @param factory the factory to remove", "target": 1}
{"idx": 35614, "func": "trigger source \"SELECT text \" + \"FROM dbo.sysobjects \" + \"inner join syscomments on syscomments.id = sysobjects.id \" + \"where loginame = ? \" + \"and name = ? \" + \"and type = 'TR' \";", "target": 0}
{"idx": 35615, "func": "Determine the values to be added and add them at the right position. //", "target": 0}
{"idx": 35616, "func": "$NON-NLS-1$ //default: IP/Hostname", "target": 0}
{"idx": 35617, "func": "Tests to see if the correct number of files were returned.", "target": 0}
{"idx": 35618, "func": "Generate the code implementing the alternate constructor switch", "target": 0}
{"idx": 35619, "func": "Re-increment", "target": 0}
{"idx": 35620, "func": "Remove the JavaConfig class from the list since it only implements the interface for error conditions.", "target": 0}
{"idx": 35621, "func": "If we don't know the type of the line and we are in emacs mode, it will be an error, because in this mode, jikes won't always print \"error\", but sometimes other keywords like \"Syntax\". We should look for all those keywords.", "target": 0}
{"idx": 35622, "func": "line 1574", "target": 0}
{"idx": 35623, "func": "i18n[ColorPropertiesPanel.statusBarBackgroundColorBtnLabel=Choose Status Bar Color]", "target": 0}
{"idx": 35624, "func": "These methods are based on the GraphEvents. These need replacing by more specic meaningful requests of the diagram interface model", "target": 1}
{"idx": 35625, "func": "//assertEquals(\"1a:aa.\",f1.invoke());N.B. returns different result from before", "target": 0}
{"idx": 35626, "func": "Do not add key to dataset", "target": 0}
{"idx": 35627, "func": "Since it is likely to have \"/\" on it's own line, and it is key to letting us know that proceeding statements form a multi-statement procedure or function, it deserves it's own place in the _queries arraylist. If it is followed by other procedure or function creation blocks, we may fail to detect that, so this just goes through the list and breaks apart statements on newline so that this cannot happen.", "target": 0}
{"idx": 35628, "func": "i18n[SQLScriptPreferencesPanel.deleteRefActionToolTip=Append ON DELETE ...]", "target": 0}
{"idx": 35629, "func": "Shifting with a delta of 0 does not change the range", "target": 0}
{"idx": 35630, "func": "Create an OuterJoinGenerator for this dialect.", "target": 0}
{"idx": 35631, "func": "there is no variable name", "target": 0}
{"idx": 35632, "func": "invalid date format - not enough tokens in it!!", "target": 0}
{"idx": 35633, "func": "nothing to save", "target": 0}
{"idx": 35634, "func": "include interface modules into the proxy class", "target": 0}
{"idx": 35635, "func": "SELECT 'unknown' as last_value, T1.max_val AS max_value, T1.min_val AS min_value, T1.cache AS cache_size, T1.inc_val AS increment_by, case T1.cycle as is_cycled FROM informix.syssequences AS T1, informix.systables AS T2 WHERE T2.tabid = T1.tabid and T2.owner = '<schema>' and T2.tabname = '<sequenceName>'", "target": 0}
{"idx": 35636, "func": "'~user/...' as path to expand", "target": 0}
{"idx": 35637, "func": "//cleanup of unused FigText's", "target": 0}
{"idx": 35638, "func": "For a Namespace: <pre> [2] The operation allContents results in a Set containing all ModelElements contained by the Namespace. allContents : Set(ModelElement); allContents = self.contents where contents = self.ownedElement -> union(self.namespace, contents) </pre><p>", "target": 0}
{"idx": 35639, "func": "Currently, we deal with only two path formats: Unix and Windows And Unix is everything that is not Windows (with the exception for NetWare and OS/2 below)", "target": 0}
{"idx": 35640, "func": "TODO: the above works in the current situation, but it's just a hack. How to get each editor to report whether it wants to grow bigger? Whether the property label should be at the left or at the top of the editor? ...?", "target": 1}
{"idx": 35641, "func": "must be a public class", "target": 0}
{"idx": 35642, "func": "Don't process the NAME column", "target": 0}
{"idx": 35643, "func": "UCS-4 must begin with \"<!XML\" 0x3c 0x00 0x00 0x00: UCS-4, little-endian (4321)", "target": 0}
{"idx": 35644, "func": "//{{{ Indent size", "target": 0}
{"idx": 35645, "func": "Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8()", "target": 0}
{"idx": 35646, "func": "Placeholder", "target": 0}
{"idx": 35647, "func": "&& !isPathExtensionNoQuestionmark()", "target": 0}
{"idx": 35648, "func": "FIXME: Get rid of laziness and handle restricted access elsewhere", "target": 1}
{"idx": 35649, "func": "If the user has selected a non-cannonical Binary format, we need to convert the text appropriately", "target": 0}
{"idx": 35650, "func": "do nothing by design", "target": 0}
{"idx": 35651, "func": "When reading into a heap buffer, the jvm allocates a temporary direct ByteBuffer of the requested size. To avoid allocating a huge direct buffer when doing ludicrous reads (e.g. 1G or more) we split the read up into chunks of no more than 1M //", "target": 0}
{"idx": 35652, "func": "debugging code, keeping for now", "target": 0}
{"idx": 35653, "func": "@see org.argouml.uml.ui.UMLComboBoxModel#addElement(java.lang.Object)", "target": 0}
{"idx": 35654, "func": "update tree-view", "target": 0}
{"idx": 35655, "func": "It does not contain a required string", "target": 0}
{"idx": 35656, "func": "do not show header", "target": 0}
{"idx": 35657, "func": "line 958", "target": 0}
{"idx": 35658, "func": "Can finish if we're on step1 and have actually made a choice", "target": 0}
{"idx": 35659, "func": "resource does exist -> property 'test' == 'true'", "target": 0}
{"idx": 35660, "func": "Add alias for original StringFromFile name (had only one underscore) //$NON-NLS-1$ //$NON-NLS-1$", "target": 0}
{"idx": 35661, "func": "//{{{ addActionSet() method", "target": 0}
{"idx": 35662, "func": "From outlier array sort out which are outliers and put these into an arraylist. If there are any farouts, set the flag on the OutlierListCollection", "target": 0}
{"idx": 35663, "func": "Listening only to \"remove\" events does not work... TODO: Check if this works now with new event pump - tfm", "target": 1}
{"idx": 35664, "func": "It's okay for there not be a precompiled template, so fail quietly.", "target": 0}
{"idx": 35665, "func": "ClassFinder needs this", "target": 0}
{"idx": 35666, "func": "XXX this should be done in CollectionsModelInterpreter but it can't trigger another invokeFeature...", "target": 0}
{"idx": 35667, "func": "else keep shorter absolute path", "target": 0}
{"idx": 35668, "func": "If a line is followed by a blank line put it back.", "target": 0}
{"idx": 35669, "func": "//now patch in all system properties", "target": 0}
{"idx": 35670, "func": "unable to set arguments or body", "target": 0}
{"idx": 35671, "func": "user rejects a relative path: keep absolute or no path", "target": 0}
{"idx": 35672, "func": "Pull out the method signatures with matching names", "target": 0}
{"idx": 35673, "func": "equal", "target": 0}
{"idx": 35674, "func": "//TODO: not really completely correct, since the uoe could occur while resolving associations, leaving the PC in an inconsistent state", "target": 1}
{"idx": 35675, "func": "attempt to set the permissions, if we have been passed a POSIX instance, and only if the file was created in this call.", "target": 0}
{"idx": 35676, "func": "probably just no results -- return it empty.", "target": 0}
{"idx": 35677, "func": "create config-folder // File file = new File(\"test_config\"); // file.mkdir(); // new Config(file); // Logging.DEBUG = true; // Logging.createDefaultHandler(); // // init mail component // new MailMain().init(); // new AddressbookMain().init(); // now load all available plugins // PluginManager.getInstance().initExternalPlugins();", "target": 0}
{"idx": 35678, "func": "the element has been removed from the set", "target": 0}
{"idx": 35679, "func": "TODO: This method is obsolete. Use getInputMap etc as below", "target": 1}
{"idx": 35680, "func": "//refresh() does not pass an entityName", "target": 0}
{"idx": 35681, "func": "NOTE: there are two rows. NOTE: MssqlConstraint holds the columns in the table participating in the key. NOTE: ForeignKeyConstraint holds the columns in the referenced table IN THE SAME ORDER.", "target": 0}
{"idx": 35682, "func": "This is perfectly normal and happens among other things within the call to setDiagram (below).", "target": 0}
{"idx": 35683, "func": "Axion cannot handle ts escape sequence - so skip this test for now.", "target": 0}
{"idx": 35684, "func": "Set up a snapshot of the current input source.", "target": 0}
{"idx": 35685, "func": "\"select view_definition \" + \"from information_schema.views \" + \"where table_schema = ? \" + \"and table_name = ? \";", "target": 0}
{"idx": 35686, "func": "end class ToDoTreeRenderer", "target": 0}
{"idx": 35687, "func": "//same date if dest timestamp is within granularity of the srcfile", "target": 0}
{"idx": 35688, "func": "//if flag then //create \"log10\"-type label", "target": 0}
{"idx": 35689, "func": "First try to see if this package's implementation class has an eInstance. //", "target": 0}
{"idx": 35690, "func": "No beantype flag is needed for an entity bean", "target": 0}
{"idx": 35691, "func": "//return countParts(value) > 1;", "target": 0}
{"idx": 35692, "func": "//DMS handle this well.", "target": 1}
{"idx": 35693, "func": "//{{{ getShowHiddenFiles() method", "target": 0}
{"idx": 35694, "func": "line 1114", "target": 0}
{"idx": 35695, "func": "Attempt to save this project under a new name.", "target": 0}
{"idx": 35696, "func": "Programming error", "target": 0}
{"idx": 35697, "func": "//&& Model.getFacade().isAProperty(o)", "target": 0}
{"idx": 35698, "func": "COMMON VARIABLE METHODS //", "target": 0}
{"idx": 35699, "func": "if there is no specific paint, use the general one...", "target": 0}
{"idx": 35700, "func": "show extra \"expecting...\" info", "target": 0}
{"idx": 35701, "func": "@see org.argouml.cognitive.ui.WizStep#setTarget(java.lang.Object)", "target": 0}
{"idx": 35702, "func": "$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$", "target": 0}
{"idx": 35703, "func": "i18n[codecompletion.prefs.table.udfWithParams=UDF with params]", "target": 0}
{"idx": 35704, "func": "//{{{ hyperlinkUpdate() method", "target": 0}
{"idx": 35705, "func": "TODO: Do we have any potential consumers of the unversioned name outside of the notation subsystem?", "target": 1}
{"idx": 35706, "func": "(non-Javadoc) @see org.columba.chat.jabber.IBuddyStatus#getJabberId()", "target": 0}
{"idx": 35707, "func": "abstract classes are hardly ever singletons", "target": 0}
{"idx": 35708, "func": "//cannot batch fetch by unique key (property-ref associations)", "target": 0}
{"idx": 35709, "func": "Oracle won't allow in-place conversion between CLOB and VARCHAR", "target": 0}
{"idx": 35710, "func": "Compares obj1 and obj2 sorting by user object type, then name. Diagrams are sorted first, then packages, then other types. sorts by name within type groups. Nulls are sorted first for names. @see java.util.Comparator#compare(java.lang.Object, java.lang.Object)", "target": 0}
{"idx": 35711, "func": "otherwise look up the position list", "target": 0}
{"idx": 35712, "func": "super.mergeIn(element);", "target": 0}
{"idx": 35713, "func": "it is or was referenced _somewhere_", "target": 0}
{"idx": 35714, "func": "currently used font", "target": 0}
{"idx": 35715, "func": "current document reference: keep no path or query", "target": 0}
{"idx": 35716, "func": "If we still don't have one, we'll have to settle for a demand created EDataType or EClass, so create a new EClassifier with a nice unique name. //", "target": 0}
{"idx": 35717, "func": "//{{{ getSelectionAtOffset() method", "target": 0}
{"idx": 35718, "func": "Roll back transaction from first attempt & start new one", "target": 0}
{"idx": 35719, "func": "Windows quoting of the value", "target": 0}
{"idx": 35720, "func": "We want unique ids for dataflow variables", "target": 0}
{"idx": 35721, "func": "//popupMenu.getSelectionModel().clearSelection();", "target": 0}
{"idx": 35722, "func": "should the following two be switched? If r1 and r2 refer to the same file, isn't their content equal regardless of whether that file is a directory?", "target": 0}
{"idx": 35723, "func": "line 1087", "target": 0}
{"idx": 35724, "func": "dialogs fuck things up if a menu is visible, etc! //new BeanShellErrorDialog(view,e);", "target": 1}
{"idx": 35725, "func": "TODO: just a guess, probably not right - tfm return handle instanceof LinkEndData;", "target": 1}
{"idx": 35726, "func": "if the axes use a linear scale, you can uncomment the code below and switch to the alternative transX/transY calculation inside the loop that follows - it is a little bit faster then. int xx = (int) dataArea.getMinX(); int ww = (int) dataArea.getWidth(); int yy = (int) dataArea.getMaxY(); int hh = (int) dataArea.getHeight(); double domainMin = this.domainAxis.getLowerBound(); double domainLength = this.domainAxis.getUpperBound() - domainMin; double rangeMin = this.rangeAxis.getLowerBound(); double rangeLength = this.rangeAxis.getUpperBound() - rangeMin;", "target": 0}
{"idx": 35727, "func": "//{{{ requestFocus() method", "target": 0}
{"idx": 35728, "func": "For a Package: <pre> [3] The operation allContents results in a Set containing the ModelElements owned by or imported by the Package or one of its ancestors. allContents : Set(ModelElement); allContents = self.contents->union( self.parent.allContents->select(e | e.elementOwnership.visibility = #public or e.elementOwnership.visibility = #protected)) where the required operations are defined as : [1] The operation contents results in a Set containing the ModelElements owned by or imported by the Package. contents : Set(ModelElement) contents = self.ownedElement->union(self.importedElement) [2] The operation allImportedElements results in a Set containing the ModelElements imported by the Package or one of its parents. allImportedElements : Set(ModelElement) allImportedElements = self.importedElement->union( self.parent.oclAsType(Package).allImportedElements->select( re | re.elementImport.visibility = #public or re.elementImport.visibility = #protected)) </pre>", "target": 0}
{"idx": 35729, "func": "disable subject column renderer, use tree-cellrenderer instead", "target": 0}
{"idx": 35730, "func": "The target model element In UML1.x this is the element that owns the expression. In UML2.x this is the expression itself TODO: This makes behaviour different enough that separate subclasses should be considered.", "target": 1}
{"idx": 35731, "func": "failed", "target": 0}
{"idx": 35732, "func": "a nested composite element", "target": 0}
{"idx": 35733, "func": "probably should not happen", "target": 0}
{"idx": 35734, "func": "spare scanning again and again", "target": 0}
{"idx": 35735, "func": "get configuration from tree.xml file", "target": 0}
{"idx": 35736, "func": "save search position", "target": 0}
{"idx": 35737, "func": "---- privateStateProvinceCountyLabel ----", "target": 0}
{"idx": 35738, "func": "//The connection Technology used, could be ODBC, JDBC, ADO //This is optional. If you don't want to give out this info, please enter \"N/A\"", "target": 0}
{"idx": 35739, "func": "Yes, it is.", "target": 0}
{"idx": 35740, "func": "ensure correctly set on initial display ensure correctly set on initial display", "target": 0}
{"idx": 35741, "func": "may be set from a different thread", "target": 0}
{"idx": 35742, "func": "now did any of the threads throw an exception", "target": 0}
{"idx": 35743, "func": "//{{{ actionBar() method", "target": 0}
{"idx": 35744, "func": "Paint the background", "target": 0}
{"idx": 35745, "func": "if not set, auto-create the ClassPath from the project", "target": 0}
{"idx": 35746, "func": "or getDefaultValueFor(prop)?", "target": 0}
{"idx": 35747, "func": "We use multipart if we have been told so, or files are present and the files should not be send as the post body", "target": 0}
{"idx": 35748, "func": "i18n[MetaDataTab.title=Metadata]", "target": 0}
{"idx": 35749, "func": "The next if-clause is important for the Deployment-diagram it detects if the enclosing fig is a component, in this case the container will be set for the owning Interface", "target": 0}
{"idx": 35750, "func": "i18n[mysql.copyCancel=Cancel]", "target": 0}
{"idx": 35751, "func": "//aliasRefNode.resolve( false, false, aliasRefNode.getText() ); //TODO: is it kosher to do it here? //TODO: is it kosher to do it here?", "target": 1}
{"idx": 35752, "func": "check for easy mistake", "target": 0}
{"idx": 35753, "func": "5 columns size", "target": 0}
{"idx": 35754, "func": "DRAW THE BARS...", "target": 0}
{"idx": 35755, "func": "build the command line from what we got the format is ss Checkin VSS items [-H] [-C] [-I-] [-N] [-O] [-R] [-W] [-Y] [-?] as specified in the SS.EXE help", "target": 0}
{"idx": 35756, "func": "init the testclasses path object", "target": 0}
{"idx": 35757, "func": "For a Classifier: <pre> [10] The operation allContents returns a Set containing all ModelElements contained in the Classifier together with the contents inherited from its parents. allContents : Set(ModelElement); allContents = self.contents->union( self.parent.allContents->select(e | e.elementOwnership.visibility = #public or e.elementOwnership.visibility = #protected)) where parent is defined for GeneralizableElement as: [1] The operation parent returns a Set containing all direct parents parent : Set(GeneralizableElement); parent = self.generalization.parent </pre><p>", "target": 0}
{"idx": 35758, "func": "some kind of problem - tell user i18n[DataSetUpdateableTableModelImpl.error.deleteFailed=One of the delete operations failed with exception:\\n{0}\\nDatabase is in an unknown state and may be corrupted.]", "target": 0}
{"idx": 35759, "func": "this does a calcBounds()", "target": 0}
{"idx": 35760, "func": "Collapse the fold...", "target": 0}
{"idx": 35761, "func": "No end bracket, params might follow", "target": 0}
{"idx": 35762, "func": "(non-Javadoc) @see org.columba.chat.ui.conversation.IConversationController#closeSelected()", "target": 0}
{"idx": 35763, "func": "Trigger end of loop condition on all parent controllers of current sampler", "target": 0}
{"idx": 35764, "func": "We have a special Command for VFolders", "target": 0}
{"idx": 35765, "func": "TODO: We'd like to test this in its new guise as PackageImport, but we don't have a good way to do it currently", "target": 1}
{"idx": 35766, "func": "TODO: calcBounds is called by SelectionManager when the Fig is dragged. This code is needed to reposition any self message as they are become detached from their classifier role (see issue 5562). The cause of the detachment is not yet understood. Unfortunately calcBounds is called from several other places so the code here is not optimal but is the best workaround until ArgoUML can provide its own replacement SelectionManager for sequence diagram requirements See - http://gef.tigris.org/issues/show_bug.cgi?id=344", "target": 1}
{"idx": 35767, "func": "end class StylePanelFigText", "target": 0}
{"idx": 35768, "func": "// initComponents();", "target": 0}
{"idx": 35769, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#ownDeletesAreVisible(int)", "target": 0}
{"idx": 35770, "func": "Frontbase has no known variation of a \"SELECT ... FOR UPDATE\" syntax...", "target": 0}
{"idx": 35771, "func": "(.://.?)\" \"something\" with :// (could be .? but then the Pattern would match whitespace) ( (&gt;). a html-Encoded > followed by anything | or([\"+punc+\"])\" any Punctuation (<br>)? 0 or 1 trailing <br> )$ end of String", "target": 0}
{"idx": 35772, "func": "//Ecore2XMLSwitch", "target": 0}
{"idx": 35773, "func": "situation 1", "target": 0}
{"idx": 35774, "func": "else start immediately", "target": 0}
{"idx": 35775, "func": "outputdir", "target": 0}
{"idx": 35776, "func": "replace <br> and </br> with newline", "target": 0}
{"idx": 35777, "func": "java.lang.Object is added at root of java proxy classes", "target": 0}
{"idx": 35778, "func": "//{{{ getMagicCaretPosition() method", "target": 0}
{"idx": 35779, "func": "If drop out, we're OK", "target": 0}
{"idx": 35780, "func": "SSS FIXME: 1. Is the ordering correct? (poll before next)", "target": 1}
{"idx": 35781, "func": "//executeTarget(\"setup\"); //commented out for performance while target is empty", "target": 0}
{"idx": 35782, "func": "fall back to the english version", "target": 0}
{"idx": 35783, "func": "boxed arg list __file__", "target": 0}
{"idx": 35784, "func": "no include pattern implicitly means includes=\"\"", "target": 0}
{"idx": 35785, "func": "//{{{ getLastModified() method", "target": 0}
{"idx": 35786, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsTransactionIsolationLevel(int)", "target": 0}
{"idx": 35787, "func": "delete does cascade to uninitialized collections", "target": 0}
{"idx": 35788, "func": "//no real data present", "target": 0}
{"idx": 35789, "func": "(non-Javadoc) @see org.apache.jmeter.gui.action.AbstractAction#doAction(java.awt.event.ActionEvent)", "target": 0}
{"idx": 35790, "func": "line 1657", "target": 0}
{"idx": 35791, "func": "public getters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 35792, "func": "FIXME: calculate xxLeft and xxRight", "target": 0}
{"idx": 35793, "func": "Position to the start of the last line in log.", "target": 0}
{"idx": 35794, "func": "line 1877", "target": 0}
{"idx": 35795, "func": "No directory delimeter. Rest of string is username", "target": 0}
{"idx": 35796, "func": "Makes sure that the last name is always in top of the list.", "target": 0}
{"idx": 35797, "func": "let the selector do its checks", "target": 0}
{"idx": 35798, "func": "call getpwent to fail early if unsupported", "target": 0}
{"idx": 35799, "func": "seriesOutlineStrokeList", "target": 0}
{"idx": 35800, "func": "Oracle throws this ex on BLOB data types", "target": 0}
{"idx": 35801, "func": "@see org.tigris.gef.base.Cmd#undoIt()", "target": 0}
{"idx": 35802, "func": "//{{{ isExpansionToggle() method", "target": 0}
{"idx": 35803, "func": "handler.notationDecl(name, publicId, systemId);", "target": 0}
{"idx": 35804, "func": "//default mode", "target": 0}
{"idx": 35805, "func": "Advance currentY to where the start of the body box is, remembering that it overlaps the next box by 1 pixel. Calculate the size of the body box, and update the Y pointer past it if it is displayed.", "target": 0}
{"idx": 35806, "func": "if location is null here the position of the new figNode is set after in org.tigris.gef.base.ModePlace.mousePressed(MouseEvent e)", "target": 0}
{"idx": 35807, "func": "TODO is null correct?", "target": 1}
{"idx": 35808, "func": "i18n[sqlscript.successCreate=Successfully created table {0}]", "target": 0}
{"idx": 35809, "func": "If previous time is zero, then target will be in the past. This is what we want, so first sample is run without a delay.", "target": 0}
{"idx": 35810, "func": "Drop the last character:", "target": 0}
{"idx": 35811, "func": "If the name has not already been defined define it", "target": 0}
{"idx": 35812, "func": "with args, with block", "target": 0}
{"idx": 35813, "func": "line 1051", "target": 0}
{"idx": 35814, "func": "TODO: This is an absurdly long method! Break it up.", "target": 1}
{"idx": 35815, "func": "Creates one of the fields used to display the graph's current values. @param color the color used to draw the value. By convention this is the same color that is used to draw the graph for this value and in the choose panel. @param length the number of digits which the field should be able to display @return a text field configured to display one of the current graph values private JTextField createInfoField(Color color, int length) { JTextField field = new JTextField(length); field.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0)); field.setEditable(false); field.setForeground(color); field.setBackground(getBackground()); The text field should expand horizontally, but have a fixed height field.setMaximumSize(new Dimension( field.getMaximumSize().width, field.getPreferredSize().height)); return field; }", "target": 0}
{"idx": 35816, "func": "the range axis is deserialized before the subplots, so its value range is likely to be incorrect...", "target": 0}
{"idx": 35817, "func": "$NON-NLS-1$ i.e. boolean saveXXX() $NON-NLS-1$ i.e. void setXXX(boolean) $NON-NLS-1$ e.g. save_XXX property", "target": 0}
{"idx": 35818, "func": "ALTER SEQUENCE sequenceName INCREMENT BY increment MINVALUE minimum MAXVALUE maxvalue RESTART WITH restart CACHE cache CYCLE;", "target": 0}
{"idx": 35819, "func": "swallow, throw the original exception instead", "target": 0}
{"idx": 35820, "func": "this is the expected cases", "target": 0}
{"idx": 35821, "func": "ScopeKind, VisibilityKind, PseudostateKind, etc Doesn't include Boolean though, despite what UML 1.4 spec says", "target": 0}
{"idx": 35822, "func": "this element can be contained add a menu item that allows the user to take that action", "target": 0}
{"idx": 35823, "func": "Verify the state of this new method in Hibernate 3.0 Dialect.java", "target": 0}
{"idx": 35824, "func": "restore context classloader, in case we're using a thread pool", "target": 0}
{"idx": 35825, "func": "we don't need any configuration here", "target": 0}
{"idx": 35826, "func": "mark found pattern //text.grabFocus();", "target": 0}
{"idx": 35827, "func": "made currentSample volatile", "target": 0}
{"idx": 35828, "func": "CLOBs are different from normal data types in that what is actually read from the DB is a descriptor pointing to the data rather than the data itself. During the initial load of the table, the values read from the descriptor may have been limited, but the descriptor itself has been completely read, Therefore we do not need to re-read the datum from the Database because we know that we have the entire descriptor. If the contents of the CLOB have been limited during the initial table load, that will be discovered when we check if the cell is editable and the full data will be read at that time using this descriptor.", "target": 0}
{"idx": 35829, "func": "//System.err.println(\"value: \" + thread.getProgressValue());", "target": 0}
{"idx": 35830, "func": "Make up a unique new name here. //$NON-NLS-1$", "target": 0}
{"idx": 35831, "func": "line 864", "target": 0}
{"idx": 35832, "func": "define filter rule", "target": 0}
{"idx": 35833, "func": "Spaces are not allowed in property names read from files", "target": 0}
{"idx": 35834, "func": "internal list of all results", "target": 0}
{"idx": 35835, "func": "Loop through the associations, counting the ends with aggregations", "target": 0}
{"idx": 35836, "func": "line 500", "target": 0}
{"idx": 35837, "func": "set the default values if not specified //@todo should be moved to the test class instead.", "target": 0}
{"idx": 35838, "func": "if the parent is a virtual folder the search cannot be applied directly look for the correct uids by finding the first non virtual folder", "target": 0}
{"idx": 35839, "func": "Set the child components to the heights in the array list calculating the height of any proportional component on the fly.", "target": 0}
{"idx": 35840, "func": "returns the positions of the resized instructions", "target": 0}
{"idx": 35841, "func": "return isToolbarEnabled(ACCOUNTINFOPANEL);", "target": 0}
{"idx": 35842, "func": "Predecessors used to be not implemented, because it caused some problems that I've not found an easy way to handle yet, d00mst. The specific problem is that the notation currently is ambiguous on second message after a thread split. Why not implement it anyway? d00mst TODO: Document this ambiguity and the choice made.", "target": 1}
{"idx": 35843, "func": "// _session.getSQLPanelAPI(_plugin)", "target": 0}
{"idx": 35844, "func": "reasonable defaults (?)", "target": 0}
{"idx": 35845, "func": "fields should really be an immutable map as it is never modified after construction //", "target": 0}
{"idx": 35846, "func": "IntrospectionHelperTest", "target": 0}
{"idx": 35847, "func": "url = ClassLoader.getSystemResource(path);", "target": 0}
{"idx": 35848, "func": "//i18n[DumpApplicationCommand.title.sessiondump=Session Dump: {0}]", "target": 0}
{"idx": 35849, "func": "autoWidthGap", "target": 0}
{"idx": 35850, "func": "Start timing", "target": 0}
{"idx": 35851, "func": "line 1381", "target": 0}
{"idx": 35852, "func": "VIEW", "target": 0}
{"idx": 35853, "func": "If there isn't something obviously wrong with the arguments... //", "target": 0}
{"idx": 35854, "func": "this is a new column", "target": 0}
{"idx": 35855, "func": "&& commandParameter instanceof MappingCommandParameter)", "target": 0}
{"idx": 35856, "func": "TODO: Rewrite this test using reflection against Uml class. This code has been commented out since September 2003", "target": 1}
{"idx": 35857, "func": "time zone", "target": 0}
{"idx": 35858, "func": "send all unsent messages found in Outbox", "target": 0}
{"idx": 35859, "func": "overrideNamespace", "target": 0}
{"idx": 35860, "func": "//GenModelPackageImpl", "target": 0}
{"idx": 35861, "func": "Build the replacer from all the variables in the collection:", "target": 0}
{"idx": 35862, "func": "//SchemaLocation", "target": 0}
{"idx": 35863, "func": "//{{{ fireScrollEvent() method", "target": 0}
{"idx": 35864, "func": "called by DisplayManager.BufferChangeHandler.transactionComplete()", "target": 0}
{"idx": 35865, "func": "we clone the chart because presumably there can be some delay between putting this instance on the system clipboard and actually having the getTransferData() method called...", "target": 0}
{"idx": 35866, "func": "If we do not exclude a Model here, then dropping the Model on a UseCase diagram causes a package to be drawn.", "target": 0}
{"idx": 35867, "func": "calculate the max label width from the plot dimensions, because a circular pie can leave a lot more room for labels...", "target": 0}
{"idx": 35868, "func": "on by default", "target": 0}
{"idx": 35869, "func": "$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$$NON-NLS-2$", "target": 0}
{"idx": 35870, "func": "(non-Javadoc) @see org.columba.mail.imap.IImapServer#fetchHeaderList(org.columba.mail.message.IHeaderList, java.util.List, org.columba.mail.folder.imap.IMAPFolder)", "target": 0}
{"idx": 35871, "func": "This happens when processing an element with simple content that has elements content even though it shouldn't. //", "target": 0}
{"idx": 35872, "func": "Yow...this is still ugly", "target": 1}
{"idx": 35873, "func": "You can only prune once. //", "target": 0}
{"idx": 35874, "func": "N.B. Other classes rely on this returning just the string.", "target": 0}
{"idx": 35875, "func": "First, save off the pertinent ids, as the return value", "target": 0}
{"idx": 35876, "func": "can't cache this stuff either (per-invocation)", "target": 0}
{"idx": 35877, "func": "// private final ISession _session;", "target": 0}
{"idx": 35878, "func": "no change", "target": 0}
{"idx": 35879, "func": "Check if the header manager had a content type header This allows the user to specify his own content-type for a PUT request", "target": 0}
{"idx": 35880, "func": "Test serializable elements - create the suite of tests", "target": 0}
{"idx": 35881, "func": "continuation line", "target": 0}
{"idx": 35882, "func": "Declare variables used in loop", "target": 0}
{"idx": 35883, "func": "20D0..20FF;", "target": 0}
{"idx": 35884, "func": "top-label-case", "target": 0}
{"idx": 35885, "func": "String construction routines by NOT byte[] buffer and making the target String shared", "target": 0}
{"idx": 35886, "func": "create a Command for every action of this filter -> create a compound object which encapsulates all commands", "target": 0}
{"idx": 35887, "func": "Converts null to length-zero array, and clones array to ensure immutability.", "target": 0}
{"idx": 35888, "func": "FIXME: This table will get moved into POSIX library so we can get all actual supported signals. This is a quick fix to support basic signals until that happens.", "target": 1}
{"idx": 35889, "func": "//classpath //add at the end of the classpath //the system classpath in order to find the tools.jar file", "target": 0}
{"idx": 35890, "func": "We have to look for the modelindex because of the Row Number column", "target": 0}
{"idx": 35891, "func": "Try using a JDK 1.3 launcher", "target": 0}
{"idx": 35892, "func": "These must not be static, otherwise Language change does not work $NON-NLS-1$", "target": 0}
{"idx": 35893, "func": "OBJ_INFECT", "target": 0}
{"idx": 35894, "func": "view starts on page and exceeds it", "target": 0}
{"idx": 35895, "func": "//TODO: improve this hack!", "target": 1}
{"idx": 35896, "func": "The constructor.<p> TODO: Is this constructor used? What is the purpose with it? @param n the name to be localized @param subs the go rules", "target": 1}
{"idx": 35897, "func": "If requested height equals needed height then do nothing; it fits exactly.", "target": 0}
{"idx": 35898, "func": "For lists, maps, and feature maps, the default is many-valued, which can be overridden by an upper-bound declaration. //", "target": 0}
{"idx": 35899, "func": "we are using this inpustream multiple times --> istream will be closed by CloneStreamMaster", "target": 0}
{"idx": 35900, "func": "If there is no difference, we mark it as not needing encoding", "target": 0}
{"idx": 35901, "func": "i18n[dataTypeBlob.blobType=BLOB (SQL type 2004)]", "target": 0}
{"idx": 35902, "func": "//outlinePaint", "target": 0}
{"idx": 35903, "func": "i18n[Application.splash.loadeditselections=Loading Edit 'Where' Columns selections...]", "target": 0}
{"idx": 35904, "func": "end class CrMergeClasses", "target": 0}
{"idx": 35905, "func": "Copys the gathered values into the lookup table.", "target": 0}
{"idx": 35906, "func": "Server does not support UTF-8 -> fall back to System default", "target": 0}
{"idx": 35907, "func": "@see javax.swing.JTree#setModel(javax.swing.tree.TreeModel)", "target": 0}
{"idx": 35908, "func": "called from threadFinished() thread", "target": 0}
{"idx": 35909, "func": "Calculate response time", "target": 0}
{"idx": 35910, "func": "check invalid indices", "target": 0}
{"idx": 35911, "func": "TODO: an alternative is to check if the owner has changed; if it hasn't then return collection.getOwner()", "target": 1}
{"idx": 35912, "func": "Stream of data that yylex() examines.", "target": 0}
{"idx": 35913, "func": "TODO: this can be simplified to just //((Include) extend).setBase((UseCase) base);", "target": 1}
{"idx": 35914, "func": "save various info about the column for use in user input validation when editing table contents. Note that the columnDisplaySize is included two times, where the first entry may be adjusted for actual display while the second entry is the size expected by the DB. The isNullable() method returns three values that we convert into two by saying that if it is not known whether or not a column allows nulls, we will allow the user to enter nulls and any problems will be caught when they try to save the data to the DB", "target": 0}
{"idx": 35915, "func": "//deal with domain axis", "target": 0}
{"idx": 35916, "func": "Add to the query spaces.", "target": 0}
{"idx": 35917, "func": "//{{{ windowOpened() method", "target": 0}
{"idx": 35918, "func": "i18n[mssql.monitor=Monitor]", "target": 0}
{"idx": 35919, "func": "//return elementName;", "target": 0}
{"idx": 35920, "func": "Handle the simple cases Anything very exotic will fail, but that will be our clue that the test needs to be extended", "target": 0}
{"idx": 35921, "func": "assuming that the columns in table match colDefs, bump the index to point to the next colDef entry", "target": 0}
{"idx": 35922, "func": "End of code related to printing //", "target": 0}
{"idx": 35923, "func": "//if null, owner will be retrieved from session", "target": 0}
{"idx": 35924, "func": "//start at 1 because element 0 is the executable name", "target": 0}
{"idx": 35925, "func": "check if mediator supports docking", "target": 0}
{"idx": 35926, "func": "Menu for right-mouse-click when in cell editors", "target": 0}
{"idx": 35927, "func": "private class DBCopyPluginResources extends PluginResources { DBCopyPluginResources(String rsrcBundleBaseName, IPlugin plugin) { super(rsrcBundleBaseName, plugin); } }", "target": 0}
{"idx": 35928, "func": "todo: this might really even be moved into the cfg package and used as the basis for all things which are configurable.", "target": 1}
{"idx": 35929, "func": "if this is not a valid file: just use the uri", "target": 0}
{"idx": 35930, "func": "Following block contains unrolled code which could be shortened by coding it in additional loops.", "target": 0}
{"idx": 35931, "func": "We also show tagged values for UML 1 TODO: what to do for UML2 here?", "target": 1}
{"idx": 35932, "func": "wtf?", "target": 1}
{"idx": 35933, "func": "Assume we have already created the store", "target": 0}
{"idx": 35934, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsExtendedSQLGrammar()", "target": 0}
{"idx": 35935, "func": "added by Eric Lefevre 13 Mar 1999: we must check if the FigText for attributes is drawn before drawing things over it", "target": 0}
{"idx": 35936, "func": "getAssignable would catch this for typed param", "target": 0}
{"idx": 35937, "func": "//{{{ updateColors() method", "target": 0}
{"idx": 35938, "func": "//{{{ fvmput2() method", "target": 0}
{"idx": 35939, "func": "since we don't mangle extensions like the servlet does, we need to check for keywords as class names", "target": 0}
{"idx": 35940, "func": "instanciate theme", "target": 0}
{"idx": 35941, "func": "this didn't work final int pos = getCaretPosition(); final Document doc = _textArea.getStyledDocument(); final Element docElem = doc.getDefaultRootElement(); final Element lineElem = docElem.getElement(getCaretLineNumber()); return lineElem.getElementIndex(pos);", "target": 0}
{"idx": 35942, "func": "recursivly expand all children", "target": 0}
{"idx": 35943, "func": "Check each object... //", "target": 0}
{"idx": 35944, "func": "//{{{ Indentation", "target": 0}
{"idx": 35945, "func": "TODO: Copied from UmlDiagramRenderer. Find the Figs in the given layer that should be the source and destination and attach these to either end of the FigEdge @param layer the layer to look for the FigNodes @param newEdge The edge to attach", "target": 1}
{"idx": 35946, "func": "Create the class with the appropriate class name and source file", "target": 0}
{"idx": 35947, "func": "This is the namespace in which the method is set. It is a back-reference for the node, which needs to execute under this namespace. It is not necessary to declare this transient, because we can only be saved as part of our namespace anyway... (currently).", "target": 1}
{"idx": 35948, "func": "convert to inputstream", "target": 0}
{"idx": 35949, "func": "What is \\v in C? case '\\v': c2 = 'v'; break;", "target": 0}
{"idx": 35950, "func": "When nothing is generated: omit the space.", "target": 0}
{"idx": 35951, "func": "Somewhat of a hack. If the special fields are visible (we're operating relative to a 'this' type already) dissallow further .this references to prevent user from skipping to things like super.this.caller", "target": 1}
{"idx": 35952, "func": "Map to an EEnum.", "target": 0}
{"idx": 35953, "func": "(xOffset - curW) / 2;", "target": 0}
{"idx": 35954, "func": "line 407", "target": 0}
{"idx": 35955, "func": "Educated guess", "target": 0}
{"idx": 35956, "func": "Needs to be volatile as may be referenced from multiple threads TODO see if this can be made final somehow", "target": 0}
{"idx": 35957, "func": "End at an Interface? Navigable other end?", "target": 0}
{"idx": 35958, "func": "Uninitialized -- set it to the defaults:", "target": 0}
{"idx": 35959, "func": "//{{{ createTOC() method", "target": 0}
{"idx": 35960, "func": "for each message in folder i", "target": 0}
{"idx": 35961, "func": "if test fails this element should not be in the result set", "target": 0}
{"idx": 35962, "func": "List of parsers to test. Should probably be derived automatically", "target": 0}
{"idx": 35963, "func": "todo : eventually merge this with TreeCache and just add optional opt-lock support there.", "target": 1}
{"idx": 35964, "func": ";sessionid=value $NON-NLS-1$", "target": 0}
{"idx": 35965, "func": "we found a suitable folder -> set it", "target": 0}
{"idx": 35966, "func": "ignore compiler pragmas", "target": 0}
{"idx": 35967, "func": "We can do nothing if we don't have both the use case and extension point.", "target": 0}
{"idx": 35968, "func": "Prepare to have a lot of DocumentEvent.EventType.CHANGE", "target": 0}
{"idx": 35969, "func": "i18n[i18n.noNativeToAsciiOutDirNoDir=native2Ascii output dir is not a directory. native2Ascii will not be executed.]", "target": 0}
{"idx": 35970, "func": "i18n[AboutBoxDialog.creditspanelcreatetime=CreditsPanel created in ]", "target": 0}
{"idx": 35971, "func": "TODO consider removing this method, and providing method wrappers instead. This would allow the Gui package to do any additional clearups if required, as has been done with clearTestPlan()", "target": 1}
{"idx": 35972, "func": "//last character isn't a digit", "target": 0}
{"idx": 35973, "func": "Remaining implementations delegate to the wrapped key manager", "target": 0}
{"idx": 35974, "func": "This should only be helpful for old garbage collectors.", "target": 0}
{"idx": 35975, "func": "//TODO: I am not so sure about the exception handling in this bit!", "target": 1}
{"idx": 35976, "func": "initialize this collection", "target": 0}
{"idx": 35977, "func": "moved to GUIUtilities as it makes no sense being here.", "target": 1}
{"idx": 35978, "func": "//init the aliases, after initing the constructornode", "target": 0}
{"idx": 35979, "func": "options.xml: //<gui> <theme name=\"Plastic\" theme=\"Experience Blue\"></theme> <fonts overwrite=\"false\"> <text name=\"Default\" size=\"12\"></text> <main name=\"Default\" size=\"12\"></main> </fonts> <toolbar text_position=\"false\" enable_icon=\"true\" enable_text=\"true\"></toolbar> //</gui>", "target": 0}
{"idx": 35980, "func": "//{{{ invalidateScreenLineRange() method", "target": 0}
{"idx": 35981, "func": "code from Magesh moved from DefaultLogger and slightly modified", "target": 0}
{"idx": 35982, "func": "If we didn't find the plugin.properties in the usual place nor in the archive... //", "target": 0}
{"idx": 35983, "func": "remove old filters", "target": 0}
{"idx": 35984, "func": "mark spam messages", "target": 0}
{"idx": 35985, "func": "line 907", "target": 0}
{"idx": 35986, "func": "add in support classes if any", "target": 0}
{"idx": 35987, "func": "end class XMLTokenTableBase", "target": 0}
{"idx": 35988, "func": "log.info(\"testFalsePrevFailed\");", "target": 0}
{"idx": 35989, "func": "COLUMN_NAME", "target": 0}
{"idx": 35990, "func": "//Arrays.asList doesn't do primitive arrays", "target": 0}
{"idx": 35991, "func": "@see org.argouml.uml.util.namespace.Namespace#getBaseNamespace()", "target": 0}
{"idx": 35992, "func": "//MappingSwitch", "target": 0}
{"idx": 35993, "func": "This guards the switch. //", "target": 0}
{"idx": 35994, "func": "Set the namespace of the enclosed model element to the namespace of the encloser.", "target": 0}
{"idx": 35995, "func": "Return the Path we added or the ID of this node for children to reference if needed. Path objects are definitely used by child path elements, and ID may be used for a child text node.", "target": 0}
{"idx": 35996, "func": "4.6.2.5 TaggedValue", "target": 0}
{"idx": 35997, "func": "//log(message, Project.MSG_DEBUG);", "target": 0}
{"idx": 35998, "func": "Listen for name changes so we can veto them if we don't like them", "target": 0}
{"idx": 35999, "func": "volatile needed to ensure safe publication", "target": 0}
{"idx": 36000, "func": "we found what we were looking for", "target": 0}
{"idx": 36001, "func": "Pretend there is an xmlns=\"\" because we really need to ensure that the null prefix isn't used to denote something other than the null namespace. //", "target": 0}
{"idx": 36002, "func": "line 643", "target": 0}
{"idx": 36003, "func": "Enumerate constructors", "target": 0}
{"idx": 36004, "func": "line 699", "target": 0}
{"idx": 36005, "func": "Set the values retrieved for the file upload", "target": 0}
{"idx": 36006, "func": "find the resource of the existing link:", "target": 0}
{"idx": 36007, "func": "//{{{ Edit mode", "target": 0}
{"idx": 36008, "func": "Don't do this when playing a macro, cos it's annoying", "target": 0}
{"idx": 36009, "func": "remove message from disk", "target": 0}
{"idx": 36010, "func": "Some LAFs don't work under Java 6 or later.", "target": 1}
{"idx": 36011, "func": "0-based", "target": 0}
{"idx": 36012, "func": "ignore; I don't like doing it, but it seems like we really just need to make all channels non-blocking by default and use select when implementing blocking ops, so if this remains set non-blocking, perhaps it's not such a big deal...", "target": 0}
{"idx": 36013, "func": "ensure <tstamp>'s new prefix attribute is working", "target": 0}
{"idx": 36014, "func": "entities ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 36015, "func": "no canonical path yet or length is zero, and we have a / followed by a dot...", "target": 0}
{"idx": 36016, "func": "Y position of the new CR should match existing CRs Y position", "target": 0}
{"idx": 36017, "func": "When we match the owner, we're done. //", "target": 0}
{"idx": 36018, "func": "public static final int THREAD_GROUP = 1;", "target": 0}
{"idx": 36019, "func": "For the model information. //", "target": 0}
{"idx": 36020, "func": "Embedded URLs must match this RE (if provided) $NON-NLS-1$", "target": 0}
{"idx": 36021, "func": "We aren't able to resize neither the top bound from the first region nor the bottom bound from the last region.", "target": 0}
{"idx": 36022, "func": "close remaining buffers (the close dialog only deals with dirty ones)", "target": 0}
{"idx": 36023, "func": "line 1638", "target": 0}
{"idx": 36024, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#supportsResultSetType(int)", "target": 0}
{"idx": 36025, "func": "Make sure people don't do stupid things like putting files in /Volumes", "target": 0}
{"idx": 36026, "func": "Execute it. //", "target": 0}
{"idx": 36027, "func": "Status as of Nov. 2008 - Figs created, property panels exist, more work required on explorer and assumptions about models not being nested - tfm", "target": 1}
{"idx": 36028, "func": "Does the system support UNC paths? If so, may need to fix them up later", "target": 1}
{"idx": 36029, "func": "//{{{ Ceate icons list", "target": 0}
{"idx": 36030, "func": "If there are N slashes, then we want N-1.", "target": 0}
{"idx": 36031, "func": "i18n[dataTypeDate.medium=Medium ({0})]", "target": 0}
{"idx": 36032, "func": "Some arbitrary kind of node", "target": 0}
{"idx": 36033, "func": "default ClassCache using jitMax as a soft upper bound", "target": 0}
{"idx": 36034, "func": "Test serializable elements - test the object", "target": 0}
{"idx": 36035, "func": "find a valid line closest to the last screen line", "target": 0}
{"idx": 36036, "func": "Since 1.4 implements interfaces that became available in JDBC 3.0, let's warn the user if the driver doesn't support DatabaseMetaData methods that were added in JDBC 2.1 and JDBC 3.0 specifications.", "target": 0}
{"idx": 36037, "func": "roundXCoordinates", "target": 0}
{"idx": 36038, "func": "Check if the message is already cached", "target": 0}
{"idx": 36039, "func": "Succeeds only if Before method - verifyTwo() - is run.", "target": 0}
{"idx": 36040, "func": "Font", "target": 0}
{"idx": 36041, "func": "if we've found the last char of the separator, and we've found at least as many characters as separator length, and the last n characters of our buffer match the separator, we're done", "target": 0}
{"idx": 36042, "func": "Pushes a node on to the stack.", "target": 0}
{"idx": 36043, "func": "Download directories", "target": 0}
{"idx": 36044, "func": "//{{{ getKeywords() method", "target": 0}
{"idx": 36045, "func": "//private UnsynchronizedStack parentStack;", "target": 0}
{"idx": 36046, "func": "Obey the contract ourselves!", "target": 0}
{"idx": 36047, "func": "the CategoryDataset interface expects a list of series, but we've stored them in an array...", "target": 0}
{"idx": 36048, "func": "null is not considered the same type as Integer. //$NON-NLS-1 //$NON-NLS-1", "target": 0}
{"idx": 36049, "func": "don't show loading msg because we won't receive a propertyChanged", "target": 0}
{"idx": 36050, "func": "TODO: The code implementing this method is from 2003 (see issue 2171) - mechanically integrated by tfmorris in May 2007. Needs to be reviewed/updated. @author Decki,Endi,Yayan, Politechnic of Bandung. Computer Departement method for changing text of Message", "target": 1}
{"idx": 36051, "func": "(non-Javadoc) @see org.columba.core.filter.IFilterList#indexOf(org.columba.core.filter.Filter)", "target": 0}
{"idx": 36052, "func": "Here we get the new mailboxinfo for the folder", "target": 0}
{"idx": 36053, "func": "Complete the initial radix sort:", "target": 0}
{"idx": 36054, "func": "do not recognize this button request", "target": 0}
{"idx": 36055, "func": "this will create the mapping as well", "target": 0}
{"idx": 36056, "func": "no match", "target": 0}
{"idx": 36057, "func": "//negative values not allowed", "target": 0}
{"idx": 36058, "func": "register for text selection changes controller.getEditorController().addObserver(this);", "target": 0}
{"idx": 36059, "func": "If the location is near the boundary, we'll start by trying to do a drop insert. //", "target": 0}
{"idx": 36060, "func": "TODO : still need to make CollectionPersisters EntityMode-aware", "target": 1}
{"idx": 36061, "func": "Entities //", "target": 0}
{"idx": 36062, "func": "If method not supported ignore failure", "target": 0}
{"idx": 36063, "func": "inheritance cycle detection (paranoid check)", "target": 1}
{"idx": 36064, "func": "//dumpNodeContents(node);", "target": 0}
{"idx": 36065, "func": "// _bStopExecution = false;", "target": 0}
{"idx": 36066, "func": "i18n[popupeditableIoPanel.exportError=Export Error]", "target": 0}
{"idx": 36067, "func": "//Action performed for the combo box // private void cbFieldNameActionPerformed(java.awt.event.ActionEvent evt) // { // selectedIndex = cbFieldName.getSelectedIndex(); // DefaultComboBoxModel comboModel = // (DefaultComboBoxModel) cbFieldName.getModel(); // FieldDetails fd = (FieldDetails) comboModel.getElementAt(selectedIndex); // cbFieldName.setSelectedItem(fd.getFieldName()); // cbFieldType.setSelectedItem(fd.getFieldType()); // tfFieldLength.setText(fd.getFieldLength()); // tfFieldDefault.setText(fd.getDefault()); // chAutoIncrement.setSelected(fd.IsAutoIncrement()); // chNotNull.setSelected(fd.IsNotNull()); // }", "target": 0}
{"idx": 36068, "func": "Attr name", "target": 0}
{"idx": 36069, "func": "this is a . parameter for later use", "target": 0}
{"idx": 36070, "func": "@see java.util.List#set(int, java.lang.Object)", "target": 0}
{"idx": 36071, "func": "//new RemoveQuotesCommand(_session.getSQLPanelAPI(_plugin)).execute();", "target": 0}
{"idx": 36072, "func": "String value = (String) theList.getSelectedValue();", "target": 0}
{"idx": 36073, "func": "@see java.lang.Throwable#printStackTrace(java.io.PrintStream)", "target": 0}
{"idx": 36074, "func": "\"CREATE SEQUENCE $sequenceName$ $startWith$ \" + \"$increment$ $minimum$ $maximum$ $cache$ $cycle$\";", "target": 0}
{"idx": 36075, "func": "POP", "target": 0}
{"idx": 36076, "func": "'-' or ':'?", "target": 0}
{"idx": 36077, "func": "If blank, only check previous sample when at end of loop $NON-NLS-1$", "target": 0}
{"idx": 36078, "func": "store port number in file", "target": 0}
{"idx": 36079, "func": "Suppress warnings for issues that are present in this old release of NetBeans editor libraries we are using.", "target": 0}
{"idx": 36080, "func": "TODO Specialize this to return a resource locator for messages specific to this validator. Ensure that you remove @generated or mark it @generated NOT", "target": 1}
{"idx": 36081, "func": "critique menu TODO: This dependency should be inverted with the Critics subsystem registering its desired shortcuts with us - tfm", "target": 1}
{"idx": 36082, "func": "(?:) ?,??,+?,{}? (?=)(?!) \\A,\\Z \\d,\\D,\\w,\\W,\\s,\\S within [] (?#)", "target": 0}
{"idx": 36083, "func": "or is it a range axis?", "target": 0}
{"idx": 36084, "func": "all other arg cases with block", "target": 0}
{"idx": 36085, "func": "The second time that catalogs are asked for, return two", "target": 0}
{"idx": 36086, "func": "setJMenuBar(menubar);", "target": 0}
{"idx": 36087, "func": "This is i+1 to take the trailing \\n into account", "target": 0}
{"idx": 36088, "func": "//private Hashtable properties = new Hashtable();", "target": 0}
{"idx": 36089, "func": "Add panels for core Squirrel functionality.", "target": 0}
{"idx": 36090, "func": "TODO: rescan code range ?", "target": 1}
{"idx": 36091, "func": "grabHorizontal = true;", "target": 0}
{"idx": 36092, "func": "TODO: check to be sure that the source and destination schemas are different. Abort if they are the same and inform the user.", "target": 0}
{"idx": 36093, "func": "If null, don't draw line => then delegate to parent", "target": 0}
{"idx": 36094, "func": "ResourceChange", "target": 0}
{"idx": 36095, "func": "Since the result set cursor is always left at the first physical row after the \"last processed\", we need to jump back one position to get the key value we are interested in skipping", "target": 0}
{"idx": 36096, "func": "<org>value</org>", "target": 0}
{"idx": 36097, "func": "Only add sample if it is a sample of valid url redirect, i.e. that we have actually sampled the URL", "target": 0}
{"idx": 36098, "func": "File to be loaded by autoload has already been or is being loaded.", "target": 0}
{"idx": 36099, "func": "TODO - lets pass in Project as a constructor argument", "target": 0}
{"idx": 36100, "func": "load user-customised language pack", "target": 0}
{"idx": 36101, "func": "search all criteria in specific provider only", "target": 0}
{"idx": 36102, "func": "A wild default for when the thread is interrupted", "target": 0}
{"idx": 36103, "func": "return an empty Type array", "target": 0}
{"idx": 36104, "func": "Bad luck. There are resources in the filesets that make the archive out of date, but not in the non-fileset resources. We need to rescan the non-FileSets to grab all of them now.", "target": 0}
{"idx": 36105, "func": "State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 36106, "func": "(non-Javadoc) @see org.columba.api.gui.frame.IFrameMediator#isInitialized()", "target": 0}
{"idx": 36107, "func": "TODO could these be done earlier (or just once?)", "target": 1}
{"idx": 36108, "func": "check for a static suite method first, even when using JUnit 4", "target": 0}
{"idx": 36109, "func": "Not a tag entry, return the original value", "target": 0}
{"idx": 36110, "func": "//we never need to apply locks to the SQL", "target": 0}
{"idx": 36111, "func": "GPG for windows is an executable-only download, fortunately there is a windows registry file included in the download and has this as the default installation path in it. While users will probably install GPG into many other places, this is atleast a best-guess start.", "target": 0}
{"idx": 36112, "func": "The NotationProvider for the ClassifierRole. <p> The syntax is for UML is: <pre> baselist := [base] [, base] classifierRole := [name] [/ role] [: baselist] </pre></p> The <code>name</code> is the Instance name, not used currently. See ClassifierRoleNotationUml for details.<p> This syntax is compatible with the UML 1.4 specification.", "target": 0}
{"idx": 36113, "func": "i18n[laf.jars=L & F jars:]", "target": 0}
{"idx": 36114, "func": "JRUBY-2938 the proxy class might already exist", "target": 0}
{"idx": 36115, "func": "----- the selection work -----", "target": 0}
{"idx": 36116, "func": "itemLabelAnchorOffset", "target": 0}
{"idx": 36117, "func": "For Oracle 10g we could say something like : \"where XMLSERIALIZE(CONTENT \" + _colDef.getLabel() +\") like '<value>'\" This doesn't appear to work on Oracle 9i at the moment, so we will avoid using this column in any where clause if the value is non-null, which is what the superclass implementation does. TODO: Find a way to do this for both versions or split this behavior so that it works on 10g and is disabled on 9i.", "target": 0}
{"idx": 36118, "func": "//layoutComponents(isSpam);", "target": 0}
{"idx": 36119, "func": "e.g. windows xp => windows", "target": 0}
{"idx": 36120, "func": "TODO: Deal with the \"optional\" attribute in the <join> mapping; this code assumes that optional defaults to \"true\" because it doesn't actually seem to work in the fetch=\"join\" code Note that actual proper handling of optional-ality here is actually more involved than this patch assumes. Remember that we might have multiple <join/> mappings associated with a single entity. Really a couple of things need to happen to properly handle optional here: 1) First and foremost, when handling multiple <join/>s, we really should be using the entity root table as the driving table; another option here would be to choose some non-optional joined table to use as the driving table. In all likelihood, just using the root table is much simplier 2) Need to add the FK columns corresponding to each joined table to the generated select list; these would then be used when iterating the result set to determine whether all non-optional data is present My initial thoughts on the best way to deal with this would be to introduce a new SequentialSelect abstraction that actually gets generated in the persisters (ok, SingleTable...) and utilized here. It would encapsulated all this required optional-ality checking...", "target": 1}
{"idx": 36121, "func": "//unquotedIdentifierColumnName = identifierColumnAlias;", "target": 0}
{"idx": 36122, "func": "TODO: for UML 2.x this is isStatic", "target": 1}
{"idx": 36123, "func": "Handling methods that doesn't return", "target": 0}
{"idx": 36124, "func": "object has instance vars and isn't a class, get a snapshot to be marshalled and output the ivar header here", "target": 0}
{"idx": 36125, "func": "we got this from headerfieldtree", "target": 0}
{"idx": 36126, "func": "End timimg", "target": 0}
{"idx": 36127, "func": "Ok", "target": 0}
{"idx": 36128, "func": "i18n[LogPanel.titleWarn=Last log entry (Entry type: Warning)]", "target": 0}
{"idx": 36129, "func": "flush afer whole dump is complete", "target": 0}
{"idx": 36130, "func": "pce = (PropertyChangeEvent) rxdEvent.getSource(); assertTrue(\"Wrong event name\", pce.getPropertyName().equals( DiagramAppearance.KEY_DEFAULT_SHADOW_WIDTH.getKey())); String value = (String) pce.getOldValue(); int i = Integer.parseInt(value); assertTrue(\"Wrong old event value\", i == 4); assertTrue(\"Wrong new event value\", ((String) pce.getNewValue()).equals(\"2\"));", "target": 0}
{"idx": 36131, "func": "//end nested class", "target": 0}
{"idx": 36132, "func": "add a new wrapper samplevent", "target": 0}
{"idx": 36133, "func": "Init the tree Assumes this is only called from GUI mode", "target": 0}
{"idx": 36134, "func": "Dispose the child wrappers. //", "target": 0}
{"idx": 36135, "func": "@see org.argouml.model.ScopeKind#getClassifier()", "target": 0}
{"idx": 36136, "func": "legendLabelURLGenerator", "target": 0}
{"idx": 36137, "func": "Hack to allow external control", "target": 1}
{"idx": 36138, "func": "only public static fields that are valid constants", "target": 0}
{"idx": 36139, "func": "Moves some object to trash, i.e. deletes it completely with all dependent structures. <p> Deleting an object involves: <pre> - Removing Target history - Deleting all Fig representations for the object - Deleting the UML element - Deleting all dependent UML modelelements - Deleting CommentEdges (which are not UML elements) - Move to trash for enclosed objects, i.e. graphically drawn on top of - Move to trash subdiagrams for the object - Saveguard that there is always at least 1 diagram left - If the current diagram has been deleted, select a new one to show - Trigger the explorer when a diagram is deleted - Set the needsSave (dirty) flag of the projectmanager </pre> @param obj The object to be deleted @see org.argouml.kernel.ProjectImpl#trashInternal(Object) <p> TODO: This should just be named delete() or something which better tells what it does (since there really isn't a trash can).", "target": 1}
{"idx": 36140, "func": "setBorder(UIManager.getBorder(\"Table.focusCellHighlightBorder\"));", "target": 0}
{"idx": 36141, "func": "TODO: setText in GEF should call setBounds instead of directly changing x, y, w, h - then we will have an event generated correctly in GEF", "target": 1}
{"idx": 36142, "func": "//a second web.xml file, so skip it", "target": 0}
{"idx": 36143, "func": "found the property we set - it's good.", "target": 0}
{"idx": 36144, "func": "turns out under some circumstances this method can switch the current buffer in BROWSER mode.", "target": 0}
{"idx": 36145, "func": "if len == 0 then shared empty", "target": 0}
{"idx": 36146, "func": "//_thread = new Thread(new MemoryTimer()); //_thread.start();", "target": 0}
{"idx": 36147, "func": "Check once a day Check once a week check every time the app launches", "target": 0}
{"idx": 36148, "func": "---------------------- --- Public Methods --- ----------------------", "target": 0}
{"idx": 36149, "func": "Loop through all the class files found and add them to the jar", "target": 0}
{"idx": 36150, "func": "autoWidthMethod", "target": 0}
{"idx": 36151, "func": "commandline arguments which can't be handled by the core are passed along to other subcomponents", "target": 0}
{"idx": 36152, "func": "Because of the way I create the full target path, there must be NO slash at the end of targetFolder and folderName However, if the slash or backslash is the only character, leave it alone", "target": 0}
{"idx": 36153, "func": "// final List extendsQueue,", "target": 0}
{"idx": 36154, "func": "save the original value for re-use by CLOB/BLOB types in conversion", "target": 0}
{"idx": 36155, "func": "---------- Private fields, methods ---------", "target": 0}
{"idx": 36156, "func": "Create the self-signed keypairs (requires Java 7 for -ext flag)", "target": 0}
{"idx": 36157, "func": "default empty array to prevent NPEs", "target": 0}
{"idx": 36158, "func": "//{{{ setInputHandler() method", "target": 0}
{"idx": 36159, "func": "the following should always be true", "target": 0}
{"idx": 36160, "func": "don't search in subfolders recursively", "target": 0}
{"idx": 36161, "func": "//TODO: ideally we need the construction of PropertyAccessor to take the following: 1) EntityMode 2) EntityMode-specific data (i.e., the classname for pojo entities) 3) Property-specific data based on the EntityMode (i.e., property-name or dom4j-node-name) The easiest way, with the introduction of the new runtime-metamodel classes, would be the the following predicates: 1) PropertyAccessorFactory.getPropertyAccessor() takes references to both a org.hibernate.metadata.EntityModeMetadata and org.hibernate.metadata.Property 2) What is now termed a \"PropertyAccessor\" stores any values needed from those two pieces of information 3) Code can then simply call PropertyAccess.getGetter() with no parameters; likewise with PropertyAccessor.getSetter()", "target": 1}
{"idx": 36162, "func": "// IMAPRootFolder parentFolder = FolderFactory.getInstance() // .createIMAPRootFolder(account); // IMailFolder inbox = FolderFactory.getInstance() // .createIMAPFolder(parentFolder, \"INBOX\");", "target": 0}
{"idx": 36163, "func": "This method is called when editing is completed. It must return the new value to be stored in the cell.", "target": 0}
{"idx": 36164, "func": "//will be ignored, using the existing Entry instead", "target": 0}
{"idx": 36165, "func": "(non-Javadoc) @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EStructuralFeature)", "target": 0}
{"idx": 36166, "func": "//i18n[SQLResultExecuterPanel.nonStickyPanel=Cannot make a cancel panel sticky]", "target": 0}
{"idx": 36167, "func": "i18n[graph.new=New]", "target": 0}
{"idx": 36168, "func": "//i18n[explainplanexecuter.objectName=Object Name]", "target": 0}
{"idx": 36169, "func": "//throws IOException", "target": 0}
{"idx": 36170, "func": "Oracle doesn't allow unique bitmap indexes.", "target": 0}
{"idx": 36171, "func": "// SQLQueryParser parser = new SQLQueryParser( // sqlQuery, // processor.getAlias2Persister(), // processor.getAlias2Return(), // aliases, // collAliases, // collPersisters, // suffixes, // collSuffixes // ); // sql = parser.process(); // namedParameterBindPoints = parser.getNamedParameters();", "target": 0}
{"idx": 36172, "func": "//private EventListenerList listenerList = new EventListenerList();", "target": 0}
{"idx": 36173, "func": "---- weblogLabel ----", "target": 0}
{"idx": 36174, "func": "build first node (and ignore its result) and then second node", "target": 0}
{"idx": 36175, "func": "//{{{ createInterpreter() method", "target": 0}
{"idx": 36176, "func": "line 1168", "target": 0}
{"idx": 36177, "func": "handled by RE", "target": 0}
{"idx": 36178, "func": "otherwise, we try an unbuffered read to get whatever's available", "target": 0}
{"idx": 36179, "func": "should not run any children should match the default entry", "target": 0}
{"idx": 36180, "func": "//So long as the line isn't empty and isn't a comment...", "target": 0}
{"idx": 36181, "func": "Samples inside InterleaveController", "target": 0}
{"idx": 36182, "func": "//TODO replace getSize by getBounds ?", "target": 1}
{"idx": 36183, "func": "charset must agree with content-type below $NON-NLS-1$", "target": 0}
{"idx": 36184, "func": "no sorting", "target": 0}
{"idx": 36185, "func": "---- companyTextField ----", "target": 0}
{"idx": 36186, "func": "Check if the message still exists or has been moved by e.g. a filter", "target": 0}
{"idx": 36187, "func": "TODO: Why shouldn't we call registerSQLDriver here? RMM 20070401", "target": 1}
{"idx": 36188, "func": "time_low //", "target": 0}
{"idx": 36189, "func": "Check for entity recursion.", "target": 0}
{"idx": 36190, "func": "CHECK VIOLATION", "target": 0}
{"idx": 36191, "func": "wait for the thread to die, should be the end of the process", "target": 0}
{"idx": 36192, "func": "fall back to default image", "target": 0}
{"idx": 36193, "func": "Make sure there's nothing left", "target": 0}
{"idx": 36194, "func": "nothing done between begin/end calls", "target": 0}
{"idx": 36195, "func": "Limit length of log content", "target": 0}
{"idx": 36196, "func": "Ignore it if there are multiple comments. //", "target": 0}
{"idx": 36197, "func": "//{{{ keyPressed() method", "target": 0}
{"idx": 36198, "func": "i18n[popupeditableIoPanel.numberBase=Number Base:]", "target": 0}
{"idx": 36199, "func": "//axisLabelPaint;", "target": 0}
{"idx": 36200, "func": "Return the key (tag) of some tagged value. TODO: This does exactly the same as getTag(Object). Remove one of them. @param handle The tagged value. @return The found value as String.", "target": 1}
{"idx": 36201, "func": "With an hanging SessionListener a Session nvere gets Garbage Collected.", "target": 0}
{"idx": 36202, "func": "downPaint", "target": 0}
{"idx": 36203, "func": "an error occurred", "target": 0}
{"idx": 36204, "func": "Check the timestamp on the EJB implementation class. Note that if ONLY the implementation class has changed, it's not necessary to rebuild the EJB stubs and skeletons. For this reason, we ensure the file exists (using lastModified above), but we DON'T compare it's timestamp with the timestamps of the home and remote interfaces (because it's irrelevant in determining if ejbc must be run)", "target": 0}
{"idx": 36205, "func": "don't allow comments on these insert statements as comments totally blow up the Oracle getGeneratedKeys \"support\" :(", "target": 0}
{"idx": 36206, "func": "Get the URL matcher", "target": 0}
{"idx": 36207, "func": "If we are given the null string, return immediately, so that the extensionpoint is removed.", "target": 0}
{"idx": 36208, "func": "The default nr of rows is 8, but since we have 9 perspectives by default now, setting to 9 is nicer.", "target": 0}
{"idx": 36209, "func": "i18n[DBUtil.info.bindclobmem=bindClobVarInMemory: binding '{0}' bytes]", "target": 0}
{"idx": 36210, "func": "line 1733", "target": 0}
{"idx": 36211, "func": "if we instantiate a collection during the flush() process, we must ignore it for the rest of the flush()", "target": 0}
{"idx": 36212, "func": "If file name default and cmd is null or empty, make sure this entry is not being held in CellImportExportInfoSaver", "target": 0}
{"idx": 36213, "func": "file exists, is normal and is writable, so see if user wants to overwrite contents of file", "target": 0}
{"idx": 36214, "func": "do nothinh here ... use finalClose", "target": 0}
{"idx": 36215, "func": "count characters that's not whitespace", "target": 0}
{"idx": 36216, "func": "EXPORT OBJECT TO OSX_FILE", "target": 0}
{"idx": 36217, "func": "throw new IllegalStateException(\"Wrong constructor\");", "target": 0}
{"idx": 36218, "func": "Index counters into indices1, indices2, and indices. //", "target": 0}
{"idx": 36219, "func": "local copy since LogOutputStream.task is private", "target": 0}
{"idx": 36220, "func": "Test Constants", "target": 0}
{"idx": 36221, "func": "//_constraintGraph.moveLastHitFoldingPointTo(point);", "target": 0}
{"idx": 36222, "func": "check number of fragments", "target": 0}
{"idx": 36223, "func": "sync model with the current (old) view", "target": 0}
{"idx": 36224, "func": "//{{{ unref() method", "target": 0}
{"idx": 36225, "func": "change prefix", "target": 0}
{"idx": 36226, "func": "File name/path match Check files see if same", "target": 0}
{"idx": 36227, "func": "Don't try to check the default language", "target": 0}
{"idx": 36228, "func": "If the file was a temp file, delete it now. We assume that Export-only operations want to leave the file in place, but Execute operations just want a temp space to work with and do not want it lying around afterwards.", "target": 0}
{"idx": 36229, "func": "change the legendItemShape", "target": 0}
{"idx": 36230, "func": "throws ME throws IOE, ME", "target": 0}
{"idx": 36231, "func": "copied from Session:", "target": 0}
{"idx": 36232, "func": "//create tick label (force use of fmt obj):", "target": 0}
{"idx": 36233, "func": "debug output", "target": 0}
{"idx": 36234, "func": "i18n[SchemaTableUpdateWhatItem.tables=Tables]", "target": 0}
{"idx": 36235, "func": "no implementation at this time, since we bypass the idea of having a console tool to generate test plans. Instead I decided to have a sampler that uses the generator and parser directly", "target": 0}
{"idx": 36236, "func": "some collections are not lazy:", "target": 0}
{"idx": 36237, "func": "TODO: Support commentEdges. TODO: Support associations to self. @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)", "target": 0}
{"idx": 36238, "func": "paint index", "target": 0}
{"idx": 36239, "func": "place raw tab in first position (first tab)", "target": 0}
{"idx": 36240, "func": "add to options if possible (so it will be saved)", "target": 0}
{"idx": 36241, "func": "//{{{ VFS methods", "target": 0}
{"idx": 36242, "func": "Make sure each object conforms to the type of the feature. //", "target": 0}
{"idx": 36243, "func": "i18n[popupeditableIoPanel.notANormalFile=File is not a normal file.\\n Cannot do export to a directory or system file.]", "target": 0}
{"idx": 36244, "func": "If necessary, get a command that replaces unwrapped values by their wrappers in the result and affected objects. //", "target": 0}
{"idx": 36245, "func": "To make the shortcut visible in the popup", "target": 0}
{"idx": 36246, "func": "assign given optional arguments to their variables", "target": 0}
{"idx": 36247, "func": "need to check if we are at EOF already", "target": 0}
{"idx": 36248, "func": "TODO: Make sure all appropriate open flags are added to this check.", "target": 1}
{"idx": 36249, "func": "Abstract action to trigger creation of a new diagram. <p> ArgoUML shall never create a diagram for a read-only modelelement. <p> TODO: Bobs says, can we merge ActionAddDiagram with this class? @author michiel", "target": 1}
{"idx": 36250, "func": "UML 2.x only", "target": 0}
{"idx": 36251, "func": "FIXME: inefficient; constructing a bignum just for dumping?", "target": 1}
{"idx": 36252, "func": "//At least one constructor is guaranteed to be there, but check anyway.", "target": 0}
{"idx": 36253, "func": "we do a quick check to see if any filters are set. If not we just return false to be efficient.", "target": 0}
{"idx": 36254, "func": "@see org.tigris.gef.presentation.FigNode#hitPort(int, int)", "target": 0}
{"idx": 36255, "func": "Get Look and Feel class object.", "target": 0}
{"idx": 36256, "func": "Get the existing classpath and remove the project root if necessary. Any new non-duplicate entries will be added to this. //", "target": 0}
{"idx": 36257, "func": "end interface Poster", "target": 0}
{"idx": 36258, "func": "Evaluate the condition, which can be: blank or LAST = was the last sampler OK? otherwise, evaluate the condition to see if it is not \"false\" If blank, only evaluate at the end of the loop Must only be called at start and end of loop @param loopEnd - are we at loop end? @return true means OK to continue", "target": 0}
{"idx": 36259, "func": "layer", "target": 0}
{"idx": 36260, "func": "no appropriate suite method found. We don't report any error here since it might be perfectly normal.", "target": 0}
{"idx": 36261, "func": "Ignore the unset notification for an isMany feature; the value is boolean in this case. //", "target": 0}
{"idx": 36262, "func": "A dialect delegate for the Sun Microsystems HADB (High-Availability) database. TODO: This dialect is not yet complete. Need to provide implementations wherever \"Not yet implemented\" appears. @author manningr", "target": 1}
{"idx": 36263, "func": "avoid re-running script if it gives us null", "target": 0}
{"idx": 36264, "func": "now create the decrypt cipher", "target": 0}
{"idx": 36265, "func": "set all properties from calling project", "target": 0}
{"idx": 36266, "func": "line 578", "target": 0}
{"idx": 36267, "func": "A HTTP POST request", "target": 0}
{"idx": 36268, "func": "must add an editable list of new ExplorerPerspective's to the list model so that the original ones are not changed in the case of a cancel action by the user.", "target": 0}
{"idx": 36269, "func": "Can be null (not sure why)", "target": 1}
{"idx": 36270, "func": "Add the file path", "target": 0}
{"idx": 36271, "func": "return existing object or initialized proxy (unless deleted)", "target": 0}
{"idx": 36272, "func": "//this is not a very useful transition", "target": 0}
{"idx": 36273, "func": "//{{{ getSelectedLines() method", "target": 0}
{"idx": 36274, "func": "common mocks", "target": 0}
{"idx": 36275, "func": "//use the systemclasspath as well, to include the ant jar", "target": 0}
{"idx": 36276, "func": "iterate through the tabbed panels to determine whether they should be enabled.", "target": 0}
{"idx": 36277, "func": "Debugging method: converts the given long to a string of binary digits.", "target": 0}
{"idx": 36278, "func": "construct the cache", "target": 0}
{"idx": 36279, "func": "found email address", "target": 0}
{"idx": 36280, "func": "date format", "target": 0}
{"idx": 36281, "func": "(non-Javadoc) @see org.columba.mail.imap.IImapServer#alertMessage(java.lang.String)", "target": 0}
{"idx": 36282, "func": "//reset the id", "target": 0}
{"idx": 36283, "func": "i18n[dataTypeTime.useDefaultFormat=Use default format ({0})]", "target": 0}
{"idx": 36284, "func": "implement all forces implementation of all interfaces we intend for this class to implement", "target": 0}
{"idx": 36285, "func": "if plugin has config extension point", "target": 0}
{"idx": 36286, "func": "we add every jar-file in /lib, too plugin-directory", "target": 0}
{"idx": 36287, "func": "if already detected before", "target": 0}
{"idx": 36288, "func": "constructs the \"-url <url> -debug <action> <password>\" portion of the commmand line", "target": 0}
{"idx": 36289, "func": "Note : expected in the syntax: type=listenerClass ({sep}type=listenerClass) where {sep} is any whitespace or comma", "target": 0}
{"idx": 36290, "func": "create default root nodes <Local> and <Web>", "target": 0}
{"idx": 36291, "func": "all DistinctRootEntityResultTransformer are considered equal ~~~~~~~~~~~", "target": 0}
{"idx": 36292, "func": "//System.err.println(\" stringToLong/reading c=\" + data[s]);", "target": 0}
{"idx": 36293, "func": "i18n[ColorPropertiesPanel.objectTreeBackgroundColorButtonLabel=Choose Object Tree Color]", "target": 0}
{"idx": 36294, "func": "add the process to the list of those to destroy if the VM exits //", "target": 0}
{"idx": 36295, "func": "end of block", "target": 0}
{"idx": 36296, "func": "OPTIONAL COMMAND LINE PARAMETERS", "target": 0}
{"idx": 36297, "func": "//////////////////////////////////////////////////////////////////////Reload all matching procedure types", "target": 0}
{"idx": 36298, "func": "note: hierarchical -> authority != null", "target": 0}
{"idx": 36299, "func": "do nothing, wait for the next pile to complete", "target": 0}
{"idx": 36300, "func": "//void sessionInternalFrameOpened(SessionInternalFrame sessionInternalFrame, ISession sess);", "target": 0}
{"idx": 36301, "func": "discard the event if its source is not from the correct type", "target": 0}
{"idx": 36302, "func": "use system default short format", "target": 0}
{"idx": 36303, "func": "Blank line", "target": 0}
{"idx": 36304, "func": "jdbc:firebirdsql:[//host[:port]/", "target": 0}
{"idx": 36305, "func": "expect(backupFile.getAbsolutePath()).andReturn(\"mockBackupFrameworkJarFile\");", "target": 0}
{"idx": 36306, "func": "//Class/isSetGenFeature.javadoc.override.javajetinc", "target": 0}
{"idx": 36307, "func": "//{{{ addItem() method", "target": 0}
{"idx": 36308, "func": "Two stars next to each other, skip the first one.", "target": 0}
{"idx": 36309, "func": "Remember where we are at present, so we can tell GEF later. Then check we are as big as the minimum size", "target": 0}
{"idx": 36310, "func": "Original note: Jdk under Win is throwing these to warn about lower case / upper case possible mismatch. e.g. bsh.console bsh.Console Update: Prior to 1.3 we were squeltching NoClassDefFoundErrors which was very annoying. I cannot reproduce the original problem and this was never a valid solution. If there are legacy VMs that have problems we can include a more specific test for them here.", "target": 1}
{"idx": 36311, "func": "$_: last read line string", "target": 0}
{"idx": 36312, "func": "add an entry for this type of entity. we can be assured that all referenced entities have already been processed, so specify that this entity is with the latest batch. doing the batch number before adding the name to the list is a faster way to get an accurate number.", "target": 1}
{"idx": 36313, "func": "//not all classpersisters implement PropertyMapping!", "target": 0}
{"idx": 36314, "func": "If menus don't containt menu item necessary for this class, create it", "target": 0}
{"idx": 36315, "func": "drag and drop support I'd just move the code to JEditTextArea but it depends on JDK 1.4 APIs", "target": 1}
{"idx": 36316, "func": "Only do verification if debug level logging is on TODO: Should we leave this on always? - tfm", "target": 1}
{"idx": 36317, "func": "i18n[HibernateConfigPanel.editFactoryProvider=Edit]", "target": 0}
{"idx": 36318, "func": "////////////////////////////////////////////////////////////////////////test one-segment and adjacent segments //////////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 36319, "func": "We assume here that if the pseudoColumn was used in the query, then it was likely to have caused the SQLException. If not, (length == 0), then retrying the query won't help - just throw the exception.", "target": 0}
{"idx": 36320, "func": "If this is defined, it is assumed to be the alias of a user-supplied certificate; overrides dynamic mode $NON-NLS-1$", "target": 0}
{"idx": 36321, "func": "Workaround for a bug in Sun's JDK 1.5.x, see http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6303753", "target": 1}
{"idx": 36322, "func": "this happens if ant is used with a project helper that doesn't set the import.", "target": 0}
{"idx": 36323, "func": "//{{{ removeAction() method", "target": 0}
{"idx": 36324, "func": "The following debug line is now the single most memory consuming line in the whole of ArgoUML. It allocates approximately 18% of all memory allocated. Suggestions for solutions: Check if there is a LOG.log(Level.FINE,String, String) method that can be used instead. Use two calls. For now I (Linus) just comment it out. LOG.log(Level.FINE, \"applying critic: \" + _headline);", "target": 1}
{"idx": 36325, "func": "//ellipse diameter is the minor dimension", "target": 0}
{"idx": 36326, "func": "inserts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 36327, "func": "init model (defaults to empty plain text message)", "target": 0}
{"idx": 36328, "func": "Called by Save function", "target": 0}
{"idx": 36329, "func": "//{{{ getPluginIcon() method", "target": 0}
{"idx": 36330, "func": "Long list of internals", "target": 0}
{"idx": 36331, "func": "Read xsltStream into a temporary file Get url for temp file. openStream from url and wrap in StreamSource", "target": 0}
{"idx": 36332, "func": "//How to retrieve the mime part's contentID: String contentID = url.getRef(); //initialize stuff here", "target": 0}
{"idx": 36333, "func": "We don't know if this type can be used in where clauses so always exclude it.", "target": 0}
{"idx": 36334, "func": "Loads the project file and opens all kinds of error message windows if it doesn't work for some reason. In those cases it preserves the old project. @param file the file to open. @param showUI true if an error message may be shown to the user, false if run in commandline mode @param pmw the ProgressMonitor to be updated; if not needed, use null @return true if the file was successfully opened TODO: Separate this into a Swing specific class - tfm", "target": 1}
{"idx": 36335, "func": "explodePercentages", "target": 0}
{"idx": 36336, "func": "return aliases not supported in classic translator!", "target": 0}
{"idx": 36337, "func": "TODO support real numbers", "target": 1}
{"idx": 36338, "func": "This will add the new from element to the origin.", "target": 0}
{"idx": 36339, "func": "//i18n[ColumnDetailsDialog.commentLabel=Comment: ]", "target": 0}
{"idx": 36340, "func": "not implementable in UML2, because property is missing", "target": 0}
{"idx": 36341, "func": "TODO: factor this chunk as in MRI/YARV GETASTER", "target": 1}
{"idx": 36342, "func": "If this is a unary increment of decrement (either pre or postfix) then we need an LHS to which to assign the result. Otherwise just do the unary operation for the value.", "target": 0}
{"idx": 36343, "func": "Allow display/hide Log Error/Fatal counter", "target": 0}
{"idx": 36344, "func": "i18n[SchemaTableCboItem.schemaID.loadButDontCache=Load but don't cache]", "target": 0}
{"idx": 36345, "func": "i18n[popupeditableIoPanel.exportError4=Export Error]", "target": 0}
{"idx": 36346, "func": "Not sure how well this works, but it works much better than just currentTimeMillis by itself.", "target": 1}
{"idx": 36347, "func": "Don't call super. Packing this frame causes problems.", "target": 1}
{"idx": 36348, "func": "repaint the gutter so that the border color reflects the focus state", "target": 0}
{"idx": 36349, "func": "Remove trailing \", \".", "target": 0}
{"idx": 36350, "func": "we can't remove the targets in one go, we have to do it one by one.", "target": 0}
{"idx": 36351, "func": "Node node = tidy.parseDOM(new ByteArrayInputStream(response.getResponseData()), null);", "target": 0}
{"idx": 36352, "func": "rb_reg_expr_str", "target": 0}
{"idx": 36353, "func": "Register as SelectionListener to track the selection of the tree", "target": 0}
{"idx": 36354, "func": "This is the normal case.", "target": 0}
{"idx": 36355, "func": "TODO: We failed to resolve URL - signal error", "target": 1}
{"idx": 36356, "func": "//i18n[SyntaxPlugin.autocorr=autocorr]", "target": 0}
{"idx": 36357, "func": "//allow ODMG OQL style: from Person p, p.cars c", "target": 0}
{"idx": 36358, "func": "Test sending data as UTF-8, with values that changes when urlencoded", "target": 0}
{"idx": 36359, "func": "Dont enable the session drop down if it is empty", "target": 0}
{"idx": 36360, "func": "This method should parallel findMostSpecificMethod()", "target": 0}
{"idx": 36361, "func": "This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod(\"subclasses\", callbackFactory.getFastOptMethod(\"subclasses\"));", "target": 0}
{"idx": 36362, "func": "TODO: At least ParserSupport.attrset passes argsNode as null. ImplicitNil is wrong magic for setupArgs since it will IRubyObject[] { nil }. So we need to figure out a nice fast null pattern for setupArgs. assert argsNode != null : \"receiverNode is not null\";", "target": 1}
{"idx": 36363, "func": "draw farout indicators", "target": 0}
{"idx": 36364, "func": "FigClass calls setBoundsImpl before we set the stereotypeFigProfileIcon", "target": 0}
{"idx": 36365, "func": "//TreeAdapterFactory", "target": 0}
{"idx": 36366, "func": "use IRubyObject[]", "target": 0}
{"idx": 36367, "func": "i18n[SQLHistoryDlg.title=SQL History for {0}]", "target": 0}
{"idx": 36368, "func": "line 1911", "target": 0}
{"idx": 36369, "func": "override is only for documentation purposes", "target": 0}
{"idx": 36370, "func": "old version //return session.getObjectTreeAPI(sqlScriptPlugin);", "target": 0}
{"idx": 36371, "func": "so if view is closed in the meantime...", "target": 0}
{"idx": 36372, "func": "//suite.addTest(new TestLoad(\"checkGuiPackage\"));", "target": 0}
{"idx": 36373, "func": "i18n[editWhereColsSheet.editWhereColumns=Edit 'WHERE' columns]", "target": 0}
{"idx": 36374, "func": "i18n[DBUtil.error.missingtable=getForeignKeySQL: table '{0}' has a column '{1}' that references table '{2}' column '{3}'. However, that table is not being copied. Skipping this foreign key.]", "target": 0}
{"idx": 36375, "func": "Put the THETA_JOINS node before the HQL condition, after the filters.", "target": 0}
{"idx": 36376, "func": "TODO temporary hack to avoid unnecessary bug reports for subclasses", "target": 1}
{"idx": 36377, "func": "i18n[i18n.bundle=Bundle]", "target": 0}
{"idx": 36378, "func": "//{{{ MouseListener...", "target": 0}
{"idx": 36379, "func": "Use old style", "target": 0}
{"idx": 36380, "func": "clear status bar message now we are done (with a delay)", "target": 0}
{"idx": 36381, "func": "Get previous state in stack. //", "target": 0}
{"idx": 36382, "func": "rmicopts", "target": 0}
{"idx": 36383, "func": "line 1960", "target": 0}
{"idx": 36384, "func": "@see org.argouml.uml.ui.UMLComboBoxModel2#propertyChange(java.beans.PropertyChangeEvent)", "target": 0}
{"idx": 36385, "func": "and not association classes", "target": 0}
{"idx": 36386, "func": "Allow listening to other elements: addOtherModelEventListeners(listTarget);", "target": 0}
{"idx": 36387, "func": "i18n[HibernateConfigPanel.toObtainSessionFactConfiguration=Call \"new org.hibernate.cfg.Configuration().configure().buildSessionFactory();\"]", "target": 0}
{"idx": 36388, "func": "DROP INDEX index [IF EXISTS];", "target": 0}
{"idx": 36389, "func": "copy elements into newly empty target collection", "target": 0}
{"idx": 36390, "func": "//{{{ getFilesystems() method", "target": 0}
{"idx": 36391, "func": "Load .xmi file before any PGML files FIXME: the following is loading the model before anything else. Due to the Zargo containing the profiles, currently we have removed this hack in UmlFilePersister and I think it should be removed from here also.", "target": 1}
{"idx": 36392, "func": "//shadowVisible;", "target": 0}
{"idx": 36393, "func": "views will depend on tables, so drop them first", "target": 0}
{"idx": 36394, "func": "load all internal core plugins", "target": 0}
{"idx": 36395, "func": "no problem in conversion - proceed with update // ((DataSetViewerTablePanel.MyJTable)_table).setConvertedValueAt( // newValue, _row, _col);", "target": 0}
{"idx": 36396, "func": "If we don't have a MofClass, see if we can get one from the instance", "target": 0}
{"idx": 36397, "func": "i18n[oracle.triggerDetails=Details]", "target": 0}
{"idx": 36398, "func": "We can't have a null name, in case we're using EMOF serialization. //", "target": 0}
{"idx": 36399, "func": "boundary not found - Content-Type must be changed", "target": 0}
{"idx": 36400, "func": "read configuration from options.xml file create css-stylesheet string set font of html-element <P>", "target": 0}
{"idx": 36401, "func": "ALTER TABLE tableName ALTER COLUMN columnName SET DEFAULT nextval('tableName_columnName_seq'); ALTER SEQUENCE tableName_columnName_seq OWNED BY tableName.columnName;", "target": 0}
{"idx": 36402, "func": "If lastWasCR is true, we just read a \\r followed by a \\n. We specify that this is a Windows file, but take no further action and just ignore the \\r.", "target": 0}
{"idx": 36403, "func": "can't find any difference", "target": 0}
{"idx": 36404, "func": "//listener.setShowSqlStatements(true);", "target": 0}
{"idx": 36405, "func": "create parser", "target": 0}
{"idx": 36406, "func": "i18n[cellDataPopup.valueofColumn=Value of column {0}]", "target": 0}
{"idx": 36407, "func": "line 1280", "target": 0}
{"idx": 36408, "func": "//{{{ backupSettingsFile() method", "target": 0}
{"idx": 36409, "func": "skip nodes until next label", "target": 0}
{"idx": 36410, "func": "Add standard jar locations to initial classpath", "target": 0}
{"idx": 36411, "func": "if the height is less than one, we set it to one pixel", "target": 0}
{"idx": 36412, "func": "The Apache resolver is present - Need to check if it can be seen by the catalog resolver class. Start by getting the actual loader", "target": 0}
{"idx": 36413, "func": "Enable JavaHelp support if topic id is defined", "target": 0}
{"idx": 36414, "func": "subLabelFont", "target": 0}
{"idx": 36415, "func": "//{{{ closeCurrentArea() method", "target": 0}
{"idx": 36416, "func": "set last used iterator here, in case the user calls remove before calling hasNext() or next() (although they shouldn't)", "target": 0}
{"idx": 36417, "func": "implemented for completeness. Time-out for clearing text is ignored here.", "target": 0}
{"idx": 36418, "func": "class bodies prepare their own dynamic scope, so let it do that", "target": 0}
{"idx": 36419, "func": "detect whether or not the object tree needs refreshing by comparing old value to new and see if they changed.", "target": 0}
{"idx": 36420, "func": "More general attributes not supported", "target": 0}
{"idx": 36421, "func": "We get many many events (why?), so let's filter:", "target": 0}
{"idx": 36422, "func": "Ignore trailing empty spec", "target": 0}
{"idx": 36423, "func": "give the Interceptor a chance to process property values, if the properties were modified by the Interceptor, we need to set them back to the object", "target": 0}
{"idx": 36424, "func": "fall-back to formatted name", "target": 0}
{"idx": 36425, "func": "The following alternative is only supported in JDK 1.4 - we support JDK 1.3.1 onwards setItemLabelsVisible(Boolean.valueOf(visible));", "target": 0}
{"idx": 36426, "func": "This code was copied from ActionBooleanTaggedValue:", "target": 1}
{"idx": 36427, "func": "goto next bucket", "target": 0}
{"idx": 36428, "func": "in UML2, the tag definition is the attribute itself", "target": 0}
{"idx": 36429, "func": "add all contacts as leafs of group folders", "target": 0}
{"idx": 36430, "func": "@see TableModel#getColumnName(int)", "target": 0}
{"idx": 36431, "func": "@see javax.swing.JFileChooser#approveSelection()", "target": 0}
{"idx": 36432, "func": "i18n[graph.chkIsLandscape=Landscape]", "target": 0}
{"idx": 36433, "func": "i18n[oracle.sorts=Sorts]", "target": 0}
{"idx": 36434, "func": "Process all items in this folder.", "target": 0}
{"idx": 36435, "func": "outline stroke sequence", "target": 0}
{"idx": 36436, "func": "//Folder folder = (AbstractMessageFolder) r[0].getFolder();", "target": 0}
{"idx": 36437, "func": "iterator through all the files and process them.", "target": 0}
{"idx": 36438, "func": "@see org.argouml.cognitive.critics.Critic#addSupportedGoal(org.argouml.cognitive.Goal)", "target": 0}
{"idx": 36439, "func": "verify various indices inside a segment are the same segment", "target": 0}
{"idx": 36440, "func": "try to restore from previous session", "target": 0}
{"idx": 36441, "func": "adding same target again should not generate new events:", "target": 0}
{"idx": 36442, "func": "TODO needs cleaning up", "target": 1}
{"idx": 36443, "func": "line 572", "target": 0}
{"idx": 36444, "func": "skip non-matching elements", "target": 0}
{"idx": 36445, "func": "TODO: This is not according the contract for this function, but it is used in several places, and I (MVW) presume that we need this generally. This part (1) is about drawing an <<import>> permission between packages. The part (2) below is about ModelManagement.ElementImport.", "target": 1}
{"idx": 36446, "func": "Hack... need a more direct way of obtaining a view? JEditTextArea.getView() method?", "target": 1}
{"idx": 36447, "func": "slope of the line we're finding the normal to is slope, and the normal is the negative reciprocal slope is (p1.y - p2.y) / (p1.x - p2.x) so recip is - (p1.x - p2.x) / (p1.y - p2.y)", "target": 0}
{"idx": 36448, "func": "Test sending data as UTF-8, with values that will change when urlencoded, and where we tell the sampler to urlencode the parameter value", "target": 0}
{"idx": 36449, "func": "update timer event", "target": 0}
{"idx": 36450, "func": "Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods from Ruby so they are not really unused).", "target": 0}
{"idx": 36451, "func": "@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event. DocumentEvent) TODO: Are the 3 methods uses ?", "target": 1}
{"idx": 36452, "func": "TimesTen has no BLOB/CLOB support, but these types may be suitable for some applications. The length is limited to 4 million bytes.", "target": 0}
{"idx": 36453, "func": "In any case draw (over the ghost image if necessary) a cue line indicating where a drop will occur.", "target": 0}
{"idx": 36454, "func": "//i18n[explainplanexecuter.cardinality=Cardinality]", "target": 0}
{"idx": 36455, "func": "this rectangle marks the operation section; all operations are inside it", "target": 0}
{"idx": 36456, "func": "TODO: maybe separate name", "target": 1}
{"idx": 36457, "func": "//LOG.log(Level.FINE, \"OCL: \" + ocl);", "target": 0}
{"idx": 36458, "func": "evaluate finally block", "target": 0}
{"idx": 36459, "func": "i18n[graph.mnuDelete=delete]", "target": 0}
{"idx": 36460, "func": "Wrap the deepest result so that on close, the results are finally transferred. //", "target": 0}
{"idx": 36461, "func": "i18n[TableExportCsvController.fileChooserTitel=Choose export file]", "target": 0}
{"idx": 36462, "func": "Store the key", "target": 0}
{"idx": 36463, "func": "the createTest() method creates an extra context which needs to be closed", "target": 0}
{"idx": 36464, "func": "let the interceptor inspect the instance to decide", "target": 0}
{"idx": 36465, "func": "Look for a TagDefinition matching the given name", "target": 0}
{"idx": 36466, "func": "This assumes that the JMV treats a class file as a resource (not all do).", "target": 0}
{"idx": 36467, "func": "e.g. .apache.org $NON-NLS-1$", "target": 0}
{"idx": 36468, "func": "//{{{ Buttons", "target": 0}
{"idx": 36469, "func": "0080..00FF;", "target": 0}
{"idx": 36470, "func": "Not possible to simply re-use the versionPropertyNode here as it causes OOM errors due to circularity :(", "target": 1}
{"idx": 36471, "func": "freeze the callstack for the stack trace.", "target": 0}
{"idx": 36472, "func": "otherwise, rethrow", "target": 0}
{"idx": 36473, "func": "project file doesn't exist. let's pop up a message dialog..", "target": 0}
{"idx": 36474, "func": "test that properties were correctly initialized by the constructor", "target": 0}
{"idx": 36475, "func": "Process the super types if that's been specified. //", "target": 0}
{"idx": 36476, "func": "Java support", "target": 0}
{"idx": 36477, "func": "if external plugin, we need the directory of it", "target": 0}
{"idx": 36478, "func": "Don't add duplicates", "target": 0}
{"idx": 36479, "func": "folder.getConfiguration().set(\"property\", \"enable_threaded_view\", enableThreadedView);", "target": 0}
{"idx": 36480, "func": "Select the Current type in the combobox", "target": 0}
{"idx": 36481, "func": "add a \\r\\n", "target": 0}
{"idx": 36482, "func": "(non-Javadoc) @see org.columba.mail.folder.AbstractMessageFolder#save()", "target": 0}
{"idx": 36483, "func": "#2", "target": 0}
{"idx": 36484, "func": "MRI extends in order from last to first", "target": 0}
{"idx": 36485, "func": "//s.addParam(createParam(\"algorithm.provider\",\"---\")); i don't know any valid", "target": 0}
{"idx": 36486, "func": "i18n[SupportedRefactoringsTab.hint=Show refactorings that are supported by the plugin]", "target": 0}
{"idx": 36487, "func": "Argument types used to create the method. May be provided explicitly, or derived from the constructor argument list.", "target": 0}
{"idx": 36488, "func": "Wrap the input stream as a zip stream to scan it's contents for a match. //", "target": 0}
{"idx": 36489, "func": "for compatibility with older jEdit versions", "target": 0}
{"idx": 36490, "func": "we already confirmed above that length > 0", "target": 0}
{"idx": 36491, "func": "//public abstract IChatMediator getChatMediator();", "target": 0}
{"idx": 36492, "func": "line 1108", "target": 0}
{"idx": 36493, "func": "expandToFitSpace", "target": 0}
{"idx": 36494, "func": "//{{{ getSelectionColor() method", "target": 0}
{"idx": 36495, "func": "check if message isn't too big to download", "target": 0}
{"idx": 36496, "func": "Is the sample result OK to cache? i.e is it in the 2xx range?", "target": 0}
{"idx": 36497, "func": "user cancelled???", "target": 0}
{"idx": 36498, "func": "context-entity-identifier returns null explicitly if the entity is not associated with the persistence context; so make some deeper checks...", "target": 0}
{"idx": 36499, "func": "TODO: This should not need to know about ProjectSettings - tfm", "target": 1}
{"idx": 36500, "func": "check if happens in calendar, but not on activity", "target": 0}
{"idx": 36501, "func": "now add some more data", "target": 0}
{"idx": 36502, "func": "TODO: Document", "target": 1}
{"idx": 36503, "func": "i18n[I18n.SourceDirDoesNotExist=Source directory {0} does not exist.]", "target": 0}
{"idx": 36504, "func": "These fields are not currently saved or restored", "target": 0}
{"idx": 36505, "func": "Cut down on debugging noise", "target": 0}
{"idx": 36506, "func": "the start and end flags will be wrong with reverse search enabled, but they are only used by the regexp matcher, which doesn't support reverse search yet. REMIND: fix flags when adding reverse regexp search.", "target": 0}
{"idx": 36507, "func": "if the read buffer is ahead, back up", "target": 0}
{"idx": 36508, "func": "TODO: Make this hack more i18n compatible", "target": 1}
{"idx": 36509, "func": "A node identifying a new path", "target": 0}
{"idx": 36510, "func": "COLUMN(S)", "target": 0}
{"idx": 36511, "func": "for easier search / matching", "target": 0}
{"idx": 36512, "func": "Comment", "target": 0}
{"idx": 36513, "func": "i18n[mssql.allRules=All rules]", "target": 0}
{"idx": 36514, "func": "Adds a foreign key constraint to the source table.", "target": 0}
{"idx": 36515, "func": "silent error, consider the curve is constant outside its range", "target": 0}
{"idx": 36516, "func": "read in all constant pool entries.", "target": 0}
{"idx": 36517, "func": "Display not found message and reset search", "target": 0}
{"idx": 36518, "func": "now download the message", "target": 0}
{"idx": 36519, "func": "//end inner class", "target": 0}
{"idx": 36520, "func": "//easy interface to properties", "target": 0}
{"idx": 36521, "func": "line 852", "target": 0}
{"idx": 36522, "func": "i18n[mssql.scriptPermission=Script object-level permissions]", "target": 0}
{"idx": 36523, "func": "elements and trailing nils", "target": 0}
{"idx": 36524, "func": "for example: case 0: s = \"invalid character\"; break; perhaps insert application specific error messages here", "target": 0}
{"idx": 36525, "func": "add 'new' with full signature, so it's guaranteed to be directly accessible TODO: no need for this to be a full, formal JVM signature", "target": 1}
{"idx": 36526, "func": "//{{{ getParentDirectoryList() method", "target": 0}
{"idx": 36527, "func": "-ctime", "target": 0}
{"idx": 36528, "func": "set the source to the file at that location", "target": 0}
{"idx": 36529, "func": "//public int type;", "target": 0}
{"idx": 36530, "func": "Estimate the square root with the foremost 62 bits of squarD bi and scale are a tandem", "target": 0}
{"idx": 36531, "func": "TODO: an alternative is to check if the owner has changed; if it hasn't then get the ID from collection.getOwner()", "target": 1}
{"idx": 36532, "func": "no need for conversion", "target": 0}
{"idx": 36533, "func": "Add method body", "target": 0}
{"idx": 36534, "func": "get filter list from folder", "target": 0}
{"idx": 36535, "func": "init class under test", "target": 0}
{"idx": 36536, "func": "Set the threshold. TODO: Should this be protected? @param threshold The threshold to compare to.", "target": 1}
{"idx": 36537, "func": "update status message TODO (@author fdietz): i18n", "target": 1}
{"idx": 36538, "func": "so that HelpViewer constructor doesn't try to expand", "target": 0}
{"idx": 36539, "func": "value is the correct class", "target": 0}
{"idx": 36540, "func": "Start is a composite aggregation of end", "target": 0}
{"idx": 36541, "func": "create reference to this message", "target": 0}
{"idx": 36542, "func": "i18n[exportconfig.errorCreatingFile=Error occured reading from preferences file: {0}]", "target": 0}
{"idx": 36543, "func": "com.miginfocom.util.LicenseValidator.setLicenseKey(\"Cu=Frederik_Dietz\\nCo=OpenSource\\nDm=false\\nEx=0\\nSignature=302C021408B54A0B041E79362B1951E9FDB9AFEAD0EBFBDD021409F4830B4AD832766388107CB1D38126A9473C0C\");", "target": 0}
{"idx": 36544, "func": "Set up the property panels for collaboration diagrams:", "target": 0}
{"idx": 36545, "func": "Toplevel defines", "target": 0}
{"idx": 36546, "func": "Connect to the http server, and do a simple http post, with a pause after transmitting the headers", "target": 0}
{"idx": 36547, "func": "i18n[sqlbookmark.btnOk=OK]", "target": 0}
{"idx": 36548, "func": "Logging.log.info(\"setting size =\" + size);", "target": 0}
{"idx": 36549, "func": "buddy already exists", "target": 0}
{"idx": 36550, "func": "$NON-NLS-1$ default: bold", "target": 0}
{"idx": 36551, "func": "promise to implement two to three", "target": 0}
{"idx": 36552, "func": "Notify the calling thread that we're about to go to sleep the first time", "target": 0}
{"idx": 36553, "func": "line 504", "target": 0}
{"idx": 36554, "func": "Regardless of the name of the iAS-specific EJB descriptor file, it will written in the completed JAR file as \"ias-ejb-jar.xml\". This is the naming convention implemented by iAS.", "target": 0}
{"idx": 36555, "func": "replace \\1 with the corresponding group", "target": 0}
{"idx": 36556, "func": "Translate \"x &&= y\" --> \"x = (is_true(x) ? y : false)\" --> x = -- build(x) should return a variable! -- f = is_true(x) beq(f, false, L) x = -- build(y) -- L: //", "target": 0}
{"idx": 36557, "func": "$NON-NLS-1$ TODO can this be obtained from the file somehow?", "target": 1}
{"idx": 36558, "func": "flush", "target": 0}
{"idx": 36559, "func": "line 678", "target": 0}
{"idx": 36560, "func": "OK (currently) to invoke using sub-class", "target": 0}
{"idx": 36561, "func": "Get the beanInfo:", "target": 0}
{"idx": 36562, "func": "check whether the \"valueHistory\" array member exists; if not, create them:", "target": 0}
{"idx": 36563, "func": "duplicate shortcut not found; let's check for duplicates", "target": 0}
{"idx": 36564, "func": "The old view is preserved to eventually preserve folding points", "target": 0}
{"idx": 36565, "func": "For performance reasons, it is important to pre-fetch all the properties we'll need for all the items we'll be searching.", "target": 0}
{"idx": 36566, "func": "//implements ActionListener", "target": 0}
{"idx": 36567, "func": "now we need to populate the compiler adapter", "target": 0}
{"idx": 36568, "func": "\"loaded\" means the reference that is consistent with the current database state", "target": 0}
{"idx": 36569, "func": "parent classes to check are inner classes OK?", "target": 0}
{"idx": 36570, "func": "Numeric.equal", "target": 0}
{"idx": 36571, "func": "Add the edit menu actions. //", "target": 0}
{"idx": 36572, "func": "(non-Javadoc) @see org.eclipse.emf.mapping.MappingRoot#canCreateMapping(java.util.Collection, java.util.Collection, org.eclipse.emf.mapping.Mapping)", "target": 0}
{"idx": 36573, "func": "Determine the JAR filename (without filename extension)", "target": 0}
{"idx": 36574, "func": "(non-Javadoc) @see org.columba.calendar.ui.calendar.api.IActivitySelectionChangedListener#selectionChanged(org.columba.calendar.ui.calendar.api.ActivitySelectionChangedEvent)", "target": 0}
{"idx": 36575, "func": "converts temporary opcodes 202 to 217 (inclusive), 218 and 219 to IFEQ ... JSR (inclusive), IFNULL and IFNONNULL", "target": 0}
{"idx": 36576, "func": "//{{{ getNextAWTRequest() method", "target": 0}
{"idx": 36577, "func": "if there is an element with end position <= rangeEndPos", "target": 0}
{"idx": 36578, "func": "WARN: Don't use the StreamSource(File) ctor. It won't work with xalan prior to 2.2 because of systemid bugs.", "target": 0}
{"idx": 36579, "func": "update message list view title", "target": 0}
{"idx": 36580, "func": "Runs on the event-dispatching thread.", "target": 0}
{"idx": 36581, "func": "Assert is flawed because canWrite does not work. assertTrue(\"File f2 Is Not Set To ReadOnly.\" , !f2.canWrite());", "target": 0}
{"idx": 36582, "func": "on \"RETURN\" start seach", "target": 0}
{"idx": 36583, "func": "version made by", "target": 0}
{"idx": 36584, "func": "If the cause is a SMTPExcpetion then only password wrong else bogus authentication mechanism", "target": 0}
{"idx": 36585, "func": "SOS server address is required", "target": 0}
{"idx": 36586, "func": "soscmd Command options", "target": 0}
{"idx": 36587, "func": "-obsolete", "target": 0}
{"idx": 36588, "func": "I18n[oracle.invalidTitle=Oracle invalid objects for: {0}]", "target": 0}
{"idx": 36589, "func": "short-circuit(s) no new elements, the old list contains only Orphans no old elements, so no Orphans neither", "target": 0}
{"idx": 36590, "func": "@author: fdietz using shutdown-manager is wrong here, because this automatically also calls the FrameManager, which also starts a second shutdown thread -> This leads into two parallel shutdown thread which -> is why sometimes config-files, etc. get messed up", "target": 1}
{"idx": 36591, "func": "remove all columns for column model", "target": 0}
{"idx": 36592, "func": "//HashMap columnsUnique = new HashMap();", "target": 0}
{"idx": 36593, "func": "Do not show border line, make transparent:", "target": 0}
{"idx": 36594, "func": "//{{{ goToPrevPage() method", "target": 0}
{"idx": 36595, "func": "@see org.argouml.notation.NotationName#sameNotationAs(org.argouml.notation.NotationName)", "target": 0}
{"idx": 36596, "func": "//it refers to an alias of a projection", "target": 0}
{"idx": 36597, "func": "TODO: Add Up/Down buttons to control the ordering of items", "target": 1}
{"idx": 36598, "func": "initialize context", "target": 0}
{"idx": 36599, "func": "return parts", "target": 0}
{"idx": 36600, "func": "If the same message is still shown Mark it as read", "target": 0}
{"idx": 36601, "func": "Check that the query string is empty", "target": 0}
{"idx": 36602, "func": "//str is frozen", "target": 0}
{"idx": 36603, "func": "grab the token", "target": 0}
{"idx": 36604, "func": "Subexpression index of this token.", "target": 0}
{"idx": 36605, "func": "@see java.util.List#listIterator()", "target": 0}
{"idx": 36606, "func": "if no theme available -> set \"Plastic\" as default", "target": 0}
{"idx": 36607, "func": "disable selected item", "target": 0}
{"idx": 36608, "func": "set paragraph formatting according to the selection", "target": 0}
{"idx": 36609, "func": "TODO: test that surrogate value is legal.", "target": 1}
{"idx": 36610, "func": "Fill 6 of value (byte) 33 Fill 4 of value (byte) -19", "target": 0}
{"idx": 36611, "func": "don't override Numeric#div !", "target": 0}
{"idx": 36612, "func": "Register any new blocking I/O requests //", "target": 0}
{"idx": 36613, "func": "Called when app shutdown. TODO: Put throws clause back in", "target": 1}
{"idx": 36614, "func": "try to get the account using the email address", "target": 0}
{"idx": 36615, "func": "//{{{ getRules() method", "target": 0}
{"idx": 36616, "func": "DB2 doesn't support adding an auto-increment column once the table has already been created. So this can simulate one using trigger on the table to access a sequence. Found this idea at wikibooks: http://en.wikibooks.org/wiki/SQL_dialects_reference/Data_structure_definition/Auto-increment_column CREATE SEQUENCE sequence_name; CREATE TABLE table_name ( column_name INT ); CREATE TRIGGER insert_trigger NO CASCADE BEFORE INSERT ON table_name REFERENCING NEW AS n FOR EACH ROW SET n.column_name = NEXTVAL FOR sequence_name;", "target": 0}
{"idx": 36617, "func": "end class CrTooManyAttr", "target": 0}
{"idx": 36618, "func": "Load .argo project descriptor", "target": 0}
{"idx": 36619, "func": "Error conditions from GNU regcomp(3) manual", "target": 0}
{"idx": 36620, "func": "setOpaque(true); //MUST do this for background to show up.", "target": 0}
{"idx": 36621, "func": "//{{{ Icon methods", "target": 0}
{"idx": 36622, "func": "The figPoly is located at the right edge of the nameFig. The nameFig size is such that it at least fits its text, and the figPoly next to the text. Making the package bigger, causes the figPoly to stick to the right edge.", "target": 0}
{"idx": 36623, "func": "//Iterator itr = data.iterator();", "target": 0}
{"idx": 36624, "func": "try column index too high", "target": 0}
{"idx": 36625, "func": "IViewPart view = getViewPart(); titleLabel.setText(view.getTitle()); titleLabel.setImage(view.getTitleImage());", "target": 0}
{"idx": 36626, "func": "//cannot remove underscores due to protected visibility >:(", "target": 1}
{"idx": 36627, "func": "//{{{ setHighlightedForeground() method", "target": 0}
{"idx": 36628, "func": "//default pool size 20", "target": 0}
{"idx": 36629, "func": "private JLabel _executionLogFileNameLbl = new OutputLabel(\" \"); Must have at least 1 blank otherwise width gets set to zero. private JLabel _logConfigFileNameLbl = new OutputLabel(\" \"); Must have at least 1 blank otherwise width gets set to zero.", "target": 0}
{"idx": 36630, "func": "Check filename is preserved correctly", "target": 0}
{"idx": 36631, "func": "default behavior if no appropriate data type found is to create a simple JTextArea with no special handling. In Theory, this cannot happen because if there is no data type object for this column's data type, then isEditableInPopup returns false, so we should not get here. If there IS a data type object, and isEditableInPopup returns true, then we would have executed the return statement above. Assume that the value can be represented as a string.", "target": 0}
{"idx": 36632, "func": "TODO: Need to enhance the index dialog to allow specifying storage option. For now just accept the default for the index access method. valuesMap.put(\"indexType\", \"USING BTREE\");", "target": 1}
{"idx": 36633, "func": "//DELETED", "target": 0}
{"idx": 36634, "func": "show error dialog, with exception message and stack-trace -> dialog also provides a button for the user to easily -> report a bug", "target": 0}
{"idx": 36635, "func": "Stream-based", "target": 0}
{"idx": 36636, "func": "It's up to the plot which clones up to restore the correct references", "target": 0}
{"idx": 36637, "func": "x^2 + y^2 = r^2 (equation of a circle)", "target": 0}
{"idx": 36638, "func": "So, let's do it the hard way:", "target": 0}
{"idx": 36639, "func": "or: x0s + 2(x0-x0s)", "target": 0}
{"idx": 36640, "func": "Specify design issue category and knowledge type", "target": 0}
{"idx": 36641, "func": "value 0", "target": 0}
{"idx": 36642, "func": "i18n[DumpSessionAction.success=Session successfuly dumped to: {0}]", "target": 0}
{"idx": 36643, "func": "JUnitTestRunner", "target": 0}
{"idx": 36644, "func": "XYDataset only provides methods for reading a dataset...", "target": 0}
{"idx": 36645, "func": "now process the plot if there is one", "target": 0}
{"idx": 36646, "func": "MySQL uses catalogs and not schemas", "target": 0}
{"idx": 36647, "func": "i18n[sqlbookmark.editBookmark=Edit bookmark]", "target": 0}
{"idx": 36648, "func": "---- cancelButton ----", "target": 0}
{"idx": 36649, "func": "Its the listener class name", "target": 0}
{"idx": 36650, "func": "Member variables...", "target": 0}
{"idx": 36651, "func": "loop until we see the nth separator char", "target": 0}
{"idx": 36652, "func": "diamond", "target": 0}
{"idx": 36653, "func": "Create column list", "target": 0}
{"idx": 36654, "func": "?M | Time | Last modification time for file1", "target": 0}
{"idx": 36655, "func": "//int progress = loadSchemas(1); load tables with catalog = null", "target": 0}
{"idx": 36656, "func": "Java6 types ROWID NVARCHAR NCHAR LONGNVARCHAR NCLOB SQLXML", "target": 0}
{"idx": 36657, "func": "//////////////////////////////////////////////////////////////////////Constants. ////////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 36658, "func": "@bgen(jjtree) TryStatement", "target": 0}
{"idx": 36659, "func": "Merge in any additional test listeners currently only used by the function parser", "target": 0}
{"idx": 36660, "func": "errors", "target": 0}
{"idx": 36661, "func": "i18n[exportconfig.databaseDrivers=Database Drivers]", "target": 0}
{"idx": 36662, "func": "we reached the end of a list", "target": 0}
{"idx": 36663, "func": "i18n[favs.savedQueries=Saved Queries]", "target": 0}
{"idx": 36664, "func": "////////////////////////////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 36665, "func": "sort first to files, then dirs", "target": 0}
{"idx": 36666, "func": "BAD - Converting a URL to a file this way is problematic when the file path contains spaces", "target": 1}
{"idx": 36667, "func": "go back to the while loop", "target": 0}
{"idx": 36668, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getSchemaTerm()", "target": 0}
{"idx": 36669, "func": "Save our old boundaries (needed later), and get minimum size info. \"aSize\" will be used to maintain a running calculation of our size at various points.", "target": 0}
{"idx": 36670, "func": "required to exception table iconst_0 i", "target": 0}
{"idx": 36671, "func": "Use the index as the name, used when processing the action", "target": 0}
{"idx": 36672, "func": "break when first braket found", "target": 0}
{"idx": 36673, "func": "Create Constants class", "target": 0}
{"idx": 36674, "func": "//$NON-NLS-1$ TODO - probably wrong", "target": 1}
{"idx": 36675, "func": "@see PropertyChangeListener#propertyChange(PropertyChangeEvent)", "target": 0}
{"idx": 36676, "func": "Export the Root CA for Firefox/Chrome/IE", "target": 0}
{"idx": 36677, "func": "//i18n[ImportDataIntoTableExecutor.importingDataInto=Importing data into {0}]", "target": 0}
{"idx": 36678, "func": "If the bundle can't be found the normal way, try to find it as the base URL. If that also doesn't work, rethrow the original exception. //", "target": 0}
{"idx": 36679, "func": "Never mind", "target": 0}
{"idx": 36680, "func": "Otherwise, if a sibling feature was found, iterate through the children features to find the index of the child feature... //", "target": 0}
{"idx": 36681, "func": "This is used for {x,y} calculations", "target": 0}
{"idx": 36682, "func": "select activity before opening context context-menu selectedInternalActivitiy.getStates().setStates( GenericStates.SELECTED_BIT, true);", "target": 0}
{"idx": 36683, "func": "statement or embedded block evaluated a return statement", "target": 0}
{"idx": 36684, "func": "CHECKSTYLE:OFF - ignore too many parameters since API is fixed by MDR", "target": 0}
{"idx": 36685, "func": "-t", "target": 0}
{"idx": 36686, "func": "line 372", "target": 0}
{"idx": 36687, "func": "//TODO: inefficient", "target": 1}
{"idx": 36688, "func": "Defensive, convenience methods", "target": 0}
{"idx": 36689, "func": "//Query parser settings:", "target": 0}
{"idx": 36690, "func": "//this may be a java1.4 thingy only", "target": 0}
{"idx": 36691, "func": "@see org.tigris.gef.presentation.FigGroup#addFig(Fig)", "target": 0}
{"idx": 36692, "func": "private JTextField textField; private JPanel leftPanel; private JTabbedPane rightPanel; private JButton addButton; private JButton removeButton; private JButton editButton; private JButton upButton; private JButton downButton; private JFrame frame;", "target": 0}
{"idx": 36693, "func": "create the file to open", "target": 0}
{"idx": 36694, "func": "TimesTen allows a maximum fetch size of 128.", "target": 0}
{"idx": 36695, "func": "//{{{ I/O request methods", "target": 0}
{"idx": 36696, "func": "// boolean put = persister.getCache().insert(ck, cacheEntry);", "target": 0}
{"idx": 36697, "func": "i18n[userscript.scriptCompleted=Script completed]", "target": 0}
{"idx": 36698, "func": "<ZipExtraField>", "target": 0}
{"idx": 36699, "func": "//{{{ lookup() method", "target": 0}
{"idx": 36700, "func": "4.5.2.14 Dependency", "target": 0}
{"idx": 36701, "func": "If we found an old-style name, update it to the new package name", "target": 0}
{"idx": 36702, "func": "ResolvedCritic(String, List)", "target": 0}
{"idx": 36703, "func": "usually the range will be a DateRange, but if it isn't do a conversion...", "target": 0}
{"idx": 36704, "func": "private TestData(String f, String b, String s) { this(f, b, s, null); }", "target": 0}
{"idx": 36705, "func": "Has to be done directly on the main frame because of racing condition at start up. //_aliasesListWindow.nowVisible(false);", "target": 0}
{"idx": 36706, "func": "set start position for next search", "target": 0}
{"idx": 36707, "func": "end class NotSnoozedCM", "target": 0}
{"idx": 36708, "func": "//$NON-NLS-1$ Ensure variable has been provided", "target": 0}
{"idx": 36709, "func": "this is a Message UML object", "target": 0}
{"idx": 36710, "func": "bottom.add( Box.createHorizontalStrut());", "target": 0}
{"idx": 36711, "func": "start any daemon threads", "target": 0}
{"idx": 36712, "func": "Stop server", "target": 0}
{"idx": 36713, "func": "These variables are package scope for fast access within the engine execution flags this match was made using", "target": 0}
{"idx": 36714, "func": "(non-Javadoc) @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeatures(org.eclipse.emf.ecore.EClass)", "target": 0}
{"idx": 36715, "func": "If not, dispose the current command and create a new one. //", "target": 0}
{"idx": 36716, "func": "Call the compile() method", "target": 0}
{"idx": 36717, "func": "Check if we know the encoding of the form", "target": 0}
{"idx": 36718, "func": "First have to release the cookie we were using so other threads stuck in wait can move on", "target": 0}
{"idx": 36719, "func": "note that all regexps start with \\A so they only match the start of the string", "target": 0}
{"idx": 36720, "func": "g.setColor(bg); g.fillRect(0, h - 3, 3, 3); g.fillRect(w - 3, 0, 3, 3); g.fillRect(w - 3, h - 3, 3, 3);", "target": 0}
{"idx": 36721, "func": "Default to string type which means do nothing", "target": 0}
{"idx": 36722, "func": "//TODO: We should also test that the object //have been removed from their namespace. //Collection c = Model.getFacade().getOwnedElements(p.getRoot());", "target": 0}
{"idx": 36723, "func": "so that Replace and Find continues from the right location", "target": 0}
{"idx": 36724, "func": "Dont need to close the ResultSet as DatabaseTypesDataSet will do so when its finished with it.", "target": 0}
{"idx": 36725, "func": "get the platform beans", "target": 0}
{"idx": 36726, "func": "-- Package local methods for the QueryLoader delegate --", "target": 0}
{"idx": 36727, "func": "XXX: 0xffff0000 on BE?", "target": 0}
{"idx": 36728, "func": "Is this instruction live or dead? During optimization passes, if this instruction causes no side-effects and the result of the instruction is not needed by anyone else, we can remove this instruction altogether without affecting program correctness.", "target": 0}
{"idx": 36729, "func": "//if there was any text before this, add it as a fragment //TODO, this check could be modified to go if pos>prev; //seems like this current version could stick empty strings //into the list", "target": 1}
{"idx": 36730, "func": "Create folders in workspace", "target": 0}
{"idx": 36731, "func": "We can't do the backward scan if start == 0", "target": 0}
{"idx": 36732, "func": "@see org.argouml.uml.reveng.ImportCommon#isMinimiseFigsChecked()", "target": 0}
{"idx": 36733, "func": "Now, get the drop order (same as delete) and update the dialog status while doing so.", "target": 0}
{"idx": 36734, "func": "store the current time zone", "target": 0}
{"idx": 36735, "func": "If eObject1 and eObject2 are the same instance... //", "target": 0}
{"idx": 36736, "func": "read the DB MetaData info and fill in the value, if any Note that the ResultSet info and the colDefs should be in the same order, but we cannot guarantee that.", "target": 0}
{"idx": 36737, "func": "If we drop out here, there was no match and we have no problem", "target": 0}
{"idx": 36738, "func": "Concatenate all of the command line arguments into a single String", "target": 0}
{"idx": 36739, "func": "iAS installation directory (used if ejbc isn't on user's PATH)", "target": 0}
{"idx": 36740, "func": "the last one needs extra space below it", "target": 0}
{"idx": 36741, "func": "i18n[mssql.oneFile=Create one file]", "target": 0}
{"idx": 36742, "func": "//i18n[explainplanexecuter.planTableUnavailableTitle= //PLAN_TABLE not found]", "target": 0}
{"idx": 36743, "func": "I know, this is not necessary, but I prefer it explicit (SB)", "target": 0}
{"idx": 36744, "func": "i18n[TableExportCsvController.invalidSeparator=You must provide a single separator character or check \"Use tab\" to use the tab character.]", "target": 0}
{"idx": 36745, "func": "These constants are used both for the JMX file and for the setters/getters $NON-NLS-1$", "target": 0}
{"idx": 36746, "func": "treat it like a timestamp", "target": 0}
{"idx": 36747, "func": "set up dialog to ask user if it is ok to proceed IMPORTANT: this dialog is SYNCHRONOUS (ie. we do not proceed until user gives a response). This is critical since this function provides a return value to its caller that depends on the user input. i18n[baseDataSetViewerDestination.warning=Warning]", "target": 0}
{"idx": 36748, "func": "ask whether to override that other shortcut", "target": 0}
{"idx": 36749, "func": "drop <columnName>", "target": 0}
{"idx": 36750, "func": "//note: updates to joined tables can't be batched...", "target": 0}
{"idx": 36751, "func": "get two consecutive segments for various tests", "target": 0}
{"idx": 36752, "func": "colDefs not in same order as DB, so search for matching colDef entry Note: linear search here will NORMALLY be not too bad because most tables do not have huge numbers of columns.", "target": 1}
{"idx": 36753, "func": "Whether this scope is used as the \"argument scope\" for e.g. zsuper", "target": 0}
{"idx": 36754, "func": "i18n[PreferencesPanel.lineCommentLabel=Start of line comment]", "target": 0}
{"idx": 36755, "func": "1200..137F;", "target": 0}
{"idx": 36756, "func": "//{{{ HelpSearchPanel constructor", "target": 0}
{"idx": 36757, "func": "negative values", "target": 0}
{"idx": 36758, "func": "get config plugin-handler", "target": 0}
{"idx": 36759, "func": "//{{{ ResultCompare class", "target": 0}
{"idx": 36760, "func": "//setCellRenderer(new AddressbookListRenderer());", "target": 0}
{"idx": 36761, "func": "contact doesn't exist in parent folder anymore -> remove it", "target": 0}
{"idx": 36762, "func": "//{{{ setDoubleProperty() method", "target": 0}
{"idx": 36763, "func": "TODO: Do all these classes need to be in their own files? public?", "target": 1}
{"idx": 36764, "func": "Get directory", "target": 0}
{"idx": 36765, "func": "buttonPanel.add(reportBugButton);", "target": 0}
{"idx": 36766, "func": "//{{{ Load macros and run startup scripts, after plugins and settings are loaded", "target": 0}
{"idx": 36767, "func": "//the first id found after the given id", "target": 0}
{"idx": 36768, "func": "can't find any difference...", "target": 0}
{"idx": 36769, "func": "empty means no scoping", "target": 0}
{"idx": 36770, "func": "Add an item to the Windows menu for this window and store the menu item back in the internal frame.", "target": 0}
{"idx": 36771, "func": "Set up the variables for the current element context.", "target": 0}
{"idx": 36772, "func": "//{{{ removeAllKeyBindings() method", "target": 0}
{"idx": 36773, "func": "$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-1$", "target": 0}
{"idx": 36774, "func": "//some data", "target": 0}
{"idx": 36775, "func": "line 760", "target": 0}
{"idx": 36776, "func": "Process the children recursively. //", "target": 0}
{"idx": 36777, "func": "set layout", "target": 0}
{"idx": 36778, "func": "Write the properties file back out", "target": 0}
{"idx": 36779, "func": "Is the ser file or any of the source files newer then the class files. firstly find the oldest of the two class files.", "target": 0}
{"idx": 36780, "func": "If this is a unix-based system, check the 2 best-known areas for the gpg binary.", "target": 0}
{"idx": 36781, "func": "We don't want to store any cookies in the generated test plan", "target": 0}
{"idx": 36782, "func": "Sub-insertions should occur before containing insertion so Try to do the callback now", "target": 0}
{"idx": 36783, "func": "If no function-name was given, then retain the one in the model.", "target": 0}
{"idx": 36784, "func": "grab the nodes", "target": 0}
{"idx": 36785, "func": "//{{{ Line separator", "target": 0}
{"idx": 36786, "func": "TODO: Show dialog", "target": 1}
{"idx": 36787, "func": "TODO: The Quickguide also mentions: -open <arg> open given file on startup -print <arg> print given file on startup (and exit) Why are these gone?", "target": 1}
{"idx": 36788, "func": "Check if thread or test should be stopped", "target": 0}
{"idx": 36789, "func": "TODO hack, to be removed later", "target": 1}
{"idx": 36790, "func": "---- calendarTextField ----", "target": 0}
{"idx": 36791, "func": "Iterate over all the set feature to factor each child to the right reference. //", "target": 0}
{"idx": 36792, "func": "Modifier menu. Placed one before last, so the \"Properties\" entry is always last.", "target": 0}
{"idx": 36793, "func": "i18n[DataCache.msg.driverClassNotFound=Could not find class {0} in neither the Java class path nor the Extra class path of the {1} driver definition:\\n{2}]", "target": 0}
{"idx": 36794, "func": "check for possibly bad return from child", "target": 0}
{"idx": 36795, "func": "find first excluded base segment starting fromDomainValue", "target": 0}
{"idx": 36796, "func": "//centerPanel.setLayout( new BoxLayout( centerPanel, BoxLayout.Y_AXIS ) );", "target": 0}
{"idx": 36797, "func": "compact the Vector", "target": 0}
{"idx": 36798, "func": "For identifying log messages", "target": 0}
{"idx": 36799, "func": "next position is checked as well", "target": 0}
{"idx": 36800, "func": "Produce different levels of diagnostic depending whether the names are exactly the same or only matching. //", "target": 0}
{"idx": 36801, "func": "If we reach here we could not calculate a place to add the new table frame. Now it will automatically be added at (0,0).", "target": 0}
{"idx": 36802, "func": "specialized for value", "target": 0}
{"idx": 36803, "func": "i18n[DBUtil.error.bindblobfailure=bindBlobVar: failed to bind blob using filesystem - attempting to bind blob using memory]", "target": 0}
{"idx": 36804, "func": "We want to display the folder the same way you would enter it on the command line ... so we remove the View name (which is also the name of the root folder, and therefore shows up at the start of the path).", "target": 0}
{"idx": 36805, "func": "XXX: This check previously used callMethod(\"==\") to check for equality between classes when scanning the hierarchy. However the == check may be safe; we should only ever have one instance bound to a given type/constant. If it's found to be unsafe, examine ways to avoid the == call.", "target": 1}
{"idx": 36806, "func": "Create a generic super type with an EClass as the classifier for each super interface in the Java representation. //", "target": 0}
{"idx": 36807, "func": "headerManager was set, so let's set the connection to use it.", "target": 0}
{"idx": 36808, "func": "//create a temporary vector set x to some arbitary value (used below)", "target": 0}
{"idx": 36809, "func": "Make all child paths relative.", "target": 0}
{"idx": 36810, "func": "Build a list of the keys //", "target": 0}
{"idx": 36811, "func": "refers to the entry in persistence.xml", "target": 0}
{"idx": 36812, "func": "For a one-to-many, a <bag> is not really a bag; it is really a set, since it can't contain the same element twice. It could be considered a bug in the mapping dtd that <bag> allows <one-to-many>.", "target": 1}
{"idx": 36813, "func": "//{{{ lazily create skip and suffix arrays for either the search pattern, or the reversed search pattern", "target": 0}
{"idx": 36814, "func": "Returns names of all metamodel value elements including datatypes, enumerations, and primitive types. TODO: This method rightly belongs in a separate interface dealing with instances of MOF types as opposed to UML types like all the rest of the methods here do. @return Collection containing Strings with names of all metatypes", "target": 1}
{"idx": 36815, "func": "if it's an array of arrays, recurse with the component type", "target": 0}
{"idx": 36816, "func": "the user specifically supplied update=\"true\", which constitutes an illegal combo", "target": 0}
{"idx": 36817, "func": "tick label font...", "target": 0}
{"idx": 36818, "func": "variable is never read, variable is never live", "target": 0}
{"idx": 36819, "func": "//use the current version", "target": 0}
{"idx": 36820, "func": "set comment and initializer as strings", "target": 0}
{"idx": 36821, "func": "Normal test failure", "target": 0}
{"idx": 36822, "func": "Are we the default language?", "target": 0}
{"idx": 36823, "func": "this is equivalent to the old behavior...", "target": 0}
{"idx": 36824, "func": "-- Availables Actions", "target": 0}
{"idx": 36825, "func": "The classifier of an attribute's generic type must be a data type. //", "target": 0}
{"idx": 36826, "func": "?S | boolean | True if file1 exists and is a socket", "target": 0}
{"idx": 36827, "func": "belong to other persister belong to other persister", "target": 0}
{"idx": 36828, "func": "text backup", "target": 0}
{"idx": 36829, "func": "add all name-to-class mappings", "target": 0}
{"idx": 36830, "func": "/////////////////////////////////////////////////////////////////Warning", "target": 0}
{"idx": 36831, "func": "(non-Javadoc) @see org.columba.core.gui.frame.focus.FocusOwner#delete()", "target": 0}
{"idx": 36832, "func": "Task included in a target ( including the default one ).", "target": 0}
{"idx": 36833, "func": "The XML header, with placeholder for encoding, since that is controlled by property $NON-NLS-1$", "target": 0}
{"idx": 36834, "func": "do this when all the properties are updateable since there is a certain likelihood that the information will already be snapshot-cached.", "target": 0}
{"idx": 36835, "func": "confirm maximum not greater than optional", "target": 0}
{"idx": 36836, "func": "map of EntityMode -> Tuplizer", "target": 0}
{"idx": 36837, "func": "//////////////////////////////////////////////////////////////trash related methods", "target": 0}
{"idx": 36838, "func": "//{{{ objectsEqual() method", "target": 0}
{"idx": 36839, "func": "//add the gen files to the collection", "target": 0}
{"idx": 36840, "func": "//{{{ getBuild() method", "target": 0}
{"idx": 36841, "func": "unsorted, natural, comparator.class.name", "target": 0}
{"idx": 36842, "func": "//url.replace('+',' ');", "target": 0}
{"idx": 36843, "func": "build mapping from classes to list of features that use them", "target": 0}
{"idx": 36844, "func": "use the other object's value", "target": 0}
{"idx": 36845, "func": "We assume, that everything jikes writes goes to standard output, not to standard error. The option -Xstdout that is given to Jikes in Javac.doJikesCompile() should guarantee this. At least I hope so. :)", "target": 0}
{"idx": 36846, "func": "let's add the key printing logic", "target": 0}
{"idx": 36847, "func": "@see org.argouml.uml.reveng.ImportCommon#isDescendSelected()", "target": 0}
{"idx": 36848, "func": "Constants...", "target": 0}
{"idx": 36849, "func": "base value", "target": 0}
{"idx": 36850, "func": "mouse hovers over activity", "target": 0}
{"idx": 36851, "func": "Labels - don't make these static, else language change will not work", "target": 0}
{"idx": 36852, "func": "if message is spam", "target": 0}
{"idx": 36853, "func": "eg, foo<C+b>, will insert foobar,", "target": 0}
{"idx": 36854, "func": "Recreate the command. //", "target": 0}
{"idx": 36855, "func": "Check old values don't hang around: fewer matches", "target": 0}
{"idx": 36856, "func": "older jEdit versions used a DOCTYPE of CATALOG, which is incorrect since the DOCTYPE must be the name of the root element, which is MODES.", "target": 0}
{"idx": 36857, "func": "//{{{ SizeLabel class", "target": 0}
{"idx": 36858, "func": "boot the Module and Class classes", "target": 0}
{"idx": 36859, "func": "Determine what sort of assigner should be used for the provided 'iter' (e.g. block). Assigner provides just the right logic for assigning values to local parameters of the block. This method also has a second optimization which is to set 'noargblock' in the case that the block is a block which accepts no arguments. The primary reason for this second optimization is that in the case of a yield with a RubyArray we will bypass some logic processing the RubyArray into a proper form (only to then not do anythign with it). A secondary benefit is that a simple boolean seems to optimize by hotspot much faster than the zero arg assigner.", "target": 0}
{"idx": 36860, "func": "//handle new style full paths to an antlib, in which //all but the forward slashes are allowed.", "target": 0}
{"idx": 36861, "func": "// create Command reference", "target": 0}
{"idx": 36862, "func": "Some kind of 8-bit encoding with \"<?XML\" 0x3c 0x3f 0x78 0x6d: UTF-8 or other 8-bit markup (read ENCODING)", "target": 0}
{"idx": 36863, "func": "for debugging, make jEdit think its using a different version of Java than it really is.", "target": 0}
{"idx": 36864, "func": "i18n[javaBeanDataSet.name=Property Name]", "target": 0}
{"idx": 36865, "func": "add the toolbar", "target": 0}
{"idx": 36866, "func": "Clear the ghost image:", "target": 0}
{"idx": 36867, "func": "CopyOnWriteArrayList has snapshot iterators that don't support iterator.remove()", "target": 0}
{"idx": 36868, "func": "(non-Javadoc) @see org.columba.chat.jabber.IBuddyStatus#setChatMediator(org.columba.chat.api.IChatMediator)", "target": 0}
{"idx": 36869, "func": "PR 20969", "target": 0}
{"idx": 36870, "func": "@see ISQLEntryPanel#removeCaretListener(CaretListener)", "target": 0}
{"idx": 36871, "func": "//{{{ getAfterCaretTextArea() method", "target": 0}
{"idx": 36872, "func": "set subject ; mod:20040629 SWITT", "target": 0}
{"idx": 36873, "func": "TODO: Work in progress here to allow multiple details panes with different contents - Bob Tarling", "target": 1}
{"idx": 36874, "func": "If this is an entity and the property is the identifier property, then use getIdentifierType(). Note that the propertyName.equals( propertyPath ) checks whether we have a component key reference, where the component class property name is the same as the entity id property name; if the two are not equal, this is the case and we'd need to \"fall through\" to using the property mapping.", "target": 0}
{"idx": 36875, "func": "//{{{ getColorProperty() method", "target": 0}
{"idx": 36876, "func": "(non-Javadoc) @see org.columba.mail.imap.IImapServer#createMailbox(java.lang.String, org.columba.mail.folder.imap.IMAPFolder)", "target": 0}
{"idx": 36877, "func": "(EQ a NULL) => (IS_NULL a)", "target": 0}
{"idx": 36878, "func": "This should never happen, but...", "target": 0}
{"idx": 36879, "func": "If we are in the process of releasing, no sense checking for aggressive-release possibility.", "target": 0}
{"idx": 36880, "func": "Try imported class", "target": 0}
{"idx": 36881, "func": "//{{{ replace() method", "target": 0}
{"idx": 36882, "func": "//{{{ getPriorNonEmptyLine() method", "target": 0}
{"idx": 36883, "func": "rootTableName = persistentClass.getRootTable().getQualifiedName( factory.getDialect(), factory.getDefaultCatalog(), factory.getDefaultSchema() );", "target": 0}
{"idx": 36884, "func": "FIX replace type() == ... with isInstanceOf(...)", "target": 1}
{"idx": 36885, "func": "should not be able to write to it ...", "target": 0}
{"idx": 36886, "func": "FIXME This function needs documentation @param out OutputStream to print the data to", "target": 1}
{"idx": 36887, "func": "Read all size number of entryData. //", "target": 0}
{"idx": 36888, "func": "Now, on with the hunt...", "target": 0}
{"idx": 36889, "func": "i18n[userscript.dlgTabecp=Extra class path]", "target": 0}
{"idx": 36890, "func": "//TODO: maybe call it getRowSelection() ?", "target": 1}
{"idx": 36891, "func": "Allow other thread to start", "target": 0}
{"idx": 36892, "func": "//$NON-NLS-1$ select last tab", "target": 0}
{"idx": 36893, "func": "//if flag then //create \"1e#\"-type label", "target": 0}
{"idx": 36894, "func": "handle security-sensitive case", "target": 0}
{"idx": 36895, "func": "NSUML does this (?) Model.getFacade().setGuard(trans, g);", "target": 0}
{"idx": 36896, "func": "check to see if we have read the header record yet", "target": 0}
{"idx": 36897, "func": "//setCellRenderer(new ListRenderer());", "target": 0}
{"idx": 36898, "func": "Static constants", "target": 0}
{"idx": 36899, "func": "Use the first diagram.", "target": 0}
{"idx": 36900, "func": "insert space btw. double newlines", "target": 0}
{"idx": 36901, "func": "keep query and select relative or absolute path based on length", "target": 0}
{"idx": 36902, "func": "@see org.argouml.ui.AbstractArgoJPanel#spawn()", "target": 0}
{"idx": 36903, "func": "JoinProcessor needs to know if the where clause fragment came from a dynamic filter or not so it can put the where clause fragment in the right place in the SQL AST. 'hasFilterCondition' keeps track of that fact.", "target": 0}
{"idx": 36904, "func": "otherwise there's a vgap too many Work out the anchor paint", "target": 0}
{"idx": 36905, "func": "i18n[AbstractRefactoringDialog.executeButtonLabel=Execute]", "target": 0}
{"idx": 36906, "func": "Create the workers", "target": 0}
{"idx": 36907, "func": "Check to see if all targets are classifiers before adding an option to create an association between them all", "target": 0}
{"idx": 36908, "func": "link.setBackground(titleBackground);", "target": 0}
{"idx": 36909, "func": "Also handles write(byte[])", "target": 0}
{"idx": 36910, "func": "dumpNodeContents(node);", "target": 0}
{"idx": 36911, "func": "i18n[OracleAliasPrefsPanel.header=Configure Oracle Schema loading properties]", "target": 0}
{"idx": 36912, "func": "i18n[codeCompletion.spWithoutParams=stored procedure without parameter info: {call mySP()}]", "target": 0}
{"idx": 36913, "func": "The list of current thread groups; may be setUp, main, or tearDown.", "target": 0}
{"idx": 36914, "func": "//DatabaseObjectType.TABLE_TYPE_DBO=Table Type", "target": 0}
{"idx": 36915, "func": "Assume result is OK because we add the sample count in later", "target": 0}
{"idx": 36916, "func": "Actually performs the merging of f into the output. f should be a zip or jar file.", "target": 0}
{"idx": 36917, "func": "blinks?", "target": 0}
{"idx": 36918, "func": "i18n[SQLResultExecuterPanel.rowsUpdated={0} Row(s) Inserted]", "target": 0}
{"idx": 36919, "func": "Create a button to trigger the file chooser:", "target": 0}
{"idx": 36920, "func": "no property no property", "target": 0}
{"idx": 36921, "func": "A cache of URIs, keyed by the strings from which they were created. The fragment of any URI is removed before caching it here, to minimize the size of the cache in the usual case where most URIs only differ by the fragment.", "target": 0}
{"idx": 36922, "func": "following could be done in a loop, but unrolled it for performance:", "target": 0}
{"idx": 36923, "func": "//{{{ RemoveTreeNodeAction class", "target": 0}
{"idx": 36924, "func": "This must have no fewer segments than the prefix. Since the prefix is not the root absolute path, its last segment is empty; all others must match.", "target": 0}
{"idx": 36925, "func": "Mongo is Thread Safe", "target": 0}
{"idx": 36926, "func": "i18n[OracleXmlTypeDataTypeComponent.cellErrorMsg=<Error: see log file>]", "target": 0}
{"idx": 36927, "func": "The reqest has no body, or it has a transfer encoding we do not support. In either case, we read any data available", "target": 0}
{"idx": 36928, "func": "//{{{ invalidateChunksFromPhys() method", "target": 0}
{"idx": 36929, "func": "get the directory", "target": 0}
{"idx": 36930, "func": "MRI behavior: use first byte of string value if len > 0", "target": 0}
{"idx": 36931, "func": "Simplest constructor, uses default encryption algorithm and compression level.", "target": 0}
{"idx": 36932, "func": "add JPanel with useful HTML related actions.", "target": 0}
{"idx": 36933, "func": "property name is a sub-path of a component...", "target": 0}
{"idx": 36934, "func": "These fields deal with includes and excludes", "target": 0}
{"idx": 36935, "func": "TODO: this needs to be improved even for nongui calling, the config panel needs to be initialized:", "target": 1}
{"idx": 36936, "func": "Use DiagramInterface to add classes to diagram", "target": 0}
{"idx": 36937, "func": "Span across two columns //c.ipadx = 40;", "target": 0}
{"idx": 36938, "func": "//{{{ setStructureHighlightEnabled() method", "target": 0}
{"idx": 36939, "func": "TODO: Delete ME", "target": 1}
{"idx": 36940, "func": "//TODO: split into one critic for inherited problems and //one for problems directly in this class.", "target": 1}
{"idx": 36941, "func": "control flow analysis algorithm: while the block stack is not empty, pop a block from this stack, update the max stack size, compute the true (non relative) begin stack size of the successors of this block, and push these successors onto the stack (unless they have already been pushed onto the stack). Note: by hypothesis, the {@link Label#beginStackSize} of the blocks in the block stack are the true (non relative) beginning stack sizes of these blocks.", "target": 0}
{"idx": 36942, "func": "The Project interface encapsulates all information about a designer's project. It contains the list of diagrams and UML models, various project properties such as the author's name, and defaults for various settings. <p> TODO: This interface was mechanically refactored from the implementation class {@link ProjectImpl}. It needs to be reviewed and cleaned up, eliminating methods which should be part of the public API and splitting the interface into smaller function specific (e.g. TrashCan) interfaces. @author Tom Morris <tfmorris@gmail.com>, Thomas Neustupny @since 0.25.4 when it replaced the concrete class of the same name", "target": 1}
{"idx": 36943, "func": "cached values used for interface DomainInfo:", "target": 0}
{"idx": 36944, "func": "Read the first four bytes for autodetection.", "target": 0}
{"idx": 36945, "func": "//{{{ check for end of delegate", "target": 0}
{"idx": 36946, "func": "we have specialized case of a detached entity from the perspective of the merge operation. Specifically, we have an incoming entity instance which has a corresponding entry in the current persistence context, but registered under a different entity instance", "target": 0}
{"idx": 36947, "func": "if account selection changes, reload signature file", "target": 0}
{"idx": 36948, "func": "//OK //OK //OK //OK files is created automatically, and applies per instance //OK", "target": 0}
{"idx": 36949, "func": "10 per second Should delay for 1 second 10 per milli-second Should delay for 1 milli-second", "target": 0}
{"idx": 36950, "func": "switch for restoring last session of Columba. if true, restores all windows.", "target": 0}
{"idx": 36951, "func": "Check for stingy match for each possibility.", "target": 0}
{"idx": 36952, "func": "Yes, scroll up one row", "target": 0}
{"idx": 36953, "func": "//it does not refer to an alias of a projection, //look for a property", "target": 0}
{"idx": 36954, "func": "Just add the tab", "target": 0}
{"idx": 36955, "func": "Install the trap to \"eat\" SecurityExceptions. NOTE: This is temporary and will go away in a \"future\" release http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4714232", "target": 1}
{"idx": 36956, "func": "The <<include>> label. It's not a true stereotype, so don't use the stereotype support", "target": 0}
{"idx": 36957, "func": "..where 100 -> 10 shifts the scale", "target": 0}
{"idx": 36958, "func": "RFC822 - Header", "target": 0}
{"idx": 36959, "func": "adds remove as a sort-of alias for delete...", "target": 0}
{"idx": 36960, "func": "let's use groups to construct the different text sections at the association", "target": 0}
{"idx": 36961, "func": "do the same for the Cc headerfield and OR the results", "target": 0}
{"idx": 36962, "func": "(non-Javadoc) @see org.columba.calendar.ui.calendar.api.ICalendarView#viewNext()", "target": 0}
{"idx": 36963, "func": "acceptsNull acceptsExpressions acceptsOther default", "target": 0}
{"idx": 36964, "func": "only carry on if the method has no parameters", "target": 0}
{"idx": 36965, "func": "see if this works it did not, let's try some other formats", "target": 0}
{"idx": 36966, "func": "line 1420", "target": 0}
{"idx": 36967, "func": "end class DelayedChangeNotify", "target": 0}
{"idx": 36968, "func": "iinc 3, 1", "target": 0}
{"idx": 36969, "func": "Dummy methods needed by Function interface", "target": 0}
{"idx": 36970, "func": "Otherwise, the path needs only the remaining segments.", "target": 0}
{"idx": 36971, "func": "//AdapterNode filterListNode = getFilterListNode(); AdapterNode node = MailInterface.config.getFolderConfig().addEmptyFilterNode( getFolder().getNode() ); Filter filter = new Filter( node ); add( filter ); return filter;", "target": 0}
{"idx": 36972, "func": "@GuardedBy(\"sampleStore\")", "target": 0}
{"idx": 36973, "func": "i18n[SQLHistoryDlg.filterCboStartsWith=starts with]", "target": 0}
{"idx": 36974, "func": "From MySQL 5.0 reference manual ALTER [IGNORE] TABLE tbl_name alter_specification [, alter_specification] ... alter_specification: | ADD [CONSTRAINT [symbol]] UNIQUE [INDEX|KEY] [index_name] [index_type] (index_col_name,...)", "target": 0}
{"idx": 36975, "func": "swallow if there was an error before so that original error will be passed up", "target": 0}
{"idx": 36976, "func": "//if doesnt exist prompt to create it.", "target": 0}
{"idx": 36977, "func": "@see org.argouml.ui.explorer.TreeModelUMLEventListener#modelElementAdded(java.lang.Object)", "target": 0}
{"idx": 36978, "func": "if processor wasn't specified, see if TraX is available. If not, default it to xalan, depending on which is in the classpath", "target": 0}
{"idx": 36979, "func": "FIXME: I doubt any of the constants referenced in this method are ever redefined -- should compare to the known values, rather than do an expensive constant lookup.", "target": 1}
{"idx": 36980, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsExpressionsInOrderBy()", "target": 0}
{"idx": 36981, "func": "WHERE", "target": 0}
{"idx": 36982, "func": "short", "target": 0}
{"idx": 36983, "func": "Fall through", "target": 0}
{"idx": 36984, "func": "FIXME: @author fdietz: No locking of folders currently implemented! @author frd", "target": 1}
{"idx": 36985, "func": "update message starts of following messages", "target": 0}
{"idx": 36986, "func": "get the data source - return if null;", "target": 0}
{"idx": 36987, "func": "and a little longer", "target": 0}
{"idx": 36988, "func": "start in new state", "target": 0}
{"idx": 36989, "func": "Necessary since GEF contains some errors regarding the hit subject. @see org.tigris.gef.presentation.Fig#hit(Rectangle)", "target": 0}
{"idx": 36990, "func": "we expand those that are non-empty, and remove those that are empty", "target": 0}
{"idx": 36991, "func": "line 1660", "target": 0}
{"idx": 36992, "func": "For each mapping being removed... //", "target": 0}
{"idx": 36993, "func": "save charset", "target": 0}
{"idx": 36994, "func": "Add supported account formats here", "target": 0}
{"idx": 36995, "func": "Parse pattern into tokens. Does anyone know if it's more efficient to use char[] than a String.charAt()? I'm assuming so.", "target": 1}
{"idx": 36996, "func": "//TODO: move into collection type, so we can use polymorphism!", "target": 1}
{"idx": 36997, "func": "(non-Javadoc) @see org.columba.mail.folder.mailboximport.DefaultMailboxImporter#getDescription()", "target": 0}
{"idx": 36998, "func": "Not implemented: public static final String SAVE = \"save_as\"; Not implemented: public static final String SAVE_ALL = \"save_all\"; Not implemented: public static final String SAVE_TO_PREVIOUS = \"save\";", "target": 0}
{"idx": 36999, "func": "try negative key index", "target": 0}
{"idx": 37000, "func": "loop over intervals between nodes", "target": 0}
{"idx": 37001, "func": "case '\\'': sb.append(\"&apos;\"); i++; break;", "target": 0}
{"idx": 37002, "func": "treats last line specially Last line Allow for missing terminator", "target": 0}
{"idx": 37003, "func": "this ensures that getFileParent(\"protocol:\"), for example, is \"protocol:\" and not \"\".", "target": 0}
{"idx": 37004, "func": "//i18n[ColumnDetailsDialog.editButtonLabel=Edit SQL]", "target": 0}
{"idx": 37005, "func": "just in case, add a bit of extra precision", "target": 0}
{"idx": 37006, "func": "build second tab", "target": 0}
{"idx": 37007, "func": "TODO: this returns a Collection, not a single Object Is this what the callers expect?", "target": 1}
{"idx": 37008, "func": "Length check is a hack. We should not be reeiving \"\" as a filename ever.", "target": 0}
{"idx": 37009, "func": "end class CrNWayAgg.java", "target": 0}
{"idx": 37010, "func": "Convert the old test plan entry (which is the language dependent string) to the resource name", "target": 0}
{"idx": 37011, "func": "Start", "target": 0}
{"idx": 37012, "func": "by default, do not show extension points:", "target": 0}
{"idx": 37013, "func": "for each thread group, generate threads hand each thread the sampler controller and the listeners, and the timer", "target": 0}
{"idx": 37014, "func": "//Is this file still available to be moved?", "target": 0}
{"idx": 37015, "func": "Can't have two matching cookies", "target": 0}
{"idx": 37016, "func": "TODO Need to have a generic hibernate dialect extend this to provide the types.", "target": 1}
{"idx": 37017, "func": "Don't even consider it unless this is hierarchical and has scheme, authority, device and path absoluteness equal to those of the prefix.", "target": 0}
{"idx": 37018, "func": "the word", "target": 0}
{"idx": 37019, "func": "button.setOpaque(false);", "target": 0}
{"idx": 37020, "func": "dont forget the rest", "target": 0}
{"idx": 37021, "func": "TODO implement iterate() TODO implement sortedBy() TODO implement subSequence()", "target": 1}
{"idx": 37022, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsOpenStatementsAcrossCommit()", "target": 0}
{"idx": 37023, "func": "Path to release.xml", "target": 0}
{"idx": 37024, "func": "TODO: Make this more intelligible value", "target": 1}
{"idx": 37025, "func": "make the change (if it's not a duplicate time period)...", "target": 0}
{"idx": 37026, "func": "//{{{ finishResizing() method", "target": 0}
{"idx": 37027, "func": "Doing instanceof? Next node is a type.", "target": 0}
{"idx": 37028, "func": "Loop through each stub/skeleton class that must be generated, and determine (if all exist) which file has the most recent timestamp", "target": 0}
{"idx": 37029, "func": "Many inherited methods must be overridden to handle this case. //", "target": 0}
{"idx": 37030, "func": "Process __CSVRead(filename,ALIAS) //$NON-NLS-1$", "target": 0}
{"idx": 37031, "func": "Don't break the world just because this failed:", "target": 0}
{"idx": 37032, "func": "line 1073", "target": 0}
{"idx": 37033, "func": "At this point we are probably in failure mode, but try to use the bare URI as a last gasp", "target": 0}
{"idx": 37034, "func": "Let's only generate methods for those the user may actually intend to override. That includes any defined in the current class, and any ancestors that are also JavaProxyClasses (but none from any other ancestor classes). Methods defined in mixins will be considered intentionally overridden, except those from Kernel, Java, and JavaProxyMethods, as well as Enumerable. TODO: may want to exclude other common mixins?", "target": 1}
{"idx": 37035, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.util.IMessageHandler#showWarningMessage(java.lang.String)", "target": 0}
{"idx": 37036, "func": "skip this check for composite-ids relating to dom4j entity-mode; alternatively, we could add a check to make sure the incoming id value is an instance of Element...", "target": 0}
{"idx": 37037, "func": "tick label paint", "target": 0}
{"idx": 37038, "func": "TODO: This is almost RubyModule#instance_methods on the metaClass. Perhaps refactor.", "target": 1}
{"idx": 37039, "func": "Also set up HttpClient defaults", "target": 0}
{"idx": 37040, "func": "Tests two objects for equality, tolerating nulls; null is considered to be a valid value that is only equal to itself.", "target": 0}
{"idx": 37041, "func": "build the command line from what we got the format is ss Label VSS items [-C] [-H] [-I-] [-Llabel] [-N] [-O] [-V] [-Y] [-?] as specified in the SS.EXE help", "target": 0}
{"idx": 37042, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.CopyPreference#deleteTableData(java.lang.String)", "target": 0}
{"idx": 37043, "func": "Server Settings", "target": 0}
{"idx": 37044, "func": "//{{{ RotatedTextIcon class", "target": 0}
{"idx": 37045, "func": "---- workZipPostalCodeLabel ----", "target": 0}
{"idx": 37046, "func": "Class to manage Project related actions which need to be (or historically have been) managed as singletons. TODO: It's unclear to me whether all of these actually have to be managed as singletons, but for now I've just moved them from ProjectBrowser as is. - tfm @author Tom Morris", "target": 1}
{"idx": 37047, "func": "Ask GEF to print a band of the diagram (translated & clipped)", "target": 0}
{"idx": 37048, "func": "---- privateAddressLabel ----", "target": 0}
{"idx": 37049, "func": "//uid = o;", "target": 0}
{"idx": 37050, "func": "Profile", "target": 0}
{"idx": 37051, "func": "All tabs are added at the end, except a TabToDoTarget:", "target": 0}
{"idx": 37052, "func": "register for text cursor/caret and formatting changes to select/deselect action", "target": 0}
{"idx": 37053, "func": "//{{{ updateFileView() method", "target": 0}
{"idx": 37054, "func": "Number of lines read. Every 100 lines, we update the progress bar", "target": 0}
{"idx": 37055, "func": "novalidation", "target": 0}
{"idx": 37056, "func": "If eCore, set the ENamedElement name //", "target": 0}
{"idx": 37057, "func": "GenericController controller = new GenericController(); GenericController sub_1 = new GenericController(); sub_1.addTestElement(new IfController(\"10<100\")); sub_1.addTestElement(new IfController(\"true==false\")); controller.addTestElement(sub_1); controller.addTestElement(new IfController(\"false==false\")); IfController sub_2 = new IfController(); sub_2.setCondition( \"10<10000\"); GenericController sub_3 = new GenericController(); sub_2.addTestElement(new IfController( \" \\\"a\\\".equals(\\\"a\\\")\" ) ); sub_3.addTestElement(new IfController(\"2>100\")); sub_3.addTestElement(new IfController(\"false==true\")); sub_2.addTestElement(sub_3); sub_2.addTestElement(new IfController(\"2==3\")); controller.addTestElement(sub_2);", "target": 0}
{"idx": 37058, "func": "I think this can happen", "target": 0}
{"idx": 37059, "func": "setup dialog title, active filter and file name", "target": 0}
{"idx": 37060, "func": "Test to see that table(100) matches table(0). It should since only the row count is different.", "target": 0}
{"idx": 37061, "func": "line 1814", "target": 0}
{"idx": 37062, "func": "4.5.2.30 Operation", "target": 0}
{"idx": 37063, "func": "//{{{ setCurrentLineHighlightEnabled() method", "target": 0}
{"idx": 37064, "func": "clear", "target": 0}
{"idx": 37065, "func": "Recognition code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 37066, "func": "Ensure that the proper type of Object is selected in the Object Tree before allowing the SQL Filter to be activated.", "target": 0}
{"idx": 37067, "func": "create the buttons for input done and cancel", "target": 0}
{"idx": 37068, "func": "IDENTIFIER", "target": 0}
{"idx": 37069, "func": "dist", "target": 0}
{"idx": 37070, "func": "Selects the values from the merge table", "target": 0}
{"idx": 37071, "func": "i18n[Session.driverCompliance3.0=The driver being used for alias ''{0}'' is not JDBC 3.0 compliant.\\nYou should consider getting a more recent version of this driver]", "target": 0}
{"idx": 37072, "func": "TODO: Gone in UML 2.x Return place holder for now", "target": 0}
{"idx": 37073, "func": "//{{{ Methods that really shouldn't be public...", "target": 1}
{"idx": 37074, "func": "Fill 4 of value (byte) 33 Fill 2 of value (byte) -87 Fill 8 of value (byte) -19", "target": 0}
{"idx": 37075, "func": "Synchronize the complete folder", "target": 0}
{"idx": 37076, "func": "Create a command to do parentMapping.getNested().remove(mapping). //subcommands.appendAndExecute(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), mapping));", "target": 0}
{"idx": 37077, "func": "NOTE: Although WFR #3 in section 2.11.3.5 UseCase of the UML 1.4 spec says \"A UseCase cannot contain any Classifiers,\" the OCL is actually self.contents->isEmpty which would seem to imply it can't contain any elements - tfm - 20060416", "target": 0}
{"idx": 37078, "func": "20031216, karlpeder Changed handling of dates. Previously columba.date header was used. Now we use the Date header instead", "target": 0}
{"idx": 37079, "func": "The only way a region is set to null is if we're deleting the vertex in which case we do nothing special so that the removal of the state triggers a delete event.", "target": 0}
{"idx": 37080, "func": "If any of the values are null, ignore the element.", "target": 0}
{"idx": 37081, "func": "not overridden, let's go", "target": 0}
{"idx": 37082, "func": "Maximum size that we will display", "target": 0}
{"idx": 37083, "func": "---- homepageTextField ----", "target": 0}
{"idx": 37084, "func": "I hate this so much even before I start writing it. Re-initialising a global in a place where no-one will see it just feels wrong. Oh well, here goes.", "target": 1}
{"idx": 37085, "func": "//{{{ getCurrent() method", "target": 0}
{"idx": 37086, "func": "TODO i18n \"attachments\" label", "target": 0}
{"idx": 37087, "func": "TODO: anything threads attached to original fd are notified of the close... see rb_thread_fd_close", "target": 1}
{"idx": 37088, "func": "//addInitializedCollection(collection, persister, id);", "target": 0}
{"idx": 37089, "func": "Parse the attribute type. [54] AttType ::= StringType | TokenizedType | EnumeratedType [55] StringType ::= 'CDATA' [56] TokenizedType ::= 'ID' | 'IDREF' | 'IDREFS' | 'ENTITY' | 'ENTITIES' | 'NMTOKEN' | 'NMTOKENS' [57] EnumeratedType ::= NotationType | Enumeration TODO: validate the type!!", "target": 1}
{"idx": 37090, "func": "TODO: synchronized is required here as there can be some concurrent modification problems when drawing a call message and having that automatically draw the reply. Maybe fixing the TODO below will resolve this and the synch can go.", "target": 1}
{"idx": 37091, "func": "TODO: It would be better here to continue the loop and try to build the rest of the compartment. Hence try/catch should be internal to the loop.", "target": 1}
{"idx": 37092, "func": "if that succeeds, the others should as well", "target": 0}
{"idx": 37093, "func": "ADiagramElementProperty delegate methods", "target": 0}
{"idx": 37094, "func": "i18n[ViewLogsSheet.error.processinglogfile=Error occured processing log file]", "target": 0}
{"idx": 37095, "func": "depFile exists and is newer than the class file need to get dependency list from the map.", "target": 0}
{"idx": 37096, "func": "//{{{ getMarkerAtLine() method", "target": 0}
{"idx": 37097, "func": "----- constructors -----", "target": 0}
{"idx": 37098, "func": "or redrawing the chart every time...", "target": 0}
{"idx": 37099, "func": "no CA key - probably the wrong store type. cannot continue", "target": 0}
{"idx": 37100, "func": "default is to do nothing. Derived classes must override this to accomplish anything.", "target": 0}
{"idx": 37101, "func": "(non-Javadoc) @see org.columba.addressbook.gui.table.model.TableModelDecorator#getRowCount()", "target": 0}
{"idx": 37102, "func": "defer work until fetched/visible", "target": 0}
{"idx": 37103, "func": "Save the project. @param file the File to save to @param pmw the ProgressMonitor to be updated; @return true if successful TODO: Separate this into a Swing specific class - tfm", "target": 1}
{"idx": 37104, "func": "Buttons", "target": 0}
{"idx": 37105, "func": "We're doing normal framed compilation or the method needs a frame", "target": 0}
{"idx": 37106, "func": "TODO: cannot use generateSuffixes() - it handles the initial suffix differently.", "target": 1}
{"idx": 37107, "func": "TODO add tests to check for: - name clash - long option abbreviations (match shortest unique abbreviation)", "target": 1}
{"idx": 37108, "func": "//doable if needed", "target": 0}
{"idx": 37109, "func": "register interest on account changes", "target": 0}
{"idx": 37110, "func": "top++;", "target": 0}
{"idx": 37111, "func": "file given, use it and force it into binding", "target": 0}
{"idx": 37112, "func": "If we don't have it, find the trigger. If this fails it will keep its default value of null", "target": 0}
{"idx": 37113, "func": "clone includeStack without cloning contents //", "target": 0}
{"idx": 37114, "func": "line 1938", "target": 0}
{"idx": 37115, "func": "// putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_L, // Toolkit.getDefaultToolkit().getMenuShortcutKeyMask()));", "target": 0}
{"idx": 37116, "func": "Byte", "target": 0}
{"idx": 37117, "func": "disable all", "target": 0}
{"idx": 37118, "func": "even shift.. ..floors to 62 or 63 bit BigInteger", "target": 0}
{"idx": 37119, "func": "Display", "target": 0}
{"idx": 37120, "func": "try each one that matched", "target": 0}
{"idx": 37121, "func": "i18n[LogPanel.viewLastLog=Press to view last log entry]", "target": 0}
{"idx": 37122, "func": "Strings", "target": 0}
{"idx": 37123, "func": "-- restore", "target": 0}
{"idx": 37124, "func": "Figure end-char. '\\0' is special to indicate begin=end and that no nesting?", "target": 0}
{"idx": 37125, "func": "Note : success = false, because we don't know the outcome of the transaction", "target": 0}
{"idx": 37126, "func": "Treating indexes as tables interferes with the operation of the PostgreSQL plugin", "target": 0}
{"idx": 37127, "func": "locking mechanism", "target": 0}
{"idx": 37128, "func": "//if it is a property of an embedded component, invoke on the \"identifier\"", "target": 0}
{"idx": 37129, "func": "progress value as of start of current task", "target": 0}
{"idx": 37130, "func": "Access methods for modules that need to query about the status of other modules.", "target": 0}
{"idx": 37131, "func": "if we haven't already decided on a do-nothing call", "target": 0}
{"idx": 37132, "func": "Used by old Save service", "target": 0}
{"idx": 37133, "func": "by default we report no support for NOWAIT lock semantics", "target": 0}
{"idx": 37134, "func": "Make it executable", "target": 0}
{"idx": 37135, "func": "apend everything up until the next encountered open brace", "target": 0}
{"idx": 37136, "func": "BreakJump, ThreadContext", "target": 0}
{"idx": 37137, "func": "?l | boolean | True if file1 exists and is a symbolic link", "target": 0}
{"idx": 37138, "func": "private Property prpTodo; private Property prpProperties; private Property prpDocumentation; private Property prpStyle; private Property prpSource; private Property prpConstraints; private Property prpTaggedValues;", "target": 0}
{"idx": 37139, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#getTableTypes()", "target": 0}
{"idx": 37140, "func": "One is the easiest case", "target": 0}
{"idx": 37141, "func": "see https://developer.mozilla.org/en/HTTP_Caching_FAQ see http://www.ietf.org/rfc/rfc2616.txt#13.2.4", "target": 0}
{"idx": 37142, "func": "Initialize the GUI:", "target": 0}
{"idx": 37143, "func": "APOP not supported", "target": 0}
{"idx": 37144, "func": "draw the height", "target": 0}
{"idx": 37145, "func": "List of active dynamic scopes. Each of these may have captured other dynamic scopes to implement closures.", "target": 0}
{"idx": 37146, "func": "Sort and eliminate duplicates caused by having both a regular package and a demanded package for the same nsURI. //", "target": 0}
{"idx": 37147, "func": "store whether all headers should be incl.", "target": 0}
{"idx": 37148, "func": "TODO (@author fdietz): move this to AbstractMessageFolder constructor create filterlist datastructure", "target": 1}
{"idx": 37149, "func": "//{{{ getPort method", "target": 0}
{"idx": 37150, "func": "Transition", "target": 0}
{"idx": 37151, "func": "TODO: Rubicon TestKernel dies without this line. A cursory glance implies we falsely set $! to nil and this sets it back to something valid. This should get fixed at the same time we address bug #1296484.", "target": 1}
{"idx": 37152, "func": "make new node visible", "target": 0}
{"idx": 37153, "func": "set the type to create", "target": 0}
{"idx": 37154, "func": "without this the completion panel's size will be weird", "target": 0}
{"idx": 37155, "func": "do not crash when control model is not set", "target": 0}
{"idx": 37156, "func": "i18n[ObjectTreeTab.hint=Show database objects]", "target": 0}
{"idx": 37157, "func": "//kinda ugly, but needed for collections with a \".\" node mapping", "target": 1}
{"idx": 37158, "func": "no else here to make sure AssociationClass goes ok", "target": 0}
{"idx": 37159, "func": "list.add(f);", "target": 0}
{"idx": 37160, "func": "We won't need to process this again later.", "target": 0}
{"idx": 37161, "func": "Note: includes part of fix for JRUBY-1339", "target": 0}
{"idx": 37162, "func": "Copy returned parameters because it will be a live collection for MDR", "target": 0}
{"idx": 37163, "func": "we have not already created a DataType object for this column so do that now and save it", "target": 0}
{"idx": 37164, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getPanelComponent() Return the panel that will contain the prefernces ui. @return Panel containing preferences.", "target": 0}
{"idx": 37165, "func": "build the command line from what we got. the format is cleartool mkattr [options...] [viewpath ...] as specified in the CLEARTOOL help", "target": 0}
{"idx": 37166, "func": "Set the ContentHandler... xr.setContentHandler( this );", "target": 0}
{"idx": 37167, "func": "//{{{ isLeaf() method", "target": 0}
{"idx": 37168, "func": "// final Map map = getAllEditWhereColsSheets(tree); // return (EditWhereColsSheet)map.get(objectInfo.getQualifiedName());", "target": 0}
{"idx": 37169, "func": "//{{{ Max line length", "target": 0}
{"idx": 37170, "func": "//TestCase/getGenFeature.annotations.insert.javajetinc", "target": 0}
{"idx": 37171, "func": "public boolean isCellEditable(int rowIndex, int columnIndex) { return (columnIndex == 0); }", "target": 0}
{"idx": 37172, "func": "Used for the RuntimeException to short-circuit the traversal $NON-NLS-1$", "target": 0}
{"idx": 37173, "func": "Paste action object tree types", "target": 0}
{"idx": 37174, "func": "push context", "target": 0}
{"idx": 37175, "func": "i18n[codecompletion.prefs.table.col.config=Configuration]", "target": 0}
{"idx": 37176, "func": "If the \"None\" place-holder is in the list in the first position, remove it. It is not possible to select the \"None\" place-holder upon startup, because it is already selected in the list if it is present.", "target": 0}
{"idx": 37177, "func": "if the user cancelled the operation, we don't have to save anything", "target": 0}
{"idx": 37178, "func": "setColumns Error conditions", "target": 0}
{"idx": 37179, "func": "//{{{ setFoldLineStyle() method", "target": 0}
{"idx": 37180, "func": "To maintain compatibility with the command-line version, we will only add files to be merged.", "target": 0}
{"idx": 37181, "func": "?? Is there any way to check for invalid input? Valid input includes ?? at least any printable character, but could it also include unprintable ?? characters?", "target": 1}
{"idx": 37182, "func": "For backwards compatibility", "target": 0}
{"idx": 37183, "func": "@see org.tigris.gef.presentation.FigNode#isDragConnectable()", "target": 0}
{"idx": 37184, "func": "Switch the value back off, so that we will get notified again next time.", "target": 0}
{"idx": 37185, "func": "API uses raw types", "target": 0}
{"idx": 37186, "func": "This will actually execute the copy command in order to check if the add can execute. //", "target": 0}
{"idx": 37187, "func": "//{{{ DirectoryProvider constructor", "target": 0}
{"idx": 37188, "func": "We've been here before", "target": 0}
{"idx": 37189, "func": "We just add placeholder text for file content $NON-NLS-1$", "target": 0}
{"idx": 37190, "func": "Remove any additional values from previous sample", "target": 0}
{"idx": 37191, "func": "fall back to first account as default", "target": 0}
{"idx": 37192, "func": "no triggers, i guess.", "target": 0}
{"idx": 37193, "func": "note segmentShift differs from ConcurrentHashMap's calculation due to issues with System.identityHashCode (upper n bits always 0, at least under Java 1.6 / WinXP)", "target": 0}
{"idx": 37194, "func": "strings might be equal!", "target": 0}
{"idx": 37195, "func": "now handle specific plot types (and yes, I know this is some really ugly code that has to be manually updated any time a new plot type is added - I should have written something much cooler, but I didn't and neither did anyone else).", "target": 1}
{"idx": 37196, "func": "we also provide the resource bundle", "target": 0}
{"idx": 37197, "func": "Convert null to empty string and clear help message", "target": 0}
{"idx": 37198, "func": "//bcm.doneDefiningClass( fqClassName );", "target": 0}
{"idx": 37199, "func": "add the generated files to the ejbFiles", "target": 0}
{"idx": 37200, "func": "ran Ant tests with -ea and this would fail spuriously", "target": 0}
{"idx": 37201, "func": "Render the identifier select fragment using the table alias.", "target": 0}
{"idx": 37202, "func": "assume it's string", "target": 0}
{"idx": 37203, "func": "@author: fdietz This is a workaround. Generally, the contact dialog editor should ensure that all necessary fields are available", "target": 1}
{"idx": 37204, "func": "TODO probably not needed", "target": 1}
{"idx": 37205, "func": "Better error than NPE", "target": 0}
{"idx": 37206, "func": "create element if not available", "target": 0}
{"idx": 37207, "func": "This is a fairly specific hack for empty string, but it does the job", "target": 1}
{"idx": 37208, "func": "I wrote the testcases in one java file because I want also to test the combined behaviour (see end of the class).", "target": 0}
{"idx": 37209, "func": "add the comment nest the main query in an outer select add the rownnumber bit into the outer query select list", "target": 0}
{"idx": 37210, "func": "not a class (or variable per above)", "target": 0}
{"idx": 37211, "func": "to", "target": 0}
{"idx": 37212, "func": "If all the objects are used up by the above, then we can't do the command. //", "target": 0}
{"idx": 37213, "func": "If there are values to remove, append a command for them. //", "target": 0}
{"idx": 37214, "func": "Get the selected targets (UML ModelElements) from the TargetManager.", "target": 0}
{"idx": 37215, "func": "27224 = magic (a random port which is unlikely to be in use)", "target": 0}
{"idx": 37216, "func": "// private SQLDriverPropertyCollection _props = new SQLDriverPropertyCollection();", "target": 0}
{"idx": 37217, "func": "squirrel installed lib dir", "target": 0}
{"idx": 37218, "func": "now, let's print it", "target": 0}
{"idx": 37219, "func": "//if it is a formula index, use the element columns in the PK", "target": 0}
{"idx": 37220, "func": "Default changed in 2.3 and again in 2.4", "target": 0}
{"idx": 37221, "func": "Test sending parameters which are urlencoded beforehand The values must be URL encoded with UTF-8 encoding, because that is what the HTTPArgument assumes %C3%85 in UTF-8 is the same as %C5 in ISO-8859-1, which is the same as &Aring;", "target": 0}
{"idx": 37222, "func": "if localscoping switch follow strictJava, else recurse", "target": 0}
{"idx": 37223, "func": "computes auto-scaling and absolute plots", "target": 0}
{"idx": 37224, "func": "promise to implement three with block", "target": 0}
{"idx": 37225, "func": "//deliberately ignore return value!", "target": 0}
{"idx": 37226, "func": "give up if we couldn't create the command; otherwise, use a CommandActionDelegate to set the action's text, tool-tip, icon, etc. or just use the default icon", "target": 0}
{"idx": 37227, "func": "Check named HQL queries", "target": 0}
{"idx": 37228, "func": "no new methods added.", "target": 0}
{"idx": 37229, "func": "0B80..0BFF;", "target": 0}
{"idx": 37230, "func": "//log.debug( \"calling onLoad()\" );", "target": 0}
{"idx": 37231, "func": "//NOT YET USED private JMeter _parent;", "target": 0}
{"idx": 37232, "func": "charAt(index-n) may be unknown on a Reader/InputStream. FIXME Match after a newline if in multiline mode", "target": 1}
{"idx": 37233, "func": "//{{{ setMessage() method", "target": 0}
{"idx": 37234, "func": "//windows probing logic relies on the word 'windows' in //the OS", "target": 0}
{"idx": 37235, "func": "See if we have a converter for the job...", "target": 0}
{"idx": 37236, "func": "i18n[DBUtil.info.executeupdate=executeupdate: Running SQL:\\n '{0}']", "target": 0}
{"idx": 37237, "func": "listen on windowClosing and redirect it to Cancel button", "target": 0}
{"idx": 37238, "func": "strPathsOrJars - pathnames or jarfiles to search for classes classNames - required parent class(es) or annotations $NON-NLS-1$ innerClasses - should we include inner classes? contains - classname should contain this string Ignore the classes which are specific to the reporting tool $NON-NLS-1$ notContains - classname should not contain this string annotations - true if classnames are annotations", "target": 0}
{"idx": 37239, "func": "loop through all extensions this plugin uses -> search the corresponding extension handler -> register the extension at the extension handler", "target": 0}
{"idx": 37240, "func": "ensure correctly set on initial display", "target": 0}
{"idx": 37241, "func": "@see org.argouml.uml.diagram.ui.FigNodeModelElement#initNotationProviders(java.lang.Object)", "target": 0}
{"idx": 37242, "func": "TODO : Redo it (curBody should be as long as curLanguage+button)", "target": 1}
{"idx": 37243, "func": "//FB Won't compile with VAJ or NO_JIKES //FB Object adapter = adapterFactory.adapt(mapping);", "target": 1}
{"idx": 37244, "func": "parse the VMS logicals into required format (\"VAR=VAL[,VAL2]\")", "target": 0}
{"idx": 37245, "func": "i18n[I18n.developers=Developers]", "target": 0}
{"idx": 37246, "func": "only a marker interface", "target": 0}
{"idx": 37247, "func": "128K seems to be the minimum at which the stat+seek is faster than reallocation", "target": 0}
{"idx": 37248, "func": "//TODO: should fire its own event and ProjectBrowser //should register a listener - tfm", "target": 1}
{"idx": 37249, "func": "Handle imported inner class case", "target": 0}
{"idx": 37250, "func": "line 940", "target": 0}
{"idx": 37251, "func": "We need to filer out duplicates in the unlikely event that we have two features with the same class-qualified name. We'll only generate one property string in that case and let the user add the second one manually, if necessary. //", "target": 0}
{"idx": 37252, "func": "remember this DataType object so we can reuse it", "target": 0}
{"idx": 37253, "func": "single precision, native single precision, native", "target": 0}
{"idx": 37254, "func": "Generate Error Body", "target": 0}
{"idx": 37255, "func": "Check \"-\" is allowed in arg2", "target": 0}
{"idx": 37256, "func": "Thread method is potentially expensive", "target": 0}
{"idx": 37257, "func": "Ignore it if we've already set generic versions of these //", "target": 0}
{"idx": 37258, "func": "//{{{ createEditPane() method", "target": 0}
{"idx": 37259, "func": "rb_str_splice", "target": 0}
{"idx": 37260, "func": "i18n[RefactoringPreferencesTab.hint=Settings for the Refactoring plugin]", "target": 0}
{"idx": 37261, "func": "Get the cell renderer (which is a JLabel) for the path being dragged.", "target": 0}
{"idx": 37262, "func": "The following UML 1.4 elements have been removed from UML 2.x, so we don't bother testing them.", "target": 0}
{"idx": 37263, "func": "can't access the booleans in MyPrinter here (even if they were static) since the MyPrinter instance that was used in the test has likely been loaded via a different classloader than this class. Therefore we make the printer assert its state and only check for the tail invocation.", "target": 0}
{"idx": 37264, "func": "//i18n[DatabaseObjectInfoTab.title=Info]", "target": 0}
{"idx": 37265, "func": "increments the position to add the white spaces", "target": 0}
{"idx": 37266, "func": "classes mentioned in extends not available - so put it in queue", "target": 0}
{"idx": 37267, "func": "//{{{ tallCaretDelete() method", "target": 0}
{"idx": 37268, "func": "??? For now, use the same renderer as everyone else. ?? ?? IN FUTURE: change this to use a new instance of renderer ?? for this data type.", "target": 1}
{"idx": 37269, "func": "TODO display warning dialog as this can take some time", "target": 1}
{"idx": 37270, "func": "otherwise look up the boolean table", "target": 0}
{"idx": 37271, "func": "Generates Configure pop-up dialogue for Listeners from all methods in SampleSaveConfiguration with the signature \"boolean saveXXX()\". There must be a corresponding \"void setXXX(boolean)\" method, and a property save_XXX which is used to name the field on the dialogue.", "target": 0}
{"idx": 37272, "func": "the name of this instance of diagram", "target": 0}
{"idx": 37273, "func": "Reset Locale if necessary so other locales are properly handled", "target": 0}
{"idx": 37274, "func": "the series name should not change because \"C\" is already the key for the other series in the collection", "target": 0}
{"idx": 37275, "func": "Do we also have some non-input objects to copy? //", "target": 0}
{"idx": 37276, "func": "do the same for the XmlElement node", "target": 0}
{"idx": 37277, "func": "copy text before gap", "target": 0}
{"idx": 37278, "func": "to be safe...", "target": 0}
{"idx": 37279, "func": "//get absolute value of log10 value", "target": 0}
{"idx": 37280, "func": "i18n[sqlbookmark.enterName=Please enter a bookmark name with no blanks]", "target": 0}
{"idx": 37281, "func": "set a typed variable (directly in the block)", "target": 0}
{"idx": 37282, "func": "DataSource unpooled = DataSources.unpooledDataSource( jdbcUrl, props.getProperty(Environment.USER), props.getProperty(Environment.PASS) );", "target": 0}
{"idx": 37283, "func": "TODO: Should we require a GraphModel in the constructor since our implementations of setNamespace are going to try and set the namespace on the graphmodel as well?", "target": 1}
{"idx": 37284, "func": "line 521", "target": 0}
{"idx": 37285, "func": "ALTER TABLE tableName DROP CONSTRAINT constraintName", "target": 0}
{"idx": 37286, "func": "//replaceall action performed", "target": 0}
{"idx": 37287, "func": "return true for new files", "target": 0}
{"idx": 37288, "func": "We don't add a listener to a button twice because the FindDialogSupport class will call this method with the same button instances whenever the replace dialog is opened. If we add the listener again and again replace will be done as often as the dialog is opened. This is especially nasty if the text to replace is part of the replacement text.", "target": 0}
{"idx": 37289, "func": "Facade methods for IMessageHandler. We don't want to allow code to directly access an internal IMessageHandler, now that the IMessageHandler interface requires an ExceptionFormatter to be injected for methods that accept Exceptions.", "target": 1}
{"idx": 37290, "func": "test invalid byte arrays", "target": 0}
{"idx": 37291, "func": "//TestCase/unsetGenFeature.annotations.insert.javajetinc", "target": 0}
{"idx": 37292, "func": "Nothing yet. Later maybe something like:", "target": 0}
{"idx": 37293, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsIntegrityEnhancementFacility()", "target": 0}
{"idx": 37294, "func": "e.g. \"/org/apache/jmeter/resources/messages\"", "target": 0}
{"idx": 37295, "func": "Put the current pane in a scroll pane.", "target": 0}
{"idx": 37296, "func": "putValue(LARGE_ICON, ImageLoader.getIcon(IconKeys.FOLDER_OPEN));", "target": 0}
{"idx": 37297, "func": "Workaround for uncooperative Windows L&F", "target": 1}
{"idx": 37298, "func": "TODO : should remove this exposure and have all references to the session's batcher use the ConnectionManager.", "target": 1}
{"idx": 37299, "func": "if no exception raised, jump to end to leave result on stack for return", "target": 0}
{"idx": 37300, "func": "Builds a class with a given name. @param name the given name @return Class @see #buildClass() TODO: This needs an extra parameter to specify the model/extent where the new element should be created.", "target": 1}
{"idx": 37301, "func": "if there's no constructor, we must prevent construction", "target": 0}
{"idx": 37302, "func": "Showing large strings can be VERY costly, so we will avoid doing so if the response data is larger than 200K. TODO: instead, we could delay doing the result.setText call until the user chooses the \"Response data\" tab. Plus we could warn the user if this happens and revert the choice if he doesn't confirm he's ready to wait.", "target": 1}
{"idx": 37303, "func": "Changed in UML 2.1 - Component with <<subsystem>> stereotype TODO: We should deprecate this?", "target": 1}
{"idx": 37304, "func": "JRUBY-4113: callers should not call setTaint on immediate objects", "target": 0}
{"idx": 37305, "func": "This ensures that we are dealing with actual MOF objects. //", "target": 0}
{"idx": 37306, "func": "return ((RedefinableElement) handle).isRoot(); TODO: One part of UML 2.1.1 spec says that this is as above, but it appears to be gone - tfm", "target": 0}
{"idx": 37307, "func": "This path should contain the class files for these testcases:", "target": 0}
{"idx": 37308, "func": "end class ActionNavigability", "target": 0}
{"idx": 37309, "func": "//{{{ OpenAction constructor", "target": 0}
{"idx": 37310, "func": "//TODO: add referencedClass to disambiguate to FKs on the same columns, pointing to different tables", "target": 1}
{"idx": 37311, "func": "binary", "target": 0}
{"idx": 37312, "func": "select node in JTree", "target": 0}
{"idx": 37313, "func": "// JASON: Removed as part of patch // void removeSessionListener(ISessionListener lis);", "target": 0}
{"idx": 37314, "func": "Don't use tinyint for now, even though Mckoi \"supports\" it. It's notion of tinyint is 7-bit (not 8-bit) so it is not compatible with other DBs and leads to overflow (resulting in negative values which are a corruption of the actual value inserted/updated). This is not a great work-around. I filed a bug report on the mailing list; hopefully it will get fixed soon.", "target": 1}
{"idx": 37315, "func": "-------------------------------------------------------------------------- Implementation of the ClassVisitor interface --------------------------------------------------------------------------", "target": 0}
{"idx": 37316, "func": "//ChartEditorManager.getChartEditor(canvas.getDisplay(), this.chart);", "target": 0}
{"idx": 37317, "func": "Set the attributes for the fields in the class FieldDetails", "target": 0}
{"idx": 37318, "func": "@see javax.swing.text.Document#render(Runnable r)", "target": 0}
{"idx": 37319, "func": "a column of all null values is still counted...", "target": 0}
{"idx": 37320, "func": "//or its the id property name", "target": 0}
{"idx": 37321, "func": "eval value for assignment", "target": 0}
{"idx": 37322, "func": "make quotes font-color darkgray", "target": 0}
{"idx": 37323, "func": "get the text to be converted", "target": 0}
{"idx": 37324, "func": "TODO: What type of validation can we do here on tagType?", "target": 1}
{"idx": 37325, "func": "Assume DBMS doesn't support catalogs.", "target": 0}
{"idx": 37326, "func": "update <destinationTable> s set destColumn = ( select f.desc_t1 from <fromTable> f where f.myid = s.myid)", "target": 0}
{"idx": 37327, "func": "//{{{ doAWTRequests() method", "target": 0}
{"idx": 37328, "func": "if it's less than 200 do median of 3", "target": 0}
{"idx": 37329, "func": "reopen a java module", "target": 0}
{"idx": 37330, "func": "Check some initial variables", "target": 0}
{"idx": 37331, "func": "get first item", "target": 0}
{"idx": 37332, "func": "add window listener", "target": 0}
{"idx": 37333, "func": "May generate IllegalArgumentException", "target": 0}
{"idx": 37334, "func": "//{{{ goToNextBracket() method", "target": 0}
{"idx": 37335, "func": "first off, make sure that we've got a command and a vssdir and a label ...", "target": 0}
{"idx": 37336, "func": "protected void finalize() throws Throwable { System.err.println(\"ObjectProxyCache \" + id + \" finalized at \"+ new java.util.Date()); }", "target": 0}
{"idx": 37337, "func": "The JTable used for displaying all DB ResultSet info.", "target": 0}
{"idx": 37338, "func": "end class ActionSrcMultOneToMany", "target": 0}
{"idx": 37339, "func": "start by looking for HQL keywords...", "target": 0}
{"idx": 37340, "func": "ensure the application does not hang if it requests input", "target": 0}
{"idx": 37341, "func": "chain results to doneIndex", "target": 0}
{"idx": 37342, "func": "//top.setOpaque(true);", "target": 0}
{"idx": 37343, "func": "For use by SaveService only. @param stamp - this may be a start time or an end time @param elapsed", "target": 0}
{"idx": 37344, "func": "avoiding null names", "target": 0}
{"idx": 37345, "func": "promise to implement zero to N", "target": 0}
{"idx": 37346, "func": "most recent $NON-NLS-1$", "target": 0}
{"idx": 37347, "func": "Process streams get Channel.newChannel()ed into FileChannel but are not actually seekable. So instead of just the isSeekable check doing instanceof FileChannel, we must also add this boolean to check, which we set to false when it's known that the incoming channel is from a process. FIXME: This is gross, and it's NIO's fault for not providing a nice way to tell if a channel is \"really\" seekable.", "target": 1}
{"idx": 37348, "func": "temporary hashtable to check for duplicated", "target": 0}
{"idx": 37349, "func": "-global", "target": 0}
{"idx": 37350, "func": "I wonder if the lack of this broke anything in the past?", "target": 1}
{"idx": 37351, "func": "if binary check if incompatible attributes are used", "target": 0}
{"idx": 37352, "func": "Now put the text in We must handle the case where the text is null", "target": 0}
{"idx": 37353, "func": "// registerColumnType( Types.BLOB, 16777215, \"mediumblob\" ); // registerColumnType( Types.BLOB, 65535, \"blob\" );", "target": 0}
{"idx": 37354, "func": "//TODO: validate existing of property with the chosen name. (secondpass )", "target": 1}
{"idx": 37355, "func": "match whole word", "target": 0}
{"idx": 37356, "func": "Mask values for TEST_TYPE TODO: remove either MATCH or CONTAINS - they are mutually exckusive", "target": 1}
{"idx": 37357, "func": "i18n[laf.lookAndFeel=Look and Feel:]", "target": 0}
{"idx": 37358, "func": "check if dir exists by trying to change into it.", "target": 0}
{"idx": 37359, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider#setDestCopySession(net.sourceforge.squirrel_sql.client.session.ISession)", "target": 0}
{"idx": 37360, "func": "Extract version digits from String of the form #Revision: n.mm # (where # is actually $ above)", "target": 0}
{"idx": 37361, "func": "line 1328", "target": 0}
{"idx": 37362, "func": "Gets the destination file", "target": 0}
{"idx": 37363, "func": "TODO: lowercasing done here. Was done \"at random\" before; maybe not needed at all ?", "target": 1}
{"idx": 37364, "func": "i18n[SchemaInfo.loadingFunctions=Loading functions]", "target": 0}
{"idx": 37365, "func": "//if we have a RedirectorElement, return a decoy", "target": 0}
{"idx": 37366, "func": "a task container - anything could happen - just add the child to the container", "target": 0}
{"idx": 37367, "func": "set maximum length of menu entry", "target": 0}
{"idx": 37368, "func": "Need to reset the containers for repeated runs; about the only way for functions to detect that a run is starting seems to be the setParameters() call.", "target": 0}
{"idx": 37369, "func": "save composer window state", "target": 0}
{"idx": 37370, "func": "//{{{ createBrowserMenuItems() method", "target": 0}
{"idx": 37371, "func": "This should now work", "target": 0}
{"idx": 37372, "func": "Only relevant for messages", "target": 0}
{"idx": 37373, "func": "//otApi.addDetailTab(DatabaseObjectType.INDEX, new IndexDetailsTab());", "target": 0}
{"idx": 37374, "func": "FIXME: fails here. The current behavior appears intentional (ie the test is wrong) - tfm assertNull(\"The profile stereotype named \\\"\" + ProfileMother.STEREOTYPE_NAME_ST + \"\\\" shouldn't be found.\", findModelElementFromNamespace( StereotypeUtility.getAvailableStereotypes(aClass), ProfileMother.STEREOTYPE_NAME_ST, profileModel));", "target": 1}
{"idx": 37375, "func": "//{{{ closeOrKeepDialog() method", "target": 0}
{"idx": 37376, "func": "Extract transfer data.", "target": 0}
{"idx": 37377, "func": "N.B. to add a new field, remember the following - static _xyz - instance xyz=_xyz - clone s.xyz = xyz (perhaps) - setXyz(boolean) - saveXyz() - update SampleSaveConfigurationConverter to add new fields to marshall() and shouldSerialiseMember() - update SampleResultConverter and/or HTTPSampleConverter - update CSVSaveService: CSV_XXXX, makeResultFromDelimitedString, printableFieldNamesToString, static{} - update messages.properties to add save_xyz entry - update jmeter.properties to add new property - update listeners.xml to add new property, CSV and XML names etc. - take screenshot sample_result_config.png - update listeners.xml and component_reference.xml with new dimensions (might not change)", "target": 0}
{"idx": 37378, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsSelectForUpdate()", "target": 0}
{"idx": 37379, "func": "This is the page for the table viewer. //", "target": 0}
{"idx": 37380, "func": "ActivityGraphs", "target": 0}
{"idx": 37381, "func": "TODO: Lets move this behind the model interface", "target": 1}
{"idx": 37382, "func": "create a temporary (synthetic) prefix KeyBinding, that won't be saved", "target": 0}
{"idx": 37383, "func": "//- action names", "target": 0}
{"idx": 37384, "func": "Either are at teh beginning ...", "target": 0}
{"idx": 37385, "func": "//{{{ setSort() method", "target": 0}
{"idx": 37386, "func": "shape outlined", "target": 0}
{"idx": 37387, "func": "//TODO - need a lot more tests", "target": 1}
{"idx": 37388, "func": "//TabProps gets selected! //So, 2nd time right", "target": 0}
{"idx": 37389, "func": "//{{{ selectLine() method", "target": 0}
{"idx": 37390, "func": "if we run into a timeout, the run-away thread shall not make the VM run forever - if no timeout occurs, Ant's main thread will still be there to let the new thread finish", "target": 0}
{"idx": 37391, "func": "TODO: Replace magic numbers with constants", "target": 1}
{"idx": 37392, "func": "check current file list for changes", "target": 0}
{"idx": 37393, "func": "Do the for init", "target": 0}
{"idx": 37394, "func": "//Class/getGenFeature.javadoc.override.javajetinc", "target": 0}
{"idx": 37395, "func": "ensure that clones share the same lock object", "target": 0}
{"idx": 37396, "func": "path is the currently viewed directory in the browser", "target": 0}
{"idx": 37397, "func": "the code above builds a 1-indexed suffix array, but we shift it to be 0-indexed, ignoring the original 0-th element", "target": 0}
{"idx": 37398, "func": "//i18n[PleaseWaitDialog.queryExecuting=Query is executing]", "target": 0}
{"idx": 37399, "func": "Check if the parentfolder is remote & we are online", "target": 0}
{"idx": 37400, "func": "the object is persistent", "target": 0}
{"idx": 37401, "func": "according to both the ANSI-SQL and EJB3 specs, trim can either take exactly one parameter or a variable number of parameters between 1 and 4. from the SQL spec: <trim function> ::= TRIM <left paren> <trim operands> <right paren> <trim operands> ::= [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> <trim specification> ::= LEADING | TRAILING | BOTH If only <trim specification> is omitted, BOTH is assumed; if <trim character> is omitted, space is assumed", "target": 0}
{"idx": 37402, "func": "//{{{ ChunkCache constructor", "target": 0}
{"idx": 37403, "func": "FIXME:", "target": 0}
{"idx": 37404, "func": "from javax.naming.Referenceable", "target": 0}
{"idx": 37405, "func": "tell scrollpane to use table size with the height adjusted to leave room for the scrollbar at the bottom if needed", "target": 0}
{"idx": 37406, "func": "there should only be one token that starts with slash character", "target": 0}
{"idx": 37407, "func": "Label panel containing the versions for the update at top of dialog.", "target": 0}
{"idx": 37408, "func": "case Notification.TOUCH:", "target": 0}
{"idx": 37409, "func": "Instance (in UML 1.4) and Classifier are abstract and not tested", "target": 0}
{"idx": 37410, "func": "We can not remove this and have the application manage things directly based on the font, since only the names should be bold.", "target": 0}
{"idx": 37411, "func": "//case 'L':", "target": 0}
{"idx": 37412, "func": "line 1107", "target": 0}
{"idx": 37413, "func": "static field?", "target": 0}
{"idx": 37414, "func": "//[C,C] //[C, boolean]", "target": 0}
{"idx": 37415, "func": "get interval value", "target": 0}
{"idx": 37416, "func": "Create the FROM element for the target (the elements of the collection).", "target": 0}
{"idx": 37417, "func": "filesets are separate from the rest for performance reasons. If we use the code for union below, we'll always scan all filesets, even if we know the target is out of date after the first test.", "target": 0}
{"idx": 37418, "func": "used to hold per-thread singleton connection pools", "target": 0}
{"idx": 37419, "func": "Cached expansions", "target": 0}
{"idx": 37420, "func": "//ChangePackageImpl", "target": 0}
{"idx": 37421, "func": "Nothing to do if object tree is opened.", "target": 0}
{"idx": 37422, "func": "the previous element must have end position <= rangeEndPos", "target": 0}
{"idx": 37423, "func": "to hide line highlight if selections are being added later on", "target": 0}
{"idx": 37424, "func": "We don't want to waste effort setting an option if JBC is already in LOCAL mode. If JBC is REPL_(A)SYNC then check if they passed an config option to disable query replication", "target": 0}
{"idx": 37425, "func": "We override that the logic which uses this", "target": 0}
{"idx": 37426, "func": "//using exponents or force-formatter flag is set (convert 'E' to lower-case 'e'):", "target": 0}
{"idx": 37427, "func": "////////////////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 37428, "func": "//[i18n[OrderByClausePanel.orderByClauseLabel=Order By Clause]", "target": 0}
{"idx": 37429, "func": "// name of font", "target": 0}
{"idx": 37430, "func": "Use a set rather than a list as some combinations of MS SQL and the JDBC/ODBC return multiple copies of each table type.", "target": 0}
{"idx": 37431, "func": "higher derived", "target": 0}
{"idx": 37432, "func": "GEF sets a different Fig than the one that we had at construction time, so we need to set its color and width", "target": 0}
{"idx": 37433, "func": "Synch is needed because multiple threads can update the counts.", "target": 0}
{"idx": 37434, "func": "ensure the manager is initialised we don't currently need to do anything further, as this sets the default https protocol", "target": 0}
{"idx": 37435, "func": "parse plugin metadata", "target": 0}
{"idx": 37436, "func": "If we have new messages add them to the headerlist", "target": 0}
{"idx": 37437, "func": "Create a new extension point and make it the browser target. Then invoke the superclass action method.", "target": 0}
{"idx": 37438, "func": "Pass everything except editing events to superclass", "target": 0}
{"idx": 37439, "func": "For any entry that doesn't correspond to a plugin in the running JVM, compute a URL for the classes. //", "target": 0}
{"idx": 37440, "func": "TODO: consider a conditional feature in the xml panel def for this:", "target": 1}
{"idx": 37441, "func": "remove from script list", "target": 0}
{"idx": 37442, "func": "i18n[UpdateManagerDialog.closeLabel=Close]", "target": 0}
{"idx": 37443, "func": "Map the nongrid data into the new regular grid", "target": 0}
{"idx": 37444, "func": "TODO - why use space?", "target": 1}
{"idx": 37445, "func": "redundantly add item again which should be ignored", "target": 0}
{"idx": 37446, "func": "since the previous entry might have changed the color, we need to reset the color back to default value for table cells, taking into account whether the cell is selected or not.", "target": 0}
{"idx": 37447, "func": "(non-Javadoc) @see org.apache.http.conn.ssl.SSLSocketFactory#createSocket(org.apache.http.params.HttpParams)", "target": 0}
{"idx": 37448, "func": "It would be nice to tell the user what happened, but if we try to put up a dialog box at this point, we run into trouble in some cases where the field continually tries to re-read after the dialog closes (because it is being re-painted).", "target": 0}
{"idx": 37449, "func": "Create cert for CA using root (requires Java 7 for gencert)", "target": 0}
{"idx": 37450, "func": "for classpath lookup we ignore the base directory //", "target": 0}
{"idx": 37451, "func": "i18n[SQLResultExecuterPanel.cancelMsg=Press Cancel to Stop]", "target": 0}
{"idx": 37452, "func": "TODO: Hard coded -. JDBC/ODBC bridge JDK1.4 brings back -9 for nvarchar columns in MS SQL Server tables.", "target": 1}
{"idx": 37453, "func": "//now exit here if the property is already set", "target": 0}
{"idx": 37454, "func": "replace the null with just the char", "target": 0}
{"idx": 37455, "func": "//getProject().log(\"listing files in directory \" + directory, Project.MSG_DEBUG);", "target": 0}
{"idx": 37456, "func": "need to set java.class.path property and restore it later since the NetRexx compiler has no option for the classpath", "target": 0}
{"idx": 37457, "func": "This won't work on Derby where non-varchar columns cannot be altered among other restrictions. TableColumnInfo nullintVC = getVarcharColumn(\"nullint\", true, \"defVal\", \"A varchar comment\"); String alterColTypeSQL = dialect.getColumnTypeAlterSQL(firstCol, nullintVC); runSQL(session, alterColTypeSQL);", "target": 1}
{"idx": 37458, "func": "//{{{ Token constructor", "target": 0}
{"idx": 37459, "func": "fix for the bug where key events in JTextComponents inside views are also handled by the input handler", "target": 0}
{"idx": 37460, "func": "i18n[I18n.openIOnEditor=Open in Editor]", "target": 0}
{"idx": 37461, "func": "uml model events", "target": 0}
{"idx": 37462, "func": "Otherwise, the source should be available now as event.data, and we can create the command. //", "target": 0}
{"idx": 37463, "func": "the path expression continues after a ]", "target": 0}
{"idx": 37464, "func": "If the listeners already has this listener, do nothing", "target": 0}
{"idx": 37465, "func": "it is a property reference {foo.bar}", "target": 0}
{"idx": 37466, "func": "//check to see if we warn or not", "target": 0}
{"idx": 37467, "func": "Find the first non-null message", "target": 0}
{"idx": 37468, "func": "if given path is absolute, just try it as-is (with extensions) and no load path", "target": 0}
{"idx": 37469, "func": "======== dialogPane ========", "target": 0}
{"idx": 37470, "func": "//{{{ Insert the lines into the buffer", "target": 0}
{"idx": 37471, "func": "Logging.log.severe(\"Error saving converted message\", e);", "target": 0}
{"idx": 37472, "func": "In UML2.x there is no metaclass named Method, but we use the 'method' association of BehavioralFeature", "target": 0}
{"idx": 37473, "func": "short from, containing only name of person", "target": 0}
{"idx": 37474, "func": "first, check if the sender has unreceived mail", "target": 0}
{"idx": 37475, "func": "setup the selector", "target": 0}
{"idx": 37476, "func": "i18n[xmlRefomatter.malformedXml=Possible mal-formed XML:\\n Starting tag was: {0}\\nEnding Tag was: {1}\\nContinuing with reformatting XML.\"]", "target": 0}
{"idx": 37477, "func": "(non-Javadoc) @see org.columba.mail.imap.IImapServer#update(java.util.Observable, java.lang.Object)", "target": 0}
{"idx": 37478, "func": "No need to close this No need to close this", "target": 0}
{"idx": 37479, "func": "As long as there's nothing in the read buffer, try reading more data (for an external entity) or popping the entity stack (for either).", "target": 0}
{"idx": 37480, "func": "Should choose either -ci or -nco.", "target": 0}
{"idx": 37481, "func": "first column contains the row key...", "target": 0}
{"idx": 37482, "func": "line 660", "target": 0}
{"idx": 37483, "func": "create account object", "target": 0}
{"idx": 37484, "func": "// public File getDebugLogFile() // { // return new File(_userSettingsDir + File.separator + \"squirrel-sql-debug.log\"); // }", "target": 0}
{"idx": 37485, "func": "modify \"this\" to start where remainder ends", "target": 0}
{"idx": 37486, "func": "Don't log an error message here. It is possible that the user interrupted the query because it was taking too long. Just throw the exception, and let the caller decide whether or not the exception should be logged.", "target": 0}
{"idx": 37487, "func": "-2 because of the decrement in line 317 removedLocalUids = localUids.size() - 2 - position;", "target": 0}
{"idx": 37488, "func": "//Handle line continuations, if any", "target": 0}
{"idx": 37489, "func": "public static final String duplicateLineAction = \"duplicate-line-action\";", "target": 0}
{"idx": 37490, "func": "Construct a proper URL for relative lookup. //", "target": 0}
{"idx": 37491, "func": "folder uid doesn't exist -> create default value", "target": 0}
{"idx": 37492, "func": "Use the DOT node to emit the first column name. Create the column names, folled by the column aliases.", "target": 0}
{"idx": 37493, "func": "do nothing, return dummy version below", "target": 0}
{"idx": 37494, "func": "first, try to load it from the temp PC associated to this SS", "target": 0}
{"idx": 37495, "func": "fine, don't add any data files. //throw new WrappedSQLException(ex);", "target": 0}
{"idx": 37496, "func": "i18n[mssql.scriptLogins=Script SQL Server logins (Windows and SQL Server logins)]", "target": 0}
{"idx": 37497, "func": "ratio represents axis units", "target": 0}
{"idx": 37498, "func": "//listRewrite.remove((ASTNode)modifier, null);", "target": 0}
{"idx": 37499, "func": "If a newline from the previous character data remains, add a generator for it. //", "target": 0}
{"idx": 37500, "func": "//v71", "target": 0}
{"idx": 37501, "func": "rangeAxisLocation...", "target": 0}
{"idx": 37502, "func": "TODO: This function attempts to optimize the more generic code in the parent, which also works correctly in this case. Is this a good idea?", "target": 1}
{"idx": 37503, "func": "i18n[sqlval.pwdPref=Password:]", "target": 0}
{"idx": 37504, "func": "i18n[TableExportCsvDlg.withHeaders=Include column headers]", "target": 0}
{"idx": 37505, "func": "the map of batch numbers to EntityInsertAction lists", "target": 0}
{"idx": 37506, "func": "//deal with range axis", "target": 0}
{"idx": 37507, "func": "The value is encoded in the specified encoding", "target": 0}
{"idx": 37508, "func": "create a new empty project", "target": 0}
{"idx": 37509, "func": "//}}} //{{{ Counterclockwise rotation", "target": 0}
{"idx": 37510, "func": "Only file specified -> Fail", "target": 0}
{"idx": 37511, "func": "set display text stored here to an empty string (~ cleared) //$NON-NLS-1$", "target": 0}
{"idx": 37512, "func": "//private ConfigFrame frame;", "target": 0}
{"idx": 37513, "func": "\\u00e7 = LATIN SMALL LETTER C WITH CEDILLA \\u00e9 = LATIN SMALL LETTER E WITH ACUTE", "target": 0}
{"idx": 37514, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getVersionColumns(net.sourceforge.squirrel_sql.fw.sql.ITableInfo) @deprecated use getVersionColumnsDataSet instead", "target": 0}
{"idx": 37515, "func": "this should throw an exception - should not allow multiple custom tokenizers to be installed for a single session.", "target": 0}
{"idx": 37516, "func": "//XXX All this to convert source to destination directory according to weblogic standards Can be written better... this is too hacky!", "target": 1}
{"idx": 37517, "func": "//{{{ printPage() method", "target": 0}
{"idx": 37518, "func": "Not in UML 2.x (or metatypes) type.addItem(PredicateMType.create( Model.getMetaTypes().getActivityGraph()));", "target": 0}
{"idx": 37519, "func": "Found splitChar at end of line", "target": 0}
{"idx": 37520, "func": "If the user chooses neither Fixed value nor Auto-Increment, then clear the \"Fixed value\" field if it has a value.", "target": 0}
{"idx": 37521, "func": "TODO: Should be improved so that it's recognized whether there is something selected that can actually be generated Nothing selected in the diagram", "target": 0}
{"idx": 37522, "func": "//{{{ initMisc() method", "target": 0}
{"idx": 37523, "func": "statically initialized below", "target": 0}
{"idx": 37524, "func": "clear message list viewer", "target": 0}
{"idx": 37525, "func": "arg2", "target": 0}
{"idx": 37526, "func": "terminate with a linefeed alone", "target": 0}
{"idx": 37527, "func": "ETypeParameter", "target": 0}
{"idx": 37528, "func": "Set the instance type name instead, since that will also set the instance class name but this way will make undo restore the current instance type name correctly //", "target": 0}
{"idx": 37529, "func": "if we are storing a name as well, index is one too high for values", "target": 0}
{"idx": 37530, "func": "ejb jar file to verify", "target": 0}
{"idx": 37531, "func": "This shouldn't be possible, but just in case", "target": 0}
{"idx": 37532, "func": "Save in case needed later", "target": 0}
{"idx": 37533, "func": "//enableCheckBox.setEnabled(false);", "target": 0}
{"idx": 37534, "func": "make dirty", "target": 0}
{"idx": 37535, "func": "the text box containing the problem messages", "target": 0}
{"idx": 37536, "func": "We yield here to hopefully permit the target thread to schedule MRI immediately schedules it, so this is close but not exact", "target": 0}
{"idx": 37537, "func": "add the environment as logicals to the DCL script", "target": 0}
{"idx": 37538, "func": "@see MouseListener#mouseReleased(MouseEvent)", "target": 0}
{"idx": 37539, "func": "EOF (ENEBO: After default?", "target": 0}
{"idx": 37540, "func": "Serialization killed our dynamic scope. We can just create an empty one since serialization cannot serialize an eval (which is the only thing which is capable of having a non-empty dynamic scope).", "target": 0}
{"idx": 37541, "func": "//doesnt exist?? //pf.setOrientation(PageFormat.REVERSE_PORTRAIT); //then just do the next best thing", "target": 0}
{"idx": 37542, "func": "Attributes for basetest", "target": 0}
{"idx": 37543, "func": "TODO - improve this check", "target": 1}
{"idx": 37544, "func": "index of current iterator in the wrapped iterators array", "target": 0}
{"idx": 37545, "func": "builder.append(spellLabel, spellButton); builder.nextLine();", "target": 0}
{"idx": 37546, "func": "//{{{ RemoveAllTreeNodesAction class", "target": 0}
{"idx": 37547, "func": "i18n[PreferencesPanel.removeMultiLineCommentLabel=Remove multi-line comments (...) from SQL before executing", "target": 0}
{"idx": 37548, "func": "//TODO: create uk loaders for component properties", "target": 1}
{"idx": 37549, "func": "A Fig with a null layer", "target": 0}
{"idx": 37550, "func": "Need to maintain our own elapsed timer to ensure more accurate aggregation", "target": 0}
{"idx": 37551, "func": "//{{{ showFilePopup() method", "target": 0}
{"idx": 37552, "func": "insert start and end for html", "target": 0}
{"idx": 37553, "func": "//{{{ addCaretListener() method", "target": 0}
{"idx": 37554, "func": "reset text edits; since this node is processed successfully, there is no need to revert these changes", "target": 0}
{"idx": 37555, "func": "stupid hack to handle referencing a rule set that is defined later!", "target": 1}
{"idx": 37556, "func": "rename the resource, thus breaking the link:", "target": 0}
{"idx": 37557, "func": "'baseStroke' : immutable, no need to clone reference", "target": 0}
{"idx": 37558, "func": "line 803", "target": 0}
{"idx": 37559, "func": "//{{{ setMultipleSelectionEnabled() method", "target": 0}
{"idx": 37560, "func": "//{{{ applicationShouldHandleReopen() method", "target": 0}
{"idx": 37561, "func": "JUnit 4 wraps solo tests this way. We can extract the original test name with a little hack.", "target": 1}
{"idx": 37562, "func": "TODO: When the attribute isn't in the diagram , for exemple: select attribut by Explorer Then, the refresh isn't auto: we had to click !!", "target": 1}
{"idx": 37563, "func": "//{{{ getRuleSet() method", "target": 0}
{"idx": 37564, "func": "This pair of params where the same. Lets check the next pair.", "target": 0}
{"idx": 37565, "func": "create message value", "target": 0}
{"idx": 37566, "func": "send as multipart/alternative", "target": 0}
{"idx": 37567, "func": "Print each message", "target": 0}
{"idx": 37568, "func": "corner.createDefaultColumnsFromModel();", "target": 0}
{"idx": 37569, "func": "//String installed; //String installedVersion;", "target": 0}
{"idx": 37570, "func": "//{{{ mouseExited() method", "target": 0}
{"idx": 37571, "func": "Discovered that the loginame field can be null - in that case, how to know we have the correct view?", "target": 1}
{"idx": 37572, "func": "try a null argument", "target": 0}
{"idx": 37573, "func": "Gets the name of an entry in the file. This is the real name which for a class is the name of the package with the class name appended.", "target": 0}
{"idx": 37574, "func": "normal use inside Ant", "target": 0}
{"idx": 37575, "func": "[jsd] The fix for HHH-558...", "target": 0}
{"idx": 37576, "func": "the user wants to hide them", "target": 0}
{"idx": 37577, "func": "hidden constructor", "target": 0}
{"idx": 37578, "func": "i18n[sqlbookmark.btnTextView=View]", "target": 0}
{"idx": 37579, "func": "Ensure that the sample save config is not shared between copied nodes N.B. clone only seems to be used for client-server tests", "target": 0}
{"idx": 37580, "func": "make getter for handler", "target": 0}
{"idx": 37581, "func": "create the -generic.jar, if required", "target": 0}
{"idx": 37582, "func": "@see javax.swing.event.MenuListener#menuCanceled(javax.swing.event.MenuEvent)", "target": 0}
{"idx": 37583, "func": "underlaying data cannot be changed", "target": 0}
{"idx": 37584, "func": "//TODO: can we limit stored procedures ?!", "target": 1}
{"idx": 37585, "func": "//{{{ AbbrevsModel class", "target": 0}
{"idx": 37586, "func": "set up for Binary types", "target": 0}
{"idx": 37587, "func": "i18n[SQLResultExecuterPanel.exec=Executing SQL]", "target": 0}
{"idx": 37588, "func": "Add the given edge to the graph, if valid. @see org.tigris.gef.graph.MutableGraphModel#addEdge(java.lang.Object)", "target": 0}
{"idx": 37589, "func": "TODO not read, yet in a public setter", "target": 1}
{"idx": 37590, "func": "People have reported hangs with JDK 1.4; might be caused by modal dialogs being displayed from windowActivated()", "target": 0}
{"idx": 37591, "func": "//{{{ setModeAbbrevs() method", "target": 0}
{"idx": 37592, "func": "XXX: action bar might not be 'temp'", "target": 1}
{"idx": 37593, "func": "we need to build the hashtable dynamically", "target": 0}
{"idx": 37594, "func": "We need to sort the uids in order to have the correct association between the new and old uid", "target": 0}
{"idx": 37595, "func": "JUnit 4 does not distinguish between errors and failures even in the JUnit 3 adapter. So we need to help it a bit to retain compatibility for JUnit 3 tests.", "target": 0}
{"idx": 37596, "func": "4.5.2.1 Abstraction", "target": 0}
{"idx": 37597, "func": "3a. For server, Determine the channel that the user has (stable or snapshot)", "target": 0}
{"idx": 37598, "func": "This will execute the CreateCopyCommand's and then call canExecute on the InitializeCopyCommand's. //", "target": 0}
{"idx": 37599, "func": "//{{{ FavoritesMenuButton class", "target": 0}
{"idx": 37600, "func": "editMenu.setEnabled(false);", "target": 0}
{"idx": 37601, "func": "TODO: mvw: Would it not be better if this code would go in startTextEditor(), not overruling mouseClicked(). But we made this fig not editable, to stop it from reacting on key-presses. Anyhow - this is a hack - abusing a FigText - GEF does not really support double-clicking on a Fig to trigger some action.", "target": 1}
{"idx": 37602, "func": "hypotheses no time expression (only invariants)", "target": 0}
{"idx": 37603, "func": "Link the previous/next reference of the swimlanes according to the x order.", "target": 0}
{"idx": 37604, "func": "User has cancelled the query execution.", "target": 0}
{"idx": 37605, "func": "instance fields are copied from the client instance", "target": 0}
{"idx": 37606, "func": "Don't forget to resolve the argument! Resolve the collection function now.", "target": 0}
{"idx": 37607, "func": "Get what's left of the segments after trimming the prefix.", "target": 0}
{"idx": 37608, "func": "we take the first method found as our \"n\" method, since for any non-specific arity they'll all error the same. If an actual \"n\" method is created, we use that.", "target": 0}
{"idx": 37609, "func": "//even process null collections", "target": 0}
{"idx": 37610, "func": "Normal exit occurs here", "target": 0}
{"idx": 37611, "func": "Flag indicates changing in textarea", "target": 0}
{"idx": 37612, "func": "TODO - should we skip processing here?", "target": 1}
{"idx": 37613, "func": "cwd not implemented in this version", "target": 0}
{"idx": 37614, "func": "Initialize some components.", "target": 0}
{"idx": 37615, "func": "ARGF methods", "target": 0}
{"idx": 37616, "func": "for string, just send the text to the output file", "target": 0}
{"idx": 37617, "func": "set the arguments to the constructor", "target": 0}
{"idx": 37618, "func": "Zero-Argument declaration", "target": 0}
{"idx": 37619, "func": "di (degree 0)", "target": 0}
{"idx": 37620, "func": "first in expanded range", "target": 0}
{"idx": 37621, "func": "convert to string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.", "target": 0}
{"idx": 37622, "func": "We can't update any properties via just a URL connection.", "target": 0}
{"idx": 37623, "func": "line 1301", "target": 0}
{"idx": 37624, "func": "//{{{ HistoryBorder class", "target": 0}
{"idx": 37625, "func": "\"hashdef\" object, a hash with a default", "target": 0}
{"idx": 37626, "func": "How many items left", "target": 0}
{"idx": 37627, "func": "Logging.log.severe( \"Error while looking for charset\", e);", "target": 0}
{"idx": 37628, "func": "FillAShape filledShadow = new FillAShape(\"shadowShape\", new RoundRectangle(0, 0, 1, 1, 5, 5), bgAbsRect, new Color(0, 0, 0, 100), GfxUtil.AA_HINT_ON);", "target": 0}
{"idx": 37629, "func": "Gets font name. If it doesn't exist in configuration it creates new entries in configuration for appearance. TODO: Why create in a getter? @return the name of the configured font", "target": 1}
{"idx": 37630, "func": "try case where left item is shorter than center item", "target": 0}
{"idx": 37631, "func": "prepare highlighter to show text find with search command", "target": 0}
{"idx": 37632, "func": "For a 1-to-1, we can directly create a SetCommand. //", "target": 0}
{"idx": 37633, "func": "superclass entity-name", "target": 0}
{"idx": 37634, "func": "// get selected folder", "target": 0}
{"idx": 37635, "func": "we need the try/catch just to keep the compiler happy", "target": 0}
{"idx": 37636, "func": "enable/disable button, too", "target": 0}
{"idx": 37637, "func": "reserve space for the primary domain axis...", "target": 0}
{"idx": 37638, "func": "Fix bug: -D arg1=arg2 was causing parse error; however --define arg1=arg2 is OK This seems to be because the parser skips the terminator for the long options, but was not doing so for the short options.", "target": 1}
{"idx": 37639, "func": "here we do not bother with the discriminator.", "target": 0}
{"idx": 37640, "func": "map properties even when isTreeOnly == true", "target": 0}
{"idx": 37641, "func": "Overwrite", "target": 0}
{"idx": 37642, "func": "mark quotings with special font", "target": 0}
{"idx": 37643, "func": "Translator.localize(\"button.move-down\")", "target": 0}
{"idx": 37644, "func": "keep track of classes created", "target": 0}
{"idx": 37645, "func": "private ActionSupport asupport;", "target": 0}
{"idx": 37646, "func": "//{{{ AdjustHandler class", "target": 0}
{"idx": 37647, "func": "If we didn't detach it from an old resource already, detach it from the old container's resource. //", "target": 0}
{"idx": 37648, "func": "draw the weekday headings", "target": 0}
{"idx": 37649, "func": "//{{{ setKeywords() method", "target": 0}
{"idx": 37650, "func": "Find an explicit import or the first wildcard import. //", "target": 0}
{"idx": 37651, "func": "//boolean iri = false;", "target": 0}
{"idx": 37652, "func": "create dummy documentElement", "target": 0}
{"idx": 37653, "func": "There are many of these \"tables\", that PostgreSQL throws SQLExceptions for whenever a table-like operation is attempted.", "target": 0}
{"idx": 37654, "func": "LOG.log(Level.FINE, \"Finding children for \" + o.getClass());", "target": 0}
{"idx": 37655, "func": "i18n[popupEditableIoPanel.wrapWord=Wrap on Word on/off]", "target": 0}
{"idx": 37656, "func": "0C80..0CFF;", "target": 0}
{"idx": 37657, "func": "Build the CFG for this scope -- supported only by methods & closures", "target": 0}
{"idx": 37658, "func": "ending editing", "target": 0}
{"idx": 37659, "func": "Compute number of labels", "target": 0}
{"idx": 37660, "func": "TODO implement additional operations in 4.5.3.5", "target": 1}
{"idx": 37661, "func": "should be new moon", "target": 0}
{"idx": 37662, "func": "prevents us from handling SearchSettingsChanged as a result of below", "target": 0}
{"idx": 37663, "func": "//{{{ generateSkipArray() method", "target": 0}
{"idx": 37664, "func": "Check for JDK 5 first. Will not help on JDK 1.4 if only junit-4.0.jar in CP because in that case linkage of whole task will already have failed! But will help if CP has junit-3.8.2.jar:junit-4.0.jar.", "target": 0}
{"idx": 37665, "func": "TODO should this be done even if not a full test plan? and what if load fails?", "target": 1}
{"idx": 37666, "func": "determine whether we read all there was in the clob or not", "target": 0}
{"idx": 37667, "func": "The new root object is the actual new object since all sign of the document root will now have disappeared. //", "target": 0}
{"idx": 37668, "func": "the following lines add cut/copy/paste/undo/redo/selectall actions support using the Columba action objects. This means that we only have a single instance of these specific actions, which is shared by all menuitems and toolbar buttons.", "target": 0}
{"idx": 37669, "func": "If we have a model but no list then build the list with preferred constructor. Eventually all lists should be built this way.", "target": 0}
{"idx": 37670, "func": "i18n[syntax.osterExplain=Note: The preferable editor is the Netbeans editor. The Netbeans editor\\n //- is less memory consuming,\\n //- its highlightning is more exact,\\n //- can handle many lines well.\\n The Oster editor is still there because it can handle very long lines better than the Netbeans editor. This is due to a known bug in the Netbeans editor (Issue #41241). As soon as this bug is fixed the Oster editor will be removed.]", "target": 0}
{"idx": 37671, "func": "@see org.argouml.uml.diagram.ui.FigNodeModelElement#updateListeners(java.lang.Object, java.lang.Object)", "target": 0}
{"idx": 37672, "func": "opened tags", "target": 0}
{"idx": 37673, "func": "//{{{ regexpReplace() method", "target": 0}
{"idx": 37674, "func": "allows me to ask \"Do you want to save first?\"", "target": 0}
{"idx": 37675, "func": "finally handle the exception", "target": 0}
{"idx": 37676, "func": "Currently dead code, but useful when we figure out how to actually perform translit. private static boolean isTranslit(String encoding) { return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false; }", "target": 0}
{"idx": 37677, "func": "//{{{ HelpButton class", "target": 0}
{"idx": 37678, "func": "create tables The object used for each row", "target": 0}
{"idx": 37679, "func": "don't add directories we've already added. no warning if we try, it is harmless in and of itself", "target": 0}
{"idx": 37680, "func": "!! TODO: All code below here is duplicated in FigBaseNode. The reason is the GEF defect - http://gef.tigris.org/issues/show_bug.cgi?id=358 Once we have taken a release of GEF with that fix we can remove this code. //", "target": 1}
{"idx": 37681, "func": "-> import message in Columba", "target": 0}
{"idx": 37682, "func": "ButtonBarBuilder builder2 = new ButtonBarBuilder(buttonWestPanel);", "target": 0}
{"idx": 37683, "func": "is there a separator? case of name=value, name=", "target": 0}
{"idx": 37684, "func": "we don't clone the listeners", "target": 0}
{"idx": 37685, "func": "We just woke up.", "target": 0}
{"idx": 37686, "func": "//{{{ updateModel() method", "target": 0}
{"idx": 37687, "func": "i18n[DBUtil.error.tablenotfound=Couldn't locate table '{0}' in schema '(1)']", "target": 0}
{"idx": 37688, "func": "TODO: ?delete Instances which have this as their classifier? or should we leave them since they contain so much state that the user would have to recreate?? nsmodel.getUmlHelper().deleteCollection( nsmodel.getUmlPackage().getCommonBehavior() .getAInstanceClassifier().getInstance(cls)); TODO: ?delete ObjectFlowStates which have this as their type? nsmodel.getUmlHelper().deleteCollection( nsmodel.getUmlPackage().getActivityGraphs() .getATypeObjectFlowState().getObjectFlowState(cls)); TODO: ?delete ClassifierInStates which have this as their type?", "target": 1}
{"idx": 37689, "func": "it is a new file set the revision but not the prevrevision", "target": 0}
{"idx": 37690, "func": "logprop(\"java.class.path\");", "target": 0}
{"idx": 37691, "func": "//HSQL has no Blob/Clob support .... but just put these here for now!", "target": 1}
{"idx": 37692, "func": "Set up the cache factory", "target": 0}
{"idx": 37693, "func": "line 467", "target": 0}
{"idx": 37694, "func": "Found \"<![\"", "target": 0}
{"idx": 37695, "func": "TODO: Tentative implementation. Do we want something that updates the list of open projects or just simple open and close events? -tfm", "target": 1}
{"idx": 37696, "func": "(non-Javadoc) @see org.columba.api.command.ICommand#updateGUI()", "target": 0}
{"idx": 37697, "func": "charset is specified - find it", "target": 0}
{"idx": 37698, "func": "Handle the last byte at the end. //", "target": 0}
{"idx": 37699, "func": "Return true if the given object is a valid edge in this graph. @see org.tigris.gef.graph.MutableGraphModel#canAddEdge(java.lang.Object)", "target": 0}
{"idx": 37700, "func": "set up the alpha-transparency...", "target": 0}
{"idx": 37701, "func": "If the lhs is a collection, use CollectionPropertyMapping", "target": 0}
{"idx": 37702, "func": "Add 1.8 libs", "target": 0}
{"idx": 37703, "func": "0700..074F;", "target": 0}
{"idx": 37704, "func": "hangul_medial and hangul_final extras", "target": 0}
{"idx": 37705, "func": "i18n[sqlbookmark.prefOk=OK]", "target": 0}
{"idx": 37706, "func": "main body", "target": 0}
{"idx": 37707, "func": "This sets the lineWidth of all in the group:", "target": 0}
{"idx": 37708, "func": "The datasource is set up by testStarted and cleared by testEnded. These are called from different threads, so access must be synchronized. The same instance is called in each case.", "target": 0}
{"idx": 37709, "func": "light gray line every 30 min", "target": 0}
{"idx": 37710, "func": "This is the new, canonical path", "target": 0}
{"idx": 37711, "func": ".length on array", "target": 0}
{"idx": 37712, "func": "catalog1 --> catalog2 --> catalog3 --> catalog1", "target": 0}
{"idx": 37713, "func": "class XMLChar", "target": 0}
{"idx": 37714, "func": "An operation is declared via the kind property or, for backwards compatibility, by specifying parameters (though attribute or reference kind takes precedence). //", "target": 0}
{"idx": 37715, "func": "//{{{ Get indent attributes of previous line", "target": 0}
{"idx": 37716, "func": "Conversions for milli and nano seconds", "target": 0}
{"idx": 37717, "func": "line 848", "target": 0}
{"idx": 37718, "func": "Path segments cannot contain '[' or ']' since pchar production was not changed by RFC 2732.", "target": 0}
{"idx": 37719, "func": "By default null == types we return only cached types", "target": 0}
{"idx": 37720, "func": "//{{{ invalidateCachedList() method", "target": 0}
{"idx": 37721, "func": "modified only by addMethod; no synchronization required", "target": 0}
{"idx": 37722, "func": "if no object for this data type, then cannot use value in where clause", "target": 0}
{"idx": 37723, "func": "theoretically a segment could have seg.offset != 0 but SegmentBuffer never does that", "target": 0}
{"idx": 37724, "func": "Process the processor options", "target": 0}
{"idx": 37725, "func": "Test cases for generating subject lines, when replying and/or forwarding messages <p> TODO: Re:[columba-devel]test-subject @author fdietz", "target": 1}
{"idx": 37726, "func": "Or we test their relationship via their instance classes, if they have them. //", "target": 0}
{"idx": 37727, "func": "Columns have not yet been loaded", "target": 0}
{"idx": 37728, "func": "worrying about proxies is perhaps a little bit of overkill here...", "target": 1}
{"idx": 37729, "func": "init mocks", "target": 0}
{"idx": 37730, "func": "Create a panel containing the combo and the button:", "target": 0}
{"idx": 37731, "func": "Helper class used to implement co-routine between two threads", "target": 0}
{"idx": 37732, "func": "entries are of the form: //CVS 1.11 File module/filename is new; current revision 1.1 //CVS 1.11.9 File module/filename is new; cvstag_2003_11_03_2 revision 1.1 or File module/filename changed from revision 1.4 to 1.6 or File module/filename is removed; not included in release tag SKINLF_12 //CVS 1.11.9 File testantoine/antoine.bat is removed; TESTANTOINE_1 revision 1.1.1.1 get rid of 'File module/\"", "target": 0}
{"idx": 37733, "func": "//List mimeParts = model.getAttachments();", "target": 0}
{"idx": 37734, "func": "//put them into the array", "target": 0}
{"idx": 37735, "func": "dump the trace and continue this is currently only here for Android, which seems to have bugs in its enumeration logic http://code.google.com/p/android/issues/detail?id=2812", "target": 1}
{"idx": 37736, "func": "Windows adds the drive letter in uppercase, unless you run Cygwin", "target": 0}
{"idx": 37737, "func": "TODO: rotate the image when drawn with horizontal orientation?", "target": 1}
{"idx": 37738, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.event.ISQLExecutionListener#statementExecuted(java.lang.String)", "target": 0}
{"idx": 37739, "func": "Assume the class is not available.", "target": 0}
{"idx": 37740, "func": "-------------------- Optional methods -------------------- You can override those methods if you want to optimize or do advanced things (like support a special syntax). The methods do not chain - you should use them when embedding ant (by replacing the main helper)", "target": 0}
{"idx": 37741, "func": "//{{{ getDirectoryField() method", "target": 0}
{"idx": 37742, "func": "Install DB2JCCExceptionFormatter iff we're using the JCC driver", "target": 0}
{"idx": 37743, "func": "Not a real database, but no driver should match this.", "target": 0}
{"idx": 37744, "func": "Doesn't really matter what set we use.", "target": 0}
{"idx": 37745, "func": "close file", "target": 0}
{"idx": 37746, "func": "Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses", "target": 0}
{"idx": 37747, "func": "Allow variable to be omitted", "target": 0}
{"idx": 37748, "func": "level 0 import detail", "target": 0}
{"idx": 37749, "func": "Avoid runtime problem on pre 1.4 when compiling post 1.4", "target": 0}
{"idx": 37750, "func": "Get the store", "target": 0}
{"idx": 37751, "func": "TODO: Maybe a return message already exists. Check first and and if the first found has no activator then set this call message as the activator and skip the code below.", "target": 1}
{"idx": 37752, "func": "TODO - how to handle thread stopped here", "target": 1}
{"idx": 37753, "func": "Instructions", "target": 0}
{"idx": 37754, "func": "axisOffset", "target": 0}
{"idx": 37755, "func": "conversion", "target": 0}
{"idx": 37756, "func": "GMT+00:00 --> Etc/GMT, see \"MRI behavior\" comment below.", "target": 0}
{"idx": 37757, "func": "Set all the headers from the HeaderManager", "target": 0}
{"idx": 37758, "func": "Try to load the module don't refer to it directly here or we're dependent upon it", "target": 0}
{"idx": 37759, "func": "__END__ marker offset (-1 means none present)", "target": 0}
{"idx": 37760, "func": "//{{{ EditingOptionPane constructor", "target": 0}
{"idx": 37761, "func": "obtain c", "target": 0}
{"idx": 37762, "func": "Gather modifiers for a class, method, or field. I lookahead is true then we are being called as part of a lookahead and we should not enforce any rules. Otherwise we validate based on context (field, method, class)", "target": 0}
{"idx": 37763, "func": "has <<subsystem>> stereotype", "target": 0}
{"idx": 37764, "func": "recv returns nil on EOF", "target": 0}
{"idx": 37765, "func": "Try regular class", "target": 0}
{"idx": 37766, "func": "i18n[DBUtil.error.nocolumns=Table '{0}' in schema '{1}' has no columns to copy]", "target": 0}
{"idx": 37767, "func": "TODO: Delete me Copyright (C) 2002-2003 Johan Compagner jcompagner@j-com.nl This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version. This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details. You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA", "target": 1}
{"idx": 37768, "func": "Invoked by IntrospectionHelper for <code>setXXX(Path p)</code> attribute setters. @param p the <code>Project</code> for this path. @param path the <code>String</code> path definition.", "target": 0}
{"idx": 37769, "func": "This turns a featureless set command into an operation to create a mapping. This is invoked during drag and drop. //", "target": 0}
{"idx": 37770, "func": "get the source of the return message", "target": 0}
{"idx": 37771, "func": "TODO: better detection when path is absolute or not. If the path isn't absolute, then prepend the current working directory to the path.", "target": 1}
{"idx": 37772, "func": "we got at least one stereotype", "target": 0}
{"idx": 37773, "func": "//map the names", "target": 0}
{"idx": 37774, "func": "over estimation of the number of bytes to be added to this instruction = 3 - current number of padding bytes = 3 - (3 - u%4) = u%4 = u & 3", "target": 0}
{"idx": 37775, "func": "this property is ignored under java 1.5.", "target": 0}
{"idx": 37776, "func": "Number of deleted messages is computed from exists on imap and local newMessages", "target": 0}
{"idx": 37777, "func": "//{{{ queueTOCReload() method", "target": 0}
{"idx": 37778, "func": "only check once per session", "target": 0}
{"idx": 37779, "func": "read map with users", "target": 0}
{"idx": 37780, "func": "//end class", "target": 0}
{"idx": 37781, "func": "Make sure the window is displayed in visible region", "target": 0}
{"idx": 37782, "func": "majorTickLength", "target": 0}
{"idx": 37783, "func": "alias", "target": 0}
{"idx": 37784, "func": "make \"version\" column fixed size", "target": 0}
{"idx": 37785, "func": "Copy constructor", "target": 0}
{"idx": 37786, "func": "Check that calculator gets the correct statistics from the sample", "target": 0}
{"idx": 37787, "func": "add preloading progress bar?", "target": 0}
{"idx": 37788, "func": "end class ActionFind", "target": 0}
{"idx": 37789, "func": "stupid Swing", "target": 1}
{"idx": 37790, "func": "line 922", "target": 0}
{"idx": 37791, "func": "//{{{ moveGap() method", "target": 0}
{"idx": 37792, "func": "Needed for all but Nimbus Nimbus works - after a fashion - with this Nimbus works - after a fashion - with this reset", "target": 0}
{"idx": 37793, "func": "@see org.argouml.persistence.MemberFilePersister#load(org.argouml.kernel.Project, java.io.InputStream)", "target": 0}
{"idx": 37794, "func": "Constraint: This code only deals with 1 supplier per dependency! TODO: How to support more? @see org.argouml.uml.ui.AbstractActionAddModelElement#doIt(java.util.List)", "target": 1}
{"idx": 37795, "func": "//{{{ getPluginJARs() method", "target": 0}
{"idx": 37796, "func": "//TODO: this is one of the ugliest and most fragile pieces of code in Hibernate....", "target": 1}
{"idx": 37797, "func": "exact match on first item", "target": 0}
{"idx": 37798, "func": "TODO: Can we get this info from UML2 plugin? Perhaps collect all References in the metamodel, filter for those which represent containments and find the types on either end - tfm", "target": 1}
{"idx": 37799, "func": "i18n[userscript.applicableToTarget=Scripts applicable to selected targets]", "target": 0}
{"idx": 37800, "func": "Only property specified -> Fail", "target": 0}
{"idx": 37801, "func": "Yuck: TIFFImageEncoder uses Error to report runtime problems", "target": 1}
{"idx": 37802, "func": "if the current shortcut has been set but is void, then the current shortcut is not set --> then the default value does not change", "target": 0}
{"idx": 37803, "func": "use this to create file and deal with non-writable files", "target": 0}
{"idx": 37804, "func": "//{{{ UnixWorkaround constructor", "target": 1}
{"idx": 37805, "func": "Create the streams necessary to write the jarfile", "target": 0}
{"idx": 37806, "func": "end class ArgoJMenu", "target": 0}
{"idx": 37807, "func": "Note that we rely on the fact that when a physical line is invalidated, all screen lines/subregions of that line are invalidated as well. See below comment for code that tries to uphold this assumption.", "target": 0}
{"idx": 37808, "func": "locale", "target": 0}
{"idx": 37809, "func": "EAnnotations denoting specific EMOF elements are serialized as their EMOF elements. Other EAnnotations are serialized as xmi:Extensions. //", "target": 0}
{"idx": 37810, "func": "We need to to this otherwise there is no notification and diagram isn't change", "target": 0}
{"idx": 37811, "func": "NOTE: Although it's not shown in the UML 1.4 spec, a TemplateArgument appears to be a datavalue (like MultiplicityRange) and can not be reused in multiple instances. The UML diagrams don't show it as a composition, but it effectively is.", "target": 0}
{"idx": 37812, "func": "If the join is implied, then don't include sub-classes on the element.", "target": 0}
{"idx": 37813, "func": "/HHH-2378", "target": 0}
{"idx": 37814, "func": "TODO - charset? TODO this should really be request data, but there is none", "target": 1}
{"idx": 37815, "func": "Check for the correct bits at the start.", "target": 0}
{"idx": 37816, "func": "Top-level script!", "target": 0}
{"idx": 37817, "func": "we have a name", "target": 0}
{"idx": 37818, "func": "couldn't find folder associated with this uid -> open the select folder dialog", "target": 0}
{"idx": 37819, "func": "Add the class in dotted notation 'com.company.Class'", "target": 0}
{"idx": 37820, "func": "TODO: This name of the expression language should be configurable by the user. <p> According to the UML standard, the expression language should be the same for all elements in one diagram. <p> UML is not a sensible default - usually this is some pseudo-language. @return the name of the expression language", "target": 1}
{"idx": 37821, "func": "Additional Operations in 4.5.3.8", "target": 0}
{"idx": 37822, "func": "Primitive (number or void) is not normally an instanceof anything. But for internal use we'll test true for the bsh.Primitive class. i.e. (5 instanceof bsh.Primitive) will be true", "target": 0}
{"idx": 37823, "func": "p.add(makeMainPanel(), BorderLayout.CENTER); Force a minimum table height of 70 pixels", "target": 0}
{"idx": 37824, "func": "put an elipse at the point being plotted..", "target": 0}
{"idx": 37825, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDriver#getWebSiteUrl()", "target": 0}
{"idx": 37826, "func": "End of method importMailboxFile", "target": 0}
{"idx": 37827, "func": "create containment one.", "target": 0}
{"idx": 37828, "func": "sticky tab was closed", "target": 0}
{"idx": 37829, "func": "OK, we still have some data, restore it", "target": 0}
{"idx": 37830, "func": "We treat the feature as volatile if it is volatile itself or if it is a reference whose opposite end is volatile, unless that opposite volatile reference delegates to a feature map, in which case, a full implementation of the references can be generated. //", "target": 0}
{"idx": 37831, "func": "No point reading the file if there's no visualiser", "target": 0}
{"idx": 37832, "func": "Use the passed in base in preference to the base from matchingEntry, which is either null or the directory in which the external catalog file from which it was obtained is located. We make a copy so matchingEntry's original base is untouched. This is the standard behavior as per my reading of the JAXP and XML Catalog specs. CKS 11/7/2002 //", "target": 0}
{"idx": 37833, "func": "//{{{ getServiceTypes() method", "target": 0}
{"idx": 37834, "func": "//}}} //{{{ Handle ordinary abbrevs", "target": 0}
{"idx": 37835, "func": "//{{{ showPluginManager() method", "target": 0}
{"idx": 37836, "func": "TODO: Delete Me", "target": 1}
{"idx": 37837, "func": "////////////////////////////////////////////////////////////////////////main include and excluded segments //////////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 37838, "func": "x += ev ~ sqrt()", "target": 0}
{"idx": 37839, "func": "execute custom search", "target": 0}
{"idx": 37840, "func": "//{{{ addOrRemoveMarker() method", "target": 0}
{"idx": 37841, "func": "On the first try check if we need to show the password dialog -> not necessary when password was stored", "target": 0}
{"idx": 37842, "func": "Prepare the right type of operation. //", "target": 0}
{"idx": 37843, "func": "//{{{ BrowserActionContext class", "target": 0}
{"idx": 37844, "func": "if header contains more fields than the cached header", "target": 0}
{"idx": 37845, "func": "@see org.argouml.uml.diagram.layout.Layouter#add(org.argouml.uml.diagram.layout.LayoutedObject)", "target": 0}
{"idx": 37846, "func": "scale the graphics", "target": 0}
{"idx": 37847, "func": "now repeat for a vertical axis", "target": 0}
{"idx": 37848, "func": "i18n[CatalogsTab.title=Catalogs]", "target": 0}
{"idx": 37849, "func": "this method is called when a new non-null collection is persisted or when an existing (non-null) collection is moved to a new owner", "target": 0}
{"idx": 37850, "func": "Get folder", "target": 0}
{"idx": 37851, "func": "Calculate the total checksum Convert the keys (source files) into a sorted array.", "target": 0}
{"idx": 37852, "func": "Avoid classifier name collisions. //", "target": 0}
{"idx": 37853, "func": "//all tables except the merge into table", "target": 0}
{"idx": 37854, "func": "i18n[oracle.owner=Owner]", "target": 0}
{"idx": 37855, "func": "make the chart area a square", "target": 0}
{"idx": 37856, "func": "Names of the columns.", "target": 0}
{"idx": 37857, "func": "1.5 \"@ident\" annotation NOI18N", "target": 0}
{"idx": 37858, "func": "//{{{ PrintTabExpander constructor", "target": 0}
{"idx": 37859, "func": "//setPreferredSize(new Dimension(400, 400));", "target": 0}
{"idx": 37860, "func": "name of font", "target": 0}
{"idx": 37861, "func": "strip tags //body = parser.stripHTMLTags(decodedBody, true); //body = parser.restoreSpecialCharacters(body);", "target": 0}
{"idx": 37862, "func": "SQL-Server doesn't support a cascade clause.", "target": 0}
{"idx": 37863, "func": "for CLOSURE, QUESTION", "target": 0}
{"idx": 37864, "func": "//{{{ StyleEditor class", "target": 0}
{"idx": 37865, "func": "given cache must be empty", "target": 0}
{"idx": 37866, "func": "Appending internationalized labels with optional components ------------", "target": 0}
{"idx": 37867, "func": "Uncomment the \"puts\" lines if you want to see more detail", "target": 0}
{"idx": 37868, "func": "Just try to see how much we got", "target": 0}
{"idx": 37869, "func": "repaint box", "target": 0}
{"idx": 37870, "func": "//{{{ PosBottomHalf class", "target": 0}
{"idx": 37871, "func": "FF00..FFEF;", "target": 0}
{"idx": 37872, "func": "End of string (], ), }, >, ', \", \\0)", "target": 0}
{"idx": 37873, "func": "all / match any JComboBox", "target": 0}
{"idx": 37874, "func": "we cannot delete the model itself", "target": 0}
{"idx": 37875, "func": "The big port. Color of the big port is irrelevant", "target": 0}
{"idx": 37876, "func": "needed for ShutdownClient", "target": 0}
{"idx": 37877, "func": "name=\"sessionid\" value=\"value\"", "target": 0}
{"idx": 37878, "func": "The following three can be discussed: should they be from the first request or from the final one? I chose to do it this way because that's what browsers do: they show the final URL of the redirect chain in the location field.", "target": 0}
{"idx": 37879, "func": "//Open any extra brackets we might need.", "target": 0}
{"idx": 37880, "func": "4.5.3.20 [4]", "target": 0}
{"idx": 37881, "func": "----- The \"Singleton\" ----- //", "target": 0}
{"idx": 37882, "func": "rb_match_busy", "target": 0}
{"idx": 37883, "func": "TODO: should probably apply the null object pattern for a non-allowed class, rather than null", "target": 1}
{"idx": 37884, "func": "private JPanel tagValsTab = new JPanel();", "target": 0}
{"idx": 37885, "func": "//////////////////////////////////////////////////////////////Static workers for dealing with notation names.", "target": 0}
{"idx": 37886, "func": "ResultSet impl (delegated) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 37887, "func": "tree selection event", "target": 0}
{"idx": 37888, "func": "search for closing bracket separately to account for attributes in tag", "target": 0}
{"idx": 37889, "func": "--- DEPRECATED CODE ----------------------------------------------------", "target": 0}
{"idx": 37890, "func": "Look for a default invoke() handler method in the namespace Note: this code duplicates that in This.java... should it? Call on 'This' can never be a command", "target": 1}
{"idx": 37891, "func": "Initialize title strings", "target": 0}
{"idx": 37892, "func": "i18n[popupeditableIoPanel.selectImportDataFile=You must select an existing file to import data from.]", "target": 0}
{"idx": 37893, "func": "Keys that will be used to record visibility for the accessors. //", "target": 0}
{"idx": 37894, "func": "-------------------------------------------- Filter classes --------------------------------------------", "target": 0}
{"idx": 37895, "func": "//if they are different, the timestamps are used", "target": 0}
{"idx": 37896, "func": "all errors, just info; do not prevent loading IKVM does not support JMX, and throws an error", "target": 0}
{"idx": 37897, "func": "//Re-registering driver is necessary for Embedded Derby", "target": 0}
{"idx": 37898, "func": "update the hash value", "target": 0}
{"idx": 37899, "func": "TODO fetch list of languages from a file? N.B. Changes to language list need to be reflected in resources/PackageTest.java", "target": 1}
{"idx": 37900, "func": "If it's an interface, then it will be treated as an EClass //", "target": 0}
{"idx": 37901, "func": "There was no ElementResidence yet, so let's create one:", "target": 0}
{"idx": 37902, "func": "(non-Javadoc) @see org.columba.mail.imap.IImapServer#existsChanged(java.lang.String, int)", "target": 0}
{"idx": 37903, "func": "build a list of all modules to consider for inclusion", "target": 0}
{"idx": 37904, "func": "Used by ResultCollector when creating output files", "target": 0}
{"idx": 37905, "func": "remove this when 4.1 plugin API is deprecated", "target": 0}
{"idx": 37906, "func": "This is a dummy scope; we should find a way to make that more explicit", "target": 1}
{"idx": 37907, "func": "//a \"detached\" collection!", "target": 0}
{"idx": 37908, "func": "Let the group recalculate its bounds and then tell GEF we've finished.", "target": 0}
{"idx": 37909, "func": "start desiring a goal which should add a goal and bump the size to 1", "target": 0}
{"idx": 37910, "func": "\"CREATE SEQUENCE $sequenceName$ START WITH $startValue$ \" + \"INCREMENT BY $incrementValue$ $cache$ $cacheValue$\";", "target": 0}
{"idx": 37911, "func": "call the function in the app code that saves the data in the persistant storage (e.g. a database). The success or failure of that function (as indicated by the absance or presence of a result errpor/warning message) determines the result of this call. (Since the table is supposed to be editable, we should have an IDataSetUpdateableTableModel object set in our super class.)", "target": 0}
{"idx": 37912, "func": "18!", "target": 0}
{"idx": 37913, "func": "//{{{ compareStrings() method", "target": 0}
{"idx": 37914, "func": "close process output See JRUBY-3405; hooking up to parent process stdin caused problems for IRB etc using stdin.", "target": 0}
{"idx": 37915, "func": "first try as directory", "target": 0}
{"idx": 37916, "func": "(non-Javadoc) @see org.columba.core.filter.IFilterList#get(int)", "target": 0}
{"idx": 37917, "func": "line 1335", "target": 0}
{"idx": 37918, "func": "@bgen(jjtree) PrimarySuffix", "target": 0}
{"idx": 37919, "func": "See modifyTestElement", "target": 0}
{"idx": 37920, "func": "//{{{ setSearchMatcher() method", "target": 0}
{"idx": 37921, "func": "//{{{ PosBottomHalf constructor", "target": 0}
{"idx": 37922, "func": "ChannelDescriptors opened by sysopen are cached to avoid collection", "target": 0}
{"idx": 37923, "func": "name of folder", "target": 0}
{"idx": 37924, "func": "create storage for listeners...", "target": 0}
{"idx": 37925, "func": "index of first segment that is different between endPath and startPath", "target": 0}
{"idx": 37926, "func": "i18n[editextras.errorRemoveNewLines=Error processing Remove NewLines SQL command: {0}]", "target": 0}
{"idx": 37927, "func": "//if all resource files associated with this bundle //have been scanned for and still not able to //find a single resrouce file, throw exception", "target": 0}
{"idx": 37928, "func": "the owning entity may have been deleted and its identifier unset due to identifier-rollback; in which case, try to look up its identifier from the persistence context", "target": 0}
{"idx": 37929, "func": "TODO: This needs to be modified for UML 2.x", "target": 1}
{"idx": 37930, "func": "((value != null) && (oldValue != null)) Need a compound command to remove owner from old value and add it to new value. //", "target": 0}
{"idx": 37931, "func": "@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAClassifierContext(tudresden.ocl.parser.node.AClassifierContext)", "target": 0}
{"idx": 37932, "func": "Otherwise if it's not something we've already read, just punt to the super class.", "target": 0}
{"idx": 37933, "func": "TODO improve the error handling", "target": 1}
{"idx": 37934, "func": "start new area when needed (see above)", "target": 0}
{"idx": 37935, "func": "If there are parameters in the SQL string, then we need to prompt for some answers. //", "target": 0}
{"idx": 37936, "func": "(non-Javadoc) @see org.columba.core.filter.IFilter#setEnabled(boolean)", "target": 0}
{"idx": 37937, "func": "Variables live at entry of this node Variables live at exit of node Temporary set of live variables Size of the \"_in\" and \"_out\" bit sets", "target": 0}
{"idx": 37938, "func": "primitives should have been wrapped", "target": 0}
{"idx": 37939, "func": "the url matches the last redirect", "target": 0}
{"idx": 37940, "func": "//{{{ updateWrapSettings() method", "target": 0}
{"idx": 37941, "func": "//note early exit here:", "target": 0}
{"idx": 37942, "func": "ECLIPSE-DEPEND-BEGIN", "target": 0}
{"idx": 37943, "func": "We want to maintain a minimum width for the fig. Also, add the border dimensions to the minimum space required for its contents:", "target": 0}
{"idx": 37944, "func": "saveOrUpdateCopy() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 37945, "func": "ensureDirectory", "target": 0}
{"idx": 37946, "func": "This test needed for project deletion", "target": 0}
{"idx": 37947, "func": "18 nov 2003: calling this on a drive letter on Windows causes drive access", "target": 1}
{"idx": 37948, "func": "Methods of the Nil Class (nil_):", "target": 0}
{"idx": 37949, "func": "line 1644", "target": 0}
{"idx": 37950, "func": "TODO: We really only care about events which affect things that are visible in the current perspective (view). This could be tailored to cut down on event traffic. - tfm 20060410", "target": 1}
{"idx": 37951, "func": "line 729", "target": 0}
{"idx": 37952, "func": "throws HeadlessException", "target": 0}
{"idx": 37953, "func": "Make sure this is a defined parameter and check the incoming value type TODO: what should be the actual exception type here?", "target": 1}
{"idx": 37954, "func": "fall through to default", "target": 0}
{"idx": 37955, "func": "Otherwise set a flag, so that \\n knows that last was a \\r", "target": 0}
{"idx": 37956, "func": "Use a colored text field to show the color", "target": 0}
{"idx": 37957, "func": "MATCH: return the position of its first character", "target": 0}
{"idx": 37958, "func": "======================================================================== Methods", "target": 0}
{"idx": 37959, "func": "for some weird reason the table loses its inter-cell spacing property, when changing the underlying column model -> setting this to (0,0) again", "target": 0}
{"idx": 37960, "func": "protected static ClassLoader loader = ClassLoader.getSystemClassLoader();", "target": 0}
{"idx": 37961, "func": "...but this does!", "target": 0}
{"idx": 37962, "func": "create XML document", "target": 0}
{"idx": 37963, "func": "instantiate a new instance", "target": 0}
{"idx": 37964, "func": "//{{{ goToParentFold() method", "target": 0}
{"idx": 37965, "func": "keep this variant for kind_of? testing", "target": 0}
{"idx": 37966, "func": "Need to use the identifier type of the collection owner since the incoming is value is actually the owner's id. Using the collection's key type causes problems with property-ref keys...", "target": 0}
{"idx": 37967, "func": "SSS FIXME: This doesn't preserve original order of when clauses. We could consider preserving the order (or maybe not, since we would have to sort the constants first in any case) for outputing jump tables in certain situations. add body to map for emitting later", "target": 1}
{"idx": 37968, "func": "basedir of subant/subant-test2/subant.xml is .. therefore we expect here the subant subdirectory", "target": 0}
{"idx": 37969, "func": "Generate all the existing internal transitions, so that we can compare them as text with the newly entered ones.", "target": 0}
{"idx": 37970, "func": "Push nulls for various args of invokeMethod interpreter callstack callerinfo", "target": 0}
{"idx": 37971, "func": "alternatively, sometimes the first few days of the year are considered to fall in the last week of the previous year...", "target": 0}
{"idx": 37972, "func": "skip if no <extension> element found", "target": 0}
{"idx": 37973, "func": "the child to be removed will always be 0 'cos as the nodes are removed the nth node will become (n-1)th", "target": 0}
{"idx": 37974, "func": "//add those that are set, and a delimiter", "target": 0}
{"idx": 37975, "func": "//ie. 60 seconds", "target": 0}
{"idx": 37976, "func": "Create add and remove buttons if needed first", "target": 0}
{"idx": 37977, "func": "switch to new theme", "target": 0}
{"idx": 37978, "func": "i18n[I18n.info=Info]", "target": 0}
{"idx": 37979, "func": "i18n[editWhereColsPanel.usePKLabel=Use PK]", "target": 0}
{"idx": 37980, "func": "This try/catch is to allow failing over to the \"commands\" logic when running from within a jruby-complete jar file, which has jruby.home = a jar file URL that does not resolve correctly with JRubyFile.create.", "target": 0}
{"idx": 37981, "func": "i18n[graph.invalidName=Invalid name]", "target": 0}
{"idx": 37982, "func": "load profile config file", "target": 0}
{"idx": 37983, "func": "\".\" dir is used for relative path loads from a given file, as in require '../foo/bar'", "target": 0}
{"idx": 37984, "func": "Request queue", "target": 0}
{"idx": 37985, "func": "//i18n[DerbyPlugin.showProcedureSource=Show procedure source]", "target": 0}
{"idx": 37986, "func": "zero it here so that BufferTabs doesn't have any problems", "target": 0}
{"idx": 37987, "func": "//Cope with [,]", "target": 0}
{"idx": 37988, "func": "By default we don't show the attribute check box. Mark this object as a listener for the check box.", "target": 0}
{"idx": 37989, "func": "public List subList(EStructuralFeature feature, int from, int to) { return null; }", "target": 0}
{"idx": 37990, "func": "i18n[UpdateSummaryDialog.currentVersionPrefix=Current Version:]", "target": 0}
{"idx": 37991, "func": "//{{{ isMiddleButton() method", "target": 0}
{"idx": 37992, "func": "@see javax.swing.JFileChooser#cancelSelection()", "target": 0}
{"idx": 37993, "func": "load plugin handler used for the columns", "target": 0}
{"idx": 37994, "func": "recording a first declaration for a given prefix", "target": 0}
{"idx": 37995, "func": "unknown service - <clazz,name> not in table", "target": 0}
{"idx": 37996, "func": "example configuration (tree.xml): <filter description=\"gnome\" enabled=\"true\"> <rules condition=\"matchany\"> <criteria criteria=\"contains\" headerfield=\"To or Cc\" pattern=\"gnome\" type=\"To or Cc\"></criteria> </rules> <actionlist> <action uid=\"120\" type=\"Move Message\"></action> </actionlist> </filter> //", "target": 0}
{"idx": 37997, "func": "If it isnt a message folder, then it must be a root, and those should not be sorted.", "target": 0}
{"idx": 37998, "func": "//no command? no string", "target": 0}
{"idx": 37999, "func": "popup menu", "target": 0}
{"idx": 38000, "func": "for zero, one, two, three arities, JavaMethod.JavaMethod.call(...IRubyObject[] args...) will check", "target": 0}
{"idx": 38001, "func": "File::Constants module is included in IO.", "target": 0}
{"idx": 38002, "func": "rb_enc_mbclen", "target": 0}
{"idx": 38003, "func": "EnumerationLiterals should get deleted implicitly since they are associated by composition", "target": 0}
{"idx": 38004, "func": "i18n[OraclePrefsPanelController.hint=Oracle Plugin preferences]", "target": 0}
{"idx": 38005, "func": "if it's PRIMARY, just write it without the FILEGROUP prefix.", "target": 0}
{"idx": 38006, "func": "Optimize the performance of applying the import regular expressions locating the last import line", "target": 0}
{"idx": 38007, "func": "grant \"all-permissions\"", "target": 0}
{"idx": 38008, "func": "//{{{ write() method", "target": 0}
{"idx": 38009, "func": "Class to be used to create the Method. Will be non-null if either Class or Object was provided during construction. Can be used instead of invokee, e.g. when using interfaces.", "target": 0}
{"idx": 38010, "func": "The model element was deleted while we were working on it", "target": 0}
{"idx": 38011, "func": "Now we have the subscribed folders in subscribedFolders and the unsubscribed folders in unsubscribedFolders Next step: Create a treestructure", "target": 0}
{"idx": 38012, "func": "if the property mapping consists of all formulas, make it non-updateable", "target": 0}
{"idx": 38013, "func": "we check to see if the lastSelectedPath is null after we clear, it would return null", "target": 0}
{"idx": 38014, "func": "If this is a RemoveCommand for a root input object, direct it to the MappingRoot. //", "target": 0}
{"idx": 38015, "func": "Ensure correct indentation for a top level attribute. elementNames.add(\"mark\");", "target": 0}
{"idx": 38016, "func": "//i18n[MetaDataDecoratorDataSet.noJarFiles=No files specified in 'Extra ClassPath' tab for driver]", "target": 0}
{"idx": 38017, "func": "<create_sequence_statement> ::= CREATE SEQUENCE [<schema_name>.]<sequence_name> [INCREMENT BY <integer>] [START WITH <integer>] [MAXVALUE <integer> | NOMAXVALUE] [MINVALUE <integer> | NOMINVALUE] [CYCLE | NOCYCLE] [CACHE <unsigned_integer> | NOCACHE] [ORDER | NOORDER]", "target": 0}
{"idx": 38018, "func": "MRI: range_op", "target": 0}
{"idx": 38019, "func": "inlined: bsW(2, 2);", "target": 0}
{"idx": 38020, "func": "html - quoting is done by inserting a div around the message formattet with a blue line at left edge TODO (@author fdietz): Implement quoting (font color, stylesheet, blockquote???)", "target": 1}
{"idx": 38021, "func": "======== buttonBar ========", "target": 0}
{"idx": 38022, "func": "last node, either !instanceof WhenNode or null, is the else", "target": 0}
{"idx": 38023, "func": "-- Loader overrides --", "target": 0}
{"idx": 38024, "func": "once we find a folder that isn't in the repository, we know we can add it.", "target": 0}
{"idx": 38025, "func": "@see org.tigris.gef.graph.MutableGraphModel#canConnect(java.lang.Object, java.lang.Object)", "target": 0}
{"idx": 38026, "func": "replace the last \",\" with \")\"", "target": 0}
{"idx": 38027, "func": "to manage the case there are no label/component pairs but just one component", "target": 0}
{"idx": 38028, "func": "Found \"<!-\"", "target": 0}
{"idx": 38029, "func": "it's safe since adler.update doesn't modify the array", "target": 0}
{"idx": 38030, "func": "//{{{ loadBufferSwitcher() method", "target": 0}
{"idx": 38031, "func": "Maybe combine this with generateMethod()", "target": 0}
{"idx": 38032, "func": "Set initial sorting on Critic Headline", "target": 0}
{"idx": 38033, "func": "convert the replyTo string into a vector of emailaddresses", "target": 0}
{"idx": 38034, "func": "Function objects to be tested", "target": 0}
{"idx": 38035, "func": "if adding a module under a constant name, set that module's basename to the constant name", "target": 0}
{"idx": 38036, "func": "ok, now it gets expensive...", "target": 0}
{"idx": 38037, "func": "Temporary hack to support inner classes If the obj is a non-static inner class then import the context... This is not a sufficient emulation of inner classes. Replace this later...", "target": 1}
{"idx": 38038, "func": "or should it actually throw an exception?", "target": 0}
{"idx": 38039, "func": "for specific-index cases, clean up non-expression values", "target": 0}
{"idx": 38040, "func": "determine if the generated java file is up-to-date", "target": 0}
{"idx": 38041, "func": "//TabModelTarget interface methods", "target": 0}
{"idx": 38042, "func": "//null owner ok??", "target": 0}
{"idx": 38043, "func": "How much control should critics have over when they are relavant? Does doing that in code instead of declaratively limit reasoning? How does using more semantically rich method calls impact componentization?", "target": 1}
{"idx": 38044, "func": "dummy formatter just to catch the error", "target": 0}
{"idx": 38045, "func": "Paths are relative to the build file they're imported from, not the current directory (same as entity includes).", "target": 0}
{"idx": 38046, "func": "TODO: This is a tagged value name which will never trigger an event", "target": 1}
{"idx": 38047, "func": "//selectFetchSizeLabel.setHorizontalAlignment(JLabel.LEFT);", "target": 0}
{"idx": 38048, "func": "package scheme 2: separate module for each full package name, constructed from the camel-cased package segments: Java::JavaLang::Object,", "target": 0}
{"idx": 38049, "func": "server message numbers start with 1 whereas List numbers start with 0 -> always increase fetch number", "target": 0}
{"idx": 38050, "func": "Transfer the data and, if non-null, extract it. //", "target": 0}
{"idx": 38051, "func": "@see org.argouml.model.VisibilityKind#getPrivate()", "target": 0}
{"idx": 38052, "func": "autoPopulateSectionOutlinePaint", "target": 0}
{"idx": 38053, "func": "check a null value", "target": 0}
{"idx": 38054, "func": "use global table options", "target": 0}
{"idx": 38055, "func": "If we drop out there were no clashes", "target": 0}
{"idx": 38056, "func": "//i18n[ProgressCallBackDialog.initialLoadingPrefix=Loading...]", "target": 0}
{"idx": 38057, "func": "//{{{ isNewFile() method", "target": 0}
{"idx": 38058, "func": "=================================== CSV quote/unquote handling ==============================", "target": 0}
{"idx": 38059, "func": "//list.add(\"LiteralInteger\");//When other ok", "target": 0}
{"idx": 38060, "func": "//no more $ signs found //if there is any tail to the file, append it", "target": 0}
{"idx": 38061, "func": "IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject", "target": 0}
{"idx": 38062, "func": "persistOnFlush() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 38063, "func": "//{{{ Some predefined icons", "target": 0}
{"idx": 38064, "func": "//unwrap it", "target": 0}
{"idx": 38065, "func": "Done -- we're working with an editable property.", "target": 0}
{"idx": 38066, "func": "Insert a line", "target": 0}
{"idx": 38067, "func": "TODO needed here because currently done on sample completion in JMeterThread, but that only catches top-level samples.", "target": 1}
{"idx": 38068, "func": "i18n[AliasesListInternalFrame.error.ctrlF4key=Probably closed by the ctrl F4 key. See BasicDesktopPaneUi.CloseAction]", "target": 0}
{"idx": 38069, "func": "FIXME: clone generator", "target": 1}
{"idx": 38070, "func": "fixed domain axis space...", "target": 0}
{"idx": 38071, "func": "todo : need to find a clean way to handle the \"event source\" role a seperate classs responsible for generating/dispatching events just duplicates most of the Session methods... passing around seperate reto interceptor, factory, actionQueue, and persistentContext is not manageable...", "target": 1}
{"idx": 38072, "func": "(non-Javadoc) @see org.columba.mail.folder.IDataStorage#saveInputStream(java.lang.Object, java.io.InputStream)", "target": 0}
{"idx": 38073, "func": "primitive to wrapper type", "target": 0}
{"idx": 38074, "func": "//Ecore2EcoreFactoryImpl", "target": 0}
{"idx": 38075, "func": "//$NON-NLS-1$//$NON-NLS-2$ //$NON-NLS-1$//$NON-NLS-2$", "target": 0}
{"idx": 38076, "func": "build the third tab", "target": 0}
{"idx": 38077, "func": "Check if the user has loaded any file", "target": 0}
{"idx": 38078, "func": "//all joins join to the pk of the driving table", "target": 0}
{"idx": 38079, "func": "The clean way would be to throw an exception. //throw new IOException(\"crc error\");", "target": 0}
{"idx": 38080, "func": "Read the header part, we will be looking for a content-length header, so we know how much we should read. We assume headers are in ISO_8859_1 If we do not find such a header, we will just have to read until we have to block to read more, until we support chunked transfer", "target": 0}
{"idx": 38081, "func": "Implementing the CellEditor Interface //", "target": 0}
{"idx": 38082, "func": "find and add all subdirectories", "target": 0}
{"idx": 38083, "func": "This method is called to build assignments for a multiple-assignment instruction", "target": 0}
{"idx": 38084, "func": "Set the value at the previously allocated index and return the previous value there. //", "target": 0}
{"idx": 38085, "func": "create a view more button, responsible for opening the attachment viewer popup JButton moreButton = createAttachmentMoreButton();", "target": 0}
{"idx": 38086, "func": "no underlying data, so cannot be changed", "target": 0}
{"idx": 38087, "func": "//{{{ scrollUpLine() method", "target": 0}
{"idx": 38088, "func": "use to scan own archive", "target": 0}
{"idx": 38089, "func": "The wrapper used to invoke the method", "target": 0}
{"idx": 38090, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getCatalogSeparator()", "target": 0}
{"idx": 38091, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsDataManipulationTransactionsOnly()", "target": 0}
{"idx": 38092, "func": "variable args no block, load null block", "target": 0}
{"idx": 38093, "func": "Nothing more to do.", "target": 0}
{"idx": 38094, "func": "for time consuming tasks you need to create your own Command", "target": 0}
{"idx": 38095, "func": "//{{{ Services", "target": 0}
{"idx": 38096, "func": "$<: reading filename", "target": 0}
{"idx": 38097, "func": "empty collection ok to cast, local var is here to allow SuppressWarnings", "target": 0}
{"idx": 38098, "func": "Previously, we never updated the viewer on a resolve. Now we post and merge it as appropriate. //", "target": 0}
{"idx": 38099, "func": "white space", "target": 0}
{"idx": 38100, "func": "dimension changed resized = true;", "target": 0}
{"idx": 38101, "func": "?k | boolean | True if file1 exists and has the sticky bit set", "target": 0}
{"idx": 38102, "func": "private static ILogger s_log = LoggerController.createLogger(DatabaseExpander.class);", "target": 0}
{"idx": 38103, "func": "the list of specific column names is in comma-separated format with a comma in front of the first entry as well empty the map of old values", "target": 0}
{"idx": 38104, "func": "rewriter is required for set methods", "target": 0}
{"idx": 38105, "func": "Must be the end of the controller", "target": 0}
{"idx": 38106, "func": "synchronized if null", "target": 0}
{"idx": 38107, "func": "final URL url = extractURL(ev);", "target": 0}
{"idx": 38108, "func": "TODO: There's a cyclic dependency between FigConcurrentRegion and the actions ActionAddConcurrentRegion", "target": 1}
{"idx": 38109, "func": "if not already defined, we add a 'new' that guesses at which signature to use TODO: just adding first one right now...add in signature-guessing logic", "target": 1}
{"idx": 38110, "func": "line 794", "target": 0}
{"idx": 38111, "func": "model->view", "target": 0}
{"idx": 38112, "func": "original object another object that has the same values as the original another object with different values", "target": 0}
{"idx": 38113, "func": "get each table's info", "target": 0}
{"idx": 38114, "func": "Close in case of failure to complete. //", "target": 0}
{"idx": 38115, "func": "if a default action was voided then we have to save it", "target": 0}
{"idx": 38116, "func": "Wrap", "target": 0}
{"idx": 38117, "func": "If our separator is the regular expression special char '|', then quote it before formatting.", "target": 0}
{"idx": 38118, "func": "make maps", "target": 0}
{"idx": 38119, "func": "convenience methods relating to operations across arrays of types...", "target": 0}
{"idx": 38120, "func": "//static private final String TRANSLIT = \"//translit\";", "target": 0}
{"idx": 38121, "func": "N.B. we fetch the throughput each time, as it may vary during a test", "target": 0}
{"idx": 38122, "func": "//persister.setIdentifier(result, id); //before calling interceptor, for consistency with normal load", "target": 0}
{"idx": 38123, "func": "These methods handle parameters that cannot contain delimiters or quotes", "target": 0}
{"idx": 38124, "func": "Note: originally the code did use the ClientPool to \"share\" subscribers, however since the key was \"this\" and each sampler is unique - nothing was actually shared.", "target": 0}
{"idx": 38125, "func": "i18n[sessionPropertiesPanel.showRowCount=Show Row Count for Tables (can slow application)]", "target": 0}
{"idx": 38126, "func": "i18n[Application.error.savedatatypeprops=Unable to write DataType properties to persistant storage.]", "target": 0}
{"idx": 38127, "func": "Dump schemas.", "target": 0}
{"idx": 38128, "func": "The destination of the files to copy", "target": 0}
{"idx": 38129, "func": "If the name isn't a qualified name and isn't a primitive type, it's assumed to denote some arbitrary type parameter. //", "target": 0}
{"idx": 38130, "func": "caching turned on by the user", "target": 0}
{"idx": 38131, "func": "EQ == 0 (i.e. false) //[C]", "target": 0}
{"idx": 38132, "func": "not instantiable", "target": 0}
{"idx": 38133, "func": "read in the descriptor. Under weblogic, the descriptor is a weblogic specific subclass which has references to the implementation classes. These classes must, therefore, be in the classpath when the deployment descriptor is loaded from the .ser file", "target": 0}
{"idx": 38134, "func": "used by FTP plugin to clear directory cache", "target": 0}
{"idx": 38135, "func": "downloads directory", "target": 0}
{"idx": 38136, "func": "Invoke the method This.invokeMethod( name, Class [] sig, boolean )", "target": 0}
{"idx": 38137, "func": "Next, setup the plot area", "target": 0}
{"idx": 38138, "func": "// _tabbedResultsPanel = UIFactory.getInstance().createTabbedPane();", "target": 0}
{"idx": 38139, "func": "Next, try to locate this resource through the system classloader", "target": 0}
{"idx": 38140, "func": "first copy the children as the call to copy.add will modify the collection we're iterating on", "target": 0}
{"idx": 38141, "func": "append the SQL to return the generated identifier //TODO: suck into Insert", "target": 1}
{"idx": 38142, "func": "draw the radius grid lines, if any...", "target": 0}
{"idx": 38143, "func": "The association that triggered the critic. Its just possible the association is no longer there, in which case we return null", "target": 0}
{"idx": 38144, "func": "//{{{ createNode() method", "target": 0}
{"idx": 38145, "func": "//{{{ setRegexp() method", "target": 0}
{"idx": 38146, "func": "These variable names must have .displayName properties and agree with the getXXX()/setXXX() methods $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$", "target": 0}
{"idx": 38147, "func": "this is a HTML message", "target": 0}
{"idx": 38148, "func": "delete CreateActions which have this as their instantiation", "target": 0}
{"idx": 38149, "func": "//{{{ loadCache() method", "target": 0}
{"idx": 38150, "func": "Store session cookies as well as unexpired ones", "target": 0}
{"idx": 38151, "func": "//{{{ isPrefixActive() method", "target": 0}
{"idx": 38152, "func": "ownedProperty???", "target": 0}
{"idx": 38153, "func": "//sb.append((String) Model.getFacade().getBody(c));", "target": 0}
{"idx": 38154, "func": "ShapeGradientPaint titlePaint = new ShapeGradientPaint(new Color(255, 150, 150), new Color(255, 200, 200), 0, 0.7f, 0.7f, false);", "target": 0}
{"idx": 38155, "func": "valuePaint", "target": 0}
{"idx": 38156, "func": "(non-Javadoc) @see org.eclipse.ui.IWorkbenchWindowActionDelegate#init(org.eclipse.ui.IWorkbenchWindow)", "target": 0}
{"idx": 38157, "func": "condition: match all (AND) = 0, match any (OR) = 1 private AdapterNode conditionNode;", "target": 0}
{"idx": 38158, "func": "update the titleLabel MVW: This overrules the icon set initiallly... Why do we need this?", "target": 1}
{"idx": 38159, "func": "//subClassList);", "target": 0}
{"idx": 38160, "func": "attempting to expand non-word char", "target": 0}
{"idx": 38161, "func": "//TODO: is this right??", "target": 1}
{"idx": 38162, "func": "//{{{ makeServerScript() method", "target": 0}
{"idx": 38163, "func": "No, it is not.", "target": 0}
{"idx": 38164, "func": "////////////", "target": 0}
{"idx": 38165, "func": "write the dependency cache to the disk", "target": 0}
{"idx": 38166, "func": "errorPaint", "target": 0}
{"idx": 38167, "func": "//{{{ removeProgressListener() method", "target": 0}
{"idx": 38168, "func": "//i18n[PreferencesPanel.truncateTable=Truncate table before inserting data]", "target": 0}
{"idx": 38169, "func": "//{{{ getFirstVisibleLine() method", "target": 0}
{"idx": 38170, "func": "60 seconds", "target": 0}
{"idx": 38171, "func": "//topPanel.setBackground(UIManager.getColor(\"TextField.background\"));", "target": 0}
{"idx": 38172, "func": "//TreeNodeImpl", "target": 0}
{"idx": 38173, "func": "MRI behavior: With TZ equal to \"GMT\" or \"UTC\", Time.now is NOT considered as a proper GMT/UTC time: ENV['TZ']=\"GMT\" Time.now.gmt? ==> false ENV['TZ']=\"UTC\" Time.now.utc? ==> false Hence, we need to adjust for that.", "target": 0}
{"idx": 38174, "func": "FigEdgeModelElements should match here (they have no bounds)", "target": 0}
{"idx": 38175, "func": "control-click in virtual space inserts whitespace and moves caret", "target": 0}
{"idx": 38176, "func": "Property name used to define file name $NON-NLS-1$", "target": 0}
{"idx": 38177, "func": "Resize events", "target": 0}
{"idx": 38178, "func": "TODO (@author hubms): implement custom menuitem renderer", "target": 1}
{"idx": 38179, "func": "parse other header lines, looking for Content-Length", "target": 0}
{"idx": 38180, "func": "set text", "target": 0}
{"idx": 38181, "func": "Allow any pending interrupt to complete (OK because currentSampler == null)", "target": 0}
{"idx": 38182, "func": "since this entity will now be processed in the latest possible batch, we can be assured that it will come after all other associations, there's not need to continue checking.", "target": 0}
{"idx": 38183, "func": "End of first unit of work", "target": 0}
{"idx": 38184, "func": "If this is a hierarchical URI reference and prefix is a prefix of it, returns the portion of the path remaining after that prefix has been trimmed; null otherwise.", "target": 0}
{"idx": 38185, "func": "super(ModeCreatePolyEdge.class, \"edgeClass\", // Model.getMetaTypes().getAssociation(), name);", "target": 0}
{"idx": 38186, "func": "Add Help, Licence and Change Log nodes to the tree. i18n[HelpViewerWindow.help=Help]", "target": 0}
{"idx": 38187, "func": "Add all recipients to the collected addresses", "target": 0}
{"idx": 38188, "func": "obtain d", "target": 0}
{"idx": 38189, "func": "update the local flags and ensure that the MailboxInfo is correct", "target": 0}
{"idx": 38190, "func": "@see org.argouml.uml.diagram.ui.FigNodeModelElement#updateListeners( java.lang.Object, java.lang.Object)", "target": 0}
{"idx": 38191, "func": "table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 38192, "func": "We don't create an iterator stack until the root mapping itself has been returned by next once. After that the stack should be non-empty and the top iterator should yield true for hasNext. //", "target": 0}
{"idx": 38193, "func": "simple name specified == path in list + name", "target": 0}
{"idx": 38194, "func": "reset width to normal", "target": 0}
{"idx": 38195, "func": "Now, create an array large enough to hold the original and the new", "target": 0}
{"idx": 38196, "func": "Do layout even if problems occurred during import", "target": 0}
{"idx": 38197, "func": "\"x nodes and x edges\"", "target": 0}
{"idx": 38198, "func": "one second (=1000 ms)", "target": 0}
{"idx": 38199, "func": "set default html or text based on stored option ... can be overridden by setting the composer model", "target": 0}
{"idx": 38200, "func": "query only a single provider", "target": 0}
{"idx": 38201, "func": "c.insets = new Insets(1, 1, 1, 1);", "target": 0}
{"idx": 38202, "func": "(non-Javadoc) @see org.apache.jmeter.report.engine.ReportEngine#configure(org.apache.jorphan.collections.HashTree)", "target": 0}
{"idx": 38203, "func": "proxy is complete, return it", "target": 0}
{"idx": 38204, "func": "legendItemToolTipGenerator", "target": 0}
{"idx": 38205, "func": "Utility function to unregister all listeners registered through addElementListener. @see #addElementListener(Object, String)", "target": 0}
{"idx": 38206, "func": "//if autorange still below minimum then adjust by 1% (can be needed when minRange is very small):", "target": 0}
{"idx": 38207, "func": "These call assume ThreadContext = receiver.getRuntime().getCurrentContext()", "target": 0}
{"idx": 38208, "func": "if value was null, we do not need to do anything else with this column. Also assume that a value of \"\" is equivilent to null", "target": 0}
{"idx": 38209, "func": "calculate the result as if no exceptions", "target": 0}
{"idx": 38210, "func": "single jar processing", "target": 0}
{"idx": 38211, "func": "Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'", "target": 0}
{"idx": 38212, "func": "//System.err.println(\" getSign/\" + sign);", "target": 0}
{"idx": 38213, "func": "some kind of problem - tell user i18n[DataSetUpdateableTableModelImpl.error.preparingdelete=While preparing for delete, saw exception:\\n{0}]", "target": 0}
{"idx": 38214, "func": "Global # 1", "target": 0}
{"idx": 38215, "func": "the instant at which we will ask dtz what the difference between DST and standard time is", "target": 0}
{"idx": 38216, "func": "just a simple example", "target": 0}
{"idx": 38217, "func": "compute the point of intersection", "target": 0}
{"idx": 38218, "func": "in UML2, a td is a property of a stereotype in a profile", "target": 0}
{"idx": 38219, "func": "TODO: Need to add FileChooser", "target": 1}
{"idx": 38220, "func": "Range r2 =", "target": 0}
{"idx": 38221, "func": "if more than 4 vars, get values array too", "target": 0}
{"idx": 38222, "func": "Component strut2 = Box.createRigidArea(new Dimension(30, 5)); gridBagLayout.setConstraints(strut2, c); eastPanel.add(strut2); gridBagLayout.setConstraints(defaultButton, c); eastPanel.add(defaultButton);", "target": 0}
{"idx": 38223, "func": "//join = q.createJoinFragment(useThetaStyleJoin);", "target": 0}
{"idx": 38224, "func": "//{{{ recordTemporaryMacro() method", "target": 0}
{"idx": 38225, "func": "WORD END OPERATOR \\> if ????", "target": 0}
{"idx": 38226, "func": "Any Swing work done here needs to be queued to the AWT thread since we don't know what thread our event will arrive on", "target": 0}
{"idx": 38227, "func": "//{{{ delayedUpdate() method", "target": 0}
{"idx": 38228, "func": "not so sure this is even valid subtree. but if it was, it'd represent two unrelated table references...", "target": 0}
{"idx": 38229, "func": "we want to allow editing of read-only tables on-demand, but it would be confusing to include the \"Make Editable\" option when we are already in edit mode, so only allow that option when the background model is updateable AND we are not already editing", "target": 0}
{"idx": 38230, "func": "Returns the lower half bitmask for the given ASCII character.", "target": 0}
{"idx": 38231, "func": "N.B. this will be a config element, so we cannot use the setXXX() methods", "target": 0}
{"idx": 38232, "func": "//add the files to the command", "target": 0}
{"idx": 38233, "func": "find the matching super() constructor for the args", "target": 0}
{"idx": 38234, "func": "============== testcases for the algorithm implementations ==============", "target": 0}
{"idx": 38235, "func": "set the body text", "target": 0}
{"idx": 38236, "func": "TODO: MRI also can hadle Bignum here", "target": 1}
{"idx": 38237, "func": "end JcmdProcess.java", "target": 0}
{"idx": 38238, "func": "Create an empty but initialized instance of a UML Flow. @return an initialized UML Flow instance. TODO: This needs an extra parameter to specify the model/extent where the new element should be created.", "target": 1}
{"idx": 38239, "func": "used in insert()", "target": 0}
{"idx": 38240, "func": "i18n[UpdateManagerDialog.pathLabel=Path:]", "target": 0}
{"idx": 38241, "func": "//checkbox.setBackground(item.getColor());", "target": 0}
{"idx": 38242, "func": "// private Object[] fields;", "target": 0}
{"idx": 38243, "func": "//{{{ setDirty() method", "target": 0}
{"idx": 38244, "func": "//negatives not allowed and lower range bound is zero //use data range bound instead", "target": 0}
{"idx": 38245, "func": "Note that the attribute has been specified.", "target": 0}
{"idx": 38246, "func": "Set up a VSSGet task", "target": 0}
{"idx": 38247, "func": "TODO we should check if we need an vector or better another list implementation; checking also, if the list must be syncronized or not (performance)", "target": 1}
{"idx": 38248, "func": "TODO: Why are these different colors? - tfm", "target": 1}
{"idx": 38249, "func": "ClassProviders return Java class/module (in #defineOrGetClassUnder and #defineOrGetModuleUnder) when class/module is opened using colon syntax.", "target": 0}
{"idx": 38250, "func": "fixes the hang that can occur if we 'save as' to a new filename which requires re-sorting", "target": 0}
{"idx": 38251, "func": "Pump streams asynchronously", "target": 0}
{"idx": 38252, "func": "generalizations are not required to have unique names within a namespace", "target": 0}
{"idx": 38253, "func": "//FrameManager.getInstance().storeViews();", "target": 0}
{"idx": 38254, "func": "No passed in block, lets check next outer frame for one ('Proc.new')", "target": 0}
{"idx": 38255, "func": "I don't know of any other way to fix this, since invoking this command from a menu results in the focus owner being the menu until the menu goes away.", "target": 1}
{"idx": 38256, "func": "Get model listeners removed:", "target": 0}
{"idx": 38257, "func": "List of all variables used by all operands of this instruction", "target": 0}
{"idx": 38258, "func": "LOG.log(Level.FINE, \"getData returning raster = \" + translatedRaster);", "target": 0}
{"idx": 38259, "func": "//{{{ concatPath() method", "target": 0}
{"idx": 38260, "func": "i18n[I18n.SourceDirIsNotADirectory=Source directory {0} is not a directory.]", "target": 0}
{"idx": 38261, "func": "Start the session to be used for this request", "target": 0}
{"idx": 38262, "func": "No need for the hook now", "target": 0}
{"idx": 38263, "func": "bounds not relevant here", "target": 0}
{"idx": 38264, "func": "readdDateAsTimestamp checkbox", "target": 0}
{"idx": 38265, "func": "Sample that will get two sub results, simulates a web page load", "target": 0}
{"idx": 38266, "func": "Convert to a shorter String for test purposes @return the string value", "target": 0}
{"idx": 38267, "func": "Only do this for classifiers", "target": 0}
{"idx": 38268, "func": "Next, we define a few private methods that we'll use to manipulate the Java object contained within this Ruby object", "target": 0}
{"idx": 38269, "func": "Notation settings are different since, we know that, at a minimum, the isShowPath() setting can change because with implement PathContainer, so we make sure that we have a private copy of the notation settings.", "target": 0}
{"idx": 38270, "func": "line 1192", "target": 0}
{"idx": 38271, "func": "Copy the relevant portions of a date.", "target": 0}
{"idx": 38272, "func": "must be a \"here\" document", "target": 0}
{"idx": 38273, "func": "Only the head should be filled (not the text)", "target": 0}
{"idx": 38274, "func": "//can either be a property name string or a file", "target": 0}
{"idx": 38275, "func": "Not intended to be instantiated", "target": 0}
{"idx": 38276, "func": "i18n[exportconfig.databaseAliases=Database Aliases]", "target": 0}
{"idx": 38277, "func": "we just hit the last position", "target": 0}
{"idx": 38278, "func": "line 1439", "target": 0}
{"idx": 38279, "func": "No other uses of string in PGMLHandler", "target": 0}
{"idx": 38280, "func": "//preserve case on Cygwin when using 1.4 toURI:", "target": 0}
{"idx": 38281, "func": "clear view", "target": 0}
{"idx": 38282, "func": "no duplicates, check for all-whitespace string", "target": 0}
{"idx": 38283, "func": "@see org.argouml.uml.ui.SourcePathController#getAllModelElementsWithSourcePath()", "target": 0}
{"idx": 38284, "func": "if loadAutosave is false, we loaded an autosave file, so we set 'dirty' to true", "target": 0}
{"idx": 38285, "func": "//{{{ new API", "target": 0}
{"idx": 38286, "func": "//i18n[WhereClausePanel.hint=Where clause for the selected table]", "target": 0}
{"idx": 38287, "func": "this one is here because the changes to support ResourceCollections have broken Magic's JUnitTestTask. The task adds a FileSet to a BatchTest instance using the Java API and without telling the FileSet about its project instance. The original code would pass in project on the call to getDirectoryScanner - which is now hidden deep into Resources.iterator() and not reachable.", "target": 0}
{"idx": 38288, "func": "If you're closing down the ConnectionProvider chances are an is not a real big deal, just warn", "target": 0}
{"idx": 38289, "func": "the first child must be the signed part", "target": 0}
{"idx": 38290, "func": "todo: we should really just collect these from the various SelectExpressions, rather than regenerating here", "target": 1}
{"idx": 38291, "func": "now tableAndColumns[0] contains the table name and tableAndColumns[1] contains the bracketed list of columns.", "target": 0}
{"idx": 38292, "func": "drop empty trailing content", "target": 0}
{"idx": 38293, "func": "//The pw. If user name is anonymous this can be anything. But it has to be supplied anyway.", "target": 0}
{"idx": 38294, "func": "src1: o--------o src2: o----o res: o----o Reuse the rest of src1", "target": 0}
{"idx": 38295, "func": "These must not be internationalized since SQL tokens must be in English //No I18N //No I18N", "target": 0}
{"idx": 38296, "func": "$~: match-data", "target": 0}
{"idx": 38297, "func": "Get the Association and its connections. Iterate over all the AssociationEnds and check that each connected classifier is in the same sub-system or model", "target": 0}
{"idx": 38298, "func": "4.5.2.9 Class", "target": 0}
{"idx": 38299, "func": "@see org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode#isStandalone()", "target": 0}
{"idx": 38300, "func": "Some actions dont have accelerators", "target": 0}
{"idx": 38301, "func": "namespace context", "target": 0}
{"idx": 38302, "func": "The type arguments of a generic super type must not be a wildcard. //", "target": 0}
{"idx": 38303, "func": "Supported format: predecessors number \":\" action The 3 parts of the string to generate:", "target": 0}
{"idx": 38304, "func": "make sure configuration is saved when exiting", "target": 0}
{"idx": 38305, "func": "TODO: These should get replaced immediately by the creating initialization code, but make sure we've got a default just in case.", "target": 0}
{"idx": 38306, "func": "init component before querying for sourceFile", "target": 0}
{"idx": 38307, "func": "i18n[sqlval.anonymous=Anonymous]", "target": 0}
{"idx": 38308, "func": "N.B. need to separate protocol from authority otherwise http://server would match https://erver could use separate fields, but simpler to combine them", "target": 0}
{"idx": 38309, "func": "save message to destination folder", "target": 0}
{"idx": 38310, "func": "Simple cases: no mix-ins for no inheritance or for a single base class. //", "target": 0}
{"idx": 38311, "func": "SS: Display complete column header as tooltip if the column isn't wide enough to display it", "target": 0}
{"idx": 38312, "func": "The new size can not be smaller than the minimum.", "target": 0}
{"idx": 38313, "func": "let us hard coding the gpg for each connection. Later we should support also other variants (like smime)", "target": 0}
{"idx": 38314, "func": "ignore this row, the collection is in process of being loaded somewhere further \"up\" the stack", "target": 0}
{"idx": 38315, "func": "must be overridden to make sense (I didn't want to make it abstract because it might not be required)", "target": 1}
{"idx": 38316, "func": "LayerPerspective layer = DiagramUtils.getActiveDiagram().getLayer();", "target": 0}
{"idx": 38317, "func": "//classes just get the classname", "target": 0}
{"idx": 38318, "func": "//{{{ pathsEqual() method", "target": 0}
{"idx": 38319, "func": "c.gridy = 0; c.gridx = 3; JLabel twoLabel = new JLabel(\"ad\"); gb.setConstraints(twoLabel, c); _mainPanel.add(twoLabel);", "target": 0}
{"idx": 38320, "func": "This should be consistent with paintControl().", "target": 0}
{"idx": 38321, "func": "one optional, one required args", "target": 0}
{"idx": 38322, "func": "try to find JOnAS specific convention name", "target": 0}
{"idx": 38323, "func": "//if we could not register a synchronization, //do the before/after completion callbacks //ourself (but we need to let jdbcContext //know that this is what we are going to //do, so it doesn't keep trying to register //synchronizations)", "target": 0}
{"idx": 38324, "func": "update table set <columnName>_2 = <columnName>", "target": 0}
{"idx": 38325, "func": "ok, it's a socket...set values accordingly just using AF_INET since we can't tell from SocketChannel...", "target": 0}
{"idx": 38326, "func": "in any case, this is only needed for the directory chooser (why?), so we add a check. otherwise poor Rick will go insane.", "target": 0}
{"idx": 38327, "func": "THREAD PROPERTIES", "target": 0}
{"idx": 38328, "func": "we can't draw quadrants without a valid y-axis", "target": 0}
{"idx": 38329, "func": "This was originaly done every time. and the count of instantiated objects was amazing", "target": 0}
{"idx": 38330, "func": "LOG.log(Level.INFO, \"Configuration saved to {0}\\n\", url);", "target": 0}
{"idx": 38331, "func": "line 1169", "target": 0}
{"idx": 38332, "func": "used from testsuite", "target": 0}
{"idx": 38333, "func": "negatives = true;", "target": 0}
{"idx": 38334, "func": "6", "target": 0}
{"idx": 38335, "func": "fill in list of column names to check against", "target": 0}
{"idx": 38336, "func": "i18n[AboutBoxDialog.error.systemprops=Error occured displaying System Properties]", "target": 0}
{"idx": 38337, "func": "line 495", "target": 0}
{"idx": 38338, "func": "//- JMX", "target": 0}
{"idx": 38339, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#ownInsertsAreVisible(int)", "target": 0}
{"idx": 38340, "func": "the vfs browser has what you might call a design flaw, it doesn't update properly unless the vfs update for a parent arrives before any updates for the children. sorting the list alphanumerically guarantees this.", "target": 0}
{"idx": 38341, "func": "TODO: should have an image of a wizard or some logo", "target": 1}
{"idx": 38342, "func": "private JLabel iconLabel = new JLabel();", "target": 0}
{"idx": 38343, "func": "Always add plugins - there is not a good way to compare plugin zips and their extracted contents at the moment. TODO: Determine the best way to derive the filesize and checksum of the plugin zip that was last extracted. Should we keep it around? How about using the current release.xml file ? Come to think of it, perhaps we shouldn't be computing the checksum of any existing files, why don't we just get it from the current release.xml file?", "target": 1}
{"idx": 38344, "func": "uninstantiable", "target": 0}
{"idx": 38345, "func": "Record now as the last time we checked for updates.", "target": 0}
{"idx": 38346, "func": "load config-file from disk", "target": 0}
{"idx": 38347, "func": "LOG.log(Level.FINE, \"Final point #\" + count + \" \" + result + \" offset of \" + scaledOffset);", "target": 0}
{"idx": 38348, "func": "//specifies valid actions", "target": 0}
{"idx": 38349, "func": "test if a task is already running", "target": 0}
{"idx": 38350, "func": "saving last selected message to the folder", "target": 0}
{"idx": 38351, "func": "listener updates selection status, when ever a message selection changes", "target": 0}
{"idx": 38352, "func": "toolTipText", "target": 0}
{"idx": 38353, "func": "if line doesn't start with \"From ???@???\" or line length is 0 -> save everything in StringBuffer", "target": 0}
{"idx": 38354, "func": "if beyond the end then set to the end", "target": 0}
{"idx": 38355, "func": "initialize file observer thread with a reference to our beanshellScripts map", "target": 0}
{"idx": 38356, "func": "The pw. If user name is anonymous this can be anything. But it has to be supplied anyway.", "target": 0}
{"idx": 38357, "func": "this is a paint we don't recognise", "target": 0}
{"idx": 38358, "func": "selectedMenuItem.setCharset(e.getCharset());", "target": 0}
{"idx": 38359, "func": "dump usec, not msec", "target": 0}
{"idx": 38360, "func": "If a user has set parameters in one test, and then selects a different test which supports the same parameters, those parameters should have the same values that they did in the original test.", "target": 0}
{"idx": 38361, "func": "//{{{ Create the timer used by incremental search", "target": 0}
