{"idx": 0, "func": "Only calculate the descriptor name once", "target": 0}
{"idx": 1, "func": "Let's make it a bit more difficult by setting the target:", "target": 0}
{"idx": 2, "func": "Check random number", "target": 0}
{"idx": 3, "func": "only load global abbrevs if user abbrevs file could not be loaded", "target": 0}
{"idx": 4, "func": "//////////////////////////////////////////////////////////////public methods", "target": 0}
{"idx": 5, "func": "//TODO: I suspect this isn't needed call isn't needed but don't remove till out of alpha/beta stage", "target": 1}
{"idx": 6, "func": "This implementation was changed to not introduce multi line content.", "target": 0}
{"idx": 7, "func": "//{{{ getSearchBar() method", "target": 0}
{"idx": 8, "func": "write charset to header", "target": 0}
{"idx": 9, "func": "//height = (int)glyphs.getLogicalBounds().getHeight();", "target": 0}
{"idx": 10, "func": "Assume it is the URL", "target": 0}
{"idx": 11, "func": "We still have to bind a value, or else the PS will throw an exception.", "target": 0}
{"idx": 12, "func": "Change the parent (which was the class static) to the class instance We really need to check if we're a static inner class here first... but for some reason Java won't show the static modifier on our fake inner classes... could generate a flag field.", "target": 1}
{"idx": 13, "func": "parse the rdiff", "target": 0}
{"idx": 14, "func": "//0000 0000 0001 //0000 0000 0010 //0000 0000 0100 //0000 0000 1000 //0001 0000 0000 //0010 0000 0000 //0100 0000 0000 //1000 0000 0000", "target": 0}
{"idx": 15, "func": "i18n[userscript.execOutput=Script execution output]", "target": 0}
{"idx": 16, "func": "i18n[sqlbookmark.enterSql=Please enter a bookmark sql]", "target": 0}
{"idx": 17, "func": "//Only resize once.", "target": 0}
{"idx": 18, "func": "//check that older is up to date with a newer dest", "target": 0}
{"idx": 19, "func": "Absolute value, since the relative x positions are reversed for horizontal orientation", "target": 0}
{"idx": 20, "func": "This test should work whether or not all Nulls are equal", "target": 0}
{"idx": 21, "func": "not found at all.", "target": 0}
{"idx": 22, "func": "i.e. GET", "target": 0}
{"idx": 23, "func": "//{{{ getParentElement() method", "target": 0}
{"idx": 24, "func": "Done", "target": 0}
{"idx": 25, "func": "double-testing args.length here, but it avoids duplicating the proc-setup code in two places", "target": 0}
{"idx": 26, "func": "remember previously selected folder", "target": 0}
{"idx": 27, "func": "TODO: For JFreeChart 1.2.0, this method should go in the ShapeUtilities class", "target": 1}
{"idx": 28, "func": "i18n[ColorPropertiesPanel.objectTreeBackgroundColorChooserDialogTitle=Select Background Color for Object Tree]", "target": 0}
{"idx": 29, "func": "//{{{ handleError() method", "target": 0}
{"idx": 30, "func": "don't change name if merging", "target": 0}
{"idx": 31, "func": "Fill the polygon", "target": 0}
{"idx": 32, "func": "//{{{ focusOnTextArea() method", "target": 0}
{"idx": 33, "func": "TODO: RESTRICT VIOLATION", "target": 1}
{"idx": 34, "func": "Recognizer for ModelElements with package visibility. TODO: This method name was chosen for compatibility with the existing naming scheme, but has the potential of clashing with some future use. @param handle candidate @return true if handle has package visibility", "target": 1}
{"idx": 35, "func": "verify all events were fired correctly", "target": 0}
{"idx": 36, "func": "build the command line from what we got the format is ss Get VSS items [-G] [-H] [-I-] [-N] [-O] [-R] [-V] [-W] [-Y] [-?] as specified in the SS.EXE help", "target": 0}
{"idx": 37, "func": "Implements backspace functionality", "target": 0}
{"idx": 38, "func": "no title looks better", "target": 0}
{"idx": 39, "func": "//i18n[ColumnDetailsDialog.cancelButtonLabel=Cancel]", "target": 0}
{"idx": 40, "func": "Strange, but the Link.getConnection() returns a Collection, not a List! This is a bug, compared to the UML standard (IMHO, mvw). Hence, the LinkEnd is added to the end instead...", "target": 1}
{"idx": 41, "func": "//i18n[CSVSettingsPanel.dateFormat=Date format]", "target": 0}
{"idx": 42, "func": "-ordinary", "target": 0}
{"idx": 43, "func": "the clone references the same dataset as the original", "target": 0}
{"idx": 44, "func": "Create the analysis dialog using the EDT, and wait for it to finish.", "target": 0}
{"idx": 45, "func": "JASON: Messages height should be stored with this.", "target": 0}
{"idx": 46, "func": "equivalent to MRI case '\\0':", "target": 0}
{"idx": 47, "func": "assert level == 0;", "target": 0}
{"idx": 48, "func": "display downloaded message count in statusbar", "target": 0}
{"idx": 49, "func": "showing the month number", "target": 0}
{"idx": 50, "func": "-V Label an existing file or project version", "target": 0}
{"idx": 51, "func": "TableModel tm = new DefaultTableModel(new String [] { \"Table\", \"Column\" }, 4) { private static final long serialVersionUID = -8826914717673025881L; public boolean isCellEditable(int rowIndex, int columnIndex) { return false; } };", "target": 0}
{"idx": 52, "func": "TODO: In the next line, I should use buildGuard(), but it doesn't show the guard on the diagram... Why? (MVW)", "target": 1}
{"idx": 53, "func": "this should never happen", "target": 0}
{"idx": 54, "func": "Handle Flow exceptions, just propagating them", "target": 0}
{"idx": 55, "func": "'^'", "target": 0}
{"idx": 56, "func": "add all instance and static methods", "target": 0}
{"idx": 57, "func": "this message is already cached", "target": 0}
{"idx": 58, "func": "MRI behavior: value given in seconds; converted to Float; less than or equal to zero returns immediately; returns nil", "target": 0}
{"idx": 59, "func": "reload complete SchemaInfo", "target": 0}
{"idx": 60, "func": "//{{{ Miscellaneous methods", "target": 0}
{"idx": 61, "func": "First try with Project.", "target": 0}
{"idx": 62, "func": "// public SQLExecutionInfo(int idx) // { // this(idx, \"\"); // }", "target": 0}
{"idx": 63, "func": "First, try to find a matching constructor accepting a ViolatedConstraintNameExtracter param...", "target": 0}
{"idx": 64, "func": "This means the cookie was wrong for the URL", "target": 0}
{"idx": 65, "func": "// private ResultSet mockResultSet = null; // private static int[] columnIndices = new int[] { 4, 6, 18, 9, 7, 13, 12, 5, 8, 10, 11, 14, 15, 16, 17 };", "target": 0}
{"idx": 66, "func": "Defer initialization until we're visible", "target": 0}
{"idx": 67, "func": "This method is called from a thread. In case listeners update Swing controls we invoke later here.", "target": 0}
{"idx": 68, "func": "named parameter", "target": 0}
{"idx": 69, "func": "//{{{ setExpansion() method", "target": 0}
{"idx": 70, "func": "This means no sample is saved", "target": 0}
{"idx": 71, "func": "Quote original message - different methods for text and html", "target": 0}
{"idx": 72, "func": "i18n[xmlReformatter.malformedXmlAt=Malformed XML. No ending tag seen for text starting at:\\n{0}]", "target": 0}
{"idx": 73, "func": "case CONSTNODE: handleUselessWarn(node, \"a constant\"); return;", "target": 0}
{"idx": 74, "func": "Java and MRI definitions of remainder are the same.", "target": 0}
{"idx": 75, "func": "horizontal rectangle", "target": 0}
{"idx": 76, "func": "getContentPane().validate();", "target": 0}
{"idx": 77, "func": "When we leave this block we can be sure all data is really stored in main memory before the new threads start, the new threads will for sure load the data from main memory. This probably is slightly paranoid.", "target": 0}
{"idx": 78, "func": "//{{{ FirstLine class", "target": 0}
{"idx": 79, "func": "TODO: Should we be doing anything on deleted elements? This throws an exception on remove events. - skip for now - tfm", "target": 1}
{"idx": 80, "func": "prompt user for profile", "target": 0}
{"idx": 81, "func": "force reopen on next sample", "target": 0}
{"idx": 82, "func": "first, create bucket for each provider", "target": 0}
{"idx": 83, "func": "if it was previously unreferenced, we need to flush in order to get its state into the database in order to execute query", "target": 0}
{"idx": 84, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsBatchUpdates()", "target": 0}
{"idx": 85, "func": "There's no global copy either", "target": 0}
{"idx": 86, "func": "The interpretation of an ambiguous name is context sensitive. We disallow a generic eval( ).", "target": 0}
{"idx": 87, "func": "Cell Import/Export file not found for user - first time user ran pgm.", "target": 0}
{"idx": 88, "func": "We don't care about the value - just want to see if it throws", "target": 0}
{"idx": 89, "func": "//$NON-NLS-1$ //$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$ //$NON-NLS-1$", "target": 0}
{"idx": 90, "func": "@GuardedBy(\"this\") Buffered reader", "target": 0}
{"idx": 91, "func": "TODO: Find a way to replace this dependency on Project", "target": 1}
{"idx": 92, "func": "we will highlight tokens until we reach a good stopping place. the first obvious stopping place is the end of the document. the lexer will return null at the end of the document and wee need to stop there.", "target": 0}
{"idx": 93, "func": "Dispatch to an encoding-specific reader method to populate the readBuffer.", "target": 0}
{"idx": 94, "func": "warn or GNU", "target": 0}
{"idx": 95, "func": "date time timezone definition", "target": 0}
{"idx": 96, "func": "return the override, if there is one...", "target": 0}
{"idx": 97, "func": "Remote double-quotes", "target": 0}
{"idx": 98, "func": "only re-select if only a single row was formerly selected", "target": 0}
{"idx": 99, "func": "Copy all the Features", "target": 0}
{"idx": 100, "func": "Invoke setScalarColumnText on each constructor argument.", "target": 0}
{"idx": 101, "func": "skip all whole exception segments in the range", "target": 0}
{"idx": 102, "func": "String/Buffer to read it into", "target": 0}
{"idx": 103, "func": "add external processing command field and button", "target": 0}
{"idx": 104, "func": "//{{{ updateButtons() method", "target": 0}
{"idx": 105, "func": "match all matches", "target": 0}
{"idx": 106, "func": "i18n[popupeditableIoPanel.exportError100=Export Error]", "target": 0}
{"idx": 107, "func": "If it is a list type value...", "target": 0}
{"idx": 108, "func": "//{{{ getColumnName() method", "target": 0}
{"idx": 109, "func": "infinity", "target": 0}
{"idx": 110, "func": "//ISession sourceSession = sessionInfoProv.getCopySourceSession(); //ISession destSession = sessionInfoProv.getCopyDestSession();", "target": 0}
{"idx": 111, "func": "compare existing entries' hashcode with this", "target": 0}
{"idx": 112, "func": "load mail extension handler", "target": 0}
{"idx": 113, "func": "1000..109F;", "target": 0}
{"idx": 114, "func": "not needed", "target": 1}
{"idx": 115, "func": "append newline", "target": 0}
{"idx": 116, "func": "default : 0 => OpaqueExpression set to 1 for test", "target": 0}
{"idx": 117, "func": "index of left-most brace index of right-most brace", "target": 0}
{"idx": 118, "func": "score message", "target": 0}
{"idx": 119, "func": "i18n[favs.deletelFolder=Are you sure to want to delete the folder \\\"{0}\\\" and all of its contents?]", "target": 0}
{"idx": 120, "func": "register as a listener for mouse events", "target": 0}
{"idx": 121, "func": "pre Kaffe 1.1.2", "target": 0}
{"idx": 122, "func": "@see javax.swing.text.Document#getDefaultRootElement()", "target": 0}
{"idx": 123, "func": "//{{{ indexDirectory() method", "target": 0}
{"idx": 124, "func": "//{{{ record() method", "target": 0}
{"idx": 125, "func": "attempt to load the found library", "target": 0}
{"idx": 126, "func": "Is there an id attribute?", "target": 0}
{"idx": 127, "func": "class name (search in the classpath provided for the ejbjar element)", "target": 0}
{"idx": 128, "func": "else ignore", "target": 0}
{"idx": 129, "func": "special cases for use cases Extending use cases and use case that are being included are not required to have associations.", "target": 0}
{"idx": 130, "func": "table is empty -> just display empty table", "target": 0}
{"idx": 131, "func": "//remove any null elements", "target": 0}
{"idx": 132, "func": "bsh.evalOnly", "target": 0}
{"idx": 133, "func": "(non-Javadoc) @see org.columba.ristretto.message.Message#getMimePart(int)", "target": 0}
{"idx": 134, "func": "FB00..FB4F;", "target": 0}
{"idx": 135, "func": "TODO Ignore for now.", "target": 1}
{"idx": 136, "func": "sorting is disabled", "target": 0}
{"idx": 137, "func": "otherwise look up the stroke table", "target": 0}
{"idx": 138, "func": "all the data from the clob has been read. make sure there are no newlines in it", "target": 0}
{"idx": 139, "func": "constraintKeys looks like this --> `REFERENCES pubs.dbo.foo (fooid, quuxid)' chop off \"REFERENCES \"", "target": 0}
{"idx": 140, "func": "'sync' is needed - otherwise 2 threads can load the same class twice, resulting in LinkageError: duplicated class definition. findLoadedClass avoids that, but without sync it won't work.", "target": 0}
{"idx": 141, "func": "//find the out-of-date targets:", "target": 0}
{"idx": 142, "func": "retrieve an item", "target": 0}
{"idx": 143, "func": "this is a property of the table, which we are updating", "target": 0}
{"idx": 144, "func": "//{{{ updateScrollBars() method", "target": 0}
{"idx": 145, "func": "Initialze GEF's version of the loader too TODO: We should probably be passing icons that we loaded ourselves but there doesn't seem to be a way to do that with GEF - tfm", "target": 1}
{"idx": 146, "func": "if is a classifier role, it must return all the related messages.", "target": 0}
{"idx": 147, "func": "This handles the case of a substitution group. //", "target": 0}
{"idx": 148, "func": "Set up the DataSource - maxPool is a parameter, so the same code can also be used for setting up the per-thread pools.", "target": 0}
{"idx": 149, "func": "?o | boolean | True if file1 exists and is owned by the caller's effective uid", "target": 0}
{"idx": 150, "func": "KeyEvent.isActionKey() method", "target": 0}
{"idx": 151, "func": "Read the attribute name.", "target": 0}
{"idx": 152, "func": "(MTransition)", "target": 0}
{"idx": 153, "func": "//NOTE: this is not updated when properties are fetched lazily!", "target": 0}
{"idx": 154, "func": "N.B. Must use LinkedHashMap for field type XStream creates a plain HashMap if one uses Map as the field type.", "target": 0}
{"idx": 155, "func": "This will catch inherited features, or additional things we don't want to worry about.", "target": 0}
{"idx": 156, "func": "NOTE: this assumes something about how propertySelectFragment is implemented by the subclass! was toUnqotedAliasStrings( getdiscriminatorColumnName() ) before - now tried to remove that unqoting and missing aliases..", "target": 1}
{"idx": 157, "func": "//ChangePackage", "target": 0}
{"idx": 158, "func": "Just add a 'not' parent.", "target": 0}
{"idx": 159, "func": "special case - if the underlying rectangle uses ints we need to create one that uses doubles", "target": 0}
{"idx": 160, "func": "i18n[graph.formats=Formats]", "target": 0}
{"idx": 161, "func": "Lots of preconditions checked here... Once things are running smoothly we might comment these out (That's what assertions are for).", "target": 0}
{"idx": 162, "func": "fast and safe respond_to? call site logic", "target": 0}
{"idx": 163, "func": "Create an empty but initialized instance of a UML Permission. @return an initialized UML Permission instance. TODO: This needs an extra parameter to specify the model/extent where the new element should be created.", "target": 1}
{"idx": 164, "func": "gradient paint transformer", "target": 0}
{"idx": 165, "func": "the contract of EntityTuplizer.determineConcreteSubclassEntityName says that returning null is an indication that the specified entity-name (this.getEntityName) should be used.", "target": 0}
{"idx": 166, "func": "doc =", "target": 0}
{"idx": 167, "func": "//woops we got an instance of another class hierarchy branch", "target": 0}
{"idx": 168, "func": "//with two-deep subqueries, the same alias would get generated for //both using the old method (criteriaQuery.generateSQLAlias()), so //that is now used as a fallback if the main criteria alias isn't set", "target": 0}
{"idx": 169, "func": "======== panel1 ========", "target": 0}
{"idx": 170, "func": "i18n[GeneralPreferencesPanel.paths=SQuirreL paths]", "target": 0}
{"idx": 171, "func": "//{{{ cut() method", "target": 0}
{"idx": 172, "func": "listener cannot be null here", "target": 0}
{"idx": 173, "func": "Needed by AbstractTestElement. Also TestElementConverter and TestElementPropertyConverter for handling empty comments //$NON-NLS-1$ N.B. Comments originally only applied to Test Plans, hence the name - which can now not be easily changed", "target": 0}
{"idx": 174, "func": "key", "target": 0}
{"idx": 175, "func": "------------- tree structure -----------------", "target": 0}
{"idx": 176, "func": "Renderer for tree.", "target": 0}
{"idx": 177, "func": "To be really sure, let's add the operation that is linked to the action in the model, too - if it is not listed yet. We need this, incase an operation is moved out of the package, or maybe with imported XMI...", "target": 0}
{"idx": 178, "func": "Test non-empty parameters", "target": 0}
{"idx": 179, "func": "'outlineStroke' : immutable, no need to clone reference", "target": 0}
{"idx": 180, "func": "Add stored proc parent node.", "target": 0}
{"idx": 181, "func": "Sets the body of an expression. TODO: This operation is fooling the user in thinking that the body of the object is changed. Instead, a new object is created. There is no other way: a MExpression can not be altered, once created! So, this operation returns a newly created object instead. @param handle The expression to modify. @param body The body to set. @return The newly created expression.", "target": 1}
{"idx": 182, "func": "public int getPixelWidth() { int pixelByCm = (int) (Toolkit.getDefaultToolkit().getScreenResolution() CM_BY_INCH + 0.5); return (int)(_format.getWidth() pixelByCm + 0.5); } public int getPixelHeight() { int pixelByCm = (int) (Toolkit.getDefaultToolkit().getScreenResolution() CM_BY_INCH + 0.5); return (int)(_format.getHeight() pixelByCm + 0.5); }", "target": 0}
{"idx": 183, "func": "create the tree of objects", "target": 0}
{"idx": 184, "func": "this.offset -> next of '{'", "target": 0}
{"idx": 185, "func": "the State of a ClassifierInState is removed, so let's reduce it to a Classifier.", "target": 0}
{"idx": 186, "func": "to deal with empty subexpressions", "target": 0}
{"idx": 187, "func": "Windows is LLP64", "target": 0}
{"idx": 188, "func": "Add styles to use for different types of status messages", "target": 0}
{"idx": 189, "func": "if not shorthands...", "target": 0}
{"idx": 190, "func": "break before start of view", "target": 0}
{"idx": 191, "func": "only track progress for files larger than 100kb in verbose mode", "target": 0}
{"idx": 192, "func": "use old property name for backwards compatibility", "target": 0}
{"idx": 193, "func": "//{{{ removeExtendedAttributes() method", "target": 0}
{"idx": 194, "func": "may only occur as child of the model or in a package", "target": 0}
{"idx": 195, "func": "//replace the last 0s by the chars contained in s", "target": 0}
{"idx": 196, "func": "return result", "target": 0}
{"idx": 197, "func": "expect getFile for updated files that will be removed", "target": 0}
{"idx": 198, "func": "------------ other methods ------------", "target": 0}
{"idx": 199, "func": "Since the user only wants to be notified of updates at startup, return here, thereby freeing up the thread.", "target": 0}
{"idx": 200, "func": "(non-Javadoc) @see org.eclipse.swt.events.FocusListener#focusLost( org.eclipse.swt.events.FocusEvent)", "target": 0}
{"idx": 201, "func": "@see org.argouml.model.ModelEventPump#removeClassModelEventListener( java.beans.PropertyChangeListener, java.lang.Object, java.lang.String[])", "target": 0}
{"idx": 202, "func": "execute command", "target": 0}
{"idx": 203, "func": "Extra care to be taken since allPosters can be reset while this method is running.", "target": 0}
{"idx": 204, "func": "//{{{ pushElement() method", "target": 0}
{"idx": 205, "func": "i18n[DownloadStatusEventHandler.downloadingUpdatesMsg=Downloading Files]", "target": 0}
{"idx": 206, "func": "we are playing some games with the lexer for efficiency. we could just create a new lexer each time here, but instead, we will just reset it so that it thinks it is starting at the beginning of the document but reporting a funny start colorStartPos. Reseting the lexer causes the close() method on the reader to be called but because the close() method has no effect on the DocumentReader, we can do this.", "target": 0}
{"idx": 207, "func": "handle an error in conversion of text to object", "target": 0}
{"idx": 208, "func": "I guess this can happen as a result of a bad file read? In this case, it would be better to replace the incorrect value with anything valid, e.g. the default value for the property. But for the time being, I just prefer to be aware of any problems occuring here, most likely programming errors, so I'll bail out. (MS Note) Can't bail out - newly create elements have blank values and must get the defaults. Also, when loading previous versions of jmeter test scripts, some values may not be right, and should get default values - MS TODO: review this and possibly change to:", "target": 1}
{"idx": 209, "func": "@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)", "target": 0}
{"idx": 210, "func": "UIManager.setLookAndFeel(lafName);", "target": 0}
{"idx": 211, "func": "Will be called asynchronously to the event dispatch thread", "target": 0}
{"idx": 212, "func": "(non-Javadoc) @see javax.swing.table.TableModel#isCellEditable(int, int)", "target": 0}
{"idx": 213, "func": "Allow Headers to override Host setting //$NON-NLS-1$ //Host", "target": 0}
{"idx": 214, "func": "Fill 2 of value (byte) 33 Fill 6 of value (byte) -19 Fill 4 of value (byte) 33 Fill 2 of value (byte) -19 Fill 2 of value (byte) 33 Fill 22 of value (byte) -19", "target": 0}
{"idx": 215, "func": "@bgen(jjtree) ReturnStatement", "target": 0}
{"idx": 216, "func": "line 851", "target": 0}
{"idx": 217, "func": "create composite", "target": 0}
{"idx": 218, "func": "Check for uninitialised instance variables and constructor.", "target": 0}
{"idx": 219, "func": "@see org.tigris.gef.presentation.Fig#getLineWidth()", "target": 0}
{"idx": 220, "func": "search in specific criteria", "target": 0}
{"idx": 221, "func": "//e.printStackTrace();", "target": 0}
{"idx": 222, "func": "normal file descriptor..try to work with it", "target": 0}
{"idx": 223, "func": "threadVar;", "target": 0}
{"idx": 224, "func": "Not currently needed by any Remoteable classes Anyway, would probably be too expensive in terms of network traffic void testIterationStart(LoopIterationEvent event);", "target": 0}
{"idx": 225, "func": "Can be missing, e.g. on redirect", "target": 0}
{"idx": 226, "func": "Maybe we should consider creating a global cache for the random files to make JMeter more efficient.", "target": 1}
{"idx": 227, "func": "Get the generic clarifier for this designer/poster. @see org.argouml.cognitive.Poster#getClarifier()", "target": 0}
{"idx": 228, "func": "@see org.tigris.gef.base.PathConv#setClosestPoint(java.awt.Point)", "target": 0}
{"idx": 229, "func": "constructor for the class", "target": 0}
{"idx": 230, "func": "Cannot pass byte array to Class.forName", "target": 0}
{"idx": 231, "func": "check if filename defined", "target": 0}
{"idx": 232, "func": "// This assumes you will want to ignore any update counts", "target": 0}
{"idx": 233, "func": "(non-Javadoc) @see org.columba.mail.imap.IImapServer#getMessageSourceStream(java.lang.Object, org.columba.mail.folder.imap.IMAPFolder)", "target": 0}
{"idx": 234, "func": "@see org.argouml.uml.diagram.state.ui.FigState#getInitialHeight()", "target": 0}
{"idx": 235, "func": "Sybase 12.5 doesn't support quotation marks for identifiers, yet reports \" as the identifier quote string - go figure!", "target": 0}
{"idx": 236, "func": "======== scrollPane4 ========", "target": 0}
{"idx": 237, "func": "// private final static ILogger s_log = // LoggerController.createLogger(CopyTableCommand.class);", "target": 0}
{"idx": 238, "func": "Save the .argo entry TODO: Cyclic dependency with PersistenceManager move PersistenceManager..getProjectBaseName() someplace else", "target": 1}
{"idx": 239, "func": "multiplicity", "target": 0}
{"idx": 240, "func": "Condition LABEL $NON-NLS-1$", "target": 0}
{"idx": 241, "func": "Template bodies", "target": 0}
{"idx": 242, "func": "assume this is a newly instantiated transient object which should be saved rather than updated", "target": 0}
{"idx": 243, "func": "Remove the object and add it as a sibling. //", "target": 0}
{"idx": 244, "func": "update the priority of the critic to be the same priority as the decision", "target": 0}
{"idx": 245, "func": "no tags, so cannot be XML", "target": 0}
{"idx": 246, "func": "We want something of the form: -d \">=YYYY-MM-dd\"", "target": 0}
{"idx": 247, "func": "//do not return a proxy! //(this option indicates we are initializing a proxy)", "target": 0}
{"idx": 248, "func": "If we don't invokeLater here no Short-Cut-Key is sent to the internal frame seen under java version \"1.4.1_01\" and Linux", "target": 0}
{"idx": 249, "func": "full-pathname specified == parent dir of path in list", "target": 0}
{"idx": 250, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#deletesAreDetected(int)", "target": 0}
{"idx": 251, "func": "//i18n[ExcelSettingsPanel.sheetName=Sheet name]", "target": 0}
{"idx": 252, "func": "All the other headers are set up by HTTPSampler2.setupConnection()", "target": 0}
{"idx": 253, "func": "@see org.argouml.model.PseudostateKind#getInitial()", "target": 0}
{"idx": 254, "func": "rb_cstr_to_dbl case", "target": 0}
{"idx": 255, "func": "build a list of unique words in all visible buffers", "target": 0}
{"idx": 256, "func": "ignore rules for nodes of different class", "target": 0}
{"idx": 257, "func": "void methods should work", "target": 0}
{"idx": 258, "func": "There is no executable command, so we'd better nix the whole deal. //", "target": 0}
{"idx": 259, "func": "super calls from proxies must use reflected method FIXME: possible to make handles do the superclass call?", "target": 1}
{"idx": 260, "func": "title x-axis label y-axis label data create legend? generate tooltips? generate URLs?", "target": 0}
{"idx": 261, "func": "Add our standard marker. //", "target": 0}
{"idx": 262, "func": "continue...; we'll find out if it ends up not getting saved later", "target": 0}
{"idx": 263, "func": "Ignore if there is not substantial change. //", "target": 0}
{"idx": 264, "func": "(non-Javadoc) @see org.columba.mail.imap.IImapServer#recentChanged(java.lang.String, int)", "target": 0}
{"idx": 265, "func": "Register tabs to display in the details panel for table nodes.", "target": 0}
{"idx": 266, "func": "different border for recurrent events ActivityInteractor.setStaticOverride( AShapeUtil.DEFAULT_OUTLINE_SHAPE_NAME, AShape.A_STROKE, new OverrideFilter() { public Object getOverride(Object subject, Object defaultObject) { return ((ActivityView) subject).getModel() .isRecurrent() ? new BasicStroke(1.0f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0, new float[] { 9 }, 0) : defaultObject; } });", "target": 0}
{"idx": 267, "func": "not used, but public so theoretically must remain for BC?", "target": 1}
{"idx": 268, "func": "public String getAgent() { return agent; }", "target": 0}
{"idx": 269, "func": "wait 10 seconds and check for pending commands again this is useful if a command causes a deadlock", "target": 0}
{"idx": 270, "func": "TODO: should not be using assert here but I don't want to change to IllegalStateException at lead up to a release as I don't know how much testing is done with assert on.", "target": 1}
{"idx": 271, "func": "optArgs and restArgs require more work, so isolate them and ArrayList creation here", "target": 0}
{"idx": 272, "func": "-------------------- Property parsing -------------------- Moved from ProjectHelper. You can override the static method - this is used for backward compatibility (for code that calls the parse method in ProjectHelper).", "target": 0}
{"idx": 273, "func": "Ignore this since we will throw an exception when all else fails.", "target": 0}
{"idx": 274, "func": "apply dash style if any", "target": 0}
{"idx": 275, "func": "//{{{ PluginCacheEntry class", "target": 0}
{"idx": 276, "func": "@see org.argouml.uml.diagram.ui.FigEdgeModelElement#getNameBounds()", "target": 0}
{"idx": 277, "func": "i18n[PreferencesPanel.borderLabel={0} Script Settings]", "target": 0}
{"idx": 278, "func": "Check reflexive", "target": 0}
{"idx": 279, "func": "Match against every other operation but this one. //", "target": 0}
{"idx": 280, "func": "no plot, no data", "target": 0}
{"idx": 281, "func": "We should reengineer this class so that, rather than the current ad - hoc linear approach to processing a stream of tokens, we instead build up a tree of expressions.", "target": 1}
{"idx": 282, "func": "draw |_", "target": 0}
{"idx": 283, "func": "Save most things", "target": 0}
{"idx": 284, "func": "//lastreplaceposition = lastfoundposition;", "target": 0}
{"idx": 285, "func": "Note: could cause overlaps in case ClassLoader.this.parent has matches.", "target": 0}
{"idx": 286, "func": "setFloatable(true);", "target": 0}
{"idx": 287, "func": "template match number ALL separator", "target": 0}
{"idx": 288, "func": "Folder that stores Look and Feel jars.", "target": 0}
{"idx": 289, "func": "//{{{ Class initializer", "target": 0}
{"idx": 290, "func": "//{{{ Plugin class", "target": 0}
{"idx": 291, "func": "Alternatively, we could just return null here, so that you can not create a comment just linked to a comment this way - which is a bit uncommon, but not illegal, so for consistency, we better allow it.", "target": 0}
{"idx": 292, "func": "there is a selection", "target": 0}
{"idx": 293, "func": "otherwise a bunch of consecutive C+d's would be merged into one edit", "target": 0}
{"idx": 294, "func": "add node to tree", "target": 0}
{"idx": 295, "func": "transaction is needed for the underlying jpa architecture", "target": 0}
{"idx": 296, "func": "/////////////////////////////////////////////////////////We are through with parsing. Now we store the outcome in _lastRun... and tell the listeners.", "target": 0}
{"idx": 297, "func": "Copy in ThreadStarter thread context from calling Thread", "target": 0}
{"idx": 298, "func": "-reserved", "target": 0}
{"idx": 299, "func": "@todo this is duplicating TestResult information. Only the time is not part of the result. So we'd better derive a new class from TestResult and deal with it. (SB)", "target": 1}
{"idx": 300, "func": "null value means no value", "target": 0}
{"idx": 301, "func": "//search for the next instance of $ from the 'prev' position", "target": 0}
{"idx": 302, "func": "TODO: This will need to change when we support multiple user models.", "target": 1}
{"idx": 303, "func": "no match, append remainder of buffer and continue with next block", "target": 0}
{"idx": 304, "func": "space", "target": 0}
{"idx": 305, "func": "tree cache in optimistic mode seems to have as very difficult time with remove calls on non-existent nodes (NPEs)...", "target": 0}
{"idx": 306, "func": "We might want a special case for 19,2. This is very common for money types and here it is converted to 18,1", "target": 0}
{"idx": 307, "func": "if the current depth is 0, the root thing being loaded is the many-to-many collection itself. Here, it is alright to use an inner join...", "target": 0}
{"idx": 308, "func": "Reset the checkbox selected index false when fieldname gains focus", "target": 0}
{"idx": 309, "func": "It is possible for a table to contain only columns of types that we cannot process or do selects on, so check for that. Since this check is on the structure of the table rather than the contents, we only need to do it once (ie: it is not needed in getWarningOnProjectedUpdate)", "target": 0}
{"idx": 310, "func": "Various copy attributes/subelements of <copy> passed thru to <mycopy> //", "target": 0}
{"idx": 311, "func": "Expose members for extensibility", "target": 0}
{"idx": 312, "func": "draw units indicator", "target": 0}
{"idx": 313, "func": "add the system classpath addExistingToClasspath(classpath,System.getProperty(\"java.class.path\"));", "target": 0}
{"idx": 314, "func": "Check, if we have to create a new implementation.", "target": 0}
{"idx": 315, "func": "Color backgroundColor = UIManager.getColor(\"TextField.background\");", "target": 0}
{"idx": 316, "func": "<!-- begin-user-doc --> The <b>Switch</b> for the model's inheritance hierarchy. It supports the call {@link #doSwitch(EObject) doSwitch(object)} to invoke the <code>caseXXX</code> method for each class of the model, starting with the actual class of the object and proceeding up the inheritance hierarchy until a non-null result is returned, which is the result of the switch. <!-- end-user-doc --> @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage @generated", "target": 0}
{"idx": 317, "func": "TODO: Why do we need this when we can just change the font and achieve the same effect?", "target": 1}
{"idx": 318, "func": "@see org.argouml.profile.internal.ocl.OclExpressionEvaluator#evaluate(java.util.HashMap, org.argouml.profile.internal.ocl.ModelInterpreter, java.lang.String)", "target": 0}
{"idx": 319, "func": "but, lookout, it doesn't work both ways", "target": 0}
{"idx": 320, "func": "AShapeUtil.addResizeBoxes(root, SwingConstants.HORIZONTAL, 4);", "target": 0}
{"idx": 321, "func": "line 980", "target": 0}
{"idx": 322, "func": "Link the new include relationship in to the ends", "target": 0}
{"idx": 323, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.ISQLPanelAPI#fileAppend()", "target": 0}
{"idx": 324, "func": "should alter global state", "target": 0}
{"idx": 325, "func": "i18n[mysql.createAdd=Add]", "target": 0}
{"idx": 326, "func": "Column is in table 2, but not table 1 - how else would we get here??", "target": 0}
{"idx": 327, "func": "The purpose of this method is not explained and it give give NPE depending on z order of figs as they are read. For now ignore if null but for future lets delete this.", "target": 0}
{"idx": 328, "func": "For a match to be found, it has to have the same owner, and the same long class name.", "target": 0}
{"idx": 329, "func": "we need to writeObject() on this since interceptor is user defined", "target": 0}
{"idx": 330, "func": "//{{{ RolloverButton constructor", "target": 0}
{"idx": 331, "func": "(non-Javadoc) @see org.columba.core.gui.selection.SelectionHandler#setSelection(org.columba.api.command.DefaultCommandReference[])", "target": 0}
{"idx": 332, "func": "check if this is a management frame instance -> if so create submenu to switch perspectives -> otherwise, don't create submenu", "target": 0}
{"idx": 333, "func": "reset the state", "target": 0}
{"idx": 334, "func": "\\t handled above", "target": 0}
{"idx": 335, "func": "Since we are reading Meta-data about the DB, we should never see a BLOB. If we do, the contents are not interpretable by Squirrel, so just tell the user that it is a BLOB and that it has data.", "target": 0}
{"idx": 336, "func": "backward compatibility with old generated overrides", "target": 0}
{"idx": 337, "func": "notation events", "target": 0}
{"idx": 338, "func": "TODO : this is broke for subqueries in statements other than selects...", "target": 1}
{"idx": 339, "func": "TBLRC 01100", "target": 0}
{"idx": 340, "func": "line 1100", "target": 0}
{"idx": 341, "func": "does not remove the entry", "target": 0}
{"idx": 342, "func": "refresh attribute in case of multivalued attributes.", "target": 0}
{"idx": 343, "func": "TODO: this seems to be called at startup only so no check so far", "target": 0}
{"idx": 344, "func": "If saveWorkBench", "target": 0}
{"idx": 345, "func": "Keep reading till we hit the <argo> tag", "target": 0}
{"idx": 346, "func": "i18n[ViewLogsSheet.error.clearlogcontents=Error clearing the log contents]", "target": 0}
{"idx": 347, "func": "Test method for 'org.columba.core.tagging.TagManager.addTag(String)'", "target": 0}
{"idx": 348, "func": "getUpdateSQL", "target": 0}
{"idx": 349, "func": "First determine which charset to use", "target": 0}
{"idx": 350, "func": "FIXME Per the RegionFactory class Javadoc, this constructor version should not be necessary. @param props The configuration properties", "target": 1}
{"idx": 351, "func": "does it matter that this doesn't set the type correctly?", "target": 1}
{"idx": 352, "func": "?e | boolean | True if file1 exists", "target": 0}
{"idx": 353, "func": "//Sybase BIT type does not support null values", "target": 0}
{"idx": 354, "func": "$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ jmeter.log $NON-NLS-1$ sample result log file $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$", "target": 0}
{"idx": 355, "func": "FIXME: this code means that it is not possible to use more than one domain axis for the combined plots...", "target": 1}
{"idx": 356, "func": "+ \" <emptyElement></emptyElement>\"", "target": 0}
{"idx": 357, "func": "i18n[HibernateTabPanel.hql=HQL]", "target": 0}
{"idx": 358, "func": "clockseq_low", "target": 0}
{"idx": 359, "func": "line 726", "target": 0}
{"idx": 360, "func": "We not sure the encoding supports this code point, so we write it as a character entity reference.", "target": 0}
{"idx": 361, "func": "row 2", "target": 0}
{"idx": 362, "func": "Remove a node", "target": 0}
{"idx": 363, "func": "//{{{ getDot() method", "target": 0}
{"idx": 364, "func": "if there is an explicit mapping to the default group, it is counted", "target": 0}
{"idx": 365, "func": "This is a kludge to deal with enumerators, which crash the doSwitch. //", "target": 1}
{"idx": 366, "func": "//TBD", "target": 0}
{"idx": 367, "func": "setFont(LookAndFeelMgr.getInstance().getSmallFont());", "target": 0}
{"idx": 368, "func": "Convert reference to attribute if its type is an EDataType... //", "target": 0}
{"idx": 369, "func": "Empty paths do not need to be added", "target": 0}
{"idx": 370, "func": "//{{{ queueAWTRunner() method", "target": 0}
{"idx": 371, "func": "//int modelCol = getTable().convertColumnIndexToModel(col);", "target": 0}
{"idx": 372, "func": "@see tudresden.ocl.check.types.Type2#navigateParameterizedQuery( java.lang.String, tudresden.ocl.check.types.Type[])", "target": 0}
{"idx": 373, "func": "// collectionOwnerAliases.add( ownerAlias );", "target": 0}
{"idx": 374, "func": "Unrecognised files are ignored", "target": 0}
{"idx": 375, "func": "$NON-NLS-1$ default: normal", "target": 0}
{"idx": 376, "func": "list of suffices", "target": 0}
{"idx": 377, "func": "TODO: Find a better default language TODO: We should know the notation language, since it is us", "target": 1}
{"idx": 378, "func": "We need to be careful that the proxy may be resolved while we are attaching this adapter. We need to avoid attaching the adapter during the resolve and also attaching it again as we walk the eContents() later. Checking here avoids having to check during addAdapter. //", "target": 0}
{"idx": 379, "func": "//{{{ getExpansion() method", "target": 0}
{"idx": 380, "func": "Encode according to the HTTP spec, i.e. UTF-8", "target": 0}
{"idx": 381, "func": "//{{{ ActionTextField class", "target": 0}
{"idx": 382, "func": "//{{{ ResultCellRenderer constructor", "target": 0}
{"idx": 383, "func": "REMEMBER to change this if you change the number of MEs with source path settings", "target": 0}
{"idx": 384, "func": "---- workCityLabel ----", "target": 0}
{"idx": 385, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getProcedureTerm()", "target": 0}
{"idx": 386, "func": "TODO implement the difference between oclIsKindOf and oclIsTypeOf", "target": 1}
{"idx": 387, "func": "with args, no block", "target": 0}
{"idx": 388, "func": "Double check the distributed cache", "target": 0}
{"idx": 389, "func": "initialize any other Figs here", "target": 0}
{"idx": 390, "func": "//{{{ saveAbbrevs() method", "target": 0}
{"idx": 391, "func": "build the Activity Diagram", "target": 0}
{"idx": 392, "func": "//++ These are JMX names, and must not be changed $NON-NLS-1$", "target": 0}
{"idx": 393, "func": "loop over all headers", "target": 0}
{"idx": 394, "func": "Create a new diagram wide settings block which is backed by the project-wide defaults that we were passed", "target": 0}
{"idx": 395, "func": "new message type introduced in 4.0pre4", "target": 0}
{"idx": 396, "func": "no default in DB. If nullable, use null.", "target": 0}
{"idx": 397, "func": "MDR classes may have a UML or Uml prefix which should be removed.", "target": 0}
{"idx": 398, "func": "i18n[mysql.withAllFields=With all Fields]", "target": 0}
{"idx": 399, "func": "We have a core or translation file that is not already installed - add it", "target": 0}
{"idx": 400, "func": "This can't happen (how should utf8 not be supported!?!), so just throw an Error:", "target": 0}
{"idx": 401, "func": "the whole blob has been previously read in", "target": 0}
{"idx": 402, "func": "//This is really ugly, but necessary:", "target": 1}
{"idx": 403, "func": "add adapters that do nothing for keyboard and mouse actions", "target": 0}
{"idx": 404, "func": "nested class:", "target": 0}
{"idx": 405, "func": "AUTH", "target": 0}
{"idx": 406, "func": "createMenuBar();", "target": 0}
{"idx": 407, "func": "If is a classifier role, it must return the received messages. In other cases, returns an empty list. TODO: Must be the outgoing messages or the received ones?", "target": 1}
{"idx": 408, "func": "no existing archive", "target": 0}
{"idx": 409, "func": "//{{{ handlePreferences() method", "target": 0}
{"idx": 410, "func": "EEnumImpl overrides this to do nothing. The only case that is special is when a more specific instance of AbstractEnumerator is generated/reused. //", "target": 0}
{"idx": 411, "func": "@see org.argouml.model.AbstractModelEventPump#addModelEventListener(java.beans.PropertyChangeListener, java.lang.Object, java.lang.String[])", "target": 0}
{"idx": 412, "func": "Add Userinfo Characters", "target": 0}
{"idx": 413, "func": "//new Font(\"SansSerif\", Font.PLAIN, 10)", "target": 0}
{"idx": 414, "func": "For detecting extra entries", "target": 0}
{"idx": 415, "func": "(non-Javadoc) @see org.columba.core.profiles.IProfileManager#getProfileForName(java.lang.String)", "target": 0}
{"idx": 416, "func": "//i18n[ColumnListDialog.dropTitle=Select Column(s) To Drop]", "target": 0}
{"idx": 417, "func": "updateMainMenu(((JMeterGUIComponent) getCurrentNode().getUserObject()).createPopupMenu());", "target": 0}
{"idx": 418, "func": "check for unknown column", "target": 0}
{"idx": 419, "func": "Entity was found in second-level cache...", "target": 0}
{"idx": 420, "func": "//MappingPackage ePackage = ((FunctionNamePair)object).ePackageMapping();", "target": 0}
{"idx": 421, "func": "Let's just build a Statemachine, and put it in a suitable namespace.", "target": 0}
{"idx": 422, "func": "we have at least one row, so try to retrieve the object Do Not limit the read of this data", "target": 0}
{"idx": 423, "func": "long, slow way causes disabling for defined", "target": 0}
{"idx": 424, "func": "//{{{ preferredLayoutSize() method", "target": 0}
{"idx": 425, "func": "Once and again the Netbeans editor calls createSyntax() after sessionEnding() was called. Then sess is null and the code below would break.", "target": 0}
{"idx": 426, "func": "boolean enabled = true;", "target": 0}
{"idx": 427, "func": "copy of indexes copy of sizes instructions to be resized future offset of a jump instruction", "target": 0}
{"idx": 428, "func": "Merges this URI's relative path with the base non-relative path. If base has no path, treat it as the root absolute path, unless this has no path either.", "target": 0}
{"idx": 429, "func": "For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure", "target": 0}
{"idx": 430, "func": "Nothing more to do, don't copy owned elements.", "target": 0}
{"idx": 431, "func": "seem to be the same", "target": 0}
{"idx": 432, "func": "Try to transfer it by reading the contents of the temporary file and writing them to the output stream of the delegate. //", "target": 0}
{"idx": 433, "func": "the pie area defines the circle/ellipse for regular pie sections. it is defined by shrinking the explodeArea by the explodeMargin factor.", "target": 0}
{"idx": 434, "func": "Create the instance 'This' namespace, set it on the object instance and invoke the instance initializer", "target": 0}
{"idx": 435, "func": "PROTOCOL", "target": 0}
{"idx": 436, "func": "loop until a context is available, to clean up softrefs that might have been collected", "target": 0}
{"idx": 437, "func": "Fire an event some anyone who cares about diagrams being removed can listen for it", "target": 0}
{"idx": 438, "func": "//{{{ Go on to next line", "target": 0}
{"idx": 439, "func": "These entries must be in the same order as columns are saved/restored.", "target": 0}
{"idx": 440, "func": "overwriteOptionsCheckBox = new JCheckBox(\"Overwrite global settings\"); overwriteOptionsCheckBox.addActionListener(this); overwriteOptionsCheckBox.setActionCommand(\"OVERWRITE\");", "target": 0}
{"idx": 441, "func": "Copy a file from source to destination. TODO: Perhaps belongs in a utilities class of some sort. @param source the source file to be copied @param dest the destination file @return success status flag", "target": 1}
{"idx": 442, "func": "Race condition here...", "target": 1}
{"idx": 443, "func": "Unwrap primitives", "target": 0}
{"idx": 444, "func": "thread is not alive, skip it", "target": 0}
{"idx": 445, "func": "TODO: If a namespace with sub-classdiagrams is deleted, then { confirmStr += Translator.localize( \"optionpane.remove-from-model-will-remove-subdiagram\"); doAsk = true; }", "target": 0}
{"idx": 446, "func": "to restore last selected tab (better user-friendly)", "target": 0}
{"idx": 447, "func": "TODO: Add \"unnamed\" or \"new\" or something? (Localized, of course)", "target": 1}
{"idx": 448, "func": "Operator numeric-ids = < > << >> >>> + - / & | ^ % ! ~ == <= >= <<= >>= >>>= += -= = /= &= |= ^= %= != . , : ; ? ( ) [ ] { } ++ -- && ||", "target": 0}
{"idx": 449, "func": "by default, messages are always displayed", "target": 0}
{"idx": 450, "func": "Connect to the http server, and do a simple http get", "target": 0}
{"idx": 451, "func": "theStereotype.setStereotype(???);", "target": 0}
{"idx": 452, "func": "+ JMX names, do not change their values", "target": 0}
{"idx": 453, "func": "find the property in the rrule string", "target": 0}
{"idx": 454, "func": "request width index == itemCount", "target": 0}
{"idx": 455, "func": "index+1 works for [^abc] lists, not for generic lookahead (--> index)", "target": 0}
{"idx": 456, "func": "Try to squeltch the native code stack trace if the exception was caused by a reflective call back into the bsh interpreter (e.g. eval() or source()", "target": 0}
{"idx": 457, "func": "TODO: Check for Resource to hold this and create if necessary? This is a discrepancy between MDR which does it here and eUML which does it as part of setRootModel", "target": 1}
{"idx": 458, "func": "//throw new IdentifierGenerationException(\"save associated object first, or disable cascade for inverse association\");", "target": 0}
{"idx": 459, "func": "do nothing...", "target": 0}
{"idx": 460, "func": "Alternatively, we could reduce the height of the Fig by the height of this one hidden compartment. But that would not be possible for the width - so we better return to minimal dimensions overall.", "target": 0}
{"idx": 461, "func": "1F00..1FFF;", "target": 0}
{"idx": 462, "func": "@see org.argouml.model.ChangeableKind#getFrozen()", "target": 0}
{"idx": 463, "func": "errorDetected()", "target": 0}
{"idx": 464, "func": "box.setLocationRelativeTo(jframe);", "target": 0}
{"idx": 465, "func": "resync search engine -> this is only needed for Lucene right now", "target": 0}
{"idx": 466, "func": "//i18n[DumpApplicationCommand.error.dumpingdrivers=Error dumping drivers]", "target": 0}
{"idx": 467, "func": "check no charset", "target": 0}
{"idx": 468, "func": "Look, if there's already a java implementation", "target": 0}
{"idx": 469, "func": "This could be smarter...", "target": 1}
{"idx": 470, "func": "------------- get/set properties ----------------------//", "target": 0}
{"idx": 471, "func": "Literal char . XY X|Y|Z X [a-zA-Z] etc. [^a-zA-Z] etc. (X) or (?:X) ^ $ \\b \\B \\< \\> \\A \\Z \\z ? +? strings back references (?=...) (?!...) (?<=...) (?<!...) (?>...) (?ims-ims:...) (?(...)yes|no)", "target": 0}
{"idx": 472, "func": "Create the source and target JDOMs. //", "target": 0}
{"idx": 473, "func": "we don't need two identical shortcuts", "target": 0}
{"idx": 474, "func": "In spite of the name, this is actually used to determine if the loop controller is repeatable. The value is only used in nextIsNull() when the loop end condition has been detected: If forever==true, then it calls resetLoopCount(), otherwise it calls setDone(true). Loop Controllers always set forever=true, so that they will be executed next time the parent invokes them. Thread Group sets the value false, so nextIsNull() sets done, and the Thread Group will not be repeated. However, it's not clear that a Thread Group could ever be repeated.", "target": 0}
{"idx": 475, "func": "Include only non-duplicate namespace declarations. //", "target": 0}
{"idx": 476, "func": "If the previous line matches indentNextLine or indentNextLines, add a level of indent", "target": 0}
{"idx": 477, "func": "event is null when featureTableViewer is double clicked", "target": 0}
{"idx": 478, "func": "We are displaying an AssertionResult", "target": 0}
{"idx": 479, "func": "i18n[SchemaPropertiesPanel.schemaTableUpdateLable2=in all Schemas to]", "target": 0}
{"idx": 480, "func": "Now allow the URL handling to work.", "target": 0}
{"idx": 481, "func": "Cut and Paste need to be worked on, so for now do not include them Also, the copy operations do not seem to work right - we may need special versions for the cellEditor menu. // add(_cut); // add(_copy); // add(_copyHtml); // add(_paste); // addSeparator();", "target": 0}
{"idx": 482, "func": "don't catch the JUnit exceptions", "target": 0}
{"idx": 483, "func": "Clean up our two models and the extent that we read profile in to", "target": 0}
{"idx": 484, "func": "If this return's alias has not been processed yet, do so b4 further processing of this return", "target": 0}
{"idx": 485, "func": "no attachments -> only show bodytext editor", "target": 0}
{"idx": 486, "func": "Make sure you log the exception, as it might be swallowed", "target": 0}
{"idx": 487, "func": "Generates a string representation for the provided attribute. The string representation will be of the form: visibility name [multiplicity] : type-expression = initial-value {property-string} Depending on settings in Notation, visibility, multiplicity, type-expression, initial value and properties are shown/not shown.", "target": 0}
{"idx": 488, "func": "default true for compatibility", "target": 0}
{"idx": 489, "func": "//{{{ getFirstBuffer() method", "target": 0}
{"idx": 490, "func": "Arrays incomplete... need to use the array setter", "target": 0}
{"idx": 491, "func": "//wrap", "target": 0}
{"idx": 492, "func": "TODO: The recurrence goes in front of the action? Does this not contradict the header JavaDoc?", "target": 1}
{"idx": 493, "func": "//{{{ mouseReleased() method", "target": 0}
{"idx": 494, "func": "For converters to use", "target": 0}
{"idx": 495, "func": "Required with the first beta of JDK1.4.1 to stop this scrollpane from being too tall.", "target": 0}
{"idx": 496, "func": "try a null key - should throw an exception", "target": 0}
{"idx": 497, "func": "TODO: Allow .zargo as profile as well?", "target": 1}
{"idx": 498, "func": "//{{{ classToFile() method", "target": 0}
{"idx": 499, "func": "//create \"log10\"-type label", "target": 0}
{"idx": 500, "func": "Copy the next value in the current", "target": 0}
{"idx": 501, "func": "Open files, create the view and hide the splash screen.", "target": 0}
{"idx": 502, "func": "There's only 1 test plan, so can cache the mode here", "target": 0}
{"idx": 503, "func": "//\" cascade\";", "target": 0}
{"idx": 504, "func": "record the chart area, if info is requested...", "target": 0}
{"idx": 505, "func": "did zero tick last iteration //no label //clear flag", "target": 0}
{"idx": 506, "func": "Atomic integers for symbol and method IDs", "target": 0}
{"idx": 507, "func": "check for scheme - RFC 2396 5.2 #3 if we found a scheme, it means absolute URI, so we're done", "target": 0}
{"idx": 508, "func": "//{{{ getAction() method", "target": 0}
{"idx": 509, "func": "delete all data in directory", "target": 0}
{"idx": 510, "func": "XXX what is the following doing? should it run if !javadoc4 && executable != null?", "target": 1}
{"idx": 511, "func": "FeatureMapEntry", "target": 0}
{"idx": 512, "func": "//////////////////////////////////////////////////////////////////////////predetermined segments sizes ////////////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 513, "func": "lazy instantiation", "target": 0}
{"idx": 514, "func": "//frame.setDisplayToolTips(false);", "target": 0}
{"idx": 515, "func": "//retry copy", "target": 0}
{"idx": 516, "func": "we can't just load the first constructor -> go find the correct constructor -> based on the arguments", "target": 0}
{"idx": 517, "func": "Allow null", "target": 0}
{"idx": 518, "func": "public abstract Class getDefaultChild();", "target": 0}
{"idx": 519, "func": "get rid of any edit pane that is a child of the current edit pane's parent splitter", "target": 0}
{"idx": 520, "func": "//{{{ getTime() method", "target": 0}
{"idx": 521, "func": "grab nil for local variables", "target": 0}
{"idx": 522, "func": "tree has focus", "target": 0}
{"idx": 523, "func": "should never get here", "target": 0}
{"idx": 524, "func": "Must be back on first line on rewind.", "target": 0}
{"idx": 525, "func": "We need to screen out duplicates in the unlikely event that we have two features with the same class-qualified name. We'll only generate one property string in that case and let the user add the second one manually, if necessary. //", "target": 0}
{"idx": 526, "func": "i18n[popupeditableIoPanel.fileChooserError=File Chooser Error]", "target": 0}
{"idx": 527, "func": "//{{{ finishCaretUpdate() method", "target": 0}
{"idx": 528, "func": "for UNION", "target": 0}
{"idx": 529, "func": "Try static and then object, if allowed Note that the Java compiler should not allow both.", "target": 0}
{"idx": 530, "func": "//setFont(new Font(\"Dialog\",Font.BOLD,10));", "target": 0}
{"idx": 531, "func": "A HTTP RESPONSE HEADER LOOKS ALOT LIKE: HTTP/1.0 200 OK Date: Wednesday, 02-Feb-94 23:04:12 GMT Server: NCSA/1.1 MIME-version: 1.0 Last-modified: Monday, 15-Nov-93 23:33:16 GMT Content-Type: text/html Content-Length: 2345 \\r\\n", "target": 0}
{"idx": 532, "func": "Avoid allowing a choice that will lead to duplicates. //", "target": 0}
{"idx": 533, "func": "can no longer assume that sendMessageDialog has been displayed", "target": 0}
{"idx": 534, "func": "//Class/unsetGenFeature.todo.override.javajetinc", "target": 0}
{"idx": 535, "func": "Process the children of the UnitTreeNode recursively. //", "target": 0}
{"idx": 536, "func": "//{{{ removeLayoutComponent() method //}}}", "target": 0}
{"idx": 537, "func": "no zooming possible", "target": 0}
{"idx": 538, "func": "line 1641", "target": 0}
{"idx": 539, "func": "The target is a valid context.", "target": 0}
{"idx": 540, "func": "TODO: should \"record\" how many properties we have reffered to - and if we don't get'em'all we throw an exception! Way better than trial and error ;)", "target": 1}
{"idx": 541, "func": "Adds the new column (type: integer).", "target": 0}
{"idx": 542, "func": "5 -> 2, -5 -> -3 need half a scale more..", "target": 0}
{"idx": 543, "func": "We call liason.configure() and then liaison.setStylesheet() so that the internal variables of liaison can be set up", "target": 0}
{"idx": 544, "func": "Allow for missing optional jars", "target": 0}
{"idx": 545, "func": "What handles warnings", "target": 0}
{"idx": 546, "func": "test on extension", "target": 0}
{"idx": 547, "func": "This class gives critics access to parts of the UML model of the design. It defines a gen() function that returns the \"children\" of any given part of the UML model. Basically, it goes from Project, to Models, to ModelElements. Argo's critic Agency uses this to apply critics where appropriate. TODO: This thinks it knows all the composition associations of the the UML metamodel, but it is a) incomplete and b) not updated for UML 1.4. This should be done using information from the metamodel rather than hardwired code. - tfm - 20070205 @see org.argouml.cognitive.Agency @see org.argouml.cognitive.Designer @author jrobbins", "target": 1}
{"idx": 548, "func": "Get the handler", "target": 0}
{"idx": 549, "func": "there's a convenient xsltc class version but data are private so use package information", "target": 1}
{"idx": 550, "func": "...getPackage() can return null's, so we have to cater for this:", "target": 0}
{"idx": 551, "func": "i18n[sqlbookmark.noAdd=No text to be added.]", "target": 0}
{"idx": 552, "func": "Allow for short/negative times", "target": 0}
{"idx": 553, "func": "//{{{ isEditable() method", "target": 0}
{"idx": 554, "func": "log a message about potential connection leaks", "target": 0}
{"idx": 555, "func": "get pop3 or imap account xml node", "target": 0}
{"idx": 556, "func": "paint the text and icon", "target": 0}
{"idx": 557, "func": "Send POST data from <code>Entry</code> to the open connection. @param connection <code>URLConnection</code> where POST data should be sent @return a String show what was posted. Will not contain actual file upload content @exception IOException if an I/O exception occurs", "target": 0}
{"idx": 558, "func": "copy package p1 into p2 package", "target": 0}
{"idx": 559, "func": "//System.err.println(\"MockApplication.getMainFrame: stub not yet implemented\");", "target": 0}
{"idx": 560, "func": "Derby is real close to DB2. Only difference I've found so far is 48 instead of 53 for float length llimit.", "target": 0}
{"idx": 561, "func": "Some cached fonts based on the above settings", "target": 0}
{"idx": 562, "func": "//TODO: make this handle multiple collection roles!", "target": 1}
{"idx": 563, "func": "Try static imports", "target": 0}
{"idx": 564, "func": "//{{{ getStart() method", "target": 0}
{"idx": 565, "func": "TODO: We should really set up our own profile instead of depending on the default. This depends on the default profile configuration containing the type Integer to test properly. Otherwise it will get created in the main project, defeating the purpose", "target": 1}
{"idx": 566, "func": "bad type", "target": 0}
{"idx": 567, "func": "line 501", "target": 0}
{"idx": 568, "func": "revert to previous behaviour //$NON-NLS-1$ //$NON-NLS-2$", "target": 0}
{"idx": 569, "func": "create the collection holding the Orphans", "target": 0}
{"idx": 570, "func": "it just won't be added as a shutdown hook... :(", "target": 0}
{"idx": 571, "func": "cleanup resources used", "target": 0}
{"idx": 572, "func": "horizontal pass", "target": 0}
{"idx": 573, "func": "from email address", "target": 0}
{"idx": 574, "func": "Find the first empty line of the multipart, it signals end of headers for multipart Agents are supposed to terminate lines in CRLF:", "target": 0}
{"idx": 575, "func": "MRI behavior: In this mode trailing zeroes are removed: 1.500E+05 -> 1.5E+05", "target": 0}
{"idx": 576, "func": "c.gridy = 0; c.gridx = 6; JLabel highLabel = new JLabel(\"High\"); gb.setConstraints(highLabel, c); _mainPanel.add(highLabel);", "target": 0}
{"idx": 577, "func": "//TODO!", "target": 0}
{"idx": 578, "func": "//ETypeParameterImpl", "target": 0}
{"idx": 579, "func": "temporary hack to handle non-Ruby values will come up with better solution shortly", "target": 1}
{"idx": 580, "func": "msgId not available until after send() is called Note: there is only one admin object which is shared between all threads interlock with Receiver", "target": 0}
{"idx": 581, "func": "if root of method is rescue, compile as a light rescue", "target": 0}
{"idx": 582, "func": "Insert as a string by default", "target": 0}
{"idx": 583, "func": "Create constants for open flags", "target": 0}
{"idx": 584, "func": "visible flag...", "target": 0}
{"idx": 585, "func": "(non-Javadoc) @see org.columba.mail.folder.AbstractMessageFolder#loadMessageFolderInfo()", "target": 0}
{"idx": 586, "func": "Get available screens O(n^3), this is nasty, but since we aren't dealling with many items it should be fine", "target": 1}
{"idx": 587, "func": "relatively cheap test for 32-bit values", "target": 0}
{"idx": 588, "func": "specific arity", "target": 0}
{"idx": 589, "func": "//registerColumnType data types", "target": 0}
{"idx": 590, "func": "XXX This constructor is a hack to implement the __END__ syntax. Converting a reader back into an InputStream doesn't generally work.", "target": 1}
{"idx": 591, "func": "Jacobi system resolving results are stored in _rS computes the coefficients (di, ci, bi, ai) from the results", "target": 0}
{"idx": 592, "func": "i18n[PostgresPlugin.showViewSource=Show view source]", "target": 0}
{"idx": 593, "func": "//{{{ getMark() method", "target": 0}
{"idx": 594, "func": "//{{{ StyleChoice class", "target": 0}
{"idx": 595, "func": "AntLikeTasksAtTopLevelTest", "target": 0}
{"idx": 596, "func": "scan feature lists for those with multiple elements and return them", "target": 0}
{"idx": 597, "func": "we support up to 4 im entries", "target": 0}
{"idx": 598, "func": "swallow here, will be thrown again in UnknownElement.maybeConfigure if the problem persists.", "target": 0}
{"idx": 599, "func": "i18n[UpdatePreferencesPanel.server=Server:]", "target": 0}
{"idx": 600, "func": "aload_0", "target": 0}
{"idx": 601, "func": "Set the existing pool flag to true", "target": 0}
{"idx": 602, "func": "//dontSpace.add(\"'\");", "target": 0}
{"idx": 603, "func": "//{{{ addViewToList() method", "target": 0}
{"idx": 604, "func": "//{{{ setValueAt() method", "target": 0}
{"idx": 605, "func": "OS/2", "target": 0}
{"idx": 606, "func": "Does not appear to be used (yet)", "target": 1}
{"idx": 607, "func": "//$NON-NLS-1$ Concatenate query post if exists", "target": 0}
{"idx": 608, "func": "no point continuing", "target": 0}
{"idx": 609, "func": "set serialization options", "target": 0}
{"idx": 610, "func": "Trying to set time to a large exact number", "target": 0}
{"idx": 611, "func": "OK should treat B as separate Should have no arg", "target": 0}
{"idx": 612, "func": "Strip quotes from the column name", "target": 0}
{"idx": 613, "func": "Ensure that anything can be handled, even if it's not recognized. //", "target": 0}
{"idx": 614, "func": "handle of connected server", "target": 0}
{"idx": 615, "func": "$NON-NLS-1$ Get the previous count", "target": 0}
{"idx": 616, "func": "make the projectbrowser", "target": 0}
{"idx": 617, "func": "Class doesn't have a String constructor but a decent factory method", "target": 0}
{"idx": 618, "func": "//insets.top += spacing; //insets.bottom += spacing;", "target": 0}
{"idx": 619, "func": "Die 200 braucht nur SQL Server 7.0, SQL Server 2000 nicht mehr sagt SAN", "target": 0}
{"idx": 620, "func": "Generation preferences:", "target": 0}
{"idx": 621, "func": "//we are forking here to be sure that if JspC calls //System.exit() it doesn't halt the build", "target": 0}
{"idx": 622, "func": "6a - get all but the last segment of the base URI path", "target": 0}
{"idx": 623, "func": "i18n[DatabaseMetaData.searchableTypePredNone=no support]", "target": 0}
{"idx": 624, "func": "index", "target": 0}
{"idx": 625, "func": "OK, because find only returns correct element types", "target": 0}
{"idx": 626, "func": "/Get the column names and cache them.", "target": 0}
{"idx": 627, "func": "no big deal", "target": 0}
{"idx": 628, "func": "Comment out when we are ready to release undo/redo JMenuItem undoItem = edit.add( ProjectActions.getInstance().getUndoAction()); setMnemonic(undoItem, \"Undo\"); ShortcutMgr.assignAccelerator(undoItem, ShortcutMgr.ACTION_UNDO); JMenuItem redoItem = edit.add( ProjectActions.getInstance().getRedoAction()); setMnemonic(redoItem, \"Redo\"); ShortcutMgr.assignAccelerator(redoItem, ShortcutMgr.ACTION_REDO); edit.addSeparator();", "target": 0}
{"idx": 629, "func": "TODO field always true, what for ?", "target": 1}
{"idx": 630, "func": "line 1626", "target": 0}
{"idx": 631, "func": "user does not want to overwrite the file", "target": 0}
{"idx": 632, "func": "// private static final String PREFS_FILE_NAME = \"sqlparamprefs.xml\";", "target": 0}
{"idx": 633, "func": "//String[] fk = StringHelper.qualify( \"collection_\", cp.getKeyColumnNames() );", "target": 0}
{"idx": 634, "func": "We always get the BLOB, even when we are not reading the contents. Since the BLOB is just a pointer to the BLOB data rather than the data itself, this operation should not take much time (as opposed to getting all of the data in the blob).", "target": 0}
{"idx": 635, "func": "//ITEM LABELS VISIBLE //////////////////////////////////////////////////", "target": 0}
{"idx": 636, "func": "XXX: hairy code that is basically just a functional(?) port of some other code i barely understood", "target": 1}
{"idx": 637, "func": "handle the commandline arguments of the modules", "target": 0}
{"idx": 638, "func": "//Log.log(Log.DEBUG,jEdit.class,\"Adding edit mode \" // + mode.getName());", "target": 0}
{"idx": 639, "func": "The constructor. TODO: Why does this method not handle all settings (KEY_DEFAULT_SHADOW_WIDTH is missing)?", "target": 1}
{"idx": 640, "func": "comma-separated category list <category>value1,value2,value3</category>", "target": 0}
{"idx": 641, "func": "line 1635", "target": 0}
{"idx": 642, "func": "i18n[graph.orderyName=order by name]", "target": 0}
{"idx": 643, "func": "frame.listView.update();", "target": 0}
{"idx": 644, "func": "//no need to return if completion is identical", "target": 0}
{"idx": 645, "func": "JMeterUtils assumes Unix-style separators", "target": 0}
{"idx": 646, "func": "//{{{ indentLines() method", "target": 0}
{"idx": 647, "func": "{Link.class, Instance.class, }, {Transition.class, StateVertex.class, },", "target": 0}
{"idx": 648, "func": "Renamed version of original file, if it exists", "target": 0}
{"idx": 649, "func": "A Classifier can only have a single unnamed ClassifierRole, so TODO: This probably belongs in a critic instead of here", "target": 1}
{"idx": 650, "func": "START: check d0 and d1", "target": 0}
{"idx": 651, "func": "run test in batch mode", "target": 0}
{"idx": 652, "func": "\\ + c backsolidus POSIX Character class such as [:alnum:]", "target": 0}
{"idx": 653, "func": "draw the pointers", "target": 0}
{"idx": 654, "func": "for native-sql queries, the param metadata is determined outside any relation to a query plan, because query plan creation and/or retreival for a native-sql query depends on all of the return types having been set, which might not be the case up-front when param metadata would be most useful", "target": 0}
{"idx": 655, "func": "//SQL Generation settings:", "target": 0}
{"idx": 656, "func": "for backward-compatability", "target": 0}
{"idx": 657, "func": "find all consecutive included segments", "target": 0}
{"idx": 658, "func": "ignore and move on", "target": 0}
{"idx": 659, "func": "through down", "target": 0}
{"idx": 660, "func": "baseToolTipGenerator", "target": 0}
{"idx": 661, "func": "we can go straight to the first required row", "target": 0}
{"idx": 662, "func": "<im> <aol>value</aol> <yahoo>value</yahoo> <jabber>value</jabber> </im>", "target": 0}
{"idx": 663, "func": "persists don't cascade to uninitialized collections", "target": 0}
{"idx": 664, "func": "//{{{ getPrintJob() method", "target": 0}
{"idx": 665, "func": "end while loop", "target": 0}
{"idx": 666, "func": "//////////////////////////////////////////////////////////////main methods", "target": 0}
{"idx": 667, "func": "Test case for 1742033 (Skipping quoting escape in table dropping)", "target": 0}
{"idx": 668, "func": "//{{{ ResultCellRenderer class", "target": 0}
{"idx": 669, "func": "TODO: Get the list of extended settings from the current language importer and add those too", "target": 0}
{"idx": 670, "func": "There is a bug in the version of MDR (20050711) that we use that causes it to fail to delete aggregate elements which are single valued and where the aggregate end is listed second in the association defined in the metamodel. For the UML 1.4 metamodel, this affects a StateMachine's top StateVertex and a Transition's Guard. See issue 4948 & 5227 - tfm 20080713", "target": 0}
{"idx": 671, "func": "Keep track of token separator", "target": 0}
{"idx": 672, "func": "TODO: make more efficient by not creating IRubyArray[]", "target": 1}
{"idx": 673, "func": "Nothing to delete if we couldn't get the packages", "target": 0}
{"idx": 674, "func": "The following is specifically for Realizations", "target": 0}
{"idx": 675, "func": "This is needed for the case when the default notation is not loaded at this point.", "target": 0}
{"idx": 676, "func": "TODO: Numeric.new works in Ruby and it does here too. However trying to use that instance in a numeric operation should generate an ArgumentError. Doing this seems so pathological I do not see the need to fix this now.", "target": 1}
{"idx": 677, "func": "aaload", "target": 0}
{"idx": 678, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ITableInfo#setExportedKeys(net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo[])", "target": 0}
{"idx": 679, "func": "got past the veto, add the member", "target": 0}
{"idx": 680, "func": "restore original event policy - not supported by MDR - tfm //MFactoryImpl.setEventPolicy(oldEventPolicy);", "target": 0}
{"idx": 681, "func": "adding same targets list again should not generate new events:", "target": 0}
{"idx": 682, "func": "Parse the string to creat a new extension point.", "target": 0}
{"idx": 683, "func": "/////////////////////////////// PUSH /////////////////////////////////////", "target": 0}
{"idx": 684, "func": "================ Utility Methods ================", "target": 0}
{"idx": 685, "func": "TODO: by coding the event with some information about what changed in the dataset, we could make the recalculation of the interval more efficient in some cases (for instance, if the change is just an update to a y-value, then the x-interval doesn't need updating)...", "target": 1}
{"idx": 686, "func": "now try to instantiate this ;-)", "target": 0}
{"idx": 687, "func": "..", "target": 0}
{"idx": 688, "func": "if the source point doesn't fall within a subplot, we do the zoom on all subplots...", "target": 0}
{"idx": 689, "func": "@see org.argouml.profile.internal.ocl.ModelInterpreter#getBuiltInSymbol(java.lang.String)", "target": 0}
{"idx": 690, "func": "handle a path expression or class name that appears at the start, in the \"new\" HQL style or an alias that appears at the start in the \"old\" HQL style", "target": 0}
{"idx": 691, "func": "now change all global categories", "target": 0}
{"idx": 692, "func": "Setup the XML that is to be written", "target": 0}
{"idx": 693, "func": "add rest of body until start of </body>", "target": 0}
{"idx": 694, "func": "TODO: confirm expected args are IRubyObject (or similar)", "target": 1}
{"idx": 695, "func": "Force the configuration to load", "target": 0}
{"idx": 696, "func": "This swaps the direction of m3 back: the colon is obliged, but the / not and the 2nd dot also not", "target": 0}
{"idx": 697, "func": "######################################################################## ########## events ######################################################################## ------------------------------------------------------------------------ ------------------------------------------------------------------------", "target": 0}
{"idx": 698, "func": "Query checking added 05/21/01, sz9", "target": 0}
{"idx": 699, "func": "SQLException support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 700, "func": "eval new value, call operator on old value, and assign", "target": 0}
{"idx": 701, "func": "SSS FIXME: Incomplete!", "target": 1}
{"idx": 702, "func": "Trying to set time to a negative number", "target": 0}
{"idx": 703, "func": "@see org.argouml.uml.ui.UMLUserInterfaceComponent#targetChanged()", "target": 0}
{"idx": 704, "func": "default PidGetter", "target": 0}
{"idx": 705, "func": "use selected buddy", "target": 0}
{"idx": 706, "func": "//{{{ paintComponent() method", "target": 0}
{"idx": 707, "func": "Do nothing during the deprecation period, then it can be removed.", "target": 0}
{"idx": 708, "func": "Creates the lookup table with it's columns (depenting on the mode).", "target": 0}
{"idx": 709, "func": "Synchronize on the outer class, because that's where all the state lives.", "target": 0}
{"idx": 710, "func": "The cache provider is needed when we either have second-level cache enabled or query cache enabled. Note that useSecondLevelCache is enabled by default", "target": 0}
{"idx": 711, "func": "configure(element); super.clear(); set name, enabled. put the default values back into the new element", "target": 0}
{"idx": 712, "func": "Be sure to pick up any trailing [] brackets. //", "target": 0}
{"idx": 713, "func": "Site type", "target": 0}
{"idx": 714, "func": "//{{{ writeStringArray() method", "target": 0}
{"idx": 715, "func": "line 561", "target": 0}
{"idx": 716, "func": "i18n[editextras.convertStringBufErr=Error executing convert to StringBuffer command: {0}]", "target": 0}
{"idx": 717, "func": "Get the first selected element. //", "target": 0}
{"idx": 718, "func": "//{{{ invalidateAll() method", "target": 0}
{"idx": 719, "func": "resolve Largest and Preferred placements if possible", "target": 0}
{"idx": 720, "func": "a valid message is required", "target": 0}
{"idx": 721, "func": "No Authentication available", "target": 0}
{"idx": 722, "func": "i18n[dataSetViewerTablePanel.textCantBeConverted=The given text cannot be converted into the internal object.\\nThe database has not been changed.\\nThe conversion error was:\\n{0}]", "target": 0}
{"idx": 723, "func": "We know when to stop reading, so we can allow the read method to block", "target": 0}
{"idx": 724, "func": "Normal condition.", "target": 0}
{"idx": 725, "func": "rb_str_subseq", "target": 0}
{"idx": 726, "func": "//i18n[syntax.whiteSpace=White Space]", "target": 0}
{"idx": 727, "func": "let's change the target", "target": 0}
{"idx": 728, "func": "//case ClassWriter.FIELD: //case ClassWriter.METH: //case ClassWriter.IMETH:", "target": 0}
{"idx": 729, "func": "crc-32", "target": 0}
{"idx": 730, "func": "Setup one row", "target": 0}
{"idx": 731, "func": "//{{{ unloadPluginJARWithDialog() method", "target": 0}
{"idx": 732, "func": "baseOutlinePaint", "target": 0}
{"idx": 733, "func": "Strip off the trailing \"_\" and load that class. //", "target": 0}
{"idx": 734, "func": "Empty statement", "target": 0}
{"idx": 735, "func": "Decode all encoded characters. //", "target": 0}
{"idx": 736, "func": "In the next line, replacing makeEmptyProject by getCurrentProject fails the test, except when run in Eclipse. MVW: I have no idea why.", "target": 0}
{"idx": 737, "func": "remove all children", "target": 0}
{"idx": 738, "func": "-verbose", "target": 0}
{"idx": 739, "func": "Get ready to start adding nodes.", "target": 0}
{"idx": 740, "func": "e.g. DTD not reachable", "target": 0}
{"idx": 741, "func": "Check for end or for a separator.", "target": 0}
{"idx": 742, "func": "SimpleInvocationMethod", "target": 0}
{"idx": 743, "func": "@see org.argouml.uml.ui.ActionAddDiagram#isValidNamespace(Object)", "target": 0}
{"idx": 744, "func": "MySQL disallows quoted column identifiers.", "target": 0}
{"idx": 745, "func": "attachment controller doesn't support paste actions", "target": 0}
{"idx": 746, "func": "Now advance \"oldestAt\", wrapping at end of the array", "target": 0}
{"idx": 747, "func": "OK, we now have the significand in digits[0...nDigits] and the exponent in exponent. We're ready to format.", "target": 0}
{"idx": 748, "func": "//pass the column name (a generated id almost always has a single column)", "target": 0}
{"idx": 749, "func": "\"assignment\" means the value is already on the stack", "target": 0}
{"idx": 750, "func": "Java 1.5 enumeration", "target": 0}
{"idx": 751, "func": "If a UML object is found, you can not remove selected elms.", "target": 0}
{"idx": 752, "func": "//{{{ ScrollLayout class", "target": 0}
{"idx": 753, "func": "field is not nullable, so create a reasonable default value", "target": 0}
{"idx": 754, "func": "startIdx and idxOld delimit various chunks of aInput; these chunks always end where aOldPattern begins", "target": 0}
{"idx": 755, "func": "public PropertyProjection project() { return Projections.property(getPropertyName()); }", "target": 0}
{"idx": 756, "func": "i18n[firebird.triggerDetails=Display trigger details]", "target": 0}
{"idx": 757, "func": "TODO: This needs work... We also need to listen to addition/removal of states to/from a ClassifierInState.", "target": 1}
{"idx": 758, "func": "add to the button group", "target": 0}
{"idx": 759, "func": "---- homepageLabel ----", "target": 0}
{"idx": 760, "func": "Set up source for style sheet", "target": 0}
{"idx": 761, "func": "get list of user-defined headerfields", "target": 0}
{"idx": 762, "func": "@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()", "target": 0}
{"idx": 763, "func": "any exceptions raised must continue to be raised, skipping $! restoration", "target": 0}
{"idx": 764, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#nullsAreSortedLow()", "target": 0}
{"idx": 765, "func": "this covers primitives and (unlikely) lower-case class names", "target": 0}
{"idx": 766, "func": "//EARLY EXIT", "target": 0}
{"idx": 767, "func": "have to handle this case specially on windows. insert \\ between, eg A: and myfile.txt.", "target": 0}
{"idx": 768, "func": "change the delay, and start it if it was stopped.", "target": 0}
{"idx": 769, "func": "skip this one, probably no 'ls' (windows)", "target": 0}
{"idx": 770, "func": "Add/Remove tabs", "target": 0}
{"idx": 771, "func": "stop background-manager so it doesn't interfere with shutdown manager", "target": 0}
{"idx": 772, "func": "private JTabbedPane tabs = new JTabbedPane();", "target": 0}
{"idx": 773, "func": "//columnUpdateability.length==0 ||", "target": 0}
{"idx": 774, "func": "//{{{ getMaxHorizontalScrollWidth() method", "target": 0}
{"idx": 775, "func": "TODO: FILLFACTOR, ON [PRIMARY], etc.", "target": 1}
{"idx": 776, "func": "Table of loaded plugins in centre of dialog.", "target": 0}
{"idx": 777, "func": "TODO: I believe the following code (to the end of the method) is obsolete, since NamePanel no longer seems to be the GUI for any component:", "target": 1}
{"idx": 778, "func": "line 1600", "target": 0}
{"idx": 779, "func": "//an error like \"3c[Pad]r\", \"3cdX\", \"3cXd\", \"3cXX\" where X is non data", "target": 0}
{"idx": 780, "func": "If we are still on the root mapping itself... //", "target": 0}
{"idx": 781, "func": "Could not get the required information", "target": 0}
{"idx": 782, "func": "Iterate over all the plugin IDs to determine the dependency closure. The list grows as the plugins are visited. //", "target": 0}
{"idx": 783, "func": "get language configuration", "target": 0}
{"idx": 784, "func": "i18n[dataTypeString.limitSize=Limit size of strings read during initial table load to max of:]", "target": 0}
{"idx": 785, "func": "// public static JButton createAnimatedIconButton() { // ImageSequenceTimer button = new ImageSequenceTimer(); // return button; // }", "target": 0}
{"idx": 786, "func": "Check if transaction is done", "target": 0}
{"idx": 787, "func": "add button for applying file & cmd info without doing anything else i18n[popupeditableIoPanel.applyFile=Apply File & Cmd]", "target": 0}
{"idx": 788, "func": "since recentBuffer will be set to the one that was closed", "target": 0}
{"idx": 789, "func": "Test to see if correct suffix was used to create the tempfile.", "target": 0}
{"idx": 790, "func": "PR 10504", "target": 0}
{"idx": 791, "func": "The following is used by both in-cell and Popup operations.", "target": 0}
{"idx": 792, "func": "//{{{ Instance part of class", "target": 0}
{"idx": 793, "func": "Alias references and identifiers use the same node class.", "target": 0}
{"idx": 794, "func": "//String sql = \"A'''' sss ; GO ;; GO'\"; //String sql = \"A\\n--x\\n--y\\n\\nB\"; //String sql = \"GO GO\";", "target": 0}
{"idx": 795, "func": "//LiteralSpecification //list.add(\"LiteralNull\");//When other ok", "target": 0}
{"idx": 796, "func": "Add import control i18n[popupeditableIoPanel.import44=Import]", "target": 0}
{"idx": 797, "func": "end class FigLink", "target": 0}
{"idx": 798, "func": "There shall not be a dependency from ... to ...", "target": 1}
{"idx": 799, "func": "Open an editor on the new file. //", "target": 0}
{"idx": 800, "func": "Remove any menu items for old selection. //", "target": 0}
{"idx": 801, "func": "line 986", "target": 0}
{"idx": 802, "func": "SSS FIXME: This should never get called for constant svalues", "target": 1}
{"idx": 803, "func": "//i18n[explainplanexecuter.options=Options]", "target": 0}
{"idx": 804, "func": "clear message viewer", "target": 0}
{"idx": 805, "func": "MRI also does a pointer comparison here", "target": 0}
{"idx": 806, "func": "public JComponent getContentPane() { JComponent c = super.getContentPane(); return c; }", "target": 0}
{"idx": 807, "func": "rest in ivar count followed by name/value pairs", "target": 0}
{"idx": 808, "func": "//{{{ need to convert entries of 'props' to PropValue instances", "target": 0}
{"idx": 809, "func": "BASE64", "target": 0}
{"idx": 810, "func": "For all Files in this folder, we need to check if there have been modifications.", "target": 0}
{"idx": 811, "func": "Get the names of all the selected tables in a comma separated list,", "target": 0}
{"idx": 812, "func": "line 1651", "target": 0}
{"idx": 813, "func": "PAINT", "target": 0}
{"idx": 814, "func": "If we know the encoding, we can decode the argument value, to make it easier to read for the user", "target": 0}
{"idx": 815, "func": "(non-Javadoc) @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeature(org.eclipse.emf.ecore.EClass, java.lang.String, java.lang.String)", "target": 0}
{"idx": 816, "func": "corresponding to COLUMNS", "target": 0}
{"idx": 817, "func": "Create type parameters", "target": 0}
{"idx": 818, "func": "//throw new UnsupportedOperationException(\"Oracle doesn't support using sequences for column defaults\");", "target": 0}
{"idx": 819, "func": "category 2", "target": 0}
{"idx": 820, "func": "get rewriter", "target": 0}
{"idx": 821, "func": "===================== constructors, factories =====================", "target": 0}
{"idx": 822, "func": "One of everything", "target": 0}
{"idx": 823, "func": "Text: Addition of > before each line", "target": 0}
{"idx": 824, "func": "private static StringProperty defaultProperty = new StringProperty();", "target": 0}
{"idx": 825, "func": "check if it is closed", "target": 0}
{"idx": 826, "func": "//Set this to 1 if your application is interactive where the user enters queries and then runs them //Set it to 2 if it is non interactive, such as for instance a JDBC Bridge driver that intercepts SQL", "target": 0}
{"idx": 827, "func": "//dialog.getContentPane().setLayout( new BoxLayout( dialog.getContentPane(), BoxLayout.Y_AXIS ) );", "target": 0}
{"idx": 828, "func": "End of class EudoraMailImportFilter", "target": 0}
{"idx": 829, "func": "i18n[HelpViewerWindow.error.loadchangelog=Error generating Change Log entry for plugin {0}]", "target": 0}
{"idx": 830, "func": "qualify type name if not already qualified...", "target": 0}
{"idx": 831, "func": "//{{{ stop() method", "target": 0}
{"idx": 832, "func": "//if it is an uninitialized proxy, pointing //with this session, then when it is accessed, //the underlying instance will be \"contained\"", "target": 0}
{"idx": 833, "func": "OUT = UNION(IN(succs))", "target": 0}
{"idx": 834, "func": "//{{{ ExpansionToggleBorder class", "target": 0}
{"idx": 835, "func": "@see org.argouml.cognitive.Poster#containsKnowledgeType(java.lang.String)", "target": 0}
{"idx": 836, "func": "Find min, max for the x and y axes", "target": 0}
{"idx": 837, "func": "Create the command stack that will notify this editor as commands are executed. //", "target": 0}
{"idx": 838, "func": "instantiation not allowed", "target": 0}
{"idx": 839, "func": "Should not happen, but if it does we don't want to continue", "target": 0}
{"idx": 840, "func": "let's call the real save method", "target": 0}
{"idx": 841, "func": "2500..257F;", "target": 0}
{"idx": 842, "func": "If externalSchemaLocations are specified, process these ones as well", "target": 0}
{"idx": 843, "func": "now we set request method", "target": 0}
{"idx": 844, "func": "Override in order to provide type safety", "target": 0}
{"idx": 845, "func": "TODO: add trace call?", "target": 1}
{"idx": 846, "func": "get an Iterator of file objects representing links (canonical):", "target": 0}
{"idx": 847, "func": "this is the recent count", "target": 0}
{"idx": 848, "func": "TODO: Shouldn't be creating a new instance here. We should hold the delete action in some central place.", "target": 1}
{"idx": 849, "func": "SECONDS LABEL $NON-NLS-1$", "target": 0}
{"idx": 850, "func": "finally, try to set the catalog, which appears to be a NO-OP in the Informix driver.", "target": 0}
{"idx": 851, "func": "Don't save this - only needed for processing CSV headers currently", "target": 0}
{"idx": 852, "func": "End methods for interacting with Parser", "target": 0}
{"idx": 853, "func": "UNMATCHED RIGHT PAREN ) or \\) throw exception if !syntax.get(RESyntax.RE_UNMATCHED_RIGHT_PAREN_ORD)", "target": 0}
{"idx": 854, "func": "This will not add duplicates. //", "target": 0}
{"idx": 855, "func": "Some duplication for \"super\". See notes for \"this\" above If we're in an enclsing class instance and have a superclass instance our super is the superclass instance.", "target": 0}
{"idx": 856, "func": "consider time periods to be ordered after general objects", "target": 0}
{"idx": 857, "func": "i18n[HibernateConfigController.ReallyRemoveConfig=Are you sure you want to delete configuration \"{0}\".]", "target": 0}
{"idx": 858, "func": "source extensions", "target": 0}
{"idx": 859, "func": "//assembled state gets put in a new array (we read from cache by value!)", "target": 0}
{"idx": 860, "func": "END OF LINE OPERATOR $", "target": 0}
{"idx": 861, "func": "Run a subquery loader", "target": 0}
{"idx": 862, "func": "//Everything written", "target": 0}
{"idx": 863, "func": "//we cannot set the priority here.", "target": 0}
{"idx": 864, "func": "i18n[SQLResultExecuterPanel.cancelButtonLabel=Cancel]", "target": 0}
{"idx": 865, "func": "load plugin", "target": 0}
{"idx": 866, "func": "these operations are ok for lists too", "target": 0}
{"idx": 867, "func": "//Empty body", "target": 0}
{"idx": 868, "func": "@see org.argouml.model.VisibilityKind#getPackage()", "target": 0}
{"idx": 869, "func": "//{{{ readLock() method", "target": 0}
{"idx": 870, "func": "//silly hack to avoid stack overflow...", "target": 1}
{"idx": 871, "func": "i18n[DefaultDatabaseExpander.error.retrieveuserroles=Unable to retrieve user roles]", "target": 0}
{"idx": 872, "func": "//{{{ loadPopupMenu() method", "target": 0}
{"idx": 873, "func": "//$NON-NLS-1$ $NON-NLS1$", "target": 0}
{"idx": 874, "func": "//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc", "target": 0}
{"idx": 875, "func": "//{{{ InstallPanel constructor", "target": 0}
{"idx": 876, "func": "Needs to be done in both cases because if the window goes back to the default layer it goes back behind all other windows too.", "target": 0}
{"idx": 877, "func": "Is this the label feature? //", "target": 0}
{"idx": 878, "func": "iconst_i", "target": 0}
{"idx": 879, "func": "//Should probably create my own table model but i am being a bit slack.", "target": 1}
{"idx": 880, "func": "cf. NB #47191", "target": 0}
{"idx": 881, "func": "@see org.argouml.model.ModelImplementation#getDiagramInterchangeModel()", "target": 0}
{"idx": 882, "func": "TODO should we call test listeners? That might hang too ... //$NON-NLS-1$ default is true", "target": 1}
{"idx": 883, "func": "//for backward compatibility, disable this:", "target": 0}
{"idx": 884, "func": "make sure this mailbox is selected", "target": 0}
{"idx": 885, "func": "if use is not looking for ASCII chars, or if this one is one that is not printable, then convert it into numeric form", "target": 0}
{"idx": 886, "func": "Only update our model if we're visible", "target": 0}
{"idx": 887, "func": "output properties", "target": 0}
{"idx": 888, "func": "//Make the renderer reappear.", "target": 0}
{"idx": 889, "func": "Set a property on the project to make sure that loading a property with the same name from an xml file will not change it.", "target": 0}
{"idx": 890, "func": "Create the multiparts", "target": 0}
{"idx": 891, "func": "//{{{ menuCanceled() method", "target": 0}
{"idx": 892, "func": "//empty cell row 2", "target": 0}
{"idx": 893, "func": "TODO: This method doesn't appear to be used.", "target": 1}
{"idx": 894, "func": "draw yOutliers", "target": 0}
{"idx": 895, "func": "See if we can copy a package right off", "target": 0}
{"idx": 896, "func": "dateAreaBean.setActivityDepositoryContext(); dateAreaBean.getDateArea().setActivitiesSupported(true);", "target": 0}
{"idx": 897, "func": "This is for the case for a local unqualified element that has been bound. //", "target": 0}
{"idx": 898, "func": "//FB TBD different objects for ecore model!", "target": 0}
{"idx": 899, "func": "e.g. text/html; charset=ISO-8859-1", "target": 0}
{"idx": 900, "func": "parse for email addresses and substite with HTML-code", "target": 0}
{"idx": 901, "func": "Third Line with Lists", "target": 0}
{"idx": 902, "func": "//pathButton.setMargin( new Insets( 0,0,0,0 ) );", "target": 0}
{"idx": 903, "func": "create transform & transform shape", "target": 0}
{"idx": 904, "func": "i18n[I18n.noWorkdir=Working directory doesn't exist.\\nDo you want to create it?]", "target": 0}
{"idx": 905, "func": "create new columns in table", "target": 0}
{"idx": 906, "func": "//do not use a custom Icon //the titles of buttons //default button title", "target": 0}
{"idx": 907, "func": "i18n[sqlbookmark.btnTextEdit=Edit]", "target": 0}
{"idx": 908, "func": "======== mailingAddressPanel ========", "target": 0}
{"idx": 909, "func": "Set properties of the stereotype box. Initially not set to be displayed, but this will be changed when we try to render it, if we find we have a stereotype.", "target": 0}
{"idx": 910, "func": "surl can be null if read from a file", "target": 0}
{"idx": 911, "func": "this default implementation will just fill the available border space with a single color", "target": 0}
{"idx": 912, "func": "separatorsVisible", "target": 0}
{"idx": 913, "func": "//{{{ listRoots() method", "target": 0}
{"idx": 914, "func": "A place to store that special hiding space that bindings need to implement things like: eval(\"a = 1\", binding); eval(\"p a\"). All binding instances must get access to this hidden shared scope. We store it here. This will be null if no binding has yet been called.", "target": 0}
{"idx": 915, "func": "how to handle empty target lists? probably the wizstep should only show an empty pane in that case", "target": 1}
{"idx": 916, "func": "JDK 1.4: return Collections.list(e);", "target": 0}
{"idx": 917, "func": "i18n[codeCompletion.prefixConfig.deleteSelRows=Delete selected rows]", "target": 0}
{"idx": 918, "func": "Do not evaluate methods this() or super() in class instance space (i.e. inside a constructor)", "target": 0}
{"idx": 919, "func": "Not strictly necessary but probably desirable. JUnit 4-specific test GUIs will show just \"failures\". But Ant's output shows \"failures\" vs. \"errors\". We would prefer to show \"failure\" for things that logically are.", "target": 0}
{"idx": 920, "func": "each JAR file listed in the plugin's jars property needs to know that we need them", "target": 0}
{"idx": 921, "func": "parameters to pass to script file (or script)", "target": 0}
{"idx": 922, "func": "//were an odd or even number of NOTs encountered //the join string built up by compound paths inside this expression //a flag indicating if the subexpression is known to be boolean", "target": 0}
{"idx": 923, "func": "------------------------------------------- Methods -------------------------------------------", "target": 0}
{"idx": 924, "func": "strip any trailing semi-colons", "target": 0}
{"idx": 925, "func": "//{{{ getLineContext() method", "target": 0}
{"idx": 926, "func": "TODO: this class should be moved to package org.argouml.uml.ui.behavior.common_behavior", "target": 1}
{"idx": 927, "func": "CRC mode link length uid, gid", "target": 0}
{"idx": 928, "func": "WIDE", "target": 0}
{"idx": 929, "func": "Success - expected exception", "target": 0}
{"idx": 930, "func": "Note: this method produces meaningful results only for RubyIO objects. For everything else returns 0.", "target": 0}
{"idx": 931, "func": "TODO: the last argument (recursive flag) should be a selectable option", "target": 0}
{"idx": 932, "func": "change a series paint", "target": 0}
{"idx": 933, "func": "caching is not correct and doesn't seem to help... // enclosingNameSpace.cacheClass( name, genClass );", "target": 1}
{"idx": 934, "func": "otherwise, everything ok.", "target": 0}
{"idx": 935, "func": "set message body", "target": 0}
{"idx": 936, "func": "Detach any non-associationend edges (such as comment edges) already attached before this association node is removed. They'll later be re-attached to the new FigAssociation", "target": 0}
{"idx": 937, "func": "//{{{ removeToolBar() method", "target": 0}
{"idx": 938, "func": "Skip embedded comments in pack format string", "target": 0}
{"idx": 939, "func": "(non-Javadoc) @see org.eclipse.emf.ecore.util.ExtendedMetaData#getFeatureKind(org.eclipse.emf.ecore.EStructuralFeature)", "target": 0}
{"idx": 940, "func": "could happen for custom Criteria impls. Not likely, but... for long term solution, see HHH-3514", "target": 1}
{"idx": 941, "func": "Add the help menu item.", "target": 0}
{"idx": 942, "func": "This is kind of tricky. If the saveIndex was in the redo part of the command list which has now been wiped out, then we can never reach a point where a save is not necessary, not even if we undo all the way back to the beginning. //", "target": 0}
{"idx": 943, "func": "There must be at least one archive path. //", "target": 0}
{"idx": 944, "func": "construct the super-proxy method //", "target": 0}
{"idx": 945, "func": "The field is binary and not in the format expected by the DataType default to hex", "target": 0}
{"idx": 946, "func": "Used by the copy functions. Do not call this function directly. @param source The stereotype to copy from. @param target The object becoming a copy.", "target": 0}
{"idx": 947, "func": "Check if the item is the last item for the series or if it is a NULL value and number of items > 0. We can't draw an area for a single point.", "target": 0}
{"idx": 948, "func": "will have a trailing '.'", "target": 0}
{"idx": 949, "func": "if folder doesn't exist already", "target": 0}
{"idx": 950, "func": "============================ Here are hash internals (This could be extracted to a separate class but it's not too large though) ============================", "target": 0}
{"idx": 951, "func": "ALTER TABLE <TABLENAME> ADD CONSTRAINT NULL_FIELD CHECK (<FIELD> IS NOT NULL)", "target": 0}
{"idx": 952, "func": "i18n[HibernateSQLPanel.alwaysFormat=Always format]", "target": 0}
{"idx": 953, "func": "//TODO: implement, won't do this now", "target": 1}
{"idx": 954, "func": "Set up the 2-byte frequency table", "target": 0}
{"idx": 955, "func": "load window position loadPositions(getViewItem());", "target": 0}
{"idx": 956, "func": "Elements which will be deleted when their container is deleted don't get added to the list of elements to be deleted (but we still want to traverse them looking for other elements to be deleted)", "target": 0}
{"idx": 957, "func": "auto-gen default constructor use default super constructor", "target": 0}
{"idx": 958, "func": "do nothing by default", "target": 0}
{"idx": 959, "func": "TODO: Should frozen error have its own distinct class? If not should more share?", "target": 1}
{"idx": 960, "func": "@see org.tigris.gef.base.Selection#dragHandle(int, int, int, int, org.tigris.gef.presentation.Handle)", "target": 0}
{"idx": 961, "func": "TODO check types!", "target": 1}
{"idx": 962, "func": "//{{{ getTableCellRendererComponent() method", "target": 0}
{"idx": 963, "func": "line 1886", "target": 0}
{"idx": 964, "func": "Search the resource Map and (if not found) file Map", "target": 0}
{"idx": 965, "func": "Retrieve URLs of all the Look and Feel jars and store in lafUrls.", "target": 0}
{"idx": 966, "func": "Properties set-able by the user", "target": 0}
{"idx": 967, "func": "TODO: This does not work! (MVW) Model.getFacade().setBody(expr,guard); Model.getFacade().setExpression(g,expr);", "target": 1}
{"idx": 968, "func": "Scale", "target": 0}
{"idx": 969, "func": "table.put(item.getId(), item.getName());", "target": 0}
{"idx": 970, "func": "new scope for this invocation of the block, based on parent scope", "target": 0}
{"idx": 971, "func": "//{{{ getSettings() method", "target": 0}
{"idx": 972, "func": "Init before building basic blocks below!", "target": 0}
{"idx": 973, "func": "initial spaces spaces before \"at\"", "target": 0}
{"idx": 974, "func": "Folder trash = (AbstractMessageFolder) MainInterface.treeModel.getTrashFolder(); trash folder has uid==105", "target": 0}
{"idx": 975, "func": "umlReserved.add(\"initial\"); umlReserved.add(\"final\"); umlReserved.add(\"fork\"); umlReserved.add(\"join\"); umlReserved.add(\"history\");", "target": 0}
{"idx": 976, "func": "Expected exception caught", "target": 0}
{"idx": 977, "func": "Generate the inner join -- The elements need to be joined to the collection they are in.", "target": 0}
{"idx": 978, "func": "//yyDefRed 889", "target": 0}
{"idx": 979, "func": "Skips '-'", "target": 0}
{"idx": 980, "func": "Create package meta-data objects", "target": 0}
{"idx": 981, "func": "expand all rows", "target": 0}
{"idx": 982, "func": "Internal method used for both cell and popup work.", "target": 0}
{"idx": 983, "func": "end class ChildGenRelated", "target": 0}
{"idx": 984, "func": "don't add \"\" to the archive", "target": 0}
{"idx": 985, "func": "Argument.class", "target": 0}
{"idx": 986, "func": "//{{{ setCaretBlinkEnabled() method", "target": 0}
{"idx": 987, "func": "and finishes at back", "target": 0}
{"idx": 988, "func": "line 1305", "target": 0}
{"idx": 989, "func": "first off, make sure that we've got a command and a vssdir ...", "target": 0}
{"idx": 990, "func": "start/end index default value for string getters and setters", "target": 0}
{"idx": 991, "func": "weight", "target": 0}
{"idx": 992, "func": "pre Kaffe 1.1.5", "target": 0}
{"idx": 993, "func": "ipcHelper.executeCommand(ExternalToolsHelper.getSALearn() + \" --no-rebuild --spam --single\");", "target": 0}
{"idx": 994, "func": "//{{{ getHistory() method", "target": 0}
{"idx": 995, "func": "Flag to indicate if we are the main application or being integrated in another top level application such as Eclipse (via the ArgoEclipse plugin). TODO: This is a temporary measure until ProjectBrowser can be refactored more appropriately. - tfm", "target": 1}
{"idx": 996, "func": "List OPERATIONS:", "target": 0}
{"idx": 997, "func": "adding something to the returned list should NOT change the chart", "target": 0}
{"idx": 998, "func": "promise to implement two to N", "target": 0}
{"idx": 999, "func": "Both primitives, do primitive cast", "target": 0}
{"idx": 1000, "func": "If it's a jar, clean it up and make it look like a file url", "target": 1}
{"idx": 1001, "func": "Subclasses may override to add descriptors.", "target": 0}
{"idx": 1002, "func": "add Figs to the FigNode in back-to-front order Put this rectangle behind the rest, so it goes first", "target": 0}
{"idx": 1003, "func": "(NOT (IS_NULL a b) ) => (IS_NOT_NULL a b)", "target": 0}
{"idx": 1004, "func": "two args, no block; do nothing", "target": 0}
{"idx": 1005, "func": "//{{{ InstallButton class", "target": 0}
{"idx": 1006, "func": "Ignore if the directory does not exist. This error will throw when running from the Eclipse setup.", "target": 0}
{"idx": 1007, "func": "return the (fully resolved) identifier value, but do not resolve to the actual referenced entity instance NOTE: the owner of the association is not really the owner of the id!", "target": 0}
{"idx": 1008, "func": "Force the table to be at least 70 pixels high", "target": 0}
{"idx": 1009, "func": "Test method for 'org.columba.core.tagging.TagManager.getAllTags()'", "target": 0}
{"idx": 1010, "func": "Maximum time we won't warn about.", "target": 0}
{"idx": 1011, "func": "try null keys", "target": 0}
{"idx": 1012, "func": "end method", "target": 0}
{"idx": 1013, "func": "Putting the string first means it works even if the attribute is null", "target": 0}
{"idx": 1014, "func": "silly that we reference the vertical scroll bar here directly. we do this so that the horizontal scroll bar is flush with the vertical scroll bar", "target": 1}
{"idx": 1015, "func": "delete last ','", "target": 0}
{"idx": 1016, "func": "call the function in the app code that checks for unexpected conditions in the DB as it will be after doing the update", "target": 0}
{"idx": 1017, "func": "This just notifies those things that are affected by the selection. //", "target": 0}
{"idx": 1018, "func": "Identify the class loader we will be using. Ant may be in a webapp or embedded in a different app", "target": 0}
{"idx": 1019, "func": "//{{{ getPath() method", "target": 0}
{"idx": 1020, "func": "TODO: This requires that the tests be run with assertions enabled which isn't guaranteed in all environments.", "target": 1}
{"idx": 1021, "func": "print nice output about what we are doing for the log", "target": 0}
{"idx": 1022, "func": "//Synch is needed because a clear can occur while add occurs", "target": 0}
{"idx": 1023, "func": "beyond last visible line", "target": 0}
{"idx": 1024, "func": "//{{{ createWindowTableScroller() method", "target": 0}
{"idx": 1025, "func": "now update all changed or added rows fks", "target": 0}
{"idx": 1026, "func": "TODO: We can choose between something which matches UML 1.4 in name or something that matches in functionality. We've chosen functionality for now, but this will create a name conflict during the migration process. - tfm", "target": 1}
{"idx": 1027, "func": "//foo.bars.size (also handles deprecated stuff like foo.bars.maxelement for backwardness)", "target": 0}
{"idx": 1028, "func": "Build the remote lists of messages that are UNSEEN, FLAGGED, DELETED, JUNK", "target": 0}
{"idx": 1029, "func": "add message \"1.eml\" as inputstream to folder", "target": 0}
{"idx": 1030, "func": "line 1837", "target": 0}
{"idx": 1031, "func": "//yyRindex 945", "target": 0}
{"idx": 1032, "func": "focus name textfield", "target": 0}
{"idx": 1033, "func": "listeners", "target": 0}
{"idx": 1034, "func": "assign a color for each unique value", "target": 0}
{"idx": 1035, "func": "i18n[OracleAliasPrefsPanel.AccessibleButSys=Allow accessible Schemas excluding SYS]", "target": 0}
{"idx": 1036, "func": "TODO: missing additional logic for dealing with conflicting protected fields.", "target": 1}
{"idx": 1037, "func": "title = \"\" because already done for Optional", "target": 0}
{"idx": 1038, "func": "save entering the try if there's nothing to ensure", "target": 0}
{"idx": 1039, "func": "end class ActionAddMessage", "target": 0}
{"idx": 1040, "func": "if the title graph is empty, we can assume some default", "target": 0}
{"idx": 1041, "func": "Same class, other operation", "target": 0}
{"idx": 1042, "func": "Setup the applications Look and Feel.", "target": 0}
{"idx": 1043, "func": "Iteration should be fast", "target": 0}
{"idx": 1044, "func": "Locate the auxiliary script", "target": 0}
{"idx": 1045, "func": "//{{{ PluginsMenuButton constructor", "target": 0}
{"idx": 1046, "func": "perform the dispatch", "target": 0}
{"idx": 1047, "func": "//Note: match.groups() includes group 0", "target": 0}
{"idx": 1048, "func": "Iterate up to N_ITERS times to improve the tables.", "target": 0}
{"idx": 1049, "func": "pattern test", "target": 0}
{"idx": 1050, "func": "i18n[UpdateControllerImpl.releaseFileDownloadFailedMsg=Release file couldn't be downloaded. Please check your settings.]", "target": 0}
{"idx": 1051, "func": "//this handles the need to perform a 'step'. calculate the step point", "target": 0}
{"idx": 1052, "func": "This check the state of the TestElement and if returns false it disable the loaded node", "target": 0}
{"idx": 1053, "func": "we presume the stream is encoded using the default char encoding", "target": 0}
{"idx": 1054, "func": "data is an object - assume already validated", "target": 0}
{"idx": 1055, "func": "clean the history", "target": 0}
{"idx": 1056, "func": "close DB", "target": 0}
{"idx": 1057, "func": "arithmetic", "target": 0}
{"idx": 1058, "func": "was expected", "target": 0}
{"idx": 1059, "func": "Set the working directory", "target": 0}
{"idx": 1060, "func": "don't show menu items to dock into a plain view", "target": 0}
{"idx": 1061, "func": "//{{{ getPluginList() method", "target": 0}
{"idx": 1062, "func": "//{{{ goToPrevWord() method", "target": 0}
{"idx": 1063, "func": "//{{{ getPermissions() method", "target": 0}
{"idx": 1064, "func": "glocal grid line colors", "target": 0}
{"idx": 1065, "func": "this is the first period, but it is only partially visible so check that the label will fit before displaying it...", "target": 0}
{"idx": 1066, "func": "//{{{ removeStructureMatcher() method", "target": 0}
{"idx": 1067, "func": "We encountered '\\0' when were reading the buffer above, increment the number of read bytes.", "target": 0}
{"idx": 1068, "func": "The captureToSummary test writes to stdout and stderr, good for verifying that the TestListener support doesn't break anything.", "target": 0}
{"idx": 1069, "func": "This should never happen as we check above for the duplicate.", "target": 0}
{"idx": 1070, "func": "now remove one target by setting subset:", "target": 0}
{"idx": 1071, "func": "Change import precedence if we are a class body/instance Get import first.", "target": 0}
{"idx": 1072, "func": "Insert the test plan node", "target": 0}
{"idx": 1073, "func": "DEPRECATED METHODS", "target": 0}
{"idx": 1074, "func": "i18n[firebird.showView=Show view source]", "target": 0}
{"idx": 1075, "func": "Ignore the exception and return false.", "target": 0}
{"idx": 1076, "func": "extract item from array", "target": 0}
{"idx": 1077, "func": "name cannot be null", "target": 0}
{"idx": 1078, "func": "//{{{ addKeyword() method", "target": 0}
{"idx": 1079, "func": "N.B. These entry indexes MUST agree with the SearchControls SCOPE_LEVELS, i.e. javax.naming.directory.SearchControls.OBJECT_SCOPE, ONELEVEL_SCOPE, SUBTREE_SCOPE These have the values 0,1,2 so can be used as indexes in the array as well as the value for the search itself. N.B. Although the strings are used to set and get the options, language change does not currently cause a problem, because that always saves the current settings first, and then recreates all the GUI classes.", "target": 0}
{"idx": 1080, "func": "Bind the order-by", "target": 0}
{"idx": 1081, "func": "Set any default request headers", "target": 0}
{"idx": 1082, "func": "Has to be done directly on the main frame because of racing condition at start up. //_aliasesListWindow.nowVisible(true);", "target": 0}
{"idx": 1083, "func": "Return a String representation of the cipher text //$NON-NLS-1$", "target": 0}
{"idx": 1084, "func": "Generate a branch of the constructor switch. This method is called by generateConstructorSwitch. The code generated by this method assumes that the argument array is on the stack.", "target": 0}
{"idx": 1085, "func": "this ensure that the grid bands will be displayed correctly.", "target": 0}
{"idx": 1086, "func": "number of goals should now be 0", "target": 0}
{"idx": 1087, "func": "i18n[userscript.scriptCompletedErr=Script completed with errors]", "target": 0}
{"idx": 1088, "func": "constants for the messages to suppress by flags and their corresponding properties", "target": 0}
{"idx": 1089, "func": "Default Operation", "target": 0}
{"idx": 1090, "func": "//{{{ getHighlightedForeground() method", "target": 0}
{"idx": 1091, "func": "HACK: reading encoding", "target": 1}
{"idx": 1092, "func": "Process address lists", "target": 0}
{"idx": 1093, "func": "if it's not a rescue or ensure, there's a frame associated, so decrement", "target": 0}
{"idx": 1094, "func": "Look and feel", "target": 0}
{"idx": 1095, "func": "put cbNameSpace on the top of the stack", "target": 0}
{"idx": 1096, "func": "@see org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode#getWeight()", "target": 0}
{"idx": 1097, "func": "end JcmdProcessTest.java", "target": 0}
{"idx": 1098, "func": "//TODO: make the explorer listen to project member property //changes... to eliminate coupling on gui.", "target": 1}
{"idx": 1099, "func": "// case SESSION_BEAN_GRANT_AND_REVOKE: return FirebirdManagerGrantPreferenceBean.class.getClassLoader();", "target": 0}
{"idx": 1100, "func": "collections ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 1101, "func": "titleLabel.setBackground(UIManager.getColor(\"Label.background\"));", "target": 0}
{"idx": 1102, "func": "use Cache specified by classname", "target": 0}
{"idx": 1103, "func": "//TODO: is this 100% correct?", "target": 1}
{"idx": 1104, "func": "//MClassifier", "target": 0}
{"idx": 1105, "func": "and now remove them", "target": 0}
{"idx": 1106, "func": "angle", "target": 0}
{"idx": 1107, "func": "Build the collection of new child descriptors. //", "target": 0}
{"idx": 1108, "func": "get meta's from <class>", "target": 0}
{"idx": 1109, "func": "this should be moved to a ui action.", "target": 1}
{"idx": 1110, "func": "Column name", "target": 0}
{"idx": 1111, "func": "i18n[codeCompletion.globalFunctCompltion=If there is no matching prefix configuration functions should complete like:]", "target": 0}
{"idx": 1112, "func": "Verify insert worked only if the dialect supports sub-second timestamp values", "target": 0}
{"idx": 1113, "func": "Since this is an explicit FROM element, it can't be implied in the FROM clause.", "target": 0}
{"idx": 1114, "func": "draw median", "target": 0}
{"idx": 1115, "func": "List of modules, classes, and methods defined in this scope!", "target": 0}
{"idx": 1116, "func": "Add the element to the diagram", "target": 0}
{"idx": 1117, "func": "Set up a deferred extent so the document root we create definitely will not be added to the resource. //", "target": 0}
{"idx": 1118, "func": "Register tabs to display in the details panel for schema nodes.", "target": 0}
{"idx": 1119, "func": "no event is generated if the dataset is already empty", "target": 0}
{"idx": 1120, "func": "stop checking rules if there was a match", "target": 0}
{"idx": 1121, "func": "///////////////////////////////////////////////////////Printing", "target": 0}
{"idx": 1122, "func": "//{{{ addWord() method", "target": 0}
{"idx": 1123, "func": "@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAFeatureCallParameters(tudresden.ocl.parser.node.AFeatureCallParameters)", "target": 0}
{"idx": 1124, "func": "updates the instructions addresses in the catch, local var and line number tables", "target": 0}
{"idx": 1125, "func": "get plugin-handler", "target": 0}
{"idx": 1126, "func": "v += gv ~ 1/2/sqrt()", "target": 0}
{"idx": 1127, "func": "need to look it up from the persistence-context", "target": 0}
{"idx": 1128, "func": "//System.err.println(\"y=\" + y + \",offsetY=\" + offsetY // + \",size.height=\" + size.height // + \",win.height=\" + win.getHeight());", "target": 0}
{"idx": 1129, "func": "variable args with block", "target": 0}
{"idx": 1130, "func": "Check the timestamp on the remote interface", "target": 0}
{"idx": 1131, "func": "@see org.argouml.uml.diagram.ui.FigNodeModelElement#removeFromDiagramImpl()", "target": 0}
{"idx": 1132, "func": "handles all children of relationship including extend and include which are not members of core", "target": 0}
{"idx": 1133, "func": "wait for errThread to start", "target": 0}
{"idx": 1134, "func": "cancel command execution/updateGUI methods, if folder selection has been modified", "target": 0}
{"idx": 1135, "func": "i18n[HibernateConfigPanel.FactoryProvider=SessionFactoryImpl provider]", "target": 0}
{"idx": 1136, "func": "TestPlan and WorkBench are the only children of the root", "target": 0}
{"idx": 1137, "func": "//TODO: entities CAN be compared, by PK, fix this! -> only if/when we can extract the id values....", "target": 1}
{"idx": 1138, "func": "Scan forward, matching that bracket", "target": 0}
{"idx": 1139, "func": "return nothing", "target": 0}
{"idx": 1140, "func": "item =", "target": 0}
{"idx": 1141, "func": "'baseNegativeItemLabelAnchor' : immutable, no need to clone reference", "target": 0}
{"idx": 1142, "func": "Do we need to perform further processing?", "target": 0}
{"idx": 1143, "func": "@see org.argouml.uml.ui.ActionAddDiagram#createDiagram(Object)", "target": 0}
{"idx": 1144, "func": "diffSourceSession = null; setPasteMenuEnabled(false); PreferencesManager.unload();", "target": 0}
{"idx": 1145, "func": "line 1476", "target": 0}
{"idx": 1146, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsSchemasInProcedureCalls()", "target": 0}
{"idx": 1147, "func": "{A, A} are offenders", "target": 0}
{"idx": 1148, "func": "remove \".xcs\"", "target": 0}
{"idx": 1149, "func": "//create the message", "target": 0}
{"idx": 1150, "func": "Notes: It would not be hard to eliminate the use of org.objectweb.asm.Type from this class, making the distribution a tiny bit smaller.", "target": 1}
{"idx": 1151, "func": "The RE constructor uses this to look up the constant for a string", "target": 0}
{"idx": 1152, "func": "Create the color-change dialog", "target": 0}
{"idx": 1153, "func": "we should never get here because the areEqual function is only called when we are trying to update the database, so we know that we have a DataType object for this column (or we would have been stopped from editing by the isEditableXXX methods), but we need a return here to keep the compiler happy.", "target": 0}
{"idx": 1154, "func": "don't show element imports in profiles", "target": 0}
{"idx": 1155, "func": "// private boolean _blockCaretEnabled = false;", "target": 0}
{"idx": 1156, "func": "switch for", "target": 0}
{"idx": 1157, "func": "class found but restricted name; this is actually the case we're looking for in JDK 1.3+, so catch the exception and return", "target": 0}
{"idx": 1158, "func": "overwrite this method", "target": 0}
{"idx": 1159, "func": "no annotated methods found, skip", "target": 0}
{"idx": 1160, "func": "This is used as an error indicator", "target": 0}
{"idx": 1161, "func": "Dummy top-level method for the class", "target": 0}
{"idx": 1162, "func": "//{{{ addToLetterMap() method", "target": 0}
{"idx": 1163, "func": "//in.close();", "target": 0}
{"idx": 1164, "func": "XMLInfo", "target": 0}
{"idx": 1165, "func": "Begin BeanShell Modification - made conditional on debug", "target": 0}
{"idx": 1166, "func": "after clearing, reverts to default group", "target": 0}
{"idx": 1167, "func": "should never get to here when stringIndex != 0", "target": 0}
{"idx": 1168, "func": "Remove all items in the group, otherwise the model event listeners remain: TODO: Why does a FigGroup not do this?", "target": 1}
{"idx": 1169, "func": "this is only possible for 3rd party controllers by default", "target": 0}
{"idx": 1170, "func": "//setText(\"!\");", "target": 0}
{"idx": 1171, "func": "// return get().getProperty(\"mrj.version\") != null;", "target": 0}
{"idx": 1172, "func": "Reset for other users", "target": 0}
{"idx": 1173, "func": "Description multipart", "target": 0}
{"idx": 1174, "func": "private static final StereotypeView[] stereotypeViewMap; static { stereotypeViewMap = new StereotypeView[3]; StereotypeView. stereotypeViewMap[DiagramAppearance.STEREOTYPE_VIEW_TEXTUAL] = StereotypeView.TEXTUAL; stereotypeViewMap[DiagramAppearance.STEREOTYPE_VIEW_BIG_ICON] = StereotypeView.BIG_ICON; stereotypeViewMap[DiagramAppearance.STEREOTYPE_VIEW_SMALL_ICON] = StereotypeView.SMALL_ICON; }", "target": 0}
{"idx": 1175, "func": "//--", "target": 0}
{"idx": 1176, "func": "wait until thread has completed", "target": 0}
{"idx": 1177, "func": "chart title", "target": 0}
{"idx": 1178, "func": "Only take into account the stereotype width, not the height, since the height is included in the name fig:", "target": 0}
{"idx": 1179, "func": "public CalendarItem getSelected() { int row = getSelectedRow(); return ((CheckableItemListTableModel) getModel()).getElement(row); }", "target": 0}
{"idx": 1180, "func": "only the first row (containing data) is editable", "target": 0}
{"idx": 1181, "func": "Place the toolbar at the bottom of the group", "target": 0}
{"idx": 1182, "func": "equal to first visible line", "target": 0}
{"idx": 1183, "func": "InterleaveController in inner loop", "target": 0}
{"idx": 1184, "func": "//{{{ isStructureHighlightEnabled() method", "target": 0}
{"idx": 1185, "func": "@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()", "target": 0}
{"idx": 1186, "func": "i18n[I18n.EditorCommand=Editor command]", "target": 0}
{"idx": 1187, "func": "assertTrue(\"return code is invalid: \" + retCode, retCode!=0);", "target": 0}
{"idx": 1188, "func": "block (primary)", "target": 0}
{"idx": 1189, "func": "Now is the best time to record isUndoable because later we would have to do all the executes again! This makes canUndo very simple! //", "target": 0}
{"idx": 1190, "func": "Now that we have the file, do the import. Note: the sequence of operations is divided into two sections at this point. The preceeding code ensures that we have a readable file, and the code in the following method call does the import. The reason for splitting at this point is that the Execute operation needs to do an import, and it will already have the file to do the import from (which is the same as the file it exported into).", "target": 0}
{"idx": 1191, "func": "// IAliasesList al = getAliasesListInternalFrame().getAliasesList();", "target": 0}
{"idx": 1192, "func": "Mark the messages as deleted", "target": 0}
{"idx": 1193, "func": "TODO : temporary initial step towards HHH-1907", "target": 1}
{"idx": 1194, "func": "//$NON-NLS-1$ //$NON-NLS-2$", "target": 0}
{"idx": 1195, "func": "Computes a three-character escape sequence for the byte, appending it to the StringBuffer. Only characters up to 0xFF should be escaped; all but the least significant byte will be ignored.", "target": 0}
{"idx": 1196, "func": "A project helper may process multiple files. We'll keep track of them - to avoid loops and to allow caching. The caching will probably accelerate things like <antCall>. The key is the absolute file, the value is a processed tree. Since the tree is composed of UE and RC - it can be reused ! protected Hashtable processedFiles=new Hashtable();", "target": 0}
{"idx": 1197, "func": "special headers", "target": 0}
{"idx": 1198, "func": "//$NON-NLS-1$ $NON-NLS-2$", "target": 0}
{"idx": 1199, "func": "TODO: The UML does not seem to define this name. Or is it?", "target": 0}
{"idx": 1200, "func": "Look for a case variation", "target": 0}
{"idx": 1201, "func": "Handle squirrel-sql.jar and documentation archive carefully - they live at the top", "target": 0}
{"idx": 1202, "func": "if user adds mode buffer-local property", "target": 0}
{"idx": 1203, "func": "stay in line-comment state", "target": 0}
{"idx": 1204, "func": "XXX hypothesis: no time expression (inv)", "target": 0}
{"idx": 1205, "func": "//{{{ equals() method", "target": 0}
{"idx": 1206, "func": "i18n[syntax.errAbrev=error / abreviation]", "target": 0}
{"idx": 1207, "func": "Change the directory", "target": 0}
{"idx": 1208, "func": "line 1070", "target": 0}
{"idx": 1209, "func": "//throws PluginException;", "target": 0}
{"idx": 1210, "func": "->set source reference in composermodel when replying this is the original sender's message you selected and replied to", "target": 0}
{"idx": 1211, "func": "For Timestamps, we default to a separate config", "target": 0}
{"idx": 1212, "func": "//we must use the \"remembered\" uk value, since it is //not available from the EntityEntry during assembly", "target": 0}
{"idx": 1213, "func": "we will need to remove ye olde entries", "target": 0}
{"idx": 1214, "func": "A HTTP POST request, with ISO-8859-1 encoding", "target": 0}
{"idx": 1215, "func": "Top level element (Used to hold everything else)", "target": 0}
{"idx": 1216, "func": "Deleting \"source\" here would probably delete the parameters...", "target": 0}
{"idx": 1217, "func": "In case we are converting back from floating point, drop the decimal fraction $NON-NLS-1$", "target": 0}
{"idx": 1218, "func": "Is there a cached parser?", "target": 0}
{"idx": 1219, "func": "line 1822", "target": 0}
{"idx": 1220, "func": "get another line of chunks", "target": 0}
{"idx": 1221, "func": "Just print an error message.", "target": 0}
{"idx": 1222, "func": "i18n[SchemaPropertiesPanel.specifySchemas=Specify Schema loading and caching]", "target": 0}
{"idx": 1223, "func": "no transformations took place, so handle it as we would a non-instrumented class", "target": 0}
{"idx": 1224, "func": "//{{{ ClearTypeSelect class", "target": 0}
{"idx": 1225, "func": "@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)", "target": 0}
{"idx": 1226, "func": "Scan path. abs_path = \"/\" path_segments rel_path = rel_segment [ abs_path ]", "target": 0}
{"idx": 1227, "func": "first test for equality (contains or contained)", "target": 0}
{"idx": 1228, "func": "rangeCrosshairValue", "target": 0}
{"idx": 1229, "func": "cancel question dialog and don't close composer", "target": 0}
{"idx": 1230, "func": "tagValue = true;", "target": 0}
{"idx": 1231, "func": "compile the source files", "target": 0}
{"idx": 1232, "func": "//TODO: move to utils class (JMeterUtils?)", "target": 1}
{"idx": 1233, "func": "search backwards starting from character before ':'.", "target": 0}
{"idx": 1234, "func": "//{{{ getEnterAddsToHistory() method", "target": 0}
{"idx": 1235, "func": "//NOTE: EARLY EXIT!", "target": 0}
{"idx": 1236, "func": "make sure that we don't end up with two separators", "target": 0}
{"idx": 1237, "func": "Find special", "target": 0}
{"idx": 1238, "func": "if if Otherwise, handle the error normally.", "target": 0}
{"idx": 1239, "func": "JASON: Removed as part of patch // void addSessionListener(ISessionListener lis);", "target": 0}
{"idx": 1240, "func": "should never fail See if we can actually find the object Should never happen", "target": 0}
{"idx": 1241, "func": "or a white space must be in front of the keyword.", "target": 0}
{"idx": 1242, "func": "signed short, big-endian", "target": 0}
{"idx": 1243, "func": "//TODO implement other non-text types", "target": 1}
{"idx": 1244, "func": "must be defined", "target": 0}
{"idx": 1245, "func": "//{{{ getLastEdit() method", "target": 0}
{"idx": 1246, "func": "//{{{ getFocusCycleRoot() method", "target": 0}
{"idx": 1247, "func": "If there is an adapter of the correct type, return the item label //", "target": 0}
{"idx": 1248, "func": "//Designer.TheDesigner.getToDoList().removeAllElements();", "target": 0}
{"idx": 1249, "func": "scan backwards looking for the start", "target": 0}
{"idx": 1250, "func": "i18n[userscript.dlgTabScriptsEdit=Edit...]", "target": 0}
{"idx": 1251, "func": "Adding Labels and Separators", "target": 0}
{"idx": 1252, "func": "Target has been deleted", "target": 0}
{"idx": 1253, "func": "Force reload data", "target": 0}
{"idx": 1254, "func": "Low level invocation routine. Should only be called after any defaults have been applied.", "target": 0}
{"idx": 1255, "func": "direct invocation of the command", "target": 0}
{"idx": 1256, "func": "the plot field is NOT tested", "target": 1}
{"idx": 1257, "func": "Remove trailing splitter", "target": 0}
{"idx": 1258, "func": "do nothing, the cookie manager has to accept changes.", "target": 0}
{"idx": 1259, "func": "//{{{ ActionListener...", "target": 0}
{"idx": 1260, "func": "layout.setVisualDateRangeRounder(new BoundaryRounder(DateRangeI.RANGE_TYPE_DAY, true, false, false)); DateRangeRounder for AllDay Events", "target": 0}
{"idx": 1261, "func": "set to the default", "target": 0}
{"idx": 1262, "func": "if the suffix does not starts with a '.' and the char preceding the suffix is a '.', we assume the user wants to remove the '.' as well (see docs)", "target": 0}
{"idx": 1263, "func": "remove cache file", "target": 0}
{"idx": 1264, "func": "These are a list of arrow types.", "target": 0}
{"idx": 1265, "func": "//moveGap(-1,0,\"contentInserted\");", "target": 0}
{"idx": 1266, "func": "Find power-of-two sizes best matching arguments", "target": 0}
{"idx": 1267, "func": "to lower case", "target": 0}
{"idx": 1268, "func": "now test that the clone is independent of the original", "target": 0}
{"idx": 1269, "func": "Get the version from the tag.", "target": 0}
{"idx": 1270, "func": "$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$", "target": 0}
{"idx": 1271, "func": "initialize cache of parameter types to method", "target": 0}
{"idx": 1272, "func": "//{{{ getSearchMatcher() method", "target": 0}
{"idx": 1273, "func": "contains already a single element", "target": 0}
{"idx": 1274, "func": "Find new doablesLast", "target": 0}
{"idx": 1275, "func": "tool bar and status bar gets added in propertiesChanged() depending in the 'tool bar alternate layout' setting.", "target": 0}
{"idx": 1276, "func": "Set up a VSSHistory task", "target": 0}
{"idx": 1277, "func": "record the fact that it's escaped", "target": 0}
{"idx": 1278, "func": "ignore this if the class being used as a task does not have a set project method.", "target": 0}
{"idx": 1279, "func": "e.g. Long.MIN_VALUE", "target": 0}
{"idx": 1280, "func": "TextAShape titleText = new TextAShape(DEFAULT_TITLE_TEXT_SHAPE_NAME, // \"$startTime$ - $endTimeExcl$ ($timeZoneShort$)\", // titleTextAbsRect, TextAShape.TYPE_SINGE_LINE, textFont, // textPaint, new AtStart(0), new AtStart(-3), GfxUtil.AA_HINT_ON);", "target": 0}
{"idx": 1281, "func": "Now we're into processing each specific path item strategy. At the moment, we only know PathItemPlacement", "target": 0}
{"idx": 1282, "func": "//Forks have their own outgoing transitions critic", "target": 0}
{"idx": 1283, "func": "2nd compartment, so adjust Y appropriately", "target": 0}
{"idx": 1284, "func": "show splash screen", "target": 0}
{"idx": 1285, "func": "20030531, karlpeder setting headerKeys to lowercase for lookup!", "target": 0}
{"idx": 1286, "func": "check if contact is tagged", "target": 0}
{"idx": 1287, "func": "the critiquing thread should wait if disabled.", "target": 0}
{"idx": 1288, "func": "simple one-shot execution", "target": 0}
{"idx": 1289, "func": "There is a bug in GEF where positioning nodes can affect edge positions. We need to do 3 iterations to protect against that.", "target": 0}
{"idx": 1290, "func": "deletes the \", \"", "target": 0}
{"idx": 1291, "func": "check three entries", "target": 0}
{"idx": 1292, "func": "draw the outline of the filled polygon", "target": 0}
{"idx": 1293, "func": "//destinationButton.setText(destinationFolder.getTreePath());", "target": 0}
{"idx": 1294, "func": "@bgen(jjtree) ArrayDimensions", "target": 0}
{"idx": 1295, "func": "this is either style.getBackgroundColor() or styles[defaultID].getBackgroundColor()", "target": 0}
{"idx": 1296, "func": "clear message viewer /tableController.valueChanged(new ListSelectionEvent(this,-1,-1,false));", "target": 0}
{"idx": 1297, "func": "getting folder info", "target": 0}
{"idx": 1298, "func": "add ant properties", "target": 0}
{"idx": 1299, "func": "//i18n[PreferencesPanel.colTypeMappingBorderLabel=Column Type Mapping]", "target": 0}
{"idx": 1300, "func": "What host am I running on?", "target": 0}
{"idx": 1301, "func": "(NOT (NE a b) ) => (EQ a b)", "target": 0}
{"idx": 1302, "func": "//{{{ DockableListHandler class", "target": 0}
{"idx": 1303, "func": "store it", "target": 0}
{"idx": 1304, "func": "Multi-param dialect functions...", "target": 0}
{"idx": 1305, "func": "TODO: make static?", "target": 1}
{"idx": 1306, "func": "In case the connection won't be able to tell its Auto Commit state, this is the best default we have.", "target": 0}
{"idx": 1307, "func": "test with null list", "target": 0}
{"idx": 1308, "func": "try to use POSIX for this first", "target": 0}
{"idx": 1309, "func": "Host always", "target": 0}
{"idx": 1310, "func": "skip if no reference available", "target": 0}
{"idx": 1311, "func": "convert the Parameters", "target": 0}
{"idx": 1312, "func": "The value of an id attribute of this node.", "target": 0}
{"idx": 1313, "func": "i18n[mysql.alterDlgAlter=Alter]", "target": 0}
{"idx": 1314, "func": "Do numeric cast", "target": 0}
{"idx": 1315, "func": "//{{{ Recorder constructor", "target": 0}
{"idx": 1316, "func": "protected", "target": 0}
{"idx": 1317, "func": "failed to initialise the class", "target": 0}
{"idx": 1318, "func": "Derive the mapping of content types to parsers", "target": 0}
{"idx": 1319, "func": "later on we need to know if certain code is called from the main thread", "target": 0}
{"idx": 1320, "func": "the following line seems to be necessary on Windows under JDK 1.2", "target": 0}
{"idx": 1321, "func": "MRI-compatible basename handling for windows drive letter paths", "target": 0}
{"idx": 1322, "func": "-ci", "target": 0}
{"idx": 1323, "func": "//setBorder(BorderFactory.createEmptyBorder(2, 0, 2, 0));", "target": 0}
{"idx": 1324, "func": "TODO: newTypeError does not offer enough for ruby error string...", "target": 1}
{"idx": 1325, "func": "use same ClassIndex as metaclass, since we're technically still of that type", "target": 0}
{"idx": 1326, "func": "ignore this if the class being referenced does not have a set project method.", "target": 0}
{"idx": 1327, "func": "//All states in the old reference state's path are deleted as listeners", "target": 0}
{"idx": 1328, "func": "This class is not cloned per thread, so this is shared //@GuardedBy(\"this\")", "target": 0}
{"idx": 1329, "func": "TODO: Use our extension registration mechanism for our internal classes as well, so everything is treated the same", "target": 1}
{"idx": 1330, "func": "TODO: Does anyone use command line? If so, localization is needed - tfm", "target": 1}
{"idx": 1331, "func": "QueryTokenizer tests", "target": 0}
{"idx": 1332, "func": "//java1.4 or earlier", "target": 0}
{"idx": 1333, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#getRows()", "target": 0}
{"idx": 1334, "func": "If there is a 3rd column then this represents a connection of between 2 different types of element.", "target": 0}
{"idx": 1335, "func": "detached collection wrappers that get found + reattached during flush shouldn't be ignored", "target": 0}
{"idx": 1336, "func": "i18n[DataSetUpdateableTableModelImpl.info.updateidenticalrows=This operation will update {0} identical rows.\\nDo you wish to proceed?]", "target": 0}
{"idx": 1337, "func": "If the array hasn't been flagged to indicate otherwise swap elements the elements and add again.", "target": 0}
{"idx": 1338, "func": "Don't synchronize this!! Instead, synchronize the loop that calls it.", "target": 0}
{"idx": 1339, "func": "the last element is the direct parent", "target": 0}
{"idx": 1340, "func": "call a target", "target": 0}
{"idx": 1341, "func": "This is the new, better way - use classespath instead of sourcespath. The code is currently the same - you need class files in a directory to use this or jar files.", "target": 1}
{"idx": 1342, "func": "@see org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode#getRank()", "target": 0}
{"idx": 1343, "func": "FETCH STRATEGY", "target": 0}
{"idx": 1344, "func": "compressed size", "target": 0}
{"idx": 1345, "func": "proxy port", "target": 0}
{"idx": 1346, "func": "Skip lines beyond EOF", "target": 0}
{"idx": 1347, "func": "CheckStyle:MethodNameCheck ON", "target": 0}
{"idx": 1348, "func": "Read the header of the encrypted file.", "target": 0}
{"idx": 1349, "func": "Child elements.", "target": 0}
{"idx": 1350, "func": "i18n[mssql.remove=<< Remove]", "target": 0}
{"idx": 1351, "func": "if user cancelled action", "target": 0}
{"idx": 1352, "func": "if the two substrings are longer than the original, then name contains address - so reset the name to null", "target": 0}
{"idx": 1353, "func": "recursively go on", "target": 0}
{"idx": 1354, "func": "i18n[mmsql.catalogErr=The DBNAME of the session's URL is set to '{0}', but the session's current catalog is set to '{1}'.\\n\\nSQL Server doesn't support this in most cases. This is a current issue.]", "target": 0}
{"idx": 1355, "func": "collation", "target": 0}
{"idx": 1356, "func": "//{{{ getModes() method", "target": 0}
{"idx": 1357, "func": "i18n[AbstractRefactoringDialog.showButtonLabel=Show SQL]", "target": 0}
{"idx": 1358, "func": "putValue(SMALL_ICON, ImageLoader.getSmallImageIcon(\"redirect_small.png\")); putValue(LARGE_ICON, ImageLoader.getImageIcon(\"redirect.png\"));", "target": 0}
{"idx": 1359, "func": "TODO: MVW: Why is this not done in GEF?", "target": 1}
{"idx": 1360, "func": "add mimepart to model", "target": 0}
{"idx": 1361, "func": "We've switch the operation! //", "target": 0}
{"idx": 1362, "func": "run threadStarted only if Destination setup on each sample", "target": 0}
{"idx": 1363, "func": "//System.err.println(\"Token#substractRanges(): Entry: \"+this.ranges.length+\", \"+tok.ranges.length);", "target": 0}
{"idx": 1364, "func": "end of script.", "target": 0}
{"idx": 1365, "func": "load_1", "target": 0}
{"idx": 1366, "func": "i18n[dataTypeTimestamp.medium=Medium ({0})]", "target": 0}
{"idx": 1367, "func": "//no text? remove op!", "target": 0}
{"idx": 1368, "func": "Reenable the action", "target": 0}
{"idx": 1369, "func": "forces recalculation of the axis range", "target": 0}
{"idx": 1370, "func": "itemLabelsVisible", "target": 0}
{"idx": 1371, "func": "Split the methods into constructors and regular method lists", "target": 1}
{"idx": 1372, "func": "//{{{ Gutter constructor", "target": 0}
{"idx": 1373, "func": "//{{{ loadRegisters() method", "target": 0}
{"idx": 1374, "func": "copy CopyMessageCommand command = new CopyMessageCommand(result); CommandProcessor.getInstance().addOp(command);", "target": 0}
{"idx": 1375, "func": "Get the transaction sample result", "target": 0}
{"idx": 1376, "func": "both values are okay, so create a correct time", "target": 0}
{"idx": 1377, "func": "cached DirectoryScanner instance for our own Project only", "target": 0}
{"idx": 1378, "func": "pass command to scheduler", "target": 0}
{"idx": 1379, "func": "//public boolean isSubselectLoadable();", "target": 0}
{"idx": 1380, "func": "BAR Y", "target": 0}
{"idx": 1381, "func": "for use by test code only", "target": 0}
{"idx": 1382, "func": "line 814", "target": 0}
{"idx": 1383, "func": "try name first", "target": 0}
{"idx": 1384, "func": "//{{{ ComponentHandler class", "target": 0}
{"idx": 1385, "func": "--- DEPRECATED METHODS -------------------------------------------------", "target": 0}
{"idx": 1386, "func": "If we are a reference, create a Path from the reference", "target": 0}
{"idx": 1387, "func": "check if the final polygon needs to be clipped", "target": 0}
{"idx": 1388, "func": "Test if there is a trailing html tag", "target": 0}
{"idx": 1389, "func": "failsafe, set the Line as the origin of the error.", "target": 0}
{"idx": 1390, "func": "//{{{ LineInfo class", "target": 0}
{"idx": 1391, "func": "show a chooser dialog for the file name, only xmi is allowed", "target": 0}
{"idx": 1392, "func": "ensure counts are updated correctly", "target": 0}
{"idx": 1393, "func": "Check that the parameter lists match.", "target": 0}
{"idx": 1394, "func": "TODO: Formalize conversion mechanisms between Java and Ruby", "target": 1}
{"idx": 1395, "func": "utf8 lead byte", "target": 0}
{"idx": 1396, "func": "iterate through all possible model elements to determine which are valid to be contained by the selected target", "target": 0}
{"idx": 1397, "func": "//{{{ stringToSelection() method", "target": 0}
{"idx": 1398, "func": "Methondname must always be provided.", "target": 0}
{"idx": 1399, "func": "Once all edges are connected do a compute route on each to make sure that annotations and the edge port is positioned correctly Only do this after all edges are connected as compute route requires all edges to be connected to nodes. TODO: It would be nice not to have to do this and restore annotation positions instead.", "target": 1}
{"idx": 1400, "func": "Simply add the collection to the list. //", "target": 0}
{"idx": 1401, "func": "//tok = Token.createConcat(tok, this.parseFactor());", "target": 0}
{"idx": 1402, "func": "readable form of parameter kind", "target": 0}
{"idx": 1403, "func": "get configuration", "target": 0}
{"idx": 1404, "func": "all implementations of Java 1.5 should support AES", "target": 0}
{"idx": 1405, "func": "//catch permissions denial and keep going", "target": 0}
{"idx": 1406, "func": "add space for the outer tick labels, if any...", "target": 0}
{"idx": 1407, "func": "prefer values from the other object", "target": 0}
{"idx": 1408, "func": "do the \"singleton\" initialization", "target": 0}
{"idx": 1409, "func": "a url is always in a Tag.", "target": 0}
{"idx": 1410, "func": "The content outline is just a tree. //", "target": 0}
{"idx": 1411, "func": "select-range is terminated by declaration of \"from\"", "target": 0}
{"idx": 1412, "func": "//{{{ removeScrollListener() method", "target": 0}
{"idx": 1413, "func": "Reset as in the constructor. //", "target": 0}
{"idx": 1414, "func": "log.info(\"testLastPrevFailed\");", "target": 0}
{"idx": 1415, "func": "@see org.argouml.model.UmlHelper#addListenersToModel(java.lang.Object)", "target": 0}
{"idx": 1416, "func": "set the newly selected item in the library list", "target": 0}
{"idx": 1417, "func": "button panel", "target": 0}
{"idx": 1418, "func": "Read an optional version.", "target": 0}
{"idx": 1419, "func": "build the path stack info to compare", "target": 0}
{"idx": 1420, "func": "line 667", "target": 0}
{"idx": 1421, "func": "prevent accidental use of is below", "target": 0}
{"idx": 1422, "func": "we have read data, so that is not the same state odd-ball case: assume if neither has read data that they are equal", "target": 0}
{"idx": 1423, "func": "Doesn't even look like a URL? Maybe it isn't: Ignore the exception.", "target": 0}
{"idx": 1424, "func": "end of interval", "target": 0}
{"idx": 1425, "func": "TODO: This is using the default platform character encoding. Specifying an encoding will produce more predictable results", "target": 0}
{"idx": 1426, "func": "(non-Javadoc) @see org.columba.api.command.IWorkerStatusController#removeWorkerStatusChangeListener(org.columba.core.gui.statusbar.event.WorkerStatusChangeListener)", "target": 0}
{"idx": 1427, "func": "Are the names the same ?", "target": 0}
{"idx": 1428, "func": "Don't try to instantiate these", "target": 0}
{"idx": 1429, "func": "//{{{ charAt() method", "target": 0}
{"idx": 1430, "func": "@see javax.swing.plaf.metal.MetalTheme#getSystemTextFont()", "target": 0}
{"idx": 1431, "func": "find first non cached dir", "target": 0}
{"idx": 1432, "func": "Create a new graphics context so we start with fresh transforms", "target": 0}
{"idx": 1433, "func": "pseudocolumn query failed, so reset it. Otherwise, we'll mistake the last column for a pseudocolumn and make it uneditable", "target": 0}
{"idx": 1434, "func": "need to add static block here", "target": 1}
{"idx": 1435, "func": "Create the property:", "target": 0}
{"idx": 1436, "func": "\"N/A\" or \"x nodes and x edges\"", "target": 0}
{"idx": 1437, "func": "remove source folder", "target": 0}
{"idx": 1438, "func": "try a dataset with some content...", "target": 0}
{"idx": 1439, "func": "//MappingPackage ePackage = ((MappingRoot)msg.getNotifier()).ePackageMapping();", "target": 0}
{"idx": 1440, "func": "If rootFolder is not cached traverse the tree", "target": 0}
{"idx": 1441, "func": "Create package name, by splitting on / and joining all but the last elements with a \".\", and downcasing them.", "target": 0}
{"idx": 1442, "func": "Find JMeter home dir from the initial classpath", "target": 0}
{"idx": 1443, "func": "(non-Javadoc) @see net.javaprog.ui.wizard.Step#prepareRendering()", "target": 0}
{"idx": 1444, "func": "//i18n[explainplanexecuter.operation=Operation]", "target": 0}
{"idx": 1445, "func": "Javadoc copied from source.", "target": 0}
{"idx": 1446, "func": "get the id from the object", "target": 0}
{"idx": 1447, "func": "both ends must be classes, otherwise there is nothing to merge", "target": 0}
{"idx": 1448, "func": "generate regexps initialization code", "target": 0}
{"idx": 1449, "func": "TODO: A better implementation would be to batch events into logical groups and update the tree one time for the entire group, synchronizing access to the model repository so that it stays consistent during the query. This would likely require doing the updates in a different thread than the event delivery thread to prevent deadlocks, so for right now we protect ourselves with try/catch blocks.", "target": 1}
{"idx": 1450, "func": "This is acceptable", "target": 0}
{"idx": 1451, "func": "private JButton enableButton; private JButton disableButton;", "target": 0}
{"idx": 1452, "func": "Restarts", "target": 0}
{"idx": 1453, "func": "-eltype", "target": 0}
{"idx": 1454, "func": "Finish the declaration.", "target": 0}
{"idx": 1455, "func": "Need better test for Windows", "target": 1}
{"idx": 1456, "func": "Method to get files list to be uploaded.", "target": 0}
{"idx": 1457, "func": "handle: ContentType: text/plain; charset=ISO-8859-1; format=flowed", "target": 0}
{"idx": 1458, "func": "Generate Button --------------------------------------", "target": 0}
{"idx": 1459, "func": "Perhaps something like the following would workd. If not, then traverse up the component hierarchy to a MultEditorPane Rectangle drawingArea = Globals.curEditor().getJComponent().getVisibleRect();", "target": 0}
{"idx": 1460, "func": "2580..259F;", "target": 0}
{"idx": 1461, "func": "//MModelElement modelElement = elementImport.getModelElement();", "target": 0}
{"idx": 1462, "func": "delegate", "target": 0}
{"idx": 1463, "func": "//{{{ WorkThreadListener implementation", "target": 0}
{"idx": 1464, "func": "mark as not spam", "target": 0}
{"idx": 1465, "func": "@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement( java.lang.Object)", "target": 0}
{"idx": 1466, "func": "//{{{ invalidateLineRange() method", "target": 0}
{"idx": 1467, "func": "//@GuardedBy(\"LOCK\")", "target": 0}
{"idx": 1468, "func": "//ResultSet rs = con.getMetaData().getTables(\"dbcopysrc\", null, \"BIGINT_TYPE_TABLE\", new String[]{ \"TABLE\" });", "target": 0}
{"idx": 1469, "func": "set the flag to display the targets and quit", "target": 0}
{"idx": 1470, "func": "//{{{ replaceInSelection() method", "target": 0}
{"idx": 1471, "func": "if d is real small set the inverse to a large number to avoid INF", "target": 0}
{"idx": 1472, "func": "ClassPathException is a type of UtilEvalError", "target": 0}
{"idx": 1473, "func": "DocumentListener method", "target": 0}
{"idx": 1474, "func": "i18n[HibernateConfigPanel.configName=Configuration name]", "target": 0}
{"idx": 1475, "func": "setup dest mock file", "target": 0}
{"idx": 1476, "func": "$NON_NLS-1$ $NON_NLS-1$ $NON_NLS-1$ $NON_NLS-1$ $NON_NLS-1$ $NON_NLS-1$ $NON_NLS-1$", "target": 0}
{"idx": 1477, "func": "//{{{ getResourceAsStream() method", "target": 0}
{"idx": 1478, "func": "merge columns in an existing column", "target": 0}
{"idx": 1479, "func": "TODO : safe to interpret \"map.remove(key) == null\" as non-dirty?", "target": 1}
{"idx": 1480, "func": "//[?, ?] //[?, boolean]", "target": 0}
{"idx": 1481, "func": "The DecisionModel is part of the state of the Designer. It describes what types of decisions, or design issues, the Designer is thinking about at the current time. Critics that are relevant to those decisions are made active, Critics that are not relevant are made inactive. TODO: There is some notion that each decision has a certain importanance at a certain time, but I have not followed through on that because I don't have good examples of how to quantify the importance of a decision. TODO: Right now the individual decisions are just Strings, maybe they should have some non-atomic structure? @author Jason Robbins", "target": 1}
{"idx": 1482, "func": "jpanel1.add(addCriteriaButton, cc.xy(1, 1));", "target": 0}
{"idx": 1483, "func": "This changes the complete structure of the table, so we need to set the column widths again.", "target": 0}
{"idx": 1484, "func": "Ensure we're not running on GCJ, since it's not supported and leads to weird errors", "target": 0}
{"idx": 1485, "func": "GenIC task GenIC class (3 are supported for various versions", "target": 0}
{"idx": 1486, "func": "//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ $NON-NLS-1$", "target": 0}
{"idx": 1487, "func": "last possible start position of a match with this pattern; this is negative if the pattern is longer than the text causing the search loop below to immediately fail //int last_anchor = reverseSearch // ? offset + pattern.length - 1 // : length - pattern.length;", "target": 0}
{"idx": 1488, "func": "//{{{ isFocusTraversable() method", "target": 0}
{"idx": 1489, "func": "The text element has no border, so the line color doesn't matter.", "target": 0}
{"idx": 1490, "func": "HSQLDB 1.7.1 throws error.", "target": 0}
{"idx": 1491, "func": "'' outside comment", "target": 0}
{"idx": 1492, "func": "Well, no matching constructor.", "target": 0}
{"idx": 1493, "func": "//{{{ ToggleAction class", "target": 0}
{"idx": 1494, "func": "Builds a manifestation of an element for an artifact. @param utilizedElement is the packageable element @return manifestation TODO: This needs an extra parameter to specify the model/extent where the new element should be created.", "target": 1}
{"idx": 1495, "func": "this will skip blank lines", "target": 0}
{"idx": 1496, "func": "Cannot do this as part of threadStarted() because the Config elements have not been processed.", "target": 0}
{"idx": 1497, "func": "no number", "target": 0}
{"idx": 1498, "func": "//{{{ getMarkLine() method", "target": 0}
{"idx": 1499, "func": "Need a better way to define the suffixes here...", "target": 1}
{"idx": 1500, "func": "loginMethod = (String) loginMethodComboBox.getSelectedItem();", "target": 0}
{"idx": 1501, "func": "JDK 1.4 workaround", "target": 1}
{"idx": 1502, "func": "@see org.tigris.gef.base.ModeCreateFigPoly#createNewItem(java.awt.event.MouseEvent, int, int)", "target": 0}
{"idx": 1503, "func": "host is nil or the empty string, bind to INADDR_ANY", "target": 0}
{"idx": 1504, "func": "insert surrounding html tags", "target": 0}
{"idx": 1505, "func": "get the \"Cc\" headerfield from the header", "target": 0}
{"idx": 1506, "func": "multiple rows - not good", "target": 1}
{"idx": 1507, "func": "classpath makes no sense", "target": 0}
{"idx": 1508, "func": "//{{{ HyperSearchResult constructor", "target": 0}
{"idx": 1509, "func": "EARLY EXIT!!!", "target": 0}
{"idx": 1510, "func": "Process this first. //", "target": 0}
{"idx": 1511, "func": "================ Instance Methods ================", "target": 0}
{"idx": 1512, "func": "handle multiplicity here since we need the type actually the API of generator is buggy since to generate multiplicity correctly we need the attribute too", "target": 0}
{"idx": 1513, "func": "Object icon = ResourceLoaderWrapper.lookupIcon(s); putValue(Action.NAME, Translator.localize(s)); putValue(Action.SMALL_ICON, icon); Set the tooltip string: putValue(Action.SHORT_DESCRIPTION, Translator.localize(s));", "target": 0}
{"idx": 1514, "func": "The node identifier is already in network byte order, so there is no need to do any byte order reversing. //", "target": 0}
{"idx": 1515, "func": "Make sure the root node for the region exists and has a DataVersion that never complains", "target": 0}
{"idx": 1516, "func": "@see java.awt.event.WindowListener#windowIconified(java.awt.event.WindowEvent)", "target": 0}
{"idx": 1517, "func": "Get the attribute value: //", "target": 0}
{"idx": 1518, "func": "up to ten, stuff into tmp locals, load in reverse order, and assign FIXME: There's probably a slightly smarter way, but is it important?", "target": 1}
{"idx": 1519, "func": "no match with mailto link tags", "target": 0}
{"idx": 1520, "func": "Try changing namespace of element and make sure results track", "target": 0}
{"idx": 1521, "func": "//axis3.setPositiveArrowVisible(true);", "target": 0}
{"idx": 1522, "func": "n.b. we need to recompute the hash in case the key object was modified", "target": 0}
{"idx": 1523, "func": "//list.add(\"OpaqueExpression\");", "target": 0}
{"idx": 1524, "func": "We remove all of them:", "target": 0}
{"idx": 1525, "func": "OK, so that didn't work out... Just ignore any problems and don't set the name in the constraint body better had log it.", "target": 0}
{"idx": 1526, "func": "break out of inner for loop to check next char //}}} //{{{ Handle end of MARK_FOLLOWING", "target": 0}
{"idx": 1527, "func": "@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()", "target": 0}
{"idx": 1528, "func": "we created the document", "target": 0}
{"idx": 1529, "func": "Class", "target": 0}
{"idx": 1530, "func": "//if less than 1.0 then make it 1.0 //add in margin and get exponential value:", "target": 0}
{"idx": 1531, "func": "messageController.createPopupMenu();", "target": 0}
{"idx": 1532, "func": "This Fig is never placed on a diagram. It is only used by the call renderer so that pick list items look like diagram Figs. TODO: This Fig does not represent a model element and so it should not extend FigNodeModelElement. We should split FigNodeModelElement in two, one for base functionality for all nodes and one that is truly for model elements.", "target": 1}
{"idx": 1533, "func": "//+ action names $NON-NLS-1$", "target": 0}
{"idx": 1534, "func": "JPanel innerPanel = builder.getPanel(); FormDebugUtils.dumpAll(innerPanel); setLayout(new BorderLayout()); add(innerPanel, BorderLayout.CENTER);", "target": 0}
{"idx": 1535, "func": "The current JTable that we are working with. This is used only to see when the user moves to a different JTable so we know when to clear the HashMap of DataTypeObjects.", "target": 0}
{"idx": 1536, "func": "//Ignore - We do not want this to stop the build.", "target": 0}
{"idx": 1537, "func": "state[j] &= 0xffffffffL;", "target": 0}
{"idx": 1538, "func": "ALTER TABLE <tableName> MODIFY <columnName> MEDIUMINT NOT NULL AUTO_INCREMENT PRIMARY KEY", "target": 0}
{"idx": 1539, "func": "only relevant when this is a subplot", "target": 0}
{"idx": 1540, "func": "TODO finish unmarshalling of all available properties", "target": 1}
{"idx": 1541, "func": "make sure we are already logged in", "target": 0}
{"idx": 1542, "func": "//ISession[] getActiveSessions();", "target": 0}
{"idx": 1543, "func": "//key", "target": 0}
{"idx": 1544, "func": "//{{{ foldLevelChanged() method", "target": 0}
{"idx": 1545, "func": "throw in drive letters", "target": 0}
{"idx": 1546, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsUnion()", "target": 0}
{"idx": 1547, "func": "i18n[I18n.PropsCopyMsg=Copied existing translations from {0} to {1}]", "target": 0}
{"idx": 1548, "func": "create a new variable using the prefix", "target": 0}
{"idx": 1549, "func": "interiorGap", "target": 0}
{"idx": 1550, "func": "increase progressbar value", "target": 0}
{"idx": 1551, "func": "i18n[mssql.performace=Performance Counters]", "target": 0}
{"idx": 1552, "func": "//////////////////////////////////////////////////////////////user feedback", "target": 0}
{"idx": 1553, "func": "@see org.argouml.uml.ui.UMLComboBoxModel2#isValidElement(Object)", "target": 0}
{"idx": 1554, "func": "check if there are any values earlier than specified by the history count...", "target": 0}
{"idx": 1555, "func": "//Set default single model", "target": 0}
{"idx": 1556, "func": "the actual panning occurs later in the mouseDragged() method", "target": 0}
{"idx": 1557, "func": "TODO support iterate declarator", "target": 1}
{"idx": 1558, "func": "// add(_okBtn); // add(_closeBtn);", "target": 0}
{"idx": 1559, "func": "If we can't do anything else, we'll provide the default select feedback and enable auto-scroll and auto-expand effects.", "target": 0}
{"idx": 1560, "func": "Add the default colors items.", "target": 0}
{"idx": 1561, "func": "i18n[laf.jarZip=JAR/Zip files]", "target": 0}
{"idx": 1562, "func": "could this happen?", "target": 0}
{"idx": 1563, "func": "########################################################################", "target": 0}
{"idx": 1564, "func": "Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //", "target": 0}
{"idx": 1565, "func": "Operations for Text and in-cell work", "target": 0}
{"idx": 1566, "func": "Check name is \"antlib\"", "target": 0}
{"idx": 1567, "func": "first determine the size of the chart rendering area... TODO workout insets for SWT", "target": 1}
{"idx": 1568, "func": "value=\"value\" name=\"sessionid\" $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$ $NON-NLS-1$ $NON-NLS-1$", "target": 0}
{"idx": 1569, "func": "Parse the ejb deployment descriptor. While it may not look like much, we use a SAXParser and an inner class to get hold of all the classfile names for the descriptor.", "target": 0}
{"idx": 1570, "func": "stroke index", "target": 0}
{"idx": 1571, "func": "(non-Javadoc) @see org.columba.core.filter.IFilterRule#addEmptyCriteria()", "target": 0}
{"idx": 1572, "func": "Utility method to set up all the values", "target": 0}
{"idx": 1573, "func": "doesn't java know interruptions are rude? just pretend it didn't happen and go about out business. sheesh!", "target": 0}
{"idx": 1574, "func": "//{{{ _preprocessKeyEvent() method", "target": 0}
{"idx": 1575, "func": "return all the associated counts together", "target": 0}
{"idx": 1576, "func": "Messages", "target": 0}
{"idx": 1577, "func": "endWindow = window;", "target": 0}
{"idx": 1578, "func": "strict", "target": 0}
{"idx": 1579, "func": "@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAListExpressionListOrRangeTail(tudresden.ocl.parser.node.AListExpressionListOrRangeTail)", "target": 0}
{"idx": 1580, "func": "Make a transaction for each resource", "target": 0}
{"idx": 1581, "func": "if the file size is not known, start with a resonable default buffer size", "target": 0}
{"idx": 1582, "func": "normal items at the front or back of the masgn", "target": 0}
{"idx": 1583, "func": "Note: It would be nice to pre-calculate this per series", "target": 1}
{"idx": 1584, "func": "We ensure ASYNC semantics (JBCACHE-1175)", "target": 0}
{"idx": 1585, "func": "gui", "target": 0}
{"idx": 1586, "func": "line 1507", "target": 0}
{"idx": 1587, "func": "-keep", "target": 0}
{"idx": 1588, "func": "i18n[sqlval.clientLogon=Client:]", "target": 0}
{"idx": 1589, "func": "Field TODO: TextArea or TextField", "target": 1}
{"idx": 1590, "func": "@see java.awt.event.WindowListener#windowDeiconified(java.awt.event.WindowEvent)", "target": 0}
{"idx": 1591, "func": "//setBounds(new Rectangle(600, 400));", "target": 0}
{"idx": 1592, "func": "list of nick names", "target": 0}
{"idx": 1593, "func": "TODO: decompose getJavaPackageModule so we don't parse fullName", "target": 1}
{"idx": 1594, "func": "skip first parameter == return type", "target": 0}
{"idx": 1595, "func": "i18n[mssql.windows=Windows text (ANSI)]", "target": 0}
{"idx": 1596, "func": "We need this loop in order to be able to \"unblock\" the join call without actually calling interrupt.", "target": 0}
{"idx": 1597, "func": "ignore switch", "target": 0}
{"idx": 1598, "func": "TODO should class implement SampleListener?", "target": 1}
{"idx": 1599, "func": "i18n[FactoryProviderDialog.title=Name of SessionFactorImpl provider]", "target": 0}
{"idx": 1600, "func": "i18n[firebird.showProcedureSource=Show procedure source]", "target": 0}
{"idx": 1601, "func": "write('S');", "target": 0}
{"idx": 1602, "func": "Make sure we don't try to set things smaller than the minimum", "target": 0}
{"idx": 1603, "func": "Override wrapMapper in order to insert the Wrapper in the chain", "target": 0}
{"idx": 1604, "func": "EQ != 0 (i.e. true)", "target": 0}
{"idx": 1605, "func": "line comments at the end of annotations are not a part of the range of annotation TODO is not including line comments at the end of annotations a bug?", "target": 1}
{"idx": 1606, "func": "//return value != null && value.length() != 0 && value.charAt(0) != SEGMENT_SEPARATOR && validate(value, URIC_HI, URIC_LO, true, true);", "target": 0}
{"idx": 1607, "func": "simple name specified == parent dir + name", "target": 0}
{"idx": 1608, "func": "col2, line 2, B", "target": 0}
{"idx": 1609, "func": "//$NON-NLS-1$ default: normal", "target": 0}
{"idx": 1610, "func": "demandDocumentRoot(ePackage);", "target": 0}
{"idx": 1611, "func": "generate the clsspath", "target": 0}
{"idx": 1612, "func": "If they don't have the same size, the feature maps aren't equal. //", "target": 0}
{"idx": 1613, "func": "only set if all buffers saved/closed", "target": 0}
{"idx": 1614, "func": "i18n[popupeditableIoPanel.notWriteable=File is not writeable.\\nChange file permissions or select a differnt file for export.]", "target": 0}
{"idx": 1615, "func": "build first node only and return true", "target": 0}
{"idx": 1616, "func": "If the edge is from a circle to a circle (e.g. between use cases) we have our own implementation overriding GEF. Which attempts to keep the edges perpendicular if the edge is already close to perpendicular.", "target": 0}
{"idx": 1617, "func": "(non-Javadoc) @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getOutputEPackage()", "target": 0}
{"idx": 1618, "func": "Test sending data with default encoding", "target": 0}
{"idx": 1619, "func": "we found it in the temp PC. Should indicate we are in the midst of processing a result set containing eager fetches via join fetch", "target": 0}
{"idx": 1620, "func": "use gradients and white borders for the section colours", "target": 0}
{"idx": 1621, "func": "following internal components plugin registration //", "target": 0}
{"idx": 1622, "func": "i18n stuff", "target": 0}
{"idx": 1623, "func": "not used", "target": 1}
{"idx": 1624, "func": "Instantiate requestview classes", "target": 0}
{"idx": 1625, "func": "col 1, line 1, A", "target": 0}
{"idx": 1626, "func": "build the command line from what we got the format is cleartool update [options...] [viewpath ...] as specified in the CLEARTOOL.EXE help", "target": 0}
{"idx": 1627, "func": "if save did not raise an exception and name+\"#\" exists move name+\"#\" to name+\"~\" this is the correct backup file", "target": 0}
{"idx": 1628, "func": "We will only deal with structured selections. //", "target": 0}
{"idx": 1629, "func": "no fields to test", "target": 0}
{"idx": 1630, "func": "//if we are inside a new Result(), but not inside a nested function", "target": 0}
{"idx": 1631, "func": "If the cfg of the method is around, print the CFG!", "target": 0}
{"idx": 1632, "func": "a peek ahead showed this as an JPA-positional parameter", "target": 0}
{"idx": 1633, "func": "//{{{ createOptionPanes() method", "target": 0}
{"idx": 1634, "func": "use old (HB 2.1) defaults if outer-join is specified", "target": 0}
{"idx": 1635, "func": "Push arguments as an object array", "target": 0}
{"idx": 1636, "func": "E000..F8FF;", "target": 0}
{"idx": 1637, "func": "The SQL Results page puts text into the table cells rather than objects of the appropriate type, so we need to convert befor proceeding", "target": 0}
{"idx": 1638, "func": "Use deprecated method, to avoid duplicating code", "target": 0}
{"idx": 1639, "func": "create menuitems for all registered new items", "target": 0}
{"idx": 1640, "func": "West Europe # 4", "target": 0}
{"idx": 1641, "func": "Skip the dummy null object and test again. //", "target": 0}
{"idx": 1642, "func": "The following check should have been satisfied before we instantiated the module, but double check again", "target": 0}
{"idx": 1643, "func": "@see javax.swing.filechooser.FileFilter#accept(java.io.File)", "target": 0}
{"idx": 1644, "func": "//{{{ Roster constructor", "target": 0}
{"idx": 1645, "func": "//cat.debug(\"NOTE: TodoParser handleStartTag:\" + e.getName());", "target": 0}
{"idx": 1646, "func": "//{{{ Static initializer", "target": 0}
{"idx": 1647, "func": "try to retrieve the fully qualified name of the specified type...", "target": 0}
{"idx": 1648, "func": "line 858", "target": 0}
{"idx": 1649, "func": "Check if we have a sampler to sample", "target": 0}
{"idx": 1650, "func": "synchronized method per JRUBY-1173 (unsafe Double-Checked Locking) FIXME: synchronization is still wrong in CP code", "target": 1}
{"idx": 1651, "func": "Keep reading till we get the left bracket of an opening tag", "target": 0}
{"idx": 1652, "func": "Initialize created meta-data", "target": 0}
{"idx": 1653, "func": "We get stuck in infinite loops here when unicode escapes fail. Must re-init the char stream reader (ASCII_UCodeESC_CharStream.java)", "target": 0}
{"idx": 1654, "func": "Iterate over the whole tree to do this. //", "target": 0}
{"idx": 1655, "func": "not in UML1.4", "target": 0}
{"idx": 1656, "func": "Wrap the current result as a zip stream, and record it for loop-based recursion. //", "target": 0}
{"idx": 1657, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#getDatabaseProductName()", "target": 0}
{"idx": 1658, "func": "RuleBasedCollator not yet supported - see Selector:375 note", "target": 0}
{"idx": 1659, "func": "i18n[sqlscript.storeSqlInTableFailed=An error occured during storing SQL result in table {0}. See messages for details.\\nI will create the copy script. You may correct errors and run it again.]", "target": 0}
{"idx": 1660, "func": "//{{{ calculate tab size", "target": 0}
{"idx": 1661, "func": "Don't generate private or loosely typed fields Note: loose types aren't currently parsed anyway...", "target": 1}
{"idx": 1662, "func": "assign doesn't need the pre-value", "target": 0}
{"idx": 1663, "func": "//TODO: suck into event class", "target": 1}
{"idx": 1664, "func": "//{{{ unregisterFoldHandler() method", "target": 0}
{"idx": 1665, "func": "inline script", "target": 0}
{"idx": 1666, "func": "If this owned object is one from the collection... //", "target": 0}
{"idx": 1667, "func": "Only look at Associations", "target": 0}
{"idx": 1668, "func": "end foreach map entry end else", "target": 0}
{"idx": 1669, "func": "In DeploymentDiagrams the situation is not the same as in other diagrams only classes, interfaces and objects can intersect each other while they are not the EnclosingFig, so you have to prouve only these elements.", "target": 0}
{"idx": 1670, "func": "//write(); -- doesn't", "target": 0}
{"idx": 1671, "func": "i18n[graph.scriptAllTables=Script all tables]", "target": 0}
{"idx": 1672, "func": "ensure old value is not left defined", "target": 0}
{"idx": 1673, "func": "hide compartment", "target": 0}
{"idx": 1674, "func": "private members", "target": 0}
{"idx": 1675, "func": "//{{{ getTerminateChar() method", "target": 0}
{"idx": 1676, "func": "TODO: maybe instead of throwing an exception, we could ask the user if they would like us to adjust their preference for them.", "target": 1}
{"idx": 1677, "func": "information display Panel", "target": 0}
{"idx": 1678, "func": "TODO: This is well-formedness rule from UML1.4.2 4.5.3.20 [2] No GeneralizableElement can have a parent Generalization to an element that is a leaf. self.parent->forAll(s | not s.isLeaf)", "target": 1}
{"idx": 1679, "func": "this is a root element", "target": 0}
{"idx": 1680, "func": "//{{{ getWordToComplete() method", "target": 0}
{"idx": 1681, "func": "view message list", "target": 0}
{"idx": 1682, "func": "i18n[editextras.day=Day]", "target": 0}
{"idx": 1683, "func": "Used by DebugSampler", "target": 0}
{"idx": 1684, "func": "System.err.println(\"add = [\"+newString+\"]\");", "target": 0}
{"idx": 1685, "func": "binary typed calls", "target": 0}
{"idx": 1686, "func": "MRI does it!", "target": 0}
{"idx": 1687, "func": "add node", "target": 0}
{"idx": 1688, "func": "default option", "target": 0}
{"idx": 1689, "func": "TODO: Make the tree refresh and expand really work in all cases!", "target": 1}
{"idx": 1690, "func": "//{{{ historyNext() method", "target": 0}
{"idx": 1691, "func": "Set response data", "target": 0}
{"idx": 1692, "func": "TODO getSeriesShape(n).getBounds().height / 2;", "target": 0}
{"idx": 1693, "func": "so that we don't try to reset() right away", "target": 0}
{"idx": 1694, "func": "Otherwise, let's call the whole thing off. //", "target": 0}
{"idx": 1695, "func": "TODO: Use this event mechanism to update the checkmark on the Presentation Tab:", "target": 1}
{"idx": 1696, "func": "line 775", "target": 0}
{"idx": 1697, "func": "abstractions are represented in the Inheritance Node.", "target": 0}
{"idx": 1698, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#isReadOnly()", "target": 0}
{"idx": 1699, "func": "This is a daemon thread, which should only reach here if there are other non-daemon threads still active", "target": 0}
{"idx": 1700, "func": "initialize services before dismissing the splash screen", "target": 0}
{"idx": 1701, "func": "TODO: for now we are ignoring the height constraint", "target": 1}
{"idx": 1702, "func": "public class Hello { public static String getMessage() { return \".....\"; } }", "target": 0}
{"idx": 1703, "func": "If no other constructors, generate a default constructor", "target": 0}
{"idx": 1704, "func": "ALTER TABLE $tableName$ DROP CONSTRAINT $constraintName$", "target": 0}
{"idx": 1705, "func": "add the primary key", "target": 0}
{"idx": 1706, "func": "get the JComponent from the visualizer", "target": 0}
{"idx": 1707, "func": "line 506", "target": 0}
{"idx": 1708, "func": "work out the minimum value...", "target": 0}
{"idx": 1709, "func": "//{{{ getOpenParenIndent() method", "target": 0}
{"idx": 1710, "func": "TODO: This and recacheRespondsTo needed to be synchronized for JRUBY-3466, but this degraded performance nearly 2x. It's still faster than MRI, but a reanalysis of this code may show a faster way to ensure we're caching safely.", "target": 1}
{"idx": 1711, "func": "//choose the right vendor DD", "target": 0}
{"idx": 1712, "func": "Specification Name must match", "target": 0}
{"idx": 1713, "func": "The Fig for a permission, which is a form of dependency. <p> TODO: In UML 2.x, the import and access Permissions have become PackageImports with public visibility and non-public visibility respectively. (ArgoUML only supports the <<import>> Permission currently). The friend Permission has been dropped. Also the type hierarchy has been reorganized so that PackageImport is not a subtype of Dependency. @author Markus Klink", "target": 1}
{"idx": 1714, "func": "//{{{ FilesChangedDialog constructor", "target": 0}
{"idx": 1715, "func": "line 991", "target": 0}
{"idx": 1716, "func": "argument can be an instanceof a Fig which we ignore", "target": 0}
{"idx": 1717, "func": "Without a flush Ant will miss some of our output", "target": 0}
{"idx": 1718, "func": "If this entry isn't the end marker and isn't the matching one that we are replacing... //", "target": 0}
{"idx": 1719, "func": "if the labels are too long, they'll be \"squeezed\" to make the chart viewable.", "target": 0}
{"idx": 1720, "func": "//{{{ updateStructureHighlightWithDelay() method", "target": 0}
{"idx": 1721, "func": "all sub-components with setFont(null) inherit this font", "target": 0}
{"idx": 1722, "func": "TODO: Return empty collection on null input or throw IllegalArgument?", "target": 1}
{"idx": 1723, "func": "TODO Method with 0 reference, really useful ?", "target": 1}
{"idx": 1724, "func": "Creates a new field that selects the language for an expression. @param m Expression model, should be shared between Language and Body fields @param n Only one of Language and Body fields should forward events to model TODO: MVW: I do not understand that.", "target": 1}
{"idx": 1725, "func": "todo : YUCK!!!", "target": 1}
{"idx": 1726, "func": "The parent is null, which implies a top-level removal, so create a self-removing command. //", "target": 0}
{"idx": 1727, "func": "not a class", "target": 0}
{"idx": 1728, "func": "TODO: take BigDecimal.mode into account.", "target": 1}
{"idx": 1729, "func": "All rules passed, so activate the button", "target": 0}
{"idx": 1730, "func": "Map of label & basic blocks which are waiting for a bb with that label", "target": 0}
{"idx": 1731, "func": "must be plain, ensured by TypeAttribute", "target": 0}
{"idx": 1732, "func": "child views exist - operate recursively on these", "target": 0}
{"idx": 1733, "func": "popupAddOffset should be equal to the number of items added here:", "target": 0}
{"idx": 1734, "func": "\"head\" must have no non-trivial assigns (array groupings, basically)", "target": 0}
{"idx": 1735, "func": "//{{{ subregionOffsetToX() method", "target": 0}
{"idx": 1736, "func": "TODO: Exact ordering is only required for some tests; change the comparison to do a set compare where necessary.", "target": 1}
{"idx": 1737, "func": "we must iterate through this in descending order to avoid removing, say, item #2, making item #4 into item #3, inadvertently removing item #5.", "target": 0}
{"idx": 1738, "func": "Sybase 15 fully supports quotation marks for identifiers, and reports \" as the identifier quote string - yeah, they got it right!", "target": 0}
{"idx": 1739, "func": "make array of exceptions", "target": 0}
{"idx": 1740, "func": "Set up the hash table that contains the styles.", "target": 0}
{"idx": 1741, "func": "This String will be returned by getVersion()", "target": 0}
{"idx": 1742, "func": "ID", "target": 0}
{"idx": 1743, "func": "For JDK 1.4 we can use \"cal.getTimeInMillis()\"", "target": 0}
{"idx": 1744, "func": "WEB SERVER PANEL", "target": 0}
{"idx": 1745, "func": "user has entered some non-default info, so save it", "target": 0}
{"idx": 1746, "func": "level 2 import detail", "target": 0}
{"idx": 1747, "func": "assert internedName == internedName.intern() : internedName + \" is not interned\";", "target": 0}
{"idx": 1748, "func": "Trying to set time to an exact number", "target": 0}
{"idx": 1749, "func": "//Create a timer.", "target": 0}
{"idx": 1750, "func": "Force the line-width to 0, since the FigGroup that contains the stereotype may want to show a border, but we don't.", "target": 0}
{"idx": 1751, "func": "flag - if all machines within a given domain can access the variable. //(from http://www.cookiecentral.com/faq/ 3.5)", "target": 0}
{"idx": 1752, "func": "Create the Look and Feel register.", "target": 0}
{"idx": 1753, "func": "//{{{ sort() method", "target": 0}
{"idx": 1754, "func": "load profiles.xml", "target": 0}
{"idx": 1755, "func": "calling GenIC task", "target": 0}
{"idx": 1756, "func": "init the static shared sharedObject if it's not there yet", "target": 0}
{"idx": 1757, "func": "can't render anything without axes", "target": 0}
{"idx": 1758, "func": "Helper method to maintain timestamp relationships", "target": 0}
{"idx": 1759, "func": "TODO implement OCLExpression", "target": 1}
{"idx": 1760, "func": "find optimum height and map to range", "target": 0}
{"idx": 1761, "func": "Trying to match the following productions: hexseq = hex4 ( \":\" hex4) hex4 = 14HEXDIG", "target": 0}
{"idx": 1762, "func": "Continue processing if the file doesn't exist so that we try create a new empty one.", "target": 0}
{"idx": 1763, "func": "//{{{ _rename() method", "target": 0}
{"idx": 1764, "func": "FIXME: vulture daemon thread prevents finalization, find alternative approach. vulture.start();", "target": 1}
{"idx": 1765, "func": "calculate size and return it", "target": 0}
{"idx": 1766, "func": "box arguments", "target": 0}
{"idx": 1767, "func": "super implementation found a hit", "target": 0}
{"idx": 1768, "func": "If you add this method to one of the standard DataTypes in the fw/datasetviewer/cellcomponent directory, you must also add the name of that DataType class to the list in CellComponentFactory, method getControlPanels, variable named initialClassNameList. If the class is being registered with the factory using registerDataType, then you should not include the class name in the list (it will be found automatically), but if the DataType is part of the case statement in the factory method getDataTypeObject, then it does need to be explicitly listed in the getControlPanels method also.", "target": 0}
{"idx": 1769, "func": "TODO: figure out how this should be set. /////////////////////////////////////////////////////////////////////////////This was the reason for failures regarding INDEX_OP and subclass joins on theta-join dialects; not sure what behaviour we were trying to emulate ;) // joinSequence = joinSequence.getFromPart(); Emulate the old addFromOnly behavior.", "target": 1}
{"idx": 1770, "func": "============ ResourceFactory interface ======================", "target": 0}
{"idx": 1771, "func": "these are just two unrelated table references", "target": 0}
{"idx": 1772, "func": "valueFont", "target": 0}
{"idx": 1773, "func": "Use CONTENT_UNDECLARED to avoid overwriting existing element declaration.", "target": 0}
{"idx": 1774, "func": "list of interfaces we implement", "target": 0}
{"idx": 1775, "func": "This does not work (anymore/yet?), since we never have a FigText here:", "target": 1}
{"idx": 1776, "func": "Save only resources that have actually changed. //", "target": 0}
{"idx": 1777, "func": "for SEEK_CUR, need to adjust for buffered data", "target": 0}
{"idx": 1778, "func": "hear no evil, see no evil", "target": 1}
{"idx": 1779, "func": "adding project files icon", "target": 0}
{"idx": 1780, "func": "@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)", "target": 0}
{"idx": 1781, "func": "The implementations of these are all bonus (see TODO above) I was going to throw an error from these, but it appears to be the wrong place to do it.", "target": 1}
{"idx": 1782, "func": "store the value in the array", "target": 0}
{"idx": 1783, "func": "Text: take org. message; mod:20040629 SWITT", "target": 0}
{"idx": 1784, "func": "Weblogic will throw an error if the deployment descriptor does not match the class files.", "target": 0}
{"idx": 1785, "func": "We cannot set the body of this model element type.", "target": 0}
{"idx": 1786, "func": "Here we located the new classifier with its operation.", "target": 0}
{"idx": 1787, "func": "This is needed for OnceOnly to work like other Loop Controllers", "target": 0}
{"idx": 1788, "func": "We do this b/c make_tmpname might be overridden", "target": 0}
{"idx": 1789, "func": "offset the start of the boxes if the total width used is smaller than the category width", "target": 0}
{"idx": 1790, "func": "Set the following for some backward compatibility with old algorithm", "target": 0}
{"idx": 1791, "func": "Use simpleSort(), since the full sorting mechanism has quite a large constant overhead.", "target": 0}
{"idx": 1792, "func": "Show tool bar", "target": 0}
{"idx": 1793, "func": "Note that this object equality check is intentional, to ensure the string and its interned version are the same object.", "target": 0}
{"idx": 1794, "func": "the for loop's condition finds the separator", "target": 0}
{"idx": 1795, "func": "line 1588", "target": 0}
{"idx": 1796, "func": "testLoadAndSave test files", "target": 0}
{"idx": 1797, "func": "Motif kludge: we would get something random instead of null. //", "target": 1}
{"idx": 1798, "func": "3 columns size", "target": 0}
{"idx": 1799, "func": "//SimpleAnyTypeImpl", "target": 0}
{"idx": 1800, "func": "First 2 chars are the major version number", "target": 0}
{"idx": 1801, "func": "UNDONE When File lets us get the userName, use it!", "target": 0}
{"idx": 1802, "func": "Several tries to construct a URL that really exists.", "target": 0}
{"idx": 1803, "func": "view.addListSelectionListener(this);", "target": 0}
{"idx": 1804, "func": "TODO: Perhaps we can tell the user when they click \"Copy Table\" if the source session is Axion and they want primary keys that it's not possible.", "target": 1}
{"idx": 1805, "func": "//{{{ TipOfTheDay constructor", "target": 0}
{"idx": 1806, "func": "now extrapolate based on label height and unit height...", "target": 0}
{"idx": 1807, "func": "end runGC_actionPerformed()", "target": 0}
{"idx": 1808, "func": "skip ahead so the cursor is now immediately after the begin comment string", "target": 0}
{"idx": 1809, "func": "dropDown.addListener(SWT.Paint, dropDownListener);", "target": 0}
{"idx": 1810, "func": "build first tab", "target": 0}
{"idx": 1811, "func": "//actionBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND)); //systemBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));", "target": 0}
{"idx": 1812, "func": "Now we can search this folder since no mail from this folder will come in the list", "target": 0}
{"idx": 1813, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getTableTypes()", "target": 0}
{"idx": 1814, "func": "This class provides encode/decode for RFC 2045 Base64 as defined by RFC 2045, N. Freed and N. Borenstein. RFC 2045: Multipurpose Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies. Reference 1996 Available at: http://www.ietf.org/rfc/rfc2045.txt This class is used by XML Schema binary format validation This implementation does not encode/decode streaming data. You need the data that you will encode/decode already on a byte array. @author Jeffrey Rodriguez @author Sandy Gao", "target": 0}
{"idx": 1815, "func": "A command to set selected figs to their minimum size. <p> Despite its name, really the minimum size is selected here! <p> TODO: Rename this class. @author Markus Klink", "target": 1}
{"idx": 1816, "func": "end compound name routines", "target": 0}
{"idx": 1817, "func": "Implements JavaSamplerClient.setupTest(JavaSamplerContext)", "target": 0}
{"idx": 1818, "func": "//axisOffset;", "target": 0}
{"idx": 1819, "func": "Get the package name and see if there's an EPackage for it. //", "target": 0}
{"idx": 1820, "func": "user:password@host:/path notation", "target": 0}
{"idx": 1821, "func": "used by HttpTestSampleGui", "target": 0}
{"idx": 1822, "func": "Update the status of the object and if necessary, schedule an update", "target": 0}
{"idx": 1823, "func": "$NON-NLS-1$ default value: false", "target": 0}
{"idx": 1824, "func": "Check the file exists", "target": 0}
{"idx": 1825, "func": "4", "target": 0}
{"idx": 1826, "func": "view only", "target": 0}
{"idx": 1827, "func": "//MULTITABLES", "target": 0}
{"idx": 1828, "func": "//new Functor(\"setName\"), $NON-NLS-1$ $NON-NLS-1$", "target": 0}
{"idx": 1829, "func": "can't delete currently running profile", "target": 0}
{"idx": 1830, "func": "invalid regexp, ignore return true to avoid annoying beeping while typing a re", "target": 0}
{"idx": 1831, "func": "//{{{ setBorderPainted() method", "target": 0}
{"idx": 1832, "func": "Did we open the file?", "target": 0}
{"idx": 1833, "func": "//hand down", "target": 0}
{"idx": 1834, "func": "EOF, re-open file", "target": 0}
{"idx": 1835, "func": "//ICalendarStore store = (ICalendarStore) next.getSource();", "target": 0}
{"idx": 1836, "func": "FIXME: check how ruby 1.9 handles this", "target": 1}
{"idx": 1837, "func": "//XXX", "target": 0}
{"idx": 1838, "func": "Constants for seek", "target": 0}
{"idx": 1839, "func": "line 378", "target": 0}
{"idx": 1840, "func": "no validation needed since all components are from existing URIs", "target": 0}
{"idx": 1841, "func": "'baseOutlineStroke' : immutable, no need to clone reference", "target": 0}
{"idx": 1842, "func": "JOnAS-specific descriptor deployment", "target": 0}
{"idx": 1843, "func": "Fetch the key before going in synchronized mode", "target": 0}
{"idx": 1844, "func": "//{{{ setElectricScroll() method", "target": 0}
{"idx": 1845, "func": "There was a NPE being thrown without the null check here.. JKB", "target": 0}
{"idx": 1846, "func": "If there is still a parent -> remove it", "target": 0}
{"idx": 1847, "func": "Found end marker for this heredoc", "target": 0}
{"idx": 1848, "func": "Content-length", "target": 0}
{"idx": 1849, "func": "//link.setBackground(titleBackground);", "target": 0}
{"idx": 1850, "func": "TODO: do all following steps TODO: resolve item from ToDoList", "target": 0}
{"idx": 1851, "func": "Needed to guarantee other components a focus lost and to allow to enter the tabs components via tab key in a well defined way (the user can see where the focus is).", "target": 0}
{"idx": 1852, "func": "Check to see if to is a directory and convert toFile to be the name of the file in that directory.", "target": 0}
{"idx": 1853, "func": "READ_CHECK from MRI io.c", "target": 0}
{"idx": 1854, "func": "adds all stereotypes defined at the profiles applied to the current project", "target": 0}
{"idx": 1855, "func": "Updates the button if the current row changes @see javax.swing.event.TableModelListener#tableChanged(javax.swing.event.TableModelEvent)", "target": 0}
{"idx": 1856, "func": "//{{{ handleAbout() method", "target": 0}
{"idx": 1857, "func": "won't get here...", "target": 0}
{"idx": 1858, "func": "//{{{ Run script specified with -run= parameter", "target": 0}
{"idx": 1859, "func": "prohibit instantiation", "target": 0}
{"idx": 1860, "func": "remember last selected folder treenode", "target": 0}
{"idx": 1861, "func": "//topPanel.setLayout( );", "target": 0}
{"idx": 1862, "func": "Set the file upload data", "target": 0}
{"idx": 1863, "func": "CASE 1 : Comparing to another Second object -------------------------------------------", "target": 0}
{"idx": 1864, "func": "loop through all extensions this plugin uses", "target": 0}
{"idx": 1865, "func": "@see java.awt.event.KeyListener#keyPressed(java.awt.event.KeyEvent)", "target": 0}
{"idx": 1866, "func": "set flag that next should fail next time?", "target": 0}
{"idx": 1867, "func": "//{{{ goToEndOfWhiteSpace() method", "target": 0}
{"idx": 1868, "func": "We assume profile is contained in a single extent", "target": 0}
{"idx": 1869, "func": "This method uses Apache soap util to create the proper DOM elements. @return Element", "target": 0}
{"idx": 1870, "func": "many of the zoom methods need a screen location - all we have is the zoomPoint, but it might be null. Here we grab the x and y coordinates, or use defaults...", "target": 0}
{"idx": 1871, "func": "A container for collections we load up when the owning entity is not yet loaded ... for now, this is purely transient!", "target": 0}
{"idx": 1872, "func": "Use a different notation as Messages on a collaboration diagram:", "target": 0}
{"idx": 1873, "func": "counts each bit that has been fired", "target": 0}
{"idx": 1874, "func": "//TBD rethink where exactly some of the following methods belong (GenModel or GenPackage) //", "target": 1}
{"idx": 1875, "func": "boolean", "target": 0}
{"idx": 1876, "func": "Set toolbar color panel", "target": 0}
{"idx": 1877, "func": "@see org.tigris.gef.presentation.Fig#getMinimumSize()", "target": 0}
{"idx": 1878, "func": "Invoke the parent constructor first", "target": 0}
{"idx": 1879, "func": "Determine the separator strings. The dirsep and pathsep attributes override the targetOS settings.", "target": 0}
{"idx": 1880, "func": "i18n[HibernateConfigPanel.applyConfigChanges=Apply changes to this configuration]", "target": 0}
{"idx": 1881, "func": "//List classes = getCandidates(); //return classes.size() > 0;", "target": 0}
{"idx": 1882, "func": "if depth is negative don't draw anything", "target": 0}
{"idx": 1883, "func": "This bit turns <exclude> child tags into patters to ignore", "target": 0}
{"idx": 1884, "func": "Class name for the JCC SqlException class", "target": 0}
{"idx": 1885, "func": "Helper method to simplify alias creation from properties", "target": 0}
{"idx": 1886, "func": "//assume this is an IOexception about un readability", "target": 0}
{"idx": 1887, "func": "First, try the system property", "target": 0}
{"idx": 1888, "func": "a la Perl, $0 is whole thing, $1 - $9 are subexpressions", "target": 0}
{"idx": 1889, "func": "//{{{ MemoryStatus class", "target": 0}
{"idx": 1890, "func": "Management/monitoring", "target": 0}
{"idx": 1891, "func": "If this TransformOperation has DrawOperation children then Rotate the first child and return.", "target": 0}
{"idx": 1892, "func": "(non-Javadoc) @see org.columba.core.gui.frame.focus.FocusOwner#isCutActionEnabled()", "target": 0}
{"idx": 1893, "func": "//TODO: redesign how PropertyAccessors are acquired...", "target": 1}
{"idx": 1894, "func": "FIXME: not very efficient", "target": 1}
{"idx": 1895, "func": "//{{{ getMacroActionSet() method", "target": 0}
{"idx": 1896, "func": "i18n[I18n.translators=Translators]", "target": 0}
{"idx": 1897, "func": "Will already have been logged by XPathUtil fail the sample", "target": 0}
{"idx": 1898, "func": "Legacy? Just return the original Paint. (this corresponds EXACTLY to how Paints used to be darkened)", "target": 0}
{"idx": 1899, "func": "i18n[graphToClipboard.copyButton=Copy image from selected tab]", "target": 0}
{"idx": 1900, "func": "Parse a transition description line of the form:<pre> \"event-signature [guard-condition] / action-expression\". </pre> A \";\" is not interpreted as having any special meaning. <p> The \"event-signature\" may be one of the 4 formats:<ul> <li> ChangeEvent: \"when(condition)\" <li> TimeEvent: \"after(duration)\" <li> CallEvent: \"a(parameter-list)\". <li> SignalEvent: any string without (). </ul> Remark: The UML standard does not make a distinction between the syntax of a CallEvent and SignalEvent: both may have parameters between (). For simplicity and user-friendliness, we chose for this distinction. If a user wants parameters for a SignalEvent, then he may add them in the properties panels, but not on the diagram. <p> An alternative solution would be to create a CallEvent by default, and when editing an existing event, do not change the type.<p> TODO: This function fails when the event-signature contains a \"[\" or a \"/\". See issue 5983 for other cases that were a problem in the past. @param trans the transition object to which this string applies @param s the string to be parsed @return the transition object @throws ParseException when no matching [] are found", "target": 1}
{"idx": 1901, "func": "TODO (@author fdietz): add central place, which keeps a list of all possible colors, and provides a custom color configuration possibility", "target": 1}
{"idx": 1902, "func": "i18n[Application.splash.loadcellselections=Loading Cell Import/Export selections...]", "target": 0}
{"idx": 1903, "func": "//prevents this session from adding things to cache", "target": 0}
{"idx": 1904, "func": "oldWidth = table.getClientArea().width;", "target": 0}
{"idx": 1905, "func": "no data in the parent plot", "target": 0}
{"idx": 1906, "func": "TODO: do we need to implement any kind of connection pooling? If so, which connections should be shared? Should threads share connections to the same destination? What about cross-thread sharing?", "target": 1}
{"idx": 1907, "func": "Are we uploading? $NON-NLS-1$", "target": 0}
{"idx": 1908, "func": "//i18n[SplashScreen.error.updatingprogressbar=Error occured updating progress bar]", "target": 0}
{"idx": 1909, "func": "get inputstream of this message from folder", "target": 0}
{"idx": 1910, "func": "we can't be sure of the order", "target": 0}
{"idx": 1911, "func": "Find all native jars", "target": 0}
{"idx": 1912, "func": "throws PluginException", "target": 0}
{"idx": 1913, "func": "Another subsample for the transaction", "target": 0}
{"idx": 1914, "func": "TODO: move to IOUtilities @see net.sourceforge.squirrel_sql.client.update.UpdateUtil#createZipFile(FileWrapper, FileWrapper[])", "target": 1}
{"idx": 1915, "func": "TODO create javadocs for class", "target": 1}
{"idx": 1916, "func": "unfortunately not really safe to normalize this to 1 as an initial value like we do the others because we would not be able to control this if we are using a sequence...", "target": 0}
{"idx": 1917, "func": "i18n[PreLaunchHelperImpl.restoreFailedMessage=Restore from backup failed. Re-installation may be required.", "target": 0}
{"idx": 1918, "func": "For use by AJP", "target": 0}
{"idx": 1919, "func": "should not be stored", "target": 0}
{"idx": 1920, "func": "Obtain another URL with an explicit port:", "target": 0}
{"idx": 1921, "func": "//adding all Colums together", "target": 0}
{"idx": 1922, "func": "can't allow duplicate values, so we need to check whether there is an item with the given x-value already", "target": 0}
{"idx": 1923, "func": "i18n[graph.btnOk=OK]", "target": 0}
{"idx": 1924, "func": "One-time init for this client", "target": 0}
{"idx": 1925, "func": "be dead", "target": 0}
{"idx": 1926, "func": "Side effect: This creates the fig:", "target": 0}
{"idx": 1927, "func": "Try to create a file in a directory that does not exist", "target": 0}
{"idx": 1928, "func": "this covers the rare case of lower-case class names (and thus will fail 99.999% of the time). fortunately, we'll only do this once per package name. (and seriously, folks, look into best practices...)", "target": 1}
{"idx": 1929, "func": "finally, apply profile configuration to the model", "target": 0}
{"idx": 1930, "func": "compute common denominator", "target": 0}
{"idx": 1931, "func": "HTTP proxy", "target": 0}
{"idx": 1932, "func": "//{{{ register() method", "target": 0}
{"idx": 1933, "func": "Use the actual class so the name must be correct.", "target": 0}
{"idx": 1934, "func": "No seconds, just yield", "target": 0}
{"idx": 1935, "func": "shutdown Columba", "target": 0}
{"idx": 1936, "func": "add a message when no http sample //$NON-NLS-1$ //$NON-NLS-1$", "target": 0}
{"idx": 1937, "func": "just save a count of zeroes for now; if no digit ends up following them, they'll be applied to the exponent rather than the significand (and our max length for optimistic calc).", "target": 0}
{"idx": 1938, "func": "Preload the output so that can be read back as HTTP", "target": 0}
{"idx": 1939, "func": "This check-box defines whether to save WorkBench content or not", "target": 0}
{"idx": 1940, "func": "try a dataset with a single value", "target": 0}
{"idx": 1941, "func": "figure out what constitutes a word character and what doesn't", "target": 0}
{"idx": 1942, "func": "i18n[MysqlPlugin.title=MySQL]", "target": 0}
{"idx": 1943, "func": "local variables", "target": 0}
{"idx": 1944, "func": "Apparently, this method is never called.", "target": 1}
{"idx": 1945, "func": "Look for an end-of-comment or end-of-tag: //", "target": 0}
{"idx": 1946, "func": "Compute the offset in the sequence of bit patterns for this feature ID and then get the bit pattern at that index. //", "target": 0}
{"idx": 1947, "func": "Commentlinks for comments. Iterate over all the comment links to find the comment and annotated elements.", "target": 0}
{"idx": 1948, "func": "VALIDATION DISABLE ! Sebastian Witt 25.07.04, \"NAME\" <email@somewhat.de> isnt true, which should :( root@localhost is valid, but not with this check. :( root is also valid (with local mailserver), but not with this check :(", "target": 0}
{"idx": 1949, "func": "Check if still consistent", "target": 0}
{"idx": 1950, "func": "Construct a SAXParser used to process the descriptors", "target": 0}
{"idx": 1951, "func": "retrieve all contact items and add those to the list only", "target": 0}
{"idx": 1952, "func": "fields used for direct (optimistic) calculation number of significant digits, updated as parsed zeroes that may go to significand or exponent offset of decimal pt from start (-1 -> no decimal) significand, updated as parsed exponent, updated as parsed", "target": 0}
{"idx": 1953, "func": "a testcase might have failed and write a zero-length document, It has already failed, but hey.... mm. just put a warning", "target": 0}
{"idx": 1954, "func": "Add any files Cannot retrieve parts once added to the MultiPartEntity, so have to save them here.", "target": 0}
{"idx": 1955, "func": "Parse as an attribute=value: //", "target": 0}
{"idx": 1956, "func": "Parsing Methods //", "target": 0}
{"idx": 1957, "func": "line 1716", "target": 0}
{"idx": 1958, "func": "//ToolTipManager ttm = ToolTipManager.sharedInstance();", "target": 0}
{"idx": 1959, "func": "disable toolbar text", "target": 0}
{"idx": 1960, "func": "make sure there is nothing within the root dockingport", "target": 0}
{"idx": 1961, "func": "Don't set the type if it's already set. //", "target": 0}
{"idx": 1962, "func": "20030917, karlpeder Set the model to html or text based on the body specified on the command line. This is done using a simple check: Does the body contain <html> and </html>", "target": 0}
{"idx": 1963, "func": "If it's a platform plugin URI, include it in the map. //", "target": 0}
{"idx": 1964, "func": "TODO: Is this needed/correct? For when all compartments are hidden?", "target": 1}
{"idx": 1965, "func": "//Log.log(Log.WARNING,this,\"VFS update: request already in progress\");", "target": 0}
{"idx": 1966, "func": "//just a performance opt!", "target": 0}
{"idx": 1967, "func": "Simulates UML2 getting the aggregation from the opposite end", "target": 0}
{"idx": 1968, "func": "TODO: Put in all the property accessors", "target": 1}
{"idx": 1969, "func": "private void setSuccessCount(long count) { this.successCount = count; }", "target": 0}
{"idx": 1970, "func": "No text", "target": 0}
{"idx": 1971, "func": "This means that a new page will be shown before rendering is complete, however the correct location will be displayed. Attempts to use a \"page\" PropertyChangeListener to detect when the page has been loaded failed to work any better.", "target": 1}
{"idx": 1972, "func": "register shutdown manager", "target": 0}
{"idx": 1973, "func": "//{{{ setLineHighlightEnabled() method", "target": 0}
{"idx": 1974, "func": "double-click mouse listener", "target": 0}
{"idx": 1975, "func": "Ok, we've been told to scroll because the mouse cursor is in our scroll zone. @see java.awt.dnd.Autoscroll#autoscroll(java.awt.Point)", "target": 0}
{"idx": 1976, "func": "Set right/left margin", "target": 0}
{"idx": 1977, "func": "If we turn the package into a proxy, ensure that the child classifiers clear their cached container. //", "target": 0}
{"idx": 1978, "func": "TODO: The following handling of multiselection is just a local solution for the fill color, better find a more general solution: (I don't know if it's undoable this way - thn)", "target": 1}
{"idx": 1979, "func": "Return the source of a relation or Link. The source of a relation is defined as the ModelElement that propagates this relation. If there are more then 1 sources, only the first is returned. If there is no source, null is returned. Examples of sources include classifiers that are types to associationends, usecases that are bases to extend and include relations and so on. A source is always the start from the arrow in the fig, the destination the end.<p> TODO: move this method to a generic ModelHelper @param relationship is the relation @return Object", "target": 1}
{"idx": 1980, "func": "no need to even collect this information if the persister is considered multi-table", "target": 0}
{"idx": 1981, "func": "This could be static", "target": 1}
{"idx": 1982, "func": "TBLRC 01010 - bottom and right only", "target": 0}
{"idx": 1983, "func": "//i18n[syntax.selColor=Select Color]", "target": 0}
{"idx": 1984, "func": "not implemented yet", "target": 1}
{"idx": 1985, "func": "TODO: implement remaining supported types", "target": 1}
{"idx": 1986, "func": "@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)", "target": 0}
{"idx": 1987, "func": "Don't allow instantiation", "target": 0}
{"idx": 1988, "func": "i18n[NumericFunctionsTab.title=Numeric Functions]", "target": 0}
{"idx": 1989, "func": "TODO: Does CoreHelper#getExtendingClassifiers(Object element) means all direct and indirect extending classifiers or only the direct extending classifiers?", "target": 1}
{"idx": 1990, "func": "//TODO: Yuck! This is not quite good enough, it's a quick //hack around the problem of having a to-one association //that refers to an embedded component:", "target": 1}
{"idx": 1991, "func": "TODO: this should be a configurable property", "target": 1}
{"idx": 1992, "func": "This should be enough to allow server to exit. default is false", "target": 0}
{"idx": 1993, "func": "SSS FIXME: Are we guaranteed that we splats dont head to multiple-assignment nodes! i.e. |(a,b)|?", "target": 1}
{"idx": 1994, "func": "The user-DropActions are: Ctrl + Shift -> ACTION_LINK Ctrl -> ACTION_COPY Shift -> ACTION_MOVE (none) -> ACTION_MOVE", "target": 0}
{"idx": 1995, "func": "set message", "target": 0}
{"idx": 1996, "func": "By using an instance of SyncHTMLEditorKit, the html should load synchroniously - so everything is loaded before printing starts", "target": 0}
{"idx": 1997, "func": "not to be confused with RubyObject's flags", "target": 0}
{"idx": 1998, "func": "//{{{ showListConfirm() method", "target": 0}
{"idx": 1999, "func": "push this constructor index number onto stack", "target": 0}
{"idx": 2000, "func": "FIXME: When we get JNA3 we need to properly write this to errno.", "target": 1}
{"idx": 2001, "func": "see if we should issue a chmod command", "target": 0}
{"idx": 2002, "func": "//{{{ getTreeModel() method", "target": 0}
{"idx": 2003, "func": "Create resource", "target": 0}
{"idx": 2004, "func": "DB2 requires primary keys to also be declared \"not null\"", "target": 0}
{"idx": 2005, "func": "SquirrelAction descriptions already contain the accelerator", "target": 0}
{"idx": 2006, "func": "Note: This class essentially just delegates most of its methods to its parent. The setVariable() indirection is very small. We could probably fold this functionality back into the base NameSpace as a special case. But this has changed a few times so I'd like to leave this abstraction for now.", "target": 1}
{"idx": 2007, "func": "//{{{ PanelWindowContainer constructor", "target": 0}
{"idx": 2008, "func": "now get the data and plot it (the visual representation will depend on the m_Renderer that has been set)...", "target": 0}
{"idx": 2009, "func": "//STROKE ///////////////////////////////////////////////////////////////", "target": 0}
{"idx": 2010, "func": "// private javax.swing.JComboBox cbFieldType; // private javax.swing.JCheckBox chAutoIncrement; // private javax.swing.JCheckBox chBinary; // private javax.swing.JCheckBox chNotNull; // private javax.swing.JCheckBox chUnsigned; // private javax.swing.JLabel lbAttributes; // private javax.swing.JLabel lbDefault; // private javax.swing.JLabel lbFieldLength; // private javax.swing.JLabel lbFieldName; // private javax.swing.JLabel lbFieldType; // private javax.swing.JLabel lbFields; // private javax.swing.JTextField tfFieldDefault; // private javax.swing.JTextField tfFieldLength; // private javax.swing.JComboBox cbFieldName; // private javax.swing.JButton buttonUpdate; // private javax.swing.JButton buttonCancel; // private JDialog _dlog; // private FieldDetails fd; // private int selectedIndex; // private DBUtils dbUtils; // protected String SQLCommandRoot = \"ALTER TABLE \"; // protected String SQLCommand = \"\"; End of variables declaration", "target": 0}
{"idx": 2011, "func": "rb_iterate((VALUE()_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);", "target": 0}
{"idx": 2012, "func": "Used by ScriptWrapperConverter", "target": 0}
{"idx": 2013, "func": "wait for it to be painted to ensure progress is updated continuously", "target": 0}
{"idx": 2014, "func": "Invoke the parent refresh first", "target": 0}
{"idx": 2015, "func": "re-register, since fileno points at something new now", "target": 0}
{"idx": 2016, "func": "If we didn't find the path in the usual place nor in the archive... //", "target": 0}
{"idx": 2017, "func": "at least one is a plain old Date", "target": 0}
{"idx": 2018, "func": "Generate the type for our class", "target": 0}
{"idx": 2019, "func": "Ensure that the required class variables are cloned, as this is not currently done by the super-implementation.", "target": 0}
{"idx": 2020, "func": "Does not do anything. @see org.argouml.cognitive.Poster#fixIt(org.argouml.cognitive.ToDoItem, java.lang.Object)", "target": 0}
{"idx": 2021, "func": "$NON-NLS-1$ No point trying these", "target": 0}
{"idx": 2022, "func": "(non-Javadoc) @see org.columba.mail.gui.table.model.TableModelModifier#set(org.columba.mail.message.HeaderList)", "target": 0}
{"idx": 2023, "func": "If we get a 2nd error, just ignore it", "target": 0}
{"idx": 2024, "func": "//{{{ getHandlerForFileName() method", "target": 0}
{"idx": 2025, "func": "Anticipate the same issue for VARBINARY as for BINARY and LONGVARBINARY. registerColumnType(Types.VARBINARY, 2147000000, \"bit varying($l)\");", "target": 0}
{"idx": 2026, "func": "@see java.io.InputStream#read()", "target": 0}
{"idx": 2027, "func": "ant task properties defaults CheckStyle:VisibilityModifier OFF - bc", "target": 0}
{"idx": 2028, "func": "do we need to redraw the buffer?", "target": 0}
{"idx": 2029, "func": "@see org.argouml.model.StateMachinesHelper#getSource(java.lang.Object)", "target": 0}
{"idx": 2030, "func": "//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$", "target": 0}
{"idx": 2031, "func": "builder.setLeadingColumnOffset(1);", "target": 0}
{"idx": 2032, "func": "//before add :-)", "target": 0}
{"idx": 2033, "func": "TODO: Perhaps use a HashSet or other collection with faster lookup performance in case our callers are doing naive .contains() lookups", "target": 1}
{"idx": 2034, "func": "And the query info.", "target": 0}
{"idx": 2035, "func": "//We do not look for an existing join on the same path, because //it makes sense to join twice on the same collection role", "target": 0}
{"idx": 2036, "func": "i18n[cellDataPopUp.cannnotBGeConverted=The given text cannot be converted into the internal object.\\n //Please change the data or cancel editing.\\n //The conversion error was:\\n{0}]", "target": 0}
{"idx": 2037, "func": "//{{{ maybeReloadDirectory() method", "target": 0}
{"idx": 2038, "func": "regular equality for the datasets doesn't check the fields, just the data values...so let's check some more things...", "target": 0}
{"idx": 2039, "func": "coordinate pairs current minuend point next minuend point current subtrahend point next subtrahend point", "target": 0}
{"idx": 2040, "func": "line 488", "target": 0}
{"idx": 2041, "func": "use default font settings", "target": 0}
{"idx": 2042, "func": "//i18n[SpecialColumnMapping.FIXED_VALUE=Fixed value]", "target": 0}
{"idx": 2043, "func": "//-- For TestBean implementations only", "target": 0}
{"idx": 2044, "func": "TODO Probably want to allow the user to set these sequence properties ?? Sequence settings.", "target": 1}
{"idx": 2045, "func": "shutdown hsql", "target": 0}
{"idx": 2046, "func": "i18n[SchemaInfo.loadingStoredProcedures=Loading stored procedures]", "target": 0}
{"idx": 2047, "func": "date or lastModified may be null or in bad format", "target": 0}
{"idx": 2048, "func": "Close if we created this. //", "target": 0}
{"idx": 2049, "func": "This is CONCAT, and new child is CONCAT.", "target": 0}
{"idx": 2050, "func": "clear a mapping", "target": 0}
{"idx": 2051, "func": "kids - don't do this at home", "target": 1}
{"idx": 2052, "func": "//testBitColType(sourceName, destName);", "target": 0}
{"idx": 2053, "func": "(Classifier)", "target": 0}
{"idx": 2054, "func": "i18n[NumericFunctionsTab.hint=Show all the numeric functions available in DBMS]", "target": 0}
{"idx": 2055, "func": "Make sure CatalogResolver instantiates ApacheCatalog, rather than a plain Catalog //", "target": 0}
{"idx": 2056, "func": "now, let's set up the \"selected action\" container", "target": 0}
{"idx": 2057, "func": "try a collection with several numbers", "target": 0}
{"idx": 2058, "func": "Also cache it in the static namespace... //classStaticNameSpace.cacheClass( name, genClass );", "target": 0}
{"idx": 2059, "func": "Drops the original column.", "target": 0}
{"idx": 2060, "func": "digits arr shifted, update all", "target": 0}
{"idx": 2061, "func": "MockCache doesnt create a file - therefore no cleanup needed", "target": 0}
{"idx": 2062, "func": "i18n[graph.zoomPrint=Zoom/Print]", "target": 0}
{"idx": 2063, "func": "@param project the ArgoUML {@link Project} to save in file. @param file the {@link File} in which an ArgoUML {@link Project} will be persisted. @return the persister used and usable for file. @throws SaveException if saving the file goes wrong. @throws InterruptedException if an interrupt occurs while saving. TODO: move this to an helper class.", "target": 1}
{"idx": 2064, "func": "now instanciate the folder classes", "target": 0}
{"idx": 2065, "func": "Store the current state in stack. //", "target": 0}
{"idx": 2066, "func": "and perform the load", "target": 0}
{"idx": 2067, "func": "RFC 822 s4.1: \"From:\" header must be sent We rely on error checking by the MTA", "target": 0}
{"idx": 2068, "func": "2. check whether the column is now empty.", "target": 0}
{"idx": 2069, "func": "line 575", "target": 0}
{"idx": 2070, "func": "i18n[ShowDriverWebsiteCommand.comfirm=No WebSite URL for the specified driver. Would you like to add one?]", "target": 0}
{"idx": 2071, "func": "legendTextFont", "target": 0}
{"idx": 2072, "func": "//{{{ DockableLayout class", "target": 0}
{"idx": 2073, "func": "TimeSeries s =", "target": 0}
{"idx": 2074, "func": "Row 2", "target": 0}
{"idx": 2075, "func": "Temporary until SimpleListModel is used for all", "target": 0}
{"idx": 2076, "func": "This forces the feature ids to be assigned. //", "target": 0}
{"idx": 2077, "func": "Return if not clicked on any column header", "target": 0}
{"idx": 2078, "func": "Tests two strings for equality, tolerating nulls and optionally ignoring case.", "target": 0}
{"idx": 2079, "func": "//{{{ getWrapGuideColor() method", "target": 0}
{"idx": 2080, "func": "Show menu bar", "target": 0}
{"idx": 2081, "func": "several number formats use '.' as decimal separator, others use ','", "target": 0}
{"idx": 2082, "func": "See http://www.gzip.org/zlib/rfc-gzip.html", "target": 0}
{"idx": 2083, "func": "@see org.tigris.gef.graph.MutableGraphModel#addNodeRelatedEdges(java.lang.Object)", "target": 0}
{"idx": 2084, "func": "//the entity is associated with the session, so check its status", "target": 0}
{"idx": 2085, "func": "//handle the many different stub options.", "target": 0}
{"idx": 2086, "func": "Could we drop the Sync here?", "target": 1}
{"idx": 2087, "func": "append what we read into our buffer and allow the loop to continue", "target": 0}
{"idx": 2088, "func": "TODO: This code can be removed when getCurrentProject is removed", "target": 1}
{"idx": 2089, "func": "Only modified in class init", "target": 0}
{"idx": 2090, "func": "Only obtain and cast the return if needed", "target": 0}
{"idx": 2091, "func": "used for interrupting the sampler", "target": 0}
{"idx": 2092, "func": "display changes", "target": 0}
{"idx": 2093, "func": "data objects", "target": 0}
{"idx": 2094, "func": "TODO This is faster than many charAt() calls. //", "target": 1}
{"idx": 2095, "func": "Look for the annotation with the matching source. //", "target": 0}
{"idx": 2096, "func": "//_useDriverPropsChk.setSelected(_sqlAlias.getUseDriverProperties());", "target": 0}
{"idx": 2097, "func": "would be imprecise", "target": 0}
{"idx": 2098, "func": "public MailFolderCommandReference getCommandReference(MailFolderCommandReference r) { return r; }", "target": 0}
{"idx": 2099, "func": "OK, do it by the book.", "target": 0}
{"idx": 2100, "func": "line 1069", "target": 0}
{"idx": 2101, "func": "saving shortcuts", "target": 0}
{"idx": 2102, "func": "SAXException or ParserConfigurationException may be thrown", "target": 0}
{"idx": 2103, "func": "identifier quoting support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 2104, "func": "for dialects which are known to not support ANSI-SQL row-value-constructor syntax, we should mutate the tree.", "target": 0}
{"idx": 2105, "func": "//Use the VM launcher instead of shell launcher on VMS", "target": 0}
{"idx": 2106, "func": "REVIEW This is horribly inefficient, but it ensures that we properly skip over bytes via the TarBuffer... //", "target": 0}
{"idx": 2107, "func": "//setBorder( BorderFactory.createEmptyBorder(0,1,0,0) );", "target": 0}
{"idx": 2108, "func": "negative paint", "target": 0}
{"idx": 2109, "func": "//{{{ FileRootsVFS constructor", "target": 0}
{"idx": 2110, "func": "FIXME: Should we make this work with platform's locale, or continue hardcoding US?", "target": 1}
{"idx": 2111, "func": "10400..1044F;", "target": 0}
{"idx": 2112, "func": "I/O information. current reader current input stream current line number current column number type of input source stack of input soruces current external entity current character encoding. how many bytes read from current source.", "target": 0}
{"idx": 2113, "func": "Configure the object", "target": 0}
{"idx": 2114, "func": "/Draw N, S, E, W", "target": 0}
{"idx": 2115, "func": "Clean up our model and the extent that we read profile in to", "target": 0}
{"idx": 2116, "func": "Mode", "target": 0}
{"idx": 2117, "func": "//$NON_NLS-1$", "target": 0}
{"idx": 2118, "func": "tick labels visible", "target": 0}
{"idx": 2119, "func": "//{{{ hideSplashScreen() method", "target": 0}
{"idx": 2120, "func": "command to use when processing data with an external program", "target": 0}
{"idx": 2121, "func": "scan source directories and dest directory to build up both copy lists and compile lists", "target": 0}
{"idx": 2122, "func": "TableView view = tableController.getView();", "target": 0}
{"idx": 2123, "func": "//{{{ ButtonCellRenderer class", "target": 0}
{"idx": 2124, "func": "add all native jars", "target": 0}
{"idx": 2125, "func": "Here it is another object sent to the test.", "target": 0}
{"idx": 2126, "func": "// private final AliasWindowFactory _aliasWinFactory;", "target": 0}
{"idx": 2127, "func": "line 1711", "target": 0}
{"idx": 2128, "func": "TODO: Seems like overkill to load the model just to get the display name, but that's where it's stored currently - tfm", "target": 1}
{"idx": 2129, "func": "Check if we have a encoding to use from properties", "target": 0}
{"idx": 2130, "func": "TODO: Some of these magic numbers probably assume a line width of 1. Replace with appropriate constants/variables.", "target": 1}
{"idx": 2131, "func": "i18n[graph.btnCancel=Cancel]", "target": 0}
{"idx": 2132, "func": "get the values from the \"not use\" list and convert to sorted set", "target": 0}
{"idx": 2133, "func": "Method Tests", "target": 0}
{"idx": 2134, "func": "clear autocomplete hashmap", "target": 0}
{"idx": 2135, "func": "Class under test for Object add(Contact)", "target": 0}
{"idx": 2136, "func": "TODO: full-precision divmod is 1000x slower than MRI!", "target": 1}
{"idx": 2137, "func": "if the character is in the range 0x30 ~ 0x39, return its int value (0~9), otherwise, return -1", "target": 0}
{"idx": 2138, "func": "zap the buffer onto the canvas...", "target": 0}
{"idx": 2139, "func": "add to listmodel", "target": 0}
{"idx": 2140, "func": "In this case, the bounds are determined by the FigEdge", "target": 0}
{"idx": 2141, "func": "//{{{ getTokenAtOffset() method", "target": 0}
{"idx": 2142, "func": "then draw the line...", "target": 0}
{"idx": 2143, "func": "number of positional parameters in abbreviation expansion", "target": 0}
{"idx": 2144, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#locatorsUpdateCopy()", "target": 0}
{"idx": 2145, "func": "TODO : this really needs to be delayed unitl after we definitively know all node types where this is currently a problem is parameters for which where we cannot unequivocally resolve an expected type", "target": 1}
{"idx": 2146, "func": "TODO implement validation", "target": 1}
{"idx": 2147, "func": "@author: fdietz never request focus //view.requestFocus();", "target": 0}
{"idx": 2148, "func": "UCS-4 must begin with \"<!XML\" 0x00 0x00 0x3c 0x00: UCS-4, unusual (2143)", "target": 0}
{"idx": 2149, "func": "by default, remove matching empty dirs", "target": 0}
{"idx": 2150, "func": "this function has a template -> redirect output and catch the arguments", "target": 0}
{"idx": 2151, "func": "Set the password for this alias. @param password The new password. @throws ValidationException TODO: What conditions?", "target": 1}
{"idx": 2152, "func": "create a temporary file to make sure we always have a file to give to the PostWriter Whereever we are or Whatever the current path is.", "target": 0}
{"idx": 2153, "func": "//\"<?xml \"", "target": 0}
{"idx": 2154, "func": "//////////////////////////////////////////////////////Implementataion of IDataSetUpdateableTableModel: Delegation to _dataSetUpdateableTableModel", "target": 0}
{"idx": 2155, "func": "@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)", "target": 0}
{"idx": 2156, "func": "(non-Javadoc) @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#doConvertToNode(java.lang.Object)", "target": 0}
{"idx": 2157, "func": "two delimiters in a row; add an empty String", "target": 0}
{"idx": 2158, "func": "@see javax.swing.table.TableModel#getColumnCount()", "target": 0}
{"idx": 2159, "func": "set up popup menu...", "target": 0}
{"idx": 2160, "func": "Instance method", "target": 0}
{"idx": 2161, "func": "try an empty collection", "target": 0}
{"idx": 2162, "func": "The intended result URLs:", "target": 0}
{"idx": 2163, "func": "0980..09FF;", "target": 0}
{"idx": 2164, "func": "Spring-injected dependencies", "target": 0}
{"idx": 2165, "func": "@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)", "target": 0}
{"idx": 2166, "func": "Get a DOMImplementation", "target": 0}
{"idx": 2167, "func": "@see javax.swing.DefaultListModel#contains(java.lang.Object)", "target": 0}
{"idx": 2168, "func": "TODO - should LF-only EOL be allowed?", "target": 1}
{"idx": 2169, "func": "//{{{ loadServices() method", "target": 0}
{"idx": 2170, "func": "Namespace 4.5.3.26 [2]", "target": 0}
{"idx": 2171, "func": "properties are part of the vm options...", "target": 0}
{"idx": 2172, "func": "Ignore attributes from unknown uris", "target": 0}
{"idx": 2173, "func": "(non-Javadoc) @see org.columba.mail.imap.IImapServer#parseError(java.lang.String)", "target": 0}
{"idx": 2174, "func": "i18n[oracle.sqlText=SQL Text]", "target": 0}
{"idx": 2175, "func": "//{{{ maximumLayoutSize() method", "target": 0}
{"idx": 2176, "func": "Mainly needed for unit test Serialisable tests", "target": 0}
{"idx": 2177, "func": "Orientation", "target": 0}
{"idx": 2178, "func": "Nothing to do", "target": 0}
{"idx": 2179, "func": "//it might be an unwrapped collection reference! //try to find a wrapper (slowish)", "target": 0}
{"idx": 2180, "func": "... and save it", "target": 0}
{"idx": 2181, "func": "Should fail since a recursion will occur...", "target": 0}
{"idx": 2182, "func": "Line seperator", "target": 0}
{"idx": 2183, "func": "This handles HHH-354, where there is a strange property name in a where clause. If the lookahead contains a DOT then something that isn't an IDENT...", "target": 0}
{"idx": 2184, "func": "line 1105", "target": 0}
{"idx": 2185, "func": "Allow a mixed case version of the name to be provided. //", "target": 0}
{"idx": 2186, "func": "If the cell is editable, we really must have a valid DataType object, so the 'else' clause should never be used. It is just there as defensive programming.", "target": 0}
{"idx": 2187, "func": "hack to skip processing", "target": 1}
{"idx": 2188, "func": "//{{{ isVisible() method", "target": 0}
{"idx": 2189, "func": "configure output properties", "target": 0}
{"idx": 2190, "func": "//Ecore2EcorePackageImpl", "target": 0}
{"idx": 2191, "func": "property values are strings", "target": 0}
{"idx": 2192, "func": "create new search folder, but re-use old search folder", "target": 0}
{"idx": 2193, "func": "make final selection...", "target": 0}
{"idx": 2194, "func": "From outlier array sort out which are outliers and put these into a list If there are any farouts, set the flag on the OutlierListCollection", "target": 0}
{"idx": 2195, "func": "//{{{ Entry constructor", "target": 0}
{"idx": 2196, "func": "4.5.2.28 Namespace", "target": 0}
{"idx": 2197, "func": "stripOutlineVisible", "target": 0}
{"idx": 2198, "func": "MRI behavior", "target": 0}
{"idx": 2199, "func": "//NOTE SPECIAL CASE: one-to-one constrained=false cannot be proxied, so default to join and non-lazy", "target": 0}
{"idx": 2200, "func": "Order the new children, the dependencies cannot and need not be ordered", "target": 0}
{"idx": 2201, "func": "//pick a value that is good for everything", "target": 0}
{"idx": 2202, "func": "The label is not used. //", "target": 1}
{"idx": 2203, "func": "need to update the selection state.", "target": 0}
{"idx": 2204, "func": "invalid dates must be treated as expired", "target": 0}
{"idx": 2205, "func": "domainCrosshairPaint", "target": 0}
{"idx": 2206, "func": "//{{{ isStructureHighlightVisible() method", "target": 0}
{"idx": 2207, "func": "apply changes using ASTRewrite //", "target": 0}
{"idx": 2208, "func": "i18n[mssql.general=General]", "target": 0}
{"idx": 2209, "func": "Hand the current text to the DataType object. DataType object is responsible for validating that the text makes sense for this type of object and converting it to the proper form for output. All errors are handled as IOExceptions", "target": 0}
{"idx": 2210, "func": "Search in packs beginning from newest to oldest -> in most cases this should save us a lot of uid fetchings to find the deleted messages", "target": 0}
{"idx": 2211, "func": "//int getRow(MessageNode node);", "target": 0}
{"idx": 2212, "func": "Sets the directory name where the profiles can be found. Initially, 'uml14' is used. TODO: Intermediate solution for UML 2.x support, please implement a better solution. @param dir Name of the directory for the profiles", "target": 1}
{"idx": 2213, "func": "The element was deleted while we were processing it", "target": 0}
{"idx": 2214, "func": "Cf. PKZIP specification.", "target": 0}
{"idx": 2215, "func": "assert !initialized; GUITestActionOpenProject fails over this...", "target": 0}
{"idx": 2216, "func": "If the query is already compiled, skip the compilation.", "target": 0}
{"idx": 2217, "func": "Not 1.4+.", "target": 0}
{"idx": 2218, "func": "need to work out the space used by the tick labels... so we can update the cursor...", "target": 0}
{"idx": 2219, "func": "(non-Javadoc) @see org.columba.core.filter.IFilterList#insert(org.columba.core.filter.Filter, int)", "target": 0}
{"idx": 2220, "func": "//TODO: get SQL rendering out of here", "target": 1}
{"idx": 2221, "func": "Trim off the \"bin\" or \"runtime\" segment. //", "target": 0}
{"idx": 2222, "func": "title", "target": 0}
{"idx": 2223, "func": "Header may contain ;charset= , regexp extracts it so computed boundary is wrong", "target": 0}
{"idx": 2224, "func": "The next 4 lines fix the 2nd half of issue 5638. Is there no better way?", "target": 1}
{"idx": 2225, "func": "if arity 1, just compile the one element to save us the array cost", "target": 0}
{"idx": 2226, "func": "We don't yet have the need to discriminate by version.", "target": 0}
{"idx": 2227, "func": "Extract the name of the directory from the filename", "target": 0}
{"idx": 2228, "func": "//////////////////////////////////////////////////////////////////////////////////////////Needs to be done at this moment. That's why we can't call updateFromPreferences() here.", "target": 0}
{"idx": 2229, "func": "Table still contains one or more rows, so highlight (select) the appropriate one.", "target": 0}
{"idx": 2230, "func": "handle special case where value is less that item zero", "target": 0}
{"idx": 2231, "func": "Return the fully qualified name of a model element in Java (dot separated) format. <p> TODO: We really need a language independent format here. Perhaps the list of names that form the hierarchy? - tfm", "target": 1}
{"idx": 2232, "func": "all connected edges", "target": 0}
{"idx": 2233, "func": "ChangeDescription", "target": 0}
{"idx": 2234, "func": "TODO: need more tests", "target": 1}
{"idx": 2235, "func": "One or many arguments?", "target": 0}
{"idx": 2236, "func": "create folders, etc.", "target": 0}
{"idx": 2237, "func": "i18n[DataSetUpdateableTableModelImpl.error.rownotmatch=\\n Row {0} did not match any row in DB]", "target": 0}
{"idx": 2238, "func": "category filtering is disabled as default", "target": 0}
{"idx": 2239, "func": "----------- Public Interface ------------", "target": 0}
{"idx": 2240, "func": "we might have been closed as a result of the above", "target": 0}
{"idx": 2241, "func": "line 992", "target": 0}
{"idx": 2242, "func": "file name length", "target": 0}
{"idx": 2243, "func": "create a virtual folder", "target": 0}
{"idx": 2244, "func": "end class CrEmptyPackage", "target": 0}
{"idx": 2245, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getPluginUserSettingsFolder()", "target": 0}
{"idx": 2246, "func": "Now define the Popup-related operations.", "target": 0}
{"idx": 2247, "func": "remember parent path (this is necessary for IMAPRootFolder sync operations)", "target": 0}
{"idx": 2248, "func": "bottom-label-forms", "target": 0}
{"idx": 2249, "func": "Updates the top level ModelElements for all projects. In UML2, each model knows it's root elements, so this could make setRoots(...) obsolete. E.g., applying a stereotype in UML2 adds a new root. TODO: This is redundant with setRoots/getRoots. There are already too many ways this stuff is managed without adding an additional one. All current model subsystem implementations know their top level elements. Responsibility can be moved to the model subsystem, but let's choose one way of managing this.", "target": 1}
{"idx": 2250, "func": "i18n[mssql.scriptTemplate=Script template]", "target": 0}
{"idx": 2251, "func": "@see org.argouml.persistence.SAXParserBase#isElementOfInterest(String)", "target": 0}
{"idx": 2252, "func": "TODO: add recent patterns", "target": 1}
{"idx": 2253, "func": "//private static final String PERF_KEY_OBJ_TAB_DIV_LOC = \"Squirrel.hibernateplugin.objTabDivLocAsInt\";", "target": 0}
{"idx": 2254, "func": "If default Namespace is not already set", "target": 0}
{"idx": 2255, "func": "No super method, try to invoke regular method could be a superfluous \"super.\" which is legal.", "target": 0}
{"idx": 2256, "func": "No need to wrap this debug", "target": 0}
{"idx": 2257, "func": "a Double.NaN should be ignored", "target": 0}
{"idx": 2258, "func": "dir does not exist.", "target": 0}
{"idx": 2259, "func": "//{{{ getScreenLineStartOffset() method", "target": 0}
{"idx": 2260, "func": "Windows bug workaround in case a YES/NO confirm was shown", "target": 1}
{"idx": 2261, "func": "TODO: This is the same as in parent - remove? @see org.argouml.uml.diagram.ui.FigNodeModelElement#updateBounds()", "target": 1}
{"idx": 2262, "func": "//do the failfast put outside the scope of the JTA txn", "target": 0}
{"idx": 2263, "func": "this needs to be split, since conditional calling #inherited doesn't fit standard ruby semantics", "target": 1}
{"idx": 2264, "func": "Added to support external testing", "target": 0}
{"idx": 2265, "func": "initalise pointer to first user", "target": 0}
{"idx": 2266, "func": "get column of list", "target": 0}
{"idx": 2267, "func": "We jump through some hoops here to handle arbitrary cases like unset(\"bsh.foo\");", "target": 0}
{"idx": 2268, "func": "[sebb] assertEquals(item2, clonedItem.getProperty(item2.getName()));", "target": 0}
{"idx": 2269, "func": "TODO: This comparison is very suspect, it should use equals method. The code within the block is in fact never executed. I hesitate to change this now as it will trigger code has never been used before and am not aware of any problems that it usage may introduce. I do think that we need to be able to find a different way to implement the intent here which seems to be to correct edge drawings that should actually not be allowed - Bob", "target": 1}
{"idx": 2270, "func": "TODO: Figure out a better way to get the FROM elements in a proper tree structure. If this is not the destination of a many-to-many, add it as a child of the origin.", "target": 1}
{"idx": 2271, "func": "Cascade Constraints Checkbox", "target": 0}
{"idx": 2272, "func": "Most of this code originates from ActionOpenProject.", "target": 0}
{"idx": 2273, "func": "Now force calculation of the bounds of the figure, update the edges and trigger anyone who's listening to see if the \"bounds\" property has changed.", "target": 0}
{"idx": 2274, "func": "subclass closure properties", "target": 0}
{"idx": 2275, "func": "set the width and height of non-shared axis of all sub-plots", "target": 0}
{"idx": 2276, "func": "if we are the target of a destroy action the figlifeline ends here and we add the activation", "target": 0}
{"idx": 2277, "func": "Caches", "target": 0}
{"idx": 2278, "func": "Translate \"ret = (a && b)\" --> \"ret = (a ? b : false)\" --> v1 = -- build(a) -- OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. while this info can be inferred by using attributes, why bother if we can do this? ret = false beq(v1, false, L) v2 = -- build(b) -- ret = v2 L: //", "target": 0}
{"idx": 2279, "func": "@see org.argouml.model.ModelImplementation#getXmiReader()", "target": 0}
{"idx": 2280, "func": "south", "target": 0}
{"idx": 2281, "func": "Get series Paint and Stroke", "target": 0}
{"idx": 2282, "func": "Although not generally true for GEF, for Argo we know that the layer is a LayerPerspective which knows the associated diagram", "target": 0}
{"idx": 2283, "func": "Handle WeakExplorerNodes", "target": 0}
{"idx": 2284, "func": "Settings; readResolve sets these from the server/client values as appropriate TODO would be nice to make these final; not 100% sure volatile is needed as not changed after creation", "target": 1}
{"idx": 2285, "func": "remove the g0,g1...gn vars", "target": 0}
{"idx": 2286, "func": "JDiff, error list add stuff here", "target": 0}
{"idx": 2287, "func": "// actions.get(ExecuteSqlAction.class).setEnabled(false);", "target": 0}
{"idx": 2288, "func": "The system time hasn't changed so add some increment of 100s of nanoseconds to guarantee uniqueness. //", "target": 0}
{"idx": 2289, "func": "This must be done last, as must not be overridden", "target": 0}
{"idx": 2290, "func": "---- birthdayLabel ----", "target": 0}
{"idx": 2291, "func": "[{ASSIGNED}]-[{M},{C}]", "target": 0}
{"idx": 2292, "func": "pragmas", "target": 0}
{"idx": 2293, "func": "Get all the features (giving up if there are none). Then loop through finding all operations. Each time we find one, we compare its signature with all previous (held in collection operSeen), and then if it doesn't match add it to the collection.", "target": 0}
{"idx": 2294, "func": "//ANNOTATIONS //////////////////////////////////////////////////////////", "target": 0}
{"idx": 2295, "func": "Yes || Yes to all", "target": 0}
{"idx": 2296, "func": "Set the file uploads", "target": 0}
{"idx": 2297, "func": "$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$", "target": 0}
{"idx": 2298, "func": "============= object properties ================", "target": 0}
{"idx": 2299, "func": "hash", "target": 0}
{"idx": 2300, "func": "next version: remove this", "target": 1}
{"idx": 2301, "func": "//success: proceed with more steps", "target": 0}
{"idx": 2302, "func": "maxCategoryLabelWidthRatio", "target": 0}
{"idx": 2303, "func": "sanity check for data area...", "target": 0}
{"idx": 2304, "func": "add setPosition impl, which stores filename as constant to speed updates", "target": 0}
{"idx": 2305, "func": "builder.add(panel, cc.xy(1, 7));", "target": 0}
{"idx": 2306, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.dialects.HibernateDialect#getMaxPrecision(int)", "target": 0}
{"idx": 2307, "func": "(non-Javadoc) @see org.columba.chat.ui.roaster.IRoasterTree#updateBuddyPresence(org.columba.chat.api.IBuddyStatus)", "target": 0}
{"idx": 2308, "func": "start class", "target": 0}
{"idx": 2309, "func": "Helper Methods", "target": 0}
{"idx": 2310, "func": "//{{{ addNotify() method", "target": 0}
{"idx": 2311, "func": "Members", "target": 0}
{"idx": 2312, "func": "these files are made dirty --> 3+4 with different content", "target": 0}
{"idx": 2313, "func": "i18n", "target": 0}
{"idx": 2314, "func": "DesignGoalsCM checks if the critic isRelevantToGoals of the Designer this value is always true for the Critic base class so DesignerGoal should always return true in this condition", "target": 0}
{"idx": 2315, "func": "element will normally be null when called from PGML parser It will get it's source & destination set later in attachEdges", "target": 0}
{"idx": 2316, "func": "@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()", "target": 0}
{"idx": 2317, "func": "the cache of the actual plans...", "target": 0}
{"idx": 2318, "func": "Now we'll do recursive MatchMapping. (We need to iterate over a copy, since we modify the underlying list in the loop.)", "target": 0}
{"idx": 2319, "func": "The edited column is in the resultset twice (example: SELECT MyName, FROM MyTable). We won't add the this col to the where clause.", "target": 0}
{"idx": 2320, "func": "paramNames", "target": 0}
{"idx": 2321, "func": "ignore any SQLExceptions. This would only if we could not get column info from the SQL database meta data.", "target": 0}
{"idx": 2322, "func": "get message with UID", "target": 0}
{"idx": 2323, "func": "Not significant for the class loader.", "target": 0}
{"idx": 2324, "func": "Failures count", "target": 0}
{"idx": 2325, "func": "initialize the two minor diagonals of A to 1", "target": 0}
{"idx": 2326, "func": "there was no data type object, so this data type is unknown to squirrel and thus cannot be edited.", "target": 0}
{"idx": 2327, "func": "and its stereotypes", "target": 0}
{"idx": 2328, "func": "// registerColumnType( Types.CLOB, 16777215, \"mediumtext\" ); // registerColumnType( Types.CLOB, 65535, \"text\" );", "target": 0}
{"idx": 2329, "func": "String is exhausted", "target": 0}
{"idx": 2330, "func": "Do the work within an operation. //", "target": 0}
{"idx": 2331, "func": "Mark Walsh 2002-08-03, modified to also parse a parameter name value string, where string contains only the parameter name and no equal sign.", "target": 0}
{"idx": 2332, "func": "remove any port specification $NON-NLS-1$ $NON-NLS-2$", "target": 0}
{"idx": 2333, "func": "4.1 plugin", "target": 0}
{"idx": 2334, "func": "See if a GenModel is registered for the package's URI, and if so, try to load it. //", "target": 0}
{"idx": 2335, "func": "@see org.argouml.persistence.MemberFilePersister#getMainTag()", "target": 0}
{"idx": 2336, "func": "again, CCS did not have such a concept; but a reasonable proximity is to clear the cache after transaction as long as the underlying cache is not JTA aware.", "target": 0}
{"idx": 2337, "func": "Try Changing the direction of m7", "target": 0}
{"idx": 2338, "func": "try to load all plugins", "target": 0}
{"idx": 2339, "func": "//expressionTerminators.add(\",\"); deliberately excluded", "target": 0}
{"idx": 2340, "func": "put it back", "target": 0}
{"idx": 2341, "func": "@see java.util.Collection#toArray(java.lang.Object[])", "target": 0}
{"idx": 2342, "func": "check if series are disjoint (i.e. domain-spans do not overlap)", "target": 0}
{"idx": 2343, "func": "The Ostermiller SQLLexer crashes with an ArrayIndexOutOfBoundsException if the char is greater then 255. So we prevent the char from being greater. This is surely not a proper Unicode treatment but it doesn't seem to do no harm and it keeps the SQLLexer working.", "target": 0}
{"idx": 2344, "func": "DBCopyGlobalPreferencesTab tab = new DBCopyGlobalPreferencesTab(); return new IGlobalPreferencesPanel[] { tab };", "target": 0}
{"idx": 2345, "func": "Why is object in the args?", "target": 1}
{"idx": 2346, "func": "We save only the first item in the cc-list", "target": 0}
{"idx": 2347, "func": "Return true iff the given ToDoItem is still valid and should be kept in the given designers ToDoList. Critics that are not enabled should always return false so that their ToDoItems will be removed. Subclasses of Critic that supply multiple offenders should always override this method. <p> By default this method basically asks the critic to again critique the offending Object and then it checks if the resulting ToDoItem is the same as the one already posted. This is simple and it works fine for light-weight critics. Critics that expend a lot of computational effort in making feedback that can be easily check to see if it still holds, should override this method. <p> TODO: Maybe ToDoItem should carry some data to make this method more efficient. {@inheritDoc}", "target": 1}
{"idx": 2348, "func": "RFC 822 s4.1: \"Header fields are NOT required to occur in any particular order, except that the message body MUST occur AFTER the headers\" (the same section specifies a reccommended order, which we ignore)", "target": 0}
{"idx": 2349, "func": "//{{{ isValid() method", "target": 0}
{"idx": 2350, "func": "b may be 0 for success, 1 for error, 2 for fatal error,", "target": 0}
{"idx": 2351, "func": "FIXME: How much more obtuse can this be? Heredoc already parsed this and saved string...Do not parse..just return", "target": 1}
{"idx": 2352, "func": "if the dataset implements DomainInfo, life is easier", "target": 0}
{"idx": 2353, "func": "Allow listening to other elements:", "target": 0}
{"idx": 2354, "func": "stereotype fig covers the name fig:", "target": 0}
{"idx": 2355, "func": "//i18n[InstallDefaultDriversAction.error.selectingwindow=Error selecting window]", "target": 0}
{"idx": 2356, "func": "Prepare the common tab", "target": 0}
{"idx": 2357, "func": "Create the header and body of the multipart", "target": 0}
{"idx": 2358, "func": "$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$", "target": 0}
{"idx": 2359, "func": "This loop is hammered during decompression, hence avoid native method call overhead of System.arraycopy for very small ranges to copy.", "target": 0}
{"idx": 2360, "func": "we don't have any more args to recognize!", "target": 0}
{"idx": 2361, "func": "don't instantiate this class", "target": 0}
{"idx": 2362, "func": "See if we already have this descriptor open. If so then we can mostly share the handler (keep open file, but possibly change the mode).", "target": 0}
{"idx": 2363, "func": "//{{{ setPermissions() method", "target": 0}
{"idx": 2364, "func": "//as far as we know", "target": 0}
{"idx": 2365, "func": "Two points for line segment used to compute slope of path here NOTE that this is the average slope, not instantaneous, so it will give screwy results near bends in the path", "target": 0}
{"idx": 2366, "func": "We need to ensure that the variable names generated here cannot conflict with ruby variable names! Hence the \"%\" tthat is appended to the beginning!", "target": 0}
{"idx": 2367, "func": "JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately", "target": 0}
{"idx": 2368, "func": "i18n[editextras.second=Second]", "target": 0}
{"idx": 2369, "func": "handle category escape", "target": 0}
{"idx": 2370, "func": "TODO: Does CoreHelper#getExtendedClassifiers(Object element) means all parents (direct and indirect) or only the direct parents?", "target": 1}
{"idx": 2371, "func": "save message source under selected filename", "target": 0}
{"idx": 2372, "func": "The current XML handler interface. //", "target": 0}
{"idx": 2373, "func": "For classifiers", "target": 0}
{"idx": 2374, "func": "no modifiers - let's check if the key is valid", "target": 0}
{"idx": 2375, "func": "@see org.argouml.model.ModelImplementation#getXmiWriter(java.lang.Object, java.io.Writer, java.lang.String)", "target": 0}
{"idx": 2376, "func": "create a new Vector to avoid ConcurrentModificationExc when the listeners get added/removed while we are in fire", "target": 0}
{"idx": 2377, "func": "set up the controls", "target": 0}
{"idx": 2378, "func": "TODO: We have multiple string representations for multiplicities these should be consolidated. This form is used by org.argouml.uml.reveng", "target": 1}
{"idx": 2379, "func": "i18n[CancelStatementThread.cancelSucceededLate=Canceling statement succeeded now. But took longer than one second.]", "target": 0}
{"idx": 2380, "func": "/////////////////////////////////////////////////////////////////////////Constructors ///////////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 2381, "func": "------------ ItemListener implementation ----------------------", "target": 0}
{"idx": 2382, "func": "shall we insert a link?", "target": 0}
{"idx": 2383, "func": "//////////////////////////////////////////////////////////////////////////static block ////////////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 2384, "func": "The following variables are set by StandardJMeterEngine. This is done before start() is called, so the values will be published to the thread safely TODO - consider passing them to the constructor, so that they can be made final (to avoid adding lots of parameters, perhaps have a parameter wrapper object.", "target": 1}
{"idx": 2385, "func": "padding", "target": 0}
{"idx": 2386, "func": "//draw the gray squares overlapping the white background squares", "target": 0}
{"idx": 2387, "func": "Default (any other step) is to return nothing", "target": 0}
{"idx": 2388, "func": "//$NON-NLS-1$ //$NON-NLS-1$ modal dialog box", "target": 0}
{"idx": 2389, "func": "XXX maybe use reflection to addPathElement (other patterns ?)", "target": 1}
{"idx": 2390, "func": "MacOS users expect the app to keep running after all windows are closed", "target": 0}
{"idx": 2391, "func": "Now, search for items in the selected folder.", "target": 0}
{"idx": 2392, "func": "Only if the feature kind is unspecified should we return a match. Otherwise, we might return an attribute feature when an element is required, or vice versa. This also can be controlled by XMLResource.OPTION_LAX_FEATURE_PROCESSING. //", "target": 0}
{"idx": 2393, "func": "we add this to our group of fileset manifests", "target": 0}
{"idx": 2394, "func": "if value contains \"-\" it probably has a date component", "target": 0}
{"idx": 2395, "func": "//int midY = (int) (plotArea.getMinY() + (plotArea.getHeight() / 2));", "target": 0}
{"idx": 2396, "func": "if a subtrahend is not specified, assume it is zero", "target": 0}
{"idx": 2397, "func": "assign remaining elements as an array for rest args (or empty array)", "target": 0}
{"idx": 2398, "func": "Write the request to our own stream", "target": 0}
{"idx": 2399, "func": "This automatically pulls in a TagDefinition from the profile:", "target": 0}
{"idx": 2400, "func": "TABLENAME", "target": 0}
{"idx": 2401, "func": "fill the clipped area g2d.setPaint(LIGHT_GRADIENT);", "target": 0}
{"idx": 2402, "func": "file exclf inclf exclp inclp", "target": 0}
{"idx": 2403, "func": "create the todopane", "target": 0}
{"idx": 2404, "func": "if the event was caused by a change to series visibility, then the axis ranges might need updating...", "target": 0}
{"idx": 2405, "func": "write the tag diff", "target": 0}
{"idx": 2406, "func": "If this looks like a feature getter, a kind property will allow it to be recognized properly. //", "target": 0}
{"idx": 2407, "func": "Get the class name of the associated entity.", "target": 0}
{"idx": 2408, "func": "//{{{ filesSelected() method", "target": 0}
{"idx": 2409, "func": "end class CrTooManyTransitions", "target": 0}
{"idx": 2410, "func": "seriesVisibleList", "target": 0}
{"idx": 2411, "func": "MainInterface.processor.addOp(c);", "target": 0}
{"idx": 2412, "func": "Add this PropertySet's property names.", "target": 0}
{"idx": 2413, "func": "This can be made public to allow others to extend their own persisters", "target": 1}
{"idx": 2414, "func": "set display text - possible with a mnemonic defined using &", "target": 0}
{"idx": 2415, "func": "Amount to increment Y position by for each node placed. We pack them densely on the assumption that the user is going to split them into at least two swimlanes.", "target": 0}
{"idx": 2416, "func": "i18n[sqlscript.configYourMultiTableScriptCancel=Cancel]", "target": 0}
{"idx": 2417, "func": "sectionPaintMap", "target": 0}
{"idx": 2418, "func": "Removed from UML 2.x", "target": 0}
{"idx": 2419, "func": "//{{{ start() method", "target": 0}
{"idx": 2420, "func": "Now the block's CRC, so it is in a known place.", "target": 0}
{"idx": 2421, "func": "-n", "target": 0}
{"idx": 2422, "func": "in non-select queries, the only time we should need to join is if we are in a subquery from clause", "target": 0}
{"idx": 2423, "func": "TODO: Why is this disabled always?", "target": 1}
{"idx": 2424, "func": "a null item should throw an IllegalArgumentException", "target": 0}
{"idx": 2425, "func": "If we can't add it, it must already be in the list so find it and move it to the end. //", "target": 0}
{"idx": 2426, "func": "should be equal...", "target": 0}
{"idx": 2427, "func": "delete all files", "target": 0}
{"idx": 2428, "func": "Decorate frames with look and feel (JDK 1.4 only)", "target": 0}
{"idx": 2429, "func": "the first point is (x, 0)", "target": 0}
{"idx": 2430, "func": "Wait longer than a clock pulse (generally 10-15ms) Catch an early clock pulse to reduce slop.", "target": 0}
{"idx": 2431, "func": "copy 2", "target": 0}
{"idx": 2432, "func": "Default objects", "target": 0}
{"idx": 2433, "func": "(non-Javadoc) @see java.util.Comparator#compare(java.lang.Object, java.lang.Object)", "target": 0}
{"idx": 2434, "func": "//now run", "target": 0}
{"idx": 2435, "func": "//{{{ ActionSet constructor", "target": 0}
{"idx": 2436, "func": "TODO: i18n", "target": 1}
{"idx": 2437, "func": "Single node on list", "target": 0}
{"idx": 2438, "func": "//Blobs are ignored by merge()", "target": 0}
{"idx": 2439, "func": "Wait so that the clock can catch up and the time adjustment won't overflow.", "target": 0}
{"idx": 2440, "func": "MRI behavior: raise ArgumentError for 'unknown command' before checking number of args.", "target": 0}
{"idx": 2441, "func": "re-get, re-check method; if not null now, go to dispatch", "target": 0}
{"idx": 2442, "func": "parse \"/plugin.xml\" file", "target": 0}
{"idx": 2443, "func": "load user perspectives", "target": 0}
{"idx": 2444, "func": "(non-Javadoc) @see org.columba.core.gui.frame.focus.FocusOwner#paste()", "target": 0}
{"idx": 2445, "func": "the utility class that reads and writes release info from/to the release.xml file TODO: Spring-inject when this class is a Spring bean", "target": 1}
{"idx": 2446, "func": "TODO is this possible?", "target": 1}
{"idx": 2447, "func": "//{{{ getNonAlphaNumericChars() method", "target": 0}
{"idx": 2448, "func": "if a lastSelection for this folder is set getting the last selected uid", "target": 0}
{"idx": 2449, "func": "@see javax.swing.JFrame#getJMenuBar()", "target": 0}
{"idx": 2450, "func": "//Create self and", "target": 0}
{"idx": 2451, "func": "hack to get right style for input", "target": 1}
{"idx": 2452, "func": "conditional this.offsets points the next of '('.", "target": 0}
{"idx": 2453, "func": "propertyPane = TabProps", "target": 0}
{"idx": 2454, "func": "Don't auto-unwrap wrappers (preserve identity semantics) FALL THROUGH TO OBJECT OPERATIONS BELOW.", "target": 0}
{"idx": 2455, "func": "The name of the meta type is the class name (after the last .) and before the next $ or end of class name.", "target": 0}
{"idx": 2456, "func": "The new length is <= the old one.", "target": 0}
{"idx": 2457, "func": "Increase precision - next iteration supplies n exact digits", "target": 0}
{"idx": 2458, "func": "//note that this method could easily be moved up to BasicEntityPersister, //if we ever needed to reuse it from other subclasses", "target": 1}
{"idx": 2459, "func": "line 1905", "target": 0}
{"idx": 2460, "func": "simplified these settings a little...", "target": 1}
{"idx": 2461, "func": "Display the result set.", "target": 0}
{"idx": 2462, "func": "after all persisters and named queries are registered", "target": 0}
{"idx": 2463, "func": "TODO: varargs?", "target": 0}
{"idx": 2464, "func": "The termination guard is in the body. //", "target": 0}
{"idx": 2465, "func": "This might be because an table alias is used maybe with an AS before it.", "target": 0}
{"idx": 2466, "func": "i18n[mysql.copyTable=Copy Table...]", "target": 0}
{"idx": 2467, "func": "srcIndex --> end", "target": 0}
{"idx": 2468, "func": "The \"show types\" defaults to TRUE, to stay compatible with older ArgoUML versions that did not have this setting:", "target": 0}
{"idx": 2469, "func": "empty the worker list until one is left", "target": 0}
{"idx": 2470, "func": "line 368", "target": 0}
{"idx": 2471, "func": "i18n[HibernateTabController.hint=Support for Hibernate]", "target": 0}
{"idx": 2472, "func": "FE20..FE2F;", "target": 0}
{"idx": 2473, "func": "Backward compatibility", "target": 0}
{"idx": 2474, "func": "RRULE:FREQ=YEARLY;COUNT=5;INTERVAL=1 RRULE:FREQ=WEEKLY;UNTIL=20060725T215959;INTERVAL=1;BYDAY=TU RRULE:FREQ=YEARLY;INTERVAL=1", "target": 0}
{"idx": 2475, "func": "25A0..25FF;", "target": 0}
{"idx": 2476, "func": "i18n[HibernateAttribuiteDataSet.identifier=Identifier]", "target": 0}
{"idx": 2477, "func": "Returns the current target. @deprecated As of ArgoUml version 0.13.5, the visibility of this method will change in the future, replaced by {@link org.argouml.ui.targetmanager.TargetManager#getTarget() TargetManager.getInstance().getTarget()}. TODO: MVW: I think this should not be deprecated. @return the target @see org.argouml.ui.TabTarget#getTarget()", "target": 1}
{"idx": 2478, "func": "//not really necessary, I guess...", "target": 0}
{"idx": 2479, "func": "Search for collections by reachability, updating their role. We don't want to touch collections reachable from a deleted object", "target": 0}
{"idx": 2480, "func": "Analyze the Filter", "target": 0}
{"idx": 2481, "func": "We need to fill the whole pane, so that the description field can take all available space:", "target": 0}
{"idx": 2482, "func": "//map second/minute/hour/day/month/year to ANSI extract(), override on subclasses", "target": 0}
{"idx": 2483, "func": "Get the names of the columns used to link between the collection owner and the collection elements.", "target": 0}
{"idx": 2484, "func": "modify listmodel", "target": 0}
{"idx": 2485, "func": "subtitle 1 is the legend", "target": 0}
{"idx": 2486, "func": "TODO: pass in a message handler so user gets error msgs.", "target": 1}
{"idx": 2487, "func": "//{{{ showSelectLineRangeDialog() method", "target": 0}
{"idx": 2488, "func": "Read the version.", "target": 0}
{"idx": 2489, "func": "this will be the current parse character (pattern[index])", "target": 0}
{"idx": 2490, "func": "TODO localize filter action names", "target": 1}
{"idx": 2491, "func": "block argument assignment, if there's a block arg", "target": 0}
{"idx": 2492, "func": "set background of scrollpane, in case the list is smaller than the dockable", "target": 0}
{"idx": 2493, "func": "(non-Javadoc) @see org.columba.mail.folder.FolderTreeNode#addSubfolder(org.columba.mail.folder.FolderTreeNode)", "target": 0}
{"idx": 2494, "func": "Check to make sure that every object in the collection has an ancestor that is contained in this mapping. //", "target": 0}
{"idx": 2495, "func": "List<Transition> result = new ArrayList<Transition>(); TODO: not complete - how to retrieve the transitions?", "target": 1}
{"idx": 2496, "func": "The list with objects that should be shown in the combobox. TODO: Using a list here forces a linear search when we're trying to add a new element to the model which can be very slow for large models.", "target": 1}
{"idx": 2497, "func": "Do the encoding. //", "target": 0}
{"idx": 2498, "func": "//TODO handle supportsNotNullUnique=false, but such a case does not exist in the wild so far", "target": 1}
{"idx": 2499, "func": "labelShadowPaint", "target": 0}
{"idx": 2500, "func": "TODO: Mark diagram/project as dirty?", "target": 1}
{"idx": 2501, "func": "wait for more requests", "target": 0}
{"idx": 2502, "func": "Determine the required plugins. //", "target": 0}
{"idx": 2503, "func": "Moved here from SelectClause [jsd]", "target": 0}
{"idx": 2504, "func": "TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with this type and it can't be marshalled. Confirm. JRUBY-415", "target": 1}
{"idx": 2505, "func": "//{{{ minimumLayoutSize() method", "target": 0}
{"idx": 2506, "func": "line 893", "target": 0}
{"idx": 2507, "func": "save leading text", "target": 0}
{"idx": 2508, "func": "do not reset the stream and just treat it like a normal UTF-8 file.", "target": 0}
{"idx": 2509, "func": "//setBorder(selectedBorder);", "target": 0}
{"idx": 2510, "func": "TODO: Why does it fail for changing the name of an associationend? Why should it pass?", "target": 1}
{"idx": 2511, "func": "Some helper functions:", "target": 0}
{"idx": 2512, "func": "-- Basic infrastructure --", "target": 0}
{"idx": 2513, "func": "Create a diagram. This 4-arg version is only for internal use. The 'namespace' argument is deprecated and not used in the new APIs.", "target": 0}
{"idx": 2514, "func": "// titlebar.setMidColor(INACTIVE_MID_COLOR); // titlebar.setFillColor(INACTIVE_FILL_COLOR); // titlebar.setTitleColor(INACTIVE_LABEL_COLOR, INACTIVE_MID_COLOR, false);", "target": 0}
{"idx": 2515, "func": "datasetToDomainAxisMap...", "target": 0}
{"idx": 2516, "func": "lineStroke", "target": 0}
{"idx": 2517, "func": "---- professionTextField ----", "target": 0}
{"idx": 2518, "func": "reserve some space for the domain axis...", "target": 0}
{"idx": 2519, "func": "Let StringEntity perform the encoding", "target": 0}
{"idx": 2520, "func": "doubled quote => quote", "target": 0}
{"idx": 2521, "func": "paint right outside border g2d.setPaint(p1);", "target": 0}
{"idx": 2522, "func": "check if line segments are colinear", "target": 0}
{"idx": 2523, "func": "FIXME: This is a system error based on errno", "target": 1}
{"idx": 2524, "func": "//element //index -> id", "target": 0}
{"idx": 2525, "func": "For 'b.foo'", "target": 0}
{"idx": 2526, "func": "if it's a singleton class and the real class is proc, we're doing closure conversion so just use Proc's hashcode", "target": 0}
{"idx": 2527, "func": "//very wrong.", "target": 1}
{"idx": 2528, "func": "\"CREATE SEQUENCE $sequenceName$ \" + \"$increment$ $minimum$ $maximum$ $startWith$ $cache$ $cycle$\";", "target": 0}
{"idx": 2529, "func": "Check cache for an entry with an Expires header in the future", "target": 0}
{"idx": 2530, "func": "TODO: It is a performance drain to load all classes at startup time. They should be lazy loaded when needed. Instead of scanning all classes for ones which implement our loadable module interface, we should use a manifest entry or a special name/name pattern that we look for to find the single main module class to load here. - tfm", "target": 1}
{"idx": 2531, "func": "If the user picks auto-increment, auto-fill the \"Fixed value\" column with 0 for the start value if it is currently empty.", "target": 0}
{"idx": 2532, "func": "We don't create an iterator stack until the root mapping itself has been returned by next once. After that the stack should be non-empty and the top iterator should yield true for hasNext.", "target": 0}
{"idx": 2533, "func": "path - everything up to query string or fragment", "target": 0}
{"idx": 2534, "func": "Ignored: Highly unlikely, and what would we do anyway? log it", "target": 0}
{"idx": 2535, "func": "//the remainder of this method is only for compilers that need their dependency work done", "target": 0}
{"idx": 2536, "func": "We have the JBCWriteMutex, so no other local thread will be trying to write this key. It's possible here some remote thread has come in and changed the values again, but since we are reading the values to write to JBC right now, we know we are writing the latest values; i.e. we don't assume that what we cached in entry.update() above is what we should write to JBC now. Our write could be redundant, i.e. we are writing what some remote thread just came in an wrote. There is a chance that yet another remote thread will update us, and we'll then overwrite that later data in JBC. But, all remote nodes will ignore that change in their localCache; the only place it will live will be in JBC, where it can only effect the initial state transfer values on newly joined nodes (i.e. populateLocalCache()).", "target": 0}
{"idx": 2537, "func": "Parse the string as if possible", "target": 0}
{"idx": 2538, "func": "Display the dialect version.", "target": 0}
{"idx": 2539, "func": "get list of plugins", "target": 0}
{"idx": 2540, "func": "@see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)", "target": 0}
{"idx": 2541, "func": "//{{{ BrowserColorsOptionPane constructor", "target": 0}
{"idx": 2542, "func": "i18n[ToolsPopupController.toolspopupmsg=Please try out the Tools popup by hitting ctrl+t in the SQL Editor. Do it three times to stop this message.]", "target": 0}
{"idx": 2543, "func": "//{{{ setLineContext() method", "target": 0}
{"idx": 2544, "func": "in the rare case the WSDL is protected and requires authentication, use the AuthManager to set the authorization. Basic and Digest authorization are pretty weak and don't provide real security.", "target": 0}
{"idx": 2545, "func": "i18n[userscript.confirmRemove=Do you want to remove script {0} from the list?]", "target": 0}
{"idx": 2546, "func": "//////////////////////////////////////////////////////////////////////////operations ////////////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 2547, "func": "//Synchronize on the info object's MUTEX to ensure //Multiple threads don't update the scheduled time simultaneously", "target": 0}
{"idx": 2548, "func": "public List subList(int from, int to) { return featureMap.subList(getEStructuralFeature(), from, to); }", "target": 0}
{"idx": 2549, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getImportedKeysInfo(net.sourceforge.squirrel_sql.fw.sql.ITableInfo)", "target": 0}
{"idx": 2550, "func": "Create a resource set //", "target": 0}
{"idx": 2551, "func": "TODO factor up into GenBaseImpl? //", "target": 1}
{"idx": 2552, "func": "here we need to update the UI for the popup menu, if the panel has one...", "target": 0}
{"idx": 2553, "func": "Finally, block's contents proper.", "target": 0}
{"idx": 2554, "func": "Subtract the the offset of the click, to take account of user having not initially clicked in the centre.", "target": 0}
{"idx": 2555, "func": "Handle any filters applied to this collection", "target": 0}
{"idx": 2556, "func": "//The format of the result. This must be \"text\" or \"html\". //Hopefully some type of XML format will be available as well", "target": 0}
{"idx": 2557, "func": "Button group resources when Bytes Message is selected", "target": 0}
{"idx": 2558, "func": "//Class/genFeature.override.javajetinc //for", "target": 0}
{"idx": 2559, "func": "do a check", "target": 0}
{"idx": 2560, "func": "possibly altered in prepareExec", "target": 0}
{"idx": 2561, "func": "Decorate dialogs with look and feel (JDK 1.4 only)", "target": 0}
{"idx": 2562, "func": "TODO: I18N required", "target": 1}
{"idx": 2563, "func": "byte - byte compare", "target": 0}
{"idx": 2564, "func": "Find the preceding message, if any, on either end of the association.", "target": 0}
{"idx": 2565, "func": "------------- Rule management --------------", "target": 0}
{"idx": 2566, "func": "insert the \"WHERE\" at the front if there is anything in the clause", "target": 0}
{"idx": 2567, "func": "//{{{ fireContentInserted() method", "target": 0}
{"idx": 2568, "func": "end class ActionOpenCritics", "target": 0}
{"idx": 2569, "func": "Entity proxies, by EntityKey", "target": 0}
{"idx": 2570, "func": "Fill 21 of value (byte) -87 Fill 3 of value (byte) 33 Fill 7 of value (byte) -87", "target": 0}
{"idx": 2571, "func": "Test to show current problem with InterleaveController I am not sure if the expected order of the samples below are correct, because I am not sure if it is properly defined how the InterleaveController and OnlyOnceController should function.", "target": 0}
{"idx": 2572, "func": "Attributes for TestElement and TestElementProperty Must all be unique //$NON-NLS-1$ Also used by PropertyConverter classes $NON-NLS-1$ $NON-NLS-1$", "target": 0}
{"idx": 2573, "func": "GenAnnotation", "target": 0}
{"idx": 2574, "func": "secondary DatasetDomainAxisMap...", "target": 0}
{"idx": 2575, "func": "create full msg from headers and body", "target": 0}
{"idx": 2576, "func": "@see org.argouml.model.UmlHelper#getDestination(java.lang.Object)", "target": 0}
{"idx": 2577, "func": "an absolute URI needs no resolving", "target": 0}
{"idx": 2578, "func": "line 1800", "target": 0}
{"idx": 2579, "func": "ensure that parent dir of dest file exists!", "target": 0}
{"idx": 2580, "func": "Set up any required Proxy credentials", "target": 0}
{"idx": 2581, "func": "found match", "target": 0}
{"idx": 2582, "func": "Abstract elements do not necessarily require associations", "target": 0}
{"idx": 2583, "func": "The lower-cased schemes that will be used to identify archive URIs.", "target": 0}
{"idx": 2584, "func": "enable/disable html toolbar", "target": 0}
{"idx": 2585, "func": "check that the new bin doesn't overlap with any existing bin", "target": 0}
{"idx": 2586, "func": "notifyListeners(new ModelChangedEvent(ModelChangedEvent.REMOVED));", "target": 0}
{"idx": 2587, "func": "//if this is left out, bad things happen. like all build files break //on the first element encountered.", "target": 0}
{"idx": 2588, "func": "valid elements for an Action to contain", "target": 0}
{"idx": 2589, "func": "//try the current classloader", "target": 0}
{"idx": 2590, "func": "turn the password into an AES key", "target": 0}
{"idx": 2591, "func": "We want to retain insertion order, so LinkedHashMap is necessary", "target": 0}
{"idx": 2592, "func": "Only display the port number if it is meaningfully specified", "target": 0}
{"idx": 2593, "func": "//figure out which columns are needed", "target": 0}
{"idx": 2594, "func": "Parse and check specified constraint.", "target": 0}
{"idx": 2595, "func": "Only allow one load", "target": 0}
{"idx": 2596, "func": "Create an empty but initialized instance of a UML Parameter. @return an initialized UML Parameter instance. TODO: This needs an extra parameter to specify the model/extent where the new element should be created.", "target": 1}
{"idx": 2597, "func": "start region to handling exception (BulkAccessorException)", "target": 0}
{"idx": 2598, "func": "2600..26FF;", "target": 0}
{"idx": 2599, "func": "null evalname and we're finished base object for current eval", "target": 0}
{"idx": 2600, "func": "//things like sun.reflection, sun.misc, sun.net", "target": 0}
{"idx": 2601, "func": "If the active window isn't for the currently selected session then select the main window for the session.", "target": 0}
{"idx": 2602, "func": "// removeViewer((HtmlViewerSheet)evt.getInternalFrame());", "target": 0}
{"idx": 2603, "func": "Build a new class and add it to the current scope (could be a script / module / class)", "target": 0}
{"idx": 2604, "func": "(non-Javadoc) @see org.apache.jmeter.report.writers.PageSummary#pageStarted()", "target": 0}
{"idx": 2605, "func": "A recurring event", "target": 0}
{"idx": 2606, "func": "Add the initial model object to the contents. //", "target": 0}
{"idx": 2607, "func": "Recursively place all nodes pointed to by outgoing transitions. Because of the recursive algorithm multiple outgoing transitions will end up very lopsided because one entire subgraph will be done before dealing with the other transition(s). @param seen set of nodes seen so far @param node the node to collect neighbors for", "target": 0}
{"idx": 2608, "func": "it's either as converted as we can make it via above logic or it's not one of the types we convert, so just pass it out as-is without wrapping", "target": 0}
{"idx": 2609, "func": "return getProviderPackageName() + \".\" + getEditPluginClassName();", "target": 0}
{"idx": 2610, "func": "i18n[mysql.msgTableCreated=Table {0} created]", "target": 0}
{"idx": 2611, "func": "first off, make sure that we've got a command and a localPath ...", "target": 0}
{"idx": 2612, "func": "result.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);", "target": 0}
{"idx": 2613, "func": "Needed by Visualizer interface", "target": 0}
{"idx": 2614, "func": "//{{{ PluginOptions constructor", "target": 0}
{"idx": 2615, "func": "Ruby arrays default to holding 16 elements, so we create an ArrayList of the same size if we're not told otherwise", "target": 0}
{"idx": 2616, "func": "This runs the operation, and shows progress. (It appears to be a bad thing to fork this onto another thread.) //", "target": 1}
{"idx": 2617, "func": "To work properly with national charsets we have to use implementation of interface javax.activation.DataSource", "target": 0}
{"idx": 2618, "func": "do the same for the XmlElement of child", "target": 0}
{"idx": 2619, "func": "Otherwise, the destination node was implied by the FROM clause and the FROM clause processor will automatically add it in the right place.", "target": 0}
{"idx": 2620, "func": "//{{{ removeBufferChangeListener() method", "target": 0}
{"idx": 2621, "func": "Enable when implemented", "target": 0}
{"idx": 2622, "func": "End Method", "target": 0}
{"idx": 2623, "func": "an empirically derived rule: precision applies to significand length, irrespective of exponent", "target": 0}
{"idx": 2624, "func": "textAnchor", "target": 0}
{"idx": 2625, "func": "//Setters called by Ant", "target": 0}
{"idx": 2626, "func": "just unix", "target": 0}
{"idx": 2627, "func": "This is the case of {x,}", "target": 0}
{"idx": 2628, "func": "@author tstich: Added Lucene gui element here //builder.add(enableTextIndexingLabel, cc.xy(2, 13));", "target": 0}
{"idx": 2629, "func": "rangeGridlinePaint", "target": 0}
{"idx": 2630, "func": "TODO: WRONG - get interfaces from class", "target": 1}
{"idx": 2631, "func": "//if the length is not a multiple of 8 //we need to pad the last byte", "target": 0}
{"idx": 2632, "func": "//{{{ getSelectedText() method", "target": 0}
{"idx": 2633, "func": "Must create a ExceptionProcessor", "target": 0}
{"idx": 2634, "func": "//////////////////////////////////////////////////////////////issue resolutions", "target": 0}
{"idx": 2635, "func": "//++ For TestBean implementations only passed to file or script", "target": 0}
{"idx": 2636, "func": "Otherwise, use the property mapping.", "target": 0}
{"idx": 2637, "func": "xalan xsltc", "target": 0}
{"idx": 2638, "func": "There aren't any", "target": 0}
{"idx": 2639, "func": "the selected operation", "target": 0}
{"idx": 2640, "func": "validates a hostname, i.e.: mail.myhost.com mail.us.myhost.com 127.0.0.1", "target": 0}
{"idx": 2641, "func": "Some DBs give a negative number when they do not have a value for the scale. Assume that if the _scale is 0 or positive that the DB really means for that to be the scale, but if it is negative then we do not check.", "target": 0}
{"idx": 2642, "func": "//{{{ createRegexpSpanRule() method", "target": 0}
{"idx": 2643, "func": "copy all properties to the subfolder", "target": 0}
{"idx": 2644, "func": "//{{{ componentMoved() method", "target": 0}
{"idx": 2645, "func": "create a vector and add in the warnings for all the sections", "target": 0}
{"idx": 2646, "func": "don't increment i if you're removing something; otherwise, you'd skip the next item.", "target": 0}
{"idx": 2647, "func": "TODO: This needs to be managing undo on a per-project basis instead of using GEF's global undo manager", "target": 1}
{"idx": 2648, "func": "//sb.append(Model.getFacade().getName(c));", "target": 0}
{"idx": 2649, "func": "fall back to JRE bin directory, also catches JDK 1.0 and 1.1 where java.home points to the root of the JDK and Mac OS X where the whole directory layout is different from Sun's", "target": 0}
{"idx": 2650, "func": "//buffer.readLock();", "target": 0}
{"idx": 2651, "func": "add -command CheckOutProject to the commandline", "target": 0}
{"idx": 2652, "func": "average radius outlier radius", "target": 0}
{"idx": 2653, "func": "keywords which look like a stereotype (e.g. <<interface>>) have no owner", "target": 0}
{"idx": 2654, "func": "Now we know that this critic is still valid. What we need to figure out is if the corresponding to-do item is still valid. The to-do item is to be replaced if the name of some offender has changed that affects its description or if the contents of the list of offenders has changed. We check that by creating a new ToDoItem and then verifying that it looks exactly the same. This really creates a lot of to-do items that goes to waste.", "target": 1}
{"idx": 2655, "func": "prev and next buttons are on the right", "target": 0}
{"idx": 2656, "func": "TODO - why lower case? OK to use the default Locale?", "target": 1}
{"idx": 2657, "func": "treat it as a classname", "target": 0}
{"idx": 2658, "func": "//{{{ _createOutputStream() method", "target": 0}
{"idx": 2659, "func": "Show toolbar", "target": 0}
{"idx": 2660, "func": "raw file URL, just open directly", "target": 0}
{"idx": 2661, "func": "line 1477", "target": 0}
{"idx": 2662, "func": "@see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)", "target": 0}
{"idx": 2663, "func": "//////////////////////////////////////////////////////////////GraphModel implementation", "target": 0}
{"idx": 2664, "func": "update status information", "target": 0}
{"idx": 2665, "func": "line 815", "target": 0}
{"idx": 2666, "func": "//s_log.info(\"Not all selected objects where tables.\");", "target": 0}
{"idx": 2667, "func": "we don't let the user move the messages horizontally.", "target": 0}
{"idx": 2668, "func": "Transfer bytes from the ZIP file to the output file", "target": 0}
{"idx": 2669, "func": "//EcoreValidator", "target": 0}
{"idx": 2670, "func": "Note: in this case parent must have a class manager.", "target": 0}
{"idx": 2671, "func": "//{{{ log() method", "target": 0}
{"idx": 2672, "func": "init result view //createContextStackedBox();", "target": 0}
{"idx": 2673, "func": "Here we don't want to suspend the tx. If we do: 1) We might be caching query results that reflect uncommitted changes. No tx == no WL on cache node, so other threads can prematurely see those query results 2) No tx == immediate replication. More overhead, plus we spread issue #1 above around the cluster", "target": 0}
{"idx": 2674, "func": "Routines for TestSaveService", "target": 0}
{"idx": 2675, "func": "TODO: Because we get called on each and every change event, when the model is in a state of flux, we'll often get an InvalidElementException before we finish this collection. The only saving grace is that we're called SO many times that on the last time, things should be stable again and we'll get a good set of elements for the final update. We need a better mechanism.", "target": 1}
{"idx": 2676, "func": "Check for an equal sign: //", "target": 0}
{"idx": 2677, "func": "//{{{ doBackwardSearch() method", "target": 0}
{"idx": 2678, "func": "autoSort", "target": 0}
{"idx": 2679, "func": "just eat the exception", "target": 0}
{"idx": 2680, "func": "don't want to have two separators", "target": 0}
{"idx": 2681, "func": "This function only sets the color of the divider line (since that is the only visible part), and can be used to make the divider line invisible for the top region in a composite state. @see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)", "target": 0}
{"idx": 2682, "func": "//{{{ construct() method", "target": 0}
{"idx": 2683, "func": "(non-Javadoc) @see org.apache.jmeter.protocol.http.parser.HTMLParser#isReusable()", "target": 0}
{"idx": 2684, "func": "//nothings left, disable firing.", "target": 0}
{"idx": 2685, "func": "x1's flat bar", "target": 0}
{"idx": 2686, "func": "If the second character wasn't ':', in order to be valid, the remainder of the string must match IPv4Address, and we must have read exactly 6 16-bit groups.", "target": 0}
{"idx": 2687, "func": "//{{{ showPopupMenu() method", "target": 0}
{"idx": 2688, "func": "Not found -- we'll have to add it.", "target": 0}
{"idx": 2689, "func": "If the referenced EObjects aren't equal, the feature maps aren't equal. //", "target": 0}
{"idx": 2690, "func": "//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());", "target": 0}
{"idx": 2691, "func": "this is the final folder subFolder = addIMAPChildFolder(parent, info, subchild);", "target": 0}
{"idx": 2692, "func": "// registerColumnType( Types.VARCHAR, 16777215, \"mediumtext\" ); // registerColumnType( Types.VARCHAR, 65535, \"text\" );", "target": 0}
{"idx": 2693, "func": "we have a placeholder, spin forward till we find the end", "target": 0}
{"idx": 2694, "func": "//{{{ getName() method", "target": 0}
{"idx": 2695, "func": "(non-Javadoc) @see org.columba.ristretto.message.Message#setHeader(org.columba.ristretto.message.Header)", "target": 0}
{"idx": 2696, "func": "Not in UML2", "target": 0}
{"idx": 2697, "func": "line 1831", "target": 0}
{"idx": 2698, "func": "top panel", "target": 0}
{"idx": 2699, "func": "package-private for now", "target": 0}
{"idx": 2700, "func": "-unreserved", "target": 0}
{"idx": 2701, "func": "check for missing application on deploy & update", "target": 0}
{"idx": 2702, "func": "turn hibernate.c3p0. into c3p0., so c3p0 gets a chance to see all hibernate.c3p0.", "target": 1}
{"idx": 2703, "func": "Don't test changed element if it was deleted", "target": 0}
{"idx": 2704, "func": "IMAP Folders have no own lock ,but share the lock from the Root to ensure that only one operation can be processed simultanous", "target": 0}
{"idx": 2705, "func": "check for Informix - it has very \"special\" qualified names", "target": 0}
{"idx": 2706, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsMultipleOpenResults()", "target": 0}
{"idx": 2707, "func": "remember instance", "target": 0}
{"idx": 2708, "func": "download message", "target": 0}
{"idx": 2709, "func": "Write the body", "target": 0}
{"idx": 2710, "func": "call ThreadListener.threadFinished()", "target": 0}
{"idx": 2711, "func": "now remove series 2 from collection 1 to make them equal again", "target": 0}
{"idx": 2712, "func": "we finish all the \"removes\" first to take care of possible unique constraints and so that we can take better advantage of batching", "target": 0}
{"idx": 2713, "func": "In version 0.9.12, in response to several developer requests, I changed the 'data' attribute from 'private' to 'protected', so that others can make subclasses that work directly with the underlying data structure.", "target": 0}
{"idx": 2714, "func": "register interest on status bar information", "target": 0}
{"idx": 2715, "func": "TBLRC 11110", "target": 0}
{"idx": 2716, "func": "TODO: need to isolate the \"current\" thread from class creation", "target": 1}
{"idx": 2717, "func": "//{{{ menuDeselected() method", "target": 0}
{"idx": 2718, "func": "no dec digits after '.', error for strict", "target": 0}
{"idx": 2719, "func": "or its key changed", "target": 0}
{"idx": 2720, "func": "//{{{ JCheckBoxList constructor", "target": 0}
{"idx": 2721, "func": "update the min value", "target": 0}
{"idx": 2722, "func": "{} no offenders", "target": 0}
{"idx": 2723, "func": "The ocl toolkit does not like void return types", "target": 0}
{"idx": 2724, "func": "Configure the cache to use our TM", "target": 0}
{"idx": 2725, "func": "never updated the subtrahend if it is implied to be zero", "target": 0}
{"idx": 2726, "func": "if no classifier has been set, then entering a state is not useful, so the user's input has to be rejected.", "target": 0}
{"idx": 2727, "func": "Reinstate action notifications:", "target": 0}
{"idx": 2728, "func": "i18n[dataSetViewerEditableTablePanel.warning=Warning]", "target": 0}
{"idx": 2729, "func": "dummy1 --> dummy2 --> dummy3 (which has the Project's basedir as root).", "target": 0}
{"idx": 2730, "func": "add -command GetFile to the commandline", "target": 0}
{"idx": 2731, "func": "Implicit joins use theta style (WHERE pk = fk), explicit joins use JOIN (after from)", "target": 0}
{"idx": 2732, "func": "Replace the projectName in the file's absolute path to the viewName. This makes the root target of a checkout operation equal to: targetFolder + dirName", "target": 0}
{"idx": 2733, "func": "//Set the url for subsequent calls //This is to allow for load balancing to a server on the other side of the world", "target": 0}
{"idx": 2734, "func": "Test sending data as UTF-8, with values that will change when urlencoded", "target": 0}
{"idx": 2735, "func": "//{{{ Initialize Java 1.4-specific code", "target": 0}
{"idx": 2736, "func": "Find our Initial State", "target": 0}
{"idx": 2737, "func": "//{{{ nextTip() method", "target": 0}
{"idx": 2738, "func": "FieldHandler impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 2739, "func": "if this column is being limited, then truncate the data if needed (start with a quick check for the data being shorter than the limit, in which case we don't need to worry about it).", "target": 0}
{"idx": 2740, "func": "this is a hack, and really needs to be done better.", "target": 1}
{"idx": 2741, "func": "account ID", "target": 0}
{"idx": 2742, "func": "Check URL", "target": 0}
{"idx": 2743, "func": "Try returning it as an integer first", "target": 0}
{"idx": 2744, "func": "This is the default return value. //", "target": 0}
{"idx": 2745, "func": "select the node", "target": 0}
{"idx": 2746, "func": "changing the selection to the first row", "target": 0}
{"idx": 2747, "func": "TODO: should define a CompoundCritic", "target": 1}
{"idx": 2748, "func": "JPanel p2 = new JPanel(); p2.setLayout(new FlowLayout(FlowLayout.LEFT)); top.add(\"East\", p2); b_lyear = new JButton(\"<\"); b_lyear.addActionListener( this ); //b_lyear.setMargin(KiwiUtils.emptyInsets); b_lyear.setFocusPainted(false); b_lyear.setOpaque(false); //b_lyear.addActionListener(this); p2.add(b_lyear); l_year = new JLabel(); p2.add(l_year); b_ryear = new JButton(\">\"); b_ryear.addActionListener( this ); //b_ryear.setMargin(KiwiUtils.emptyInsets); b_ryear.setFocusPainted(false); b_ryear.setOpaque(false); //b_ryear.addActionListener(this); p2.add(b_ryear);", "target": 0}
{"idx": 2749, "func": "Need to copy the lists since we will be moving the elements:", "target": 0}
{"idx": 2750, "func": "at the top right bottom left bottom", "target": 0}
{"idx": 2751, "func": "Delete Button", "target": 0}
{"idx": 2752, "func": "inspect body and args", "target": 0}
{"idx": 2753, "func": "handle field declarations separately", "target": 0}
{"idx": 2754, "func": "//{{{ isExpanded() method", "target": 0}
{"idx": 2755, "func": "We can't blindly cache the genModel, since we need to support moving the GenPackage to another container, but the cast is expensive, so we'd like to do it no more than absolutely necessary. //", "target": 0}
{"idx": 2756, "func": "(non-Javadoc) @see org.apache.jmeter.report.writers.PageSummary#setFileName(java.lang.String)", "target": 0}
{"idx": 2757, "func": "//i18n[ColumnDetailsDialog.showButtonLabel=Show SQL]", "target": 0}
{"idx": 2758, "func": "//{{{ getGutter() method", "target": 0}
{"idx": 2759, "func": "arguments compilers always create IRubyObject[], but we want to use RubyArray.concat here; FIXME: as a result, this is NOT efficient, since it creates and then later unwraps an array", "target": 1}
{"idx": 2760, "func": "starting index", "target": 0}
{"idx": 2761, "func": "the directories to check", "target": 0}
{"idx": 2762, "func": "ENEBO: Lots of optz in 1.9 parser here", "target": 1}
{"idx": 2763, "func": "//{{{ goToLastVisibleLine() method", "target": 0}
{"idx": 2764, "func": "//there are places (in this file, and perhaps elsewhere, where it is assumed //that null is an acceptable parameter.", "target": 0}
{"idx": 2765, "func": "Tell frame model that frame is closing. If this frame hasn't been opened using FrameManager methods, FrameManager.close does nothing. //", "target": 0}
{"idx": 2766, "func": "Copy the current in the next", "target": 0}
{"idx": 2767, "func": "Entry tends to be ignored ...", "target": 0}
{"idx": 2768, "func": "//{{{ Split the text into lines", "target": 0}
{"idx": 2769, "func": "we're running on JRE 1.3.1 so this is the best we have...", "target": 0}
{"idx": 2770, "func": "//pad with nulls from the current last element up to the new index", "target": 0}
{"idx": 2771, "func": "0.0.0.0", "target": 0}
{"idx": 2772, "func": "remove any snapshot, not really for memory management purposes, but rather because it might now be stale, and there is no longer any EntityEntry to take precedence This is now handled by removeEntity() //session.getPersistenceContext().removeDatabaseSnapshot(key);", "target": 0}
{"idx": 2773, "func": "new selection", "target": 0}
{"idx": 2774, "func": "general grid size - if we don't set this property there won't be vertical scrollbars", "target": 0}
{"idx": 2775, "func": "i18n[codeCompletion.spWithParams=stored procedure with parameter info: {call mySP(<IN INTEGER tid>)}]", "target": 0}
{"idx": 2776, "func": "Create commands to create copies of the children. //", "target": 0}
{"idx": 2777, "func": "restore original tooltip dealys", "target": 0}
{"idx": 2778, "func": "For debugging purposes uncomment: org.w3c.dom.Comment s = doc.createComment(\"stack=\" + threadStack); buildElement.element.appendChild(s);", "target": 0}
{"idx": 2779, "func": "replicate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 2780, "func": "Called by the constructor to create the Figs at each end of the association. TODO: This is temporary during refactoring process. We should override setDestFigNode and setSourceFigNode and create the ends there. That will allow the same pattern to work for UML2 where we cannot assume the connection order. @param sourceAssociationEnd @param destAssociationEnd @param settings", "target": 1}
{"idx": 2781, "func": "Append character to buffer if needed", "target": 0}
{"idx": 2782, "func": "now when the default group is mapped to, it shouldn't increase the group count...", "target": 0}
{"idx": 2783, "func": "The uber-rule here is that we need to include subclass joins if the FromElement is in any way dereferenced by a property from the subclass table; otherwise we end up with column references qualified by a non-existent table reference in the resulting SQL...", "target": 0}
{"idx": 2784, "func": "Needs to be done later because when reInitList is called, the text componetes model is not yet up to date. E.g. the last character is missing.", "target": 0}
{"idx": 2785, "func": "JDK1.5 \"@ident\" annotation \"@keyword\" gets returned as two tokens \"@\" and \"keyword\"", "target": 0}
{"idx": 2786, "func": "//name += \" in \" + dName;", "target": 0}
{"idx": 2787, "func": "Because the content is only read the file will not be damaged. I tested with JPG, ZIP and PDF as binary files.", "target": 0}
{"idx": 2788, "func": "the anchor point is typically the point where the mouse last clicked - the crosshairs will be driven off this point...", "target": 0}
{"idx": 2789, "func": "//Ecore2XMLFactoryImpl", "target": 0}
{"idx": 2790, "func": "Set the input to the widget. //", "target": 0}
{"idx": 2791, "func": "Supply any defaulted attributes.", "target": 0}
{"idx": 2792, "func": "line 604", "target": 0}
{"idx": 2793, "func": "Get the innermost containing Model of a ModelElement. <p> If no containing Model can be found, the outermost containing ModelElement is returned (which could be the original element itself if it has no owner). <p> This method is intended to return the innermost containing Model, but there are circumstances where one may really expect the outermost containing Model or root package to be returned (e.g. where it's being used to test if two elements are from disjoint namespace hierarchies). Hence, there are two separate methods with different semantics. The method {@link #getRoot(Object)} returns the outermost containing object. <p> TODO: Note also that some code uses org.argouml.kernel.Project#getRoot() to navigate down from the top instead of up from the bottom. We need to use a consistent algorithm for this. - tfm 20070724 @param handle to the model element. @return model for the model element.", "target": 1}
{"idx": 2794, "func": "remove the package prefix", "target": 0}
{"idx": 2795, "func": "will point at the character after 0 to 3 octal digits", "target": 0}
{"idx": 2796, "func": "add selection listener", "target": 0}
{"idx": 2797, "func": "//{{{ setBounds() method", "target": 0}
{"idx": 2798, "func": "//{{{ SyntaxStyle constructor", "target": 0}
{"idx": 2799, "func": "register interest on folder events", "target": 0}
{"idx": 2800, "func": "new InitProfileSubsystem().init();", "target": 0}
{"idx": 2801, "func": "///////////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 2802, "func": "// final Resources rsrc = _session.getApplication().getResources();", "target": 0}
{"idx": 2803, "func": "No editing before startPos", "target": 0}
{"idx": 2804, "func": "Clean up the temporary container annotations for holding map entry classes until they are for sure needed. //", "target": 0}
{"idx": 2805, "func": "//there _was_ a select clause", "target": 0}
{"idx": 2806, "func": "Version information:", "target": 0}
{"idx": 2807, "func": "Show the secondary descriptor, if there is one. Some item types have one, some don't.", "target": 0}
{"idx": 2808, "func": "Add fix for Deadlocks, see: See https://issues.apache.org/bugzilla/show_bug.cgi?id=48350", "target": 1}
{"idx": 2809, "func": "0 | 1 --+-- 2 | 3", "target": 0}
{"idx": 2810, "func": "This should not be needed if the above is correct, but let's be sure:", "target": 0}
{"idx": 2811, "func": "Attribute setters.", "target": 0}
{"idx": 2812, "func": "No bit math to store level since we know level is zero for this case", "target": 0}
{"idx": 2813, "func": "case ISA_SLASH: state = INIT; return SQLTokenContext.MINUS;", "target": 0}
{"idx": 2814, "func": "20030831, karlpeder Also location is restored", "target": 0}
{"idx": 2815, "func": "The name of the variable", "target": 0}
{"idx": 2816, "func": "Work out the padding each side, depending on whether the stereotype is displayed and set bounds accordingly", "target": 0}
{"idx": 2817, "func": "Catch the mismatch and continue to try the next Note: this is innefficient, should have an isAssignableFrom() that doesn't throw", "target": 1}
{"idx": 2818, "func": "//{{{ setHyperSearch() method", "target": 0}
{"idx": 2819, "func": "Entry entry = new Entry(eObject, CONTAINING_FEATURE); return (EStructuralFeature)map.get(entry);", "target": 0}
{"idx": 2820, "func": "For a iterator call we should provide: (a) the variables (b) the expression to be evaluated on each step (c) the lambda-evaluator to evaluate it", "target": 0}
{"idx": 2821, "func": "the default allocator", "target": 0}
{"idx": 2822, "func": "test for 10 consecutives transform", "target": 0}
{"idx": 2823, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsResultSetType(int)", "target": 0}
{"idx": 2824, "func": "i18n[DriverInternalFrame.error.illegalvalue=Illegal value of {0} passed for Maintenance type]", "target": 0}
{"idx": 2825, "func": "//add the files from the default fileset:", "target": 0}
{"idx": 2826, "func": "SMTP provider", "target": 0}
{"idx": 2827, "func": "Pass 2: redistribute free space", "target": 0}
{"idx": 2828, "func": "//-JMX file attribute names", "target": 0}
{"idx": 2829, "func": "line 1097", "target": 0}
{"idx": 2830, "func": "@see org.argouml.model.ModelImplementation#getUmlHelper()", "target": 0}
{"idx": 2831, "func": "The path may be a reference to an alias defined in the parent query.", "target": 0}
{"idx": 2832, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#reset()", "target": 0}
{"idx": 2833, "func": "//hh getInteriorGap();", "target": 0}
{"idx": 2834, "func": "can't get anything yet...just an exception", "target": 0}
{"idx": 2835, "func": "Translate periods into path separators, add .class to the name, create the File object and add it to the Hashtable.", "target": 0}
{"idx": 2836, "func": "Don't hold the JBC node lock throughout the tx, as that prevents updates Add a zero (or low) timeout option so we don't block waiting for tx's that did a put to commit", "target": 0}
{"idx": 2837, "func": "TODO: for now, we use a faithful reimplementation of MRI's algorithm, but should use UTF8Encoding facilities from Joni, once it starts prefroming UTF-8 content validation.", "target": 1}
{"idx": 2838, "func": "//anything else", "target": 0}
{"idx": 2839, "func": "move as a child of the next sibling", "target": 0}
{"idx": 2840, "func": "yeah right...we don't have an operation (and thus no", "target": 0}
{"idx": 2841, "func": "//{{{ handleMessage() method", "target": 0}
{"idx": 2842, "func": "copy the original stack trace", "target": 0}
{"idx": 2843, "func": "top-level structure", "target": 0}
{"idx": 2844, "func": "continue on outer while loop to get another available slot", "target": 0}
{"idx": 2845, "func": "If there is no Ecore representation or it's invalid, e.g., when - is used to omit a specification, then just use the Java representation. //", "target": 0}
{"idx": 2846, "func": "//swallow, the transaction was finished", "target": 0}
{"idx": 2847, "func": "get current list selection", "target": 0}
{"idx": 2848, "func": "//The event source is the owner stub state", "target": 0}
{"idx": 2849, "func": "//TODO: better to degrade to lazy=\"false\" if uninstrumented", "target": 1}
{"idx": 2850, "func": "//a web.xml file was found. See if it is a duplicate or not", "target": 0}
{"idx": 2851, "func": "line 808", "target": 0}
{"idx": 2852, "func": "end class StateDiagramGraphModel", "target": 0}
{"idx": 2853, "func": "contentPane.remove(mediator.getContentPane());", "target": 0}
{"idx": 2854, "func": "find backwards", "target": 0}
{"idx": 2855, "func": "create static init, for a monitor object", "target": 0}
{"idx": 2856, "func": "Now collect the results into the HTTPSampleResult:", "target": 0}
{"idx": 2857, "func": "Global errors", "target": 0}
{"idx": 2858, "func": "//lists, arrays //sets, maps, bags", "target": 0}
{"idx": 2859, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsTransactions()", "target": 0}
{"idx": 2860, "func": "this is called from SettingsFactory irregardless; trivial to simply disregard", "target": 0}
{"idx": 2861, "func": "//Ecore2XMLPackage", "target": 0}
{"idx": 2862, "func": "inlined: bsW(1, 1);", "target": 0}
{"idx": 2863, "func": "TODO: Check if Mimer SQL cannot handle the way DB2 does", "target": 1}
{"idx": 2864, "func": "@bgen(jjtree) #FormalComment( retainComments)", "target": 0}
{"idx": 2865, "func": "Saves current position to avoid zero-width repeats.", "target": 0}
{"idx": 2866, "func": "let user enter T, t, Y, y, or 1 for true, and F, f, N, n, or 0 for false", "target": 0}
{"idx": 2867, "func": "create trigger sql for column that is to be auto-incremented", "target": 0}
{"idx": 2868, "func": "//{{{ getLineInfosForPhysicalLine() method", "target": 0}
{"idx": 2869, "func": "ignore leading weekday name (e.g. \"Mon,\"), since this seems to give problems during parsing", "target": 0}
{"idx": 2870, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ITableInfo#getImportedKeys()", "target": 0}
{"idx": 2871, "func": "Go through the commands of the list. //", "target": 0}
{"idx": 2872, "func": "stroke sequence", "target": 0}
{"idx": 2873, "func": "vertical pass", "target": 0}
{"idx": 2874, "func": "previous data point...", "target": 0}
{"idx": 2875, "func": "do nothing;", "target": 0}
{"idx": 2876, "func": "CheckStyle:VisibilityModifier OFF - bc", "target": 0}
{"idx": 2877, "func": "//Ignore manifest entries. They're bound to cause conflicts between //files that are being merged. User should supply their own //manifest file when doing the merge.", "target": 0}
{"idx": 2878, "func": "i18n[editWhereColsPanel.useColumns=Use Columns]", "target": 0}
{"idx": 2879, "func": "TODO: This should probably throw an exception if it gets invalid arguments rather than just returning null", "target": 1}
{"idx": 2880, "func": "Although not represented in the OCL (or our Java), the English text of WFR #4 of Section 2.10.3.4 in the UML 1.4 spec is more restrictive - \"[4] A Collaboration may only contain ClassifierRoles and AssociationRoles, the Generalizations and the Constraints between them, and Actions used in the Collaboration's Interactions.\"", "target": 0}
{"idx": 2881, "func": "todo : throw exception? maybe warn if not the same?", "target": 1}
{"idx": 2882, "func": "int sqlstate = sqlca.getSqlState();", "target": 0}
{"idx": 2883, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getJDBCMetaData()", "target": 0}
{"idx": 2884, "func": "framed invokers will have Ruby frames associated with them", "target": 0}
{"idx": 2885, "func": "?? }", "target": 0}
{"idx": 2886, "func": "//otherwise recreate the mapping between the collection and its key", "target": 0}
{"idx": 2887, "func": "disabled Kill button, because feature is not supported", "target": 0}
{"idx": 2888, "func": "if entry is an empty string, skip it", "target": 0}
{"idx": 2889, "func": "log.info(\"classname:: \" + strClassName);", "target": 0}
{"idx": 2890, "func": "add a subtitle giving the data source", "target": 0}
{"idx": 2891, "func": "range_each_func(range, step_i, b, e, args);", "target": 0}
{"idx": 2892, "func": "or self.allConnections->forAll( r | self.namespace.allContents->excludes (r.participant) implies self.namespace.clientDependency->exists (d | d.oclIsTypeOf(Permission) and d.stereotype.name = 'access' and", "target": 0}
{"idx": 2893, "func": "//information about lazy properties of this class", "target": 0}
{"idx": 2894, "func": "Copy i18n files to i18n downloads directory", "target": 0}
{"idx": 2895, "func": "Constructors of various flavors follow.", "target": 0}
{"idx": 2896, "func": "use heavy-weight popups to ensure they are always on top", "target": 0}
{"idx": 2897, "func": "Draw the graph", "target": 0}
{"idx": 2898, "func": "getContentPane().remove(this.toolbar);", "target": 0}
{"idx": 2899, "func": "Set the tooltip string:", "target": 0}
{"idx": 2900, "func": "read until the end section is found, discard generated content", "target": 0}
{"idx": 2901, "func": "ADD or ADD_CONFIGURED", "target": 0}
{"idx": 2902, "func": "Called by JMeter ListenToTest if remoteStop is true", "target": 0}
{"idx": 2903, "func": "EMFEdit generation //", "target": 0}
{"idx": 2904, "func": "Check post body from the result query string", "target": 0}
{"idx": 2905, "func": "simplest case - setAttribute expects String", "target": 0}
{"idx": 2906, "func": "TODO (@author fdietz): this should be changed into a \"real\" window", "target": 0}
{"idx": 2907, "func": "disable commenting out", "target": 0}
{"idx": 2908, "func": "start of interval", "target": 0}
{"idx": 2909, "func": "NumberFormatException or ArrayOutOfBondsException could happen here", "target": 0}
{"idx": 2910, "func": "Add all the headers from the HeaderManager", "target": 0}
{"idx": 2911, "func": "If the param is typed check assignability", "target": 0}
{"idx": 2912, "func": "Root folder cache", "target": 0}
{"idx": 2913, "func": "//{{{ reset() method", "target": 0}
{"idx": 2914, "func": "TODO: Not exact, but close", "target": 0}
{"idx": 2915, "func": "20030919, karlpeder Added handling of html messages", "target": 0}
{"idx": 2916, "func": "//The target DBMS, could be Mimer SQL Engine, Oracle, ... //This is optional. If you don't want to give out this info, please enter \"N/A\"", "target": 0}
{"idx": 2917, "func": "end class CrCrossNamespaceAssoc", "target": 0}
{"idx": 2918, "func": "setDone(true);", "target": 0}
{"idx": 2919, "func": "remove directories which don't contain a plugin", "target": 0}
{"idx": 2920, "func": "Add last point @ y=0 for fillPath and close path", "target": 0}
{"idx": 2921, "func": "// get selected contact/group card", "target": 0}
{"idx": 2922, "func": "retrieve new selection", "target": 0}
{"idx": 2923, "func": "not supported for arbitriary filesets", "target": 0}
{"idx": 2924, "func": "Put the statemachine in the namespace of the class:", "target": 0}
{"idx": 2925, "func": "check if there is just whitespace between position and start of the comment", "target": 0}
{"idx": 2926, "func": "convert file text into a string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.", "target": 0}
{"idx": 2927, "func": "throw new NotImplementedException( \"This is not a UML2 element\"); //$NON-NLS-1$", "target": 0}
{"idx": 2928, "func": "the current join represents the join between a many-to-many association table and its \"target\" table. Here we need to apply any additional filters defined specifically on the many-to-many", "target": 0}
{"idx": 2929, "func": "augment x.", "target": 0}
{"idx": 2930, "func": "line 579", "target": 0}
{"idx": 2931, "func": "//loop through all definitions", "target": 0}
{"idx": 2932, "func": "TODO: move this to components -- the only reason why it's in core is because it's used as a guinea pig by a couple of tests.", "target": 1}
{"idx": 2933, "func": "$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$", "target": 0}
{"idx": 2934, "func": "map", "target": 0}
{"idx": 2935, "func": "notify all listeners that have a new search result ensure this is called in the EDT", "target": 0}
{"idx": 2936, "func": "Iterate through the URLs and download each image:", "target": 0}
{"idx": 2937, "func": "The attribute 'targetScope' of an AssociationEnd in UML1.x is no longer supported in UML2.x", "target": 0}
{"idx": 2938, "func": "false);", "target": 0}
{"idx": 2939, "func": "//{{{ getMode() method", "target": 0}
{"idx": 2940, "func": "And we need to set it on any cached GenModels holding the special Ecore and XML packages. //", "target": 0}
{"idx": 2941, "func": "//{{{ adjustDockingAreasToFit() method", "target": 0}
{"idx": 2942, "func": "@see org.argouml.uml.ui.UMLUserInterfaceComponent#targetReasserted()", "target": 0}
{"idx": 2943, "func": "List of types that are known to be binary", "target": 0}
{"idx": 2944, "func": "//////////////////////////////////////////////////////////////Instance variables", "target": 0}
{"idx": 2945, "func": "always false or nil", "target": 0}
{"idx": 2946, "func": "getActionSubactivityState()", "target": 0}
{"idx": 2947, "func": "this assumes schema support, which is present in 1.8.0 and later...", "target": 0}
{"idx": 2948, "func": "TODO: TabToDo should listen for an event that this fires so that we can decouple from the ProjectBrowser. - tfm", "target": 1}
{"idx": 2949, "func": "i18n[AboutBoxDialog.error.creditsfile=Error reading credits file]", "target": 0}
{"idx": 2950, "func": "Execute Ruby statements.", "target": 0}
{"idx": 2951, "func": "Interpreter has no input stream, use eval() only Interpreter has no input stream, use eval() only Interpreter has a user, print prompts, etc.", "target": 0}
{"idx": 2952, "func": "Defaults to continue", "target": 0}
{"idx": 2953, "func": "Menuitems use this to display a string in the statusbar", "target": 0}
{"idx": 2954, "func": "If the base is already set to this assoc, then do not set it again. This check is needed, otherwise the setbase() below gives an exception.", "target": 0}
{"idx": 2955, "func": "specifies valid elements for an AssociationRole to contain", "target": 0}
{"idx": 2956, "func": "CRC compressed length uncompressed length", "target": 0}
{"idx": 2957, "func": "drawVolume", "target": 0}
{"idx": 2958, "func": "fill the background", "target": 0}
{"idx": 2959, "func": "------------- MouseListener implementation ---------------", "target": 0}
{"idx": 2960, "func": "try an array containing a single Number and a NaN", "target": 0}
{"idx": 2961, "func": "retControl.returnPoint is the Node of the return statement", "target": 0}
{"idx": 2962, "func": "//}}} //{{{ Paint bracket scope", "target": 0}
{"idx": 2963, "func": "register interest on configuratin changes", "target": 0}
{"idx": 2964, "func": "logically consecutive segments non-physically consecutive (with non-contained time in between)", "target": 0}
{"idx": 2965, "func": "Use a transaction to avoid the performance penalty (3x) of MDR's autocommit mode", "target": 0}
{"idx": 2966, "func": "alter type clauses", "target": 0}
{"idx": 2967, "func": "i18n[codeCompletion.PrefsTabTitleHint=Configure Code Completion]", "target": 0}
{"idx": 2968, "func": "i18n[xmlRefomatter.noXml=The data does not contain any XML tags. No reformatting done.]", "target": 0}
{"idx": 2969, "func": "add toolbar button between last button and cancel button", "target": 0}
{"idx": 2970, "func": "get current context", "target": 0}
{"idx": 2971, "func": "public IHeaderItemList[] getHeaderItemLists() { return headerItemList; }", "target": 0}
{"idx": 2972, "func": "For an archive URI, check for the path in the archive. //", "target": 0}
{"idx": 2973, "func": "validate base timeline exclusions added as timeline's esceptions", "target": 0}
{"idx": 2974, "func": "this implementation is supposed to tolerate incorrect unsaved-value mappings, for the purpose of backward-compatibility", "target": 0}
{"idx": 2975, "func": "TODO : ?? use an other CheckBox (defines in Argo and extends JCheckBox )", "target": 1}
{"idx": 2976, "func": "the reverse transformed value will be in the start of the next non-excluded and non-exception segment", "target": 0}
{"idx": 2977, "func": "Get catch block", "target": 0}
{"idx": 2978, "func": "Create an event for the other end of the association", "target": 0}
{"idx": 2979, "func": "tests, if the listPart substracted", "target": 0}
{"idx": 2980, "func": "horizontal light gray column separator line", "target": 0}
{"idx": 2981, "func": "classpath attributes go into a vector", "target": 0}
{"idx": 2982, "func": "can happen if the user presses C+w twice real quick and the buffer has unsaved changes", "target": 0}
{"idx": 2983, "func": "\"current\" means the reference that was found during flush()", "target": 0}
{"idx": 2984, "func": "//$NON-NLS-1$", "target": 0}
{"idx": 2985, "func": "This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:) into individual whenNodes. The primary reason for this is to ensure lazy evaluation of the arguments (when foo,bar,gar:) to prevent side-effects. In the old code this was done using nested when statements, which was awful for interpreter and compilation. Notes: This has semantic equivalence but will not be lexically equivalent. Compiler needs to detect same bodies to simplify bytecode generated.", "target": 0}
{"idx": 2986, "func": "try to get editing domain from workbench part", "target": 0}
{"idx": 2987, "func": "(non-Javadoc) @see org.columba.mail.folder.IMailbox#getMimePartBodyStream(java.lang.Object, java.lang.Integer[])", "target": 0}
{"idx": 2988, "func": "throw in NetWare volume names", "target": 0}
{"idx": 2989, "func": "baseItemLabelFont", "target": 0}
{"idx": 2990, "func": "//{{{ setPosition() method", "target": 0}
{"idx": 2991, "func": "Reverse the test. //", "target": 0}
{"idx": 2992, "func": "user pressed enter when the vfs table or file name field has focus, with nothing selected.", "target": 0}
{"idx": 2993, "func": "no need to do this for macros!", "target": 0}
{"idx": 2994, "func": "line 598", "target": 0}
{"idx": 2995, "func": "i18n[codeCompletion.PrefsTabTitle=Code Completion]", "target": 0}
{"idx": 2996, "func": "//preserve order-encountered using a list; enforce set logic manually:", "target": 0}
{"idx": 2997, "func": "All rules passed, so enable the buttons.", "target": 0}
{"idx": 2998, "func": "TODO: Do we really need to do this? Carried over from old behavior", "target": 1}
{"idx": 2999, "func": "now it is trickier to determine if the month or year is first", "target": 0}
{"idx": 3000, "func": "toggle marker on caret line", "target": 0}
{"idx": 3001, "func": "substitutes into values by side-effect", "target": 0}
{"idx": 3002, "func": "we need at least two points to draw something", "target": 0}
{"idx": 3003, "func": "Leave header as is headerBuf.append(conn.getHeaderField(0).substring(0, 8)); headerBuf.append(\" \"); headerBuf.append(conn.getResponseCode()); headerBuf.append(\" \"); headerBuf.append(conn.getResponseMessage()); //$NON-NLS-1$", "target": 0}
{"idx": 3004, "func": "TODO : we really need to be able to deal with component paths here also; this is difficult because the hql-sql grammar expects all those node types to be FromReferenceNodes. One potential fix here would be to convert the IntoClause to just use a FromClause/FromElement combo (as a child of the InsertStatement) and move all this logic into the InsertStatement. That's probably the easiest approach (read: least amount of changes to the grammar and code), but just doesn't feel right as then an insert would contain 2 from-clauses", "target": 1}
{"idx": 3005, "func": "Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //", "target": 0}
{"idx": 3006, "func": "HACK We ask the VM to create an instance by voluntarily providing illegal arguments to force the VM to run the class' static initializer, while at the same time not running a valid constructor.", "target": 1}
{"idx": 3007, "func": "The property name to be used to look up the display string", "target": 0}
{"idx": 3008, "func": "disable logging for the startup", "target": 0}
{"idx": 3009, "func": "assert that the model element that depends on the profile is consistent", "target": 0}
{"idx": 3010, "func": "//private ImageIcon runningIcon = JMeterUtils.getImage(\"thread.enabled.gif\");", "target": 0}
{"idx": 3011, "func": "?LINE_WIDTH?", "target": 0}
{"idx": 3012, "func": "Are we lexing Ruby 1.8 or 1.9+ syntax", "target": 0}
{"idx": 3013, "func": "List of variable names to be saved in JTL files", "target": 0}
{"idx": 3014, "func": "Assert that the copy isn't modified when the source changes", "target": 0}
{"idx": 3015, "func": "autoWidthFactor", "target": 0}
{"idx": 3016, "func": "Nothing to do - we get all events automatically", "target": 0}
{"idx": 3017, "func": "Surely this is always null in the constructor?", "target": 1}
{"idx": 3018, "func": "Now lets search", "target": 0}
{"idx": 3019, "func": "Create a different client to bind to the same supplier", "target": 0}
{"idx": 3020, "func": "Reply the ToDoItem that the designer should see iff predicate() returns true. By default it just fills in the fields of the ToDoItem from accessor methods of this Critic. Critic Subclasses may override this method or the accessor methods to add computed fields to the ToDoItem. TODO: Critic's may want to add new fields to a ToDoItem to make stillValid more efficent. @see Critic#critique @param dm the offender @param dsgr the designer @return ToDoItem", "target": 1}
{"idx": 3021, "func": "check if the node is not null", "target": 0}
{"idx": 3022, "func": "line 1048", "target": 0}
{"idx": 3023, "func": "(non-Javadoc) @see org.columba.core.filter.IFilterCriteria#getCriteria()", "target": 0}
{"idx": 3024, "func": "In Ant 1.1, <chmod dir=\"foo\" /> means, change the permissions of directory foo, not anything inside of it. This is the case the second branch of the if statement below catches for backwards compatibility.", "target": 0}
{"idx": 3025, "func": "Listen also to the association, of which the link is an instantiation, since we want to update the rendering when the association name changes. @see org.argouml.uml.diagram.ui.FigEdgeModelElement#updateListeners( java.lang.Object, java.lang.Object)", "target": 0}
{"idx": 3026, "func": "Ensure we have a new interpreter for each test. Previous we were using the same interpreter which caused problems as soon as one test failed.", "target": 0}
{"idx": 3027, "func": "Get the values and do the comparison", "target": 0}
{"idx": 3028, "func": "attachment controller doesn't support copy actions", "target": 0}
{"idx": 3029, "func": "////////////////////////////////////////////////////////////////////////test inc methods //////////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 3030, "func": "@see org.tigris.gef.graph.GraphListener#graphChanged(org.tigris.gef.graph.GraphEvent)", "target": 0}
{"idx": 3031, "func": "for regression testing against output from the old parser... found it easiest to simply reorder the FromElements here into ascending order in terms of injecting them into the resulting sql ast in orders relative to those expected by the old parser; this is definitely another of those \"only needed for regression purposes\". The SyntheticAndFactory, then, simply injects them as it encounters them.", "target": 0}
{"idx": 3032, "func": "refname has already been set to the default (if present)", "target": 0}
{"idx": 3033, "func": "in the next zoomPoint.x and y replace by e.x and y for now. this helps to handle the mouse events and besides, those values are unused AFAIK.", "target": 0}
{"idx": 3034, "func": "//Object class Changed update it.", "target": 0}
{"idx": 3035, "func": "releases all the Edge objects used by this CodeWriter", "target": 0}
{"idx": 3036, "func": "If we have children to remove for this feature, create a command for it. //", "target": 0}
{"idx": 3037, "func": "upright bar", "target": 0}
{"idx": 3038, "func": "shape visible =", "target": 0}
{"idx": 3039, "func": "//{{{ getCachePath() method", "target": 0}
{"idx": 3040, "func": "extra args for rest", "target": 0}
{"idx": 3041, "func": "//IObjectTreeAPI api = m_session.getObjectTreeAPI(m_plugin);", "target": 0}
{"idx": 3042, "func": "save package module as ivar in parent, and add method to parent so we don't have to come back here.", "target": 0}
{"idx": 3043, "func": "allow everything else", "target": 0}
{"idx": 3044, "func": "TODO: Maybe the exception strings should be internationalized", "target": 1}
{"idx": 3045, "func": "again, both should be FromElements", "target": 0}
{"idx": 3046, "func": "check to what is in the classname", "target": 0}
{"idx": 3047, "func": "//{{{ markTokens() method", "target": 0}
{"idx": 3048, "func": "//i18n[SyntaxPlugin.find=find]", "target": 0}
{"idx": 3049, "func": "Define a class loader that will look up the class in the bundle, and if it doesn't find it there, will look in the parent. //", "target": 0}
{"idx": 3050, "func": "we keep the first non-null frc we get, since sometimes we get invalid ones on subsequent pages on Windows", "target": 0}
{"idx": 3051, "func": "TODO: Move an empty implementation to FigGroup in GEF", "target": 1}
{"idx": 3052, "func": "Increment", "target": 0}
{"idx": 3053, "func": "Finds all classes that extend the classes in the listSuperClasses ArrayList, searching in the listAllClasses ArrayList. @param superClasses the base classes to find subclasses for @param listAllClasses the collection of classes to search in @param innerClasses indicate whether to include inner classes in the search @return ArrayList of the subclasses", "target": 0}
{"idx": 3054, "func": "Wildcards are only allowed in type arguments. //", "target": 0}
{"idx": 3055, "func": "Simulate a release of the mouse:", "target": 0}
{"idx": 3056, "func": "Dump aliases.", "target": 0}
{"idx": 3057, "func": "classic parser does not support bulk manipulation statements", "target": 0}
{"idx": 3058, "func": "(non-Javadoc) @see org.columba.core.gui.frame.focus.FocusOwner#selectAll()", "target": 0}
{"idx": 3059, "func": "(non-Javadoc) @see org.apache.jmeter.visualizers.request.RequestView#getLabel()", "target": 0}
{"idx": 3060, "func": "for reading CSV files", "target": 0}
{"idx": 3061, "func": "...round to that digit", "target": 0}
{"idx": 3062, "func": "//{{{ getElement() method", "target": 0}
{"idx": 3063, "func": "Check the cache", "target": 0}
{"idx": 3064, "func": "not intended to be called directly by users (private) OLD TODO from Ruby code: This should be implemented in JavaClass.java, where we can check for reserved Ruby names, conflicting methods, etc.", "target": 1}
{"idx": 3065, "func": "//{{{ _addKeyBinding() method", "target": 0}
{"idx": 3066, "func": "Implements JMeterGUIComponent.createTestElement()", "target": 0}
{"idx": 3067, "func": "nocompil", "target": 0}
{"idx": 3068, "func": "SSS FIXME: Does int suffice, or do we need long?", "target": 1}
{"idx": 3069, "func": "Now paint a gradient UNDER the ghosted JLabel text (but not under the icon if any).", "target": 0}
{"idx": 3070, "func": "CheckStyle:VisibilityModifier OFF - bc CheckStyle:ConstantNameCheck OFF - bc", "target": 0}
{"idx": 3071, "func": "-> get source reference of message when replying this is the original sender's message you selected and replied to", "target": 0}
{"idx": 3072, "func": "walk all superclasses aggregating interfaces", "target": 0}
{"idx": 3073, "func": "for Thread::start, which does not call the subclass's initialize", "target": 0}
{"idx": 3074, "func": "handle redos by restarting the block", "target": 0}
{"idx": 3075, "func": "// optimizer = getFactory().getSettings().getBytecodeProvider().getReflectionOptimizer( // mappedClass, getterNames, setterNames, propTypes // );", "target": 0}
{"idx": 3076, "func": "If dm is the top state of the statemachine, then it is not supposed to have outgoing transitions.", "target": 0}
{"idx": 3077, "func": "Set the variable in namespace according to localVar flag", "target": 0}
{"idx": 3078, "func": "embedded composite ids ( alias.idname1, alias.idname2 )", "target": 0}
{"idx": 3079, "func": "Get the post data using the content encoding of the request", "target": 0}
{"idx": 3080, "func": "//{{{ bufferSaved() method", "target": 0}
{"idx": 3081, "func": "Highest reserved id", "target": 0}
{"idx": 3082, "func": "file is a mdl file get model name", "target": 0}
{"idx": 3083, "func": "@see javax.swing.tree.TreeModel#valueForPathChanged(javax.swing.tree.TreePath, java.lang.Object)", "target": 0}
{"idx": 3084, "func": "i18n[dataTypeTime.typeTime=Time (SQL type 92)]", "target": 0}
{"idx": 3085, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsANSI92EntryLevelSQL()", "target": 0}
{"idx": 3086, "func": "get a random number between 0 and the number of files", "target": 0}
{"idx": 3087, "func": "TODO: JavaDoc @author Colin Bell", "target": 1}
{"idx": 3088, "func": "Get variables declared in this namespace.", "target": 0}
{"idx": 3089, "func": "mustRefresh = true;", "target": 0}
{"idx": 3090, "func": "field access", "target": 0}
{"idx": 3091, "func": "Are we processing a file sequence?", "target": 0}
{"idx": 3092, "func": "Map header names to set() methods", "target": 0}
{"idx": 3093, "func": "Thin bar to show current used", "target": 0}
{"idx": 3094, "func": "Cannot resolve it, so skip it.", "target": 0}
{"idx": 3095, "func": "define allocation rectangle (startY is used to compensate for different start point if printing shall not start from the top)", "target": 0}
{"idx": 3096, "func": "delimiter found -> recursively create all necessary folders to create -> the final folder", "target": 0}
{"idx": 3097, "func": "FIXME: If true array is common enough we should pre-allocate and stick somewhere", "target": 1}
{"idx": 3098, "func": "Called by XPathExtractorGui", "target": 0}
{"idx": 3099, "func": "Module class methods", "target": 0}
{"idx": 3100, "func": "0A00..0A7F;", "target": 0}
{"idx": 3101, "func": "Checks whether the string contains any more segments after the one that starts at position i.", "target": 0}
{"idx": 3102, "func": "avoid GEF calcDrawingArea bug when nothing in a diagram.", "target": 0}
{"idx": 3103, "func": "(non-Javadoc) @see org.columba.api.command.Command#updateGUI()", "target": 0}
{"idx": 3104, "func": "overriding target from imported buildfile is allowed", "target": 0}
{"idx": 3105, "func": "Now get its text", "target": 0}
{"idx": 3106, "func": "forceRepaintShadow();", "target": 0}
{"idx": 3107, "func": "Parse the attribute(s) and text of this node, adding properties for each. if the \"path\" attribute is specified, then return the created path which will be passed to the children of this node.", "target": 0}
{"idx": 3108, "func": "not specified", "target": 0}
{"idx": 3109, "func": "There is no need to test if classes is empty because the shouldBeEnabled mechanism blanks out the possibility to choose this alternative in this case.", "target": 0}
{"idx": 3110, "func": "astore 5 store exception", "target": 0}
{"idx": 3111, "func": "specifies valid elements for an CallState to contain", "target": 0}
{"idx": 3112, "func": "If we don't have one yet, maybe it's one of the special types... //", "target": 0}
{"idx": 3113, "func": "parse for urls / email adr. and substite with HTML-code", "target": 0}
{"idx": 3114, "func": "Set up hide all / show all", "target": 0}
{"idx": 3115, "func": "Add these directly to the executions queue", "target": 0}
{"idx": 3116, "func": "ICommand Interface implementation", "target": 0}
{"idx": 3117, "func": "test 9am-4pm Monday through Friday timeline", "target": 0}
{"idx": 3118, "func": "LOG.log(Level.FINE, \"Slope = \" + theta / Math.PI + \"PI \" + theta / Math.PI 180.0);", "target": 0}
{"idx": 3119, "func": "if a date has been supplied use a view configured to the date.", "target": 0}
{"idx": 3120, "func": "//{{{ PluginCompare class", "target": 0}
{"idx": 3121, "func": "create profile config file", "target": 0}
{"idx": 3122, "func": "i18n[HelpViewerWindow.welcome=Welcome]", "target": 0}
{"idx": 3123, "func": "Constructor. <p> TODO: Correct? @param nodes The UML elements, typically classifiers, to generate. @param inModel <code>true</code> if the path is in the model.", "target": 0}
{"idx": 3124, "func": "Define syntaxes", "target": 0}
{"idx": 3125, "func": "create Address from URL", "target": 0}
{"idx": 3126, "func": "End constructors", "target": 0}
{"idx": 3127, "func": "Empty arrays are immutable", "target": 0}
{"idx": 3128, "func": "length", "target": 0}
{"idx": 3129, "func": "this generates the change event too", "target": 0}
{"idx": 3130, "func": "Add the result as subsample of transaction if we are in a transaction", "target": 0}
{"idx": 3131, "func": "Assume it will fail ditto $NON-NLS-1$", "target": 0}
{"idx": 3132, "func": "TODO: Bob says - we should not be listening here for addition and removal of attributes. This should be done in FigAttributesCompartment.", "target": 1}
{"idx": 3133, "func": "Remove objects from the owner list by index, starting from the end. //", "target": 0}
{"idx": 3134, "func": "actually tests constructor as well as setPath", "target": 0}
{"idx": 3135, "func": "Add the message handler to the session", "target": 0}
{"idx": 3136, "func": "//do not use proxiesByKey, since not all //proxies that point to this session's //instances are in that collection!", "target": 0}
{"idx": 3137, "func": "Feb 4 2000 5:30 PM Catch Throwable here rather than Exception. Kaffe's implementation of Runtime.exec throws java.lang.InternalError.", "target": 1}
{"idx": 3138, "func": "//The version of the target DBMS //This is optional. If you don't want to give out this info, please enter \"N/A\"", "target": 0}
{"idx": 3139, "func": "i18n[editextras.time=Time]", "target": 0}
{"idx": 3140, "func": "If the operator is 'IN' and there are no parenthesis around the value, put them there.", "target": 0}
{"idx": 3141, "func": "//Ecore2EcoreSwitch", "target": 0}
{"idx": 3142, "func": "//TODO: Return content encoding according to the mime part in the mail", "target": 1}
{"idx": 3143, "func": "double", "target": 0}
{"idx": 3144, "func": "the old selection", "target": 0}
{"idx": 3145, "func": "process exception -> show error dialog to user", "target": 0}
{"idx": 3146, "func": "This slash stuff is a ...", "target": 0}
{"idx": 3147, "func": "toolTipGenerator", "target": 0}
{"idx": 3148, "func": "scan from selection to end failed, so scan from start to selection", "target": 0}
{"idx": 3149, "func": "iterate all the entities currently associated with the persistence context.", "target": 0}
{"idx": 3150, "func": "reset", "target": 0}
{"idx": 3151, "func": "Use binary mode file transfer? $NON-NLS-1$", "target": 0}
{"idx": 3152, "func": "//////////////event handlers", "target": 0}
{"idx": 3153, "func": "//TODO: nothing appears to read this but is set using a public setter.", "target": 1}
{"idx": 3154, "func": "Matt Dahlman: this causes problems with the JDBC driver delivered with Teradata V2R05.00.00.11", "target": 0}
{"idx": 3155, "func": "Create a UML TemplateArgument. @since UML 1.4 @return an initialized TemplateArgument instance. TODO: This needs an extra parameter to specify the model/extent where the new element should be created.", "target": 1}
{"idx": 3156, "func": "TODO: Not implemented by eUML", "target": 1}
{"idx": 3157, "func": "TODO - convert to work more like upgrade.properties/NameUpdater.java Special processing is carried out for the Header Class The String property TestElement.name is converted to Header.name for example: <elementProp name=\"User-Agent\" elementType=\"org.apache.jmeter.protocol.http.control.Header\"> <stringProp name=\"Header.value\">Mozilla%2F4.0+%28compatible%3B+MSIE+5.5%3B+Windows+98%29</stringProp> <stringProp name=\"TestElement.name\">User-Agent</stringProp> </elementProp> becomes <elementProp name=\"User-Agent\" elementType=\"org.apache.jmeter.protocol.http.control.Header\"> <stringProp name=\"Header.value\">Mozilla%2F4.0+%28compatible%3B+MSIE+5.5%3B+Windows+98%29</stringProp> <stringProp name=\"Header.name\">User-Agent</stringProp> </elementProp>", "target": 1}
{"idx": 3158, "func": "remove old name list from map", "target": 0}
{"idx": 3159, "func": "At this stage there's no more text in the scanned buffer, but this buffer is not the last so the scan will continue on another buffer. The scanner tries to minimize the amount of characters that will be prescanned in the next buffer by returning the token where possible.", "target": 0}
{"idx": 3160, "func": "We also show the type (of which e.g. the name may change)", "target": 0}
{"idx": 3161, "func": "//Note, don't need to specify size or crc for compressed files.", "target": 0}
{"idx": 3162, "func": "object selector", "target": 0}
{"idx": 3163, "func": "Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, \"arch\", System.getProperty(\"os.arch\") + \"-java\" + System.getProperty(\"java.specification.version\"));", "target": 0}
{"idx": 3164, "func": "//there to stop error messages being \"null\"", "target": 0}
{"idx": 3165, "func": "ask password from user", "target": 0}
{"idx": 3166, "func": "TODO: throw IllegalArgumentException in case a variable == null", "target": 1}
{"idx": 3167, "func": "the diagram image data", "target": 0}
{"idx": 3168, "func": "TODO: This shouldn't depend on the current project, but for now just make sure it's defined and that we have an undo manager", "target": 1}
{"idx": 3169, "func": "create new local xml treenode", "target": 0}
{"idx": 3170, "func": "Test creation of metatypes. TODO: we could add tests here to make sure that we can NOT create abstract types", "target": 1}
{"idx": 3171, "func": "NEGATIVE ITEM LABEL POSITION...", "target": 0}
{"idx": 3172, "func": "OUTLINE PAINT", "target": 0}
{"idx": 3173, "func": "First we need to register the JRuby engine.", "target": 0}
{"idx": 3174, "func": "not a value, can't use it (defaults to null)", "target": 0}
{"idx": 3175, "func": "@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)", "target": 0}
{"idx": 3176, "func": "Match close.", "target": 0}
{"idx": 3177, "func": "Test method for 'org.columba.core.tagging.TagManager.removeTag(String)'", "target": 0}
{"idx": 3178, "func": "//{{{ Paint line highlight and collapsed fold highlight", "target": 0}
{"idx": 3179, "func": "max size reached", "target": 0}
{"idx": 3180, "func": "Do the runtime", "target": 0}
{"idx": 3181, "func": "For visibility we need real meta class and not anonymous one from class << self", "target": 0}
{"idx": 3182, "func": "Check the 2 values obtained via different means", "target": 0}
{"idx": 3183, "func": "calculate bar width...", "target": 0}
{"idx": 3184, "func": "//{{{ getSelectedClipText()", "target": 0}
{"idx": 3185, "func": "i18n[SessionStartupTimeHintDlg.showAliasProps=Open Alias Schema Properties]", "target": 0}
{"idx": 3186, "func": "file comment", "target": 0}
{"idx": 3187, "func": "yellow", "target": 0}
{"idx": 3188, "func": "make listeners", "target": 0}
{"idx": 3189, "func": "successfully got back a jitted method", "target": 0}
{"idx": 3190, "func": "restore original clip", "target": 0}
{"idx": 3191, "func": "Something is wrong Sync again", "target": 0}
{"idx": 3192, "func": "check if default value exists", "target": 0}
{"idx": 3193, "func": "//scan for next non-whitespace token", "target": 0}
{"idx": 3194, "func": "//{{{ OptionGroup constructor", "target": 0}
{"idx": 3195, "func": "TODO Binary incompatibility; an old override must override putAll.", "target": 1}
{"idx": 3196, "func": "self", "target": 0}
{"idx": 3197, "func": "we have already started reading this section this line is the first attribute. set it and then let the normal read handle the rest", "target": 0}
{"idx": 3198, "func": "This is a bit hard coded but if we use _scale here some number displays go crazy. //_numberFormat.setMaximumFractionDigits(_scale);", "target": 1}
{"idx": 3199, "func": "remove all options", "target": 0}
{"idx": 3200, "func": "Check the timestamp of the primary key class", "target": 0}
{"idx": 3201, "func": "//fail(\"Not yet implemented\");", "target": 0}
{"idx": 3202, "func": "if a shortcut has been select then we have to check if the actual action is in conflict with other ones", "target": 0}
{"idx": 3203, "func": "create all individual search criteria for this provider", "target": 0}
{"idx": 3204, "func": "open initial view?", "target": 0}
{"idx": 3205, "func": "TODO : complete this", "target": 1}
{"idx": 3206, "func": "Methods of the Object class (rb_obj_):", "target": 0}
{"idx": 3207, "func": "@see java.awt.event.ComponentListener#componentMoved(java.awt.event.ComponentEvent)", "target": 0}
{"idx": 3208, "func": "we don't want to show some nasty gray background color, now do we?", "target": 0}
{"idx": 3209, "func": "(non-Javadoc) @see org.columba.mail.folder.headercache.HeaderList#count()", "target": 0}
{"idx": 3210, "func": "log.info(\"testBlankPrevOK\");", "target": 0}
{"idx": 3211, "func": "add each of the panels created by the DataType objects for editing their own properties", "target": 0}
{"idx": 3212, "func": "Finished executing the task, null it to allow GC do its job If this UE is used again, a new \"realthing\" will be made", "target": 0}
{"idx": 3213, "func": "The event source is the stub state's referenced state or one of the referenced state's path.", "target": 0}
{"idx": 3214, "func": "getColumnNameAlterSQL", "target": 0}
{"idx": 3215, "func": "some subclasses override this method completely, so don't put anything here that must be done", "target": 0}
{"idx": 3216, "func": "if it's method_missing, just invoke it", "target": 0}
{"idx": 3217, "func": "TODO: Move all code other than for window creation up to AliasWindowManager Factory to handle creation of maintenance sheets for SQL Driver objects. @author <A HREF=\"mailto:colbell@users.sourceforge.net\">Colin Bell</A>", "target": 1}
{"idx": 3218, "func": "Preserve sign on first byte", "target": 0}
{"idx": 3219, "func": "a fishing expedition :- ignore errors if antlib not present", "target": 0}
{"idx": 3220, "func": "Clean up the state. //", "target": 0}
{"idx": 3221, "func": "//private double arrowLength;", "target": 0}
{"idx": 3222, "func": "There are 2 possibilities: either (1) we follow the traditional notation philosophy, and set the tagged value to false, or (2) we restore to the pristine situation and delete the taggedValue (whatever the value was). I chose the latter (mvw).", "target": 0}
{"idx": 3223, "func": "long, big-endian", "target": 0}
{"idx": 3224, "func": "set toolbar text", "target": 0}
{"idx": 3225, "func": "one optional and no required args", "target": 0}
{"idx": 3226, "func": "Use the original casiness of the key", "target": 0}
{"idx": 3227, "func": "bgAShape.addSubShape(mainText);", "target": 0}
{"idx": 3228, "func": "search individual provider", "target": 0}
{"idx": 3229, "func": "//{{{ createMarkPreviousRule() method", "target": 0}
{"idx": 3230, "func": "Used by editing operations to set textField value without changing the original text saved in the class", "target": 0}
{"idx": 3231, "func": "GUI components - need to be here because they need to be accessible from the event handlers to alter each other's state.", "target": 0}
{"idx": 3232, "func": "There are 2 boxes showing lines: the tab and the body.", "target": 0}
{"idx": 3233, "func": "reg_name = 1( unreserved | escaped | \"$\" | \",\" | \";\" | \":\" | \"@\" | \"&\" | \"=\" | \"+\" )", "target": 0}
{"idx": 3234, "func": "not necessary as JDepend would fail, but why loose some time?", "target": 0}
{"idx": 3235, "func": "@see IClientSessionAction#setSession(ISession)", "target": 0}
{"idx": 3236, "func": "Add all panels to the tabbed pane.", "target": 0}
{"idx": 3237, "func": "get plugin handler for handling frames", "target": 0}
{"idx": 3238, "func": "not same", "target": 0}
{"idx": 3239, "func": "we can do the cast since orphan-delete does not apply to: 1. newly instantiated collections 2. arrays (we can't track orphans for detached arrays)", "target": 0}
{"idx": 3240, "func": "This is a particularly nasty bit of code, that checks for a parameter entity reference but peeks ahead to catch the '%' in parameter entity declarations.", "target": 1}
{"idx": 3241, "func": "Buffer for parsed names. //", "target": 0}
{"idx": 3242, "func": "adding a second series", "target": 0}
{"idx": 3243, "func": "XXX if we keep the createClassManager in getClassManager then we can axe this?", "target": 1}
{"idx": 3244, "func": "utility is a namespace collection - also not strictly required to have variables.", "target": 0}
{"idx": 3245, "func": "make sure attributes are reset when working on a 'new' file.", "target": 0}
{"idx": 3246, "func": "edit menu", "target": 0}
{"idx": 3247, "func": "out of byte range there will be no match for sure", "target": 0}
{"idx": 3248, "func": "//Cope with special cases of AND, NOT, )", "target": 0}
{"idx": 3249, "func": "Ignore whatever was set before. //", "target": 0}
{"idx": 3250, "func": "//NOOP", "target": 0}
{"idx": 3251, "func": "//{{{ paintChunkBackgrounds() method", "target": 0}
{"idx": 3252, "func": "also unapply subprofiles:", "target": 0}
{"idx": 3253, "func": "When this is called from PGMLStackParser.attachEdges, we finished the initialization of owning pseudo element (CommentEdge)", "target": 0}
{"idx": 3254, "func": "if have already a suitable folder skip the search", "target": 0}
{"idx": 3255, "func": "Ignore non-private elements within FigNode groups", "target": 0}
{"idx": 3256, "func": "Op.CHAR", "target": 0}
{"idx": 3257, "func": "Authentication is not supported", "target": 0}
{"idx": 3258, "func": "TBLRC 01011 - bottom, right and center", "target": 0}
{"idx": 3259, "func": "last conditional case, use defaultCase", "target": 0}
{"idx": 3260, "func": "makes sure we can select 'none'", "target": 0}
{"idx": 3261, "func": "ensure value is propagated to editor", "target": 0}
{"idx": 3262, "func": "ignoreZeroValues", "target": 0}
{"idx": 3263, "func": "Build args", "target": 0}
{"idx": 3264, "func": "@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)", "target": 0}
{"idx": 3265, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#nullsAreSortedHigh()", "target": 0}
{"idx": 3266, "func": "setResourceRoot", "target": 0}
{"idx": 3267, "func": "TODO move resources to a resource file", "target": 1}
{"idx": 3268, "func": "/ .. etc....", "target": 0}
{"idx": 3269, "func": "//{{{ runInAWTThread() method", "target": 0}
{"idx": 3270, "func": "//{{{ setLineHighlightColor() method", "target": 0}
{"idx": 3271, "func": "implement this", "target": 0}
{"idx": 3272, "func": "stupid: caret will automatically be incremented", "target": 1}
{"idx": 3273, "func": "BIPUSH or NEWARRAY", "target": 0}
{"idx": 3274, "func": "the caller does not need to know that nothing happened", "target": 0}
{"idx": 3275, "func": "//getTable().doLayout();", "target": 0}
{"idx": 3276, "func": "//{{{ getStructureHighlightColor() method", "target": 0}
{"idx": 3277, "func": "This while loop is for restarting the block call in case a 'redo' fires.", "target": 0}
{"idx": 3278, "func": "//{{{ getBufferHistory() method", "target": 0}
{"idx": 3279, "func": "find the line breaks and pass other chars through in blocks", "target": 0}
{"idx": 3280, "func": "line 696", "target": 0}
{"idx": 3281, "func": "r/w buffer are we reading or writing?", "target": 0}
{"idx": 3282, "func": "Hypothetical question: can you have a RE that matches 1 times, 3 times, 5 times, but not 2 times or 4 times? Does having the subexpression back-reference operator allow that?", "target": 0}
{"idx": 3283, "func": "need to reexamine this", "target": 1}
{"idx": 3284, "func": "package protected setters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 3285, "func": "//TODO: Does this help?", "target": 0}
{"idx": 3286, "func": "ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.", "target": 0}
{"idx": 3287, "func": "NIF: unTruthTest(Model.getFacade().isAMethod(o), // Model.getMetaTypes().getMethod());", "target": 0}
{"idx": 3288, "func": "colDefs[i].getSqlTypeName() + \"\\n\" + // ((colDefs[i].isNullable()) ? \"nullable\" : \"not nullable\") + \"\\n\" + // \"precision=\"+ colDefs[i].getPrecision() + \"\\n\" + // \"scale=\" + colDefs[i].getScale();", "target": 0}
{"idx": 3289, "func": "Place in the middle of the line and ensure the line is dashed. Add an arrow with an open arrow head. Remember that for an extends relationship, the arrow points to the base use case, but because of the way we draw it, that is still the destination end.", "target": 0}
{"idx": 3290, "func": "get I/O streams for remote scp", "target": 0}
{"idx": 3291, "func": "No or mismatched braces..Move along..nothing to see here", "target": 0}
{"idx": 3292, "func": "end setup method", "target": 0}
{"idx": 3293, "func": "keys used in properties.", "target": 0}
{"idx": 3294, "func": "insert new declaration before this one", "target": 0}
{"idx": 3295, "func": "Write the form section", "target": 0}
{"idx": 3296, "func": "Sort it and store in a new CopyOnWriteArrayList", "target": 0}
{"idx": 3297, "func": "-> we need to replace old message", "target": 0}
{"idx": 3298, "func": "We look forward", "target": 0}
{"idx": 3299, "func": "line 1702", "target": 0}
{"idx": 3300, "func": "//Select the new comment as target", "target": 0}
{"idx": 3301, "func": "delcaredOnly", "target": 0}
{"idx": 3302, "func": "forced edit mode ended because user changed the Session Properties", "target": 0}
{"idx": 3303, "func": "//{{{ addEntry() method", "target": 0}
{"idx": 3304, "func": "ignore this; select() will set the correct mode when it is finished", "target": 0}
{"idx": 3305, "func": "Children (this is a shadow of UnknownElement#children)", "target": 0}
{"idx": 3306, "func": "did not find \\n, put the character back", "target": 0}
{"idx": 3307, "func": "-------------------- Hook management --------------------", "target": 0}
{"idx": 3308, "func": "line 996", "target": 0}
{"idx": 3309, "func": "i18n[HibernateAttribuiteDataSet.attrClassName=Attribute class name]", "target": 0}
{"idx": 3310, "func": "EncodingMap is a convenience class which handles conversions between IANA encoding names and Java encoding names, and vice versa. The encoding names used in XML instance documents <strong>must</strong> be the IANA encoding names specified or one of the aliases for those names which IANA defines. <p> <TABLE BORDER=\"0\" WIDTH=\"100%\"> <TR> <TD WIDTH=\"33%\"> <P ALIGN=\"CENTER\"><B>Common Name</B> </TD> <TD WIDTH=\"15%\"> <P ALIGN=\"CENTER\"><B>Use this name in XML files</B> </TD> <TD WIDTH=\"12%\"> <P ALIGN=\"CENTER\"><B>Name Type</B> </TD> <TD WIDTH=\"31%\"> <P ALIGN=\"CENTER\"><B>Xerces converts to this Java Encoder Name</B> </TD> </TR> <TR> <TD WIDTH=\"33%\">8 bit Unicode</TD> <TD WIDTH=\"15%\"> <P ALIGN=\"CENTER\">UTF-8 </TD> <TD WIDTH=\"12%\"> <P ALIGN=\"CENTER\">IANA </TD> <TD WIDTH=\"31%\"> <P ALIGN=\"CENTER\">UTF8 </TD> </TR> <TR> <TD WIDTH=\"33%\">ISO Latin 1</TD> <TD WIDTH=\"15%\"> <P ALIGN=\"CENTER\">ISO-8859-1 </TD> <TD WIDTH=\"12%\"> <P ALIGN=\"CENTER\">MIME </TD> <TD WIDTH=\"31%\"> <P ALIGN=\"CENTER\">ISO-8859-1 </TD> </TR> <TR> <TD WIDTH=\"33%\">ISO Latin 2</TD> <TD WIDTH=\"15%\"> <P ALIGN=\"CENTER\">ISO-8859-2 </TD> <TD WIDTH=\"12%\"> <P ALIGN=\"CENTER\">MIME </TD> <TD WIDTH=\"31%\"> <P ALIGN=\"CENTER\">ISO-8859-2 </TD> </TR> <TR> <TD WIDTH=\"33%\">ISO Latin 3</TD> <TD WIDTH=\"15%\"> <P ALIGN=\"CENTER\">ISO-8859-3 </TD> <TD WIDTH=\"12%\"> <P ALIGN=\"CENTER\">MIME </TD> <TD WIDTH=\"31%\"> <P ALIGN=\"CENTER\">ISO-8859-3 </TD> </TR> <TR> <TD WIDTH=\"33%\">ISO Latin 4</TD> <TD WIDTH=\"15%\"> <P ALIGN=\"CENTER\">ISO-8859-4 </TD> <TD WIDTH=\"12%\"> <P ALIGN=\"CENTER\">MIME </TD> <TD WIDTH=\"31%\"> <P ALIGN=\"CENTER\">ISO-8859-4 </TD> </TR> <TR> <TD WIDTH=\"33%\">ISO Latin Cyrillic</TD> <TD WIDTH=\"15%\"> <P ALIGN=\"CENTER\">ISO-8859-5 </TD> <TD WIDTH=\"12%\"> <P ALIGN=\"CENTER\">MIME </TD> <TD WIDTH=\"31%\"> <P ALIGN=\"CENTER\">ISO-8859-5 </TD> </TR> <TR> <TD WIDTH=\"33%\">ISO Latin Arabic</TD> <TD WIDTH=\"15%\"> <P ALIGN=\"CENTER\">ISO-8859-6 </TD> <TD WIDTH=\"12%\"> <P ALIGN=\"CENTER\">MIME </TD> <TD WIDTH=\"31%\"> <P ALIGN=\"CENTER\">ISO-8859-6 </TD> </TR> <TR> <TD WIDTH=\"33%\">ISO Latin Greek</TD> <TD WIDTH=\"15%\"> <P ALIGN=\"CENTER\">ISO-8859-7 </TD> <TD WIDTH=\"12%\"> <P ALIGN=\"CENTER\">MIME </TD> <TD WIDTH=\"31%\"> <P ALIGN=\"CENTER\">ISO-8859-7 </TD> </TR> <TR> <TD WIDTH=\"33%\">ISO Latin Hebrew</TD> <TD WIDTH=\"15%\"> <P ALIGN=\"CENTER\">ISO-8859-8 </TD> <TD WIDTH=\"12%\"> <P ALIGN=\"CENTER\">MIME </TD> <TD WIDTH=\"31%\"> <P ALIGN=\"CENTER\">ISO-8859-8 </TD> </TR> <TR> <TD WIDTH=\"33%\">ISO Latin 5</TD> <TD WIDTH=\"15%\"> <P ALIGN=\"CENTER\">ISO-8859-9 </TD> <TD WIDTH=\"12%\"> <P ALIGN=\"CENTER\">MIME </TD> <TD WIDTH=\"31%\"> <P ALIGN=\"CENTER\">ISO-8859-9 </TD> </TR> <TR> <TD WIDTH=\"33%\">EBCDIC: US</TD> <TD WIDTH=\"15%\"> <P ALIGN=\"CENTER\">ebcdic-cp-us </TD> <TD WIDTH=\"12%\"> <P ALIGN=\"CENTER\">IANA </TD> <TD WIDTH=\"31%\"> <P ALIGN=\"CENTER\">cp037 </TD> </TR> <TR> <TD WIDTH=\"33%\">EBCDIC: Canada</TD> <TD WIDTH=\"15%\"> <P ALIGN=\"CENTER\">ebcdic-cp-ca </TD> <TD WIDTH=\"12%\"> <P ALIGN=\"CENTER\">IANA </TD> <TD WIDTH=\"31%\"> <P ALIGN=\"CENTER\">cp037 </TD> </TR> <TR> <TD WIDTH=\"33%\">EBCDIC: Netherlands</TD> <TD WIDTH=\"15%\"> <P ALIGN=\"CENTER\">ebcdic-cp-nl </TD> <TD WIDTH=\"12%\"> <P ALIGN=\"CENTER\">IANA </TD> <TD WIDTH=\"31%\"> <P ALIGN=\"CENTER\">cp037 </TD> </TR> <TR> <TD WIDTH=\"33%\">EBCDIC: Denmark</TD> <TD WIDTH=\"15%\"> <P ALIGN=\"CENTER\">ebcdic-cp-dk </TD> <TD WIDTH=\"12%\"> <P ALIGN=\"CENTER\">IANA </TD> <TD WIDTH=\"31%\"> <P ALIGN=\"CENTER\">cp277 </TD> </TR> <TR> <TD WIDTH=\"33%\">EBCDIC: Norway</TD> <TD WIDTH=\"15%\"> <P ALIGN=\"CENTER\">ebcdic-cp-no </TD> <TD WIDTH=\"12%\"> <P ALIGN=\"CENTER\">IANA </TD> <TD WIDTH=\"31%\"> <P ALIGN=\"CENTER\">cp277 </TD> </TR> <TR> <TD WIDTH=\"33%\">EBCDIC: Finland</TD> <TD WIDTH=\"15%\"> <P ALIGN=\"CENTER\">ebcdic-cp-fi </TD> <TD WIDTH=\"12%\"> <P ALIGN=\"CENTER\">IANA </TD> <TD WIDTH=\"31%\"> <P ALIGN=\"CENTER\">cp278 </TD> </TR> <TR> <TD WIDTH=\"33%\">EBCDIC: Sweden</TD> <TD WIDTH=\"15%\"> <P ALIGN=\"CENTER\">ebcdic-cp-se </TD> <TD WIDTH=\"12%\"> <P ALIGN=\"CENTER\">IANA </TD> <TD WIDTH=\"31%\"> <P ALIGN=\"CENTER\">cp278 </TD> </TR> <TR> <TD WIDTH=\"33%\">EBCDIC: Italy</TD> <TD WIDTH=\"15%\"> <P ALIGN=\"CENTER\">ebcdic-cp-it </TD> <TD WIDTH=\"12%\"> <P ALIGN=\"CENTER\">IANA </TD> <TD WIDTH=\"31%\"> <P ALIGN=\"CENTER\">cp280 </TD> </TR> <TR> <TD WIDTH=\"33%\">EBCDIC: Spain, Latin America</TD> <TD WIDTH=\"15%\"> <P ALIGN=\"CENTER\">ebcdic-cp-es </TD> <TD WIDTH=\"12%\"> <P ALIGN=\"CENTER\">IANA </TD> <TD WIDTH=\"31%\"> <P ALIGN=\"CENTER\">cp284 </TD> </TR> <TR> <TD WIDTH=\"33%\">EBCDIC: Great Britain</TD> <TD WIDTH=\"15%\"> <P ALIGN=\"CENTER\">ebcdic-cp-gb </TD> <TD WIDTH=\"12%\"> <P ALIGN=\"CENTER\">IANA </TD> <TD WIDTH=\"31%\"> <P ALIGN=\"CENTER\">cp285 </TD> </TR> <TR> <TD WIDTH=\"33%\">EBCDIC: France</TD> <TD WIDTH=\"15%\"> <P ALIGN=\"CENTER\">ebcdic-cp-fr </TD> <TD WIDTH=\"12%\"> <P ALIGN=\"CENTER\">IANA </TD> <TD WIDTH=\"31%\"> <P ALIGN=\"CENTER\">cp297 </TD> </TR> <TR> <TD WIDTH=\"33%\">EBCDIC: Arabic</TD> <TD WIDTH=\"15%\"> <P ALIGN=\"CENTER\">ebcdic-cp-ar1 </TD> <TD WIDTH=\"12%\"> <P ALIGN=\"CENTER\">IANA </TD> <TD WIDTH=\"31%\"> <P ALIGN=\"CENTER\">cp420 </TD> </TR> <TR> <TD WIDTH=\"33%\">EBCDIC: Hebrew</TD> <TD WIDTH=\"15%\"> <P ALIGN=\"CENTER\">ebcdic-cp-he </TD> <TD WIDTH=\"12%\"> <P ALIGN=\"CENTER\">IANA </TD> <TD WIDTH=\"31%\"> <P ALIGN=\"CENTER\">cp424 </TD> </TR> <TR> <TD WIDTH=\"33%\">EBCDIC: Switzerland</TD> <TD WIDTH=\"15%\"> <P ALIGN=\"CENTER\">ebcdic-cp-ch </TD> <TD WIDTH=\"12%\"> <P ALIGN=\"CENTER\">IANA </TD> <TD WIDTH=\"31%\"> <P ALIGN=\"CENTER\">cp500 </TD> </TR> <TR> <TD WIDTH=\"33%\">EBCDIC: Roece</TD> <TD WIDTH=\"15%\"> <P ALIGN=\"CENTER\">ebcdic-cp-roece </TD> <TD WIDTH=\"12%\"> <P ALIGN=\"CENTER\">IANA </TD> <TD WIDTH=\"31%\"> <P ALIGN=\"CENTER\">cp870 </TD> </TR> <TR> <TD WIDTH=\"33%\">EBCDIC: Yugoslavia</TD> <TD WIDTH=\"15%\"> <P ALIGN=\"CENTER\">ebcdic-cp-yu </TD> <TD WIDTH=\"12%\"> <P ALIGN=\"CENTER\">IANA </TD> <TD WIDTH=\"31%\"> <P ALIGN=\"CENTER\">cp870 </TD> </TR> <TR> <TD WIDTH=\"33%\">EBCDIC: Iceland</TD> <TD WIDTH=\"15%\"> <P ALIGN=\"CENTER\">ebcdic-cp-is </TD> <TD WIDTH=\"12%\"> <P ALIGN=\"CENTER\">IANA </TD> <TD WIDTH=\"31%\"> <P ALIGN=\"CENTER\">cp871 </TD> </TR> <TR> <TD WIDTH=\"33%\">EBCDIC: Urdu</TD> <TD WIDTH=\"15%\"> <P ALIGN=\"CENTER\">ebcdic-cp-ar2 </TD> <TD WIDTH=\"12%\"> <P ALIGN=\"CENTER\">IANA </TD> <TD WIDTH=\"31%\"> <P ALIGN=\"CENTER\">cp918 </TD> </TR> <TR> <TD WIDTH=\"33%\">Chinese for PRC, mixed 1/2 byte</TD> <TD WIDTH=\"15%\"> <P ALIGN=\"CENTER\">gb2312 </TD> <TD WIDTH=\"12%\"> <P ALIGN=\"CENTER\">MIME </TD> <TD WIDTH=\"31%\"> <P ALIGN=\"CENTER\">GB2312 </TD> </TR> <TR> <TD WIDTH=\"33%\">Extended Unix Code, packed for Japanese</TD> <TD WIDTH=\"15%\"> <P ALIGN=\"CENTER\">euc-jp </TD> <TD WIDTH=\"12%\"> <P ALIGN=\"CENTER\">MIME </TD> <TD WIDTH=\"31%\"> <P ALIGN=\"CENTER\">eucjis </TD> </TR> <TR> <TD WIDTH=\"33%\">Japanese: iso-2022-jp</TD> <TD WIDTH=\"15%\"> <P ALIGN=\"CENTER\">iso-2020-jp </TD> <TD WIDTH=\"12%\"> <P ALIGN=\"CENTER\">MIME </TD> <TD WIDTH=\"31%\"> <P ALIGN=\"CENTER\">JIS </TD> </TR> <TR> <TD WIDTH=\"33%\">Japanese: Shift JIS</TD> <TD WIDTH=\"15%\"> <P ALIGN=\"CENTER\">Shift_JIS </TD> <TD WIDTH=\"12%\"> <P ALIGN=\"CENTER\">MIME </TD> <TD WIDTH=\"31%\"> <P ALIGN=\"CENTER\">SJIS </TD> </TR> <TR> <TD WIDTH=\"33%\">Chinese: Big5</TD> <TD WIDTH=\"15%\"> <P ALIGN=\"CENTER\">Big5 </TD> <TD WIDTH=\"12%\"> <P ALIGN=\"CENTER\">MIME </TD> <TD WIDTH=\"31%\"> <P ALIGN=\"CENTER\">Big5 </TD> </TR> <TR> <TD WIDTH=\"33%\">Extended Unix Code, packed for Korean</TD> <TD WIDTH=\"15%\"> <P ALIGN=\"CENTER\">euc-kr </TD> <TD WIDTH=\"12%\"> <P ALIGN=\"CENTER\">MIME </TD> <TD WIDTH=\"31%\"> <P ALIGN=\"CENTER\">iso2022kr </TD> </TR> <TR> <TD WIDTH=\"33%\">Cyrillic</TD> <TD WIDTH=\"15%\"> <P ALIGN=\"CENTER\">koi8-r </TD> <TD WIDTH=\"12%\"> <P ALIGN=\"CENTER\">MIME </TD> <TD WIDTH=\"31%\"> <P ALIGN=\"CENTER\">koi8-r </TD> </TR> </TABLE> @author TAMURA Kent, IBM @author Andy Clark, IBM", "target": 0}
{"idx": 3311, "func": "Create a frame controller for this view", "target": 0}
{"idx": 3312, "func": "$.: last read line number", "target": 0}
{"idx": 3313, "func": "TODO: Generalize - assumes UML type names are unique without the qualifying package names - true for UML 1.4", "target": 1}
{"idx": 3314, "func": "i18n[SchemaInfo.loadingKeywords=Loading keywords]", "target": 0}
{"idx": 3315, "func": "//does not occur", "target": 0}
{"idx": 3316, "func": "necessary to create distance between the textfield and the icon.", "target": 0}
{"idx": 3317, "func": "Sort in with respect to priority and synchronize: Commands with higher priority will be processed before commands with lower priority. If there is a command that is of type synchronize don't put this command in front.", "target": 0}
{"idx": 3318, "func": "i18n[AliasWindowFactory.error.copyAlias=Error occured copying the alias]", "target": 0}
{"idx": 3319, "func": "load()/get() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 3320, "func": "//i18n[RowIDTab.title=Row IDs]", "target": 0}
{"idx": 3321, "func": "-- class Factory", "target": 0}
{"idx": 3322, "func": "To compile on pre-JDK 4 (even though this should always succeed):", "target": 0}
{"idx": 3323, "func": "//largeFont", "target": 0}
{"idx": 3324, "func": "+ \"a.allConnections->exists(r | r.type.oclIsKindOf(Actor)) and \"", "target": 0}
{"idx": 3325, "func": "get the origin of the zoom selection in the Java2D space used for drawing the chart (that is, before any scaling to fit the panel)", "target": 0}
{"idx": 3326, "func": "Remove anything that matches our pattern", "target": 0}
{"idx": 3327, "func": "For windows, the file is being set hidden by the attrib command.", "target": 0}
{"idx": 3328, "func": "\"RENAME TABLE $oldObjectName$ TO $newObjectName$\";", "target": 0}
{"idx": 3329, "func": "now temp2 has the lowest of the three components", "target": 0}
{"idx": 3330, "func": "artifact name for plugins is <plugin internal name>.zip", "target": 0}
{"idx": 3331, "func": "Save the name for error reporting", "target": 0}
{"idx": 3332, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#supportsSchemasInTableDefinitions()", "target": 0}
{"idx": 3333, "func": "7 is the size of (object", "target": 0}
{"idx": 3334, "func": "Delete InteractionInstanceSets where this is the last participatingStimulus", "target": 0}
{"idx": 3335, "func": "//no need to take a snapshot - this is a //performance optimization, but not really //important, except for entities with huge //mutable property values", "target": 1}
{"idx": 3336, "func": "Void type", "target": 0}
{"idx": 3337, "func": "work out the label anchor point...", "target": 0}
{"idx": 3338, "func": "//bottom.setLayout( new BoxLayout( bottom, BoxLayout.X_AXIS ) );", "target": 0}
{"idx": 3339, "func": "//{{{ isCaretBlinkEnabled() method", "target": 0}
{"idx": 3340, "func": "-- backup", "target": 0}
{"idx": 3341, "func": "rule name but no rules", "target": 0}
{"idx": 3342, "func": "Suppress default constructor for noninstantiability.", "target": 0}
{"idx": 3343, "func": "for use cases we need to check for extend/includes actors cannot have them, so no need to check", "target": 0}
{"idx": 3344, "func": "create a hashmap containing the column names. by convention, the value and key is the same for each column name", "target": 0}
{"idx": 3345, "func": "Exception in progress", "target": 0}
{"idx": 3346, "func": "Now, build an array of the property names.", "target": 0}
{"idx": 3347, "func": "notify a running waitForRequests() method", "target": 0}
{"idx": 3348, "func": "shutdown entity manager", "target": 0}
{"idx": 3349, "func": "@see org.argouml.uml.diagram.state.ui.FigState#getInitialY()", "target": 0}
{"idx": 3350, "func": "crusty workaround", "target": 1}
{"idx": 3351, "func": "For 'foo()'. Args are only significant in maintaining backwards compatible AST structure", "target": 0}
{"idx": 3352, "func": "we have optimized switch cases, build a lookupswitch", "target": 0}
{"idx": 3353, "func": "try to load extensin handlers of all plugins", "target": 0}
{"idx": 3354, "func": "We assume the argument value is encoded according to the HTTP spec, i.e. UTF-8", "target": 0}
{"idx": 3355, "func": "/////////////////////////////////////////////////////////////", "target": 0}
{"idx": 3356, "func": "//TODO: this is too conservative; if all preceding joins were also inner joins, we could use an inner join here", "target": 1}
{"idx": 3357, "func": "Ignore because we'll rethrow the original exception eventually.", "target": 0}
{"idx": 3358, "func": "//small log values in use", "target": 0}
{"idx": 3359, "func": "Set type/creator codes for files", "target": 0}
{"idx": 3360, "func": "For tables that have a lot of columns, the user may have limited the set of columns to use in the where clause, so see if there is a table of col names", "target": 0}
{"idx": 3361, "func": "the other obj has not read the data yet.", "target": 0}
{"idx": 3362, "func": "Tracks current element Tracks current text data \"session\" or \"entity\"", "target": 0}
{"idx": 3363, "func": "Assume that this is an not supported attribute type thrown for example by a dymanic attribute task Do nothing", "target": 0}
{"idx": 3364, "func": "//{{{ StyleOptionPane constructor", "target": 0}
{"idx": 3365, "func": "Initialize band buffer bounds", "target": 0}
{"idx": 3366, "func": "i18n[mysql.logs=MySQL Logs]", "target": 0}
{"idx": 3367, "func": "handle a special case - if the bar colour has alpha == 0, it is invisible so we shouldn't draw any shadow", "target": 0}
{"idx": 3368, "func": "verify max value", "target": 0}
{"idx": 3369, "func": "//{{{ split() method", "target": 0}
{"idx": 3370, "func": "rb_str_substr", "target": 0}
{"idx": 3371, "func": "Can be caused by: - failure to read XSD file - xml does not match XSD", "target": 0}
{"idx": 3372, "func": "check empty list", "target": 0}
{"idx": 3373, "func": "FIXME This function needs documentation @return String @param String Name", "target": 1}
{"idx": 3374, "func": "Dialect function", "target": 0}
{"idx": 3375, "func": "this method is for finalizers registered via ObjectSpace", "target": 0}
{"idx": 3376, "func": "----- configuration -----", "target": 0}
{"idx": 3377, "func": "clone() separates a single match from the chain", "target": 0}
{"idx": 3378, "func": "Setup the apt executable", "target": 0}
{"idx": 3379, "func": "Child is array initializer. Evaluate it and fill in the dimensions it returns. Initialized arrays are always fully defined (no undefined dimensions to worry about). The syntax uses the undefinedDimension count. e.g. int [][] { 1, 2 };", "target": 0}
{"idx": 3380, "func": "method has more than 500 lines; we'll need to split it and therefore need to use a heap-based scope", "target": 1}
{"idx": 3381, "func": "//{{{ getBackgroundColor() method", "target": 0}
{"idx": 3382, "func": "//{{{ Expansion constructor", "target": 0}
{"idx": 3383, "func": "have the entity entry perform post-update processing, passing it the update state and the new version (if one).", "target": 0}
{"idx": 3384, "func": "i18n[mysql.hintGrants=(MySQL) Grants]", "target": 0}
{"idx": 3385, "func": "If the row is past the end of our current collection, return an empty string so they can add a new value", "target": 0}
{"idx": 3386, "func": "(non-Javadoc) @see org.apache.jmeter.gui.JMeterGUIComponent#getLabelResource()", "target": 0}
{"idx": 3387, "func": "-master", "target": 0}
{"idx": 3388, "func": "//source.getBatcher().executeBatch(); //found another way to ensure that all batched joined inserts have been executed", "target": 0}
{"idx": 3389, "func": "An activator can't also be a predecessor of a message", "target": 0}
{"idx": 3390, "func": "setFoo(Foo) => foo=(Foo)", "target": 0}
{"idx": 3391, "func": "don't have to check for public, since getMethod finds public method only. don't have to check for abstract, since then taskClass would be abstract too.", "target": 0}
{"idx": 3392, "func": "samp.setDomain(this.getDomain()); samp.setPort(this.getPort());", "target": 0}
{"idx": 3393, "func": "clear label", "target": 0}
{"idx": 3394, "func": "//super(); //}}}", "target": 0}
{"idx": 3395, "func": "Sampling proper - establish the connection and read the response: Repeatedly try to connect:", "target": 0}
{"idx": 3396, "func": "@see java.util.Collection#containsAll(java.util.Collection)", "target": 0}
{"idx": 3397, "func": "In that case first C.fN will fail with CNFE and we will avoid UnsupportedClassVersionError.", "target": 0}
{"idx": 3398, "func": "(MMessage)", "target": 0}
{"idx": 3399, "func": "protected fields: JMeterToolBar class can be use to create another toolbar (plugin, etc.) //$NON-NLS-1$", "target": 0}
{"idx": 3400, "func": "TODO: In UML2.x Event has no parameters. TODO: Treat ObjectFlowState (this doesn't exist anymore in UML2) and Classifier", "target": 1}
{"idx": 3401, "func": "TableModel implemetation", "target": 0}
{"idx": 3402, "func": "add statusbar", "target": 0}
{"idx": 3403, "func": "TRIM(end_keyword string-expression-1 FROM string-expression-2) use Hibernate implementation \"From\" is one of the parameters they pass in position ?3 //registerFunction( \"trim\", new SQLFunctionTemplate(Hibernate.STRING, \"trim(?1 ?2 from ?3)\") );", "target": 0}
{"idx": 3404, "func": "Adding a post-invoke for the cb result serves to both keep it alive until after the function returns, and allows us to clean up the native trampoline early, instead of letting them accumulate until a GC run //", "target": 0}
{"idx": 3405, "func": "/////////////////////////////////////////////////////////////////////////Main methods ///////////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 3406, "func": "try with gradient paint", "target": 0}
{"idx": 3407, "func": "Create a new list containing numElements null elements.", "target": 0}
{"idx": 3408, "func": "disk number start", "target": 0}
{"idx": 3409, "func": "The alias to be used if dynamic host names are not possible $NON-NLS-1$", "target": 0}
{"idx": 3410, "func": "scrolling to the selected row", "target": 0}
{"idx": 3411, "func": "Skip the rest of this test for alpha/experimental beans:", "target": 0}
{"idx": 3412, "func": "shortcut key //putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_BRACELEFT, 0));", "target": 0}
{"idx": 3413, "func": "//{{{ setSelectedRow() method", "target": 0}
{"idx": 3414, "func": "now we construct the zig zag inheritance line //getUnderlyingFig()", "target": 0}
{"idx": 3415, "func": "set tooltip text", "target": 0}
{"idx": 3416, "func": "line 1895", "target": 0}
{"idx": 3417, "func": "Store the complete stream in a source so that we can parse it", "target": 0}
{"idx": 3418, "func": "//i18n[explainplanexecuter.mode=Mode]", "target": 0}
{"idx": 3419, "func": "A collection of components...", "target": 0}
{"idx": 3420, "func": "As the JCC driver code is obfuscated, we do not check the full class name, but resort to checking a prefix and suffix instead. In my version, the full class name is \"com.ibm.db2.jcc.c.SqlException\"", "target": 0}
{"idx": 3421, "func": "re-select folder", "target": 0}
{"idx": 3422, "func": "TODO: Update the old and new node above this! This is issue 5079. The old and new UML namespaces are in the event, but how do we know which nodes to refresh? And how to refresh? Not necessarily the namespaces, depending on the perspective.", "target": 1}
{"idx": 3423, "func": "For binding purposes on the newly created struct types", "target": 0}
{"idx": 3424, "func": "CSE: moved this code down here to fix repaint problems on first display - bounds should be set before install Uninstall the old popup from root pane and install the new one. Even in case they are the same objects it's necessary to cover the workspace switches etc.", "target": 1}
{"idx": 3425, "func": "basedir and ant.file get special treatment in execute()", "target": 0}
{"idx": 3426, "func": "//{{{ ViewConfig class", "target": 0}
{"idx": 3427, "func": "(non-Javadoc) @see org.columba.core.filter.IFilterList#count()", "target": 0}
{"idx": 3428, "func": "Retain the previous project file even when the save operation crashes in the middle. Also create a backup file after saving.", "target": 0}
{"idx": 3429, "func": "Note: A CaseInsensitiveString can be a mutable string. In fact it is a mutable string here because this is usually called from within Syntax coloring which uses a mutable string.", "target": 0}
{"idx": 3430, "func": "This is responsible that comments are not in curQuery", "target": 0}
{"idx": 3431, "func": "handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 3432, "func": "Fill 10 of value (byte) -19", "target": 0}
{"idx": 3433, "func": "FIXME: Clearing read buffer here...is this appropriate?", "target": 1}
{"idx": 3434, "func": "i18n[popupeditableIoPanel.noExportFile=No file name given for export.\\nPlease enter a file name or use Browse before clicking Export.]", "target": 0}
{"idx": 3435, "func": "Skips ')'", "target": 0}
{"idx": 3436, "func": "this line has been commented out, return next line number", "target": 0}
{"idx": 3437, "func": "how deeply we are nested", "target": 0}
{"idx": 3438, "func": "\"%.0f\" % 0.99", "target": 0}
{"idx": 3439, "func": "visible", "target": 0}
{"idx": 3440, "func": "TODO: Use the following function to have a dropdown set of tools: ToolBarFactory.addItemsToToolBar(buttonPanel, actions, true); Instead, this temporary solution: @param buttonPanel the toolbar @param actions an array of actions representing the tool layout", "target": 1}
{"idx": 3441, "func": "so that it doesn't resize...", "target": 0}
{"idx": 3442, "func": "icons putValue(SMALL_ICON, MailImageLoader.getIcon(\"email_edit.png\")); putValue(LARGE_ICON, MailImageLoader.getIcon(\"email_edit.png\"));", "target": 0}
{"idx": 3443, "func": "If a newline from the previous character data remains, leave it around to be processed as if it appeared in the included file. //", "target": 0}
{"idx": 3444, "func": "i18n[SQLHistoryItemWrapper.sql=SQL]", "target": 0}
{"idx": 3445, "func": "src: o--------o sub: o----o res: o-----o Reuse src(=res)", "target": 0}
{"idx": 3446, "func": "//i18n[SQLScriptPreferencesPanel.updateRefActionCheckboxLabel=Add update //referential action to the FK definition]", "target": 0}
{"idx": 3447, "func": "i18n[rowDataInputFrame.insert=Insert]", "target": 0}
{"idx": 3448, "func": "add \"Uncategorized\" note", "target": 0}
{"idx": 3449, "func": "Set the EStructuralFeature attributes. //", "target": 0}
{"idx": 3450, "func": "Set the bounds so that we re-check when we get near the other end. //", "target": 0}
{"idx": 3451, "func": "Build the command", "target": 0}
{"idx": 3452, "func": "create css-stylesheet string", "target": 0}
{"idx": 3453, "func": "Open the session.", "target": 0}
{"idx": 3454, "func": "Show the user a dialog with a list of columns and ask them to select one or more columns to drop", "target": 0}
{"idx": 3455, "func": "State", "target": 0}
{"idx": 3456, "func": "Check method, path and query sent", "target": 0}
{"idx": 3457, "func": "Method body can only use 'return' statment type return control.", "target": 0}
{"idx": 3458, "func": "close Columba, if composer is only visible frame", "target": 0}
{"idx": 3459, "func": "//{{{ paste() method", "target": 0}
{"idx": 3460, "func": "Ignore this method as there is an addConfigured form of this method that has a higher priority", "target": 0}
{"idx": 3461, "func": "set model based on configuration", "target": 0}
{"idx": 3462, "func": "1E00..1EFF;", "target": 0}
{"idx": 3463, "func": "this helps a little", "target": 0}
{"idx": 3464, "func": "range = this.rangeAxis.getRange().getLength(); scaledRange = range percent; rangeAxis.setAnchoredRange(scaledRange);", "target": 0}
{"idx": 3465, "func": "if the condition is not already there...", "target": 0}
{"idx": 3466, "func": "build all other elements using existing buildNode", "target": 0}
{"idx": 3467, "func": "//We are not generating the manifest file if the plugin.xml exists. //", "target": 0}
{"idx": 3468, "func": "Add the header panel", "target": 0}
{"idx": 3469, "func": "Returns slot of variable", "target": 0}
{"idx": 3470, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.dialects.HibernateDialect#getMaxFunction()", "target": 0}
{"idx": 3471, "func": "further equivalence name of previous logical", "target": 0}
{"idx": 3472, "func": "default selection is local Inbox", "target": 0}
{"idx": 3473, "func": "Check if the mailbox has changed", "target": 0}
{"idx": 3474, "func": "delete() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 3475, "func": "Install direct java methods with mangled name so 'send' can call them directly.", "target": 0}
{"idx": 3476, "func": "i18n[generalPropertiesPanel.bottom=Bottom]", "target": 0}
{"idx": 3477, "func": "We found the uid of a deleted message -> remove it from the headerlist", "target": 0}
{"idx": 3478, "func": "List of all stubs & skels Earliest mod time Has each been found?", "target": 0}
{"idx": 3479, "func": "@see org.argouml.profile.Profile#getProfileIdentifier()", "target": 0}
{"idx": 3480, "func": "Just in case Clear any other remaining variables", "target": 0}
{"idx": 3481, "func": "activatorIntNo is now guaranteed not null", "target": 0}
{"idx": 3482, "func": "construct the name of executable file", "target": 0}
{"idx": 3483, "func": "check that entity id = requestedId", "target": 0}
{"idx": 3484, "func": "//Close the proper tab by clicking the button //addActionListener(this);", "target": 0}
{"idx": 3485, "func": "Look for duplicates among the generic super types. //", "target": 0}
{"idx": 3486, "func": "Special case for a reference to Ecore to ensure that flag settings are respected and are set only for Ecore itself. //", "target": 0}
{"idx": 3487, "func": "Check that other encoding is not the current encoding TODO - charset?", "target": 0}
{"idx": 3488, "func": "//////////////////////////////////////////////////////////", "target": 0}
{"idx": 3489, "func": "Not sure we can test anything else here", "target": 0}
{"idx": 3490, "func": "just the lines, no filling", "target": 0}
{"idx": 3491, "func": "-----------------------------------------------------------------------------------", "target": 0}
{"idx": 3492, "func": "fill in defaults for these from system properties if the corresponding buffer.XXX properties not set", "target": 0}
{"idx": 3493, "func": "Set the readOnly flag", "target": 0}
{"idx": 3494, "func": "number of this disk", "target": 0}
{"idx": 3495, "func": "set the var here in the block namespace", "target": 0}
{"idx": 3496, "func": "Count of nested parentheses (1.9 only)", "target": 0}
{"idx": 3497, "func": "nope ;-)", "target": 0}
{"idx": 3498, "func": "i18n[HelpViewerWindow.help=Help]", "target": 0}
{"idx": 3499, "func": "Use cmd.exe to change to the specified directory before running the command", "target": 0}
{"idx": 3500, "func": "write to temporary file", "target": 0}
{"idx": 3501, "func": "don't have to check for interface, since then taskClass would be abstract too.", "target": 0}
{"idx": 3502, "func": "min", "target": 0}
{"idx": 3503, "func": "//{{{ getOffsetOfVirtualColumn() method", "target": 0}
{"idx": 3504, "func": "//{{{ setupDefaultVariables() method", "target": 0}
{"idx": 3505, "func": "this probably means that the configuration is wrong -> change this to a sane default value", "target": 0}
{"idx": 3506, "func": "TODO: Make properties file Application.properties so we can use class name to generate properties file name.", "target": 1}
{"idx": 3507, "func": "root-level methods", "target": 0}
{"idx": 3508, "func": "//Kernel is the only Module that doesn't need an implementor", "target": 0}
{"idx": 3509, "func": "No", "target": 0}
{"idx": 3510, "func": "SERIES VISIBLE IN LEGEND (not yet respected by all renderers)", "target": 0}
{"idx": 3511, "func": "Fill 8 of value (byte) -19 Fill 2 of value (byte) 33 Fill 2 of value (byte) -19 Fill 2 of value (byte) 33 Fill 22 of value (byte) -19", "target": 0}
{"idx": 3512, "func": "//noop default encoding used", "target": 0}
{"idx": 3513, "func": "//{{{ RootsEntry class", "target": 0}
{"idx": 3514, "func": "I guess ideally all browsers should have views, but since they don't, we just use the active view in that case, since some actions depend on a view being there and I don't want to add checks to them all", "target": 0}
{"idx": 3515, "func": "figEdge.showHelp(role.getParsingHelp()); role.setText();", "target": 0}
{"idx": 3516, "func": "SORT", "target": 0}
{"idx": 3517, "func": "FIXME This function needs documentation @return Enumeration", "target": 1}
{"idx": 3518, "func": "TOP", "target": 0}
{"idx": 3519, "func": "let's test which situation we have. 3 Possibilities: 1. The nodes are already on the diagram, we can use canAddEdge for this. 2. One of the nodes is already on the diagram. The other has to be added. 3. Both of the nodes are not yet on the diagram. For the time being we will only implement situation 1. TODO: implement situation 2 and 3.", "target": 1}
{"idx": 3520, "func": "TODO: this needs to move into the renderer state", "target": 1}
{"idx": 3521, "func": "map a key to a new group", "target": 0}
{"idx": 3522, "func": "write text to file", "target": 0}
{"idx": 3523, "func": "The getEmailAddresses() might trigger a lazy load of the collection", "target": 0}
{"idx": 3524, "func": "----- Data Access", "target": 0}
{"idx": 3525, "func": "First step. Create the panel if not already done and options are available. Otherwise it retains its default value of null.", "target": 0}
{"idx": 3526, "func": "Instance variables (guarded by volatile)", "target": 0}
{"idx": 3527, "func": "All entries following removed node can stay in list, but all preceding ones need to be cloned.", "target": 0}
{"idx": 3528, "func": "no authority: use base's", "target": 0}
{"idx": 3529, "func": "Test sending data as UTF-8, with values that have been urlencoded, and where we tell the sampler to urlencode the parameter values", "target": 0}
{"idx": 3530, "func": "We need to close the out, since some processes would just wait for the stream to be closed before they process its content, and produce the output. E.g.: \"cat\".", "target": 0}
{"idx": 3531, "func": "computes the stack size variation. In order not to recompute several times this variation for the same Item, we use the intVal field of this item to store this variation, once it has been computed. More precisely this intVal field stores the sizes of the arguments and of the return value corresponding to desc.", "target": 0}
{"idx": 3532, "func": "setBackground(list.getSelectionBackground()); setForeground(list.getSelectionForeground());", "target": 0}
{"idx": 3533, "func": "//MappingPackage ePackage = ((FunctionNamePair)msg.getNotifier()).ePackageMapping();", "target": 0}
{"idx": 3534, "func": "create top-level configuration directory", "target": 0}
{"idx": 3535, "func": "//{{{ getMacroRecorder() method", "target": 0}
{"idx": 3536, "func": "//Reset list of sections", "target": 0}
{"idx": 3537, "func": "//trim off the length/precision/scale", "target": 0}
{"idx": 3538, "func": "already calculated already calculated", "target": 0}
{"idx": 3539, "func": "set the anchor value for the range axis...", "target": 0}
{"idx": 3540, "func": "//{{{ createWhiteSpace() method", "target": 0}
{"idx": 3541, "func": "since the flow layout is relatively straightforward, no information needs to be recorded here", "target": 0}
{"idx": 3542, "func": "@JRubyMethod(name = \"complex?\")", "target": 0}
{"idx": 3543, "func": "specify the exact parent of annotations", "target": 0}
{"idx": 3544, "func": "case 1 - object is mutable but not PublicCloneable", "target": 0}
{"idx": 3545, "func": "(non-Javadoc) Message Settings", "target": 0}
{"idx": 3546, "func": "log the error, ignore the change and continue", "target": 0}
{"idx": 3547, "func": "no need for trigger on \"specialization\"", "target": 0}
{"idx": 3548, "func": "oldFlags.setRecent(true); oldFlags.setFlagged(true); oldFlags.setExpunged(false);", "target": 0}
{"idx": 3549, "func": "Delete Stimulii which have this as their dispatchAction", "target": 0}
{"idx": 3550, "func": "//dont look for much text here as it is vendor and version dependent", "target": 0}
{"idx": 3551, "func": "/Expand the following for all defined TimePeriods:", "target": 0}
{"idx": 3552, "func": "no further processing", "target": 0}
{"idx": 3553, "func": "table list", "target": 0}
{"idx": 3554, "func": "//there is no web.xml file, so add it", "target": 0}
{"idx": 3555, "func": "GenericController sub_1 = new GenericController(); sub_1.addTestElement(new IfController(\"3==3\")); controller.addTestElement(sub_1); controller.addTestElement(new IfController(\"false==true\"));", "target": 0}
{"idx": 3556, "func": "Commons HttpClient only", "target": 0}
{"idx": 3557, "func": "Action to save a diagram as a GIF image in a supplied OutputStream. TODO: This requires Java 6 in its current state, so don't use. @author Tom Morris <tfmorris@gmail.com>", "target": 0}
{"idx": 3558, "func": "init Map", "target": 0}
{"idx": 3559, "func": "build the list of sources which are out of date with respect to the target", "target": 0}
{"idx": 3560, "func": "Hash table of attributes found in current start tag. //", "target": 0}
{"idx": 3561, "func": "NOTUSED String portname = pnode.getAttribute(\"name\"); used to check binding, but now it doesn't. it was failing when wsdl did not using binding as expected", "target": 0}
{"idx": 3562, "func": "returns Object covering both Long and Boolean return types", "target": 0}
{"idx": 3563, "func": "IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args", "target": 0}
{"idx": 3564, "func": "TODO: handle parse error", "target": 1}
{"idx": 3565, "func": "blanking the old action's shortcut.. and now refreshing the table.", "target": 0}
{"idx": 3566, "func": "@see org.argouml.uml.ui.SourcePathController#getSourcePathSettings()", "target": 0}
{"idx": 3567, "func": "This is the list of names of classes that: - support standard SQL type codes and thus do not need to be registered - provide the getControlPanel method to allow manipulation of properties These classes should all be named net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent.DataTypeXXXX because they are part of the standard delivery of the product, and thus should be local to this directory.", "target": 0}
{"idx": 3568, "func": "//use the id column alias", "target": 0}
{"idx": 3569, "func": "MRI behavior: for 'Q', do not add trailing nils", "target": 0}
{"idx": 3570, "func": "this didn't work // final int pos = getCaretPosition(); // final Document doc = _textArea.getStyledDocument(); // final Element docElem = doc.getDefaultRootElement(); // final Element lineElem = docElem.getElement(getCaretLineNumber()); // return lineElem.getElementIndex(pos);", "target": 0}
{"idx": 3571, "func": "//{{{ getJEditHome() method", "target": 0}
{"idx": 3572, "func": "super.collectNewChildDescriptors(newChildDescriptors, object);", "target": 0}
{"idx": 3573, "func": "the difficulty here is exactly what do we update in order to force the version to be incremented in the db...", "target": 0}
{"idx": 3574, "func": "promise to implement N with block", "target": 0}
{"idx": 3575, "func": "i18n[sqlval.clientBorder=Client]", "target": 0}
{"idx": 3576, "func": "do nothing, we should not delete the drive letter", "target": 0}
{"idx": 3577, "func": "Iteration variables, for the square root x and the reciprocal v initial x: x0 ~ sqrt() initial v: v0 = 1/(2x)", "target": 0}
{"idx": 3578, "func": "TODO: check for duplicates (is this possible???)", "target": 1}
{"idx": 3579, "func": "If there's only a single child (and we're it's only parent), set a hint for where to place it when we get to its row", "target": 0}
{"idx": 3580, "func": "Keep jdk 1.1 compliant so others can use this", "target": 0}
{"idx": 3581, "func": "builder.append(moreButton);", "target": 0}
{"idx": 3582, "func": "//TODO enable some proper tests!!", "target": 1}
{"idx": 3583, "func": "dimensionsNode can return either a fully intialized array or VOID. when VOID the prescribed array dimensions (defined and undefined) are contained in the node.", "target": 0}
{"idx": 3584, "func": "//Set the cell Width to the width of the header", "target": 0}
{"idx": 3585, "func": "//path expression", "target": 0}
{"idx": 3586, "func": "Hide save action during load. Otherwise we get the appearing in title bar and the save enabling as models are updated TODO: Do we still need this now the save enablement is improved?", "target": 1}
{"idx": 3587, "func": "TODO: These buttons for future enhancement: buttonPanel.add(configButton); buttonPanel.add(networkButton);", "target": 1}
{"idx": 3588, "func": "Close all buffers", "target": 0}
{"idx": 3589, "func": "Create the class static namespace", "target": 0}
{"idx": 3590, "func": "@see java.awt.event.FocusListener#focusLost(java.awt.event.FocusEvent)", "target": 0}
{"idx": 3591, "func": "Not sure if this is actually possible, but better safe than sorry", "target": 0}
{"idx": 3592, "func": "---- officeTextField ----", "target": 0}
{"idx": 3593, "func": "------------------------------------------- Constructors -------------------------------------------", "target": 0}
{"idx": 3594, "func": "we don't need to check for running commands here because there aren't any, shutdown plugins only use this thread", "target": 0}
{"idx": 3595, "func": "//{{{ MirrorModel class", "target": 0}
{"idx": 3596, "func": "// need to be called after search/replace to make some changes in the states", "target": 0}
{"idx": 3597, "func": "get meta's from <hibernate-mapping>", "target": 0}
{"idx": 3598, "func": "check if the mailbox already exists -> subscribe only", "target": 0}
{"idx": 3599, "func": "there might be more test classes in a single file, so we iterate over them", "target": 0}
{"idx": 3600, "func": "Handle the various methods", "target": 0}
{"idx": 3601, "func": "i18n[DriverWindowFactory.error.copyingdriver=Error occured copying the driver]", "target": 0}
{"idx": 3602, "func": "//{{{ _backup() method", "target": 0}
{"idx": 3603, "func": "-rmall -force", "target": 0}
{"idx": 3604, "func": "if no initial zoom point was set, ignore dragging...", "target": 0}
{"idx": 3605, "func": "//{{{ StatusBarOptionPane constructor", "target": 0}
{"idx": 3606, "func": "get message body", "target": 0}
{"idx": 3607, "func": "put implementation", "target": 0}
{"idx": 3608, "func": "message contains list of attachments", "target": 0}
{"idx": 3609, "func": "we set the classpath", "target": 0}
{"idx": 3610, "func": "below for UML 1.4 compatibility", "target": 0}
{"idx": 3611, "func": "i18n[userscript.dlgTabScriptsAdd=Add...]", "target": 0}
{"idx": 3612, "func": "The preference here would be SQLFunctionTemplate( Hibernate.TIMESTAMP, \"current_timestamp(?1)\", false) but this appears not to work. Jay Nance 2006-09-22", "target": 1}
{"idx": 3613, "func": "process all domain axes", "target": 0}
{"idx": 3614, "func": "Requires Java 7 $NON-NLS-1$", "target": 0}
{"idx": 3615, "func": "private DBUtils dbUtils;", "target": 0}
{"idx": 3616, "func": "For use by subclasses", "target": 0}
{"idx": 3617, "func": "Is an inner class style object allocation", "target": 0}
{"idx": 3618, "func": "Added this part to load the extra menu content", "target": 0}
{"idx": 3619, "func": "what to do?", "target": 0}
{"idx": 3620, "func": "Don't use \"real\" type. Axion sets the column size to 12 by default, yet it can handle more precision. So data being copied from the real column can potentially be larger than what the column claims to support. This will be a problem for other databases that pay attention to the column size. TODO: Perhaps re-introduce the REAL type, but use the new getPrecisionDigits to max out the precision.", "target": 1}
{"idx": 3621, "func": "//handle default specially by choosing the sun or kaffe compiler", "target": 0}
{"idx": 3622, "func": "perform the actual work", "target": 0}
{"idx": 3623, "func": "this object was already loaded", "target": 0}
{"idx": 3624, "func": "Which Charset shall we use ?", "target": 0}
{"idx": 3625, "func": "Regression for HARMONY-3869", "target": 0}
{"idx": 3626, "func": "i18n[popupeditableIoPanel.cannotFindFile=Cannot find file {0}\\nCheck file name and re-try export.]", "target": 0}
{"idx": 3627, "func": "override", "target": 0}
{"idx": 3628, "func": "i18n[codeCompletion.prefixConfig=Configure function completion for function name prefixes:]", "target": 0}
{"idx": 3629, "func": "---- calendarButton ----", "target": 0}
{"idx": 3630, "func": "//I can't get my head around this; is encoding treatment needed here?", "target": 1}
{"idx": 3631, "func": "local cache, so we use synchronization", "target": 0}
{"idx": 3632, "func": "The connection is not valid unless both nodes are in this graph model.", "target": 0}
{"idx": 3633, "func": "//(new AddCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));", "target": 0}
{"idx": 3634, "func": "//{{{ xToScreenLineOffset() method", "target": 0}
{"idx": 3635, "func": "this also sets the target as a convenient side effect", "target": 0}
{"idx": 3636, "func": "otherwise look up the shape list", "target": 0}
{"idx": 3637, "func": "//{{{ SelectallButton class", "target": 0}
{"idx": 3638, "func": "i18n[mysql.sureDropping=Are you sure?]", "target": 0}
{"idx": 3639, "func": "@see org.argouml.uml.reveng.ImportCommon#getImportLevel()", "target": 0}
{"idx": 3640, "func": "HELP MENU $NON-NLS-1$", "target": 0}
{"idx": 3641, "func": "@see java.lang.Object#clone()", "target": 0}
{"idx": 3642, "func": "//{{{ goToBufferEnd() method", "target": 0}
{"idx": 3643, "func": "should be an excluded segment", "target": 0}
{"idx": 3644, "func": "//{{{ unregisterService() method", "target": 0}
{"idx": 3645, "func": "///////////////////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 3646, "func": "SELECT TEXT_SEGMENT FROM IIVIEWS WHERE TABLE_NAME = <VIEWNAME> AND TABLE_OWNER = <SCHEMANAME>", "target": 0}
{"idx": 3647, "func": "//{{{ ShowRecentDirMenuItem class", "target": 0}
{"idx": 3648, "func": "This Hashtable maintains a list of EJB class files processed by the ejbc utility (both \"source\" class files as well as stubs and skeletons). The key for the Hashtable is a String representing the path to the class file (relative to the destination directory). The value for the Hashtable is a File object which reference the actual class file.", "target": 0}
{"idx": 3649, "func": "model -> view read configuration and set gui elements appropriately", "target": 0}
{"idx": 3650, "func": "JPanel bottom = new JPanel(); bottom.setBackground(backgroundColor); bottom.setLayout(new BorderLayout());", "target": 0}
{"idx": 3651, "func": "///////////////////////////////////////////////////////////////////////TargetListener methods implemented so notified when selected diagram changes. Used to update the window title.", "target": 0}
{"idx": 3652, "func": "check a regular value", "target": 0}
{"idx": 3653, "func": "no need to change the foreground color", "target": 0}
{"idx": 3654, "func": "i18n[SchemaPropertiesController.tableHeader.views=Views]", "target": 0}
{"idx": 3655, "func": "Original Dialect.java returns \" for update\";", "target": 0}
{"idx": 3656, "func": "line 1013", "target": 0}
{"idx": 3657, "func": "(non-Javadoc) @see javax.swing.table.TableModel#getValueAt(int, int)", "target": 0}
{"idx": 3658, "func": "if one or the other is null or they are not equal", "target": 0}
{"idx": 3659, "func": "wrapped iterators", "target": 0}
{"idx": 3660, "func": "A modelelement has been changed. Now we give it priority to be checked by the critics ASAP. TODO: why is is synchronised? TODO: what about when objects are first created? @param dm the design material @param reason the reason", "target": 1}
{"idx": 3661, "func": "RANGE / NONE", "target": 0}
{"idx": 3662, "func": "line 1387", "target": 0}
{"idx": 3663, "func": "---- managerTextField ----", "target": 0}
{"idx": 3664, "func": "Regression test for HARMONY-3656", "target": 0}
{"idx": 3665, "func": "Subclasses MUST override this function", "target": 0}
{"idx": 3666, "func": "TODO: doesn't putting this here mark the tree as saved even though a failure may occur later?", "target": 1}
{"idx": 3667, "func": "The next 3 functions override the base-class implementation of the DomainInfo interface. Using saved limits (updated by each updateTime() call), improves performance. //", "target": 0}
{"idx": 3668, "func": "Used for tiny smidgen of grammar in lexer (see setParserSupport())", "target": 0}
{"idx": 3669, "func": "//{{{ setDragAndDropCallback() method", "target": 0}
{"idx": 3670, "func": "//{{{ showWordCountDialog() method", "target": 0}
{"idx": 3671, "func": "MONTH VIEW TEST", "target": 0}
{"idx": 3672, "func": "Build the sql statement(s) to create the table", "target": 0}
{"idx": 3673, "func": "Handles things like: a and b or c a and ( b or c ) not a and not b not ( a and b ) x between y and z (overloaded \"and\") x in ( a, b, c ) (overloaded brackets) not not a a is not null (overloaded \"not\") etc...... and expressions like foo = bar (maps to: foo.id = bar.id) foo.Bar = 'foo' (maps to: foo.bar = 'foo') foo.Bar.Baz = 1.0 (maps to: foo.bar = bar.id and bar.baz = 1.0) 1.0 = foo.Bar.Baz (maps to: bar.baz = 1.0 and foo.Bar = bar.id) foo.Bar.Baz = a.B.C (maps to: bar.Baz = b.C and foo.Bar = bar.id and a.B = b.id) foo.Bar.Baz + a.B.C (maps to: bar.Baz + b.C and foo.Bar = bar.id and a.B = b.id) ( foo.Bar.Baz + 1.0 ) < 2.0 (maps to: ( bar.Baz + 1.0 ) < 2.0 and foo.Bar = bar.id)", "target": 0}
{"idx": 3674, "func": "Proxy can take some while to start up; show a wating cursor", "target": 0}
{"idx": 3675, "func": "keys to optional attributes", "target": 0}
{"idx": 3676, "func": "@see javax.swing.plaf.metal.MetalTheme#getSecondary2()", "target": 0}
{"idx": 3677, "func": "Check for property- and group-related texts:", "target": 0}
{"idx": 3678, "func": "Replace \"2009\" with Types.SQLXML when Java6 is the minimum supported version", "target": 0}
{"idx": 3679, "func": "Convert \"\" to \"0..\" instead of \"..\"", "target": 0}
{"idx": 3680, "func": "No point instantiating class", "target": 0}
{"idx": 3681, "func": "//{{{ getDragAndDropCallback() method", "target": 0}
{"idx": 3682, "func": "@see org.argouml.model.ModelImplementation#getModelManagementHelper()", "target": 0}
{"idx": 3683, "func": "Use the configuration if it exists, otherwise use what gef thinks.", "target": 0}
{"idx": 3684, "func": "//{{{ Sorting methods", "target": 0}
{"idx": 3685, "func": "Create an empty but initialized instance of a UML Comment. @return an initialized UML Comment instance. TODO: This needs an extra parameter to specify the model/extent where the new element should be created.", "target": 1}
{"idx": 3686, "func": "Closes an unused connection after an error and doesn't rethrow a possible SQLException @since Ant 1.7", "target": 0}
{"idx": 3687, "func": "//{{{ savePerspective() method", "target": 0}
{"idx": 3688, "func": "Draw the extra first-column image. //", "target": 0}
{"idx": 3689, "func": "IMPORTANT: put the buttons into the array in same order as their associated values defined for whereClauseUsage.", "target": 0}
{"idx": 3690, "func": "Notify listeners with the transaction sample result", "target": 0}
{"idx": 3691, "func": "check negative first argument", "target": 0}
{"idx": 3692, "func": "//{{{ translateKeyEvent() method", "target": 0}
{"idx": 3693, "func": "//make a nice little target area:", "target": 0}
{"idx": 3694, "func": "Promote character to Number type for these purposes", "target": 0}
{"idx": 3695, "func": "Testing: Does not fire. Conflict with CrNameConflict.", "target": 1}
{"idx": 3696, "func": "Fill 5 of value (byte) -19 Fill 2 of value (byte) 33", "target": 0}
{"idx": 3697, "func": "Is monitor $NON-NLS-1$", "target": 0}
{"idx": 3698, "func": "TODO: why are we duplicating the constants here, and then in File::Constants below? File::Constants is included in IO.", "target": 1}
{"idx": 3699, "func": "RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject", "target": 0}
{"idx": 3700, "func": "Configure the selector - only defaults are used", "target": 0}
{"idx": 3701, "func": "intercept", "target": 0}
{"idx": 3702, "func": "TODO: Check whether this is really needed. I think it's left over from an incomplete understanding of the MagicDraw composition error problem - tfm", "target": 1}
{"idx": 3703, "func": "//TODO: Parameterise ?? //Call compiler as class... dont want to fork again //Use classic compiler -- can be parameterised?", "target": 1}
{"idx": 3704, "func": "Parent is Element, but it has no attributes or associations to check checkElementCopy(e1, e2);", "target": 0}
{"idx": 3705, "func": "//{{{ readNextChar() method", "target": 0}
{"idx": 3706, "func": "load arguments into IRubyObject[] for dispatch", "target": 0}
{"idx": 3707, "func": "pops a block from the stack", "target": 0}
{"idx": 3708, "func": "TODO:", "target": 0}
{"idx": 3709, "func": "load block from [] version of method", "target": 0}
{"idx": 3710, "func": "//TODO: This is assertion is disabled because there is a bug that means the // original owner of a transient, uninitialized collection is not known // if the collection is re-referenced by a different object associated // with the current Session //throw new AssertionFailure(\"bug loading unowned collection\");", "target": 1}
{"idx": 3711, "func": "the test", "target": 0}
{"idx": 3712, "func": "Fill 12 of value (byte) -19", "target": 0}
{"idx": 3713, "func": "I'm not fond of this pattern: \"sub-method expected to throw task-cancelling exceptions\". It feels too much like programming for side-effects to me...", "target": 0}
{"idx": 3714, "func": "Or a feature map child? //", "target": 0}
{"idx": 3715, "func": "//{{{ Groups", "target": 0}
{"idx": 3716, "func": "An arbitrary attribute.", "target": 0}
{"idx": 3717, "func": "//getDefaultProperties().setProperty(Environment.STATEMENT_BATCH_SIZE, NO_BATCH);", "target": 0}
{"idx": 3718, "func": "FIXED / FIXED", "target": 0}
{"idx": 3719, "func": "newly created collections should be equal", "target": 0}
{"idx": 3720, "func": "MUST do this for background to show up.", "target": 0}
{"idx": 3721, "func": "can be only one", "target": 0}
{"idx": 3722, "func": "found a concrete subclass", "target": 0}
{"idx": 3723, "func": "go to another segment to continue test", "target": 0}
{"idx": 3724, "func": "Undo the MTF values for the selectors.", "target": 0}
{"idx": 3725, "func": "Register Alt-Down hotkey for moving up folder when folder tree or table have focus", "target": 0}
{"idx": 3726, "func": "Print the stacktrace to our log file.", "target": 0}
{"idx": 3727, "func": "//{{{ DirectoryListSet constructor", "target": 0}
{"idx": 3728, "func": "i18n[dataTypeDate.full=Full ({0})]", "target": 0}
{"idx": 3729, "func": "//real hacky... used to count the nesting of parentheses", "target": 1}
{"idx": 3730, "func": "restore tabbed pane parsed if needed", "target": 0}
{"idx": 3731, "func": "//{{{ shiftIndentRight() method", "target": 0}
{"idx": 3732, "func": "The cache of file packs - used to improve thread access", "target": 0}
{"idx": 3733, "func": "i18n[UpdatePreferencesTab.title=Update]", "target": 0}
{"idx": 3734, "func": "line 655", "target": 0}
{"idx": 3735, "func": "Jakarta Commons Logging listener. Note: do not use the SimpleLog as your logger implementation as it causes an infinite loop since it writes to System.err, which Ant traps and reroutes to the logger/listener layer. The following names are used for the log: org.apache.tools.ant.Project.PROJECT_NAME - for project events org.apache.tools.ant.Target.TARGET_NAME - for target events TASK_CLASS_NAME.TARGET_NAME - for events in individual targets. In all target and project names we replace \".\" and \" \" with \"-\". TODO: we should use the advanced context logging features (and expose them in c-l first :-) TODO: this is _very_ inefficient. Switching the out and tracking the logs can be optimized a lot - but may require few more changes to the core. @since Ant 1.5", "target": 1}
{"idx": 3736, "func": "additionalargs", "target": 0}
{"idx": 3737, "func": "Strip off drive letters! REVIEW Would a better check be \"(File.separator == '\\')\"?", "target": 0}
{"idx": 3738, "func": "message is already cached try to compare the headerfield count of the actually parsed message with the cached headerfield count", "target": 0}
{"idx": 3739, "func": "//i18n[WhereClausePanel.addLabel=Add]", "target": 0}
{"idx": 3740, "func": "LEFT POLYGON", "target": 0}
{"idx": 3741, "func": "add in front of the others add the label in front of the \"pane\"", "target": 0}
{"idx": 3742, "func": "//[i18n[OrderByClausePanel.hint=Order by clause for the selected table]", "target": 0}
{"idx": 3743, "func": "set the name of bulk accessor.", "target": 0}
{"idx": 3744, "func": "Notation allows to add or modify things, not remove. Hence, this does nothing:", "target": 0}
{"idx": 3745, "func": "adapter, tc, recv, args{0,1}, block{0,1}]", "target": 0}
{"idx": 3746, "func": "//final int _ignored = 1;", "target": 0}
{"idx": 3747, "func": "255.255.255.255", "target": 0}
{"idx": 3748, "func": "mnemonic found ...and not at the end of the string (which doesn't make sence)", "target": 0}
{"idx": 3749, "func": "ok and cancel buttons", "target": 0}
{"idx": 3750, "func": "//g2.clip(clipArea);", "target": 0}
{"idx": 3751, "func": "static helper methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 3752, "func": "//{{{ ThreadProgress class", "target": 0}
{"idx": 3753, "func": "setIconTextGap(5); setVerticalAlignment(JLabel.CENTER);", "target": 0}
{"idx": 3754, "func": "register for change of the frame mediator", "target": 0}
{"idx": 3755, "func": "Register the file, and read its content: //", "target": 0}
{"idx": 3756, "func": "if user wants to see ASCII chars as characters, see if this is one that should be displayed that way", "target": 0}
{"idx": 3757, "func": "line visible", "target": 0}
{"idx": 3758, "func": "@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)", "target": 0}
{"idx": 3759, "func": "TODO: This try-catch will be needed once the code below is improved.", "target": 1}
{"idx": 3760, "func": "do nothing if clicked \"foo (showing n occurrences in m files)\"", "target": 0}
{"idx": 3761, "func": "//Cope with a continued path expression (ie. ].baz)", "target": 0}
{"idx": 3762, "func": "get flags of message", "target": 0}
{"idx": 3763, "func": "all tick labels have the same width (equal to the height of the font)...", "target": 0}
{"idx": 3764, "func": "Hack to ensure charset is set correctly at start-up", "target": 0}
{"idx": 3765, "func": "we have a file. create a stream for it", "target": 0}
{"idx": 3766, "func": "if the caret is on a collapsed fold, collapse the parent fold", "target": 0}
{"idx": 3767, "func": "//////////////////////////////////////////////////////////Implementation of the ActionListener-Interface. ////////////////////////////////////////////////////////////", "target": 0}
{"idx": 3768, "func": "only handle structured selections", "target": 0}
{"idx": 3769, "func": "Parse as an attribute=value:", "target": 0}
{"idx": 3770, "func": "i18n[UpdateSummaryDialog.applyLabel=Apply Changes]", "target": 0}
{"idx": 3771, "func": "delete source message", "target": 0}
{"idx": 3772, "func": "Close for real so that the temporary file is ready to be read. //", "target": 0}
{"idx": 3773, "func": "Check for {} tomfoolery", "target": 0}
{"idx": 3774, "func": "catalog schema tableName columnName keySequence pkName", "target": 0}
{"idx": 3775, "func": "@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)", "target": 0}
{"idx": 3776, "func": "@see java.awt.event.ComponentListener#componentHidden(java.awt.event.ComponentEvent)", "target": 0}
{"idx": 3777, "func": "we have not yet hit the last result...", "target": 0}
{"idx": 3778, "func": "//{{{ isQuickCopyEnabled() method", "target": 0}
{"idx": 3779, "func": "TODO deprecate (since getPluginClass() is no longer called) //", "target": 1}
{"idx": 3780, "func": "The notification for this list is being thrown by the delegating list //", "target": 0}
{"idx": 3781, "func": "//getLayerManager().getActiveLayer().paint(g);", "target": 0}
{"idx": 3782, "func": "may be altered in validateAttributes", "target": 0}
{"idx": 3783, "func": "close the output file if required", "target": 0}
{"idx": 3784, "func": "sets active = true", "target": 0}
{"idx": 3785, "func": "if src and dest dirs are the same, require the extension to be set, so we don't stomp every file. One could still include a file with the same extension, but ....", "target": 0}
{"idx": 3786, "func": "@see org.argouml.uml.diagram.ui.UMLDiagram#getOwner()", "target": 0}
{"idx": 3787, "func": "Function does not exist, so treat as per missing variable", "target": 0}
{"idx": 3788, "func": "// toListModel.clear(); // ccListModel.clear(); // bccListModel.clear();", "target": 0}
{"idx": 3789, "func": "Remove old right side", "target": 0}
{"idx": 3790, "func": "//not included, do nothing", "target": 0}
{"idx": 3791, "func": "Delete all SignalEvents which have this as the signal", "target": 0}
{"idx": 3792, "func": "// protected List extendsQueue;", "target": 0}
{"idx": 3793, "func": "$@: error position", "target": 0}
{"idx": 3794, "func": "(non-Javadoc) @see org.apache.jmeter.visualizers.SamplerResultTab#clearData()", "target": 0}
{"idx": 3795, "func": "$NON-NLS-1$ default value: 60 secs", "target": 0}
{"idx": 3796, "func": "generally we can just use the same login for both servers", "target": 0}
{"idx": 3797, "func": "----------------------------------------------------------------", "target": 0}
{"idx": 3798, "func": "special handling of operations while editing Strings", "target": 0}
{"idx": 3799, "func": "no more matches - append rest of string", "target": 0}
{"idx": 3800, "func": "check if the user entered valid data", "target": 0}
{"idx": 3801, "func": "//{{{ selectToMatchingBracket() method", "target": 0}
{"idx": 3802, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider#setDestSelectedDatabaseObject(net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo)", "target": 0}
{"idx": 3803, "func": "ignore; job was cancelled FIXME: Is this ok?", "target": 1}
{"idx": 3804, "func": "//{{{ literalBeanShellReplace() method", "target": 0}
{"idx": 3805, "func": "//{{{ getFirstLine() method", "target": 0}
{"idx": 3806, "func": "i18n[graph.addParentTables=Add parent tables]", "target": 0}
{"idx": 3807, "func": "-- Buttons", "target": 0}
{"idx": 3808, "func": "Remove this diagram from existence. TODO: Move to GEF", "target": 1}
{"idx": 3809, "func": "since base must be hierarchical, and since a non-hierarchical URI must have both scheme and opaque part, the complete absolute URI is needed to resolve to a non-hierarchical URI", "target": 0}
{"idx": 3810, "func": "check empty dataset", "target": 0}
{"idx": 3811, "func": "Init Plugins", "target": 0}
{"idx": 3812, "func": "//{{{ Layers", "target": 0}
{"idx": 3813, "func": "width is OK, but height must be constrained", "target": 0}
{"idx": 3814, "func": "centerpanel", "target": 0}
{"idx": 3815, "func": "Get list of all plugin developers names. Allow for multiple developers for a plugin in the form \"John Smith, James Brown\".", "target": 0}
{"idx": 3816, "func": "Allocate more space in the buffer.", "target": 0}
{"idx": 3817, "func": "register for configuration changes", "target": 0}
{"idx": 3818, "func": "Y1", "target": 0}
{"idx": 3819, "func": "Test that there are now 4 X points", "target": 0}
{"idx": 3820, "func": "//{{{ DirectoryEntryCompare class", "target": 0}
{"idx": 3821, "func": "i18n[IndexDetailsTab.hint=Display index details]", "target": 0}
{"idx": 3822, "func": "//{{{ setProperties() method", "target": 0}
{"idx": 3823, "func": "Remember the parameters for the compilation.", "target": 0}
{"idx": 3824, "func": "1. Make sure all Figs in the Diagrams layer refer back to that layer.", "target": 0}
{"idx": 3825, "func": "@see org.tigris.gef.graph.MutableGraphModel#addNode(java.lang.Object)", "target": 0}
{"idx": 3826, "func": "for non-arrays, we don't need to know the element class //elementType.returnedClass();", "target": 0}
{"idx": 3827, "func": "For some reason, when the Oracle plugin adds details tabs for triggers, the _tabPnl's first tab ends up being the trigger details tab and not the generic database object info tab. This causes the _tabs length to be 1 tab greater than the tabs that are actually in the _tabPnl. This throws off the selection such that the tab selected in the tab panel doesn't get rendered until the tab to the right of the selected tab is selected. This is a work-around for this problem until I can determine why the DatabaseObjectInfoTab never makes it into the _tabPnl in the first place.", "target": 1}
{"idx": 3828, "func": "try key index == itemCount", "target": 0}
{"idx": 3829, "func": "TODO: Cyclic dependency between PersistanceManager and here", "target": 1}
{"idx": 3830, "func": "callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 3831, "func": "Create the renderer", "target": 0}
{"idx": 3832, "func": "If backups is 1, create ~ file", "target": 0}
{"idx": 3833, "func": "//{{{ removeActionSet() method", "target": 0}
{"idx": 3834, "func": "i18n[oracle.diskReads=Disk Reads]", "target": 0}
{"idx": 3835, "func": "If we get to here, there must be an InputStream available.", "target": 0}
{"idx": 3836, "func": "...and shift the result back to the left (multiply by 10(abs(scale)))", "target": 0}
{"idx": 3837, "func": "remove all instances of the offending char", "target": 0}
{"idx": 3838, "func": "TODO: Need UML 2.x equivalent", "target": 1}
{"idx": 3839, "func": "Don't use default for saving tristates element.setProperty(TCPSampler.CLOSE_CONNECTION, closeConnection.isSelected(), TCPSampler.CLOSE_CONNECTION_DEFAULT);", "target": 0}
{"idx": 3840, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getTitle()", "target": 0}
{"idx": 3841, "func": "----- Ruby Class Methods ----------------------------------------------------", "target": 0}
{"idx": 3842, "func": "1. a noneditable applied profile", "target": 0}
{"idx": 3843, "func": "ensure map can be used by multiple threads", "target": 0}
{"idx": 3844, "func": "An individual 3 digit number", "target": 0}
{"idx": 3845, "func": "Just a plain bang", "target": 0}
{"idx": 3846, "func": "//$NON-NLS-1$ See TestElementPropertyConverter", "target": 0}
{"idx": 3847, "func": "Add the offset", "target": 0}
{"idx": 3848, "func": "add contact to addressbook", "target": 0}
{"idx": 3849, "func": "i18n[laf.tabTitle=Fonts]", "target": 0}
{"idx": 3850, "func": "Record in log as well", "target": 0}
{"idx": 3851, "func": "line 420", "target": 0}
{"idx": 3852, "func": "if not wrappered yet, its dirty (this can't occur, because we now always call wrap() before getting to here) return ( ! (obj instanceof PersistentCollection) ) ? //true : searchForDirtyCollections( (PersistentCollection) obj, type );", "target": 0}
{"idx": 3853, "func": "update the HeaderList", "target": 0}
{"idx": 3854, "func": "setup to, references and account", "target": 0}
{"idx": 3855, "func": "//{{{ InputPane class", "target": 0}
{"idx": 3856, "func": "Nice, we've got a connection. Finish sending the request:", "target": 0}
{"idx": 3857, "func": "Use the Runtime object to execute an external command. Use the RedirectOutput inner class to direct the standard and error output from the command to the JRE's standard output", "target": 0}
{"idx": 3858, "func": "TODO: add and delete not currently supported $NON-NLS-1$", "target": 1}
{"idx": 3859, "func": "Define whether or not to use Timestamp in internally generated WHERE clauses, and if so what format to use.", "target": 0}
{"idx": 3860, "func": "form integral number of 6-bit groups", "target": 0}
{"idx": 3861, "func": "client", "target": 0}
{"idx": 3862, "func": "Test sending data as UTF-8, with values similar to __VIEWSTATE parameter that .net uses", "target": 0}
{"idx": 3863, "func": "Save the current UI defaults.", "target": 0}
{"idx": 3864, "func": "Remove the ending separator and whitespace, if any exist", "target": 0}
{"idx": 3865, "func": "TODO: we really want to be able replace the initial content handler which is passed to SAX, but we can't do this without cloning a whole bunch of code because it's private in the super class.", "target": 1}
{"idx": 3866, "func": "//{{{ setHighlightInterval() method", "target": 0}
{"idx": 3867, "func": "//RFC 2732 added '[' and ']' as reserved characters", "target": 0}
{"idx": 3868, "func": "This is a tool window.", "target": 0}
{"idx": 3869, "func": "store the following character", "target": 0}
{"idx": 3870, "func": "create a dataset...", "target": 0}
{"idx": 3871, "func": "greater", "target": 0}
{"idx": 3872, "func": "used by compiler", "target": 0}
{"idx": 3873, "func": "add the group arguments", "target": 0}
{"idx": 3874, "func": "Unused methods - this is not a real dialog, just a fake.", "target": 0}
{"idx": 3875, "func": "//{{{ splitHorizontally() method", "target": 0}
{"idx": 3876, "func": "icons putValue(SMALL_ICON, ImageLoader.getSmallImageIcon(\"mail-read.png\")); putValue(LARGE_ICON, ImageLoader.getImageIcon(\"mail-read.png\"));", "target": 0}
{"idx": 3877, "func": "TODO: Refresh", "target": 1}
{"idx": 3878, "func": "i18n[cellDataPopUp.conversionError=Conversion Error]", "target": 0}
{"idx": 3879, "func": "//{{{ getAbbrevField() method", "target": 0}
{"idx": 3880, "func": "--- SECURITY PANEL ----------------------------------------------", "target": 0}
{"idx": 3881, "func": "Leave logging commented out by default for efficiency LOG.debug(\"determine rendering for: \" + value); LOG.debug(\"show icon: \" + showIcon);", "target": 0}
{"idx": 3882, "func": "Highlight (select) the appropriate rows.", "target": 0}
{"idx": 3883, "func": "get header from folder", "target": 0}
{"idx": 3884, "func": "Proc.new needs the caller's block to instantiate a proc", "target": 0}
{"idx": 3885, "func": "i18n[userscript.execOnTargets=Execute script on selected targets]", "target": 0}
{"idx": 3886, "func": "There needs to be another URL protocol right after the archive protocol, and not a \"/\". //", "target": 0}
{"idx": 3887, "func": "@see org.argouml.profile.internal.ocl.uml14.Bag#count(java.lang.Object)", "target": 0}
{"idx": 3888, "func": "When str starts with a File.separator, pattern has to start with a File.separator. When pattern starts with a File.separator, str has to start with a File.separator.", "target": 0}
{"idx": 3889, "func": "Create an extent and read in our metamodel (M2 model)", "target": 0}
{"idx": 3890, "func": "rangeAxis...", "target": 0}
{"idx": 3891, "func": "EntityNotFoundDelegate", "target": 0}
{"idx": 3892, "func": "Oracle stores time information in java.sql.Types.Date columns This tells Oracle that we are only talking about the date part.", "target": 0}
{"idx": 3893, "func": "Check for no property", "target": 0}
{"idx": 3894, "func": "Match all", "target": 0}
{"idx": 3895, "func": "TODO: Something might go wrong during processing. We don't really want to create the model element until the user releases the mouse in the place expected.", "target": 1}
{"idx": 3896, "func": "//contentLength > 0 ? contentLength : DEFAULT_INITIAL_BUFFER_SIZE);", "target": 0}
{"idx": 3897, "func": "The name of the property used to hold our data //$NON-NLS-1$", "target": 0}
{"idx": 3898, "func": "we need to collect all methods, though we'll only install the ones that are named in this class", "target": 0}
{"idx": 3899, "func": "Add support for Cp1252 and its friends", "target": 0}
{"idx": 3900, "func": "ConnectionManager.Callback implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 3901, "func": "Toolbar", "target": 0}
{"idx": 3902, "func": "@see org.argouml.model.ExtensionMechanismsFactory#createTaggedValue()", "target": 0}
{"idx": 3903, "func": "DROP-DOWN MENU", "target": 0}
{"idx": 3904, "func": "popen callers wants to be able to read, provide subprocess in directly", "target": 0}
{"idx": 3905, "func": "Cannot find the file locally, so try the bin directory", "target": 0}
{"idx": 3906, "func": "// _tb.add(actions.get(ShowLoadedDriversOnlyAction.class));", "target": 0}
{"idx": 3907, "func": "Selects the distinct values from the source column.", "target": 0}
{"idx": 3908, "func": "By default, NO_FLUSH", "target": 0}
{"idx": 3909, "func": "TODO: If ActionCopy is no longer a singleton, how shall this work?", "target": 1}
{"idx": 3910, "func": "End of block", "target": 0}
{"idx": 3911, "func": "legendLine", "target": 0}
{"idx": 3912, "func": "Create a variable dir that contains the name of the StarTeam folder that is the root folder in this view. Get the default path to the current view.", "target": 0}
{"idx": 3913, "func": "if there is a comment with start position > rangeStartPos", "target": 0}
{"idx": 3914, "func": "4.5.2.8 Binding", "target": 0}
{"idx": 3915, "func": "Needed the \"clazz_\" check to work around union-subclasses TODO : is there a way to tell whether a persister is truly discrim-column based inheritence?", "target": 1}
{"idx": 3916, "func": "//if there were no main targets, we list all subtargets //as it means nothing has a description", "target": 0}
{"idx": 3917, "func": "look for applets", "target": 0}
{"idx": 3918, "func": "EATM This might be better written as a single loop for the EObject case? //", "target": 1}
{"idx": 3919, "func": "If we outgrow our pushback stack then grow it (this should only happen in pretty pathological cases).", "target": 1}
{"idx": 3920, "func": "Found at least one matching method but couldn't use", "target": 0}
{"idx": 3921, "func": "the text was: {frozen = false}", "target": 0}
{"idx": 3922, "func": "If we can't create a temp file then we have to ignore the option.", "target": 0}
{"idx": 3923, "func": "register default options", "target": 0}
{"idx": 3924, "func": "will be handled later. see comments at the end of transactionComplete().", "target": 0}
{"idx": 3925, "func": "//remember the uk value", "target": 0}
{"idx": 3926, "func": "See below for reason for this change. Just in case this causes problems, allow the change to be backed out", "target": 0}
{"idx": 3927, "func": "let the user know what happened", "target": 0}
{"idx": 3928, "func": "load filename and command with previously entered info if not the default", "target": 0}
{"idx": 3929, "func": "maximum pause to use", "target": 0}
{"idx": 3930, "func": "//FB The following method is copied from com.ibm.etools.b2b.util.StringUtility //FB because the mapping framework cannot have a dependency on b2b. What we really //FB need to do is get methods like this moved to vabase so that everyone can //FB use them. change all occurrences of oldPat to newPat", "target": 0}
{"idx": 3931, "func": "TODO does not work yet; need to determine the sample type", "target": 1}
{"idx": 3932, "func": "presumably this require should fail", "target": 0}
{"idx": 3933, "func": "set of characters to be ignored by the scanner", "target": 0}
{"idx": 3934, "func": "one-dimensional array", "target": 0}
{"idx": 3935, "func": "Allow functions etc to register for testStopped notification. Only used by the function parser so far. The list is merged with the testListeners and then cleared.", "target": 0}
{"idx": 3936, "func": "Calculate the EOL string per the current config", "target": 0}
{"idx": 3937, "func": "//DatabaseObjectType.UDT_TYPE_DBO=UDT Type", "target": 0}
{"idx": 3938, "func": "//$NON-NLS-1$//$NON-NLS-2$//$NON-NLS-3$ //$NON-NLS-1$", "target": 0}
{"idx": 3939, "func": "seek to force underlying buffer to flush", "target": 0}
{"idx": 3940, "func": "... and the token could be an identifer and the error is a mismatched token error ...", "target": 0}
{"idx": 3941, "func": "resetting the stylesheet - reset transformer", "target": 0}
{"idx": 3942, "func": "JMenu options = (JMenu) menuBar.add(new JMenu(\"Options\")); options.setMnemonic('O');", "target": 0}
{"idx": 3943, "func": "//{{{ Action methods", "target": 0}
{"idx": 3944, "func": "A datastructure for settings for a Project. <p> Most getters return a string, since they are used by \"argo.tee\". This is also the reason all these attributes are not part of a Map or something. <p> TODO: The header comment is currently not used - this function is not completely implemented yet. How do we store this in the project? Where should the user enter his header comment? See issue 4813. @author michiel", "target": 1}
{"idx": 3945, "func": "Extrapolating from: \"NetWare may have a \"java\" in that directory, but 99% of the time, you don't want to execute it\" -- Jeff Tulley <JTULLEY@novell.com>", "target": 0}
{"idx": 3946, "func": "//{{{ KeywordMap constructor", "target": 0}
{"idx": 3947, "func": "//{{{ getStringCase() method", "target": 0}
{"idx": 3948, "func": "Construct the top-level execution frame and scope for the main thread", "target": 0}
{"idx": 3949, "func": "//error if both are empty, or both are set", "target": 0}
{"idx": 3950, "func": "see if the entry represents a class file", "target": 0}
{"idx": 3951, "func": "Provide Random numbers to whomever wants one", "target": 0}
{"idx": 3952, "func": "map of DBMS-specific registered data handlers. The key is a string of the form: <SQL type as a string>:<SQL type name> and the value is a factory that can create instances of DBMS-specific DataTypeComponets.", "target": 0}
{"idx": 3953, "func": "//is derived from properties only", "target": 0}
{"idx": 3954, "func": "enable all radio buttons", "target": 0}
{"idx": 3955, "func": "substitute result of matching the rule start into the end string. eg, in shell script mode, <<\\s(\\w+) is matched into \\<$1\\> to construct rules for highlighting read-ins like this <<EOF ... EOF", "target": 0}
{"idx": 3956, "func": "i18n[exportconfig.errorResolvingFile=Error resolving file name]", "target": 0}
{"idx": 3957, "func": "A HTTP POST request, multipart/form-data, simple values, with \\n as end of line, which should also be handled, and with more headers in each multipart", "target": 0}
{"idx": 3958, "func": "Configured outside of Hibernate (i.e. Servlet container, or Java Bean Container already has Proxool pools running, and this provider is to just borrow one of these", "target": 0}
{"idx": 3959, "func": "In UML a message could have an Action. In UML2 it never does.", "target": 0}
{"idx": 3960, "func": "Assumes some kind of list is used", "target": 0}
{"idx": 3961, "func": "//important!!", "target": 0}
{"idx": 3962, "func": "Copy the children references //", "target": 0}
{"idx": 3963, "func": "so we don't generate chunked encoding", "target": 0}
{"idx": 3964, "func": "noDataMessagePaint", "target": 0}
{"idx": 3965, "func": "Compare if the value has changed, since we received focus.", "target": 0}
{"idx": 3966, "func": "line 332", "target": 0}
{"idx": 3967, "func": "Simulate some errors to repair. Replace with junits - Bob", "target": 0}
{"idx": 3968, "func": "NOTREAD $NON-NLS-1$", "target": 0}
{"idx": 3969, "func": "no variable initialization, because we're reusing parent's scope (flat)", "target": 0}
{"idx": 3970, "func": "// _session = session;", "target": 0}
{"idx": 3971, "func": "//{{{ resetLastActionCount() method", "target": 0}
{"idx": 3972, "func": "nothing required", "target": 0}
{"idx": 3973, "func": "Determine the position to place the new internal frame. Ensure that the right end of the internal frame doesn't exend past the right end the parent frame. Use a fudge factor as the dim.width doesn't appear to get the final width of the internal frame (e.g. where pt.x + dim.width == parentBounds.width, the new internal frame still extends past the right end of the parent frame).", "target": 0}
{"idx": 3974, "func": "PERSISTER", "target": 0}
{"idx": 3975, "func": "//{{{ WindowCompare class", "target": 0}
{"idx": 3976, "func": ".setPosFrom($2);", "target": 0}
{"idx": 3977, "func": "Do not allow a drop on the drag source selections.", "target": 0}
{"idx": 3978, "func": "Number of subexpressions in this token.", "target": 0}
{"idx": 3979, "func": "Backup directories", "target": 0}
{"idx": 3980, "func": "Check that optional args work woth long options", "target": 0}
{"idx": 3981, "func": "We just add placeholder text for file content $NON-NLS-1$ Write the end of multipart file", "target": 0}
{"idx": 3982, "func": "Update the containing map, if necessary. //", "target": 0}
{"idx": 3983, "func": "The suite() method creates separate test suites for each of the types of test. The suitexxx() methods create a list of items to be tested, and create a new test instance for each. Each test type has its own constructor, which saves the item to be tested Note that the suite() method must be static, and the methods to run the tests must be instance methods so that they can pick up the item value which was saved by the constructor.", "target": 0}
{"idx": 3984, "func": "other options setter", "target": 0}
{"idx": 3985, "func": "//{{{ getListModel() method", "target": 0}
{"idx": 3986, "func": "RDMS supports the UNION ALL clause.", "target": 0}
{"idx": 3987, "func": "line 727", "target": 0}
{"idx": 3988, "func": "(non-Javadoc) @see org.columba.core.profiles.IProfileManager#getProfile(java.lang.String)", "target": 0}
{"idx": 3989, "func": "//patch the redirector to save output to a file", "target": 0}
{"idx": 3990, "func": "Force the LAF to be set even if Tonic is the current one. This allows changes to take affect.", "target": 0}
{"idx": 3991, "func": "map selection to this temporary message", "target": 0}
{"idx": 3992, "func": "Find the create method in the offical API", "target": 0}
{"idx": 3993, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsSubqueriesInQuantifieds()", "target": 0}
{"idx": 3994, "func": "======== contentPane ========", "target": 0}
{"idx": 3995, "func": "get selected row", "target": 0}
{"idx": 3996, "func": "Only for use by CSVSaveService", "target": 0}
{"idx": 3997, "func": "TODO: not implemented", "target": 1}
{"idx": 3998, "func": "//the load() which takes an entity does not pass an entityName", "target": 0}
{"idx": 3999, "func": "OUTLINE STROKE", "target": 0}
{"idx": 4000, "func": "Char buffer for HTML data", "target": 0}
{"idx": 4001, "func": "//{{{ getBufferLength() method", "target": 0}
{"idx": 4002, "func": "we're doing this for testing only, and make sure that we only add data in descending order by x-value", "target": 0}
{"idx": 4003, "func": "Restart file", "target": 0}
{"idx": 4004, "func": "update the label (which shows the number of rules)", "target": 0}
{"idx": 4005, "func": "user is ok with overwriting file We do not need to do anything special to overwrite (as opposed to appending) since the OutputString starts at the beginning of the file by default.", "target": 0}
{"idx": 4006, "func": "Handle methods which return opaque objects", "target": 0}
{"idx": 4007, "func": "see if file exists", "target": 0}
{"idx": 4008, "func": "unwrap Primitive.Null to null", "target": 0}
{"idx": 4009, "func": "grrr, arghh, want to subclass sun.misc.FloatingDecimal, but can't, so we must do all this (the next 70 lines of code), which has already been done by FloatingDecimal.", "target": 1}
{"idx": 4010, "func": "// return \"select CURRENT_TIMESTAMP from RDB$DATABASE\";", "target": 0}
{"idx": 4011, "func": "Check if we are still sampling our children", "target": 0}
{"idx": 4012, "func": "Set the JvmArgs", "target": 0}
{"idx": 4013, "func": "viewDefSql is the SQL that can be used to query the data dictionary for the body of a view. This should exclude the \"CREATE VIEW <viewname> AS\" prefix and just return the query.", "target": 0}
{"idx": 4014, "func": "//discard most of really big resources", "target": 0}
{"idx": 4015, "func": "Directory size never selected for", "target": 0}
{"idx": 4016, "func": "ensure always \\r\\n", "target": 0}
{"idx": 4017, "func": "arity ok, continue", "target": 0}
{"idx": 4018, "func": "set the auth. thanks to KiYun Roe for contributing the patch I cleaned up the patch slightly. 5-26-05", "target": 0}
{"idx": 4019, "func": "i18n[OraclePluginPreferencesPanel.sessionTimezoneLabel=Initialize Session Timezone]", "target": 0}
{"idx": 4020, "func": "//{{{ buildToVersion() method", "target": 0}
{"idx": 4021, "func": "Do not send subsamples to listeners which receive the transaction sample", "target": 0}
{"idx": 4022, "func": "local variables | target obj | each oldvalue |", "target": 0}
{"idx": 4023, "func": "Normal case.", "target": 0}
{"idx": 4024, "func": "All implementations extend TestElement", "target": 0}
{"idx": 4025, "func": "@see org.argouml.uml.reveng.ImportSettingsInternal#isDiagramLayoutSelected()", "target": 0}
{"idx": 4026, "func": "pick up headers if failed to execute the request", "target": 0}
{"idx": 4027, "func": "add to \"Uncategorized\" node", "target": 0}
{"idx": 4028, "func": "TODO Document the reason for this", "target": 1}
{"idx": 4029, "func": "Folder within plugins folder that belongs to this plugin.", "target": 0}
{"idx": 4030, "func": "Retrieve the value of the designated column in the current row of this ResultSet object as a java.io.Reader object", "target": 0}
{"idx": 4031, "func": "Piece of mri rb_to_id", "target": 0}
{"idx": 4032, "func": "select the appropriate tree node.", "target": 0}
{"idx": 4033, "func": "//{{{ goTo() method", "target": 0}
{"idx": 4034, "func": "if the end is on 00:00:00, round it to 23:59:59.999", "target": 0}
{"idx": 4035, "func": "define access methods.", "target": 0}
{"idx": 4036, "func": "isValidNCName(String):boolean", "target": 0}
{"idx": 4037, "func": "Behavioral Feature 4.5.3.5 [2]", "target": 0}
{"idx": 4038, "func": "//we arent fully defined yet. this is an error unless //we are in an antlib, in which case the resource name is determined //automatically. //NB: URIs in the ant core package will be \"\" at this point.", "target": 0}
{"idx": 4039, "func": "actual type does not exactly match method return type, re-get converter FIXME: when the only autoconversions are primitives, this won't be needed", "target": 1}
{"idx": 4040, "func": "alter table test drop constraint u_test", "target": 0}
{"idx": 4041, "func": "Implementation Vendor ID must match", "target": 0}
{"idx": 4042, "func": "in the following code, barL0 is (in Java2D coordinates) the LEFT end of the bar for a horizontal bar chart, and the TOP end of the bar for a vertical bar chart. Whether this is the BASE of the bar or not depends also on (a) whether the data value is 'negative' relative to the base value and (b) whether or not the range axis is inverted. This only matters if/when we apply the minimumBarLength attribute, because we should extend the non-base end of the bar", "target": 0}
{"idx": 4043, "func": "//process a token, mapping OO path expressions to SQL expressions", "target": 0}
{"idx": 4044, "func": "//{{{ File types", "target": 0}
{"idx": 4045, "func": "i18n[SchemaPropertiesController.tableHeader.schema=Schema]", "target": 0}
{"idx": 4046, "func": "don't need to do anything", "target": 0}
{"idx": 4047, "func": "no such luck...", "target": 0}
{"idx": 4048, "func": "//init the table here instead of earlier, so that we can get a quoted table name //TODO: would it be better to simply pass the qualified table name, instead of splitting it up into schema/catalog/table names", "target": 1}
{"idx": 4049, "func": "This file is a zip; it needs to be extracted into the install directory. All zips are packaged in such a way that the extraction beneath install directory is all that is required.", "target": 0}
{"idx": 4050, "func": "//{{{ createSearchSettingsPanel() method", "target": 0}
{"idx": 4051, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#supportsSavepoints()", "target": 0}
{"idx": 4052, "func": "i18n[CancelStatementThread.closeFailed=Failed to close statement. Propably the driver/RDDBMS does not support canceling statements. See logs for further details ({0})]", "target": 0}
{"idx": 4053, "func": "RectangleInsets is immutable => same reference in clone OK", "target": 0}
{"idx": 4054, "func": "semantic action handling ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 4055, "func": "Command line execution methods", "target": 0}
{"idx": 4056, "func": "Prepare dialog box", "target": 0}
{"idx": 4057, "func": "and as a string", "target": 0}
{"idx": 4058, "func": "//{{{ getSelectionStartEndOnLine() method", "target": 0}
{"idx": 4059, "func": "//)", "target": 0}
{"idx": 4060, "func": "implemented in all originally supported dialects", "target": 0}
{"idx": 4061, "func": "//{{{ getListener() method", "target": 0}
{"idx": 4062, "func": "Populate up to shorter of calling arguments or local parameters in the block", "target": 0}
{"idx": 4063, "func": "deassert b_FastForward (only matters for 1st time through loop)", "target": 0}
{"idx": 4064, "func": "line 1809", "target": 0}
{"idx": 4065, "func": "create xml node", "target": 0}
{"idx": 4066, "func": "//{{{ setModel() method", "target": 0}
{"idx": 4067, "func": "TODO do we need to add a charset for the file contents? $NON-NLS-1$", "target": 1}
{"idx": 4068, "func": "//{{{ getDisplayManager() method", "target": 0}
{"idx": 4069, "func": "(non-Javadoc) @see org.columba.mail.folder.event.IFolderListener#messageAdded(org.columba.mail.folder.event.IFolderEvent)", "target": 0}
{"idx": 4070, "func": "//{{{ resizeColumnsAppropriately() method", "target": 0}
{"idx": 4071, "func": "Note: we need a singleton here so that things like 'this == this' work (and probably a good idea for speed). Caching a single instance here seems technically incorrect, considering the declaringInterpreter could be different under some circumstances. (Case: a child interpreter running a source() / eval() command ). However the effect is just that the main interpreter that executes your script should be the one involved in call-backs from Java. I do not know if there are corner cases where a child interpreter would be the first to use a This reference in a namespace or if that would even cause any problems if it did... We could do some experiments to find out... and if necessary we could cache on a per interpreter basis if we had weak references... We might also look at skipping over child interpreters and going to the parent for the declaring interpreter, so we'd be sure to get the top interpreter.", "target": 1}
{"idx": 4072, "func": "//i18n[RowCountTab.title=Row Count]", "target": 0}
{"idx": 4073, "func": "Build and populate an instance of the ejbc utility", "target": 0}
{"idx": 4074, "func": "First the regular deployment descriptor", "target": 0}
{"idx": 4075, "func": "specify the comparator classname", "target": 0}
{"idx": 4076, "func": "//{{{ add() method", "target": 0}
{"idx": 4077, "func": "some setup...", "target": 0}
{"idx": 4078, "func": "update all panes", "target": 0}
{"idx": 4079, "func": "navigable.... only want incoming", "target": 0}
{"idx": 4080, "func": "//{{{ getPlugins() method", "target": 0}
{"idx": 4081, "func": "//cascade to current collection elements", "target": 0}
{"idx": 4082, "func": "a case/when branch", "target": 0}
{"idx": 4083, "func": "try null row key", "target": 0}
{"idx": 4084, "func": "FB50..FDFF;", "target": 0}
{"idx": 4085, "func": "make sure we log the error", "target": 0}
{"idx": 4086, "func": "TODO: How to let the user customize this??", "target": 1}
{"idx": 4087, "func": "Continue with a different approach.", "target": 0}
{"idx": 4088, "func": "Get next sample and its name", "target": 0}
{"idx": 4089, "func": "TODO: This should be handled with an Iterator!!!", "target": 1}
{"idx": 4090, "func": "enable time pickers", "target": 0}
{"idx": 4091, "func": "//i18n[DualProgressBarDialog.copyingTablesLabel=Copying table]", "target": 0}
{"idx": 4092, "func": "not a SuffixFilter selected, so we take all", "target": 0}
{"idx": 4093, "func": "if strictJava mode, check for loose parameters and return type", "target": 0}
{"idx": 4094, "func": "shadowsVisible", "target": 0}
{"idx": 4095, "func": "null dataset throws IllegalArgumentException", "target": 0}
{"idx": 4096, "func": "scroll window to the beginning", "target": 0}
{"idx": 4097, "func": "register interest on tree selection changes", "target": 0}
{"idx": 4098, "func": "//TODO: code duplication with SingleTableEntityPersister", "target": 1}
{"idx": 4099, "func": "//private static final Logger log = LoggingManager.getLoggerForClass();", "target": 0}
{"idx": 4100, "func": "//{{{ update() method", "target": 0}
{"idx": 4101, "func": "binary types", "target": 0}
{"idx": 4102, "func": "Wrong Parameter ?", "target": 0}
{"idx": 4103, "func": "no action required", "target": 0}
{"idx": 4104, "func": "we are at the last one in the list", "target": 0}
{"idx": 4105, "func": "Always update the end time", "target": 0}
{"idx": 4106, "func": "perform the sample", "target": 0}
{"idx": 4107, "func": "@see java.util.Collection#remove(java.lang.Object)", "target": 0}
{"idx": 4108, "func": "//Object oldValue = this.urlGenerator;", "target": 0}
{"idx": 4109, "func": "start off with a neutral parent", "target": 0}
{"idx": 4110, "func": "only supports simple parallel assignment of up to 4 values to the same number of assignees", "target": 0}
{"idx": 4111, "func": "20030609, karlpeder Introduced scaling", "target": 0}
{"idx": 4112, "func": "//No ClassCastException!", "target": 0}
{"idx": 4113, "func": "Register package validator", "target": 0}
{"idx": 4114, "func": "!!! From: alice@mail.org create filter configuration -> check if <From> <contains> pattern <alice@mail.org>", "target": 0}
{"idx": 4115, "func": "Counter for the number of 16-bit sections read in the address.", "target": 0}
{"idx": 4116, "func": "MQTs only ever have one sql statement", "target": 0}
{"idx": 4117, "func": "toolbar text is usually a bit shorter", "target": 0}
{"idx": 4118, "func": "Quarter q =", "target": 0}
{"idx": 4119, "func": "load arity for check", "target": 0}
{"idx": 4120, "func": "Sample with no sub results, simulates an image download", "target": 0}
{"idx": 4121, "func": "//do not add unique constraint on DB not supporting unique and nullable columns", "target": 0}
{"idx": 4122, "func": "Do we send output to the formatters ?", "target": 0}
{"idx": 4123, "func": "notify all listeners that search is finished", "target": 0}
{"idx": 4124, "func": "try plain format", "target": 0}
{"idx": 4125, "func": "TODO: Review all callers to make sure that they localize the title In process by Harold Braun 20070912", "target": 1}
{"idx": 4126, "func": "Key Value", "target": 0}
{"idx": 4127, "func": "We use the HostConfiguration as the key to retrieve the HttpClient, so need to ensure that any items used in its equals/hashcode methods are not changed after use, i.e.: host, port, protocol, localAddress, proxy", "target": 0}
{"idx": 4128, "func": "the explode area defines the max circle/ellipse for the exploded pie sections. it is defined by shrinking the linkArea by the linkMargin factor.", "target": 0}
{"idx": 4129, "func": "tell user it is editable", "target": 0}
{"idx": 4130, "func": "domainAxisLocations...", "target": 0}
{"idx": 4131, "func": "Only update the bounds if they change:", "target": 0}
{"idx": 4132, "func": "don't show base_... properties in stereotypes", "target": 0}
{"idx": 4133, "func": "Escaped dollar commma and backslash with missing function reference", "target": 0}
{"idx": 4134, "func": "//missing 2 private use add manually", "target": 0}
{"idx": 4135, "func": "Register tabs to display in the details panel for UDT nodes.", "target": 0}
{"idx": 4136, "func": "save every message-id in hashtable for later reference", "target": 0}
{"idx": 4137, "func": "ARGF, $< object", "target": 0}
{"idx": 4138, "func": "The next AssociationEnd, and its classifier. Check the classifier is in the namespace of the association. If not we have a problem.", "target": 0}
{"idx": 4139, "func": "Note: this method and resolveExpectedJavaField should be rewritten to invert this logic so that no exceptions need to be caught unecessarily. This is just a temporary impl. @return the field or null if not found", "target": 1}
{"idx": 4140, "func": "//{{{ doWordCount() method", "target": 0}
{"idx": 4141, "func": "i18n[hibernate.hqlToSqlShort=Convert HQL to SQL (ctrl + enter)]", "target": 0}
{"idx": 4142, "func": "this.READER = new BufferedReader(new FileReader(this.SOURCE)); parse(this.READER,el);", "target": 0}
{"idx": 4143, "func": "Send the mail ...", "target": 0}
{"idx": 4144, "func": "i18n[SQLPanel.copylastbutton.hint=Copy current SQL history to entry area]", "target": 0}
{"idx": 4145, "func": "Fill 18 of value (byte) -19 Fill 13 of value (byte) 33 Fill 12 of value (byte) -19", "target": 0}
{"idx": 4146, "func": "(MElementImport)", "target": 0}
{"idx": 4147, "func": "TODO: No one should be sending the deprecated event from outside ArgoUML, but keep responding to it for now just in case", "target": 1}
{"idx": 4148, "func": "allowDuplicateXValues", "target": 0}
{"idx": 4149, "func": "init new renderer", "target": 0}
{"idx": 4150, "func": "Gone in UML 2.x", "target": 0}
{"idx": 4151, "func": "i18n[UpdateControllerImpl.changesRecordedMsg=Requested changes will be made when SQuirreL is restarted]", "target": 0}
{"idx": 4152, "func": "continue and separate the labels only if necessary", "target": 0}
{"idx": 4153, "func": "current shortcut == default --> DEFAULT", "target": 0}
{"idx": 4154, "func": "(non-Javadoc) @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)", "target": 0}
{"idx": 4155, "func": "Subclasses may override this method", "target": 0}
{"idx": 4156, "func": "Loop through all base classes, building a comma separated list", "target": 0}
{"idx": 4157, "func": "Duration is in seconds, starting from when the threads start", "target": 0}
{"idx": 4158, "func": "@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)", "target": 0}
{"idx": 4159, "func": "Lastly create File object for the Jar files. If we are using a flat destination dir, then we need to redefine baseName!", "target": 0}
{"idx": 4160, "func": "select appropriate call site dup receiver load self", "target": 0}
{"idx": 4161, "func": "skip, if null", "target": 0}
{"idx": 4162, "func": "the host has a key already", "target": 0}
{"idx": 4163, "func": "//{{{ DummyRenderer class", "target": 0}
{"idx": 4164, "func": "This is also used by LookAndFeelCommand", "target": 0}
{"idx": 4165, "func": "TODO: full-precision remainder is 1000x slower than MRI!", "target": 1}
{"idx": 4166, "func": "case 4 erase it", "target": 0}
{"idx": 4167, "func": "1.8 \"include?\"", "target": 0}
{"idx": 4168, "func": "//{{{ createVFSSession() method", "target": 0}
{"idx": 4169, "func": "Offset of previous line, relative to the start of the I/O buffer (NOT relative to the start of the document)", "target": 0}
{"idx": 4170, "func": "JComponent.setFont(Font) is overridden here to cache the baseline for the font. This avoids having to get the font metrics during every repaint.", "target": 0}
{"idx": 4171, "func": "otherwise, just dump it", "target": 0}
{"idx": 4172, "func": "'dateTickUnit' is immutable : no need to clone", "target": 0}
{"idx": 4173, "func": "Now parse the DOM tree", "target": 0}
{"idx": 4174, "func": "Remove the last item from the list if it was a brand new file", "target": 0}
{"idx": 4175, "func": "declaringInterpreter", "target": 0}
{"idx": 4176, "func": "we don't use the calendar or numberFormat fields, but equals(Object) is failing without them being non-null", "target": 0}
{"idx": 4177, "func": "src: o--------o sub: o------------o res: empty Reuse sub", "target": 0}
{"idx": 4178, "func": "col2, line 1, B", "target": 0}
{"idx": 4179, "func": "If we could not find the constant from cref..then try getting from inheritence hierarchy", "target": 0}
{"idx": 4180, "func": "row count == 0 --> empty table", "target": 0}
{"idx": 4181, "func": "TitledBorder etched = javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), \" Login \");centerPanel.setBorder( etched );", "target": 0}
{"idx": 4182, "func": "N.B. Revision 323346 introduced the ClassCast check, but then used iter.next() to fetch the item to be cast, thus skipping the element that did not cast. Reverted to work more like the original code, but with the check in place. Added a warning message so can track whether it is necessary", "target": 0}
{"idx": 4183, "func": "//{{{ putBooleanProperty() method", "target": 0}
{"idx": 4184, "func": "last index (+1) accessed by next() last index (+1) accessed by get()", "target": 0}
{"idx": 4185, "func": "We test their relationship either via them both being classes... //", "target": 0}
{"idx": 4186, "func": "Skips a white space.", "target": 0}
{"idx": 4187, "func": "See if all selected nodes are of the same type.", "target": 0}
{"idx": 4188, "func": "Sort the rows by the property name.", "target": 0}
{"idx": 4189, "func": "the view should not be null, but some plugins might do this", "target": 1}
{"idx": 4190, "func": "register all of the event listener trackers", "target": 0}
{"idx": 4191, "func": "handle special case of IntervalXYDataset", "target": 0}
{"idx": 4192, "func": "//{{{ isBuiltIn() method", "target": 0}
{"idx": 4193, "func": "empty block at end of file", "target": 0}
{"idx": 4194, "func": "TODO: with new reference resolving scheme, the model sub-system will cache the systemId of the profile, open it and resolve the profile on its own. Thus, the java.util.List will be found and the return value will be present again... //assertNotNull(returnParamType);", "target": 1}
{"idx": 4195, "func": "@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent) TODO: This should be reviewed to see if it can be improved with a view towards removing some of the overrriding methods used as workarounds for differences between NSUML and MDR - tfm - 20060302", "target": 1}
{"idx": 4196, "func": "line 1076", "target": 0}
{"idx": 4197, "func": "Oracle driver reports to support getGeneratedKeys(), but they only support the version taking an array of the names of the columns to be returned (via its RETURNING clause). No other driver seems to support this overloaded version.", "target": 0}
{"idx": 4198, "func": "End class XmlIO", "target": 0}
{"idx": 4199, "func": "(non-Javadoc) @see org.columba.mail.imap.IImapServer#deleteFolder(java.lang.String)", "target": 0}
{"idx": 4200, "func": "xmlforest requires a new kind of function constructor", "target": 1}
{"idx": 4201, "func": "we do nothing. No call to the parent", "target": 0}
{"idx": 4202, "func": "baseItemLabelPaint", "target": 0}
{"idx": 4203, "func": "assuming 'skip' otherwise don't warn if skip has been requested explicitly, warn if user didn't set the attribute", "target": 0}
{"idx": 4204, "func": "//{{{ setReverseSearch() method", "target": 0}
{"idx": 4205, "func": "line 595", "target": 0}
{"idx": 4206, "func": "//////////////////////////////////////////////////////////////static variables", "target": 0}
{"idx": 4207, "func": "is there an alignment adjustment to be made?", "target": 0}
{"idx": 4208, "func": "testmc should now have an ItemUID so we should be able to create without adding a new ItemUID", "target": 0}
{"idx": 4209, "func": "allow proxy to be read without synchronization. if proxy is under construction, only the building thread can see it.", "target": 0}
{"idx": 4210, "func": "insert head section with charset def.", "target": 0}
{"idx": 4211, "func": "Parse the attr-val pairs. //", "target": 0}
{"idx": 4212, "func": "defer argument checking...", "target": 1}
{"idx": 4213, "func": "EDIT MENU //$NON-NLS-1$", "target": 0}
{"idx": 4214, "func": "i18n[syntax.prefUseNetbeans=Use Netbeans editor (recommended)]", "target": 0}
{"idx": 4215, "func": "//{{{ CaretHandler class", "target": 0}
{"idx": 4216, "func": "now the vendor specific files, if any", "target": 0}
{"idx": 4217, "func": "valueAnchor", "target": 0}
{"idx": 4218, "func": "//eteTextForeground( Color.blue );", "target": 0}
{"idx": 4219, "func": "We need to parse get message with UID", "target": 0}
{"idx": 4220, "func": "create subject headerfield in using the senders message subject and prepending \"Re:\" if not already there @param header A <code>ColumbaHeader</code> which contains the headerfields of the message we want reply/forward. FIXME (@author fdietz): we need to i18n this!", "target": 1}
{"idx": 4221, "func": "Based on query return value, get results", "target": 0}
{"idx": 4222, "func": "write message source to file", "target": 0}
{"idx": 4223, "func": "test for not searching parents", "target": 0}
{"idx": 4224, "func": "//notifyTableListeners(new TableModelEvent(this, logMessages.size(), logMessages.size(), TableModelEvent.ALL_COLUMNS, TableModelEvent.INSERT));", "target": 0}
{"idx": 4225, "func": "do something with link", "target": 0}
{"idx": 4226, "func": "//process doesn't die properly under this combination, //thus test fails. No workaround?", "target": 1}
{"idx": 4227, "func": "Finally the bug fix release", "target": 0}
{"idx": 4228, "func": "Single-quote fast path", "target": 0}
{"idx": 4229, "func": "TODO: Tooltips", "target": 1}
{"idx": 4230, "func": "i18n[WindowManager.errorselectingwindow=Error selecting window]", "target": 0}
{"idx": 4231, "func": "//cannot occur", "target": 0}
{"idx": 4232, "func": "other implementation variables", "target": 0}
{"idx": 4233, "func": "Make a limited attempt to extract a sanitized name and email address Algorithm based on the one found in Ant's MailMessage.java", "target": 0}
{"idx": 4234, "func": "Skip the leading bytes (if any)", "target": 0}
{"idx": 4235, "func": "//convert to lower case in the English locale,", "target": 0}
{"idx": 4236, "func": "Dummy constructor to allo JUnit tests to work", "target": 0}
{"idx": 4237, "func": "Test the create statement", "target": 0}
{"idx": 4238, "func": "//get log10 version of upper bound and round to integer:", "target": 0}
{"idx": 4239, "func": "If we are creating a JSR223 element, add the cache key property. Note that this cannot be done in the JSR223BeanInfoSupport class because that causes problems with the group; its properties are not always set up before they are needed. This cause various issues with the GUI: - wrong field attributes (should not allow null) - sometimes GUI is completely mangled - field appears at start rather than at end. - the following warning is logged: jmeter.testbeans.gui.GenericTestBeanCustomizer: org.apache.jmeter.util.JSR223TestElement#cacheKey does not appear to have been configured Adding the group here solves these issues, and it's also possible to add the key just before the script panel to which it relates. It's not yet clear why this should be, but it looks as though createPropertyGroup does not work properly if it is called from any subclasses of this class.", "target": 0}
{"idx": 4240, "func": "We have the loader which is being used to load the CatalogResolver. Can it see the ApacheResolver? The base resolver will only be able to create the ApacheResolver if it can see it - doesn't use the context loader.", "target": 0}
{"idx": 4241, "func": "Force the parent to redraw", "target": 0}
{"idx": 4242, "func": "//Making nice rollover effect //we use the same listener for all buttons", "target": 0}
{"idx": 4243, "func": "///////////////////////////////////////////////////////////", "target": 0}
{"idx": 4244, "func": "//{{{ addBufferChangeListener() method", "target": 0}
{"idx": 4245, "func": "firstly check if the tools jar is already in the classpath", "target": 0}
{"idx": 4246, "func": "In the DeploymentDiagram there are no Generalizations", "target": 0}
{"idx": 4247, "func": "create the JTable that holds header per row", "target": 0}
{"idx": 4248, "func": "Create & set up temporary output file", "target": 0}
{"idx": 4249, "func": "@see org.argouml.uml.ui.AbstractTestActionAddDiagram#getAction()", "target": 0}
{"idx": 4250, "func": "get composer controller -> get all the account information from the controller", "target": 0}
{"idx": 4251, "func": "TODO should really return most specific (i.e. longest) match.", "target": 1}
{"idx": 4252, "func": "This test calls ToDoList.addElement which requires the Model. We are able to get away with using the Mock model.", "target": 0}
{"idx": 4253, "func": "//any kind of fault: not reachable.", "target": 0}
{"idx": 4254, "func": "//private NumberFormat numberFormatOverride;", "target": 0}
{"idx": 4255, "func": "empty collection, local var is here to allow SuppressWarnings", "target": 0}
{"idx": 4256, "func": "lineVisible", "target": 0}
{"idx": 4257, "func": "TODO: Using just the last piece of the ID leaves the potential for name collisions if two linked files have the same name in different directories", "target": 1}
{"idx": 4258, "func": "do nothing, user clicked 'Stop'", "target": 0}
{"idx": 4259, "func": "//now scan the hashtable and add the files", "target": 0}
{"idx": 4260, "func": "get Columba's top-level configuration directory", "target": 0}
{"idx": 4261, "func": "First, try to get the persister using the given name directly.", "target": 0}
{"idx": 4262, "func": "//MappingFactoryImpl", "target": 0}
{"idx": 4263, "func": "FIXME: Check that there isn't already a series with the same key", "target": 1}
{"idx": 4264, "func": "Keep the content, will be sent later", "target": 0}
{"idx": 4265, "func": "construct path", "target": 0}
{"idx": 4266, "func": "TODO implement me!", "target": 1}
{"idx": 4267, "func": "Nothing is editable, since a Link takes its identity from the Association. @see org.argouml.uml.diagram.ui.FigEdgeModelElement#canEdit( org.tigris.gef.presentation.Fig)", "target": 0}
{"idx": 4268, "func": "//now any assertions are added", "target": 0}
{"idx": 4269, "func": "The referencing generic type must be contained to be in scope //", "target": 0}
{"idx": 4270, "func": "make sure that 1) we see only digits and dot separators, 2) that any dot separator is preceded and followed by a digit and 3) that we find 3 dots RFC 2732 amended RFC 2396 by replacing the definition of IPv4address with the one defined by RFC 2373. - mrglavas IPv4address = 13DIGIT \".\" 13DIGIT \".\" 13DIGIT \".\" 13DIGIT One to three digits must be in each segment.", "target": 0}
{"idx": 4271, "func": "Request headers column renderers", "target": 0}
{"idx": 4272, "func": "Determine if the passed parameter has a RETURN direction kind. TODO: This is a duplicate of {@link #isReturn(Object)} @return true if it is a return direction kind @param handle the parameter", "target": 1}
{"idx": 4273, "func": "Handle IPv6 urls", "target": 0}
{"idx": 4274, "func": "Mocks for generic dialect test", "target": 0}
{"idx": 4275, "func": "get list of all uids", "target": 0}
{"idx": 4276, "func": "Programming error: bail out.", "target": 0}
{"idx": 4277, "func": "//{{{ loadToolButton() method", "target": 0}
{"idx": 4278, "func": "Do something here ...", "target": 0}
{"idx": 4279, "func": "Allow RMI to complete", "target": 0}
{"idx": 4280, "func": "get the rules", "target": 0}
{"idx": 4281, "func": "switch on the object's native type. This allows use-defined classes that have extended core native types to piggyback on their marshalling logic.", "target": 0}
{"idx": 4282, "func": "New constraint, first time setData is called", "target": 0}
{"idx": 4283, "func": "// TypeFactory.deepCopy( currentState, propTypes, persister.getPropertyUpdateability(), deletedState, session );", "target": 0}
{"idx": 4284, "func": "the close method manipulates the viewList so we have to remove the existing element and fill in our temporarily stored ones", "target": 0}
{"idx": 4285, "func": "----------------------------------------- Predefined filters -----------------------------------------", "target": 0}
{"idx": 4286, "func": "shouldn't need to check but...", "target": 0}
{"idx": 4287, "func": "IBID for current_time and current_date", "target": 0}
{"idx": 4288, "func": "//{{{ DockableListHandler constructor", "target": 0}
{"idx": 4289, "func": "file comment length", "target": 0}
{"idx": 4290, "func": "mark the node as moved if node has been removed", "target": 0}
{"idx": 4291, "func": "TODO: figure out a more reliable way to handle OTHER type which indicates a database-specific type.", "target": 1}
{"idx": 4292, "func": "//////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 4293, "func": "TODO: It would be nice to throw a better error for this", "target": 1}
{"idx": 4294, "func": "@see javax.swing.ComboBoxEditor#getItem()", "target": 0}
{"idx": 4295, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#getInt(int)", "target": 0}
{"idx": 4296, "func": "will be caught and redirected to Ant's logging system", "target": 0}
{"idx": 4297, "func": "push true", "target": 0}
{"idx": 4298, "func": "Two null values -- return equal", "target": 0}
{"idx": 4299, "func": "Get the list: OpaqueExpression, LiteralString,...", "target": 0}
{"idx": 4300, "func": "The following is only useable for a root type of InternalFrame. If the root type is Dialog or Frame, then other code must be used.", "target": 0}
{"idx": 4301, "func": "check that setting the min date to something on or after the current min date works...", "target": 0}
{"idx": 4302, "func": "//{{{ indexEditorHelp() method", "target": 0}
{"idx": 4303, "func": "Has to be done directly on the main frame because of racing condition at start up.", "target": 0}
{"idx": 4304, "func": "\"menu_edit_findagain_tooltip\").replaceAll(\"&\", \"\"));", "target": 0}
{"idx": 4305, "func": "Contains Strings and Integers", "target": 0}
{"idx": 4306, "func": "Clauses", "target": 0}
{"idx": 4307, "func": "should detect trailing option", "target": 0}
{"idx": 4308, "func": "11", "target": 0}
{"idx": 4309, "func": "//Resource resource = EcoreUtil.getURI(refObject).; FIX:::", "target": 0}
{"idx": 4310, "func": "different only by type - same name", "target": 0}
{"idx": 4311, "func": "//Convenience cast", "target": 0}
{"idx": 4312, "func": "if we've got an object, resolve the method", "target": 0}
{"idx": 4313, "func": "contains not", "target": 0}
{"idx": 4314, "func": "|| !ctx.isSamplingStarted()", "target": 0}
{"idx": 4315, "func": "Assume that the UI has not changed since the checkbos was created", "target": 0}
{"idx": 4316, "func": "FIXME: the XYItemRenderer interface doesn't specify the getAnnotations() method but it should", "target": 1}
{"idx": 4317, "func": "So elements can only be added as children", "target": 0}
{"idx": 4318, "func": "String templateStr = null;", "target": 0}
{"idx": 4319, "func": "if less than 20 items, put them directly in the menu", "target": 0}
{"idx": 4320, "func": "dark gray line at 12 and 13", "target": 0}
{"idx": 4321, "func": "CheckStyle:ConstantNameCheck OFF - bc", "target": 0}
{"idx": 4322, "func": "If the archive is built for the first time and it is matched by a resource collection, then it hasn't been found in check (it hasn't been there) but will be included now. for some strange reason the old code would simply skip the entry and not fail, do the same now for backwards compatibility reasons. Without this, the which4j build fails in Gump", "target": 0}
{"idx": 4323, "func": "@see org.argouml.uml.diagram.ui.AbstractActionCheckBoxMenuItem#valueOfTarget(java.lang.Object)", "target": 0}
{"idx": 4324, "func": "Pass in some variables", "target": 0}
{"idx": 4325, "func": "optional parts", "target": 0}
{"idx": 4326, "func": "line 839", "target": 0}
{"idx": 4327, "func": "so we can detect it", "target": 0}
{"idx": 4328, "func": "draw the category labels and axis label", "target": 0}
{"idx": 4329, "func": "//pass this as an argument only to avoid double looking", "target": 0}
{"idx": 4330, "func": "view link list", "target": 0}
{"idx": 4331, "func": "@see org.argouml.uml.diagram.ui.UMLDiagram#isRelocationAllowed(java.lang.Object)", "target": 0}
{"idx": 4332, "func": "if not we haven't actually closed a frame, leave viewList as is", "target": 0}
{"idx": 4333, "func": "Rub out the last ghost image and cue line:", "target": 0}
{"idx": 4334, "func": "store ConstructorArgs in consArgsVar", "target": 0}
{"idx": 4335, "func": "Not a uri - assume it is a string filename.", "target": 0}
{"idx": 4336, "func": "copy the first two items...", "target": 0}
{"idx": 4337, "func": "remove the 'AUTH='", "target": 0}
{"idx": 4338, "func": "Make sure we get all log info as fast as we can get ahold of it.", "target": 0}
{"idx": 4339, "func": "Read resource into ResourceBundle and store in List", "target": 0}
{"idx": 4340, "func": "CategoryPlot plot =", "target": 0}
{"idx": 4341, "func": "assertEquals(\"with classpath\", \"java\", s[0]);", "target": 0}
{"idx": 4342, "func": "seek to force read buffer to invalidate", "target": 0}
{"idx": 4343, "func": "end class CrClassMustBeAbstract", "target": 0}
{"idx": 4344, "func": "FIXME: Errno descriptions from Constantine on Windows are not useful at the moment.", "target": 1}
{"idx": 4345, "func": "if blocked that means that it doesn't help anymore Or an error dialog is shown or the connection is made and the SessionFrame is being constructed/shown.", "target": 0}
{"idx": 4346, "func": "//insert/update/delete SQL", "target": 0}
{"idx": 4347, "func": "If we know the content length, we can allow the reading of the request to block until more data arrives. If it is chunked transfer, we cannot allow the reading to block, because we do not know when to stop reading, because the chunked transfer is not properly supported yet", "target": 0}
{"idx": 4348, "func": "i18n[DataTypesTab.hint=Show all the data types available in DBMS]", "target": 0}
{"idx": 4349, "func": "TODO: This looks O(n^2)", "target": 0}
{"idx": 4350, "func": "TODO: The above doesn't work reliably in a constructor. We need a better way of getting default fig settings for the owning project rather than using the project manager singleton. - tfm", "target": 1}
{"idx": 4351, "func": "//this bit is only really absolutely necessary for handling //requestedId, but is also good if we merge multiple object //graphs, since it helps ensure uniqueness", "target": 0}
{"idx": 4352, "func": "move message to user-configured folder (generally \"Junk\" folder)", "target": 0}
{"idx": 4353, "func": "Make a transaction group for the outer command", "target": 0}
{"idx": 4354, "func": "//Class/reflectiveDelegation.override.javajetinc", "target": 0}
{"idx": 4355, "func": "destDir", "target": 0}
{"idx": 4356, "func": "//{{{ getExpandOnInput() method", "target": 0}
{"idx": 4357, "func": "Was the previous read character a \\r? If we read a \\n and this is true, we assume we have a DOS/Windows file", "target": 0}
{"idx": 4358, "func": "ZipOutputStream.putNextEntry expects the ZipEntry to know its size and the CRC sum before you start writing the data when using STORED mode - unless it is seekable. This forces us to process the data twice.", "target": 0}
{"idx": 4359, "func": "By default we always reverse lookup unless do_not_reverse_lookup set.", "target": 0}
{"idx": 4360, "func": "//{{{ MarkerHighlight class", "target": 0}
{"idx": 4361, "func": "(non-Javadoc) @see org.columba.core.search.api.ISearchResult#getDescription()", "target": 0}
{"idx": 4362, "func": "//tc.setModelIndex(position);", "target": 0}
{"idx": 4363, "func": "RubyDigest", "target": 0}
{"idx": 4364, "func": "---- professionLabel ----", "target": 0}
{"idx": 4365, "func": "jradiobuttonRoles.setSelected(true);", "target": 0}
{"idx": 4366, "func": "FIXME: This isn't quite right; it shouldn't evaluate the value if it's going to throw the error", "target": 1}
{"idx": 4367, "func": "Store any cookies received in the cookie manager:", "target": 0}
{"idx": 4368, "func": "//////////////////////////////////////////////////////////////non-abstract methods", "target": 0}
{"idx": 4369, "func": "Theres nothing else to see here...keep moving sonny", "target": 0}
{"idx": 4370, "func": "synchronized(sampleStore)", "target": 0}
{"idx": 4371, "func": "leave the table cleanly-initialized for an empty pattern", "target": 0}
{"idx": 4372, "func": "include legend", "target": 0}
{"idx": 4373, "func": "Javadoc copied from interface", "target": 0}
{"idx": 4374, "func": "///////////////////////////////////////////////////////////////////////Implement the IDataSetTableControls interface, functions needed to support table operations These functions are called from within MyJTable and MyTable to tell those classes how to operate. The code in these functions will be different depending on whether the table is read-only or editable. The definitions below are for read-only operation. The editable table panel overrides these functions with the versions that tell the tables how to set up for editing operations. /////////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 4375, "func": "OptimisticCache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 4376, "func": "(non-Javadoc) @see org.eclipse.swt.events.FocusListener#focusGained( org.eclipse.swt.events.FocusEvent)", "target": 0}
{"idx": 4377, "func": "//{{{ changedUpdate() method", "target": 0}
{"idx": 4378, "func": "draw the upper shadow", "target": 0}
{"idx": 4379, "func": "i18n[SchemaTableCboItem.schemaID.dontLoad=Don't load]", "target": 0}
{"idx": 4380, "func": "convert special characters", "target": 0}
{"idx": 4381, "func": "no rows selected.", "target": 0}
{"idx": 4382, "func": "no crossing of x", "target": 0}
{"idx": 4383, "func": "dup it since we need to return appropriately if it's false", "target": 0}
{"idx": 4384, "func": "avoid possible NPE when trimming the name", "target": 0}
{"idx": 4385, "func": "_treeAPI.addToPopup(DatabaseObjectType.SESSION, coll.get(CreateTableAction.class)); _treeAPI.addToPopup(DatabaseObjectType.CATALOG, coll.get(CreateTableAction.class));", "target": 0}
{"idx": 4386, "func": "UML spec for Extend doesn't call for name nor stereotype", "target": 0}
{"idx": 4387, "func": "_useDriverPropsChk.setSelected(_alias.getUseDriverProperties()); _driverPropsBtn.setEnabled(_useDriverPropsChk.isSelected()); This is mainly for long URLs that cannot be fully displayed in the label.", "target": 0}
{"idx": 4388, "func": "defaultValue octetLength ordinalPosition isNullable", "target": 0}
{"idx": 4389, "func": "===================== JUnit stuff =====================", "target": 0}
{"idx": 4390, "func": "//only 1 power of 10 value, it's > 0 and its resulting tick value will be larger than lower bound of data //decrement to generate more ticks", "target": 0}
{"idx": 4391, "func": "If there is only one column in the table,", "target": 0}
{"idx": 4392, "func": "in this case all files from origin map to the fullPath attribute of the zipfileset at destination", "target": 0}
{"idx": 4393, "func": "Create the plugin table", "target": 0}
{"idx": 4394, "func": "end of finally", "target": 0}
{"idx": 4395, "func": "Generate a 48 bit node identifier; This is an alternative to the IEEE 802 host address, which is not available in Java. //", "target": 0}
{"idx": 4396, "func": "i18n[codecompletion.prefs.table.col.prefix=Prefix]", "target": 0}
{"idx": 4397, "func": "line 751", "target": 0}
{"idx": 4398, "func": "//System.err.println(\"Do sorting: \"+this.ranges.length);", "target": 0}
{"idx": 4399, "func": "select until read is ready", "target": 0}
{"idx": 4400, "func": "have to use a subclass of AbstractRenderer", "target": 0}
{"idx": 4401, "func": "i18n[rowDataInputFrame.cancel=Cancel]", "target": 0}
{"idx": 4402, "func": "enable/disable textfield in-dependency of selected criteria", "target": 0}
{"idx": 4403, "func": "Y Y Y Y sp M M / D D / H H : M M : S S end", "target": 0}
{"idx": 4404, "func": "(non-Javadoc) @see org.columba.core.config.IConfig#getConfigDirectory()", "target": 0}
{"idx": 4405, "func": "Editor editor = Globals.curEditor(); GraphModel gm = editor.getGraphModel(); LayerDiagram lay = ((LayerDiagram) editor.getLayerManager().getActiveLayer());", "target": 0}
{"idx": 4406, "func": "added this caching as I noticed that getType() is being called multiple times...", "target": 0}
{"idx": 4407, "func": "//log.debug(\"domain property = \" + element.getProperty(\"domain\"));", "target": 0}
{"idx": 4408, "func": "Map to an EPackage. //", "target": 0}
{"idx": 4409, "func": "the following relies on the fact that the intervals are immutable", "target": 0}
{"idx": 4410, "func": "hack to ensure the newly created swt fonts will be rendered with the same height as the awt one", "target": 1}
{"idx": 4411, "func": "FIXME correct year calculation", "target": 1}
{"idx": 4412, "func": "TODO: Is this removed from UML2 ?", "target": 1}
{"idx": 4413, "func": "KEY = TCPKEY or ERRKEY, Entry= Socket or String", "target": 0}
{"idx": 4414, "func": "//Ignored", "target": 0}
{"idx": 4415, "func": "test with empty list", "target": 0}
{"idx": 4416, "func": "setBorder(BorderFactory.createEmptyBorder(2, 5, 3, 0)); //setBorder(BorderFactory.createEmptyBorder(2, 2, 2, 2));", "target": 0}
{"idx": 4417, "func": "Used by our duck-typification of Proc into interface types, to allow coercing a simple proc into an interface parameter.", "target": 0}
{"idx": 4418, "func": "valid inputs", "target": 0}
{"idx": 4419, "func": "I'm not sure when this can happen, but it does sometimes, witness the jEdit bug tracker.", "target": 0}
{"idx": 4420, "func": "This class manages the projects loaded in argouml, and what the current project is. <p> Classes in ArgoUML can ask this class for the current project and set the current project. Since we only have one project in ArgoUML at the moment, this class does not manage a list of projects like one would expect. This could be a nice extension for the future of ArgoUML. As soon as the current project is changed, a property changed event is fired. <p> TODO: Move everything related to the creation of a project into the ProjectFactory. @since Nov 17, 2002 @author jaap.branderhorst@xs4all.nl @stereotype singleton", "target": 1}
{"idx": 4421, "func": "Unassigned", "target": 0}
{"idx": 4422, "func": "start search from beginning", "target": 0}
{"idx": 4423, "func": "invokeLater to make the call synchronto the event queue", "target": 0}
{"idx": 4424, "func": "if the user has set JIKESPATH we should add the contents as well", "target": 0}
{"idx": 4425, "func": "//{{{ scrollRectToVisible() method", "target": 0}
{"idx": 4426, "func": "get the ConentPane into a variable for convenience", "target": 0}
{"idx": 4427, "func": "double-click on empty calendar mediator.fireCreateActivity(null);", "target": 0}
{"idx": 4428, "func": "If there is an owner. //", "target": 0}
{"idx": 4429, "func": "Don't really know all the codes required to adequately decipher returned jdbc exceptions here. simply allow the failure to be eaten and the subsequent insert-selects/deletes should fail", "target": 0}
{"idx": 4430, "func": "Make sure the dependency is not empty string", "target": 0}
{"idx": 4431, "func": "(non-Javadoc) @see org.columba.core.gui.frame.focus.FocusOwner#redo()", "target": 0}
{"idx": 4432, "func": "@see org.argouml.model.ExtensionMechanismsHelper#getStereotypes(java.lang.Object)", "target": 0}
{"idx": 4433, "func": "we would end up adding \"\" to the archive", "target": 0}
{"idx": 4434, "func": "Additional bracket indent For lining up closing and opening brackets", "target": 0}
{"idx": 4435, "func": "assume (eol == CrLf.LF || eol == CrLf.UNIX)", "target": 0}
{"idx": 4436, "func": "@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(java.lang.Object)", "target": 0}
{"idx": 4437, "func": "no takers; bubble up", "target": 0}
{"idx": 4438, "func": "//{{{ Expand the fold...", "target": 0}
{"idx": 4439, "func": "default (e.g. if test plan does not have definition)", "target": 0}
{"idx": 4440, "func": "dm is a transition", "target": 0}
{"idx": 4441, "func": "set the plot properties...", "target": 0}
{"idx": 4442, "func": "get the right object from the list ... would it be easier to just call getEntity() ??", "target": 1}
{"idx": 4443, "func": "col2 line 1", "target": 0}
{"idx": 4444, "func": "Until we get a little more solid on 1.9 support we will only run interpreted mode", "target": 0}
{"idx": 4445, "func": "isValid(int):boolean", "target": 0}
{"idx": 4446, "func": "Record the iterator as the next one to prune, and add it to the stack. //", "target": 0}
{"idx": 4447, "func": "@see javax.swing.ListCellRenderer#getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)", "target": 0}
{"idx": 4448, "func": "// private ColumnDisplayDefinition[] _hdgs = new ColumnDisplayDefinition[0];", "target": 0}
{"idx": 4449, "func": "load handle", "target": 0}
{"idx": 4450, "func": "//{{{ timerIncrementalSearch() method", "target": 0}
{"idx": 4451, "func": "load up object and add a few useful methods", "target": 0}
{"idx": 4452, "func": "Try again after shutdown", "target": 0}
{"idx": 4453, "func": "note that %string is deprecated", "target": 0}
{"idx": 4454, "func": "Put in the name field if it's there", "target": 0}
{"idx": 4455, "func": "TODO: call config with scope but no frame", "target": 1}
{"idx": 4456, "func": "can be overridden to be informed when objects are removed", "target": 0}
{"idx": 4457, "func": "Create an empty but initialized instance of a UML AssociationClass. @return an initialized UML AssociationClass instance. TODO: This needs an extra parameter to specify the model/extent where the new element should be created.", "target": 1}
{"idx": 4458, "func": "captures begin and end are used when not groups defined source string", "target": 0}
{"idx": 4459, "func": "OK, try without.", "target": 0}
{"idx": 4460, "func": "the link area defines the dog-leg point for the linking lines to the labels", "target": 0}
{"idx": 4461, "func": "set paragraph formatting according to the given action", "target": 0}
{"idx": 4462, "func": "Begin instance data Note: if we add something here we should reset it in the clear() method.", "target": 0}
{"idx": 4463, "func": "The feature maps must be equal. //", "target": 0}
{"idx": 4464, "func": "Otherwise, we could check that the adapter implements interface IItemColorProvider. //", "target": 0}
{"idx": 4465, "func": "A 6-byte block header, the value chosen arbitrarily as 0x314159265359 :-). A 32 bit value does not really give a strong enough guarantee that the value will not appear by chance in the compressed datastream. Worst-case probability of this event, for a 900k block, is about 2.0e-3 for 32 bits, 1.0e-5 for 40 bits and 4.0e-8 for 48 bits. For a compressed file of size 100Gb -- about 100000 blocks -- only a 48-bit marker will do. NB: normal compression/ decompression do not rely on these statistical properties. They are only important when trying to recover blocks from damaged files.", "target": 0}
{"idx": 4466, "func": "Made following changes from OCL in UML 1.4 section 2.9.3.16: CollaborationInstance -> CollaborationInstanceSet Stimuli -> Stimulus", "target": 0}
{"idx": 4467, "func": "//i18n[syntax.separators=Separators]", "target": 0}
{"idx": 4468, "func": "Map to an EDataType. //", "target": 0}
{"idx": 4469, "func": "if < 10 then //increase so 0 translates to 0", "target": 0}
{"idx": 4470, "func": "neither", "target": 0}
{"idx": 4471, "func": "(non-Javadoc) @see org.eclipse.emf.mapping.action.AddRootTopAction#getTopsToAdd()", "target": 0}
{"idx": 4472, "func": "view", "target": 0}
{"idx": 4473, "func": "Trailing zeros will fill out the rest of the address.", "target": 0}
{"idx": 4474, "func": "in 1.8 mode, this will be a RubyArray containing the arguments in 1.9 mode, this will be an IRubyObject[]", "target": 0}
{"idx": 4475, "func": "done with switch", "target": 0}
{"idx": 4476, "func": "Get the encoding to use for the request", "target": 0}
{"idx": 4477, "func": "variables ======================================================================== non visible Logger for this class", "target": 0}
{"idx": 4478, "func": "should not be able to reach last without maxPosition being set unless there are no results", "target": 0}
{"idx": 4479, "func": "Go back and add all the XMLNS stuff. //", "target": 0}
{"idx": 4480, "func": "folder-based configuration", "target": 0}
{"idx": 4481, "func": "//////////////////////////////////////////////////////////////////////////other constants ////////////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 4482, "func": "update cached min and max values", "target": 0}
{"idx": 4483, "func": "notify folder tree model", "target": 0}
{"idx": 4484, "func": "Handle delimiters", "target": 0}
{"idx": 4485, "func": "We will now create a command with this implied parent //", "target": 0}
{"idx": 4486, "func": "treat it as a path expression", "target": 0}
{"idx": 4487, "func": "TODO: Use reflection against the test case to ensure that it does not import non-ArgoUML classes", "target": 1}
{"idx": 4488, "func": "If they are the same instance they are equal. //", "target": 0}
{"idx": 4489, "func": "//if we got here, all was well", "target": 0}
{"idx": 4490, "func": "//cache", "target": 0}
{"idx": 4491, "func": "Write the form data post body, which we have constructed in the setHeaders. This contains the multipart start divider and any form data, i.e. arguments", "target": 0}
{"idx": 4492, "func": "what is our alignment?", "target": 0}
{"idx": 4493, "func": "myRow = f.nextRow(); assertEquals(3,myRow); assertEquals(0,f.getNextRow());", "target": 0}
{"idx": 4494, "func": "Instance Variables //", "target": 0}
{"idx": 4495, "func": "Set up the sample result details", "target": 0}
{"idx": 4496, "func": "pure obfuscated genius!", "target": 0}
{"idx": 4497, "func": "Red Green Blue", "target": 0}
{"idx": 4498, "func": "inner class for the data display pane //", "target": 0}
{"idx": 4499, "func": "Add ASCII Digits and ASCII Hex Numbers", "target": 0}
{"idx": 4500, "func": "use item paint for outlines by default, not outline paint", "target": 0}
{"idx": 4501, "func": "force object finalization", "target": 0}
{"idx": 4502, "func": "write out ivar count followed by name/value pairs", "target": 0}
{"idx": 4503, "func": "add child to this node", "target": 0}
{"idx": 4504, "func": "convert classname to RefObject", "target": 0}
{"idx": 4505, "func": "Fill 40 of value (byte) 33", "target": 0}
{"idx": 4506, "func": "for sane JEE/JTA containers, the transaction itself functions as its identifier...", "target": 0}
{"idx": 4507, "func": "i18n[SchemaInfo.loadingCatalogs=Loading catalogs]", "target": 0}
{"idx": 4508, "func": "equivalent to new TreeMap((Comparator)null);", "target": 0}
{"idx": 4509, "func": "//{{{ initSystemProperties() method", "target": 0}
{"idx": 4510, "func": "case Resource.RESOURCE__IS_MODIFIED: case Resource.RESOURCE__IS_LOADED: case Resource.RESOURCE__IS_TRACKING_MODIFICATION: case Resource.RESOURCE__RESOURCE_SET:", "target": 0}
{"idx": 4511, "func": "Insets values", "target": 0}
{"idx": 4512, "func": "TODO can this ever happen?", "target": 1}
{"idx": 4513, "func": "//entirely optional!!", "target": 0}
{"idx": 4514, "func": "<create_view_statement> ::= CREATE [OR REPLACE] VIEW <table_name> [(<alias_name>,...)] AS <query_expression> [WITH CHECK OPTION]", "target": 0}
{"idx": 4515, "func": "Let parent resume handling SAX events", "target": 0}
{"idx": 4516, "func": "return cached type if available", "target": 0}
{"idx": 4517, "func": "The fix", "target": 0}
{"idx": 4518, "func": "SSS FIXME: There are also differences in variable scoping between 1.8 and 1.9 Ruby 1.8 is the buggy semantics if I understand correctly. The semantics of how this shadows other variables outside the block needs to be figured out during live var analysis.", "target": 1}
{"idx": 4519, "func": "// public ComponentTuplizerFactory getComponentTuplizerFactory() { // return componentTuplizerFactory; // }", "target": 0}
{"idx": 4520, "func": "If we change to pattern defaults, will have to specify plain suffix in no main package case. //", "target": 0}
{"idx": 4521, "func": "private boolean isBordered = true;", "target": 0}
{"idx": 4522, "func": "TODO: what?", "target": 0}
{"idx": 4523, "func": "//DocumentRootImpl", "target": 0}
{"idx": 4524, "func": "check null changes nothing", "target": 0}
{"idx": 4525, "func": "//++ Do not change these strings; they are used in JMX files to record the button settings $NON-NLS-1$", "target": 0}
{"idx": 4526, "func": "//{{{ getEditPane() method", "target": 0}
{"idx": 4527, "func": "we don't know anything about the ordering of the x-values, so we iterate until we find the first crossing of x (if any) we know there are at least 2 items in the series at this point", "target": 0}
{"idx": 4528, "func": "Font f = getFont(); setFont(new Font(f.getName(), Font.BOLD, f.getSize()));", "target": 0}
{"idx": 4529, "func": "(non-Javadoc) @see org.columba.mail.folder.IMailbox#getHeaderFields(java.lang.Object, java.lang.String[])", "target": 0}
{"idx": 4530, "func": "not something we can read", "target": 0}
{"idx": 4531, "func": "maintain a sorted list of targets", "target": 0}
{"idx": 4532, "func": "Maybe move to vector if MT problems occur", "target": 1}
{"idx": 4533, "func": "used only by the compiler/interpreter (will set the literal flag)", "target": 0}
{"idx": 4534, "func": "(non-Javadoc) @see org.xml.sax.helpers.DefaultHandler#error(org.xml.sax.SAXParseException)", "target": 0}
{"idx": 4535, "func": "FIXME: We are assuming that original string will be raw bytes. If -Ku is provided this will not be true, but that is ok for now. Deal with that when someone needs it.", "target": 1}
{"idx": 4536, "func": "Also handles read(byte[])", "target": 0}
{"idx": 4537, "func": "TODO: We need to get the model/extent (and package?) associated with the current diagram so that we can create the new element in the right place.", "target": 1}
{"idx": 4538, "func": "create search history", "target": 0}
{"idx": 4539, "func": "try count specific args to determine required", "target": 0}
{"idx": 4540, "func": "move message to trash", "target": 0}
{"idx": 4541, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.event.ISQLExecutionListener#statementExecuting(java.lang.String)", "target": 0}
{"idx": 4542, "func": "not an expression, don't want result; pop it", "target": 0}
{"idx": 4543, "func": "add the rest of the original body - and transfer back to body var.", "target": 0}
{"idx": 4544, "func": "//{{{ menuSelected() method", "target": 0}
{"idx": 4545, "func": "settext //$NON-NLS-1$ //$NON-NLS-1$", "target": 0}
{"idx": 4546, "func": "Canonical form", "target": 0}
{"idx": 4547, "func": "Note this test will fail if a property is added or removed to any of the components used in the test files. The way to solve this is to appropriately change the test file.", "target": 0}
{"idx": 4548, "func": "we want to maintain a minimum size for the partition", "target": 0}
{"idx": 4549, "func": "If the intersection is empty, i.e., no ancestor is in the mapping... //", "target": 0}
{"idx": 4550, "func": "this is a sloppy hack to fix bug \"[ 677902 ] hitting return after collapsed fold\" the idea is that if we extend the range then the problem described in the bug happends, so if the insert is at the very end of the range we don't extend it, instead we push the insert into the next range, however for this to work properly we also have to mess with screen line counts.", "target": 1}
{"idx": 4551, "func": "while the tick labels overlap and there are more tick sizes available, choose the next bigger label", "target": 0}
{"idx": 4552, "func": "//not yet supported see note in selector", "target": 0}
{"idx": 4553, "func": "get Outbox folder from reference", "target": 0}
{"idx": 4554, "func": "load tables with catalog = doi.getCatalog() and schema = doi.getSchema()", "target": 0}
{"idx": 4555, "func": "size of font", "target": 0}
{"idx": 4556, "func": "@see org.argouml.kernel.DelayedVChangeListener#delayedVetoableChange(java. beans.PropertyChangeEvent)", "target": 0}
{"idx": 4557, "func": "if we get here, the class and field exist; construct our Unsafe impl that calls it directly", "target": 0}
{"idx": 4558, "func": "method itself ThreadContext invoked name", "target": 0}
{"idx": 4559, "func": "Empty overrides of superclass methods", "target": 0}
{"idx": 4560, "func": "the constraint _must_ be owned by a namespace", "target": 0}
{"idx": 4561, "func": "We effectively passed null, \"\" to look up the general-content feature. //", "target": 0}
{"idx": 4562, "func": "if refcount is at or below zero, we're no longer valid", "target": 0}
{"idx": 4563, "func": "//{{{ applicationOpenFiles() method", "target": 0}
{"idx": 4564, "func": "TODO: Why can't we use ActionAddExistingNodes here? Bob.", "target": 1}
{"idx": 4565, "func": "// String provider = properties.getProperty( Environment.BYTECODE_PROVIDER ); // log.info( \"Bytecode provider name : \" + provider ); // BytecodeProvider bytecodeProvider = buildBytecodeProvider( provider ); // settings.setBytecodeProvider( bytecodeProvider );", "target": 0}
{"idx": 4566, "func": "add this message to frequency database", "target": 0}
{"idx": 4567, "func": "class could not be found nor generated; give up on JIT and bail out", "target": 0}
{"idx": 4568, "func": "Equivalent of Data_Wrap_Struct", "target": 0}
{"idx": 4569, "func": "But if that series array already exists, just overwrite its contents //synchronized(this) //{", "target": 0}
{"idx": 4570, "func": "If systemId is a valid URL, simply use it. TODO: This causes a network connection attempt for profiles", "target": 1}
{"idx": 4571, "func": "i18n[UpdatePreferencesPanel.weeklyLabel=Weekly]", "target": 0}
{"idx": 4572, "func": "//i18n[DropTableDialog.cascadeLabel=Cascade Constraints:]", "target": 0}
{"idx": 4573, "func": "Tests for split(String,String,boolean)", "target": 0}
{"idx": 4574, "func": "//TODO: currently broken for unique-key references (does not detect change to unique key property of the associated object) //the owner of the association is not the owner of the id", "target": 1}
{"idx": 4575, "func": "read() and write() must be kept perfectly in sync... its a very simple file format. doing it this way is faster than serializing since serialization calls reflection, etc.", "target": 0}
{"idx": 4576, "func": "open as A", "target": 0}
{"idx": 4577, "func": "List of types that are known to be ascii, although they may appear to be binary", "target": 0}
{"idx": 4578, "func": "Set the error message text See https://bugs.eclipse.org/bugs/show_bug.cgi?id=66292", "target": 0}
{"idx": 4579, "func": "Sequence methods - start. The RDMS dialect needs these", "target": 0}
{"idx": 4580, "func": "Our comparator will throw an InvalidElementException if the old list contains deleted elements (eg after a new project is loaded) so remove all the old contents first", "target": 0}
{"idx": 4581, "func": "If there is a white space or = or :, then it isn't to be treated as a valid key.", "target": 0}
{"idx": 4582, "func": "load null block", "target": 0}
{"idx": 4583, "func": "The project description:", "target": 0}
{"idx": 4584, "func": "I18n[oracle.infoTitle=Oracle Session info for: {0}]", "target": 0}
{"idx": 4585, "func": "decode message body with respect to charset", "target": 0}
{"idx": 4586, "func": "@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getChildren(java.lang.Object)", "target": 0}
{"idx": 4587, "func": "draw the item labels if there are any...", "target": 0}
{"idx": 4588, "func": "//{{{ parseBufferLocalProperties() method", "target": 0}
{"idx": 4589, "func": "catch logic for flow-control: next, break", "target": 0}
{"idx": 4590, "func": "Windows 98/95 - need to use an auxiliary script", "target": 0}
{"idx": 4591, "func": "Add points from last series to complete the base of the polygon", "target": 0}
{"idx": 4592, "func": "TODO? I think this ends up propagating from normal Java exceptions sys_fail(openFile.getPath())", "target": 1}
{"idx": 4593, "func": "This seems to work for both Oracle 9i and 10g", "target": 0}
{"idx": 4594, "func": "Only go forward if the generic and the weblogic file both exist", "target": 0}
{"idx": 4595, "func": "advance to the next cell position", "target": 0}
{"idx": 4596, "func": "TODO: better error message since we actually support composites if names are explicitly listed.", "target": 1}
{"idx": 4597, "func": "//Named Queries:", "target": 0}
{"idx": 4598, "func": "essentially, if the real session is closed allow any method call to pass through since the real session will complain by throwing an appropriate exception; NOTE that allowing close() above has the same basic effect, but we capture that there simply to perform the unbind...", "target": 0}
{"idx": 4599, "func": "always fire changes in the case something has changed in the composition of the taggedValues collection.", "target": 0}
{"idx": 4600, "func": "If it exists, remove it and add it at the end (avoid memory leak)", "target": 1}
{"idx": 4601, "func": "Both these are needed in the list even though they set the same variable", "target": 0}
{"idx": 4602, "func": "Construct key services", "target": 0}
{"idx": 4603, "func": "line 1753", "target": 0}
{"idx": 4604, "func": "tblResult.setAutoCreateRowSorter(true);", "target": 0}
{"idx": 4605, "func": "check visibility dup method", "target": 0}
{"idx": 4606, "func": "delete a bogus ZIP file (but only if it's not the original one)", "target": 0}
{"idx": 4607, "func": "lets see if this diagram has some figs on it", "target": 0}
{"idx": 4608, "func": "line 391", "target": 0}
{"idx": 4609, "func": "Case-insensitive fs workaround", "target": 1}
{"idx": 4610, "func": "//}}} //{{{ Add to work thread queue...", "target": 0}
{"idx": 4611, "func": "How to handle non-file-Resources? I copy temporarily the resource to a file and use the file-implementation.", "target": 0}
{"idx": 4612, "func": "@see javax.swing.table.TableModel#setValueAt(java.lang.Object, int, int)", "target": 0}
{"idx": 4613, "func": "TODO do tests for type conformance (8.4.4), even though it is not yet supported", "target": 1}
{"idx": 4614, "func": "maximumLabelWidth", "target": 0}
{"idx": 4615, "func": "If filtering Java source, prevent changes to whitespace in character and string literals.", "target": 0}
{"idx": 4616, "func": "parse the string...", "target": 0}
{"idx": 4617, "func": "Load the property files specified by -propertyfile", "target": 0}
{"idx": 4618, "func": "Fill 230 of value (byte) 33 Fill 38 of value (byte) -19 Fill 10 of value (byte) 33 Fill 39 of value (byte) -19 Fill 9 of value (byte) 33", "target": 0}
{"idx": 4619, "func": "Copy previous element", "target": 0}
{"idx": 4620, "func": "Since input objects are read-only, we don't need to make a copy of them for the clipboard. We can just put a pointer to the original object(s) on the clipboard. //", "target": 0}
{"idx": 4621, "func": "{n}", "target": 0}
{"idx": 4622, "func": "caretLine would have been incremented since insertNewLineAt <= caretPos", "target": 0}
{"idx": 4623, "func": "line 503", "target": 0}
{"idx": 4624, "func": "features which change between 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 4625, "func": "Load info about any extra LAFs supplied by the user.", "target": 0}
{"idx": 4626, "func": "No point continuing Mainly for bsh.EvalError", "target": 0}
{"idx": 4627, "func": "check if any stereotype is defined", "target": 0}
{"idx": 4628, "func": "Transferable interface methods...", "target": 0}
{"idx": 4629, "func": "Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 4630, "func": "Currently only used by JMeterThread", "target": 0}
{"idx": 4631, "func": "i18n[TableExportCsvDlg.formatCSV=Export CSV file]", "target": 0}
{"idx": 4632, "func": "rb_obj_id Return the internal id of an object. FIXME: Should this be renamed to match its ruby name?", "target": 1}
{"idx": 4633, "func": "TODO: People extending GzipWriter/reader will break. Find better way here.", "target": 1}
{"idx": 4634, "func": "Reply true iff this Critic is relevant to the goals that the Designer is trying to achieve. By default, all Critic's are relevant regardless of the GoalModel. Really this is something for a ControlMech to compute, but if a subclass of Critic encapsulates some information you may need to override this method. <p> TODO: I would like a better default action, but goals are typed and their values must be interpreted by critics. They are not as generic as the DecisionModel. @param dsgr the designer @return true if relevant", "target": 1}
{"idx": 4635, "func": "Initialize the \"dummy\" class used as a marker", "target": 0}
{"idx": 4636, "func": "TODO: Is this needed?", "target": 1}
{"idx": 4637, "func": "find all possible plugin directories", "target": 0}
{"idx": 4638, "func": "if the given object is a KeyStroke instance, then we ca", "target": 0}
{"idx": 4639, "func": "//Only if we do have a key is there going to be a value", "target": 0}
{"idx": 4640, "func": "TODO: This should fetch the stereotype from our profile", "target": 1}
{"idx": 4641, "func": "//{{{ get() method", "target": 0}
{"idx": 4642, "func": "prepare Java 1.1 style credentials", "target": 0}
{"idx": 4643, "func": "//{{{ fireContentRemoved() method", "target": 0}
{"idx": 4644, "func": "Create the content length we are going to write", "target": 0}
{"idx": 4645, "func": "load addressbook extension handler", "target": 0}
{"idx": 4646, "func": "Launch get on output captured from PCLI lvf", "target": 0}
{"idx": 4647, "func": "if the value is null, then it was read ok", "target": 0}
{"idx": 4648, "func": "Use special cheats that speed up the code (currently about 50%), but may cause problems with future maintenance and add to the class file size (about 500 bytes). //", "target": 1}
{"idx": 4649, "func": "double first because it's what float claims to be", "target": 0}
{"idx": 4650, "func": "Report a progress to the ProgressMonitor window. @see org.argouml.persistence.ProgressListener#progress(org.argouml.persistence.ProgressEvent)", "target": 0}
{"idx": 4651, "func": "get source reference", "target": 0}
{"idx": 4652, "func": "For each reordered node, find it's new position among the current children and move it there", "target": 0}
{"idx": 4653, "func": "need to configure the intervalDelegate to match the original", "target": 0}
{"idx": 4654, "func": "EATM Call the deprecated method which does the same thing but might have an override in older code.", "target": 1}
{"idx": 4655, "func": "original object", "target": 0}
{"idx": 4656, "func": "register the cancel button helpers, if available", "target": 0}
{"idx": 4657, "func": "Make a nil node if no body. Notice this is not part of AST.", "target": 0}
{"idx": 4658, "func": "line 1276", "target": 0}
{"idx": 4659, "func": "i18n[DataCache.msg.driverRegisteredSucessfully=Driver class {0} sucessfully registered for driver definition: {1}]", "target": 0}
{"idx": 4660, "func": "Check if the bound specifies a classifier... //", "target": 0}
{"idx": 4661, "func": "@see org.argouml.uml.ui.UMLComboBox#UMLComboBox( UMLComboBoxModel, Action, boolean)", "target": 0}
{"idx": 4662, "func": "Set the i18n locale", "target": 0}
{"idx": 4663, "func": "if no results render in jmeter.properties, load Standard (default)", "target": 0}
{"idx": 4664, "func": "XmlElement.printNode( getRoot(), \"\");", "target": 0}
{"idx": 4665, "func": "prefer re-generation of identity!", "target": 0}
{"idx": 4666, "func": "//{{{ GZipped setting", "target": 0}
{"idx": 4667, "func": "If we get this with the repository locked, it means our root model element was already deleted. Nothing to do...", "target": 0}
{"idx": 4668, "func": "XXX should we silently catch possible exceptions and try to load a different implementation?", "target": 1}
{"idx": 4669, "func": "//Do the merge", "target": 0}
{"idx": 4670, "func": "Replace a string of newlines with a single one", "target": 0}
{"idx": 4671, "func": "$NON-NLS-1$ Temporary copies, so can set the final ones", "target": 0}
{"idx": 4672, "func": "override on some subclasses", "target": 0}
{"idx": 4673, "func": "//private double labelOffset;", "target": 0}
{"idx": 4674, "func": "Draw the text. //", "target": 0}
{"idx": 4675, "func": "//{{{ getLength() method", "target": 0}
{"idx": 4676, "func": "TODO: Is there anyway we can determine this size at runtime?", "target": 1}
{"idx": 4677, "func": "start out with a default RubyObject allocator", "target": 0}
{"idx": 4678, "func": "@see org.argouml.cognitive.critics.Critic#toDoItem(Object, Designer)", "target": 0}
{"idx": 4679, "func": "check key order", "target": 0}
{"idx": 4680, "func": "i18n[mysql.showLogs=(MySQL) Show Logs]", "target": 0}
{"idx": 4681, "func": "already set up append_features, just add the interface if we haven't already", "target": 0}
{"idx": 4682, "func": "SYNC_FLUSH", "target": 0}
{"idx": 4683, "func": "Set the bounds of the bigPort and cover", "target": 0}
{"idx": 4684, "func": "now add the same series to collection 2 to make them equal again...", "target": 0}
{"idx": 4685, "func": "Fill 4 of value (byte) -87 Fill 7 of value (byte) 33 Fill 2 of value (byte) -87 Fill 9 of value (byte) 33 Fill 2 of value (byte) -19 Fill 4 of value (byte) 33 Fill 10 of value (byte) -87 Fill 18 of value (byte) 33 Fill 2 of value (byte) -87", "target": 0}
{"idx": 4686, "func": "Try to find suffix in module list.", "target": 0}
{"idx": 4687, "func": "deal with the filesets", "target": 0}
{"idx": 4688, "func": "i18n[TableExportCsvDlg.columnSeparator=Column Separator:]", "target": 0}
{"idx": 4689, "func": "i18n[HibernateConfigPanel.toObtainSessionFactFactoryProvider=Invoke the user defined provider method below:]", "target": 0}
{"idx": 4690, "func": "next in hierarchy is an included version of the module we're attempting, so we skip including it", "target": 0}
{"idx": 4691, "func": "view data ->model", "target": 0}
{"idx": 4692, "func": "Default for name and stereotype is no border", "target": 0}
{"idx": 4693, "func": "otherwise one key has been selected (ours) so we get the channel and hand it off", "target": 0}
{"idx": 4694, "func": "If icon has not been defined, then use GUI_CLASS property //", "target": 0}
{"idx": 4695, "func": "displayName is always mandatory:", "target": 0}
{"idx": 4696, "func": "Rectangle2D hotspot =", "target": 0}
{"idx": 4697, "func": "The subject may be either a host or a domain", "target": 0}
{"idx": 4698, "func": "// private boolean _showEndOfLineMarkers = false;", "target": 0}
{"idx": 4699, "func": "Find the longest prefix shared by the current file and the reference directory.", "target": 0}
{"idx": 4700, "func": "Enumerate the current children of node to find out which now sorts in different order, since these must be moved", "target": 0}
{"idx": 4701, "func": "$sid$", "target": 0}
{"idx": 4702, "func": "get messagecontroller of frame", "target": 0}
{"idx": 4703, "func": "line 769", "target": 0}
{"idx": 4704, "func": "Skip over this archive path to the next one, since we are handling this one special. //", "target": 0}
{"idx": 4705, "func": "Push the class/constructor name as a constant", "target": 0}
{"idx": 4706, "func": "i18n[syntax.removeRows=remove selected rows]", "target": 0}
{"idx": 4707, "func": "Catalog", "target": 0}
{"idx": 4708, "func": "Action bar.", "target": 0}
{"idx": 4709, "func": "size should be 0 since item was removed", "target": 0}
{"idx": 4710, "func": "(non-Javadoc) @see java.awt.datatransfer.Transferable#getTransferData(java.awt.datatransfer.DataFlavor)", "target": 0}
{"idx": 4711, "func": "//schema declarations go in next", "target": 0}
{"idx": 4712, "func": "Retrieve an existing GlassPane if old one already exist or create a new one, otherwise return null", "target": 0}
{"idx": 4713, "func": "// _tree.addTreeSelectionListener(new ObjectTreeSelectionListener()); // _objTreeSelLis = new ObjectTreeSelectionListener(); // _tree.addTreeSelectionListener(_objTreeSelLis);", "target": 0}
{"idx": 4714, "func": "EATM getDecoratedAdapterFactory().", "target": 0}
{"idx": 4715, "func": "Convert bytes to Bytes", "target": 0}
{"idx": 4716, "func": "//{{{ createToolBar() method", "target": 0}
{"idx": 4717, "func": "//create an index on the key columns??", "target": 1}
{"idx": 4718, "func": "FIXME: Don't allow multiple threads to do this at once", "target": 1}
{"idx": 4719, "func": "@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren( java.lang.Object)", "target": 0}
{"idx": 4720, "func": "Entry entry = new Entry(eObject, CONTAINER); return (InternalEObject)map.get(entry);", "target": 0}
{"idx": 4721, "func": "@see TestCase#tearDown()", "target": 0}
{"idx": 4722, "func": "$NON-NLS-1$ Button group resources", "target": 0}
{"idx": 4723, "func": "//textArea.getBuffer().endCompoundEdit();", "target": 0}
{"idx": 4724, "func": "Didn't work.", "target": 0}
{"idx": 4725, "func": "FIXME: add setSeriesItemLabelGenerator(int, CategoryItemLabelGenerator, boolean)", "target": 0}
{"idx": 4726, "func": "line 274", "target": 0}
{"idx": 4727, "func": "put the gui object back to the way it was.", "target": 0}
{"idx": 4728, "func": "Evaluate any inner class class definitions in the block effectively recursively call this method for contained classes first", "target": 0}
{"idx": 4729, "func": "//downgrade warnings on RMI stublike classes, as they are generated //by rmic, so there is no need to tell the user that their source is //missing.", "target": 0}
{"idx": 4730, "func": "//{{{ registerFoldHandler() method", "target": 0}
{"idx": 4731, "func": "0530..058F;", "target": 0}
{"idx": 4732, "func": "@see javax.swing.event.MenuListener#menuDeselected(javax.swing.event.MenuEvent)", "target": 0}
{"idx": 4733, "func": "For Locale selection.<p> TODO: Detect the available locales from the available files. @return Locales used in ArgoUML", "target": 1}
{"idx": 4734, "func": "initialise protocol layer", "target": 0}
{"idx": 4735, "func": "//log security exceptions and continue; it aint that //important and may be quite common running Ant embedded.", "target": 0}
{"idx": 4736, "func": "holder array needs to grow to be able to hold another column", "target": 0}
{"idx": 4737, "func": "//This method makes the web service call //If you want to you can create a web service proxy from the WSDL file, //9 times out of 10, that's what you really want to do.", "target": 0}
{"idx": 4738, "func": "cache region is defined by the root-class in the hierarchy...", "target": 0}
{"idx": 4739, "func": "leave some space below the \"include\"", "target": 0}
{"idx": 4740, "func": "i18n[DataSetUpdateableTableModelImpl.error.rereadingdb=There was a problem reported while re-reading the DB. The DB message was:\\n{0}]", "target": 0}
{"idx": 4741, "func": "add a new inputstream to read from", "target": 0}
{"idx": 4742, "func": "load target for invocations", "target": 0}
{"idx": 4743, "func": "SQLFunction implementation", "target": 0}
{"idx": 4744, "func": "//{{{ getFileFilter() method", "target": 0}
{"idx": 4745, "func": "BOTTOM", "target": 0}
{"idx": 4746, "func": "Both for fixed arity and variable arity methods", "target": 0}
{"idx": 4747, "func": "line 1708", "target": 0}
{"idx": 4748, "func": "//{{{ needFullRepaint() method", "target": 0}
{"idx": 4749, "func": "i18n[graph.showZoomPaper=Show/Zoom paper edges]", "target": 0}
{"idx": 4750, "func": "line 1535", "target": 0}
{"idx": 4751, "func": "impl note: since multiple searches now allowed, extra level in hierarchy", "target": 0}
{"idx": 4752, "func": "First get the collection of ElementResidence", "target": 0}
{"idx": 4753, "func": "line 1004", "target": 0}
{"idx": 4754, "func": "Ignored", "target": 0}
{"idx": 4755, "func": "old (quasi-deprecated) interface class", "target": 0}
{"idx": 4756, "func": "set start and end date", "target": 0}
{"idx": 4757, "func": "try directory", "target": 0}
{"idx": 4758, "func": "save to profiles.xml", "target": 0}
{"idx": 4759, "func": "orientation is HORIZONTAL", "target": 0}
{"idx": 4760, "func": "line 960", "target": 0}
{"idx": 4761, "func": "Don't forget to set this to the number of statements in result", "target": 0}
{"idx": 4762, "func": "Could not delete the file - possibly someone has a lock on it", "target": 0}
{"idx": 4763, "func": "This column actually consists of a row with two sub-columns The first column contains the labels, and the second column contains the fields.", "target": 0}
{"idx": 4764, "func": "Convert the string value into the proper type.", "target": 0}
{"idx": 4765, "func": "project onto subtrahend", "target": 0}
{"idx": 4766, "func": "TRY SOME PREDECESSOR ERRORS", "target": 0}
{"idx": 4767, "func": "Make sure the appropriate scope has proper size. See JRUBY-2046.", "target": 0}
{"idx": 4768, "func": "When I tried using a length for LONGVARBINARY that is the max length of the source records, I get the following exception: Exception condition 239. Data exception - string data, right truncation. I tried bit varying(32767) with data that had max length of 16384. So it's back to maximum length hard-coded for now. registerColumnType(Types.LONGVARBINARY, 2147000000, \"bit varying($l)\");", "target": 1}
{"idx": 4769, "func": "TODO: Allow the user to specify the sequence name for dialects that don't natively support auto-increment columns without using sequence/trigger combo.", "target": 1}
{"idx": 4770, "func": "//}}}", "target": 0}
{"idx": 4771, "func": "//fill in args", "target": 0}
{"idx": 4772, "func": "Colon3", "target": 0}
{"idx": 4773, "func": "//{{{ getSubregionStartOffset() method", "target": 0}
{"idx": 4774, "func": "Needed to bump this up to DotNode, because that is the only thing which currently knows about the property-ref path in the correct format; it is either this, or recurse over the DotNodes constructing the property path just like DotNode does internally", "target": 0}
{"idx": 4775, "func": "Temporary copies, so can set the final ones", "target": 0}
{"idx": 4776, "func": "Stop if the next item will be out the event bounds. The event bounds values are also misaligned on GTK. //", "target": 0}
{"idx": 4777, "func": "add a system property so samplers can check to see if JMeter is running in NonGui mode $NON-NLS-1$ TODO - why does it create a new instance?", "target": 1}
{"idx": 4778, "func": "end class ActionAboutArgoUML", "target": 0}
{"idx": 4779, "func": "Handle any filters applied to the class level", "target": 0}
{"idx": 4780, "func": "SELECT 'CREATE VIEW FOOVIEW AS ' || VIEWTEXT FROM SYSPROGRESS.SYSVIEWS where VIEWNAME = 'FOOVIEW' and OWNER = 'MANNINGR'", "target": 0}
{"idx": 4781, "func": "//Custom SQL (would be better if these were private)", "target": 0}
{"idx": 4782, "func": "zero length array", "target": 0}
{"idx": 4783, "func": "//for java1.5+, we generate compatible stubs, that is, unless //the caller asked for IDL or IIOP support.", "target": 0}
{"idx": 4784, "func": "query all criteria of all providers", "target": 0}
{"idx": 4785, "func": "line 1902", "target": 0}
{"idx": 4786, "func": "//Selection[] selection = (Selection[])buffer.getProperty(Buffer.SELECTION);", "target": 0}
{"idx": 4787, "func": "fillPaintTransformer", "target": 0}
{"idx": 4788, "func": "if a label has been supplied and it is a view label, use it to configure the view", "target": 0}
{"idx": 4789, "func": "reactivate", "target": 0}
{"idx": 4790, "func": "//GuardedBy(\"this\")", "target": 0}
{"idx": 4791, "func": "checkcast", "target": 0}
{"idx": 4792, "func": "//TreeFactory", "target": 0}
{"idx": 4793, "func": "//{{{ getActionNames() method", "target": 0}
{"idx": 4794, "func": "We don't mind if this is left over Ditto, not a sampler", "target": 0}
{"idx": 4795, "func": "Do it", "target": 0}
{"idx": 4796, "func": "turn the rankings into relative rankings, from 1 to 4", "target": 0}
{"idx": 4797, "func": "//{{{ nextTextArea() method", "target": 0}
{"idx": 4798, "func": "//EParameterImpl", "target": 0}
{"idx": 4799, "func": "Fetch data from screen fields", "target": 0}
{"idx": 4800, "func": "Helpers", "target": 0}
{"idx": 4801, "func": "try to be smart, not to be fooled by a weird directory name", "target": 0}
{"idx": 4802, "func": "query with only a single criteria", "target": 0}
{"idx": 4803, "func": "remove configuration directory", "target": 0}
{"idx": 4804, "func": "create the output .jar, if required", "target": 0}
{"idx": 4805, "func": "-1 so that the last isn't checked", "target": 0}
{"idx": 4806, "func": "define the default locations for up to 8 axes...", "target": 0}
{"idx": 4807, "func": "@see org.omg.uml.diagraminterchange.ADiagramElementProperty#exists( org.omg.uml.diagraminterchange.DiagramElement, org.omg.uml.diagraminterchange.Property)", "target": 0}
{"idx": 4808, "func": "need to create a generic jar first.", "target": 0}
{"idx": 4809, "func": "two columns to represent a Primary key in the pktest table", "target": 0}
{"idx": 4810, "func": "line 1093", "target": 0}
{"idx": 4811, "func": "Casting to reference type", "target": 0}
{"idx": 4812, "func": "i18n[graph.addTableRefBy=add table referenced by {0}]", "target": 0}
{"idx": 4813, "func": "Initialize all the fields from the command parameter. //", "target": 0}
{"idx": 4814, "func": "//TODO: move to .sql package!!", "target": 1}
{"idx": 4815, "func": "to restore last tab used", "target": 0}
{"idx": 4816, "func": "/////////////////////////////////////////////////////////////////////////New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 4817, "func": "pass the params to the mailer", "target": 0}
{"idx": 4818, "func": "Next the buttons.", "target": 0}
{"idx": 4819, "func": "menuitem/toolbar button action", "target": 0}
{"idx": 4820, "func": "When using this as a custom selector, this method will be called. It translates each parameter into the appropriate setXXX() call. @param parameters the complete set of parameters for this selector.", "target": 0}
{"idx": 4821, "func": "@see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)", "target": 0}
{"idx": 4822, "func": "return", "target": 0}
{"idx": 4823, "func": "TODO: We currently don't support per-fig settings for most stuff, so we can just use the defaults that we were given. settings = new DiagramSettings(renderSettings);", "target": 1}
{"idx": 4824, "func": "(non-Javadoc) @see org.columba.mail.folder.Folder#getUids(org.columba.api.command.IWorkerStatusController)", "target": 0}
{"idx": 4825, "func": "TODO: Issue 6144. It is proposed to allow any paclage to return as a potential namespace. Commenting out until this is reviewed and clearly accepted by all.", "target": 1}
{"idx": 4826, "func": "//{{{ Getters and setters", "target": 0}
{"idx": 4827, "func": "apply additional handcrafted rules", "target": 0}
{"idx": 4828, "func": "end class CrUselessAbstract", "target": 0}
{"idx": 4829, "func": "invoke static __file__", "target": 0}
{"idx": 4830, "func": "Create a new closure context", "target": 0}
{"idx": 4831, "func": "//TODO: need some caching scheme? really comes down to decision regarding amount of state (if any) kept on PropertyAccessors", "target": 1}
{"idx": 4832, "func": "Jump instruction bbs dont add an edge to the succeeding bb by default", "target": 0}
{"idx": 4833, "func": "//{{{ hideLineRange() method", "target": 0}
{"idx": 4834, "func": "NOTUSED org.apache.jmeter.monitor.model.Status st = TODO - charset?", "target": 1}
{"idx": 4835, "func": "Add the value back in the right place. //", "target": 0}
{"idx": 4836, "func": "let's be nice with the next generation of developers", "target": 0}
{"idx": 4837, "func": "//{{{ getPrev() method", "target": 0}
{"idx": 4838, "func": "Note that the way they are sorted, the values of index[i++] always increase, so the objects are added from right to left in the list. EATM TODO We could make this more efficient by grouping the adds when indices increment by one, so that a single grouped notification would result. //", "target": 1}
{"idx": 4839, "func": "//{{{ Static part", "target": 0}
{"idx": 4840, "func": "// private ComponentTuplizerFactory componentTuplizerFactory; todo : HHH-3517 and HHH-1907 // private BytecodeProvider bytecodeProvider;", "target": 0}
{"idx": 4841, "func": "check the next character", "target": 0}
{"idx": 4842, "func": "The buttons on selection for a Stereotype. <p> TODO: Find a way to hide the OperationsCompartment on the FigClass of the created metaclass. @author michiel", "target": 1}
{"idx": 4843, "func": "We want to detect two empty text values in a row before we decide to restore the original value. Since 'text' contains the new value, we want to allow the first empty 'text' so that the user can clear the field, and on the second one we will set it to the original value.", "target": 0}
{"idx": 4844, "func": "start move command", "target": 0}
{"idx": 4845, "func": "line 589", "target": 0}
{"idx": 4846, "func": "//{{{ createMenuBar() method", "target": 0}
{"idx": 4847, "func": "//$NON-NLS-1$//$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-1$", "target": 0}
{"idx": 4848, "func": "Set up the property panels for statechart diagrams:", "target": 0}
{"idx": 4849, "func": "TODO: Use per-project undo manager, not global", "target": 0}
{"idx": 4850, "func": "line 494", "target": 0}
{"idx": 4851, "func": "we have a variable name", "target": 0}
{"idx": 4852, "func": "Either delegate the call or return nothing. //", "target": 0}
{"idx": 4853, "func": "TODO should this be getMin()?", "target": 1}
{"idx": 4854, "func": "Mark meta-data to indicate it can't be changed", "target": 0}
{"idx": 4855, "func": "special handling", "target": 0}
{"idx": 4856, "func": "//setIcon(ImageLoader.getImageIcon(\"stock_down-16.png\"));", "target": 0}
{"idx": 4857, "func": "//{{{ cacheDockableWindows() method", "target": 0}
{"idx": 4858, "func": "//{{{ getDockableWindow() method", "target": 0}
{"idx": 4859, "func": "//class-BFT", "target": 0}
{"idx": 4860, "func": "some checks that the clone is independent of the original", "target": 0}
{"idx": 4861, "func": "builder.append(searchButton);", "target": 0}
{"idx": 4862, "func": "opcodes visit method (- = idem)", "target": 0}
{"idx": 4863, "func": "get inputstream of message body", "target": 0}
{"idx": 4864, "func": "send \"C0644 filesize filename\", where filename should not include '/'", "target": 0}
{"idx": 4865, "func": "remove duplicate properties - last property wins Needed for backward compatibility", "target": 0}
{"idx": 4866, "func": "external file attributes", "target": 0}
{"idx": 4867, "func": "If there are any warnings other than raw type warnings, include all the warnings. //", "target": 0}
{"idx": 4868, "func": "If non-null, then any object provided to invoke() is ignored.", "target": 0}
{"idx": 4869, "func": "mercuryPaint", "target": 0}
{"idx": 4870, "func": "use the pool to retrieve the parser", "target": 0}
{"idx": 4871, "func": "See if we had a 2nd invalidation from the same initial preinvalidation timestamp. If so, only increment if the new current value is an increase", "target": 0}
{"idx": 4872, "func": "// sqlAliasSuffixes[i] = element.getColumnAliasSuffix();", "target": 0}
{"idx": 4873, "func": "FIXME: JRUBY-3188 ends up with condition returning null...quick fix until I can dig into it", "target": 1}
{"idx": 4874, "func": "//TODO (@author fdietz): i18n", "target": 1}
{"idx": 4875, "func": "we are the LHS of the DOT representing a naked comp-prop-ref", "target": 0}
{"idx": 4876, "func": "get header", "target": 0}
{"idx": 4877, "func": "//{{{ pathEquals() method", "target": 0}
{"idx": 4878, "func": "[5] Name ::= (Letter | '_' | ':') (NameChar)", "target": 0}
{"idx": 4879, "func": "TODO: to be implemented", "target": 1}
{"idx": 4880, "func": "Specific classes to be remapped remap.put(\"\", \"\");", "target": 0}
{"idx": 4881, "func": "make sure end of match is visible", "target": 0}
{"idx": 4882, "func": "@see org.eclipse.emf.ecore.InternalEObject#eSetProxyURI(org.eclipse.emf.common.util.URI)", "target": 0}
{"idx": 4883, "func": "performance op to avoid the array search", "target": 0}
{"idx": 4884, "func": "A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.", "target": 0}
{"idx": 4885, "func": "data, random accessible current token current input character (original) current input character (for token) last input character position of current character line number of current character start position of current line", "target": 0}
{"idx": 4886, "func": "Time to wait between checks that the event dispatch thread isn't hung.", "target": 0}
{"idx": 4887, "func": "Server based authority.", "target": 0}
{"idx": 4888, "func": "this makes HyperSearch much faster", "target": 0}
{"idx": 4889, "func": "don't automatically expand when merging", "target": 0}
{"idx": 4890, "func": "this in case we are being deleted", "target": 0}
{"idx": 4891, "func": "//before cascade!", "target": 0}
{"idx": 4892, "func": "update the relative sizes and positions of internel Figs", "target": 0}
{"idx": 4893, "func": "Mutators hold write lock & will deadlock if use is not thread safe", "target": 0}
{"idx": 4894, "func": "Logger. private static final Logger LOG = Logger.getLogger(DefaultOclEvaluator.class.getName());", "target": 0}
{"idx": 4895, "func": "Assumes the next child is the labelled component", "target": 0}
{"idx": 4896, "func": "Need to copy the lists since we will be moving the elements one by one:", "target": 0}
{"idx": 4897, "func": "Instances.", "target": 0}
{"idx": 4898, "func": "@see org.argouml.cognitive.ToDoListListener#toDoItemsChanged(org.argouml.cognitive.ToDoListEvent)", "target": 0}
{"idx": 4899, "func": "The loop ensures atomicity of the select + update even for no transaction or read committed isolation level", "target": 0}
{"idx": 4900, "func": "all implementations extend TestElement", "target": 0}
{"idx": 4901, "func": "i18n[SQLResultExecuterPanel.toggleSticky=Toggle sticky]", "target": 0}
{"idx": 4902, "func": "init threaded-view model", "target": 0}
{"idx": 4903, "func": "increment a null value", "target": 0}
{"idx": 4904, "func": "secondary renderers", "target": 0}
{"idx": 4905, "func": "//{{{ RemoveButton class", "target": 0}
{"idx": 4906, "func": "WARNING - This has containment side effects! Eclipse UML2 will move the Property from the Classifier to the Association when the navigability is changed.", "target": 0}
{"idx": 4907, "func": "null is ignored", "target": 0}
{"idx": 4908, "func": "must not qualify column name", "target": 0}
{"idx": 4909, "func": "This used to be deferred, but it's only 30-40 msec of work.", "target": 0}
{"idx": 4910, "func": "//composerController.getEditorController().getView().setText(checked);", "target": 0}
{"idx": 4911, "func": "We'll default to this. //", "target": 0}
{"idx": 4912, "func": "Get the namespace hierarchy for each element", "target": 0}
{"idx": 4913, "func": "need to deep clone?", "target": 0}
{"idx": 4914, "func": "Read an XML or text declaration.", "target": 0}
{"idx": 4915, "func": "if the current shortcut has not been set, then the actual shortcut value is the default one", "target": 0}
{"idx": 4916, "func": "(array==null) ? tempList.get(i) :", "target": 0}
{"idx": 4917, "func": "we support up to 4 phones", "target": 0}
{"idx": 4918, "func": "//mark for a rebuild if we are newer", "target": 0}
{"idx": 4919, "func": "Don't use systemId here or it will get opened in preference to inputStream.", "target": 0}
{"idx": 4920, "func": "Only do this once.", "target": 0}
{"idx": 4921, "func": "TODO: Why does the next part not work?", "target": 1}
{"idx": 4922, "func": "item.setIcon(null);", "target": 0}
{"idx": 4923, "func": "get the previous point and the next point so we can calculate a \"hot spot\" for the area (used by the chart entity)...", "target": 0}
{"idx": 4924, "func": "let the superclass handle it...", "target": 0}
{"idx": 4925, "func": "The SSLManager handles the KeyStore information for JMeter. Basically, it handles all the logic for loading and initializing all the JSSE parameters and selecting the alias to authenticate against if it is available. SSLManager will try to automatically select the client certificate for you, but if it can't make a decision, it will pop open a dialog asking you for more information. TODO: does not actually prompt", "target": 1}
{"idx": 4926, "func": "We assume that classes and attributes won't be in the same completion list. Classes will be completed fully qualified when the user works with fully qualified class names ...", "target": 0}
{"idx": 4927, "func": "register all the known DTDs", "target": 0}
{"idx": 4928, "func": "build the command line from what we got. the format is cleartool rmtype [options...] type-selector... as specified in the CLEARTOOL help", "target": 0}
{"idx": 4929, "func": "i18n[HelpViewerWindow.error.loadfaqfile=Error retrieving FAQ from URL = {0}]", "target": 0}
{"idx": 4930, "func": "pdfDocument class will be null so the function will return false", "target": 0}
{"idx": 4931, "func": "20 is just a paranoia constant", "target": 0}
{"idx": 4932, "func": "itemLabelFontList baseItemLabelFont itemLabelPaintList baseItemLabelPaint positiveItemLabelPositionList basePositiveItemLabelPosition negativeItemLabelPositionList baseNegativeItemLabelPosition itemLabelAnchorOffset createEntityList baseCreateEntities", "target": 0}
{"idx": 4933, "func": "//{{{ maybeReload() method", "target": 0}
{"idx": 4934, "func": "Unfortunately, the number of digits in the exponent is not clearly defined in Ruby documentation. This is a platform/version-dependent behavior. On Linux/Mac/Cygwinnix, two digits are used. On Windows, 3 digits are used. It is desirable for JRuby to have consistent behavior, and the two digits behavior was selected. This is also in sync with \"Java-native\" sprintf behavior (java.util.Formatter). E or e", "target": 0}
{"idx": 4935, "func": "if the plot area is too small, just return...", "target": 0}
{"idx": 4936, "func": "set Ruby", "target": 0}
{"idx": 4937, "func": "Set this for the container. //", "target": 0}
{"idx": 4938, "func": "so that jEdit doesn't exit with no views open automatically //setDaemon(true);", "target": 0}
{"idx": 4939, "func": "TODO: This can be a mess... There are any better solution?", "target": 1}
{"idx": 4940, "func": "Consider using Apache commons pool to create a pool of document builders or make sure XMLParserUtils creates builders efficiently.", "target": 0}
{"idx": 4941, "func": "Simple inclusion and exclusion filter", "target": 0}
{"idx": 4942, "func": "Create the delegate URL. //", "target": 0}
{"idx": 4943, "func": "Parameter etc.", "target": 0}
{"idx": 4944, "func": "type-name@vob", "target": 0}
{"idx": 4945, "func": "end class FigAssociation", "target": 0}
{"idx": 4946, "func": "increase offset by 2px at a time", "target": 0}
{"idx": 4947, "func": "skip the first column builder.setLeadingColumnOffset(1); Add components to the panel:", "target": 0}
{"idx": 4948, "func": "Try absolute", "target": 0}
{"idx": 4949, "func": "We can't assign null to primitive types.", "target": 0}
{"idx": 4950, "func": "make sure to clear the flag for next run of the loop", "target": 0}
{"idx": 4951, "func": "The header for the scrollable part which presents column differences", "target": 0}
{"idx": 4952, "func": "dissallow assignment to magic fields", "target": 0}
{"idx": 4953, "func": "UNIQUE VIOLATION", "target": 0}
{"idx": 4954, "func": "The split may occur in either x splitted segments, if any, but not in both", "target": 0}
{"idx": 4955, "func": "Create a new FILTERS node as a parent of all filters", "target": 0}
{"idx": 4956, "func": "shadowGenerator", "target": 0}
{"idx": 4957, "func": "The property is another class..", "target": 0}
{"idx": 4958, "func": "CHECKSTYLE:ON", "target": 0}
{"idx": 4959, "func": "this seems unlikely to happen unless it's a totally bogus fileno ...so do we even need to bother trying to create one?", "target": 1}
{"idx": 4960, "func": "Just change the ChangeExpression", "target": 0}
{"idx": 4961, "func": "//Set up color chooser for setting quoted color", "target": 0}
{"idx": 4962, "func": "if no DataType object, then there is nothing to handle File IO, so cannot do it", "target": 0}
{"idx": 4963, "func": "update content-pane", "target": 0}
{"idx": 4964, "func": "no recurrency, so nothing in the string", "target": 0}
{"idx": 4965, "func": "autoallocthis", "target": 0}
{"idx": 4966, "func": "may change the format later restart from beginning", "target": 0}
{"idx": 4967, "func": "Add the custom color item.", "target": 0}
{"idx": 4968, "func": "TODO: to get cast and boxing working e.g. e.g. Byte [] ia = { 1, 2 } If the baseType is a wrapper type then we need to get the primitive TYPE class for the base type here in order for the cast to allow it... Then boxing will happen naturally in the Array.set(). e.g. Integer [] ia = { 1, 2 }", "target": 1}
{"idx": 4969, "func": "group", "target": 0}
{"idx": 4970, "func": "bang: true, no match, no substitution", "target": 0}
{"idx": 4971, "func": "//0000 0000 1111 //1111 0000 0000", "target": 0}
{"idx": 4972, "func": "Checking for and creating initial timestamp to check against", "target": 0}
{"idx": 4973, "func": "exec needs to behave differently in-process, because it's technically supposed to replace the calling process. So if we're supposed to run in-process, we allow it to use the default streams and not use pumpers at all. See JRUBY-2156 and JRUBY-2154.", "target": 0}
{"idx": 4974, "func": "_resources.addToMenu(coll.get(DropDatabaseAction.class), mysqlMenu);", "target": 0}
{"idx": 4975, "func": "can only happen for ESCAPE_MODE_BACKSLASH", "target": 0}
{"idx": 4976, "func": "DATA_TYPE column of result set. int data = _rs.getInt(idx);", "target": 0}
{"idx": 4977, "func": "additional ctor for processing tests which use int parameters", "target": 0}
{"idx": 4978, "func": "//{{{ Protected members", "target": 0}
{"idx": 4979, "func": "//{{{ ToolBarEditDialog constructor", "target": 0}
{"idx": 4980, "func": "mockSessionManager", "target": 0}
{"idx": 4981, "func": "read mdl file...", "target": 0}
{"idx": 4982, "func": "(non-Javadoc) @see org.columba.chat.jabber.IBuddyStatus#getStatusMessage()", "target": 0}
{"idx": 4983, "func": "end class TabProps", "target": 0}
{"idx": 4984, "func": "//{{{ quickIncrementalSearch() method", "target": 0}
{"idx": 4985, "func": "one of the expected errors, just ignore", "target": 0}
{"idx": 4986, "func": "clear old values", "target": 0}
{"idx": 4987, "func": "Settings panes", "target": 0}
{"idx": 4988, "func": "TODO: validate port as numeric", "target": 1}
{"idx": 4989, "func": "Tests if enter is pressed in the _bbodField so we need to set the target bounds. @see java.awt.event.KeyListener#keyTyped(java.awt.event.KeyEvent)", "target": 0}
{"idx": 4990, "func": "Like isStringType(), but still returns true even if multiplicity-many. //", "target": 0}
{"idx": 4991, "func": "event name filename line numbers should be 1-based", "target": 0}
{"idx": 4992, "func": "Get the first entry", "target": 0}
{"idx": 4993, "func": "bindings scopes must always be ManyVars scopes since evals can grow them", "target": 0}
{"idx": 4994, "func": "three args with block", "target": 0}
{"idx": 4995, "func": "if mouse button was pressed twice times", "target": 0}
{"idx": 4996, "func": "TODO: Is giving a FK constraint a name universally supported and done the same way on every database?", "target": 1}
{"idx": 4997, "func": "@see java.awt.datatransfer.Transferable#isDataFlavorSupported( java.awt.datatransfer.DataFlavor)", "target": 0}
{"idx": 4998, "func": "Now add the areas around the text to return the complete size:", "target": 0}
{"idx": 4999, "func": "//{{{ setFirstLine() method", "target": 0}
{"idx": 5000, "func": "//Check to see that the file with name \"name\" exists.", "target": 0}
{"idx": 5001, "func": "if all messages are tagged with tag, then return true, else false", "target": 0}
{"idx": 5002, "func": "check null argument 1", "target": 0}
{"idx": 5003, "func": "//{{{ getFileName() method", "target": 0}
{"idx": 5004, "func": "//{{{ getDocument() method", "target": 0}
{"idx": 5005, "func": "Show that maxlong now saved as 0", "target": 0}
{"idx": 5006, "func": "//Dimensions", "target": 0}
{"idx": 5007, "func": "//Skip dates that are too early", "target": 0}
{"idx": 5008, "func": "XXX: hypotheses no qualifiers (I don't know)", "target": 1}
{"idx": 5009, "func": "work around that crazy issue where the tree contains \"empty\" FromElements (no text); afaict, this is caused by FromElementFactory.createCollectionJoin()", "target": 1}
{"idx": 5010, "func": "i18n[SchemaPropertiesPanel.deleteCache=Delete cache file]", "target": 0}
{"idx": 5011, "func": "draw the X axis", "target": 0}
{"idx": 5012, "func": "acrobatic cast.", "target": 0}
{"idx": 5013, "func": "send a dataset change event to self to trigger plot change event", "target": 0}
{"idx": 5014, "func": "finally with no exception", "target": 0}
{"idx": 5015, "func": "i18n[graph.viewTableInObjectTree=View table in Object tree]", "target": 0}
{"idx": 5016, "func": "Decrease value to hit upper range.", "target": 0}
{"idx": 5017, "func": "remove trailing /", "target": 0}
{"idx": 5018, "func": "line 1827 \"DefaultRubyParser.y\"", "target": 0}
{"idx": 5019, "func": "i18n[TableExportCsvCommand.writeFileSuccess=Export to file \"{0}\" is complete.]", "target": 0}
{"idx": 5020, "func": "//[boolean]", "target": 0}
{"idx": 5021, "func": "M+ discarded by key event workaround!", "target": 0}
{"idx": 5022, "func": "properly handle property-ref-based associations", "target": 0}
{"idx": 5023, "func": "for merging of versioned entities, we consider the version having been changed only when: 1) the two version values are different; AND 2) The target actually represents database state! This second condition is a special case which allows an entity to be merged during the same transaction (though during a seperate operation) in which it was originally persisted/saved", "target": 0}
{"idx": 5024, "func": "-incremental", "target": 0}
{"idx": 5025, "func": "line 701", "target": 0}
{"idx": 5026, "func": "TBLRC 11101", "target": 0}
{"idx": 5027, "func": "i18n[popupEditableIoPanel.wrapLines=Wrap Lines on/off]", "target": 0}
{"idx": 5028, "func": "i18n[mssql.allObjects=All objects]", "target": 0}
{"idx": 5029, "func": "//use the id passed in", "target": 0}
{"idx": 5030, "func": "<em>Warning: when changing the implementation of this method be warned that the sequence of the if then else tree DOES matter.</em> Most notably, do not move the setNamespace method any level up in the tree.<p>", "target": 0}
{"idx": 5031, "func": "the upper limit of the curve range belongs by definition to the last interval", "target": 0}
{"idx": 5032, "func": "/////////////////////////////// SORT /////////////////////////////////////", "target": 0}
{"idx": 5033, "func": "Fill 3 of value (byte) 33 Fill 2 of value (byte) -19 Fill 2 of value (byte) 33", "target": 0}
{"idx": 5034, "func": "A model element has been removed from this packages namespace If the Fig representing that model element is on the same diagram as this package then make sure it is not enclosed by this package. TODO: In my view the Fig representing the model element should be removed from the diagram. Yet to be agreed. Bob.", "target": 1}
{"idx": 5035, "func": "ok, got a non-zero, have to own up to our horded zeroes", "target": 0}
{"idx": 5036, "func": "We shouldn't get here, but just in case... We want a wide exception catcher to make sure our transaction always gets ended", "target": 0}
{"idx": 5037, "func": "if user cancelled task exit immediately", "target": 0}
{"idx": 5038, "func": "TOPLEVEL self and a few others want a top-level scope. We create this one right away and then pass it into top-level parse so it ends up being the top level.", "target": 0}
{"idx": 5039, "func": "(non-Javadoc) @see org.columba.core.taskmanager.ITaskManager#register(org.columba.core.command.Worker)", "target": 0}
{"idx": 5040, "func": "TODO: check if too many open files, GC and try again", "target": 1}
{"idx": 5041, "func": "we use ValueMarker for the tests, because we need a concrete subclass...", "target": 0}
{"idx": 5042, "func": "Quadrant II & III", "target": 0}
{"idx": 5043, "func": "int featureId = DialectUtils.COLUMN_TYPE_ALTER_TYPE; String msg = DialectUtils.getUnsupportedMessage(this, featureId); throw new UnsupportedOperationException(msg);", "target": 0}
{"idx": 5044, "func": "IDENT might be the name of a class.", "target": 0}
{"idx": 5045, "func": "create a recorder entry", "target": 0}
{"idx": 5046, "func": "add -file xxxxx to the commandline", "target": 0}
{"idx": 5047, "func": "i18n[OraclePlugin.hint=Preferences for Oracle]", "target": 0}
{"idx": 5048, "func": "result = this.workingCalendar.getTimeInMillis(); preceding code won't work with JDK 1.3", "target": 1}
{"idx": 5049, "func": "//{{{ ResultRenderer class", "target": 0}
{"idx": 5050, "func": "//{{{ setMarkerHighlightColor() method", "target": 0}
{"idx": 5051, "func": "//memory optimization", "target": 0}
{"idx": 5052, "func": "i18n[I18n.changeApplicationDefaultLocaleNote=Example VM Parameters to change locale used by SQuirreL: -Duser.language=en -Duser.country=US]", "target": 0}
{"idx": 5053, "func": "The box for the compartments is somewhere inside the outside bounds:", "target": 0}
{"idx": 5054, "func": "//{{{ extendSelection() method", "target": 0}
{"idx": 5055, "func": "We don't support .so, but some stdlib require .so directly replace it with .jar to look for an extension type we do support", "target": 0}
{"idx": 5056, "func": "upperMargin", "target": 0}
{"idx": 5057, "func": "We try to update the status once to give StarTeam another chance.", "target": 0}
{"idx": 5058, "func": "---- fullnameButton ----", "target": 0}
{"idx": 5059, "func": "segment only occupies the front", "target": 0}
{"idx": 5060, "func": "-c", "target": 0}
{"idx": 5061, "func": "line 785", "target": 0}
{"idx": 5062, "func": "TODO: at the point where we are resolving collection references, we don't know if the uk value has been resolved (depends if it was earlier or later in the mapping document) - now, we could try and use e.getStatus() to decide to semiResolve(), trouble is that initializeEntity() reuses the same array for resolved and hydrated values", "target": 1}
{"idx": 5063, "func": "Hack to deal with Sybase's sys tables", "target": 1}
{"idx": 5064, "func": "convert each string into key+HashMap and fill it into the data", "target": 0}
{"idx": 5065, "func": "cascade-save to many-to-one BEFORE the parent is saved", "target": 0}
{"idx": 5066, "func": "Since we aren't sure of ordering, fire event for whole table", "target": 0}
{"idx": 5067, "func": "No Generalizations on Deployment Diagram", "target": 0}
{"idx": 5068, "func": "Read the entire row, since some drivers complain if columns are read out of sequence", "target": 0}
{"idx": 5069, "func": "store argument count information into scope", "target": 0}
{"idx": 5070, "func": "//{{{ Do some stuff once loading is finished", "target": 0}
{"idx": 5071, "func": "TODO: We shouldn't need this reflection any more once we have convinced ourselves that everything with a setItemUID method is implementing IItemUID", "target": 1}
{"idx": 5072, "func": "Provide dummy implementations to suppress download and display of related resources: - FRAMEs - IMAGEs TODO create better dummy displays TODO suppress LINK somehow", "target": 1}
{"idx": 5073, "func": "aliases named identifier ( alias.idname )", "target": 0}
{"idx": 5074, "func": "private JTextPane view;", "target": 0}
{"idx": 5075, "func": "register for status events", "target": 0}
{"idx": 5076, "func": "//{{{ contentRemoved() method", "target": 0}
{"idx": 5077, "func": "@see org.argouml.uml.ui.UMLModelElementListModel2#addOtherModelEventListeners(java.lang.Object)", "target": 0}
{"idx": 5078, "func": "Used to be done in initializeProperties", "target": 0}
{"idx": 5079, "func": "Well formedness rule 4.12.3.1 CompositeState [4] There have to be at least two composite substates in a concurrent composite state. If this is broken by deletion of substate then we delete the other remaining substates.", "target": 0}
{"idx": 5080, "func": "line 634", "target": 0}
{"idx": 5081, "func": "TODO stop polling thread?!", "target": 1}
{"idx": 5082, "func": "//plotOutlinePaint;", "target": 0}
{"idx": 5083, "func": "only record this if doing a find next", "target": 0}
{"idx": 5084, "func": "Begin BeanShell Modification - added sourceFile info", "target": 0}
{"idx": 5085, "func": "NOTUSED Font plainText = new Font(\"plain\", Font.PLAIN, 9); These must not be static, otherwise Language change does not work //$NON-NLS-1$", "target": 0}
{"idx": 5086, "func": "list of prefixes", "target": 0}
{"idx": 5087, "func": "substract the oldest pixel from the sum", "target": 0}
{"idx": 5088, "func": "ends with '.' or null", "target": 0}
{"idx": 5089, "func": "Set up proxy details", "target": 0}
{"idx": 5090, "func": "//$NON-NLS-2$", "target": 0}
{"idx": 5091, "func": "Only do the calculation if it is needed", "target": 0}
{"idx": 5092, "func": "Cycled", "target": 0}
{"idx": 5093, "func": "debug messages for diagnostics", "target": 0}
{"idx": 5094, "func": "Fixme: Only F_SETFL and F_GETFL is current supported FIXME: Only NONBLOCK flag is supported FIXME: F_SETFL and F_SETFD are treated as the same thing here. For the case of dup(fd) we should actually have F_SETFL only affect one (it is unclear how well we do, but this TODO is here to at least document that we might need to do more work here. Mostly SETFL is for mode changes which should persist across fork() boundaries. Since JVM has no fork this is not a problem for us.", "target": 1}
{"idx": 5095, "func": "//just to help out during the load (ugly, i know)", "target": 1}
{"idx": 5096, "func": "//return value; negate if original value was negative:", "target": 0}
{"idx": 5097, "func": "add contact to roaster, nickname=\"\", group=null", "target": 0}
{"idx": 5098, "func": "no problems found, so do not return a warning message. nothing for user to worry about", "target": 0}
{"idx": 5099, "func": "//i18n[ImportFileDialog.headersIncluded=Headers in first line]", "target": 0}
{"idx": 5100, "func": "//{{{ searchFailed() method", "target": 0}
{"idx": 5101, "func": "@see org.argouml.uml.ui.UMLUserInterfaceContainer#getModelElement()", "target": 0}
{"idx": 5102, "func": "disable components", "target": 0}
{"idx": 5103, "func": "Should positions added extra IDE-friendly information and leave in all newline nodes", "target": 0}
{"idx": 5104, "func": "end class NavigatorPane", "target": 0}
{"idx": 5105, "func": "public boolean supportsForUpdateNowait() { return false; }", "target": 0}
{"idx": 5106, "func": "line 2006", "target": 0}
{"idx": 5107, "func": "#31928: forcibly kill it before continuing.", "target": 0}
{"idx": 5108, "func": "TODO save hostname; save sample type (plain or http)", "target": 1}
{"idx": 5109, "func": "If parent is OK, but child failed, add a message and flag the parent as failed", "target": 0}
{"idx": 5110, "func": "TODO: key can't be null", "target": 1}
{"idx": 5111, "func": "//, encoding), encoding);", "target": 0}
{"idx": 5112, "func": "@see javax.swing.AbstractAction.AbstractAction( java.lang.String, javax.swing.Icon)", "target": 0}
{"idx": 5113, "func": "Open the ZIP file", "target": 0}
{"idx": 5114, "func": "Search the items on this server.", "target": 0}
{"idx": 5115, "func": "NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable", "target": 0}
{"idx": 5116, "func": "if either of the values is null and the other is not, then the data has changed and we fall-through to the change process. Otherwise, check the object contents.", "target": 0}
{"idx": 5117, "func": "TODO: Indicate the direction!", "target": 1}
{"idx": 5118, "func": "Create the buttons", "target": 0}
{"idx": 5119, "func": "Compile Checkbox", "target": 0}
{"idx": 5120, "func": "add the subtrahend's points to the polygon in reverse", "target": 0}
{"idx": 5121, "func": "Stop receiving all events", "target": 0}
{"idx": 5122, "func": "In PostgreSQL we need to add a sequence to support auto-increment (name: tablename_colname_seq)", "target": 0}
{"idx": 5123, "func": "in case macro file name has a space in it. spaces break the view.toolBar property, for instance, since it uses spaces to delimit action names.", "target": 0}
{"idx": 5124, "func": "//{{{ getWhat() method", "target": 0}
{"idx": 5125, "func": "this is needed to update the titlebar", "target": 0}
{"idx": 5126, "func": "TR#18 1.2", "target": 0}
{"idx": 5127, "func": "insert document type decl.", "target": 0}
{"idx": 5128, "func": "//GenRuntimeVersion", "target": 0}
{"idx": 5129, "func": "//{{{ createMultiFilePanel() method", "target": 0}
{"idx": 5130, "func": "do nothing if both the line and shape are not visible", "target": 0}
{"idx": 5131, "func": "TODO: Remove? Can't be localized", "target": 1}
{"idx": 5132, "func": "Actually instanciate the NetNode and FigNode objects and set the global next mode to ModePlace TODO: should call super, reduce code volume! @see org.tigris.gef.graph.GraphFactory#makeNode()", "target": 1}
{"idx": 5133, "func": "avoid double scanning of directories, can only happen in fast mode", "target": 0}
{"idx": 5134, "func": "simple cache of param metadata based on query string. Ideally, the original \"user-supplied query\" string should be used to retreive this metadata (i.e., not the para-list-expanded query string) to avoid unnecessary cache entries. Used solely for caching param metadata for native-sql queries, see getSQLParameterMetadata() for a discussion as to why...", "target": 0}
{"idx": 5135, "func": "force static scope to claim restarg at 0, so it only implements the [] version of __file__", "target": 0}
{"idx": 5136, "func": "end class CompositeCM", "target": 0}
{"idx": 5137, "func": "TODO : remove these last two as batcher is no longer managing connections", "target": 1}
{"idx": 5138, "func": "update(observable, null);", "target": 0}
{"idx": 5139, "func": "//io.finish();", "target": 0}
{"idx": 5140, "func": "ENC_CODERANGE_ASCIIONLY", "target": 0}
{"idx": 5141, "func": "//{{{ DockBorder constructor", "target": 0}
{"idx": 5142, "func": "//top.setBackground(titleBackground);", "target": 0}
{"idx": 5143, "func": "Javadoc 1.4 parameters", "target": 0}
{"idx": 5144, "func": "//{{{ ShowBufferMenuItem class", "target": 0}
{"idx": 5145, "func": "do we need to reset templates as well", "target": 0}
{"idx": 5146, "func": "Save raw message", "target": 0}
{"idx": 5147, "func": "create <email> element, if it doesn't exist yet", "target": 0}
{"idx": 5148, "func": "SkyBluer", "target": 0}
{"idx": 5149, "func": "Event: Normal Event", "target": 0}
{"idx": 5150, "func": "format string...", "target": 0}
{"idx": 5151, "func": "-nwarn", "target": 0}
{"idx": 5152, "func": "Preserve original case", "target": 0}
{"idx": 5153, "func": "rangeCrosshairLockedOnData", "target": 0}
{"idx": 5154, "func": "TODO\" What is the purpose of this? Why do we hide buttons here? Presumably if so we should not assume SelectionClass", "target": 1}
{"idx": 5155, "func": "implement set-like behaviour. The same element may not be added more then once.", "target": 0}
{"idx": 5156, "func": "update signature -> will notify all listeners that signature changed", "target": 0}
{"idx": 5157, "func": "do not auto-flush while outside a transaction", "target": 0}
{"idx": 5158, "func": "@author jaap.branderhorst@xs4all.nl @since Jan 29, 2003 TODO: For UML 2.x this needs to be changed to just a toggle which represents ReadOnly (frozen) or not (changeable).", "target": 1}
{"idx": 5159, "func": "Recursion", "target": 0}
{"idx": 5160, "func": "todo : remove", "target": 1}
{"idx": 5161, "func": "end interface DelayedVChangeListener", "target": 0}
{"idx": 5162, "func": "//{{{ AboutDialog constructor", "target": 0}
{"idx": 5163, "func": "//TODO: check!", "target": 0}
{"idx": 5164, "func": "//Clobs are ignored by merge() operation", "target": 0}
{"idx": 5165, "func": "line 926", "target": 0}
{"idx": 5166, "func": "figure out if we need to iterate through all the y-values", "target": 0}
{"idx": 5167, "func": "// parent.addInternalFrame(viewer, true, null); // GUIUtils.centerWithinDesktop(viewer);", "target": 0}
{"idx": 5168, "func": "process should be dead and well finished", "target": 0}
{"idx": 5169, "func": "Detect discriminator values...", "target": 0}
{"idx": 5170, "func": "//TODO: this requires that the collection is defined after the referenced property in the mapping file (ok?)", "target": 1}
{"idx": 5171, "func": "i18n[TableExportCsvDlg.useGlobalPrefsFormatingExcel=Use formating as configured in Global Prefs (recommended for MS Excel)]", "target": 0}
{"idx": 5172, "func": "//???", "target": 0}
{"idx": 5173, "func": "$/: input record separator", "target": 0}
{"idx": 5174, "func": "//Force a substitution!", "target": 0}
{"idx": 5175, "func": "Add the MimePart that will be signed", "target": 0}
{"idx": 5176, "func": "make it stretch vertically TODO: The curBody must notify modification", "target": 1}
{"idx": 5177, "func": "try all extensions", "target": 0}
{"idx": 5178, "func": "On Unix hidden files are marked with a \".\" at the beginning of the file name.", "target": 0}
{"idx": 5179, "func": "Compare entries in order. //", "target": 0}
{"idx": 5180, "func": "Reset the position.", "target": 0}
{"idx": 5181, "func": "sorting order", "target": 0}
{"idx": 5182, "func": "this is never downlighted...", "target": 0}
{"idx": 5183, "func": "Performs escape encoding on the given string so that it can be represented using 1-byte characters. Any characters higher than 0xFF are replaced with an escape of the form \\\\uXXXX, where XXXX is the four-digit hex representation of the Unicode code point.", "target": 0}
{"idx": 5184, "func": "otherwise perform a timestamp comparison - at least", "target": 0}
{"idx": 5185, "func": "//private double tipRadius;", "target": 0}
{"idx": 5186, "func": "In the various block-sized structures, live data runs from 0 to last+NUM_OVERSHOOT_BYTES inclusive. First, set up the overshoot area for block.", "target": 0}
{"idx": 5187, "func": "//{{{ setStyles() method", "target": 0}
{"idx": 5188, "func": "Use same XPath for both threads", "target": 0}
{"idx": 5189, "func": "//{{{ parseKeyStroke() method", "target": 0}
{"idx": 5190, "func": "basePositiveItemLabelPosition;", "target": 0}
{"idx": 5191, "func": "Background color", "target": 0}
{"idx": 5192, "func": "Date header we got a date header (store this fact for later use", "target": 0}
{"idx": 5193, "func": "If the file doesn't pass the include/exclude tests, skip it.", "target": 0}
{"idx": 5194, "func": "get list of all selected folders", "target": 0}
{"idx": 5195, "func": "i18n[ErrorStream.noerrors=No errors detected]", "target": 0}
{"idx": 5196, "func": "Most likely an UnknownElement", "target": 0}
{"idx": 5197, "func": "//@GuardedBy(\"sampleStore\") TODO perhaps use ConcurrentHashMap ?", "target": 1}
{"idx": 5198, "func": "does nothing unless overridden", "target": 0}
{"idx": 5199, "func": "JSR_W", "target": 0}
{"idx": 5200, "func": "we can't rename a file while it's open in windows", "target": 0}
{"idx": 5201, "func": "Was not a tag, so if we can't accept other values...", "target": 0}
{"idx": 5202, "func": "can be the empty string", "target": 0}
{"idx": 5203, "func": "//Empty Bbody", "target": 0}
{"idx": 5204, "func": "An additional note on using HashSets to store URLs: I just discovered that obtaining the hashCode of a java.net.URL implies a domain-name resolution process. This means significant delays can occur, even more so if the domain name is not resolvable. Whether this can be a problem in practical situations I can't tell, but thought I'd keep a note just in case... BTW, note that using a List and removing duplicates via scan would not help, since URL.equals requires name resolution too. The above problem has now been addressed with the URLString and URLCollection classes.", "target": 0}
{"idx": 5205, "func": "Do not set the name.", "target": 0}
{"idx": 5206, "func": "toolTip.setForeground(Color.DARK_GRAY);", "target": 0}
{"idx": 5207, "func": "// String LINE_NUMBER_COLOR = \"lineNumberColor\"; // String SELECTION_COLOR = \"selectionColor\"; // String SHOW_LINE_NBRS = \"showLineNumbers\";", "target": 0}
{"idx": 5208, "func": "//dockMenu.addItem(new NSMenuItem().separatorItem()); //dockMenu.addItem(miMac);", "target": 0}
{"idx": 5209, "func": "i18n[sqlval.descriptivename=SQL Validator plugin]", "target": 0}
{"idx": 5210, "func": "source source position destination destination position number of objects to be copied", "target": 0}
{"idx": 5211, "func": "The outer sample and the inner loop samples", "target": 0}
{"idx": 5212, "func": "//}}} //{{{ MARK_FOLLOWING", "target": 0}
{"idx": 5213, "func": "//beforeClassTokens.add(\"new\"); DEFINITELY DON'T HAVE THIS!!", "target": 0}
{"idx": 5214, "func": "SELECT p FROM p IN CLASS eg.Person GROUP BY p.Name, p.Address, p", "target": 0}
{"idx": 5215, "func": "support for 1047, as proposed to be added to the IANA registry in http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html", "target": 0}
{"idx": 5216, "func": "Names of DataHolder entries for JTL processing $NON-NLS-1$ $NON-NLS-1$", "target": 0}
{"idx": 5217, "func": "Make transient as we don't want to save the SimpleDataFormat class Also, there's currently no way to change the value via the GUI, so changing it later means editting the JMX, or recreating the Listener.", "target": 0}
{"idx": 5218, "func": "Set the EReference attributes. //", "target": 0}
{"idx": 5219, "func": "Skip 'charset='", "target": 0}
{"idx": 5220, "func": "I18n[oracle.sgaTitle=Oracle SGA trace for: {0}]", "target": 0}
{"idx": 5221, "func": "decimal", "target": 0}
{"idx": 5222, "func": "remove last ,", "target": 0}
{"idx": 5223, "func": "//public Object instantiate(Object parent, SessionImplementor session) throws HibernateException;", "target": 0}
{"idx": 5224, "func": "TBLRC 10100 - top and left only", "target": 0}
{"idx": 5225, "func": "positive paint", "target": 0}
{"idx": 5226, "func": "//PAINT ////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 5227, "func": "Initialize Kernel and include into Object", "target": 0}
{"idx": 5228, "func": "no need to instantiate this", "target": 0}
{"idx": 5229, "func": "a valid File URI", "target": 0}
{"idx": 5230, "func": "//Class/genOperation.javadoc.override.javajetinc", "target": 0}
{"idx": 5231, "func": "Fill 36 of value (byte) -19", "target": 0}
{"idx": 5232, "func": "get the recorder entry", "target": 0}
{"idx": 5233, "func": "set self to the class", "target": 0}
{"idx": 5234, "func": "I tried 8000 for the max length of VARCHAR and ingres gives an exception (cannot assign a value of type long varchar to a varchar field). So I limit this field to 4000 for now - the Ingres product documentation indicated that 32k was acceptable. I've tested 4k and it seems to work fine.", "target": 0}
{"idx": 5235, "func": "use Math.round () instead of simple (long) to provide correct value rounding", "target": 0}
{"idx": 5236, "func": "//{{{ Clock class", "target": 0}
{"idx": 5237, "func": "//{{{ createMacro() method", "target": 0}
{"idx": 5238, "func": "i18n[dataTypeBigDecimal.precisionEceeded=Precision Exceeded: //Number of digits in number ({0})\\nis greater than allowed in //column ({1})]", "target": 0}
{"idx": 5239, "func": "return the whole declaration contents (not just variableDeclarationFragment)", "target": 0}
{"idx": 5240, "func": "//private transient String[] availableTypesInDataBase;", "target": 0}
{"idx": 5241, "func": "If we are here, then the style dir is here and we should read the stylesheet from the filesystem", "target": 0}
{"idx": 5242, "func": "set first name", "target": 0}
{"idx": 5243, "func": "@see javax.management.NotificationListener#handleNotification(javax.management.Notification, java.lang.Object)", "target": 0}
{"idx": 5244, "func": "end of execute()", "target": 0}
{"idx": 5245, "func": "check a series with four items", "target": 0}
{"idx": 5246, "func": "package-private members", "target": 0}
{"idx": 5247, "func": "show signature viewer", "target": 0}
{"idx": 5248, "func": "//mark for a rebuild if the dest file is newer", "target": 0}
{"idx": 5249, "func": "//{{{ isRectangularSelectionEnabled() method", "target": 0}
{"idx": 5250, "func": "Test it", "target": 0}
{"idx": 5251, "func": "\"ALTER TABLE $tableName$ ALTER COLUMN $columnName$ IDENTITY\";", "target": 0}
{"idx": 5252, "func": "hide signature viewer", "target": 0}
{"idx": 5253, "func": "Fold marker color", "target": 0}
{"idx": 5254, "func": "//lower bound and margin OK; get log10 of lower bound", "target": 0}
{"idx": 5255, "func": "calculate and draw the notch horizontal orientation is considered notch right vertical orientation is considered notch down", "target": 0}
{"idx": 5256, "func": "as per 2.0 branch", "target": 0}
{"idx": 5257, "func": "line 1034", "target": 0}
{"idx": 5258, "func": "Some tables have pseudo column primary keys and others do not. JDBC on some DBMSs does not handle pseudo columns 'correctly'. Also, getTables returns 'views' as well as tables, so the thing we are looking at might not be a table. (JDBC does not give a simple way to determine what we are looking at since the type of object is described in a DBMS-specific encoding.) For these reasons, rather than testing for all these conditions, we just try using the pseudo column info to get the table data, and if that fails, we try to get the table data without using the pseudo column. TODO: Should we change the mode from editable to non-editable?", "target": 1}
{"idx": 5259, "func": "we only need full-on redo exception handling if there's logic that might produce it", "target": 0}
{"idx": 5260, "func": "//{{{ recalculateLastPhysicalLine() method", "target": 0}
{"idx": 5261, "func": "do we lose index info?", "target": 0}
{"idx": 5262, "func": "//Can not delete the profile", "target": 0}
{"idx": 5263, "func": "TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415", "target": 1}
{"idx": 5264, "func": "Now we should sort. //", "target": 0}
{"idx": 5265, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ITableInfo#setImportedKeys(net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo[])", "target": 0}
{"idx": 5266, "func": "expect a different hashcode from a newly created item...", "target": 0}
{"idx": 5267, "func": "// private JTabbedPane _tabbedResultsPanel;", "target": 0}
{"idx": 5268, "func": "//TODO mappings.getLogicalTableName(ownerTable)", "target": 1}
{"idx": 5269, "func": "The node's been placed within some Fig", "target": 0}
{"idx": 5270, "func": "GOOD - Converting a URL to a file this way is fine when the file path contains spaces", "target": 0}
{"idx": 5271, "func": "//Place the comment Fig on the nicest spot on the diagram", "target": 0}
{"idx": 5272, "func": "generate symbols initialization code", "target": 0}
{"idx": 5273, "func": "sort the selected tree path by row", "target": 0}
{"idx": 5274, "func": "//private boolean pop3;", "target": 0}
{"idx": 5275, "func": "end of thread groups No TGs found", "target": 0}
{"idx": 5276, "func": "Iterate over the data types to see if there is a data type that supports a local transfer. //", "target": 0}
{"idx": 5277, "func": "line 1075", "target": 0}
{"idx": 5278, "func": "build the command line from what we got the format is: ss Create VSS items [-C] [-H] [-I-] [-N] [-O] [-S] [-Y] [-?] as specified in the SS.EXE help", "target": 0}
{"idx": 5279, "func": "//[C]", "target": 0}
{"idx": 5280, "func": "event is null when choiceTableViewer is double clicked", "target": 0}
{"idx": 5281, "func": "Run the pass on the passed in scope!", "target": 0}
{"idx": 5282, "func": "//{{{ FocusHandler class", "target": 0}
{"idx": 5283, "func": "fire all of the help events", "target": 0}
{"idx": 5284, "func": "@see java.util.Observable#notifyObservers(java.lang.Object)", "target": 0}
{"idx": 5285, "func": "The method is not a structural feature, so it's modeled as an operation. //", "target": 0}
{"idx": 5286, "func": "Ensure sizes are correct", "target": 0}
{"idx": 5287, "func": "not first or last tick on graph and value is 1.0 //change value to 0.0 //indicate zero tick //create label for tick", "target": 0}
{"idx": 5288, "func": "Confirm save all", "target": 0}
{"idx": 5289, "func": "set this false to suppress some items for use in HTTP Request defaults", "target": 0}
{"idx": 5290, "func": "cascade constraint clauses", "target": 0}
{"idx": 5291, "func": "setup and load constructor", "target": 0}
{"idx": 5292, "func": "The drag gesture recognizer fires events in response to drag gestures in a component.", "target": 0}
{"idx": 5293, "func": "number of previous matches", "target": 0}
{"idx": 5294, "func": "Let others know that the tree content has changed. This should not be necessary, but without it, nodes are not shown when the user uses the Close menu item", "target": 0}
{"idx": 5295, "func": "Avoid recursively updating the same child", "target": 0}
{"idx": 5296, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsMultipleTransactions()", "target": 0}
{"idx": 5297, "func": "Recursively adds our key listener to sub-components", "target": 0}
{"idx": 5298, "func": "transfer an explicitly defined entity name handle the lazy attribute", "target": 0}
{"idx": 5299, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider#getCopySourceSession()", "target": 0}
{"idx": 5300, "func": "hit is on folding point", "target": 0}
{"idx": 5301, "func": "ScrollLineCount.changed() does the same thing", "target": 0}
{"idx": 5302, "func": "//cannot be instantiated", "target": 0}
{"idx": 5303, "func": "already got this logical from a higher order table", "target": 0}
{"idx": 5304, "func": "First, validate all the enabled filters... //TODO: this implementation has bad performance", "target": 1}
{"idx": 5305, "func": "//skip abs. paths not under basedir, if set:", "target": 0}
{"idx": 5306, "func": "//////////////////////////////////////////////////////////////constructor", "target": 0}
{"idx": 5307, "func": "//[RubyClass] //[]", "target": 0}
{"idx": 5308, "func": "don't do anything if the user didn't change any settings", "target": 0}
{"idx": 5309, "func": "this fires a ChartChangeEvent", "target": 0}
{"idx": 5310, "func": "i18n[laf.otherFontEanbled=Enabled]", "target": 0}
{"idx": 5311, "func": "get the previous data point...", "target": 0}
{"idx": 5312, "func": "i18n[TablePopupMenu.export=Export CSV / MS Excel ...]", "target": 0}
{"idx": 5313, "func": "//note: this affects the return value!", "target": 0}
{"idx": 5314, "func": "//@GuardedBy(\"this\")", "target": 0}
{"idx": 5315, "func": "for SPACE or S+SPACE we pass the key typed since international keyboards sometimes produce a KEY_PRESSED SPACE but not a KEY_TYPED SPACE, eg if you have to do a \"<space> to insert \".", "target": 0}
{"idx": 5316, "func": "SET GENERATOR name TO int;", "target": 0}
{"idx": 5317, "func": "this must be after the stream is created or we deadlock with SSHTools.", "target": 0}
{"idx": 5318, "func": "Copy the commandline from the client info to the Classes mailto entry", "target": 0}
{"idx": 5319, "func": "//EDataType", "target": 0}
{"idx": 5320, "func": "do not prompt user if composer should be really closed", "target": 0}
{"idx": 5321, "func": "Is it a simple variable name? Doing this first gives the correct Java precedence for vars vs. imported class names (at least in the simple case - see tests/precedence1.bsh). It should also speed things up a bit.", "target": 0}
{"idx": 5322, "func": "Get the Java literal expression for the value. //", "target": 0}
{"idx": 5323, "func": "turn off SSL for the future", "target": 0}
{"idx": 5324, "func": "i18n[graph.newGraph=New table graph]", "target": 0}
{"idx": 5325, "func": "bitwise", "target": 0}
{"idx": 5326, "func": "@see org.tigris.gef.presentation.FigEdge#setSourceFigNode(org.tigris.gef.presentation.FigNode)", "target": 0}
{"idx": 5327, "func": "i18n[laf.settings=Look and Feel settings]", "target": 0}
{"idx": 5328, "func": "Remove the Fields added to the list", "target": 0}
{"idx": 5329, "func": "(non-Javadoc) @see javax.swing.table.DefaultTableModel#getValueAt(int, int)", "target": 0}
{"idx": 5330, "func": "ITEM LABEL GENERATOR", "target": 0}
{"idx": 5331, "func": "Should not enter the loop", "target": 0}
{"idx": 5332, "func": "No tokenizer has been set by any installed plugin. Go ahead and give the default tokenizer. It is important to not cache this object so that session property changes to the current session are reflected in this default tokenizer.", "target": 0}
{"idx": 5333, "func": "//$NON-NLS-1$ //sizeLabel.setFont(boldFont); //$NON-NLS-1$", "target": 0}
{"idx": 5334, "func": "//case 0x0b: ret = \"\\\\v\"; break;", "target": 0}
{"idx": 5335, "func": "remove all children from tree", "target": 0}
{"idx": 5336, "func": "no parenthesis on previous line (prevLineParenWeight == 0) so the normal indenting rules are used", "target": 0}
{"idx": 5337, "func": "store the wrapper", "target": 0}
{"idx": 5338, "func": "These objects do not depend on catalogs or schemas. It is enough if we load them once.", "target": 0}
{"idx": 5339, "func": "4.5.2.12 Component", "target": 0}
{"idx": 5340, "func": "for now, since all browser actions are written in beanshell we set the 'browser' variable directly.", "target": 0}
{"idx": 5341, "func": "If this is not a circle to circle edge we default to let GEF calculate edge route.", "target": 0}
{"idx": 5342, "func": "-------------- Protected fields and methods below ----------------", "target": 0}
{"idx": 5343, "func": "Update the text labels and listeners. @see org.argouml.uml.diagram.ui.FigNodeModelElement#modelChanged(java.beans.PropertyChangeEvent)", "target": 0}
{"idx": 5344, "func": "log is required to ensure errors are available", "target": 0}
{"idx": 5345, "func": "TODO: this needs work so that users can set the font size through a gui preference window.", "target": 1}
{"idx": 5346, "func": "lets find a good name for our new vfolder", "target": 0}
{"idx": 5347, "func": "TODO: Not implemented yet. The idea is that some problems identified by Critic's can be fixed with certain design manipulations (or transforms) that can be applied automatically to resolve the problem. This method replies true iff the given problem can be fixed. The fixIt() method actually does the fix. @see org.argouml.cognitive.Poster#canFixIt(org.argouml.cognitive.ToDoItem) Also @see Critic#fixIt", "target": 1}
{"idx": 5348, "func": "Create an empty but initialized instance of a UML Usage. @return an initialized UML Usage instance. TODO: This needs an extra parameter to specify the model/extent where the new element should be created.", "target": 1}
{"idx": 5349, "func": "example: \"columba://org.columba.contact/<folder-id>/<contact-id>\"", "target": 0}
{"idx": 5350, "func": "there are no more candidates", "target": 0}
{"idx": 5351, "func": "Set ON UPDATE action to NO ACTION as Oracle doesn't currently support this. NO ACTION causes the update clause to be omitted.", "target": 0}
{"idx": 5352, "func": "//{{{ TextRenderer", "target": 0}
{"idx": 5353, "func": "Custom SQL", "target": 0}
{"idx": 5354, "func": "0 to 7 8 to 15 16 to 23 24 to 31 32 to 39 40 to 47 48 to 55 56 to 63", "target": 0}
{"idx": 5355, "func": "i18n[sqlval.noSql=No SQL specified]", "target": 0}
{"idx": 5356, "func": "line 1345", "target": 0}
{"idx": 5357, "func": "the above sizes have not been computed yet, so we compute them...", "target": 0}
{"idx": 5358, "func": "draw the outline...", "target": 0}
{"idx": 5359, "func": "End GWG format check code", "target": 0}
{"idx": 5360, "func": "suppresses compiler warning", "target": 0}
{"idx": 5361, "func": "//TestCase/isSetGenFeature.override.javajetinc", "target": 0}
{"idx": 5362, "func": "i18n[userscript.showInStandardMenues=Show in standard menues]", "target": 0}
{"idx": 5363, "func": "this has to be set by themes //splitPane.setDividerSize( 5 );", "target": 0}
{"idx": 5364, "func": "i18n[InformixPlugin.showProcedureSource=Show procedure source]", "target": 0}
{"idx": 5365, "func": "//@GuardedBy(\"accumulators\") number of active tests", "target": 0}
{"idx": 5366, "func": "Create the stream pumpers to forward listcab's stdout and stderr to the log note: listcab is an interactive program, and issues prompts for every new line. Therefore, make it show only with verbose logging turned on.", "target": 0}
{"idx": 5367, "func": "note that a[0]=a[np-1]=0", "target": 0}
{"idx": 5368, "func": "//{{{ bufferClosed() method", "target": 0}
{"idx": 5369, "func": "getDeclaredPrefixAt(int):String", "target": 0}
{"idx": 5370, "func": "the copy is disabled", "target": 0}
{"idx": 5371, "func": "for MacOSX we can't use the CTRL key for mouse drags, see: http://developer.apple.com/qa/qa2004/qa1362.html", "target": 0}
{"idx": 5372, "func": "Drop the _ separators and normalize the case. //", "target": 0}
{"idx": 5373, "func": "//GenModelValidator", "target": 0}
{"idx": 5374, "func": "get a list of keys...", "target": 0}
{"idx": 5375, "func": "User said to read at least some of the data from the clob", "target": 0}
{"idx": 5376, "func": "Pack size is min 10, max 200 else mailboxsize / 10", "target": 0}
{"idx": 5377, "func": "super uses current block if none given", "target": 0}
{"idx": 5378, "func": "Check option combinations", "target": 0}
{"idx": 5379, "func": "Ignore derived features. //", "target": 0}
{"idx": 5380, "func": "get header from cache", "target": 0}
{"idx": 5381, "func": "stay in block-comment state", "target": 0}
{"idx": 5382, "func": "icons ;mod: 20040629 SWITT", "target": 0}
{"idx": 5383, "func": "add new entry as first entry", "target": 0}
{"idx": 5384, "func": "to hide current line highlight", "target": 0}
{"idx": 5385, "func": "bootclasspath is \"-Xbootclasspath:<classpath>\" -> 1 arg", "target": 0}
{"idx": 5386, "func": "// setRenderer(new CellRenderer());", "target": 0}
{"idx": 5387, "func": "isNCNameStart(int):boolean", "target": 0}
{"idx": 5388, "func": "we do a write lock so that the autosave, which grabs a read lock, is not executed between the deletion of the autosave file and clearing of the dirty flag", "target": 0}
{"idx": 5389, "func": "Trivial case", "target": 0}
{"idx": 5390, "func": "too bad, we choose to take the first value", "target": 0}
{"idx": 5391, "func": "confirm with the user that he wants to delete, presenting the list of settings to delete", "target": 0}
{"idx": 5392, "func": "Let return-propertys override whatever the persister has for aliases.", "target": 0}
{"idx": 5393, "func": "//TODO: ? Dialog Handling on Cancelled ?", "target": 1}
{"idx": 5394, "func": "table registers interest in tree selection events", "target": 0}
{"idx": 5395, "func": "//{{{ AllBufferSet constructor", "target": 0}
{"idx": 5396, "func": "Using default", "target": 0}
{"idx": 5397, "func": "TODO fix the space above", "target": 1}
{"idx": 5398, "func": "(non-Javadoc) @see org.columba.chat.jabber.IBuddyStatus#getPresenceMode()", "target": 0}
{"idx": 5399, "func": "(non-Javadoc) @see org.columba.core.filter.IFilterRule#add(org.columba.core.filter.FilterCriteria)", "target": 0}
{"idx": 5400, "func": "add a \"self\" recv here TODO: is this right?", "target": 1}
{"idx": 5401, "func": "buffer has been saved while we were waiting.", "target": 0}
{"idx": 5402, "func": "LOG.log(Level.WARNING, \"Unable to find extent \" + extent);", "target": 0}
{"idx": 5403, "func": "If the delegate URI can be handled as a file, we'll hope that renaming it will be really efficient. //", "target": 1}
{"idx": 5404, "func": "This uses a PathExpressionParser but notice that compound paths are not valid, only bare names and simple paths:", "target": 0}
{"idx": 5405, "func": "mark non spam messages", "target": 0}
{"idx": 5406, "func": "make default be true for the next action", "target": 0}
{"idx": 5407, "func": "only accept client from local machine", "target": 0}
{"idx": 5408, "func": "// public ComponentMetamodel(Component component, SessionFactoryImplementor sessionFactory) {", "target": 0}
{"idx": 5409, "func": "create virtual folder (is attached to parentFolder)", "target": 0}
{"idx": 5410, "func": "labelGap", "target": 0}
{"idx": 5411, "func": "@bgen(jjtree) Literal", "target": 0}
{"idx": 5412, "func": "the commented out code would be better, but only if RendererChangeEvent is immutable, which it isn't. See if there is a way to fix this...", "target": 0}
{"idx": 5413, "func": "Add together the standard expanders for this node type and any individual expanders that there are for the node and process them.", "target": 0}
{"idx": 5414, "func": "(TestElement) el.getProperty(JMSSampler.JNDI_PROPERTIES).getObjectValue());", "target": 0}
{"idx": 5415, "func": "----- Set the main attributes, pattern '' ----- //", "target": 0}
{"idx": 5416, "func": "Active threads in this group", "target": 0}
{"idx": 5417, "func": "... do not display a Message about this.", "target": 0}
{"idx": 5418, "func": "check a series with two items", "target": 0}
{"idx": 5419, "func": "private AdapterNode actNode;", "target": 0}
{"idx": 5420, "func": "(non-Javadoc) @see org.xml.sax.helpers.DefaultHandler#fatalError(org.xml.sax.SAXParseException)", "target": 0}
{"idx": 5421, "func": "//{{{ getBorderInsets() method", "target": 0}
{"idx": 5422, "func": "&& etype.isReferenceToPrimaryKey()", "target": 0}
{"idx": 5423, "func": "TODO: break into 3 main member types model, diagram and other", "target": 1}
{"idx": 5424, "func": "got it!", "target": 0}
{"idx": 5425, "func": "declare the field", "target": 0}
{"idx": 5426, "func": "Overridden in order to implement PathCompartmentContainer.", "target": 0}
{"idx": 5427, "func": "Implement DTDHandler methods //", "target": 0}
{"idx": 5428, "func": "?R | boolean | True if file is readable by the real uid/gid of the caller FIXME: Need to implement an readable_real_p in FileTest", "target": 1}
{"idx": 5429, "func": "This method is overridden in order to ignore change of the y coordinate during dragging. @see org.tigris.gef.presentation.FigNode#superTranslate(int, int)", "target": 0}
{"idx": 5430, "func": "This point is only reached if there was an exception handler installed.", "target": 0}
{"idx": 5431, "func": "meant to handle dynamic instantiation queries...(Copy from QueryLoader)", "target": 1}
{"idx": 5432, "func": "We have no model event listeners, so no need to do anything", "target": 0}
{"idx": 5433, "func": "Get the OutputWriter to use", "target": 0}
{"idx": 5434, "func": "the next new folder will get this UID", "target": 0}
{"idx": 5435, "func": "Collect the uids for one folder", "target": 0}
{"idx": 5436, "func": "verify if regex groups exists", "target": 0}
{"idx": 5437, "func": "//{{{ getOperation() method", "target": 0}
{"idx": 5438, "func": "minorTickLength", "target": 0}
{"idx": 5439, "func": "Does the LIMIT clause take a \"maximum\" row number instead of a total number of returned rows?", "target": 0}
{"idx": 5440, "func": "Check path", "target": 0}
{"idx": 5441, "func": "Assume success", "target": 0}
{"idx": 5442, "func": "//super.dock(messageViewerDockable, IDock.REGION.CENTER);", "target": 0}
{"idx": 5443, "func": "Common to all URI types.", "target": 0}
{"idx": 5444, "func": "note that for sequential scrolling, we make the assumption that the first persister element is the \"root entity\"", "target": 0}
{"idx": 5445, "func": "after loading the cache is up to date with the file", "target": 0}
{"idx": 5446, "func": "$NON-NLS-1$ for intermediate use output line buffer", "target": 0}
{"idx": 5447, "func": "(non-Javadoc) @see org.columba.mail.folder.headercache.HeaderList#getUids()", "target": 0}
{"idx": 5448, "func": "//sorted bag impl. borrowed from commons-collections TreeBag:", "target": 0}
{"idx": 5449, "func": "line 1761", "target": 0}
{"idx": 5450, "func": "DB2 stores all names in upper case. PostgreSQL stores all names in lower case. That's why we may not find proc as it was written in the create statement. So we try out the upper and lower case names too.", "target": 0}
{"idx": 5451, "func": "Create the listener on demand. //", "target": 0}
{"idx": 5452, "func": "create remainder", "target": 0}
{"idx": 5453, "func": "i18n[mssql.scriptingOptionsDlg=Scripting options allow you to specify how an object will be scripted.]", "target": 0}
{"idx": 5454, "func": "Check for default Ports", "target": 0}
{"idx": 5455, "func": "shadowYOffset", "target": 0}
{"idx": 5456, "func": "y number format", "target": 0}
{"idx": 5457, "func": "NOP", "target": 0}
{"idx": 5458, "func": "case 2", "target": 0}
{"idx": 5459, "func": "Fetch the headers of the new messages ...", "target": 0}
{"idx": 5460, "func": "Apply the change. //", "target": 0}
{"idx": 5461, "func": "background", "target": 0}
{"idx": 5462, "func": "what column is wanted?", "target": 0}
{"idx": 5463, "func": "TODO: This class looks a lot like ArgumentsPanel. What exactly is the difference? Could they be combined? Note: it seems that this class is not actually used ...", "target": 1}
{"idx": 5464, "func": "normal model elements are not allowed to have spaces, but for States we make an exception", "target": 0}
{"idx": 5465, "func": "//putValue(SMALL_ICON, ImageLoader.getIcon(\"script.png\"));", "target": 0}
{"idx": 5466, "func": "Appears to be gone from UML 2.x", "target": 1}
{"idx": 5467, "func": "only supported since Kaffe 1.1.2", "target": 0}
{"idx": 5468, "func": "And add the copy. //", "target": 0}
{"idx": 5469, "func": "======== tabbedPane2 ========", "target": 0}
{"idx": 5470, "func": "TODO: These 2 should be handled with an Iterator.", "target": 1}
{"idx": 5471, "func": "write out a static initializer for frame names, so it only fires once", "target": 0}
{"idx": 5472, "func": "TODO: what about ObjectNode? return org.eclipse.uml2.uml.ObjectNode.class;", "target": 0}
{"idx": 5473, "func": "//EARLY EXIT!", "target": 0}
{"idx": 5474, "func": "pass on the event to the auxiliary handlers", "target": 0}
{"idx": 5475, "func": "//figPoly.setFillColor(col);", "target": 0}
{"idx": 5476, "func": "String matches against pattern", "target": 0}
{"idx": 5477, "func": "These shenanigans are necessary b/c Norm Walsh's resolver has a different idea of how file URLs are created on windoze ie file://c:/foo instead of file:///c:/foo //", "target": 0}
{"idx": 5478, "func": "@see org.argouml.application.api.ProgressMonitor#isCanceled()", "target": 0}
{"idx": 5479, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider#getSelectedDatabaseObjects()", "target": 0}
{"idx": 5480, "func": "draw an outline around the plot area...", "target": 0}
{"idx": 5481, "func": "We also show types of parameters", "target": 0}
{"idx": 5482, "func": "hide/show attachment panel", "target": 0}
{"idx": 5483, "func": "Create list of unsubscribed folders", "target": 0}
{"idx": 5484, "func": "TODO: The following is MDR specific. We need something generic to all Model subsystems - tfm 20070716", "target": 1}
{"idx": 5485, "func": "i18n[editWhereColsPanel.limitColsInCell=Limit Columns in Cell Edit]", "target": 0}
{"idx": 5486, "func": "We depart here from strict adherence to MRI code, as MRI uses C-sprintf, in part, to format numeric output, while we'll use Java's numeric formatting code (and our own).", "target": 0}
{"idx": 5487, "func": "trim done to workaround stupid oracle bug that cant handle whitespaces before a { in a sp", "target": 1}
{"idx": 5488, "func": "handle multivalued tagged value", "target": 0}
{"idx": 5489, "func": "Recompute the read only state. //", "target": 0}
{"idx": 5490, "func": "Force t3 to quit, just in case if it's stuck. Note: On some platforms, even interrupt might not have an effect if the thread is IO blocked.", "target": 0}
{"idx": 5491, "func": "//{{{ goToSelectedNode() method", "target": 0}
{"idx": 5492, "func": "line 911", "target": 0}
{"idx": 5493, "func": "Check whether this has @model annotation contents. //", "target": 0}
{"idx": 5494, "func": "AXIS 3", "target": 0}
{"idx": 5495, "func": "TODO: Doing this violates the minimal cardinality of 1 if we allow it we at least need a critic to warn about it", "target": 1}
{"idx": 5496, "func": "delegate...", "target": 0}
{"idx": 5497, "func": "default options", "target": 0}
{"idx": 5498, "func": "The next one defaults to TRUE, to stay compatible with older ArgoUML versions that did not have this setting:", "target": 0}
{"idx": 5499, "func": "bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);", "target": 0}
{"idx": 5500, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.ISQLPanelAPI#fileNew()", "target": 0}
{"idx": 5501, "func": "condensed length (without \\r) Add \\r for each header Add \\r for initial header final \\r\\n before data", "target": 0}
{"idx": 5502, "func": "Insert the Add menu as the first menu item in the Edit menu.", "target": 0}
{"idx": 5503, "func": "Under JDK1.4 the first item in a JComboBox is no longer automatically selected.", "target": 0}
{"idx": 5504, "func": "Assume that all start tags are \"<...>\" or include a space after the tag name (e.g. as in \"<SOMETAG args>\" and all end tags are \"</...>\". Remove the syntactic markers, then remove any spaces, and convert to upper case for comparison", "target": 0}
{"idx": 5505, "func": "line 1229", "target": 0}
{"idx": 5506, "func": "mocks", "target": 0}
{"idx": 5507, "func": "set the priority to a different value", "target": 0}
{"idx": 5508, "func": "The DateFormat object to use for all locale-dependent formatting. This is reset each time the user changes the previous settings.", "target": 0}
{"idx": 5509, "func": "First, build assignments for specific named arguments", "target": 0}
{"idx": 5510, "func": "Process Commons HttpClient parameters file $NON-NLS-1$", "target": 0}
{"idx": 5511, "func": "Lower > upper: mid point is used", "target": 0}
{"idx": 5512, "func": "KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 if Ruby 2.0 encoding pragmas are implemented, this will need to change", "target": 0}
{"idx": 5513, "func": "check to see if we've already found the end of data", "target": 0}
{"idx": 5514, "func": "//{{{ _listDirectory() method", "target": 0}
{"idx": 5515, "func": "//{{{ getAbbrev() method", "target": 0}
{"idx": 5516, "func": "TODO: Here too?", "target": 0}
{"idx": 5517, "func": "initialize these if they haven't been", "target": 0}
{"idx": 5518, "func": "now remove a3, but since a3.equals(a1), this will in fact remove a1...", "target": 0}
{"idx": 5519, "func": "eVirtualIndexBits[offset] = newIndexBits;", "target": 0}
{"idx": 5520, "func": "if the natural-id is marked as non-mutable, it is not retrieved during a normal database-snapshot operation...", "target": 0}
{"idx": 5521, "func": "seriesPaint", "target": 0}
{"idx": 5522, "func": "No duplicates when adding", "target": 0}
{"idx": 5523, "func": "if we followed the symlink we just made we should bypass the excludes.", "target": 0}
{"idx": 5524, "func": "//schema should be identical to the statement. Ignore", "target": 0}
{"idx": 5525, "func": "sybase driver (jConnect) throwing NPE here in certain cases, but we'll just handle the general \"unexpected\" case", "target": 0}
{"idx": 5526, "func": "TODO: Comment by A- Rueckert: I don't think it makes much sense to query interactions from a Collaboration in UML2, since this diagram does no longer exist and an Interaction means something different in UML2.", "target": 1}
{"idx": 5527, "func": "todo : should we additionally check the current isolation mode explicitly?", "target": 1}
{"idx": 5528, "func": "Nulls cannot be written using PrettyPrintWriter - they cause an NPE $NON-NLS-1$", "target": 0}
{"idx": 5529, "func": "same as Parent", "target": 0}
{"idx": 5530, "func": "fireTableRowsUpdated(startIndex,startIndex);", "target": 0}
{"idx": 5531, "func": "Windows does not support these functions, so we won't even try This also matches Ruby behavior for JRUBY-2353.", "target": 0}
{"idx": 5532, "func": "Note: it may see like with the new 1.3 scoping this test could be removed, but it cannot. When recurse is false we still need to set the variable in our parent, not here.", "target": 0}
{"idx": 5533, "func": "Regression for HARMONY-2146", "target": 0}
{"idx": 5534, "func": "//void reload();", "target": 0}
{"idx": 5535, "func": "TODO support multiple signers", "target": 1}
{"idx": 5536, "func": "Parse the query string into an HQL AST.", "target": 0}
{"idx": 5537, "func": "TODO do tests for infix operators (8.4.7), even though it is not yet supported", "target": 1}
{"idx": 5538, "func": "?p | boolean | True if file1 exists and is a fifo", "target": 0}
{"idx": 5539, "func": "//{{{ getPageFormat() method", "target": 0}
{"idx": 5540, "func": "Create new dataset with keys above threshold percentThreshold", "target": 0}
{"idx": 5541, "func": "check a series with repeating items", "target": 0}
{"idx": 5542, "func": "... or, add the file in case there was no \"%1\" used", "target": 0}
{"idx": 5543, "func": "set name of organization", "target": 0}
{"idx": 5544, "func": "only 1 fragment left - revert the changes", "target": 0}
{"idx": 5545, "func": "for unit test code @see TestIfController", "target": 0}
{"idx": 5546, "func": "first node will either be PrimitiveType or AmbiguousName", "target": 0}
{"idx": 5547, "func": "matching devices and no path removal", "target": 0}
{"idx": 5548, "func": "Update the Port", "target": 0}
{"idx": 5549, "func": "//new Exception().printStackTrace();", "target": 0}
{"idx": 5550, "func": "not the same", "target": 0}
{"idx": 5551, "func": "Delete all SendActions which have this as signal", "target": 0}
{"idx": 5552, "func": "//Log.log(Log.DEBUG,BufferHistory.class,fnf);", "target": 0}
{"idx": 5553, "func": "why so cute?", "target": 0}
{"idx": 5554, "func": "don't draw this tick label", "target": 0}
{"idx": 5555, "func": "positiveArrowVisible;", "target": 0}
{"idx": 5556, "func": "table.getTableHeader().setReorderingAllowed(false);", "target": 0}
{"idx": 5557, "func": "On junit3 this is a FAILURE, on junit4 this is an ERROR", "target": 0}
{"idx": 5558, "func": "@see TableCellRenderer#getTableCellRendererComponent(JTable, Object, boolean, boolean, int, int)", "target": 0}
{"idx": 5559, "func": "default is to notify listeners when the chart changes", "target": 0}
{"idx": 5560, "func": "//{{{ BrowserCommandsMenu constructor", "target": 0}
{"idx": 5561, "func": "We did not replace the entry so use the existing one", "target": 0}
{"idx": 5562, "func": "Nb: using default locale as key is a env name", "target": 0}
{"idx": 5563, "func": "Assign/reassign message charset from MimeType", "target": 0}
{"idx": 5564, "func": "we need to dirty check collections, since they can cause an owner version number increment", "target": 0}
{"idx": 5565, "func": "TODO: consider inherited associations? TODO: self loops are double counted", "target": 1}
{"idx": 5566, "func": "do we need to close byte array (or flush it?)", "target": 0}
{"idx": 5567, "func": "by default the outline and background won't be visible", "target": 0}
{"idx": 5568, "func": "forwards this event to the tree model. @param element the modelelement to be changed TODO: This shouldn't be public. Components desiring to inform the Explorer of changes should send events.", "target": 1}
{"idx": 5569, "func": "Read the first token.", "target": 0}
{"idx": 5570, "func": "//handle HQL2 collection syntax", "target": 0}
{"idx": 5571, "func": "If we are using a single session Otherwise", "target": 0}
{"idx": 5572, "func": "Clear the list past the top. //", "target": 0}
{"idx": 5573, "func": "XXX this seems to be a bug of the parser, it always requires a context", "target": 1}
{"idx": 5574, "func": "i18n[SchemaPropertiesController.hint=Schemas (loading and caching)]", "target": 0}
{"idx": 5575, "func": "Don't return null if not set", "target": 0}
{"idx": 5576, "func": "i18n[dataTypeTimestamp.full=Full ({0})]", "target": 0}
{"idx": 5577, "func": "Imported full name wasn't found as an absolute class If it is compound, try to resolve to an inner class. (maybe this should happen in the BshClassManager?)", "target": 1}
{"idx": 5578, "func": "top-label-separator", "target": 0}
{"idx": 5579, "func": "See if we can copy a datatype right off", "target": 0}
{"idx": 5580, "func": "If there is exactly _one_ callback argument to the function, then a block can be given and automatically subsituted for the callback parameter.", "target": 0}
{"idx": 5581, "func": "To display current sampler result before change", "target": 0}
{"idx": 5582, "func": "builder.addSeparator(\"Full-text indexing\"); builder.add(enableLabel, cc.xywh(1, 7, 5, 1)); builder.add(enableTextIndexingCheckBox, cc.xywh(2, 9, 4, 1));", "target": 0}
{"idx": 5583, "func": "//TODO - move to JOrphanUtils?", "target": 1}
{"idx": 5584, "func": "//open jar files", "target": 0}
{"idx": 5585, "func": "//{{{ Compare interface", "target": 0}
{"idx": 5586, "func": "Workaround for JRUBY-4149", "target": 1}
{"idx": 5587, "func": "@see org.argouml.model.DirectionKind#getReturnParameter()", "target": 0}
{"idx": 5588, "func": "workaround for A+keys producing garbage on Windows", "target": 1}
{"idx": 5589, "func": "Look ahead and short circuit evaluation of the rhs if: we're a boolean AND and the lhs is false.", "target": 0}
{"idx": 5590, "func": "Do Nothing - this can happen when the table doesn't exist", "target": 0}
{"idx": 5591, "func": "//////////////////////////////////////////////////////////////wizard actions", "target": 0}
{"idx": 5592, "func": "get index of parts which are equal", "target": 0}
{"idx": 5593, "func": "if the flag is being set to true, there may be queued up changes...", "target": 0}
{"idx": 5594, "func": "TODO: Aren't our items always strings? - tfm 20100917", "target": 1}
{"idx": 5595, "func": "create the renderer...", "target": 0}
{"idx": 5596, "func": "(non-Javadoc) @see org.apache.jmeter.gui.JMeterGUIComponent#modifyTestElement(org.apache.jmeter.testelement.TestElement)", "target": 0}
{"idx": 5597, "func": "register interest on tree node changes", "target": 0}
{"idx": 5598, "func": "Accessed from multiple threads", "target": 0}
{"idx": 5599, "func": "SHAPES VISIBLE", "target": 0}
{"idx": 5600, "func": "Read value until delimiter is found:", "target": 0}
{"idx": 5601, "func": "i18n[DualProgressBarDialog.cancelButtonLabel=Cancel]", "target": 0}
{"idx": 5602, "func": "//{{{ Text editing", "target": 0}
{"idx": 5603, "func": "TODO: Removed from UML2 //$NON-NLS-1$", "target": 1}
{"idx": 5604, "func": "return;", "target": 0}
{"idx": 5605, "func": "//Integer priority = Integer.valueOf(pattern); //return priority;", "target": 0}
{"idx": 5606, "func": "@see org.argouml.model.PseudostateKind#getFork()", "target": 0}
{"idx": 5607, "func": "private constructor to enforce singleton", "target": 0}
{"idx": 5608, "func": "we are on NetWare, tokenizing is handled a little differently, due to the fact that NetWare has multiple-character volume names.", "target": 0}
{"idx": 5609, "func": "refresh() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 5610, "func": "I guess translated events do not have the 'evt' field set so consuming won't work. I don't think this is a problem as nothing uses translation anyway", "target": 1}
{"idx": 5611, "func": "private boolean mustRefresh;", "target": 0}
{"idx": 5612, "func": "//UpdateUtil util = new UpdateUtilImpl();", "target": 0}
{"idx": 5613, "func": "if channel is already closed, we're no longer valid", "target": 0}
{"idx": 5614, "func": "create new object to hold the different value, but use the same internal BLOB pointer as the original", "target": 0}
{"idx": 5615, "func": "mark tag, if the current selection is tagged with it", "target": 0}
{"idx": 5616, "func": "Caret color, caret blink, block caret", "target": 0}
{"idx": 5617, "func": "@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)", "target": 0}
{"idx": 5618, "func": "//System.getProperty(\"line.separator\");", "target": 0}
{"idx": 5619, "func": "//{{{ GrabKeyDialog constructor", "target": 0}
{"idx": 5620, "func": "@see org.argouml.uml.diagram.state.ui.FigStateVertex#initNotationProviders (java.lang.Object)", "target": 0}
{"idx": 5621, "func": "@see org.argouml.uml.ui.UMLModelElementListModel2#setTarget(java.lang.Object)", "target": 0}
{"idx": 5622, "func": "private boolean borderVisible; private transient Stroke borderStroke; private transient Paint borderPaint;", "target": 0}
{"idx": 5623, "func": "For use in debugging:", "target": 0}
{"idx": 5624, "func": "this will result in a slight speed up, since we don't need to read the DTD anyway, as AElfred is non-validating", "target": 0}
{"idx": 5625, "func": "@param node @see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAStandardDeclarator(tudresden.ocl.parser.node.AStandardDeclarator)", "target": 0}
{"idx": 5626, "func": "TODO: Remove listeners for add/remove events", "target": 1}
{"idx": 5627, "func": "create and try to add dummy edit to find the ReplaceEdit this should be faster than lookup since underneath of addChild() binary search is used", "target": 0}
{"idx": 5628, "func": "base", "target": 0}
{"idx": 5629, "func": "outline paint index", "target": 0}
{"idx": 5630, "func": "Fetch Pack outer loop", "target": 0}
{"idx": 5631, "func": "that is the expected case", "target": 0}
{"idx": 5632, "func": "//box = new StackedBox();", "target": 0}
{"idx": 5633, "func": "Text fig to hold the <<include>> label", "target": 0}
{"idx": 5634, "func": "CheckStyle:ParameterNumberCheck OFF - bc", "target": 0}
{"idx": 5635, "func": "we filter the line first, before we try to separate the URL into file and parameters.", "target": 0}
{"idx": 5636, "func": "ClearCase items", "target": 0}
{"idx": 5637, "func": "cache result", "target": 0}
{"idx": 5638, "func": "Set the editor's selection based on the current viewer's selection. //", "target": 0}
{"idx": 5639, "func": "org.argouml.ui.TabTable TabMetrics TabJavaSrc | TabSrc TabUMLDisplay TabHash", "target": 0}
{"idx": 5640, "func": "Copy all property values into the map:", "target": 0}
{"idx": 5641, "func": "//{{{ EditPane constructor", "target": 0}
{"idx": 5642, "func": "If we have more than one argument, then make sure the array is not ObjectSpaced.", "target": 0}
{"idx": 5643, "func": "We know this is a return action now. It must be pointing the opposite way to the activator.", "target": 0}
{"idx": 5644, "func": "TODO: This creates a dependency on the Critics subsystem. We need a generic way for modules (including our internal subsystems) to request addition of actions to the popup menu. - tfm 20080430", "target": 1}
{"idx": 5645, "func": "Make sure all the data is flushed out", "target": 0}
{"idx": 5646, "func": "//should this interface extend PropertyMapping?", "target": 1}
{"idx": 5647, "func": "//TODO: when this is the entry point, we should use an INNER_JOIN for fetching the many-to-many elements!", "target": 1}
{"idx": 5648, "func": "initialization", "target": 0}
{"idx": 5649, "func": "do nothing, allow loop to retry", "target": 0}
{"idx": 5650, "func": "current time", "target": 0}
{"idx": 5651, "func": "//utilUnderTest = null;", "target": 0}
{"idx": 5652, "func": "check if we should use the folder-based configuration or the global table configuration", "target": 0}
{"idx": 5653, "func": "line 1797", "target": 0}
{"idx": 5654, "func": "block transfer to self!", "target": 0}
{"idx": 5655, "func": "Ignore attribute from unknown uri's", "target": 0}
{"idx": 5656, "func": "Because UML 1.4 & 2.1 metamodels are organized differently we need to traverse the hierarchy looking for our owning Package.", "target": 0}
{"idx": 5657, "func": "Create the join element under the from element.", "target": 0}
{"idx": 5658, "func": "Helper class so we can generate request data without dumping entire file contents", "target": 0}
{"idx": 5659, "func": "Look for duplicate keys in the file", "target": 0}
{"idx": 5660, "func": "store the local vars in a local variable if there are any", "target": 0}
{"idx": 5661, "func": "1 = end of axis", "target": 0}
{"idx": 5662, "func": "TEXT FIELD This means exit if last sample failed $NON-NLS-1$", "target": 0}
{"idx": 5663, "func": "//{{{ searchDone() method", "target": 0}
{"idx": 5664, "func": "//{{{ setResizePos() method", "target": 0}
{"idx": 5665, "func": "We no longer send individual events, so next code is obsolete:", "target": 0}
{"idx": 5666, "func": "NOOP to provide based empty impl and avoid breaking existing implementations", "target": 0}
{"idx": 5667, "func": "return false here, as most databases do not properly support this construct...", "target": 0}
{"idx": 5668, "func": "ENEBO: Can these be fast?", "target": 0}
{"idx": 5669, "func": "average radius", "target": 0}
{"idx": 5670, "func": "src: o--------o sub: o----o res: o-----o Reuse sub", "target": 0}
{"idx": 5671, "func": "RANGE, NRANGE", "target": 0}
{"idx": 5672, "func": "This is turned off temporarily. There appears to be a bug in SelectorUtils.matchPattern() where it is recursive on Windows even if no is in pattern. //assertEquals(\"FFFTFFFFFFFF\", results); Unix vs //assertEquals(\"FFFTFFFFTFFF\", results); Windows", "target": 1}
{"idx": 5673, "func": "it's error to have '8' and '9' in octal number", "target": 0}
{"idx": 5674, "func": "<context> <core> <identity> </identity> <datetime> </datetime> </core> </context>", "target": 0}
{"idx": 5675, "func": "i18n[PreLaunchHelperImpl.installUpdatesTitle=Updates Available]", "target": 0}
{"idx": 5676, "func": "conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report", "target": 0}
{"idx": 5677, "func": "hex constant", "target": 0}
{"idx": 5678, "func": "Set type/creator on save", "target": 0}
{"idx": 5679, "func": "InputStream contents = new ByteArrayInputStream(bytes);", "target": 0}
{"idx": 5680, "func": "From this point we have a username and password from configuration of from the dialog", "target": 0}
{"idx": 5681, "func": "switch to an allocator based on a default constructor", "target": 0}
{"idx": 5682, "func": "ResolvedCritic(Critic, ListSet)", "target": 0}
{"idx": 5683, "func": "(non-Javadoc) @see org.apache.jmeter.protocol.http.sampler.HTTPSamplerBase#testEnded()", "target": 0}
{"idx": 5684, "func": "//TODO: is this really necessary????", "target": 1}
{"idx": 5685, "func": "Create a src uid array", "target": 0}
{"idx": 5686, "func": "i18n[graph.save=Save]", "target": 0}
{"idx": 5687, "func": "Ingres requires that columns that are to become not null must have a default value.", "target": 0}
{"idx": 5688, "func": "Write out header section", "target": 0}
{"idx": 5689, "func": "never visited, should be fine", "target": 0}
{"idx": 5690, "func": "make all sockets blocking as configured again close unregisters all channels, so we can safely reset blocking modes", "target": 0}
{"idx": 5691, "func": "NOTE: No longer a separate type in UML 2.1", "target": 0}
{"idx": 5692, "func": "Try to load from classpath without prefix. \"A/b.rb\" will not load as \"./A/b.rb\" in a jar file.", "target": 0}
{"idx": 5693, "func": "Retain the original one:", "target": 0}
{"idx": 5694, "func": "//Strip '.' token", "target": 0}
{"idx": 5695, "func": "//{{{ removeKeyBinding() method", "target": 0}
{"idx": 5696, "func": "6f - remove ending \"<segment>/..\" where \"<segment>\" is a complete path segment", "target": 0}
{"idx": 5697, "func": "test if this element can be contained by the target", "target": 0}
{"idx": 5698, "func": "//{{{ recordInput() method", "target": 0}
{"idx": 5699, "func": "i18n[editextras.year=Year]", "target": 0}
{"idx": 5700, "func": "SSS FIXME: Do we need to check if l is same as whatever popped?", "target": 1}
{"idx": 5701, "func": "//the rest of the method treats single jar like //a nested path with one file", "target": 0}
{"idx": 5702, "func": "Close existing session.", "target": 0}
{"idx": 5703, "func": "a \"detached\" collection that belonged to a different entity", "target": 0}
{"idx": 5704, "func": "copy every headerfield the original message contains", "target": 0}
{"idx": 5705, "func": "already been processed...", "target": 0}
{"idx": 5706, "func": "TODO: replace view with more detailed info view", "target": 1}
{"idx": 5707, "func": "(tstich) reduced to 3 because all need to be search when activated on startup we only want 3 subfolders -> if more children exist remove them", "target": 0}
{"idx": 5708, "func": "What is the property supposed to be?", "target": 1}
{"idx": 5709, "func": "TODO: This must happen on the AWT thread", "target": 1}
{"idx": 5710, "func": "not been set by any child samples", "target": 0}
{"idx": 5711, "func": "Method 2: (assign data immediately, see end of file). TODO: if we ever want to extend PathItemPlacement, we should modify this, so that we also recognise any subclass of PathItemPlacement. Is the class name a PathItemPlacment? TODO: Use class reference to make this dependency obvious", "target": 1}
{"idx": 5712, "func": "trailing garbage", "target": 0}
{"idx": 5713, "func": "System.err.println(\"Logged throwable: --------------------\"); throwable.printStackTrace();", "target": 0}
{"idx": 5714, "func": "\\xHH", "target": 0}
{"idx": 5715, "func": "i18n[mssql.fileFormat=File Format]", "target": 0}
{"idx": 5716, "func": "//following doesn't handle (null, not null) but unnecessary //since this would mean all rows", "target": 0}
{"idx": 5717, "func": "//only collections belonging to deleted entities are allowed to be dereferenced in the case of orphan delete", "target": 0}
{"idx": 5718, "func": "no point saving an empty list", "target": 0}
{"idx": 5719, "func": "handle 16 bit signed numbers", "target": 0}
{"idx": 5720, "func": "delete the old file", "target": 0}
{"idx": 5721, "func": "setEnabled((Globals.clipBoard != null && !Globals.clipBoard.isEmpty()) || !isSystemClipBoardEmpty());", "target": 0}
{"idx": 5722, "func": "Compute bytes before stripping", "target": 0}
{"idx": 5723, "func": "if the list does not exist add the code generation and good practices profiles as default", "target": 0}
{"idx": 5724, "func": "TODO: implement properly", "target": 1}
{"idx": 5725, "func": "//{{{ createMenuItems() method", "target": 0}
{"idx": 5726, "func": "Read the element type name.", "target": 0}
{"idx": 5727, "func": "checkbox pressed", "target": 0}
{"idx": 5728, "func": "//store.shutdown();", "target": 0}
{"idx": 5729, "func": "//System.err.println(comp.getClass());", "target": 0}
{"idx": 5730, "func": "register interest on configuration changes", "target": 0}
{"idx": 5731, "func": "6. Line with Buttons", "target": 0}
{"idx": 5732, "func": "This code has to go within the startElement block after the strings have been matched.", "target": 0}
{"idx": 5733, "func": "//{{{ resetCachedProperties() method", "target": 0}
{"idx": 5734, "func": "Should cache this subject to classloader change message Evaluation of the formal parameter simply resolves its type via the specified namespace.. it doesn't modify the namespace.", "target": 1}
{"idx": 5735, "func": "//{{{ addToFavorites() method", "target": 0}
{"idx": 5736, "func": "apply transparent icon //button.setDisabledIcon(ImageUtil.createTransparentIcon(icon));", "target": 0}
{"idx": 5737, "func": "i18n[DBUtil.error.unknowntype=Unknown Java SQL column type: '{0}']", "target": 0}
{"idx": 5738, "func": "create a lightweight thunk", "target": 0}
{"idx": 5739, "func": "Now resize all sub-figs, including not displayed figs. Start by the name. We override the getMinimumSize if it is less than our view (21 pixels hardcoded!). Add in the shared extra, plus in this case the correction.", "target": 0}
{"idx": 5740, "func": "Add all classes from this package first, to guarantee they get the simple names", "target": 0}
{"idx": 5741, "func": "passwordTextField = new JPasswordField(10);", "target": 0}
{"idx": 5742, "func": "//{{{ getFrames() method", "target": 0}
{"idx": 5743, "func": "copy the middle three items...", "target": 0}
{"idx": 5744, "func": "TODO: rb_usascii_str_new2", "target": 0}
{"idx": 5745, "func": "todo : hack!!! NOTE : here we cleanup the load context when we have no more local LCE entries. This \"works\" for the time being because really only the collection load contexts are implemented. Long term, this cleanup should become part of the \"close result set\" processing from the (sandbox/jdbc) jdbc-container code.", "target": 1}
{"idx": 5746, "func": "better safe than sorry!", "target": 0}
{"idx": 5747, "func": "add welcome message to new account inbox", "target": 0}
{"idx": 5748, "func": "change to new folder", "target": 0}
{"idx": 5749, "func": "LRUMap is not generic", "target": 0}
{"idx": 5750, "func": "Only do this if the object tree (and hence this contents tab) is visible.", "target": 0}
{"idx": 5751, "func": "labelPaint", "target": 0}
{"idx": 5752, "func": "plugin supports Session main window only", "target": 0}
{"idx": 5753, "func": "this has been shown to happen occasionally in rare cases when using a transaction manager + transaction-timeout where the timeout calls back through Hibernate's registered transaction synchronization on a separate \"reaping\" thread. In cases where that reaping thread executes through this block at the same time the main application thread does we can get into situations where these CMEs occur. And though it is not \"allowed\" per-se, the end result without handling it specifically is infinite looping. So here, we simply break the loop", "target": 0}
{"idx": 5754, "func": "UML 1.4 WFR 2.5.3.1 #3 - no aggregation for N-ary associations", "target": 0}
{"idx": 5755, "func": "Do the extent processing that should have been done for the root but was actualljy done for the document root. //", "target": 0}
{"idx": 5756, "func": "Do not try to be fancy and insert the data where the user is looking, just stuff it into the actual model and re-paint the table when the 'table changed' event is fired.", "target": 0}
{"idx": 5757, "func": "If there is no list to add to, no collection or an empty collection from which to add, or the index is out of range... //", "target": 0}
{"idx": 5758, "func": "warning: can cause a recursive calls! (proxy initialization)", "target": 0}
{"idx": 5759, "func": "/ <summary> / The position of the cursor in the buffer when the / current column was started or the last time data / was moved out to the column buffer. / </summary>", "target": 0}
{"idx": 5760, "func": "//delete the file containing the message in the file system", "target": 0}
{"idx": 5761, "func": "For Script example that modifies id'ed tasks in other targets to work. very Ugly The reference is replaced by RuntimeConfigurable", "target": 1}
{"idx": 5762, "func": "TODO: Restructured in UML 2", "target": 0}
{"idx": 5763, "func": "Begin a transaction - we'll do a bunch of reads first to collect a set of elements to delete - then delete them all", "target": 0}
{"idx": 5764, "func": "fall back on env entry for USER", "target": 0}
{"idx": 5765, "func": "//{{{ charArraysEqual() method", "target": 0}
{"idx": 5766, "func": "root", "target": 0}
{"idx": 5767, "func": "line 1244", "target": 0}
{"idx": 5768, "func": "@see org.tigris.swidgets.Orientable#setOrientation(Orientation)", "target": 0}
{"idx": 5769, "func": "//scan for an implicit fileset if there was a srcdir set //or there was no srcDir set but there was no contained classes", "target": 0}
{"idx": 5770, "func": "Must be called after setImplementation.", "target": 0}
{"idx": 5771, "func": "--------------------------------------------------------------------- ADDITIONAL CSV RESULT FILE CONSTANTS AND FIELD NAME CONSTANTS ---------------------------------------------------------------------", "target": 0}
{"idx": 5772, "func": "START: check d0", "target": 0}
{"idx": 5773, "func": "Wrap the current input as a zip stream, and record it for loop-based recursion. //", "target": 0}
{"idx": 5774, "func": "end of central dir signature", "target": 0}
{"idx": 5775, "func": "build the command line from what we got the format as specified in the CCM.EXE help", "target": 0}
{"idx": 5776, "func": "Auto detect encoding", "target": 0}
{"idx": 5777, "func": "let bad input fail silently", "target": 0}
{"idx": 5778, "func": "just append beginToken and search further", "target": 0}
{"idx": 5779, "func": "//{{{ componentResized() method", "target": 0}
{"idx": 5780, "func": "(non-Javadoc) @see org.columba.mail.imap.IImapServer#flagsChanged(java.lang.String, org.columba.ristretto.imap.IMAPFlags)", "target": 0}
{"idx": 5781, "func": "NONE / RANGE", "target": 0}
{"idx": 5782, "func": "Close up the file input stream for the class file", "target": 0}
{"idx": 5783, "func": "return the result as boolean value true or false", "target": 0}
{"idx": 5784, "func": "Override this method if you want to customize how the node dumps out its children.", "target": 0}
{"idx": 5785, "func": "For pessimistic locking, we just want to toss out our ref to any old invalid root node and get the latest (may be null)", "target": 0}
{"idx": 5786, "func": "global references", "target": 0}
{"idx": 5787, "func": "Grant extra permissions to read and write the user. properties and read to the java.home property", "target": 0}
{"idx": 5788, "func": "remove leading whitespace (includes _ for lax) get sign, if any", "target": 0}
{"idx": 5789, "func": "//TODO: different critic for packages consisting only //of references to elements of other packages?", "target": 0}
{"idx": 5790, "func": "add attachments (mimeparts) from model to the view", "target": 0}
{"idx": 5791, "func": "(non-Javadoc) @see org.columba.core.filter.IFilter#clone()", "target": 0}
{"idx": 5792, "func": "moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 5793, "func": "Text group to contain name & stereotype", "target": 0}
{"idx": 5794, "func": "i18n[DB2Plugin.showProcedureSource=Show procedure source]", "target": 0}
{"idx": 5795, "func": "line 1658", "target": 0}
{"idx": 5796, "func": "test collection 3, which doesn't define all tasks in all series", "target": 0}
{"idx": 5797, "func": "//load additionnal name conversion rules from plugins", "target": 0}
{"idx": 5798, "func": "no way, we have to give up", "target": 0}
{"idx": 5799, "func": "don't want 'New File' to create a read only buffer if current file is on SQL VFS or something", "target": 0}
{"idx": 5800, "func": "if undefined, branch to method_missing", "target": 0}
{"idx": 5801, "func": "JSCFDriverManager.registerJSCFDriver(new GPGDriver());JSCFConnection con = JSCFDriverManager.getConnection(\"jscf:gpg:\"+pgpItem.get(\"path\"));", "target": 0}
{"idx": 5802, "func": "empirically it appears that to_ary coersions always return array or nil, so this should always be an array by now.", "target": 0}
{"idx": 5803, "func": "Not overlapped src: o-----o sub: o----o", "target": 0}
{"idx": 5804, "func": "the textAlignment and the horizontalAlignment are separate things, but it makes sense for the default textAlignment to match the title's horizontal alignment...", "target": 0}
{"idx": 5805, "func": "The property is the name of a file. We are testing a location attribute, so we need to resolve the given file name in the provided folder.", "target": 0}
{"idx": 5806, "func": "//{{{ generateSuffixArray() method", "target": 0}
{"idx": 5807, "func": "//Load default locale bundle files //using default file encoding scheme.", "target": 0}
{"idx": 5808, "func": "TODO: Don't use hardcoded colors here - tfm", "target": 1}
{"idx": 5809, "func": "found a ctor, but it was not publicly accessible so try to request accessibility", "target": 0}
{"idx": 5810, "func": "//{{{ charsToEntities() method", "target": 0}
{"idx": 5811, "func": "The figPoly is located at the right of the name text. The nameFig size is increased, so that it fits its text, and the figPoly next to the text, all within the boundaries of the nameFig.", "target": 0}
{"idx": 5812, "func": "define criteria", "target": 0}
{"idx": 5813, "func": "//{{{ stopServer() method", "target": 0}
{"idx": 5814, "func": "HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());", "target": 0}
{"idx": 5815, "func": "//{{{ doHyperSearch() method", "target": 0}
{"idx": 5816, "func": "complicate things a little...", "target": 0}
{"idx": 5817, "func": "skips 0 to 3 padding bytes", "target": 0}
{"idx": 5818, "func": "replace an existing value", "target": 0}
{"idx": 5819, "func": "?O | boolean | True if file1 exists and is owned by the caller's real uid", "target": 0}
{"idx": 5820, "func": "//stolen from writeManifest", "target": 1}
{"idx": 5821, "func": "i18n[DeleteTablesCommand.progressDialogTitle=Analyzing tables to delete]", "target": 0}
{"idx": 5822, "func": "RubyClassPathVariable", "target": 0}
{"idx": 5823, "func": "//{{{ Edit class", "target": 0}
{"idx": 5824, "func": "//{{{ Text methods", "target": 0}
{"idx": 5825, "func": "//{{{ textAreaDisposed() method", "target": 0}
{"idx": 5826, "func": "TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)", "target": 1}
{"idx": 5827, "func": "Unique Barrier creation ensured by synchronized setup", "target": 0}
{"idx": 5828, "func": "Test method for 'org.apache.jmeter.protocol.http.sampler.postWriter.sendPostData(URLConnection, HTTPSampler)' This method test sending a HTTPSampler with form parameters, and only the filename of a file.", "target": 0}
{"idx": 5829, "func": "i18n[oracle.displayColumns=Display index column information]", "target": 0}
{"idx": 5830, "func": "TODO: This is using internal knowledge of GEF. It should handle this itself. - tfm", "target": 1}
{"idx": 5831, "func": "Tests generation //", "target": 0}
{"idx": 5832, "func": "LiteralSpecification", "target": 0}
{"idx": 5833, "func": "Default is c:\\windows under win98, $HOME under Unix", "target": 0}
{"idx": 5834, "func": "The 2 component: a textField and a list", "target": 0}
{"idx": 5835, "func": "Logger for this class //private final static ILogger log = LoggerController.createLogger(PreferencesPanel.class);", "target": 0}
{"idx": 5836, "func": "add Java to IANA encoding mappings //fJava2IANAMap.put(\"8859_1\", \"US-ASCII\"); ?", "target": 0}
{"idx": 5837, "func": "Ensure terminated properly", "target": 0}
{"idx": 5838, "func": "//i18n[SQLScriptPreferencesPanel.updateActionLabel=Action to take on update:]", "target": 0}
{"idx": 5839, "func": "Either set or unset the feature. //", "target": 0}
{"idx": 5840, "func": "Find the end of the standard descriptor's relative path", "target": 0}
{"idx": 5841, "func": "this action is disabled when the text/plain editor is used -> so, its safe to just cast to HtmlEditorController here", "target": 0}
{"idx": 5842, "func": "//////", "target": 0}
{"idx": 5843, "func": "do the sorting", "target": 0}
{"idx": 5844, "func": "notify all listeners", "target": 0}
{"idx": 5845, "func": "advance line Paint", "target": 0}
{"idx": 5846, "func": "//Class/unsetGenFeature.javadoc.override.javajetinc", "target": 0}
{"idx": 5847, "func": "Timeout module methods", "target": 0}
{"idx": 5848, "func": "From MySQL 5.0 Reference: ALTER TABLE tbl_name ADD [CONSTRAINT symbol] FOREIGN KEY [id] (index_col_name, ...) REFERENCES tbl_name (index_col_name, ...) [ON DELETE {RESTRICT | CASCADE | SET NULL | NO ACTION}] [ON UPDATE {RESTRICT | CASCADE | SET NULL | NO ACTION}]", "target": 0}
{"idx": 5849, "func": "Constructor...", "target": 0}
{"idx": 5850, "func": "minimumBarLength", "target": 0}
{"idx": 5851, "func": "(non-Javadoc) @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)", "target": 0}
{"idx": 5852, "func": "CommentEdge - the owner of a FigEdgeNote", "target": 0}
{"idx": 5853, "func": "we have the whole contents of the BLOB tell user the data is truncated", "target": 0}
{"idx": 5854, "func": "//private Shape leftArrow;", "target": 0}
{"idx": 5855, "func": "float number of seconds", "target": 0}
{"idx": 5856, "func": "expect getFile for updated files that were downloaded", "target": 0}
{"idx": 5857, "func": "Needed for serialisation testing", "target": 0}
{"idx": 5858, "func": "in VM is not very nice since it could probably hang the whole build. IMHO this method should be avoided and it would be best to remove it in future versions. TBD. (SBa)", "target": 0}
{"idx": 5859, "func": "build association build association between actor and top use case.", "target": 0}
{"idx": 5860, "func": "//can't have zero-length token", "target": 0}
{"idx": 5861, "func": "gradientPaintTransformer", "target": 0}
{"idx": 5862, "func": "//TODO: implement this method properly", "target": 1}
{"idx": 5863, "func": "Get the contents of the directory", "target": 0}
{"idx": 5864, "func": "//{{{ goToStartOfWhiteSpace() method", "target": 0}
{"idx": 5865, "func": "Create a default profile and record its contents", "target": 0}
{"idx": 5866, "func": "//{{{ PrintOptionPane constructor", "target": 0}
{"idx": 5867, "func": "auto-detect encoding within the gzip stream.", "target": 0}
{"idx": 5868, "func": "end class ActionPageSetup", "target": 0}
{"idx": 5869, "func": "false indicates to not generate parens around the assignment", "target": 0}
{"idx": 5870, "func": "The diagram are always owned by the model in this first implementation.", "target": 0}
{"idx": 5871, "func": "This refactoring depends on the following API methods: getCreateTableSQL", "target": 1}
{"idx": 5872, "func": "TODO implement", "target": 1}
{"idx": 5873, "func": "Listen to activitygraph deletion, delete this diagram.", "target": 0}
{"idx": 5874, "func": "// componentTuplizerFactory = new ComponentTuplizerFactory();", "target": 0}
{"idx": 5875, "func": "Assume no recent files", "target": 0}
{"idx": 5876, "func": "Unexpected target exception? Should not happen.", "target": 0}
{"idx": 5877, "func": "Parent container for this context (can be dynamic!!) If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure List of IR instructions for this method", "target": 0}
{"idx": 5878, "func": "UIManager.put(\"Label.font\", mainFont); UIManager.put(\"Textfield.font\", mainFont); UIManager.put(\"TextArea.font\", mainFont); UIManager.put(\"MenuItem.font\", mainFont); UIManager.put(\"MenuItem.acceleratorFont\", mainFont); UIManager.put(\"Menu.font\", mainFont); UIManager.put(\"Menu.acceleratorFont\", mainFont); UIManager.put(\"MenuBar.font\", mainFont); UIManager.put(\"Tree.font\", mainFont); UIManager.put(\"Table.font\", mainFont); UIManager.put(\"Button.font\", mainFont); UIManager.put(\"CheckBoxButton.font\", mainFont); UIManager.put(\"RadioButton.font\", mainFont); UIManager.put(\"ComboBox.font\", mainFont); UIManager.put(\"ToggleButton.font\", mainFont); UIManager.put(\"CheckBoxMenuItem.font\", mainFont); UIManager.put(\"RadioButtonMenuItem.font\", mainFont); UIManager.put(\"TabbedPane.font\", mainFont); UIManager.put(\"List.font\", mainFont);", "target": 0}
{"idx": 5879, "func": "if event source is unknown or the event source is the container's target then update the field", "target": 0}
{"idx": 5880, "func": "Allow for property not yet being set (probably only applies to Test cases)", "target": 0}
{"idx": 5881, "func": "//FIXME: get the PersistentClass", "target": 1}
{"idx": 5882, "func": "visit width-first, then depth", "target": 0}
{"idx": 5883, "func": "//DateFormat format = DateFormat.getTimeInstance(DateFormat.SHORT); green color", "target": 0}
{"idx": 5884, "func": "we cannot delete the last diagram", "target": 0}
{"idx": 5885, "func": "Block and block pass passed in at same time....uh oh", "target": 0}
{"idx": 5886, "func": "(2) Construct another CheckItem", "target": 0}
{"idx": 5887, "func": "Quick fail if this is not a valid OS for the command", "target": 0}
{"idx": 5888, "func": "No valid field for above notationLanguage. It's valid if not null.", "target": 0}
{"idx": 5889, "func": "prompt the user to add a website url for this driver", "target": 0}
{"idx": 5890, "func": "while constructor is running", "target": 0}
{"idx": 5891, "func": "no body?", "target": 0}
{"idx": 5892, "func": "Ensure that the class loader for this class will be used downstream. //", "target": 0}
{"idx": 5893, "func": "//{{{ MirrorCompare class", "target": 0}
{"idx": 5894, "func": "//no need to synchronize, as Vector is always synchronized", "target": 0}
{"idx": 5895, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsGetGeneratedKeys()", "target": 0}
{"idx": 5896, "func": "End BeanShell Modification - made conditional on debug", "target": 0}
{"idx": 5897, "func": "newestAt takes value previously held by oldestAT", "target": 0}
{"idx": 5898, "func": "line 672", "target": 0}
{"idx": 5899, "func": "line 1113", "target": 0}
{"idx": 5900, "func": "//TODO: if we are using identity columns, fetch the identifier", "target": 1}
{"idx": 5901, "func": "SSS FIXME: Deprecated! Going forward, all instructions should come from the CFG", "target": 1}
{"idx": 5902, "func": "LOOP LABEL $NON-NLS-1$", "target": 0}
{"idx": 5903, "func": "search across all providers", "target": 0}
{"idx": 5904, "func": "//////////////////////////////////////////////////////////////internal methods", "target": 0}
{"idx": 5905, "func": "TODO: fix layout to look good, even if there's not enough information provided", "target": 1}
{"idx": 5906, "func": "Directory path of the EJB descriptor Filename appearing before name terminator Filename appearing after the name terminator", "target": 0}
{"idx": 5907, "func": "//private Shape downArrow;", "target": 0}
{"idx": 5908, "func": "value 2", "target": 0}
{"idx": 5909, "func": "When the user pastes on a TABLE label which is located under a schema/catalog, build the schema DatabaseObjectInfo.", "target": 0}
{"idx": 5910, "func": "//{{{ rename() method", "target": 0}
{"idx": 5911, "func": "reuse change event:", "target": 0}
{"idx": 5912, "func": "(non-Javadoc) @see org.columba.mail.imap.IImapServer#markMessage(java.lang.Object[], int, org.columba.mail.folder.imap.IMAPFolder)", "target": 0}
{"idx": 5913, "func": "Remark: The code in ProjectSettings.init() currently presumes that nobody is using this event.", "target": 0}
{"idx": 5914, "func": "not yet terminated N.B. proc.destroy() is called by the finally clause in the run() method", "target": 0}
{"idx": 5915, "func": "we later use this to compute a relative ranking", "target": 0}
{"idx": 5916, "func": "TODO: Convert this to some sensible logging", "target": 1}
{"idx": 5917, "func": "//if for for", "target": 0}
{"idx": 5918, "func": "================ Singleton Methods ================", "target": 0}
{"idx": 5919, "func": "TODO: This needs to use a different method than that used by the constructor if it wants to allow the method to be overridden", "target": 1}
{"idx": 5920, "func": "this constructor has the correct number of arguments", "target": 0}
{"idx": 5921, "func": "--- Query translator methods ---", "target": 0}
{"idx": 5922, "func": "only: the developer knows what (s)he is doing", "target": 1}
{"idx": 5923, "func": "parent.setConstant(name, proxyClass); where the name should come from ?", "target": 0}
{"idx": 5924, "func": "Metrics of the component used in the constructor", "target": 0}
{"idx": 5925, "func": "Read the XML/Encoding declaration.", "target": 0}
{"idx": 5926, "func": "Recursive call", "target": 0}
{"idx": 5927, "func": "//{{{ statusUpdate() method", "target": 0}
{"idx": 5928, "func": "Formula for a is described in the overall class description.", "target": 0}
{"idx": 5929, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getHint()", "target": 0}
{"idx": 5930, "func": "Now another magic 48-bit number, 0x177245385090, to indicate the end of the last block. (sqrt(pi), if you want to know. I did want to use e, but it contains too much repetition -- 27 18 28 18 28 46 -- for me to feel statistically comfortable. Call me paranoid.)", "target": 0}
{"idx": 5931, "func": "Check the command line options", "target": 0}
{"idx": 5932, "func": "i18n[mssql.scriptFullText=Script full-text indexes]", "target": 0}
{"idx": 5933, "func": "Holds the reverse mappings Key: full class name Entry: primary alias", "target": 0}
{"idx": 5934, "func": "replaceBtn = new JButton(jEdit.getProperty(\"search.replaceBtn\")); replaceBtn.setMnemonic(jEdit.getProperty(\"search.replaceBtn.mnemonic\") .charAt(0)); grid.add(replaceBtn); replaceBtn.addActionListener(actionHandler);", "target": 0}
{"idx": 5935, "func": "eclipse namespaces:", "target": 0}
{"idx": 5936, "func": "handle special case of OHLCDataset", "target": 0}
{"idx": 5937, "func": "Done after the set of the selected item above so that we control when the initial build is done. We want to make sure that under all versions of the JDK that the window is shown before the (possibly lengthy) refresh starts.", "target": 0}
{"idx": 5938, "func": "//do nothing - we only need to notify the cache...", "target": 0}
{"idx": 5939, "func": "If it's a primitive wrapper then we shouldn't try and put it into the jar, so ignore it.", "target": 0}
{"idx": 5940, "func": "Add this new one, and mark it to be retained:", "target": 0}
{"idx": 5941, "func": "Only reset the text if the two are not the same (i.e the fig has moved, rather than we've just edited the text, when setTargetBBox() will have made them the same). Note that styleBounds could be null, so we do the test this way round.", "target": 0}
{"idx": 5942, "func": "find all jar files or paths that end with strPathOrJar", "target": 0}
{"idx": 5943, "func": "//thermometerPaint;", "target": 0}
{"idx": 5944, "func": "//add the restriction to the outer select", "target": 0}
{"idx": 5945, "func": "will check current level if some of them are not null or sublevels if they exist", "target": 0}
{"idx": 5946, "func": "??", "target": 0}
{"idx": 5947, "func": "Inner classes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 5948, "func": "If this is an implied join in a FROM clause, then use ANSI-style joining, and set the flag on the FromElement that indicates that it was implied in the FROM clause itself.", "target": 0}
{"idx": 5949, "func": "activityAShapeBean = new ActivityAShapeBean();", "target": 0}
{"idx": 5950, "func": "//{{{ getMinimumSize() method", "target": 0}
{"idx": 5951, "func": "wrong outcome", "target": 0}
{"idx": 5952, "func": "Check if locked", "target": 0}
{"idx": 5953, "func": "\"w\"", "target": 0}
{"idx": 5954, "func": "putfield new value of the field", "target": 0}
{"idx": 5955, "func": "end hack", "target": 1}
{"idx": 5956, "func": "Set the default entities here.", "target": 0}
{"idx": 5957, "func": "return plain document", "target": 0}
{"idx": 5958, "func": "TODO: Bob says - We're looking at focus change to flag the start of an interaction. This is to detect when focus is gained in a prop panel field on the assumption editing of that field is about to start. Not a good assumption. We Need to see if we can get rid of this.", "target": 1}
{"idx": 5959, "func": "A JDK1.3 'service' ( like in JAXP ). That will plug a helper automatically if in CLASSPATH, with the right META-INF/services.", "target": 0}
{"idx": 5960, "func": "//negatives not allowed and upper bound between 0 & 1 //round up to nearest significant digit for bound: //get negative exponent:", "target": 0}
{"idx": 5961, "func": "Record end time and populate the results.", "target": 0}
{"idx": 5962, "func": "------------------------------------------------------------------------", "target": 0}
{"idx": 5963, "func": "categoryLabelURLs", "target": 0}
{"idx": 5964, "func": "If no Content-Type header was found, it is necessary to construct a new one (for outgoing msg Eudora never includes a Content-Type => html msg is not shown correctly).", "target": 0}
{"idx": 5965, "func": "the renderer should not be equal to a BarRenderer", "target": 0}
{"idx": 5966, "func": "@see org.tigris.gef.presentation.Fig#translate(int, int)", "target": 0}
{"idx": 5967, "func": "Cannot cast from arbitrary object to primitive", "target": 0}
{"idx": 5968, "func": "TODO: No test coverage for this or createPropPanel? - tfm", "target": 1}
{"idx": 5969, "func": "/////////////////////////////////////////////////////////////////////////Methods that implement the VetoableChangeListener interface ///////////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 5970, "func": "//tell the UI that this _workingBuffer is through", "target": 0}
{"idx": 5971, "func": "@see javax.swing.tree.TreeModel#getIndexOfChild(java.lang.Object, java.lang.Object)", "target": 0}
{"idx": 5972, "func": "may be null during startup", "target": 0}
{"idx": 5973, "func": "no good trigger", "target": 0}
{"idx": 5974, "func": "Disabled since it gives various problems: e.g. the toolbar icons get too wide. Also the default does not give the new java 5.0 looks. Component tree = ProjectBrowser.getInstance(); SwingUtilities.updateComponentTreeUI(SwingUtilities.getRootPane(tree));", "target": 1}
{"idx": 5975, "func": "(non-Javadoc) @see org.apache.jmeter.gui.JMeterGUIComponent#createPopupMenu()", "target": 0}
{"idx": 5976, "func": "regular number axis", "target": 0}
{"idx": 5977, "func": "interp", "target": 0}
{"idx": 5978, "func": "// TagList tagList = new ContactTagList(this); // JScrollPane tagListScrollPane = new JScrollPane(tagList); // tagListScrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER); // tagListScrollPane // .setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));", "target": 0}
{"idx": 5979, "func": "Take a character from the buffer or from the actual input stream.", "target": 0}
{"idx": 5980, "func": "//Primary key constraint", "target": 0}
{"idx": 5981, "func": "Determine file whose out-of-dateness is to be checked", "target": 0}
{"idx": 5982, "func": "ignore this", "target": 0}
{"idx": 5983, "func": "@see ISQLEntryPanel#getCaretLineNumber()", "target": 0}
{"idx": 5984, "func": "get flags", "target": 0}
{"idx": 5985, "func": "//demand create pathlist", "target": 0}
{"idx": 5986, "func": "//Strip the response data before writing, but only for a successful request.", "target": 0}
{"idx": 5987, "func": "plot the data (unless the dataset is null)...", "target": 0}
{"idx": 5988, "func": "This class manages the windows for the application. TODO: Correct these notes <p>When a session closes the window manager will ensure that all of the windows for that sesion are closed. <p>Similarily when a window is closed the windows manager will ensure that references to the window are removed for the session. JASON: Prior to this patch there was some code movement from this class to Sessionmanager. The idea being that Sessionmanager was the controller. Do we still want to do this? Remember in the future there will probably be an SDI as well as MDI version of the windows. @author <A HREF=\"mailto:colbell@users.sourceforge.net\">Colin Bell</A> @author <A HREF=\"mailto:jmheight@users.sourceforge.net\">Jason Height</A>", "target": 1}
{"idx": 5989, "func": "TODO: notify threads waiting on descriptors/IO? probably not...", "target": 1}
{"idx": 5990, "func": "//{{{ isVMS() method", "target": 0}
{"idx": 5991, "func": "((MClassifier)node).setNamespace(_collab.getNamespace());", "target": 0}
{"idx": 5992, "func": "//{{{ check if we have to stop parsing", "target": 0}
{"idx": 5993, "func": "TODO: This should not be public. Check all usages of it and put appropriate methods in an API object.", "target": 1}
{"idx": 5994, "func": "Channel that provides snapshot release updates - more frequent and less stable", "target": 0}
{"idx": 5995, "func": "//{{{ setPath() method", "target": 0}
{"idx": 5996, "func": "set the local folder.", "target": 0}
{"idx": 5997, "func": "Find the target in the project browser. We can only do anything if its a use case.", "target": 0}
{"idx": 5998, "func": "Downgrade locks", "target": 0}
{"idx": 5999, "func": "model.getKey().setType( new Type( model.getIdentifier() ) );", "target": 0}
{"idx": 6000, "func": "Assume there's at least one file", "target": 0}
{"idx": 6001, "func": "@see org.argouml.model.ModelEventPump#removeModelEventListener( java.beans.PropertyChangeListener, java.lang.Object, java.lang.String)", "target": 0}
{"idx": 6002, "func": "FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it", "target": 1}
{"idx": 6003, "func": "cannot insert row into read-only table", "target": 0}
{"idx": 6004, "func": "///////////////////////////////////////////////////////IBM DB 2 specific code to read procedure definitions.", "target": 0}
{"idx": 6005, "func": "we generate most buttons using the actions already instanciated", "target": 0}
{"idx": 6006, "func": "Non-Tidy options", "target": 0}
{"idx": 6007, "func": "//this is a query and we are loading multiple instances of the same collection role", "target": 0}
{"idx": 6008, "func": "@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getRuleName()", "target": 0}
{"idx": 6009, "func": "this one only really needed for badly-behaved applications! (if the TransactionManager has a Sychronization registered, its a noop) (actually we do need it for downgrading locks)", "target": 0}
{"idx": 6010, "func": "kept for backward compatibility until after the 3.1beta5 release of HA", "target": 0}
{"idx": 6011, "func": "//{{{ getLineCount() method", "target": 0}
{"idx": 6012, "func": "leave null", "target": 0}
{"idx": 6013, "func": "this seems to make nested readLock() calls work okay. but I have no idea if it actually fixes things or not.", "target": 1}
{"idx": 6014, "func": "//was \"\"", "target": 0}
{"idx": 6015, "func": "Create an empty but initialized instance of a UML Node. @return an initialized UML Node instance. TODO: This needs an extra parameter to specify the model/extent where the new element should be created.", "target": 1}
{"idx": 6016, "func": "This tag is set on elements that are generated by reference when importing. If it is set, then the critics could ignore those objects if they want. TODO: This is really belongs in a higher level utility class that uses the Facade's tagged value methods. Also, it needs to be updated to use a UML 1.4 TagDefinition instead of a simple String.", "target": 1}
{"idx": 6017, "func": "Convert to layered pane's coordinates", "target": 0}
{"idx": 6018, "func": "register error handler", "target": 0}
{"idx": 6019, "func": "line 1791", "target": 0}
{"idx": 6020, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.dialects.HibernateDialect#getColumnLength(int, int)", "target": 0}
{"idx": 6021, "func": "TODO: Review - priority of public ID vs system ID has been reversed from original implementation", "target": 1}
{"idx": 6022, "func": "Ensure that an external entity resolves as expected with NO XMLCatalog involvement: Transform an XML file that contains a reference to a _second_ XML file via the document() function. The _second_ XML file refers to an entity. Stuff result into the property: val3 //", "target": 0}
{"idx": 6023, "func": "//private String compilerPath; //fully qualified name for the compiler executable", "target": 0}
{"idx": 6024, "func": "@see javax.swing.text.Document#getText(int, int)", "target": 0}
{"idx": 6025, "func": "Determine if we can create a valid command at the current location. //", "target": 0}
{"idx": 6026, "func": "Set the fig style attributes. <p> TODO: This should move into the render factories as described in issue 859. @param fig the fig to style. @param attributeMap a map of name value pairs", "target": 1}
{"idx": 6027, "func": "not initialized yet, so create the factory", "target": 0}
{"idx": 6028, "func": "disable the button since no row will be selected now", "target": 0}
{"idx": 6029, "func": "units", "target": 0}
{"idx": 6030, "func": "Last full line read.", "target": 0}
{"idx": 6031, "func": "//LEGEND ITEMS /////////////////////////////////////////////////////////", "target": 0}
{"idx": 6032, "func": "draw the blocks", "target": 0}
{"idx": 6033, "func": "//{{{ getDockableWindowManager() method", "target": 0}
{"idx": 6034, "func": "line 2010", "target": 0}
{"idx": 6035, "func": "mockFontInfo", "target": 0}
{"idx": 6036, "func": "we only close out if it's the slave stream, to avoid closing a directly-mapped stream from parent process", "target": 0}
{"idx": 6037, "func": "if not a composite key, use \"foo in (?, ?, ?)\" for batching if no batch, and not a composite key, use \"foo = ?\"", "target": 0}
{"idx": 6038, "func": "//GenPackageImpl", "target": 0}
{"idx": 6039, "func": "IDataTypeComponent interface methods", "target": 0}
{"idx": 6040, "func": "TRY SOME GUARD/ITERATOR ERRORS", "target": 0}
{"idx": 6041, "func": "In an impored file (and not completely ignoring the project tag)", "target": 0}
{"idx": 6042, "func": "JUnit 4 support:", "target": 0}
{"idx": 6043, "func": "Make sure decoding follows input file", "target": 0}
{"idx": 6044, "func": "TODO: Implement support for types other than String", "target": 1}
{"idx": 6045, "func": "//{{{ loadColors() method", "target": 0}
{"idx": 6046, "func": "//$NON-NLS-1$ //$NON-NLS-1", "target": 0}
{"idx": 6047, "func": "Removed from UML 2", "target": 0}
{"idx": 6048, "func": "display mode", "target": 0}
{"idx": 6049, "func": "private static Configuration getConfiguration(AssertionResult assResult) { DefaultConfiguration config = new DefaultConfiguration(ASSERTION_RESULT_TAG_NAME, \"JMeter Save Service\"); config.setAttribute(FAILURE_MESSAGE, assResult.getFailureMessage()); config.setAttribute(ERROR, \"\" + assResult.isError()); config.setAttribute(FAILURE, \"\" + assResult.isFailure()); return config; }", "target": 0}
{"idx": 6050, "func": "TODO: This does not work - no event arrives.", "target": 1}
{"idx": 6051, "func": "(non-Javadoc) @see org.apache.jmeter.report.writers.PageSummary#setSuccessful(boolean)", "target": 0}
{"idx": 6052, "func": "IMPORTANT - These MUST remain in order!", "target": 0}
{"idx": 6053, "func": "expected;", "target": 0}
{"idx": 6054, "func": "invokeinterface invoke Enabled.getInterceptFieldCallback()", "target": 0}
{"idx": 6055, "func": "intentional: if there is nonsense in the field, we do not set the value", "target": 0}
{"idx": 6056, "func": "long", "target": 0}
{"idx": 6057, "func": "everything ok", "target": 0}
{"idx": 6058, "func": "EMOF.isReadOnly = !Ecore.changeable", "target": 0}
{"idx": 6059, "func": "make getter for proxy class", "target": 0}
{"idx": 6060, "func": "check for the case where we are limiting some columns but not limiting this particular column", "target": 0}
{"idx": 6061, "func": "This method is called just after a new entry has been added", "target": 0}
{"idx": 6062, "func": "remove trailing \\n", "target": 0}
{"idx": 6063, "func": "Fill with background. //", "target": 0}
{"idx": 6064, "func": "fall-back to global resource loader", "target": 0}
{"idx": 6065, "func": "line 429", "target": 0}
{"idx": 6066, "func": "//parameter value is < -10 //calculate log using positive value:", "target": 0}
{"idx": 6067, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#unload()", "target": 0}
{"idx": 6068, "func": "//}}} //}}} //}}}", "target": 0}
{"idx": 6069, "func": "USER_INPUT", "target": 0}
{"idx": 6070, "func": "the next token is an token with the whole Mailaddress", "target": 0}
{"idx": 6071, "func": "Process XML elements", "target": 0}
{"idx": 6072, "func": "TODO: fetch this once as per vars above?", "target": 1}
{"idx": 6073, "func": "//compiling order", "target": 0}
{"idx": 6074, "func": "// GUIUtils.setJButtonSizesTheSame(new JButton[] {_okBtn, _closeBtn, new JButton(i18n.CANCEL)});", "target": 0}
{"idx": 6075, "func": "i18n[ActionCollection.actionNotFound=Action {0} not found in ActionCollection.]", "target": 0}
{"idx": 6076, "func": "This should never be called. //", "target": 0}
{"idx": 6077, "func": "only whitespace allowed after value for strict", "target": 0}
{"idx": 6078, "func": "//why do we do nothing?", "target": 1}
{"idx": 6079, "func": "Removes a listener, eventtype pair from the listener list. TODO: replace the listener implementation with a EventListenerList for better performance @param event the event to which the listener will not listen any more @param listener the listener to be removed", "target": 1}
{"idx": 6080, "func": "@see junit.framework.TestCase#setUp()", "target": 0}
{"idx": 6081, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getStringFunctions()", "target": 0}
{"idx": 6082, "func": "TODO: something much better - look at the type of the other expression! TODO: Have comparisonExpression and/or arithmeticExpression rules complete the resolution of boolean nodes.", "target": 1}
{"idx": 6083, "func": "Make the local namespace for the method invocation", "target": 0}
{"idx": 6084, "func": "(non-Javadoc) @see org.columba.api.command.IWorkerStatusController#addWorkerStatusChangeListener(org.columba.core.gui.statusbar.event.WorkerStatusChangeListener)", "target": 0}
{"idx": 6085, "func": "2-byte sequence: 00000yyyyyxxxxxx = 110yyyyy 10xxxxxx", "target": 0}
{"idx": 6086, "func": "If we know what method was being called, strip everything before the call. This hides the JRuby and reflection internals.", "target": 0}
{"idx": 6087, "func": "line 1456", "target": 0}
{"idx": 6088, "func": "//{{{ getSelectionCount() method", "target": 0}
{"idx": 6089, "func": "end class", "target": 0}
{"idx": 6090, "func": "Private constructor for common work needed by both public constructors.", "target": 0}
{"idx": 6091, "func": "//else do nothing (don't even reassociate object!)", "target": 0}
{"idx": 6092, "func": "needs to be updated for changes in Notation subsystem - tfm String nameStr = Notation.generate(this, getOwner()).trim(); getNameFig().setText(nameStr);", "target": 0}
{"idx": 6093, "func": "//\"as\" is not in KEYWORDS", "target": 0}
{"idx": 6094, "func": "(non-Javadoc) @see org.columba.core.filter.IFilterRule#setCondition(java.lang.String)", "target": 0}
{"idx": 6095, "func": "Is row at top of screen?", "target": 0}
{"idx": 6096, "func": "nothing else to do (?)", "target": 0}
{"idx": 6097, "func": "domainAxisLocation - no longer a separate field but test anyway...", "target": 0}
{"idx": 6098, "func": "@see org.tigris.gef.graph.GraphModel#getInEdges(java.lang.Object)", "target": 0}
{"idx": 6099, "func": "SQL Server (at least up through 2005) does not support defining cascade delete constraints which can circel back to the mutating table", "target": 0}
{"idx": 6100, "func": "clockseq_hi", "target": 0}
{"idx": 6101, "func": "SSS FIXME: These should get normally compiled or initialized some other way ... SSS FIXME: Parent/super-type info is incorrect! These are just placeholders for now .. this needs to be updated with real class objects later!", "target": 1}
{"idx": 6102, "func": "i18n[sqlbookmark.noDeleteSelection=Please select the bookmark to delete]", "target": 0}
{"idx": 6103, "func": "Is this it? Is the class public or can we use accessibility?", "target": 0}
{"idx": 6104, "func": "regex //$NON-NLS-1$ template //$NON-NLS-1$ which match //$NON-NLS-1$ between text //$NON-NLS-1$ default text //$NON-NLS-1$ output variable name //$NON-NLS-1$ input variable //$NON-NLS-1$", "target": 0}
{"idx": 6105, "func": "Color", "target": 0}
{"idx": 6106, "func": "//TODO: cache this in an instvar", "target": 1}
{"idx": 6107, "func": "right?", "target": 0}
{"idx": 6108, "func": "END public ExternalEditor()", "target": 0}
{"idx": 6109, "func": "assign the default values, adding to the end of allArgs", "target": 0}
{"idx": 6110, "func": "No external subset.", "target": 0}
{"idx": 6111, "func": "@see org.tigris.gef.ui.IStatusBar#showStatus(java.lang.String)", "target": 0}
{"idx": 6112, "func": "drawBorder", "target": 0}
{"idx": 6113, "func": "Try looking up the element", "target": 0}
{"idx": 6114, "func": "core artifacts are not displayed", "target": 0}
{"idx": 6115, "func": "i18n[dateTypeTimestamp.defaultFormat=Use default format ]", "target": 0}
{"idx": 6116, "func": "check for match inside line", "target": 0}
{"idx": 6117, "func": "Bind to any port on localhost; accept 2 simultaneous connection attempts before rejecting connections", "target": 0}
{"idx": 6118, "func": "TODO: Can this be made more restrictive? Do we care about any attributes other than name? - tfm", "target": 1}
{"idx": 6119, "func": "Use this to override file length", "target": 0}
{"idx": 6120, "func": "Keep the raw post data", "target": 0}
{"idx": 6121, "func": "i18n[oracle.diskReadsPerRow=Disk Reads per Row]", "target": 0}
{"idx": 6122, "func": "These are handled specially by addToTree", "target": 0}
{"idx": 6123, "func": "//i18n[WhereClausePanel.columnLabel=Columns]", "target": 0}
{"idx": 6124, "func": "DB cols are in same order as colDefs", "target": 0}
{"idx": 6125, "func": "@see org.argouml.uml.diagram.ui.UMLDiagram#getUmlActions()", "target": 0}
{"idx": 6126, "func": "Set default values //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$", "target": 0}
{"idx": 6127, "func": "@bgen(jjtree) ImportDeclaration", "target": 0}
{"idx": 6128, "func": "Set recipients from the recipients vector", "target": 0}
{"idx": 6129, "func": "//does not happen", "target": 0}
{"idx": 6130, "func": "Build the final string", "target": 0}
{"idx": 6131, "func": "-------------", "target": 0}
{"idx": 6132, "func": "start parsing line by line", "target": 0}
{"idx": 6133, "func": "TRUE if the pool is borrowed from the outside, FALSE if we used to create it", "target": 0}
{"idx": 6134, "func": "Create an EnumerationLiteral. @return Object new Enumeration @since UML 1.4 TODO: This needs an extra parameter to specify the model/extent where the new element should be created.", "target": 1}
{"idx": 6135, "func": "TODO: This probably needs more qualification - tfm", "target": 1}
{"idx": 6136, "func": "//////////////////////////////////////////////////////////////corrective automations, wizards", "target": 0}
{"idx": 6137, "func": "Write `magic' bytes h indicating file-format == huffmanised, followed by a digit indicating blockSize100k.", "target": 0}
{"idx": 6138, "func": "i18n[popupeditableIoPanel.fileOpenErrorHeader=File Open Error]", "target": 0}
{"idx": 6139, "func": "Returns the containing parent scope -- can be a dynamic value (hence Operand)!", "target": 0}
{"idx": 6140, "func": "initPreinitialize(); initializeSubsystems(new SimpleTimer(), null); ArgoFrame.getInstance().setVisible(true);", "target": 0}
{"idx": 6141, "func": "heuristic #2", "target": 0}
{"idx": 6142, "func": "//==elementType ??", "target": 0}
{"idx": 6143, "func": "if the line has no text, out.size() == 0", "target": 0}
{"idx": 6144, "func": "Actor 4.11.3.1 [1]", "target": 0}
{"idx": 6145, "func": "build an array with indices equal to the total number of actual returns in the result Hibernate will return for this query (scalars + non-scalars)", "target": 0}
{"idx": 6146, "func": "hash given", "target": 0}
{"idx": 6147, "func": "It was explicitly imported, but we don't know what it is. should we throw an error here??", "target": 1}
{"idx": 6148, "func": "Below is equivalent to the following: xmlType = XMLType.createXML(o);", "target": 0}
{"idx": 6149, "func": "Wait for I/O on any channel //", "target": 0}
{"idx": 6150, "func": "i18n[UpdatePreferencesPanel.path=Path:]", "target": 0}
{"idx": 6151, "func": "work-around for bug which means we must use \"dbo\" for schema", "target": 1}
{"idx": 6152, "func": "now for each dataset, get the renderer and the appropriate axis and render the dataset...", "target": 0}
{"idx": 6153, "func": "//materialize associations (and initialize the object) later", "target": 0}
{"idx": 6154, "func": "coerce arguments", "target": 0}
{"idx": 6155, "func": "column is limited and length == limit, so need to re-read column is not limited, so we have the whole thing", "target": 0}
{"idx": 6156, "func": "//MOperation", "target": 0}
{"idx": 6157, "func": "not currently serialized", "target": 0}
{"idx": 6158, "func": "/////////////////////////////////////////////////////////////////////HACK ALERT !!!!!!!!!!!!!!!!!!!!!!!!!!!! Attempt to work around \"ghost\" ImpliedFromElements that occasionally show up between the actual things being joined. This consistently occurs from index nodes (at least against many-to-many). Not sure if there are other conditions Essentially, look-ahead to the next FromElement that actually writes something to the SQL", "target": 1}
{"idx": 6159, "func": "a Collection containing a NaN will return Double.NaN for the result", "target": 0}
{"idx": 6160, "func": "TODO - should we call start() and stop()?", "target": 1}
{"idx": 6161, "func": "//JMH Remove the current sql text. Create a tabbed pane for session details (including sql text)", "target": 0}
{"idx": 6162, "func": "TODO: There are lots and LOTS of magic numbers used in calculating positions and sizes. Any time you see Figs being placed at 10,10 use these constants instead. If you can reliably interpret calculations, you can factor them out of there as well. Add additional constants as needed to express other common factors - tfm 20081201", "target": 1}
{"idx": 6163, "func": "Initialize font faces list", "target": 0}
{"idx": 6164, "func": "create a hashtable to group them by parent directory:", "target": 0}
{"idx": 6165, "func": "create and tag all subfolders on server", "target": 0}
{"idx": 6166, "func": "If \\r\\n then just pass along \\n (windows). If \\r[^\\n] then pass along \\n (MAC).", "target": 0}
{"idx": 6167, "func": "checkbox for whether to interpret input leniently or not i18n[dataTypeDate.allowInexact=allow inexact format on input]", "target": 0}
{"idx": 6168, "func": "Misc", "target": 0}
{"idx": 6169, "func": "these extra arrays are really unfortunate; split some of these paths out to eliminate?", "target": 1}
{"idx": 6170, "func": "Implement EntityResolver methods //", "target": 0}
{"idx": 6171, "func": "ensure <tstamp> follows the immutability rule", "target": 0}
{"idx": 6172, "func": "selection in the paragraph combo box", "target": 0}
{"idx": 6173, "func": "remove the bsh:get the index of the : between the host and the port is located", "target": 0}
{"idx": 6174, "func": "used by AbstractReportGui", "target": 0}
{"idx": 6175, "func": "Default signature", "target": 0}
{"idx": 6176, "func": "kept for backwards compatibility", "target": 0}
{"idx": 6177, "func": "simple nullability constraint", "target": 0}
{"idx": 6178, "func": "change to parent directory", "target": 0}
{"idx": 6179, "func": "EvStrNode :\"#{some expression}\"", "target": 0}
{"idx": 6180, "func": "MRI behavior: \"If digits is 0, the result is the same as the / operator.\"", "target": 0}
{"idx": 6181, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getWebSite()", "target": 0}
{"idx": 6182, "func": "the query state", "target": 0}
{"idx": 6183, "func": "//if found \"no data\" just return null", "target": 0}
{"idx": 6184, "func": "contained titles", "target": 0}
{"idx": 6185, "func": "read the constant pool.", "target": 0}
{"idx": 6186, "func": "domainCrosshairRowKey", "target": 0}
{"idx": 6187, "func": "icon for menu // putValue(SMALL_ICON, ImageLoader // .getSmallImageIcon(\"16_configure_folder.png\"));", "target": 0}
{"idx": 6188, "func": "private CheckableItemListTableModel model;", "target": 0}
{"idx": 6189, "func": "No aggregation", "target": 0}
{"idx": 6190, "func": "if multiple axes are mapped, the first in the list should be returned...", "target": 0}
{"idx": 6191, "func": "//tab button", "target": 0}
{"idx": 6192, "func": "TODO: This should be managed by the DetailsPane TargetListener - tfm remove the following line", "target": 1}
{"idx": 6193, "func": "again, null != null here", "target": 0}
{"idx": 6194, "func": "length access on array?", "target": 0}
{"idx": 6195, "func": "Mark the bound as unspecified so that it won't be considered many but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //", "target": 0}
{"idx": 6196, "func": "the line is a comment (as per the RFC 2483)", "target": 0}
{"idx": 6197, "func": "check first that it is not already loaded otherwise consecutive runs seems to end into an OutOfMemoryError or it fails when there is a native library to load several times. this is far from being perfect but should work in most cases.", "target": 1}
{"idx": 6198, "func": "//{{{ HelpViewer constructor", "target": 0}
{"idx": 6199, "func": "Create the ordered list of field names from the map", "target": 0}
{"idx": 6200, "func": "@see org.netbeans.api.xmi.XMIReferenceProvider#getReference(javax.jmi.reflect.RefObject)", "target": 0}
{"idx": 6201, "func": "//start point is upper left corner", "target": 0}
{"idx": 6202, "func": "@see Comparator#compare(Object, Object)", "target": 0}
{"idx": 6203, "func": "the target of description will always be set directly by tabtodo", "target": 0}
{"idx": 6204, "func": "we don't have another slash after this, so replace /. with /", "target": 0}
{"idx": 6205, "func": "re-calculate fullTablename the next time it's requested.", "target": 0}
{"idx": 6206, "func": "set up the series names...", "target": 0}
{"idx": 6207, "func": "If the node has a first child, recurse into the first child.", "target": 0}
{"idx": 6208, "func": "GraphAccumVisualizer obsolete, BSFSamplerGui now a TestBean GraphAccumVisualizer obsolete, BSFSamplerGui now a TestBean GraphAccumVisualizer now obsolete CTT changed to use intProp for mode", "target": 0}
{"idx": 6209, "func": "Save URL $NON_NLS-1$", "target": 0}
{"idx": 6210, "func": "inner switch", "target": 0}
{"idx": 6211, "func": "Dummy as the file has no entries", "target": 0}
{"idx": 6212, "func": "//{{{ getLabel() method", "target": 0}
{"idx": 6213, "func": "return the current value (don't forget the prefix!)", "target": 0}
{"idx": 6214, "func": "Makes sure that the edges stick to the outline of the fig. @see org.tigris.gef.presentation.Fig#getGravityPoints()", "target": 0}
{"idx": 6215, "func": "the beginning of the line is a \"delimiter\" so that ,a,b,c returns \"\" \"a\" \"b\" \"c\"", "target": 0}
{"idx": 6216, "func": "First remove all headers that are in the headerlist but not the Folder", "target": 0}
{"idx": 6217, "func": "does the variable already exist?", "target": 0}
{"idx": 6218, "func": "One cannot RMIC an interface for \"classic\" RMI (JRMP)", "target": 0}
{"idx": 6219, "func": "TODO ? perhaps note connection so it can be disconnected at end of test?", "target": 1}
{"idx": 6220, "func": "Generates a new unique ID and returns it as a String. The contents of the String is supposed to be unique with respect to all Strings generated by other instances of this class. TODO: We should consider using java.util.UUID for this instead. @return A String with unique content.", "target": 1}
{"idx": 6221, "func": "line 1663", "target": 0}
{"idx": 6222, "func": "Repair any errors in the project", "target": 0}
{"idx": 6223, "func": "//volatile", "target": 0}
{"idx": 6224, "func": "TODO : should this be an error?", "target": 1}
{"idx": 6225, "func": "-1 because column starts with 1 put pos with 0", "target": 0}
{"idx": 6226, "func": "samplerData attributes. Must be unique. Keep sorted by string value. Ensure the Listener documentation is updated when new attributes are added //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$", "target": 0}
{"idx": 6227, "func": "printAdapters();", "target": 0}
{"idx": 6228, "func": "Connect to the http server, and do a simple http post", "target": 0}
{"idx": 6229, "func": "//MappingPackage ePackage = ((ComplexTypeConverter)object).ePackageMapping();", "target": 0}
{"idx": 6230, "func": "TODO getSeriesShape(n).getBounds().width / 2;", "target": 0}
{"idx": 6231, "func": "//Timeline hasn't method getStartTime()", "target": 0}
{"idx": 6232, "func": "setBorder(unselectedBorder);", "target": 0}
{"idx": 6233, "func": "FIXME: I think we need these pushed somewhere?", "target": 1}
{"idx": 6234, "func": "//TODO:add a configuration of the cache size", "target": 1}
{"idx": 6235, "func": "Save the contents of the resource to the file system. //", "target": 0}
{"idx": 6236, "func": "<ThreadGroup,Task>", "target": 0}
{"idx": 6237, "func": "(MAssociationEnd)", "target": 0}
{"idx": 6238, "func": "synchronize on the RubyThread for threadgroup updates", "target": 0}
{"idx": 6239, "func": "TODO: remove when code below in characters() is removed private static final String RETURNSTRING = \"\\n \";", "target": 1}
{"idx": 6240, "func": "Check query", "target": 0}
{"idx": 6241, "func": "//Remember to make this an option later //NSApplication.sharedApplication().hide(jEdit.getPlugin(\"MacOSPlugin\"));", "target": 0}
{"idx": 6242, "func": "TODO there is a problem with the constructor for the RBC. you have to provide the rules in the constructors - no setters available.", "target": 1}
{"idx": 6243, "func": "This is silly, but for backward compatibility", "target": 0}
{"idx": 6244, "func": "Constructor //", "target": 0}
{"idx": 6245, "func": "Wrappers from the old command parameter must be considered in order for cut and paste to work. //", "target": 0}
{"idx": 6246, "func": "re-paint composer-view", "target": 0}
{"idx": 6247, "func": "Check if the host is well formed.", "target": 0}
{"idx": 6248, "func": "i18n[editWhereColsSheet.limitSizeOfWhereClause=Limit the size of the WHERE clause used behind the scenes when editing cell contents.]", "target": 0}
{"idx": 6249, "func": "createArgument(true) is necessary to make sure -locale is the first argument (required in 1.3+).", "target": 0}
{"idx": 6250, "func": "line 1738", "target": 0}
{"idx": 6251, "func": "i18n[ResultTab.infoTabTitle=Info]", "target": 0}
{"idx": 6252, "func": "Identify subtests", "target": 0}
{"idx": 6253, "func": "API expects null, not empty array", "target": 0}
{"idx": 6254, "func": "type value", "target": 0}
{"idx": 6255, "func": "//TODO: should this be Session.instantiate(Persister, ...)?", "target": 1}
{"idx": 6256, "func": "finally, post args", "target": 0}
{"idx": 6257, "func": "i18n[oracle.parseCalla=Parse Calls]", "target": 0}
{"idx": 6258, "func": "this is the root (versioned) table, and we are using version-based optimistic locking; if we are not updating the version, also don't check it (unless this is a \"generated\" version column)!", "target": 0}
{"idx": 6259, "func": "//{{{ getProperty() method", "target": 0}
{"idx": 6260, "func": "Some headers are set by executeMethod()", "target": 0}
{"idx": 6261, "func": "TODO: Callers will need to be refactored to work around the change in the way multiplicities work - tfm", "target": 1}
{"idx": 6262, "func": "end of for loop over uids to print", "target": 0}
{"idx": 6263, "func": "//{{{ Message types", "target": 0}
{"idx": 6264, "func": "//}}} ///}}}", "target": 0}
{"idx": 6265, "func": "//{{{ getNextVisibleLine() method", "target": 0}
{"idx": 6266, "func": "remove base class by destroying the extension", "target": 0}
{"idx": 6267, "func": "line 1963", "target": 0}
{"idx": 6268, "func": "secondary DomainAxisLocations...", "target": 0}
{"idx": 6269, "func": "go to next base segment group", "target": 0}
{"idx": 6270, "func": "now match the columns", "target": 0}
{"idx": 6271, "func": "//{{{ getCurrentIndentForLine() method", "target": 0}
{"idx": 6272, "func": "this loop runs parallel to the build", "target": 0}
{"idx": 6273, "func": "Check for a builtin first.", "target": 0}
{"idx": 6274, "func": "----- attribute and nested element support -----", "target": 0}
{"idx": 6275, "func": "\"Element\");", "target": 0}
{"idx": 6276, "func": "get a reference to the plot for further customisation...", "target": 0}
{"idx": 6277, "func": "make sure current interrupt is finished, prevent another starting yet", "target": 0}
{"idx": 6278, "func": "replace <head> section", "target": 0}
{"idx": 6279, "func": "remove all existing modifiers", "target": 0}
{"idx": 6280, "func": "//TODO Let the AttachmentViewer get the focus so that this works", "target": 1}
{"idx": 6281, "func": "If the line angle is less than 3 degrees then snap the line straight", "target": 0}
{"idx": 6282, "func": "select it", "target": 0}
{"idx": 6283, "func": "Should not happen with StringReader", "target": 0}
{"idx": 6284, "func": "//i18n[AbstractRefactoringDialog.cancelButtonLabel=Cancel]", "target": 0}
{"idx": 6285, "func": "Find the bsh method", "target": 0}
{"idx": 6286, "func": "Assume the class isn't available.", "target": 0}
{"idx": 6287, "func": "Translate any old style sequence diagrams", "target": 0}
{"idx": 6288, "func": "canRead only returns if the file exists so cannot be fully tested.", "target": 0}
{"idx": 6289, "func": "Identifiers //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$", "target": 0}
{"idx": 6290, "func": "use default sequential layout", "target": 0}
{"idx": 6291, "func": "Not overlapped src1: o-----o src2: o----o", "target": 0}
{"idx": 6292, "func": "no proxy for", "target": 0}
{"idx": 6293, "func": "serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 6294, "func": "remove table with name table10", "target": 0}
{"idx": 6295, "func": "script file name (if present)", "target": 0}
{"idx": 6296, "func": "Folder that stores themepacks for this LAF.", "target": 0}
{"idx": 6297, "func": "default is 1 default is 0", "target": 0}
{"idx": 6298, "func": "Internal class for handling key events during editing of both JTextField and JTextArea.", "target": 0}
{"idx": 6299, "func": "The SQLSettingsInitializer added above holds a reference to the SyntaxPreferences of the current Session which itself holds a reference to the Session. We remove the SQLSettingsInitializer to give the Session the chance to get Garbage Collected.", "target": 0}
{"idx": 6300, "func": "(non-Javadoc) @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#getChildren()", "target": 0}
{"idx": 6301, "func": "Compartments from top to bottom:", "target": 0}
{"idx": 6302, "func": "Constants for supported encodings. //", "target": 0}
{"idx": 6303, "func": "connect to server new ConnectAction(this).actionPerformed(null);", "target": 0}
{"idx": 6304, "func": "Begin BeanShell Modification - serializable", "target": 0}
{"idx": 6305, "func": "Install directories", "target": 0}
{"idx": 6306, "func": "Create Multipart/Mixed if necessary", "target": 0}
{"idx": 6307, "func": "Iterate over all projects to look at the manifests. //", "target": 0}
{"idx": 6308, "func": "Set typed variable", "target": 0}
{"idx": 6309, "func": "no root local mapping has been specified.", "target": 0}
{"idx": 6310, "func": "Highlight interval and color", "target": 0}
{"idx": 6311, "func": "return eContainerFeatureID;", "target": 0}
{"idx": 6312, "func": "builder2.addFixedNarrow((JButton) leftButtonVector.get(i)); builder2.addStrut(Sizes.pixel(2));", "target": 0}
{"idx": 6313, "func": "invokeinterface", "target": 0}
{"idx": 6314, "func": "line 1001", "target": 0}
{"idx": 6315, "func": "Using onMessage Listener", "target": 0}
{"idx": 6316, "func": "wrap the exception in a TargetException to propogate it up", "target": 0}
{"idx": 6317, "func": "\"unnamed \" +", "target": 0}
{"idx": 6318, "func": "Add this node", "target": 0}
{"idx": 6319, "func": "make sure there are no exceptions", "target": 0}
{"idx": 6320, "func": "TODO should come up with a better name for the menu item", "target": 1}
{"idx": 6321, "func": "//Attempt complete directory renames, if any, first.", "target": 0}
{"idx": 6322, "func": "TODO is this correct? If this is not the first file we can't write its header now for simplicity we always save it, even if there is only one file", "target": 1}
{"idx": 6323, "func": "index for the item this could probably be more efficient, bailing out on assigning args past the end?", "target": 1}
{"idx": 6324, "func": "Have no arguments when they are allowed is only a warning. //", "target": 0}
{"idx": 6325, "func": "Note: We will ll move this behavior out to a subclass of NameSpace, but we'll start here.", "target": 1}
{"idx": 6326, "func": "line 486", "target": 0}
{"idx": 6327, "func": "I'm too tired to think of a better way to handle this right now.", "target": 1}
{"idx": 6328, "func": "//double zoom = _desktopController.getZoomer().getZoom();", "target": 0}
{"idx": 6329, "func": "build ui", "target": 0}
{"idx": 6330, "func": "@see org.xml.sax.ContentHandler#characters(char[], int, int)", "target": 0}
{"idx": 6331, "func": "replace </p> with double newline", "target": 0}
{"idx": 6332, "func": "end class ClClassName", "target": 0}
{"idx": 6333, "func": "4.5.2.24 Generalization", "target": 0}
{"idx": 6334, "func": "Check if LAF is a built-in one", "target": 0}
{"idx": 6335, "func": "create header table", "target": 0}
{"idx": 6336, "func": "getColumnAddSQL", "target": 0}
{"idx": 6337, "func": "line 1295", "target": 0}
{"idx": 6338, "func": "TODO: AddOnly has been removed in UML 2.x, so we should phase out support of it - tfm - 20070529", "target": 1}
{"idx": 6339, "func": "'/' is appended for compatibility with the zip task.", "target": 0}
{"idx": 6340, "func": "setup the \"Ant project\"", "target": 0}
{"idx": 6341, "func": "catalog schema tableName columnName dataType typeName columnSize decimalDigits radix isNullAllowed remarks defaultValue octet length ordinal position isNullable", "target": 0}
{"idx": 6342, "func": "OPTIONAL TASKS", "target": 0}
{"idx": 6343, "func": "&& node != _tree.getLastSelectedPathComponent())", "target": 0}
{"idx": 6344, "func": "CopyOnWriteArrayList is unfortunately not sort-able as a List. So this will throw an UnsupportedOperationException: Collections.sort(_iTableInfos, new TableInfoSimpleNameComparator()); The following is the best approach according to concurrency master Doug Lea, in this post: http://osdir.com/ml/java.jsr.166-concurrency/2004-06/msg00001.html Here we copy the existing internal array into a new array that is large enough to hold the original and new elements. Then sort it. And finally, create a new CopyOnWriteArrayList with the sorted array.", "target": 0}
{"idx": 6345, "func": "//Read back the label spec from perforce, //Replace Options //Submit back to Perforce", "target": 0}
{"idx": 6346, "func": "@bgen(jjtree) CastExpression", "target": 0}
{"idx": 6347, "func": "The minimum index of the tags in the combo box", "target": 0}
{"idx": 6348, "func": "Only check form tags", "target": 0}
{"idx": 6349, "func": "synchronize local UID-list with server", "target": 0}
{"idx": 6350, "func": "getColumnDropSQL", "target": 0}
{"idx": 6351, "func": "local vars", "target": 0}
{"idx": 6352, "func": "The Stream finished before the header was completely read!", "target": 0}
{"idx": 6353, "func": "Object[] args = { newValue };", "target": 0}
{"idx": 6354, "func": "Our values holder (name of variables are kept in staticScope)", "target": 0}
{"idx": 6355, "func": "Create a FormLayout instance.", "target": 0}
{"idx": 6356, "func": "//--- NULL JDBC driver just for simple test since there are no db driver available as a default in Ant :)", "target": 0}
{"idx": 6357, "func": "line 1315", "target": 0}
{"idx": 6358, "func": "Only file-scheme URIs will be re-encoded. If a URI was decoded in the workaround above, and Platform.resolve() didn't return a file-scheme URI, then this will return an decoded URI. //", "target": 1}
{"idx": 6359, "func": "fire updates", "target": 0}
{"idx": 6360, "func": "//{{{ Flag values", "target": 0}
{"idx": 6361, "func": "Stop action notifications while we shuffle this around:", "target": 0}
{"idx": 6362, "func": "Set up the tree viewer. //", "target": 0}
{"idx": 6363, "func": "Restore the paths", "target": 0}
{"idx": 6364, "func": "we don't deal with negatives.", "target": 0}
{"idx": 6365, "func": "Condition LABEL", "target": 0}
{"idx": 6366, "func": "//Set the boolean value when the user selects b/w structure and data", "target": 0}
{"idx": 6367, "func": "d.supplier.oclAsType(Package).allImportedElements->select ( e | e. elementImport.visibility = #public) ->includes (r.participant) ) )", "target": 0}
{"idx": 6368, "func": "//handle <=, >=, !=, is not, not between, not in", "target": 0}
{"idx": 6369, "func": "create message", "target": 0}
{"idx": 6370, "func": "new interrupt, to hopefully wake it out of any blocking IO", "target": 0}
{"idx": 6371, "func": "XXX: (Jon Skeet) The comment \"if it hasn't been done already\" may not be strictly true. wrapper.maybeConfigure() won't configure the same attributes/text more than once, but it may well add the children again, unless I've missed something.", "target": 1}
{"idx": 6372, "func": "change ui container", "target": 0}
{"idx": 6373, "func": "//just log this", "target": 0}
{"idx": 6374, "func": "the following fields are inherited from the AbstractXYItemRenderer", "target": 0}
{"idx": 6375, "func": "If possible we determine this by checking the destination and source Figs are the same. If this is not possible because the edge is not yet connected then we check the model.", "target": 0}
{"idx": 6376, "func": "end class CrConflictingComposites", "target": 0}
{"idx": 6377, "func": "We need to get the locks of all folders", "target": 0}
{"idx": 6378, "func": "You wish!", "target": 0}
{"idx": 6379, "func": "backwards-compatibility, but threadsafe now", "target": 0}
{"idx": 6380, "func": "legendShape", "target": 0}
{"idx": 6381, "func": "Draw outline. //", "target": 0}
{"idx": 6382, "func": "Update the menu items", "target": 0}
{"idx": 6383, "func": "adding all Colums together", "target": 0}
{"idx": 6384, "func": "majorTickStroke", "target": 0}
{"idx": 6385, "func": "still not ready, exit!", "target": 0}
{"idx": 6386, "func": "//{{{ canClose() method", "target": 0}
{"idx": 6387, "func": "The method doesn't need a scope or static scope; frame only", "target": 0}
{"idx": 6388, "func": "-- Text Fields", "target": 0}
{"idx": 6389, "func": "view starts on page - print it", "target": 0}
{"idx": 6390, "func": "Finally, do the adaptations:", "target": 0}
{"idx": 6391, "func": "i18n[Application.error.setlaf=Error setting LAF]", "target": 0}
{"idx": 6392, "func": "Have to think about lazy initialization here... JHM comparator = new java.text.RuleBasedCollator();", "target": 1}
{"idx": 6393, "func": "If they don't have the same class, they can't be equal. //", "target": 0}
{"idx": 6394, "func": "//{{{ getRuleCount() method", "target": 0}
{"idx": 6395, "func": "i18n[UpdateManagerDialog.settingsLabel=Settings]", "target": 0}
{"idx": 6396, "func": "Set focus to password control if default user name has been setup.", "target": 0}
{"idx": 6397, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo#getSimpleName()", "target": 0}
{"idx": 6398, "func": "track where tags start ...", "target": 0}
{"idx": 6399, "func": "Get the path to the soscmd(.exe)", "target": 0}
{"idx": 6400, "func": "Cannot start with a '.', '-', or end with a '-'.", "target": 0}
{"idx": 6401, "func": "Change any white text to black", "target": 0}
{"idx": 6402, "func": "Need to parse off the column qualifiers; this is assuming (which is true as of now) that this is only used from update and delete HQL statement parsing", "target": 0}
{"idx": 6403, "func": "i18n[graph.dbOrder=db order]", "target": 0}
{"idx": 6404, "func": "fix for bug #765507 we don't type complete in save dialog boxes. Press TAB to do an explicit complete", "target": 0}
{"idx": 6405, "func": "number of variables in this scope representing required arguments", "target": 0}
{"idx": 6406, "func": "TODO: Without this, we fail to draw e.g. a Class. But is this a good solution? Why is the Layer not set in the constructor?", "target": 1}
{"idx": 6407, "func": "Collection load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 6408, "func": "@see org.tigris.gef.base.SelectionButtons#getNewNode(int)", "target": 0}
{"idx": 6409, "func": "this is a situation where the entity id is assigned by a post-insert generator and was saved outside the transaction forcing it to be delayed", "target": 0}
{"idx": 6410, "func": "&foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : \"Getting unassigned: \" + staticScope.getVariables()[offset];", "target": 0}
{"idx": 6411, "func": "this is expected", "target": 0}
{"idx": 6412, "func": "---- otherAddressLabel ----", "target": 0}
{"idx": 6413, "func": "Correct the activator value", "target": 0}
{"idx": 6414, "func": "i18n[popupeditableIoPanel.export44=Export]", "target": 0}
{"idx": 6415, "func": "//LEGEND ITEM LABEL GENERATOR //////////////////////////////////////////", "target": 0}
{"idx": 6416, "func": "itemLabelFontList", "target": 0}
{"idx": 6417, "func": "TODO: This code is cloned over and over again! - tfm", "target": 1}
{"idx": 6418, "func": "if it has no language, then we assume it is not an instance of OpaqueExpression, so we leave it null and handle elsewhere", "target": 0}
{"idx": 6419, "func": "FIXME: I'm not sure this is right, but the old code returned the undef, which definitely isn't right...", "target": 1}
{"idx": 6420, "func": "//expressionOpeners.add(\",\"); deliberately excluded", "target": 0}
{"idx": 6421, "func": "Some editors do tiny transformations (e.g. \"true\" to \"True\",...): may throw IllegalArgumentException", "target": 0}
{"idx": 6422, "func": "Back-off a bit after a hundred updates to allow the UI to update", "target": 0}
{"idx": 6423, "func": "INVALID extension point", "target": 0}
{"idx": 6424, "func": "//{{{ Buffers, edit panes, split panes", "target": 0}
{"idx": 6425, "func": "(non-Javadoc) @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#getContext(org.eclipse.emf.codegen.merge.java.facade.JNode)", "target": 0}
{"idx": 6426, "func": "promise to implement one to N", "target": 0}
{"idx": 6427, "func": "REMIND: calling isDirectory() on a floppy drive displays stupid I/O error dialog box on Windows", "target": 0}
{"idx": 6428, "func": "cycle through all the segments contained in the BaseTimeline exception segment", "target": 0}
{"idx": 6429, "func": "contact", "target": 0}
{"idx": 6430, "func": "//g.fillOval((int)(zoomfp.x + 0.5) - rad, (int)(zoomfp.y+0.5) - rad, 2 rad, 2 rad);", "target": 0}
{"idx": 6431, "func": "---- otherCountryLabel ----", "target": 0}
{"idx": 6432, "func": "PUBLIC INTERFACE", "target": 0}
{"idx": 6433, "func": "groups", "target": 0}
{"idx": 6434, "func": "setContentPane(mainPanel);", "target": 0}
{"idx": 6435, "func": "//if we are at the end of the string, we tack on a $ //then move past it", "target": 0}
{"idx": 6436, "func": "store the plot and its weight", "target": 0}
{"idx": 6437, "func": "Try reading an encoding declaration.", "target": 0}
{"idx": 6438, "func": "Check for backup.directory, and create that directory if it doesn't exist", "target": 0}
{"idx": 6439, "func": "click on this button will open the recurrence dialog", "target": 0}
{"idx": 6440, "func": "prepend From line", "target": 0}
{"idx": 6441, "func": "public String getPassword() { return passwordTextField.getText(); }", "target": 0}
{"idx": 6442, "func": "Layers for bottom group", "target": 0}
{"idx": 6443, "func": "i18n[popupeditableIoPanel.fileDoesNotExist=File {0} does not exist,\\nor is not a readable, normal file.\\nPlease enter a valid file name or use Browse to select a file.]", "target": 0}
{"idx": 6444, "func": "super(new JMeterTreeNode(new WorkBenchGui().createTestElement(), null)); TestElement tp = new TestPlanGui().createTestElement(); initTree(tp);", "target": 0}
{"idx": 6445, "func": "Get the owner's meta object. //", "target": 0}
{"idx": 6446, "func": "Cache for file. Only used by sample() in a single thread", "target": 0}
{"idx": 6447, "func": "for all characters", "target": 0}
{"idx": 6448, "func": "find optimum width and map to range", "target": 0}
{"idx": 6449, "func": "see what JARClassLoader this class is in", "target": 0}
{"idx": 6450, "func": "rangeZeroBaselineVisible", "target": 0}
{"idx": 6451, "func": "VSS items", "target": 0}
{"idx": 6452, "func": "positiveItemLabelPositionList;", "target": 0}
{"idx": 6453, "func": "No includes supplied, so set it to 'matches all'", "target": 0}
{"idx": 6454, "func": "line 377", "target": 0}
{"idx": 6455, "func": "one last check that some loaded.", "target": 0}
{"idx": 6456, "func": "//client jar file", "target": 0}
{"idx": 6457, "func": "namespace that does not contain antlib", "target": 0}
{"idx": 6458, "func": "we won't enter the loop -- just build the condition node", "target": 0}
{"idx": 6459, "func": "set flags", "target": 0}
{"idx": 6460, "func": "//return classAlias == null ? className : classAlias;", "target": 0}
{"idx": 6461, "func": "i18n[dataTypeBigDecimal.scaleEceeded=Scale Exceeded: Number //of digits to right of decimal place ({0})\\nis greater than //allowed in column ({1}).]", "target": 0}
{"idx": 6462, "func": "can't fit -> hide", "target": 0}
{"idx": 6463, "func": "move all children to the type, converting enum constants to fields fields that are created by conversion from enum constants must be inserted after the last final field that is used in constructors for initializers", "target": 0}
{"idx": 6464, "func": "We require the home directory to be absolute", "target": 0}
{"idx": 6465, "func": "Select the correct diagram (implicitly creates it)", "target": 0}
{"idx": 6466, "func": "do we need to resize the buffer?", "target": 0}
{"idx": 6467, "func": "//////////////////////////////////////////////////////////////constants", "target": 0}
{"idx": 6468, "func": "savePosition(prpTodo, TabToDo.class); savePosition(prpProperties, TabProps.class); savePosition(prpDocumentation, TabDocumentation.class); savePosition(prpStyle, TabStyle.class); savePosition(prpSource, TabSrc.class); savePosition(prpConstraints, TabConstraints.class); savePosition(prpTaggedValues, TabTaggedValues.class);", "target": 0}
{"idx": 6469, "func": "new target is of type UMLClassDiagram, refresh should not be called", "target": 0}
{"idx": 6470, "func": "disk number", "target": 0}
{"idx": 6471, "func": "If that iterator is still at the top of the stack... //", "target": 0}
{"idx": 6472, "func": "renderer - no longer a separate field but test anyway...", "target": 0}
{"idx": 6473, "func": "i18n[editWhereColsPanel.notUseColumns=Not Use Columns]", "target": 0}
{"idx": 6474, "func": "didn't match up", "target": 0}
{"idx": 6475, "func": "status message changed, operation started, operation ends, ...", "target": 0}
{"idx": 6476, "func": "i18n[graph.name=Name]", "target": 0}
{"idx": 6477, "func": "Clear the list. //", "target": 0}
{"idx": 6478, "func": "line 513", "target": 0}
{"idx": 6479, "func": "//classes.add(((CacheEntry)it.next())._objClass);", "target": 0}
{"idx": 6480, "func": "// WFR Transitions, OMG UML 1.3", "target": 0}
{"idx": 6481, "func": "//this.chartPanel.isRangeZoomable()) {", "target": 0}
{"idx": 6482, "func": "calculate the adjusted data area taking into account the 3D effect...", "target": 0}
{"idx": 6483, "func": "ruby interpreter compatibilty Usage: ruby [switches] [--] [programfile] [arguments])", "target": 0}
{"idx": 6484, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsOpenCursorsAcrossRollback()", "target": 0}
{"idx": 6485, "func": "notify thread to proceed", "target": 0}
{"idx": 6486, "func": "//default false:", "target": 0}
{"idx": 6487, "func": "//{{{ removeAllActions() method", "target": 0}
{"idx": 6488, "func": "(non-Javadoc) @see org.eclipse.emf.ecore.util.BasicExtendedMetaData#isFeatureKindSpecific()", "target": 0}
{"idx": 6489, "func": "leave a blank line just to make it look a bit nicer", "target": 0}
{"idx": 6490, "func": "//{{{ clear() method", "target": 0}
{"idx": 6491, "func": "TODO work out how to search the XML pane", "target": 1}
{"idx": 6492, "func": "base_char?", "target": 0}
{"idx": 6493, "func": "otherwise look up the position table", "target": 0}
{"idx": 6494, "func": "Re-throw Errors because we're supposed to let the JVM see it Don't re-throw StackOverflows, because we know we've corrected the situation by aborting the loop and a long stacktrace would end up on the user's console", "target": 0}
{"idx": 6495, "func": "A checkbox choosing whether or not only successes should be logged.", "target": 0}
{"idx": 6496, "func": "end class TabText", "target": 0}
{"idx": 6497, "func": "//pass the entity-name, if not a collection-id", "target": 0}
{"idx": 6498, "func": "Possible Checksum Byte", "target": 0}
{"idx": 6499, "func": "Get class box, because we will set it's bounding box", "target": 0}
{"idx": 6500, "func": "scripts, classes, and modules", "target": 0}
{"idx": 6501, "func": "The default (16) puts the icons too close together:", "target": 0}
{"idx": 6502, "func": "@see org.argouml.uml.reveng.ImportSettings#getInputSourceEncoding()", "target": 0}
{"idx": 6503, "func": "Events often have this constructor", "target": 0}
{"idx": 6504, "func": "TODO: move the above to the plot state", "target": 1}
{"idx": 6505, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#updatesAreDetected(int)", "target": 0}
{"idx": 6506, "func": "//{{{ addToken() method", "target": 0}
{"idx": 6507, "func": "default encoding is plain", "target": 0}
{"idx": 6508, "func": "ResultSet impl (\"overridden\") ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 6509, "func": "//{{{ ParentMouseHandler class", "target": 0}
{"idx": 6510, "func": "i.e. is == null", "target": 0}
{"idx": 6511, "func": "Assert is flawed because canWrite does not work. assertTrue(\"File f2 Is Set To ReadOnly.\" , f2.canWrite());", "target": 0}
{"idx": 6512, "func": "tooltip text", "target": 0}
{"idx": 6513, "func": "top.setBorder( BorderFactory.createEtchedBorder() );", "target": 0}
{"idx": 6514, "func": "just scroll to the dragged location", "target": 0}
{"idx": 6515, "func": "includes JavaScriptException, rethrows Errors", "target": 0}
{"idx": 6516, "func": "i18n[UpdatePreferencesPanel.siteTypeLabel=Site Type:]", "target": 0}
{"idx": 6517, "func": "//boot classpath", "target": 0}
{"idx": 6518, "func": "//readers.addElement(Thread.currentThread());", "target": 0}
{"idx": 6519, "func": "Prevent bold events if bold does not change. TODO: GEF should manage this after GEF 0.13.4 is included.", "target": 1}
{"idx": 6520, "func": "visible (gui) ------------------------------------------------------------------------", "target": 0}
{"idx": 6521, "func": "nothing needed here??", "target": 0}
{"idx": 6522, "func": "line 1079", "target": 0}
{"idx": 6523, "func": "@see org.argouml.uml.ui.behavior.state_machines.ActionNewEvent#createEvent( java.lang.Object)", "target": 0}
{"idx": 6524, "func": "make lists", "target": 0}
{"idx": 6525, "func": "//////////////////////////////////////////////////////////////////////////////We try to cascade", "target": 0}
{"idx": 6526, "func": "//i18n[SQLScriptPreferencesTab.title=SQL Scripts]", "target": 0}
{"idx": 6527, "func": "Look for arguments elements in the target controller or higher up:", "target": 0}
{"idx": 6528, "func": "See if we already have the EDataType. //", "target": 0}
{"idx": 6529, "func": "and hook in the new ones:", "target": 0}
{"idx": 6530, "func": "We will create an EAttribute, EReference, or an EOperation. //", "target": 0}
{"idx": 6531, "func": "//{{{ getFirstInvalidLineContext() method", "target": 0}
{"idx": 6532, "func": "Null tests", "target": 0}
{"idx": 6533, "func": "construct it", "target": 0}
{"idx": 6534, "func": "//i18n[syntax.comments=Comments]", "target": 0}
{"idx": 6535, "func": "Andreas: just temporary: a warning dialog for uml2...", "target": 1}
{"idx": 6536, "func": "remove trailing null terminator", "target": 0}
{"idx": 6537, "func": "Write the headers and body", "target": 0}
{"idx": 6538, "func": "\"ALTER TABLE $tableName$ ALTER COLUMN $columnName$ SET $nullable$\";", "target": 0}
{"idx": 6539, "func": "$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ //$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$", "target": 0}
{"idx": 6540, "func": "//{{{ readStringArray() method", "target": 0}
{"idx": 6541, "func": "Get the parent vector first", "target": 0}
{"idx": 6542, "func": "The object used for each row", "target": 0}
{"idx": 6543, "func": "subtrahend needs to be fast forwarded", "target": 0}
{"idx": 6544, "func": "no emptyBehavior handling since the FileSet version will take care of it.", "target": 0}
{"idx": 6545, "func": "TODO: eliminate?", "target": 1}
{"idx": 6546, "func": "Has no child", "target": 0}
{"idx": 6547, "func": "TODO: This should be built by reflection from the metamodel - tfm Update for UML 2.x metamodel if not replaced by reflection", "target": 1}
{"idx": 6548, "func": "add combo box for command to execute", "target": 0}
{"idx": 6549, "func": "Assign the values.", "target": 0}
{"idx": 6550, "func": "cases 9, 10, 11 and 12", "target": 0}
{"idx": 6551, "func": "Gotta atleast put in the proper spelling :-P", "target": 0}
{"idx": 6552, "func": "Ignore - we are interested only in the side effect - that of getting the static initializers invoked. As we do not want to call a valid constructor to get this side effect, an attempt is made to call a hopefully invalid constructor - come on, nobody would have a constructor that takes in 256 String arguments ;-) (In fact, they can't - according to JVM spec section 4.10, the number of method parameters is limited to 255 by the definition of a method descriptor. Constructors count as methods here.)", "target": 0}
{"idx": 6553, "func": "Read resource file saving the keys", "target": 0}
{"idx": 6554, "func": "@see org.argouml.model.CommonBehaviorHelper#getSource(java.lang.Object)", "target": 0}
{"idx": 6555, "func": "//FB ?????", "target": 0}
{"idx": 6556, "func": "//{{{ getRightClickPopup() method", "target": 0}
{"idx": 6557, "func": "-------------------------------------------------------------------------- Static initializer --------------------------------------------------------------------------", "target": 0}
{"idx": 6558, "func": "i18n[sqlval.version=Version:]", "target": 0}
{"idx": 6559, "func": "Multi-param numeric dialect functions...", "target": 0}
{"idx": 6560, "func": "Find the body text part", "target": 0}
{"idx": 6561, "func": "i18n[mssql.only70compatible=Only script 7.0 compatible features]", "target": 0}
{"idx": 6562, "func": "\\p{Hiragana}", "target": 0}
{"idx": 6563, "func": "@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent) TODO: From ComboBox javadoc - \"This method is public as an implementation side effect. do not call or override.\" We should find some other way to implement this.", "target": 1}
{"idx": 6564, "func": "i18n[oracle.displayUserDetails=Display User details]", "target": 0}
{"idx": 6565, "func": "super.getTableCellRendererComponent( table, value, isSelected, hasFocus, row, column );", "target": 0}
{"idx": 6566, "func": "ensure that interrupt cannot overlap with shutdown", "target": 0}
{"idx": 6567, "func": "//}}} //{{{ Handle start of rule", "target": 0}
{"idx": 6568, "func": "do nothing, this will trim leading whitespace for both text qualified columns and non", "target": 0}
{"idx": 6569, "func": "//{{{ getRegisters() method", "target": 0}
{"idx": 6570, "func": "create an array holding the group indices for each series...", "target": 0}
{"idx": 6571, "func": "Because we get the metatype class stripped of its reflective proxies, we need to jump through a hoop or two to find it in the metamodel, then work from there to get its proxy.", "target": 0}
{"idx": 6572, "func": "in the past, 0 milliseconds after January 1, 1970, 00:00:00 GMT.", "target": 0}
{"idx": 6573, "func": "Buffer to hold the put body, except file content", "target": 0}
{"idx": 6574, "func": "//failed to clone", "target": 0}
{"idx": 6575, "func": "if reloading a file, clear dirty flag", "target": 0}
{"idx": 6576, "func": "an email adress was found - check whether its already a link", "target": 0}
{"idx": 6577, "func": "Create new menu item if it doesn't exist for this class.", "target": 0}
{"idx": 6578, "func": "boolean toReturn = true;", "target": 0}
{"idx": 6579, "func": "// public ColumnsComboBox(SQLConnection conn, ITableInfo ti) // throws SQLException // { // super(conn.getSQLMetaData().getColumnInfo(ti)); // setRenderer(new CellRenderer()); // } // // This renderer uses the unqualified column name as the text to display // in the combo. // // private static final class CellRenderer extends BasicComboBoxRenderer // { // CellRenderer() // { // super(); // setOpaque(true); // } // public Component getListCellRendererComponent(JList list, Object value, // int index, boolean isSelected, boolean cellHasFocus) // { // setText(((TableColumnInfo)value).getColumnName()); // return this; // } // }", "target": 0}
{"idx": 6580, "func": "The clone method that should clone the JGraph with it's contents and the toolbar with it's contents. Since both JGraph as the toolbar are coming from the GEF framework, cloning them will be hard work and should actually not be placed here but in a clone method of the JGraph and the Toolbar. @see java.lang.Object#clone()", "target": 0}
{"idx": 6581, "func": "//String invalidRecipient = null;", "target": 0}
{"idx": 6582, "func": "VERBOSE MODE ONLY", "target": 0}
{"idx": 6583, "func": "try a multi-part netware-volume length path w/forward slash, see how it is handled", "target": 0}
{"idx": 6584, "func": "TODO set different status if not enough messages found?", "target": 1}
{"idx": 6585, "func": "reset the startIdx to just after the current match, to see if there are any further matches", "target": 0}
{"idx": 6586, "func": "check that a null dataset returns null bounds", "target": 0}
{"idx": 6587, "func": "Empty implementation - we only care about keyTyped", "target": 0}
{"idx": 6588, "func": "//If it was not a warning or an diagnostic then return the diagnostic image", "target": 0}
{"idx": 6589, "func": "Implement the content hander methods that will delegate SAX events to the tag tracker network.", "target": 0}
{"idx": 6590, "func": "//start point is lower left right corner --> diagonal gradient", "target": 0}
{"idx": 6591, "func": "only supports simple parallel assignment of up to 10 values to the same number of assignees", "target": 0}
{"idx": 6592, "func": "end class CurDecisionCM", "target": 0}
{"idx": 6593, "func": "nothing to add for generic tool.", "target": 0}
{"idx": 6594, "func": "// System.err.println(\"Attempt to use dialect sql from \" + referenceDialect.getDisplayName() // + \" failed: \" + e2.getMessage());", "target": 0}
{"idx": 6595, "func": "default instances", "target": 0}
{"idx": 6596, "func": "DYNAMIC INSERT", "target": 0}
{"idx": 6597, "func": "Check if the user wants to create from template", "target": 0}
{"idx": 6598, "func": "line 1035", "target": 0}
{"idx": 6599, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getCascadeClause()", "target": 0}
{"idx": 6600, "func": "return the whole contents of this column in the DB", "target": 0}
{"idx": 6601, "func": "next as regular file", "target": 0}
{"idx": 6602, "func": "//testBooleanColType(sourceName, destName); //testCharColType(sourceName, destName);", "target": 0}
{"idx": 6603, "func": "we saw some non-ascii character", "target": 0}
{"idx": 6604, "func": "This string is used to identify local test runs, so must not be a valid host name $NON-NLS-1$", "target": 0}
{"idx": 6605, "func": "If reciever is self then we do the call the same way as vcall", "target": 0}
{"idx": 6606, "func": "There is a possibility that the next step forward takes another path in this wizard. To allow for this we must destroy the path already traveled by. <p> TODO: I (Linus) would say that this is really a problem with the Wizard implementation since I believe it should be possible to explore a path in the wizard and then go back. {@inheritDoc}", "target": 1}
{"idx": 6607, "func": "Open connection to the webservice.", "target": 0}
{"idx": 6608, "func": "define false < true", "target": 0}
{"idx": 6609, "func": "zeroed by jvm", "target": 0}
{"idx": 6610, "func": "caching parser does not parse 2nd file in the same way (javadoc of package for example) hence, new parser is created every time this method is called", "target": 0}
{"idx": 6611, "func": "awt-event-thread", "target": 0}
{"idx": 6612, "func": "handle axis trace", "target": 0}
{"idx": 6613, "func": "NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner with outer loops encountered before inner loops, and inner loops finished before outer ones. So, we can keep track of loops in a loop stack which keeps track of loops as they are encountered. This lets us implement next/redo/break/retry easily for the non-closure cases", "target": 0}
{"idx": 6614, "func": "if root of method is rescue, compile as light rescue", "target": 0}
{"idx": 6615, "func": "1024=bytes per kb", "target": 0}
{"idx": 6616, "func": "aggregation", "target": 0}
{"idx": 6617, "func": "//add some time. We assume no OS has a granularity this bad", "target": 0}
{"idx": 6618, "func": "no more values to stick in rest arg", "target": 0}
{"idx": 6619, "func": "Skip any assignments if /usr/bin/env is in play", "target": 0}
{"idx": 6620, "func": "TODO: it's not clear to me why, in FloatingDecimal, the \"slop\" calculation performed above for positive exponents isn't used for negative exponents as well. Will find out...", "target": 0}
{"idx": 6621, "func": "create dir if necessary", "target": 0}
{"idx": 6622, "func": "note, it's important to scan the items BEFORE we make the Unmatched file map because that creates a bunch of NEW folders and files (unattached to repository) and we don't want to include those in our traversal.", "target": 0}
{"idx": 6623, "func": "Sets constraints like NOT NULL for the new column, depending on the constraints for the old column.", "target": 0}
{"idx": 6624, "func": "to override", "target": 0}
{"idx": 6625, "func": "component that will parent any dialog boxes", "target": 0}
{"idx": 6626, "func": "Not that is loaded loop around to resolve it next pass", "target": 0}
{"idx": 6627, "func": "TODO: This will need to be adapted to send undo/redo commands back to our consumer (e.g. ArgoUML) if a new undo mechanism is implemented for the Model subsystem - tfm", "target": 1}
{"idx": 6628, "func": "setting color", "target": 0}
{"idx": 6629, "func": "Sync subscribed folders if this is the first login in this session", "target": 0}
{"idx": 6630, "func": "Prevent both redirect types from being selected", "target": 0}
{"idx": 6631, "func": "Remove leading space after the separator character so that it is not removed from the text component's document, below.", "target": 0}
{"idx": 6632, "func": "Only for use by test code", "target": 0}
{"idx": 6633, "func": "ok - just skip", "target": 0}
{"idx": 6634, "func": "compose text part", "target": 0}
{"idx": 6635, "func": "i18n[HibernateSQLPanel.code=SQL code]", "target": 0}
{"idx": 6636, "func": "(non-Javadoc) @see org.columba.api.gui.frame.IDock#registerDockable(java.lang.String, java.lang.String, javax.swing.JComponent, javax.swing.JPopupMenu)", "target": 0}
{"idx": 6637, "func": "(non-Javadoc) @see org.apache.jmeter.protocol.http.sampler.HTTPSamplerBase#testEnded(java.lang.String)", "target": 0}
{"idx": 6638, "func": "//{{{ getCachedDockableActionFlags() method", "target": 0}
{"idx": 6639, "func": "Class to display a Stereotype declaration figure using Classifier box notation.<p> TODO: This is just a place-holder right now! - tfm This needs to show tags and constraints.", "target": 0}
{"idx": 6640, "func": "We pass our drag image just in case it IS supported by the platform.", "target": 0}
{"idx": 6641, "func": "//{{{ edit() method", "target": 0}
{"idx": 6642, "func": "Override setBounds to keep shapes looking right. @see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int)", "target": 0}
{"idx": 6643, "func": "must be done prior to sorting", "target": 0}
{"idx": 6644, "func": "Delegate to the QueryLoader...", "target": 0}
{"idx": 6645, "func": "Make sure the file ends in \".ecore\". //", "target": 0}
{"idx": 6646, "func": "Fake a selection changed event to update the menus. //", "target": 0}
{"idx": 6647, "func": "TODO: what shall we do with the exception?", "target": 1}
{"idx": 6648, "func": "Set up the property panels for activity diagrams:", "target": 0}
{"idx": 6649, "func": "private JTextField loginTextField;", "target": 0}
{"idx": 6650, "func": "@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAFeatureCall(tudresden.ocl.parser.node.AFeatureCall)", "target": 0}
{"idx": 6651, "func": "why is all others non final ?", "target": 0}
{"idx": 6652, "func": "allowDuplicateValues", "target": 0}
{"idx": 6653, "func": "Whatever happened we are no longer newly created, so clear the flag. Then set the bounds for the rectangle we have defined.", "target": 0}
{"idx": 6654, "func": "i18n[HibernateConfigPanel.newFactoryClasspathBorder=Additional classpath entries to create a SessionFactoryImpl]", "target": 0}
{"idx": 6655, "func": "meant to handle dynamic instantiation queries...", "target": 0}
{"idx": 6656, "func": "Sort recent file list", "target": 0}
{"idx": 6657, "func": "SSS FIXME: Traverse up the scope hierarchy to find the constant as long as the parent is a static scope", "target": 1}
{"idx": 6658, "func": "specifies valid elements for a Package to contain", "target": 0}
{"idx": 6659, "func": "If the proxy holder can hold many values, it may contain a duplicate that resulted when the other end was processed as an IDREF and hence did both sides of the bidirectional relation. //", "target": 0}
{"idx": 6660, "func": "//i18n[ProcedureColumnsTab.hint=Show columns for the selected procedure]", "target": 0}
{"idx": 6661, "func": "If the set states are the same, and the values of the feature are the structurally equal, they are equal. //", "target": 0}
{"idx": 6662, "func": "////////////////////////////////////////////////////////////////////Major syntactic productions. //////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 6663, "func": "i18n[SQLResultExecuterPanel.rowsUpdated={0} Row(s) Updated]", "target": 0}
{"idx": 6664, "func": "//i18n[CreateTableScriptCommand.jdbcOdbcMessage=JDBC-ODBC Bridge doesn't //provide all of the necessary metadata. The script may be incomplete.]", "target": 0}
{"idx": 6665, "func": "i18n[oracle.sessionStatistics=Session Statistics]", "target": 0}
{"idx": 6666, "func": "warn about inherited name conflicts, different critic?", "target": 0}
{"idx": 6667, "func": "holds the moving average sum", "target": 0}
{"idx": 6668, "func": "This runs the options, and shows progress. (It appears to be a bad thing to fork this onto another thread.) //", "target": 1}
{"idx": 6669, "func": "Runtime is zero - no point staying around", "target": 0}
{"idx": 6670, "func": "//{{{ setColorProperty() method", "target": 0}
{"idx": 6671, "func": "//extractor.setDefaultValue(\"default\");", "target": 0}
{"idx": 6672, "func": "//Make sure file exists", "target": 0}
{"idx": 6673, "func": "for RANGE or NRANGE", "target": 0}
{"idx": 6674, "func": "//ie. the subquery! yuck!", "target": 1}
{"idx": 6675, "func": "Run tidy.", "target": 0}
{"idx": 6676, "func": "(non-Javadoc) @see org.columba.mail.folder.headercache.HeaderList#containsValue(java.lang.Object)", "target": 0}
{"idx": 6677, "func": "figClone.seperator = (FigLine) it.next();", "target": 0}
{"idx": 6678, "func": "newline", "target": 0}
{"idx": 6679, "func": "determine if metaType is a valid element for container", "target": 0}
{"idx": 6680, "func": "delete any cached information", "target": 0}
{"idx": 6681, "func": "Doing this just makes focus go to the default control, not the control that last has focus. super.setFocus();", "target": 0}
{"idx": 6682, "func": "//include the discriminator and class-level where, but not filters", "target": 0}
{"idx": 6683, "func": "Current version of the validator webservice cannot handle anything greater than 30.", "target": 0}
{"idx": 6684, "func": "$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ Add variables for access to context and variables", "target": 0}
{"idx": 6685, "func": "end computeRoute", "target": 0}
{"idx": 6686, "func": "avoid scrolling to the right", "target": 0}
{"idx": 6687, "func": "create map of public static final field initializers to fields", "target": 0}
{"idx": 6688, "func": "TODO: What about these Viewport.font, ColorChooser.font, InternalFrame.font, OptionPane.font, \"Panel.font\", ScrollPane.font, DesktopIcon.font", "target": 1}
{"idx": 6689, "func": "showValueLines", "target": 0}
{"idx": 6690, "func": "//{{{ DownloadMirrorsThread class", "target": 0}
{"idx": 6691, "func": "i18n[laf.statusFontEanbled=Enabled]", "target": 0}
{"idx": 6692, "func": "Allow HttpClient to handle the redirects:", "target": 0}
{"idx": 6693, "func": "@see javax.swing.DefaultListModel#addElement(java.lang.Object)", "target": 0}
{"idx": 6694, "func": "byte", "target": 0}
{"idx": 6695, "func": "@see javax.swing.plaf.metal.MetalTheme#getWindowTitleFont()", "target": 0}
{"idx": 6696, "func": "Forward the interned value. //", "target": 0}
{"idx": 6697, "func": "check the target is a file", "target": 0}
{"idx": 6698, "func": "{AssociationRole.class, ClassifierRole.class, },", "target": 0}
{"idx": 6699, "func": "TODO: Not really the same thing, but close", "target": 0}
{"idx": 6700, "func": "return straight away if the item is not visible", "target": 0}
{"idx": 6701, "func": "as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner", "target": 0}
{"idx": 6702, "func": "FIXME This function needs documentation Constructor @param Name String @param Data String", "target": 1}
{"idx": 6703, "func": "Save Application level SQL history.", "target": 0}
{"idx": 6704, "func": "Repeat until no faults are fixed", "target": 0}
{"idx": 6705, "func": "mark all messages as expunged", "target": 0}
{"idx": 6706, "func": "invokeMethod() here is generally used by outside code to callback into the bsh interpreter. e.g. when we are acting as an interface for a scripted listener, etc. In this case there is no real call stack so we make a default one starting with the special JAVACODE namespace and our namespace as the next.", "target": 0}
{"idx": 6707, "func": "//Nil out the timer so that it can be gc'd", "target": 0}
{"idx": 6708, "func": "Note that for consistency with the AWT implementation, it is necessary to switch temporarily the foreground and background colours", "target": 0}
{"idx": 6709, "func": "A next", "target": 0}
{"idx": 6710, "func": "allocate storage for datasets, axes and renderers (all optional)", "target": 0}
{"idx": 6711, "func": "the width needs to be > the height", "target": 0}
{"idx": 6712, "func": "//{{{ getCurrentLineForeground() method", "target": 0}
{"idx": 6713, "func": "we re-set self to the class, but store the old self in a temporary local variable this is to prevent it GCing in case the singleton is short-lived", "target": 0}
{"idx": 6714, "func": "////////////////CLASS VARIABLE API METHODS ////////////////", "target": 0}
{"idx": 6715, "func": "Must match _version property value in saveservice.properties used to ensure saveservice.properties and SaveService are updated simultaneously Expected version $NON-NLS-1$", "target": 0}
{"idx": 6716, "func": "//underscores at the front get an underscore too", "target": 0}
{"idx": 6717, "func": "compare to cached state (ignoring collections unless versioned)", "target": 0}
{"idx": 6718, "func": "Give the resolver.getIdToObjectMap() entries priority over entries with the same UUID from resolver.getIdToObjectMaps() because entries in resolver.getIdToObjectMaps() are historic.", "target": 0}
{"idx": 6719, "func": "make the background of the buffer clear and transparent", "target": 0}
{"idx": 6720, "func": "check that clone is independent of the original", "target": 0}
{"idx": 6721, "func": "line 1292", "target": 0}
{"idx": 6722, "func": "mark found pattern", "target": 0}
{"idx": 6723, "func": "<!-- begin-user-doc --> The <b>Switch</b> for the model's inheritance hierarchy. It supports the call {@link #doSwitch(EObject) doSwitch(object)} to invoke the <code>caseXXX</code> method for each class of the model, starting with the actual class of the object and proceeding up the inheritance hierarchy until a non-null result is returned, which is the result of the switch. <!-- end-user-doc --> @see org.eclipse.emf.ecore.change.ChangePackage @generated", "target": 0}
{"idx": 6724, "func": "must not reallocate", "target": 0}
{"idx": 6725, "func": "Subsystem has been removed from UML 2.x", "target": 0}
{"idx": 6726, "func": "mockSession", "target": 0}
{"idx": 6727, "func": "bsh", "target": 0}
{"idx": 6728, "func": "//new Config(file);", "target": 0}
{"idx": 6729, "func": "\"Extras\" found useful when analyzing/verifying class behavior: public Number getUntranslatedXValue(int series, int item) { return super.getXValue(series, item); } public float getUntranslatedY(int series, int item) { return super.getY(series, item); }", "target": 0}
{"idx": 6730, "func": "try case where right item is shorter than center item", "target": 0}
{"idx": 6731, "func": "i18n[DialectUtils.columnCommentUnsupported={0} doesn''t support column comments]", "target": 0}
{"idx": 6732, "func": "null watchdog means no timeout, you'd better not check with null", "target": 0}
{"idx": 6733, "func": "do not validate on load. Check validity using Diagnostician.", "target": 0}
{"idx": 6734, "func": "//new File(\"src/etc/testcases/types/resources/selectors/cache.properties\").delete();", "target": 0}
{"idx": 6735, "func": "//i18n[MappingRoot.url=JDBC Url (Hibernate)]", "target": 0}
{"idx": 6736, "func": "TODO: This is a temporary method of making sure the model is updated on loss of focus of a combo box. In the long term we should attempt to update the model on each keypress. @see java.awt.event.FocusListener#focusLost(java.awt.event.FocusEvent)", "target": 1}
{"idx": 6737, "func": "i18n[UpdateManagerDialog.title=Update Manager]", "target": 0}
{"idx": 6738, "func": "add group items", "target": 0}
{"idx": 6739, "func": "//{{{ getBottomDockingArea() method", "target": 0}
{"idx": 6740, "func": "Update the listeners to match the desired set using the minimal update facility", "target": 0}
{"idx": 6741, "func": "we need full traces, use default (slow) populator", "target": 0}
{"idx": 6742, "func": "i18n[laf.menuFontEanbled=Enabled]", "target": 0}
{"idx": 6743, "func": "reads to end of line OR end of file", "target": 0}
{"idx": 6744, "func": "Place the result into the specified property, unless setonempty == false", "target": 0}
{"idx": 6745, "func": "axisIndices can be: 1. null; 2. non-empty, containing only Integer objects that are unique.", "target": 0}
{"idx": 6746, "func": "Only set the name if the base was found:", "target": 0}
{"idx": 6747, "func": "update path to reflect latest point", "target": 0}
{"idx": 6748, "func": "make sure to close all handles, otherwise the garbage collector will close them...whenever possible and Windows may complain about not being able to delete files.", "target": 0}
{"idx": 6749, "func": "Get the preferred size of the component.", "target": 0}
{"idx": 6750, "func": "@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)", "target": 0}
{"idx": 6751, "func": "//TODO: Should this be renamed to cLoc or something more appropriate than clock?", "target": 1}
{"idx": 6752, "func": "Check the length every iteration, since the block can modify this string.", "target": 0}
{"idx": 6753, "func": "Find the page encoding and possibly encodings for forms in the page in the response from the web server", "target": 0}
{"idx": 6754, "func": "TODO @author hubms: copied from frederiks search builder", "target": 1}
{"idx": 6755, "func": "Fill 3 of value (byte) -19 Fill 4 of value (byte) 33 Fill 10 of value (byte) -87 Fill 18 of value (byte) 33 Fill 2 of value (byte) -87", "target": 0}
{"idx": 6756, "func": "This should only be called by this and RubyFile. It allows this object to be created without a IOHandler.", "target": 0}
{"idx": 6757, "func": "We have sampled one of our children", "target": 0}
{"idx": 6758, "func": "//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the \"inclusive\" flag is not set.", "target": 0}
{"idx": 6759, "func": "just make a copy of the base if spec is empty", "target": 0}
{"idx": 6760, "func": "//{{{ saveBackup() method", "target": 0}
{"idx": 6761, "func": "//TODO: BUG! this currently fails for named queries for non-POJO entities", "target": 1}
{"idx": 6762, "func": "Only for restoring from XML etc.", "target": 0}
{"idx": 6763, "func": "send some EditBus messages", "target": 0}
{"idx": 6764, "func": "Whether this VM is 1.4+ (but also check executable != null).", "target": 0}
{"idx": 6765, "func": "Clean up index entries", "target": 0}
{"idx": 6766, "func": "TODO: Do we need to set the input encoding here? It was done for ToDo parsing, but none of the other member types InputSource inputSource = new InputSource( new InputStreamReader(inputStream, Argo .getEncoding()));", "target": 1}
{"idx": 6767, "func": "//{{{ MarkersMenuItem class", "target": 0}
{"idx": 6768, "func": "this is guaranteed by FileUtils#createTempFile", "target": 0}
{"idx": 6769, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.dialects.HibernateDialect#getPrecisionDigits(int, int)", "target": 0}
{"idx": 6770, "func": "WARNING: The GEF implementation of the OutputStream version of this method doesn't work - tfm - 20070531", "target": 1}
{"idx": 6771, "func": "Word boundary means input[index-1] was a word character and input[index] is not, or input[index] is a word character and input[index-1] was not In the string \"one two three\", these positions match: |o|n|e| |t|w|o| |t|h|r|e|e| ^ ^ ^ ^ ^ ^ is current character a letter or digit? is previous character a letter or digit?", "target": 0}
{"idx": 6772, "func": "//{{{ Canned dialog boxes", "target": 0}
{"idx": 6773, "func": "variables are unlikely to contain spaces, so most likely a translation", "target": 0}
{"idx": 6774, "func": "aload_1 load the bean", "target": 0}
{"idx": 6775, "func": "ignore \";\" and get the next token", "target": 0}
{"idx": 6776, "func": "EDate is far too often overridden to provide a different mapping, and therefor the default is somewhat obscure. So, it's best to delegate to the factory. //", "target": 0}
{"idx": 6777, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#tableCopyStarted(net.sourceforge.squirrel_sql.plugins.dbcopy.event.TableEvent)", "target": 0}
{"idx": 6778, "func": "TODO: These can not simply be translated...", "target": 1}
{"idx": 6779, "func": "class EncodingMap", "target": 0}
{"idx": 6780, "func": "use global settings", "target": 0}
{"idx": 6781, "func": "use user's config folder in his/her home-folder all plugins reside in \"<config-folder>/plugins\"", "target": 0}
{"idx": 6782, "func": "ensure that setParameters() is called.", "target": 0}
{"idx": 6783, "func": "alter table <table> add constraint <constraint>", "target": 0}
{"idx": 6784, "func": "line 1023", "target": 0}
{"idx": 6785, "func": "get message header", "target": 0}
{"idx": 6786, "func": "//TestCase/implementedGenOperation.todo.override.javajetinc", "target": 0}
{"idx": 6787, "func": "TODO: As currently coded, this actually returns all BehavioralFeatures which are owned by Classifiers contained in the given namespace, which is slightly different then what's documented. It will not include any BehavioralFeatures which are part of the Namespace, but which don't have an owner.", "target": 1}
{"idx": 6788, "func": "drive letters are not used, just to be considered as normal part of a name", "target": 0}
{"idx": 6789, "func": "Let the GUI show that it will not be encoded", "target": 0}
{"idx": 6790, "func": "TODO: this could be a huge collection - find a more efficient way", "target": 1}
{"idx": 6791, "func": "GET OSX_FILE FOR EXPORT & EXTERNAL PROCESSING", "target": 0}
{"idx": 6792, "func": "Merge with an existing file. //", "target": 0}
{"idx": 6793, "func": "did all the tasks finish?", "target": 0}
{"idx": 6794, "func": "Used by HttpMirrorServer", "target": 0}
{"idx": 6795, "func": "//setModel(listModel);", "target": 0}
{"idx": 6796, "func": "MRI behavior:", "target": 0}
{"idx": 6797, "func": "$NON-NLS-1$ Must be same as Header.HNAME - but that is built later", "target": 0}
{"idx": 6798, "func": "Fill 4 of value (byte) -87 Fill 9 of value (byte) 33", "target": 0}
{"idx": 6799, "func": "dubious? //setFirstLine(0);", "target": 0}
{"idx": 6800, "func": "}", "target": 0}
{"idx": 6801, "func": "TODO: After removing a region reset the overall size of the node.", "target": 1}
{"idx": 6802, "func": "See if the application wants to redirect the system ID and/or supply its own character stream.", "target": 0}
{"idx": 6803, "func": "(non-Javadoc) @see org.columba.core.filter.IFilterActionList#get(int)", "target": 0}
{"idx": 6804, "func": "Should not clear this?", "target": 0}
{"idx": 6805, "func": "in collapsed range", "target": 0}
{"idx": 6806, "func": "no existing row - do an insert", "target": 0}
{"idx": 6807, "func": "test some included and excluded segments", "target": 0}
{"idx": 6808, "func": "number of chars used to represent byte the base radix", "target": 0}
{"idx": 6809, "func": "log.info(\"SQL starting to execute: \" + sql);", "target": 0}
{"idx": 6810, "func": "index of variable that represents a \"rest\" arg", "target": 0}
{"idx": 6811, "func": "save a file -> sends vfs update. if a VFS file dialog box is shown from the same event frame as the save, the VFSUpdate will be delivered before the directory is loaded, and before the path is set.", "target": 0}
{"idx": 6812, "func": "windowOpen state will be changed when window is activated", "target": 0}
{"idx": 6813, "func": "this ensures that undo can clear the dirty flag properly when all edits up to a save are undone", "target": 0}
{"idx": 6814, "func": "Delete existing copy", "target": 0}
{"idx": 6815, "func": "tickLength", "target": 0}
{"idx": 6816, "func": "//////////////////////////////////////////////////////////////////////////constructors and factory methods ////////////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 6817, "func": "TODO: Any special handling for null names? append will use \"null\"", "target": 1}
{"idx": 6818, "func": "there was an error in the conversion", "target": 0}
{"idx": 6819, "func": "//{{{ initChunk() method", "target": 0}
{"idx": 6820, "func": "This interface contains methods to retrieve objects that represent the different UML types. These objects are use as tokens used to create model elements in some methods. TODO: There are parts of ArgoUML which assume that the objects returned here are Classes. We should formalize that by changing the return types to match. tfm - 20070620 Bob says - there should be no such assumption in ArgoUML. Can we document where these are? @see org.argouml.model.UmlFactory#buildConnection( Object, Object, Object, Object, Object, Object, Object) @see org.argouml.model.UmlFactory#buildNode(Object)", "target": 1}
{"idx": 6821, "func": "Build namespace hierarchy like this: g a /\\ b c /\\ d e f", "target": 0}
{"idx": 6822, "func": "i.e. no filter", "target": 0}
{"idx": 6823, "func": "TreeController treeController = (TreeController) ((TreeViewOwner) frameController) .getTreeController(); TreeView treeView = treeController.getView();", "target": 0}
{"idx": 6824, "func": "Need to calculate this... just fudging here for now.", "target": 1}
{"idx": 6825, "func": "always keep fragment, even if null, and use scheme from base; no validation needed since all components are from existing URIs", "target": 0}
{"idx": 6826, "func": "We applied one, so we're done", "target": 0}
{"idx": 6827, "func": "Names of JUnit3 methods //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$", "target": 0}
{"idx": 6828, "func": "not strictly necessary, since the renderer set for the parent plot is not used", "target": 1}
{"idx": 6829, "func": "long, slow way causes disabling", "target": 0}
{"idx": 6830, "func": "//private Stroke arrowStroke;", "target": 0}
{"idx": 6831, "func": "The following test can cause trouble with links, because links are accepted as directories, even if they link files. Links could also result in infinite loops. For this reason we don't do this traversing recursively.", "target": 0}
{"idx": 6832, "func": "if we haven't encountered a real superclass, use the found module as the new inclusion point", "target": 0}
{"idx": 6833, "func": "i18n[SQLHistoryDlg.close=Close]", "target": 0}
{"idx": 6834, "func": "Class names in the FROM clause result in a JoinSequence (the old FromParser does this).", "target": 0}
{"idx": 6835, "func": "No binding scope so we should create one", "target": 0}
{"idx": 6836, "func": "//{{{ getPosition() method", "target": 0}
{"idx": 6837, "func": "@see org.argouml.uml.util.namespace.Namespace#isEmpty()", "target": 0}
{"idx": 6838, "func": "Note: is using SignatureKey in this way dangerous? In the pathological case a user could eat up memory caching every possible combination of argument types to an untyped method. Maybe we could be smarter about it by ignoring the types of untyped parameter positions? The method resolver could return a set of \"hints\" for the signature key caching? There is also the overhead of creating one of these for every method dispatched. What is the alternative?", "target": 1}
{"idx": 6839, "func": "//we can inner join to superclass tables (the row MUST be there) //we can never inner join to subclass tables", "target": 0}
{"idx": 6840, "func": "find out if the interpreter is already registered", "target": 0}
{"idx": 6841, "func": "Catch all exceptions and errors, however severe", "target": 0}
{"idx": 6842, "func": "If this is not overridden it will revert to the old behavior All internal subclasses have been updated, but this if for compatibility of non-ArgoUML extensions.", "target": 0}
{"idx": 6843, "func": "//the following two lines were added to ensure that this.params is not null, which //can happen with two-deep nested subqueries", "target": 0}
{"idx": 6844, "func": "end class CrTooManyStates", "target": 0}
{"idx": 6845, "func": "initialize the jEdit branch of the options tree", "target": 0}
{"idx": 6846, "func": "Ensure that the sample variables are correctly initialised for each run. TODO is this the best way to do this? should it be done elsewhere ?", "target": 1}
{"idx": 6847, "func": "WebSphere, however, is not a sane JEE/JTA container...", "target": 0}
{"idx": 6848, "func": "Might be found by contoller.next()", "target": 0}
{"idx": 6849, "func": "FigNodeModelElements should match here", "target": 0}
{"idx": 6850, "func": "//XMLNamespaceFactory", "target": 0}
{"idx": 6851, "func": "Now the selectors", "target": 0}
{"idx": 6852, "func": "If the request entity is repeatable, we can send it first to our own stream, so we can return it", "target": 0}
{"idx": 6853, "func": "dragSource.startDrag( event, new Cursor(Cursor.DEFAULT_CURSOR), ImageLoader.getImageIcon(\"contact_small\",\"Add16\").getImage(), new Point(5, 5), new StringSelection(\"contact\"), this);", "target": 0}
{"idx": 6854, "func": "merge columns in a new column", "target": 0}
{"idx": 6855, "func": "CommonBehaviorFactory DataTypesFactory ExtensionMechanismsFactory ModelManagementFactory", "target": 0}
{"idx": 6856, "func": "save pointer to object needed to render value for use in the inner class delegate", "target": 0}
{"idx": 6857, "func": "Otherwise, we could check that the adapter implements interface IItemLabelProvider. //", "target": 0}
{"idx": 6858, "func": "whether or not this ProcessDestroyer has been registered as a shutdown hook", "target": 0}
{"idx": 6859, "func": "make Columba logger parent of macchiato logger", "target": 0}
{"idx": 6860, "func": "//yyDgoto 136", "target": 0}
{"idx": 6861, "func": "alarm(bell)", "target": 0}
{"idx": 6862, "func": "class methods for IO", "target": 0}
{"idx": 6863, "func": "info", "target": 0}
{"idx": 6864, "func": "desc_t1", "target": 0}
{"idx": 6865, "func": "@see javax.swing.event.ChangeListener#stateChanged(javax.swing.event.ChangeEvent)", "target": 0}
{"idx": 6866, "func": "Add the association ends to the graph model", "target": 0}
{"idx": 6867, "func": "//System.err.println(\"DEBUG: matchEnd=\"+matchEnd);", "target": 0}
{"idx": 6868, "func": "//Remove any non-numerical chars - should leave the change number", "target": 0}
{"idx": 6869, "func": "Upgrade is in the way for UML2 projects, so we turn it off in that case:", "target": 0}
{"idx": 6870, "func": "Implements the source path controller. NOTE: If requested in the future this could be returned from the language modules. TODO: Update this to use the UML 1.4 TagDefinition mechanism instead of UML 1.3 String type tag types. The TagDefinition can be made more specific so that it just applies to Components with a <<sourceModule>> stereotype or something similar. - tfm @author euluis @since 0.17.1", "target": 0}
{"idx": 6871, "func": "---- pictureButton ----", "target": 0}
{"idx": 6872, "func": "delete all directories", "target": 0}
{"idx": 6873, "func": "TODO: why do we need to remove then add the Fig?", "target": 1}
{"idx": 6874, "func": "a deployment diagram shows something about the whole model according to the uml spec", "target": 0}
{"idx": 6875, "func": "CheckStyle:MemberNameCheck OFF - bc", "target": 0}
{"idx": 6876, "func": "check that changing a category label tooltip in a1 doesn't change a2", "target": 0}
{"idx": 6877, "func": "Use round robin allocation of user details", "target": 0}
{"idx": 6878, "func": "Token category-ids", "target": 0}
{"idx": 6879, "func": "this class has no proxies (so do a shortcut)", "target": 1}
{"idx": 6880, "func": "Remove the group count", "target": 0}
{"idx": 6881, "func": "//JAR is required", "target": 0}
{"idx": 6882, "func": "then optional args", "target": 0}
{"idx": 6883, "func": "all local and columns for the other tables..", "target": 0}
{"idx": 6884, "func": "The following variables may be set/read from multiple threads.", "target": 0}
{"idx": 6885, "func": "Low-level (recursive) routine to define the method - if not already defined. Synchronized to protect access to methodToInvoke.", "target": 0}
{"idx": 6886, "func": "//explicit = true; This is an explict Select. //ArrayList sqlResultTypeList = new ArrayList();", "target": 0}
{"idx": 6887, "func": "Return a list of gravity points around circle which is enclosed in the bounding box. Convenience method for use by FigInitialState and FigFinalState. TODO: As this method is not required by all sub classes, it would seem sensible to extend FigStateVertex with FigCircleVertex and only have the relevant concrete Figs extend that and gain this functionality. @return a List of Points", "target": 1}
{"idx": 6888, "func": "use up the command", "target": 0}
{"idx": 6889, "func": "deprecated config-file support", "target": 0}
{"idx": 6890, "func": "Fig related todo items:", "target": 0}
{"idx": 6891, "func": "determine type of body part", "target": 0}
{"idx": 6892, "func": "//checkAssignIDToObject(figassociationrole, true, true);", "target": 0}
{"idx": 6893, "func": "//private DatabaseMetaData mockGenericDialectDBMetaData = mockHelper.createMock(DatabaseMetaData.class);", "target": 0}
{"idx": 6894, "func": "The basic implementation is to simply use the node's text", "target": 0}
{"idx": 6895, "func": "base is already set to this assoc...", "target": 0}
{"idx": 6896, "func": "if we get here, we found a matching method, use it TODO: choose narrowest method by continuing to search", "target": 1}
{"idx": 6897, "func": "assume {min,}", "target": 0}
{"idx": 6898, "func": "interfaces arguments", "target": 0}
{"idx": 6899, "func": "2 columns", "target": 0}
{"idx": 6900, "func": "FIXME: add setBaseOutlineStroke(Stroke, boolean) ?", "target": 0}
{"idx": 6901, "func": "scan class hierarchy for module", "target": 0}
{"idx": 6902, "func": "copy 3", "target": 0}
{"idx": 6903, "func": "Set up a VSSCheckIn task", "target": 0}
{"idx": 6904, "func": "Used by: MonitorHealthVisualizer.add(SampleResult res)", "target": 0}
{"idx": 6905, "func": "something really got wrong here -> show error dialog JOptionPane.showMessageDialog(null, e.getMessage());", "target": 0}
{"idx": 6906, "func": "init with default value", "target": 0}
{"idx": 6907, "func": "Set the new status", "target": 0}
{"idx": 6908, "func": "//{{{ SEQ", "target": 0}
{"idx": 6909, "func": "getFooBar() => fooBar?, foo_bar?()", "target": 0}
{"idx": 6910, "func": "$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$", "target": 0}
{"idx": 6911, "func": "less than", "target": 0}
{"idx": 6912, "func": "//( (Column) sc.getTable().getPrimaryKey().getColumnIterator().next() ).getName();", "target": 0}
{"idx": 6913, "func": "double precision, native double precision, native", "target": 0}
{"idx": 6914, "func": "end class SnoozeOrder", "target": 0}
{"idx": 6915, "func": "quieten Findbugs default - do nothing", "target": 0}
{"idx": 6916, "func": "If the expression list has exactly one expression, and the type of the expression is a collection then this might be a collection function, such as index(c) or size(c).", "target": 0}
{"idx": 6917, "func": "Next, try to locate this resource through this class's classloader", "target": 0}
{"idx": 6918, "func": ", IHasName", "target": 0}
{"idx": 6919, "func": "//{{{ BeanShellHandler constructor", "target": 0}
{"idx": 6920, "func": "initialize to empty string, this will fail the assertion", "target": 0}
{"idx": 6921, "func": "//let's assume that there is only one lazy fetch group, for now!", "target": 0}
{"idx": 6922, "func": "Add SQuirreL Change Log to the Licence node.", "target": 0}
{"idx": 6923, "func": "//+ JMX file attributes $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ //- JMX file attributes", "target": 0}
{"idx": 6924, "func": "If the template path points at a project with a JET Nature, then we will assume that the templates we want to use are already compiled in this plugin Java project.", "target": 0}
{"idx": 6925, "func": "6c - remove all \"./\" where \".\" is a complete path segment", "target": 0}
{"idx": 6926, "func": "the whole column definition", "target": 0}
{"idx": 6927, "func": "Set dir to a non-existent directory inside the temporary directory", "target": 0}
{"idx": 6928, "func": "//{{{ ListHandler class", "target": 0}
{"idx": 6929, "func": "preset to default impl", "target": 0}
{"idx": 6930, "func": "Listen to the modelelement itself:", "target": 0}
{"idx": 6931, "func": "Override Task#execute", "target": 0}
{"idx": 6932, "func": "without closure we may delete an inner class but not the top level class which would not trigger a recompile.", "target": 0}
{"idx": 6933, "func": "IMPL NOTE : due to the delayed population of setters (setters cached for performance), we really cannot pro0perly define equality for this transformer", "target": 0}
{"idx": 6934, "func": "//blockNames in UNICODE 3.1 that supported by XML Schema REC", "target": 0}
{"idx": 6935, "func": "Set of options that we want to control", "target": 0}
{"idx": 6936, "func": "may be altered in validateSetup may be altered in validateSetup", "target": 0}
{"idx": 6937, "func": "//{{{ getFileExtension() method", "target": 0}
{"idx": 6938, "func": "Don't save this, as not settable via GUI", "target": 0}
{"idx": 6939, "func": "//{{{ Unwind any NO_LINE_BREAK parent delegates", "target": 0}
{"idx": 6940, "func": "TODO: Why is this a special case? - tfm", "target": 1}
{"idx": 6941, "func": "this.offset points the next of '('", "target": 0}
{"idx": 6942, "func": "RubyBigdecimal", "target": 0}
{"idx": 6943, "func": "FIXME: depends on internal behavior of XmiReaderImpl. Needed for solving issue 5017.", "target": 1}
{"idx": 6944, "func": "|| returnType == null", "target": 0}
{"idx": 6945, "func": "//new TestCompletionFunction(),", "target": 0}
{"idx": 6946, "func": "@see javax.swing.ComboBoxEditor#removeActionListener(java.awt.event.ActionListener)", "target": 0}
{"idx": 6947, "func": "//{{{ Update line info and line context arrays", "target": 0}
{"idx": 6948, "func": "no content of diagram", "target": 0}
{"idx": 6949, "func": "checks the scheduler to stop the iteration", "target": 0}
{"idx": 6950, "func": "check dataset with two time periods", "target": 0}
{"idx": 6951, "func": "Kludge required by GEF's use of HashMap in the API TODO: This can be removed if they ever fix GEF to use Maps", "target": 1}
{"idx": 6952, "func": "Eclipse UML2 implementation classes end with \"Impl\" //$NON-NLS-1$", "target": 0}
{"idx": 6953, "func": "//TODO:{\"org.argouml.ui\", \"org.argouml.cognitive.ui\"},//fails due to subpackages //TODO:{\"org.argouml.cognitive\", \"org.argouml.cognitive.critics\"},", "target": 0}
{"idx": 6954, "func": "The first time that schemas are asked for, return just one", "target": 0}
{"idx": 6955, "func": "Used to separate attachment file names in JMX fields - do not change!", "target": 0}
{"idx": 6956, "func": "TODO cpercent is the same as cmedian here - why? and why pass it to \"distributionLine\"?", "target": 1}
{"idx": 6957, "func": "TODO: this doesn't look right - review - tfm", "target": 1}
{"idx": 6958, "func": "the UML Profile is always present and default", "target": 0}
{"idx": 6959, "func": "We always open this rw since we can only open it r or rw.", "target": 0}
{"idx": 6960, "func": "we are at the last hour in the day...", "target": 0}
{"idx": 6961, "func": "if new columns were added, we have to initialize the tooltips", "target": 0}
{"idx": 6962, "func": "\\v", "target": 0}
{"idx": 6963, "func": "See java.lang.Class.getName() javadoc for explanation of array encoding.", "target": 0}
{"idx": 6964, "func": "//i18n[PasteTableAction.error.multischemapaste=The paste //operation may only be applied to one schema at a time]", "target": 0}
{"idx": 6965, "func": "monthlyActivityAShapeBean = new ActivityAShapeBean();", "target": 0}
{"idx": 6966, "func": "TODO: is this the correct default?", "target": 1}
{"idx": 6967, "func": "deliverSampler allows sampler to be null, but result must not be null", "target": 0}
{"idx": 6968, "func": "returnign null!", "target": 0}
{"idx": 6969, "func": "//{{{ propertiesChanged() method", "target": 0}
{"idx": 6970, "func": "SSS FIXME: Should I have a reference to the IR_loop that is being retried?", "target": 1}
{"idx": 6971, "func": "Initialize enums and add enum literals", "target": 0}
{"idx": 6972, "func": "Allow the mimetype of the file to control the content type This is not obvious in GUI if you are not uploading any files, but just sending the content of nameless parameters TODO: needs a multiple file upload scenerio", "target": 1}
{"idx": 6973, "func": "Determine the index for the feature and return the value at that index, if an index is assigned. //", "target": 0}
{"idx": 6974, "func": "Use null for url and contentEncoding, to simulate that HttpRequestHdr do not know the encoding for the page", "target": 0}
{"idx": 6975, "func": "default to name of element", "target": 0}
{"idx": 6976, "func": "@see org.argouml.uml.diagram.ui.FigNodeModelElement#updateStereotypeText()", "target": 0}
{"idx": 6977, "func": "$NON-NLS-1$ throughput.addActionListener(this);", "target": 0}
{"idx": 6978, "func": "Draw an outline around the Area.", "target": 0}
{"idx": 6979, "func": "i18n[mysql.alterDlgClose=Close]", "target": 0}
{"idx": 6980, "func": "the end cannot be a regular expression", "target": 0}
{"idx": 6981, "func": "//display error message", "target": 0}
{"idx": 6982, "func": "TABLE_CAT TABLE_SCHEM TABLE_NAME COLUMN_NAME DATA_TYPE TYPE_NAME COLUMN_SIZE DECIMAL_DIGITS NUM_PREC_RADIX NULLABLE REMARKS COLUMN_DEF CHAR_OCTET_LENGTH ORDINAL_POSITION IS_NULLABLE", "target": 0}
{"idx": 6983, "func": "TODO: UML 1.4 spec requires both client and supplier to be in the same model - tfm", "target": 1}
{"idx": 6984, "func": "add a targetSeparator in front of every upper case character", "target": 0}
{"idx": 6985, "func": "read in the file", "target": 0}
{"idx": 6986, "func": "@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getChildren( java.lang.Object)", "target": 0}
{"idx": 6987, "func": "FIXME This whole thing could probably be implemented as a module and mixed into appropriate classes, especially if it uses either IOInput/OutputStream or is smart about the kind of IO-like object it's being used against.", "target": 1}
{"idx": 6988, "func": "//i18n[HibernatePrefsTab.title=Hibernate]", "target": 0}
{"idx": 6989, "func": "handles arrays and newly instantiated collections", "target": 0}
{"idx": 6990, "func": "JMenu reportMenu; JMenuItem analyze;", "target": 0}
{"idx": 6991, "func": "This case happens when the IDE is brought up with the editor already open //", "target": 0}
{"idx": 6992, "func": "Determine which projects will need to be referenced. //", "target": 0}
{"idx": 6993, "func": "initial guess", "target": 0}
{"idx": 6994, "func": "May be null if called from Unit test", "target": 0}
{"idx": 6995, "func": "filter", "target": 0}
{"idx": 6996, "func": "alter table <tablename> drop column <columnName>", "target": 0}
{"idx": 6997, "func": "line 772", "target": 0}
{"idx": 6998, "func": "(non-Javadoc) @see org.jfree.chart.axis.LogarithmicAxis#switchedLog10(double)", "target": 0}
{"idx": 6999, "func": "Other args begin at index 1", "target": 0}
{"idx": 7000, "func": "Helper method to construct resource name", "target": 0}
{"idx": 7001, "func": "Validate that an alias name was provided to determine which pool to use", "target": 0}
{"idx": 7002, "func": "offset", "target": 0}
{"idx": 7003, "func": "get any included interfaces", "target": 0}
{"idx": 7004, "func": "Empty", "target": 0}
{"idx": 7005, "func": "If the pre-emptive parameter is undefined, then we can set it as needed otherwise we should do what the user requested.", "target": 0}
{"idx": 7006, "func": "exception.printStackTrace();", "target": 0}
{"idx": 7007, "func": "Clock", "target": 0}
{"idx": 7008, "func": "| this | bean | args | i | raw bean | exception |", "target": 0}
{"idx": 7009, "func": "//$NON-NLS-1$//$NON-NLS-2$", "target": 0}
{"idx": 7010, "func": "This doesn't seem very correct, but it fixes a problem when setting the initial caret position for a buffer (eg, from the recent file list)", "target": 1}
{"idx": 7011, "func": "TODO - use or remove", "target": 1}
{"idx": 7012, "func": "Add SQuirreL help to the Help node.", "target": 0}
{"idx": 7013, "func": "line 1217", "target": 0}
{"idx": 7014, "func": "TODO: All build/create methods need Undo support - tfm", "target": 1}
{"idx": 7015, "func": "Forcefully remove leading ands from where fragments; the grammar will handle adding them", "target": 0}
{"idx": 7016, "func": "i18n[HtmlViewerPanel.error.displayurl=Error displaying URL]", "target": 0}
{"idx": 7017, "func": "using local since the inheritedMetas at this point is not the correct map since it is always the empty map", "target": 0}
{"idx": 7018, "func": "Test to see if the directory was saved with the correct name.", "target": 0}
{"idx": 7019, "func": "//{{{ LineContext class", "target": 0}
{"idx": 7020, "func": "---- label1 ----", "target": 0}
{"idx": 7021, "func": "check this.value", "target": 0}
{"idx": 7022, "func": "This causes problems. It can make multiple return messages refer to the same activator even if not returning to the same classifier role as the activator emenates from. I'm not sure that changing the activator of one message should amend any other messages but this is certainly changing too many - Bob.", "target": 1}
{"idx": 7023, "func": "Just move the corner to it's new position.", "target": 0}
{"idx": 7024, "func": "discarding a token does not change stack", "target": 0}
{"idx": 7025, "func": "//{{{ Paint token background color if necessary", "target": 0}
{"idx": 7026, "func": "//{{{ AbbrevEditor constructor", "target": 0}
{"idx": 7027, "func": "For use by test code only", "target": 0}
{"idx": 7028, "func": "Check all the values. //", "target": 0}
{"idx": 7029, "func": "i18n[CopyProgressMonitor.analyzingTableMessage=Analyzing table ]", "target": 0}
{"idx": 7030, "func": "Fix for this bug: -- Put a mode into the user dir with the same name as one on the system dir. -- Reload edit modes. -- Old mode from system dir still used for highlighting until jEdit restart.", "target": 1}
{"idx": 7031, "func": "if body is a rescue node, inspect its pieces separately to avoid it disabling all optz TODO: this is gross.", "target": 1}
{"idx": 7032, "func": "TODO: This is actually now returning the scope of whoever called Method#to_proc which is obviously wrong; but there's no scope to provide for many methods. It fixes JRUBY-2237, but needs a better solution.", "target": 1}
{"idx": 7033, "func": "END-KLUDGE", "target": 1}
{"idx": 7034, "func": "Is this inline source (aka -e \"...source...\")", "target": 0}
{"idx": 7035, "func": "use ResourceBundle's internal classloader", "target": 0}
{"idx": 7036, "func": "draw the labels...", "target": 0}
{"idx": 7037, "func": "Convert element values: & to &amp; < to &lt; \" to &quot; \\n to line separator \\r should be escaped to &xD;", "target": 0}
{"idx": 7038, "func": "Subclasses may overrride", "target": 0}
{"idx": 7039, "func": "There should be at least one archive separator per scheme. //", "target": 0}
{"idx": 7040, "func": "showing the week number", "target": 0}
{"idx": 7041, "func": "clear colinear points and flag", "target": 0}
{"idx": 7042, "func": "set default value, can be changed by the user", "target": 0}
{"idx": 7043, "func": "first line for last 10 lines, make sure not to overlap with the first 10", "target": 0}
{"idx": 7044, "func": "$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-2$", "target": 0}
{"idx": 7045, "func": "reversed compare allows for null", "target": 0}
{"idx": 7046, "func": "Catch everything - some of the above return nulls, throw exceptions or generally misbehave in the event of a problem etc", "target": 0}
{"idx": 7047, "func": "i18n[Application.error.showhelpwindow=Error showing help window]", "target": 0}
{"idx": 7048, "func": "pane.addTab(MergeColumnDialog.i18n.TABBEDPANE_COLUMNS_LABEL, _columnTab);", "target": 0}
{"idx": 7049, "func": "@see javax.swing.tree.TreeCellRenderer#getTreeCellRendererComponent( javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)", "target": 0}
{"idx": 7050, "func": "\\pM \\PM + \\pM", "target": 0}
{"idx": 7051, "func": "WEB REQUEST PANEL", "target": 0}
{"idx": 7052, "func": "i18n[AbstractRefactoringDialog.cancelButtonLabel=Cancel]", "target": 0}
{"idx": 7053, "func": "We cannot use this data in the WHERE clause if it has been truncated. Since being truncated is the same as needing to re-read, only use this in the WHERE clause if we do not need to re-read", "target": 0}
{"idx": 7054, "func": "still 2.", "target": 0}
{"idx": 7055, "func": "specifies valid elements for an State to contain", "target": 0}
{"idx": 7056, "func": "seriesOutlinePaintList", "target": 0}
{"idx": 7057, "func": "//Make sure parent dirs exist, else, create them.", "target": 0}
{"idx": 7058, "func": "i18n[xmlReformatter.no=NO]", "target": 0}
{"idx": 7059, "func": "b.append(\"Pass&word:\", passwordTextField);", "target": 0}
{"idx": 7060, "func": "header cache is stored in \"headerlist\" subfolder", "target": 0}
{"idx": 7061, "func": "trying to get a built-in standard profile from eclipse UML2", "target": 0}
{"idx": 7062, "func": "Display any warnings generated by the SQL execution.", "target": 0}
{"idx": 7063, "func": "If no release method is defined, then memory leaks will result.", "target": 0}
{"idx": 7064, "func": "controlling ------------------------------------------------------------------------", "target": 0}
{"idx": 7065, "func": "Find the screen line containing this offset", "target": 0}
{"idx": 7066, "func": "default parameter name", "target": 0}
{"idx": 7067, "func": "The FROM fragment will probably begin with ', '. Remove this if it is present.", "target": 0}
{"idx": 7068, "func": "//{{{ RootElement constructor", "target": 0}
{"idx": 7069, "func": "TODO improve string version to better match browser behaviour? e.g. do browsers regard http://host/ and http://Host:80/ as the same? If so, it would be better to reflect this in the string", "target": 1}
{"idx": 7070, "func": "Include derived relations only if they won't also come from mixed or a group. //", "target": 0}
{"idx": 7071, "func": "generate the keypair for the host", "target": 0}
{"idx": 7072, "func": "line 1337", "target": 0}
{"idx": 7073, "func": "otherwise load the library we've found", "target": 0}
{"idx": 7074, "func": "Get the assocations and connections. No problem (there is a separate critic) if this is a binary association or is an association role.", "target": 0}
{"idx": 7075, "func": "Remove menu item from Windows menu that relates to this internal frame.", "target": 0}
{"idx": 7076, "func": "no related", "target": 0}
{"idx": 7077, "func": "force the fold levels to be updated.", "target": 0}
{"idx": 7078, "func": "r = x 2 y", "target": 0}
{"idx": 7079, "func": "link the file", "target": 0}
{"idx": 7080, "func": "// This method is called when a cell value is edited by the user.", "target": 0}
{"idx": 7081, "func": "vertical grid lines", "target": 0}
{"idx": 7082, "func": "set renderers for columns", "target": 0}
{"idx": 7083, "func": "//get new parent node", "target": 0}
{"idx": 7084, "func": "//swaldman 2006-08-28: define c3p0-style configuration parameters for properties with hibernate-specific overrides to detect and warn about conflicting declarations", "target": 0}
{"idx": 7085, "func": "relative path", "target": 0}
{"idx": 7086, "func": "//{{{ LineManager constructor", "target": 0}
{"idx": 7087, "func": "TODO: Does this method need to be public? It isn't currently called outside of this class.", "target": 1}
{"idx": 7088, "func": "split key/value pairs", "target": 0}
{"idx": 7089, "func": "we don't; use the default parser", "target": 0}
{"idx": 7090, "func": "inlined: bsW(1, 0);", "target": 0}
{"idx": 7091, "func": "We know the column names all exist, so create the config", "target": 0}
{"idx": 7092, "func": "@see tudresden.ocl.parser.analysis.DepthFirstAdapter#outABooleanLiteral(tudresden.ocl.parser.node.ABooleanLiteral)", "target": 0}
{"idx": 7093, "func": "y", "target": 0}
{"idx": 7094, "func": "TODO: we should be given an Undo manager to use rather than looking for a global one", "target": 1}
{"idx": 7095, "func": "Since task log category includes target, we don't really need this message", "target": 0}
{"idx": 7096, "func": "popen caller wants to be able to write, provide subprocess out directly", "target": 0}
{"idx": 7097, "func": "ConcurrentHashMap does not need synch. here", "target": 0}
{"idx": 7098, "func": "labelGenerator", "target": 0}
{"idx": 7099, "func": "backgrounded", "target": 0}
{"idx": 7100, "func": "//i18n[DriverPropertiesController.Hint=DriverProperties]", "target": 0}
{"idx": 7101, "func": "//repaint the page for printing", "target": 0}
{"idx": 7102, "func": "--Commented out by Inspection (12/4/04 9:10 AM): public abstract void addCondition(String alias, String[] columns, String condition);", "target": 0}
{"idx": 7103, "func": "NOTE VERY HACKISH WORKAROUND!! TODO: Fix this so it will work for non-POJO entity mode", "target": 1}
{"idx": 7104, "func": "//DefaultListModel listModel = (DefaultListModel) listFields.getModel();", "target": 0}
{"idx": 7105, "func": "We don't need to care for duplicates here, Path.list does it for us.", "target": 0}
{"idx": 7106, "func": "remember old values, in case action changes them", "target": 0}
{"idx": 7107, "func": "(non-Javadoc) @see org.columba.mail.imap.IImapServer#getMimeTree(java.lang.Object, org.columba.mail.folder.imap.IMAPFolder)", "target": 0}
{"idx": 7108, "func": "NIO based pipe", "target": 0}
{"idx": 7109, "func": "if we don't do this, the autosave file won't be deleted after a save as", "target": 0}
{"idx": 7110, "func": "Collection 'property function'", "target": 0}
{"idx": 7111, "func": "e.g. in non-GUI mode", "target": 0}
{"idx": 7112, "func": "Declare those components as beans in BSF. Then it will be possible to access those components in Ruby as global variables ($frame, $menubar, ...)", "target": 0}
{"idx": 7113, "func": "reserve space for the range axes (if any)...", "target": 0}
{"idx": 7114, "func": "ss.exe exits with '100', when files have been skipped so we have to ignore the failure", "target": 0}
{"idx": 7115, "func": "TODO turn into parameter?", "target": 1}
{"idx": 7116, "func": "Write multipart for parameter", "target": 0}
{"idx": 7117, "func": "Deresolve all the URI against the current base URI. //", "target": 0}
{"idx": 7118, "func": "this is the temporary solution for issue 1011", "target": 1}
{"idx": 7119, "func": "//{{{ isAncestorOf() method", "target": 0}
{"idx": 7120, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getSQLKeywords()", "target": 0}
{"idx": 7121, "func": "Public static methods //", "target": 0}
{"idx": 7122, "func": "//?? Future: may want to create TablePopupMenu to allow cut/copy/paste operations", "target": 1}
{"idx": 7123, "func": "This is set here as SessionPanel.dispose() will attempt to close the session.", "target": 0}
{"idx": 7124, "func": "Add this to search list for I18N properties (Done for both modules & localized property file sets)", "target": 0}
{"idx": 7125, "func": "If using an external file, write the command line options to it", "target": 0}
{"idx": 7126, "func": "// public boolean isShowSqlEnabled() { // return showSql; // } // public boolean isFormatSqlEnabled() { // return formatSql; // }", "target": 0}
{"idx": 7127, "func": "//TODO: something with formulas...", "target": 0}
{"idx": 7128, "func": "This is used by the ChangeLanguage class to define the Locale", "target": 0}
{"idx": 7129, "func": "We want to delete rows from the end of the table towards the beginning of the table. If we delete from the front to the back, that throws off the indexes of the rows after each delete and we would have to compensate for that. Example: if we want to delete rows 2 and 4 and do it in that order, then after deleteing row 2 the row that used to be row 4 is now actually row 3, so we would have to subtract 1 from the index to get the row to delete. On the other hand, if we delete row 4 first, then the indexes of all rows prior to that one have not been affected, so we can then delete row 2 without any complications.", "target": 0}
{"idx": 7130, "func": "TODO: This looks backwards. Left over from issue 2034?", "target": 1}
{"idx": 7131, "func": "catalog2 --> catalog1 --> catalog", "target": 0}
{"idx": 7132, "func": "only save if changes exist", "target": 0}
{"idx": 7133, "func": "Disable anything that would cause the date to go out of range. This logic is extremely sensitive so be very careful when making changes. Every condition test in here is necessary, so don't remove anything.", "target": 0}
{"idx": 7134, "func": "If the dragged objects share a parent... //", "target": 0}
{"idx": 7135, "func": "//////////////////////////////////////////////////////////////MutableGraphModel implementation", "target": 0}
{"idx": 7136, "func": "//setMargin(new Insets(0,0,0,0));", "target": 0}
{"idx": 7137, "func": "If we read a \\r and lastWasCR is also true, it is probably a Mac file (\\r\\r in stream)", "target": 0}
{"idx": 7138, "func": "for an any we will have to use reflection", "target": 0}
{"idx": 7139, "func": "I am only prepared to go this far.", "target": 0}
{"idx": 7140, "func": "TODO: This code manually processes the ElementImports of a Package, but we need to check whether MDR already does something similar automatically as part of its namespace processing. - tfm - 20060408", "target": 1}
{"idx": 7141, "func": "i18n[oracle.sortsPerExec=Sorts per Row]", "target": 0}
{"idx": 7142, "func": "(non-Javadoc) @see org.columba.mail.message.HeaderInterface#count()", "target": 0}
{"idx": 7143, "func": "This returns a name like employeeNumber formatted like 'Employee Number' This returns the same as getCapName unless it starts with \"is\" in which case the \"is\" is stripped This returns the name to be used in accessor method names; it's the same as getCapName, unless this is the key or value of a map entry, for which \"Typed\" is prepended This returns the name of the get array-based accessor method for the list feature. This returns the name of the get accessor method for the feature, i.e., either \"is\" or \"get\" is prefixed to getAccessorName", "target": 0}
{"idx": 7144, "func": "This fixes the strange behaviour of the courier imapserver which sets the \\Noselect flag on INBOX", "target": 0}
{"idx": 7145, "func": "i18n[UpdateSummaryTable.yes=yes]", "target": 0}
{"idx": 7146, "func": "TBLRC 11011", "target": 0}
{"idx": 7147, "func": "3. Scan hex sequence after '::'.", "target": 0}
{"idx": 7148, "func": "//{{{ Selection constructor", "target": 0}
{"idx": 7149, "func": "If we were handed a Classifier to start, this must be a Classifier", "target": 0}
{"idx": 7150, "func": "assume nInit = 16 <= prec", "target": 0}
{"idx": 7151, "func": "//{{{ addStructureMatcher() method", "target": 0}
{"idx": 7152, "func": "ok, this one seems to confuse newbies endlessly, so log it as NOTICE, not ERROR", "target": 0}
{"idx": 7153, "func": "//{{{ getLastView() method", "target": 0}
{"idx": 7154, "func": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 7155, "func": "//current = lost;", "target": 0}
{"idx": 7156, "func": "more than one item, very strange! duplicate entries! remove all", "target": 0}
{"idx": 7157, "func": "not in scroll pane", "target": 0}
{"idx": 7158, "func": "Identifier for addonly changeability. TODO: Note this should not be in UML2 version", "target": 1}
{"idx": 7159, "func": "Implements TestStateListener.testStarted(String)", "target": 0}
{"idx": 7160, "func": "The 'from element' that represents the elements of the collection.", "target": 0}
{"idx": 7161, "func": "No need to call clear", "target": 0}
{"idx": 7162, "func": "//{{{ getTrailingWhiteSpace() method", "target": 0}
{"idx": 7163, "func": "TODO: else : alert", "target": 1}
{"idx": 7164, "func": "Save hostname for ResultSaver $NON_NLS-1$", "target": 0}
{"idx": 7165, "func": "Ignore features from the first super type. //", "target": 0}
{"idx": 7166, "func": "We preserve the current (multiple) selection, if we are over part of it ...", "target": 0}
{"idx": 7167, "func": "//{{{ _runScript() method", "target": 0}
{"idx": 7168, "func": "//{{{ handleBufferUpdate() method", "target": 0}
{"idx": 7169, "func": "$NON-NLS-1$", "target": 0}
{"idx": 7170, "func": "create the temporary directory if it doesn't exist", "target": 0}
{"idx": 7171, "func": "small icon for menu putValue(SMALL_ICON, ImageLoader.getSmallImageIcon(\"stock_about-16.png\"));", "target": 0}
{"idx": 7172, "func": "KeyStroke f7 = KeyStroke.getKeyStroke(KeyEvent.VK_F7, 0);", "target": 0}
{"idx": 7173, "func": "@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)", "target": 0}
{"idx": 7174, "func": "If the height of a view exceeds the paperheight, there should be no break before (since it will be impossible to fit it in anywhere => an infinite loop). We don't have access to the pageheight here, therefore an \"educated guess\" is made: No breaks are inserted before views starting within the first 1% (chosen to avoid round-off errors) of the available space given by actBreakHeight. If the view starts after the first 1%, a break is inserted and the view will start at the top of the next page (i.e. withing the first 1% this time).", "target": 0}
{"idx": 7175, "func": "terminate and advance buffer when we find our char", "target": 0}
{"idx": 7176, "func": "we don't know the right hand side of the assignment yet. has at least one setter of the right name?", "target": 0}
{"idx": 7177, "func": "must be the start of the subtree", "target": 0}
{"idx": 7178, "func": "i18n[HibernateConfigPanel.toObtainSessionFactPersUnit=persitence-unit name:]", "target": 0}
{"idx": 7179, "func": "Check if the item is the last item for the series and number of items > 0. We can't draw an area for a single point.", "target": 0}
{"idx": 7180, "func": "should have the same hashcodes...", "target": 0}
{"idx": 7181, "func": "Static text", "target": 0}
{"idx": 7182, "func": "TODO : most of below was taken verbatim from DotNode; should either delegate this logic or super-type it", "target": 1}
{"idx": 7183, "func": "TODO: Once we're happy that JFCUtilities is no longer required", "target": 1}
{"idx": 7184, "func": "//{{{ LogList class", "target": 0}
{"idx": 7185, "func": "get destination foldedr", "target": 0}
{"idx": 7186, "func": "//{{{ Text getters and setters", "target": 0}
{"idx": 7187, "func": "@see java.util.List#addAll(int, java.util.Collection)", "target": 0}
{"idx": 7188, "func": "Enumerate methods Enumerate method arguments", "target": 0}
{"idx": 7189, "func": "FIXME: set up a CallConfiguration for this", "target": 1}
{"idx": 7190, "func": "DB2 spec says max=2147483647, but the driver throws an exception", "target": 0}
{"idx": 7191, "func": "//@GuardedBy(\"accumulators\") - needed to ensure consistency between this and instanceCount", "target": 0}
{"idx": 7192, "func": "FIXME: set up a call configuration for this", "target": 1}
{"idx": 7193, "func": "@see org.argouml.persistence.XmiFilePersister#isSaveEnabled()", "target": 0}
{"idx": 7194, "func": "Add plugin help, licence and change log documents to the tree.", "target": 0}
{"idx": 7195, "func": "if we save a file with the same name as one that's already open, we presume that we can close the existing file, since the user would have confirmed the overwrite in the 'save as' dialog box anyway", "target": 0}
{"idx": 7196, "func": "Process other users namespaces", "target": 0}
{"idx": 7197, "func": "Do the work within an operation because this is a long running activity that modifies the workbench. //", "target": 0}
{"idx": 7198, "func": "------------------------------------------------------------------------ Fields ------------------------------------------------------------------------", "target": 0}
{"idx": 7199, "func": "ns is a namespace, but not a package", "target": 0}
{"idx": 7200, "func": "//{{{ regexpBeanShellReplace() method", "target": 0}
{"idx": 7201, "func": "//+ JMX attributes - do not change $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ //- JMX", "target": 0}
{"idx": 7202, "func": "//Do nothing", "target": 0}
{"idx": 7203, "func": "The unique property value represented here may or may not be serializable, so we do an explicit check here in order to generate a better error message", "target": 0}
{"idx": 7204, "func": "Below is equivalent to the following: stringValueResult = xmlType.getStringVal();", "target": 0}
{"idx": 7205, "func": "i18n[graph.hideScrollBars=Hide scrollbars]", "target": 0}
{"idx": 7206, "func": "results.setResponseCode(\"???\"); TODO what code should be set here?", "target": 1}
{"idx": 7207, "func": "create a CDATA section for the label", "target": 0}
{"idx": 7208, "func": "@see org.argouml.uml.diagram.ui.FigNodeModelElement#modelChanged(java.beans.PropertyChangeEvent)", "target": 0}
{"idx": 7209, "func": "\"Java\" is the default module for historical reasons, but it's not required to be there", "target": 0}
{"idx": 7210, "func": "TODO : this constructor form is only used from constructor directly below us; can it go away?", "target": 1}
{"idx": 7211, "func": "labelType...", "target": 0}
{"idx": 7212, "func": "singleton classes don't get their own visibility domain", "target": 0}
{"idx": 7213, "func": "newInstance here", "target": 0}
{"idx": 7214, "func": "//setText(accountName);", "target": 0}
{"idx": 7215, "func": "treat start and end as start...end for end >= 0, start..end for end < 0", "target": 0}
{"idx": 7216, "func": "LOG.log(Level.FINE, \"getData Rectangle = \" + clip);", "target": 0}
{"idx": 7217, "func": "Resolve relative to a class type static field, inner class, ?", "target": 1}
{"idx": 7218, "func": "TBLRC 00001 - center item only", "target": 0}
{"idx": 7219, "func": "i18n[oracle.displaysSequenceDetails=Display sequence details]", "target": 0}
{"idx": 7220, "func": "process the deployment descriptor in each tool", "target": 0}
{"idx": 7221, "func": "Symbol class methods.", "target": 0}
{"idx": 7222, "func": "//the first key found after the given key", "target": 0}
{"idx": 7223, "func": "Overrides of superclass methods", "target": 0}
{"idx": 7224, "func": "start time...", "target": 0}
{"idx": 7225, "func": "TODO: Is this required? Why would the fig already be dashed? @see org.tigris.gef.presentation.FigEdge#setFig( org.tigris.gef.presentation.Fig)", "target": 1}
{"idx": 7226, "func": "//Can we use the Java way to maximize the window", "target": 0}
{"idx": 7227, "func": "Read the external subset, if any", "target": 0}
{"idx": 7228, "func": "If we're trying to load a file from a future version complain and refuse.", "target": 0}
{"idx": 7229, "func": "i18n[HibernateConfigPanel.newConfig=New]", "target": 0}
{"idx": 7230, "func": "// int parameterStart = getWalker().getNumberOfParametersInSetClause(); // List allParams = getIdSelectParameterSpecifications(); // Iterator whereParams = allParams.subList( parameterStart, allParams.size() ).iterator();", "target": 0}
{"idx": 7231, "func": "//v.getEndDate().getParameters().add(Value.DATE);", "target": 0}
{"idx": 7232, "func": "//{{{ insertUpdate() method", "target": 0}
{"idx": 7233, "func": "many cases are ok to convert to float; if not one of these, error", "target": 0}
{"idx": 7234, "func": "line 397", "target": 0}
{"idx": 7235, "func": "uri not found", "target": 0}
{"idx": 7236, "func": "it is possible for this method to be called during flush processing, so make certain that we do not accidently initialize an uninitialized proxy", "target": 0}
{"idx": 7237, "func": "Deserialize //-----------------------------------------------------------------------", "target": 0}
{"idx": 7238, "func": "same url - just append and continue", "target": 0}
{"idx": 7239, "func": "i18n[popupeditableIoPanel.exportError3=Export Error]", "target": 0}
{"idx": 7240, "func": "Java Method", "target": 0}
{"idx": 7241, "func": "Note for UML2 the aggregation ends are swapped", "target": 0}
{"idx": 7242, "func": "ifnonnull (label1)", "target": 0}
{"idx": 7243, "func": "TODO strings should be resources", "target": 1}
{"idx": 7244, "func": "line 754", "target": 0}
{"idx": 7245, "func": "for panels", "target": 0}
{"idx": 7246, "func": "remove us from old superclass's child classes", "target": 0}
{"idx": 7247, "func": "//ArgoDiagram activeDiagram = DiagramUtils.getActiveDiagram(); //return (activeDiagram instanceof UMLClassDiagram);", "target": 0}
{"idx": 7248, "func": "use parent's marshal", "target": 0}
{"idx": 7249, "func": "Directory containing the standard LAF jar files.", "target": 0}
{"idx": 7250, "func": "Check if it is a file being uploaded //$NON-NLS-1$", "target": 0}
{"idx": 7251, "func": "disable button", "target": 0}
{"idx": 7252, "func": "explicitly perform no checking...", "target": 0}
{"idx": 7253, "func": "since .execute() returned true, the first result is a ResultSet.", "target": 0}
{"idx": 7254, "func": "4E00..9FFF;", "target": 0}
{"idx": 7255, "func": "Add menu to add an extension point or note. Placed one before last, so the \"Properties\" entry is always last.", "target": 0}
{"idx": 7256, "func": "//////////////accessors", "target": 0}
{"idx": 7257, "func": "Set URIs of EPackage-containing resources: output resource to desired target URI, and others to package namespace URIs (so cross-references will be resolved via package registry when deserialized). //", "target": 0}
{"idx": 7258, "func": "line 392", "target": 0}
{"idx": 7259, "func": "Do nothing if we are hovering over the root node", "target": 0}
{"idx": 7260, "func": "//TODO: add a CriteriaImplementor interface this class depends directly upon CriteriaImpl in the impl package...", "target": 1}
{"idx": 7261, "func": "Not found, fall through to next class", "target": 0}
{"idx": 7262, "func": "//{{{ preContentRemoved() method", "target": 0}
{"idx": 7263, "func": "Set default parameters as needed", "target": 0}
{"idx": 7264, "func": "static invocation", "target": 0}
{"idx": 7265, "func": "Avoid double-call if addSubResult was called.", "target": 0}
{"idx": 7266, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.mainpanel.BaseMainPanelTab#refreshComponent()", "target": 0}
{"idx": 7267, "func": "@see java.awt.datatransfer.Transferable#getTransferDataFlavors()", "target": 0}
{"idx": 7268, "func": "//{{{ Recorder class", "target": 0}
{"idx": 7269, "func": "i18n[CreateDataScriptOfCurrentSQLCommand.noQuery=No query found to create the script from.]", "target": 0}
{"idx": 7270, "func": "don't fetch unless pattern compiles", "target": 0}
{"idx": 7271, "func": "//{{{ error() method", "target": 0}
{"idx": 7272, "func": "Do not take existing link tags into account", "target": 0}
{"idx": 7273, "func": "We know this fails - Bug# 1700093", "target": 1}
{"idx": 7274, "func": "remove empty category branches", "target": 0}
{"idx": 7275, "func": "Because the clipRect's height is usually an even multiple of the font height, we subtract 1 from it, otherwise one too many lines will always be painted.", "target": 0}
{"idx": 7276, "func": "JRUBY-530 until case", "target": 0}
{"idx": 7277, "func": "Compare with number of dimensions actually created with the number specified (syntax uses the undefined ones here)", "target": 0}
{"idx": 7278, "func": "add the unique categories from this dataset", "target": 0}
{"idx": 7279, "func": "Make sure the file ends with proper extension", "target": 0}
{"idx": 7280, "func": "TODO : we may also want to check that the types here map to exactly one column/JDBC-type can't think of a situation where arithmetic expression between multi-column mappings makes any sense.", "target": 1}
{"idx": 7281, "func": "retrieve the swt font description in an os indept way", "target": 0}
{"idx": 7282, "func": "If we're not setting a new resource, attach it to the old container's resource.", "target": 0}
{"idx": 7283, "func": "line 443", "target": 0}
{"idx": 7284, "func": "new instance to invoke run against", "target": 0}
{"idx": 7285, "func": "string used as error indicator and description of problems seen when checking for 0 or mulitple matches in DB", "target": 0}
{"idx": 7286, "func": "Dummy", "target": 0}
{"idx": 7287, "func": "figure out if we need to iterate through all the y-values to find the revised minY / maxY", "target": 0}
{"idx": 7288, "func": "should be the default, as it integrates better in ant.", "target": 0}
{"idx": 7289, "func": "//FIX:::", "target": 0}
{"idx": 7290, "func": "See if it was specified.", "target": 0}
{"idx": 7291, "func": "Technically incorrect here - we need to wrap null values as bsh.Primitive.NULL. However the This.invokeMethod() will do that much for us. We need to generate a conditional here to test for null and return Primitive.NULL", "target": 1}
{"idx": 7292, "func": "Count the number of empty strings", "target": 0}
{"idx": 7293, "func": "Enter the class to speed up the next search.", "target": 0}
{"idx": 7294, "func": "i18n[editextras.hour=Hour]", "target": 0}
{"idx": 7295, "func": "the current batch number is the latest batch for this entity type.", "target": 0}
{"idx": 7296, "func": "//{{{ getRequestCount() method", "target": 0}
{"idx": 7297, "func": "Record them as generic streams to record state during the loop that emulates recursion. //", "target": 0}
{"idx": 7298, "func": "Add context menu items to the object tree's view and procedure nodes.", "target": 0}
{"idx": 7299, "func": "Filtered for property keys to remove duplicates.", "target": 0}
{"idx": 7300, "func": "call the target for making the files dirty", "target": 0}
{"idx": 7301, "func": "//assertEquals(\"t2\",f2.invoke());", "target": 0}
{"idx": 7302, "func": "//{{{ isManagingFocus() method", "target": 0}
{"idx": 7303, "func": "select a tick unit that is the next one bigger than the current (log) range divided by 50", "target": 0}
{"idx": 7304, "func": "Color titleBgPaint = null;//new Color(200, 50, 50, 255);", "target": 0}
{"idx": 7305, "func": "FIXME (@author karlpeder): Is 3.2 the proper version of html to refer to?", "target": 1}
{"idx": 7306, "func": "Every codepoint is supported!", "target": 0}
{"idx": 7307, "func": "toolbar text is usually a bit shorter ;mod: 20040629 SWITT", "target": 0}
{"idx": 7308, "func": "//int progress = loadCatalogs(1); load tables with schema = null", "target": 0}
{"idx": 7309, "func": "TODO: map UML2 names to UML1.x names //$NON-NLS-1$ //$NON-NLS-1$", "target": 1}
{"idx": 7310, "func": "TODO: MVW: This needs rethinking/rework! I have the following questions: Why does it not search for a stereotype in the namespace using properties and only create a new stereotype if it will actually be used? Ie, why is there not a getStereotype(String name, String baseClass)? (edited by d00mst)", "target": 1}
{"idx": 7311, "func": "We call getKeyFromResultSet() here so that we can know the key value upon which to perform the breaking logic. However, it is also then called from getRowFromResultSet() which is certainly not the most efficient. But the call here is needed, and there currently is no other way without refactoring of the doQuery()/getRowFromResultSet() methods", "target": 0}
{"idx": 7312, "func": "refresh doesn't cascade to uninitialized collections", "target": 0}
{"idx": 7313, "func": "MVW: This can never happen, isn't it?", "target": 0}
{"idx": 7314, "func": "Skip the 2 lines //<?xml version=\"1.0\" encoding=\"UTF-8\" ?> //<!DOCTYPE pgml SYSTEM \"pgml.dtd\">", "target": 0}
{"idx": 7315, "func": "path is between idx='pathStartIndex' (inclusive) and idx='pathEndIndex' (exclusive)", "target": 0}
{"idx": 7316, "func": "we check the input tag type for image", "target": 0}
{"idx": 7317, "func": "//////////////////////////////////////////////////////////////instance variables", "target": 0}
{"idx": 7318, "func": "Set the status for the node", "target": 0}
{"idx": 7319, "func": "Error messages", "target": 0}
{"idx": 7320, "func": "need to let \\b through so that backspace will work in HistoryTextFields", "target": 0}
{"idx": 7321, "func": "push false", "target": 0}
{"idx": 7322, "func": "//{{{ setLabel() method", "target": 0}
{"idx": 7323, "func": "should be the first, but just to be safe...", "target": 0}
{"idx": 7324, "func": "@see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int) Override setBounds to keep shapes looking right.", "target": 0}
{"idx": 7325, "func": "Sanity check. Ditch it if you want faster performance", "target": 0}
{"idx": 7326, "func": "//DocumentParser parser = new DocumentParser(); decode message body with respect to charset", "target": 0}
{"idx": 7327, "func": "FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode", "target": 1}
{"idx": 7328, "func": "Check source works", "target": 0}
{"idx": 7329, "func": "properties that we have tried to load, and not found in the database", "target": 0}
{"idx": 7330, "func": "lame generics issues: making Segment class static and manually inserting cache reference to work around various problems generically referencing methods/vars across classes.", "target": 1}
{"idx": 7331, "func": "line 669", "target": 0}
{"idx": 7332, "func": "there can be only one PK in truth, but the model allows more than one.", "target": 0}
{"idx": 7333, "func": "seriesVisibleInLegendList", "target": 0}
{"idx": 7334, "func": "Return a JTextArea usable in the CellPopupDialog and fill in the value.", "target": 0}
{"idx": 7335, "func": "File is Comparable, so sorting is trivial", "target": 0}
{"idx": 7336, "func": "just as if Enter was pressed in another text field", "target": 0}
{"idx": 7337, "func": "if are more columns left, part page", "target": 0}
{"idx": 7338, "func": "//TODO: really bad, evil hack to fix!!!", "target": 1}
{"idx": 7339, "func": "ensures that active view is saved last, ie created last on next load, ie in front on next load", "target": 0}
{"idx": 7340, "func": "Javadoc for the API says this is OK", "target": 0}
{"idx": 7341, "func": "line 1258", "target": 0}
{"idx": 7342, "func": "We'll print our banner using eval(String) in order to exercise the parser and get the basic expression classes loaded... This ameliorates the delay after typing the first statement.", "target": 0}
{"idx": 7343, "func": "example: fdietz@jabber.org/Jabber-client -> remove \"/Jabber-client\"", "target": 0}
{"idx": 7344, "func": "Clear out any old information from a previous drag. //", "target": 0}
{"idx": 7345, "func": "more specifically : \"datetime [op] ?\" 1) if the operator is MINUS, we really cannot determine the expected type as either another datetime or numeric would be valid 2) if the operator is PLUS, the param needs to be of some numeric type", "target": 0}
{"idx": 7346, "func": "set mnemonic", "target": 0}
{"idx": 7347, "func": "Set the title for the first tab //$NON-NLS-1$ Remove the other tabs if present $NON-NLS-1$", "target": 0}
{"idx": 7348, "func": "Search all attributes found to those expected. If any don't match then turn off the found flag so that we search for the next matching tag.", "target": 0}
{"idx": 7349, "func": "target must be specified", "target": 0}
{"idx": 7350, "func": "(non-Javadoc) @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()", "target": 0}
{"idx": 7351, "func": "verify that baseTimeline is compatible with us", "target": 0}
{"idx": 7352, "func": "//i18n", "target": 0}
{"idx": 7353, "func": "ActionState, CallState, and SubactivityState have been replaced in UML 2.0 by explicitly modeled Actions", "target": 0}
{"idx": 7354, "func": "Determine the current content type.", "target": 0}
{"idx": 7355, "func": "get rid of embedded tabs not removed by trim()", "target": 0}
{"idx": 7356, "func": "If the destination is a DataType, then abort:", "target": 0}
{"idx": 7357, "func": "Make sure that the list will appear to be set to be empty. //", "target": 0}
{"idx": 7358, "func": "@see java.beans.PropertyChangeListener#propertyChange( java.beans.PropertyChangeEvent)", "target": 0}
{"idx": 7359, "func": "//For testing on the local machine //URL l_url = new URL(\"http://localhost:8081/services\");", "target": 0}
{"idx": 7360, "func": "All needed to ensure re-usablility", "target": 0}
{"idx": 7361, "func": "If eObject2 has been compared already... //", "target": 0}
{"idx": 7362, "func": "//{{{ insert() method", "target": 0}
{"idx": 7363, "func": "Special mode for debugging resource handling", "target": 0}
{"idx": 7364, "func": "TODO: This is a redundant invocation", "target": 1}
{"idx": 7365, "func": "//////////////////////////////////////////////////////////////TreeModel implementation - todo specific stuff", "target": 0}
{"idx": 7366, "func": "reserve space for the range axes...", "target": 0}
{"idx": 7367, "func": "//i18n[DumpApplicationCommand.error.combiningtempfiles=Error combining temp files into dump file]", "target": 0}
{"idx": 7368, "func": "copy last piece if any", "target": 0}
{"idx": 7369, "func": "EDIT MENU $NON-NLS-1$ From the Java Look and Feel Guidelines: If all items in a menu are disabled, then disable the menu. Makes sense.", "target": 0}
{"idx": 7370, "func": "//note that this implementation is kinda broken //for components with many-to-one associations", "target": 1}
{"idx": 7371, "func": "cached for efficiency...", "target": 0}
{"idx": 7372, "func": "new table - clear hash map", "target": 0}
{"idx": 7373, "func": "line 829", "target": 0}
{"idx": 7374, "func": "//{{{ getLineHighlightColor() method", "target": 0}
{"idx": 7375, "func": "register interest on contact selection changes", "target": 0}
{"idx": 7376, "func": "independent frame to allow it to be overlaid by the main frame //$NON-NLS-1$", "target": 0}
{"idx": 7377, "func": "TODO: Delete this class - unused", "target": 1}
{"idx": 7378, "func": "we do not actually propogate ANTLRExceptions as a cause, so log it here for diagnostic purposes", "target": 0}
{"idx": 7379, "func": "check box for whether to read contents during table load or not i18n[dataTypeBigDecimal.readContentsOnFirstLoad=Read contents when table is first loaded;]", "target": 0}
{"idx": 7380, "func": "Has read/write been closed or is it still open for business", "target": 0}
{"idx": 7381, "func": "i18n[sessionPropertiesSheet.close=Close]", "target": 0}
{"idx": 7382, "func": "has been set explicitly", "target": 0}
{"idx": 7383, "func": "default: don't retain", "target": 0}
{"idx": 7384, "func": "This is a temporary hack until the notation provider for a SD Message will be able to parse successfully when the sequence number is missing. Remove this method completely then.", "target": 1}
{"idx": 7385, "func": "site properties are loaded as default properties, overwriting jEdit's system properties", "target": 0}
{"idx": 7386, "func": "All braces pushed..", "target": 0}
{"idx": 7387, "func": "//setup save dialog", "target": 0}
{"idx": 7388, "func": "//++ These are JMX file attribute names and must not be changed $NON-NLS-1$", "target": 0}
{"idx": 7389, "func": "Only dump it once", "target": 0}
{"idx": 7390, "func": "//{{{ startElement() method", "target": 0}
{"idx": 7391, "func": "Silently ignore anything specified by caller attempt to continue", "target": 0}
{"idx": 7392, "func": "Convert attribute values: & to &amp; < to &lt; \" to &quot; \\t to &#x9; \\n to &#xA; \\r to &#xD;", "target": 0}
{"idx": 7393, "func": "See if plugin has any jars in lib dir.", "target": 0}
{"idx": 7394, "func": "There can be at most 4 hex digits per group.", "target": 0}
{"idx": 7395, "func": "//{{{ getSearchDialog() method", "target": 0}
{"idx": 7396, "func": "TODO: For UML2: Check if the type of the TV is String.", "target": 0}
{"idx": 7397, "func": "line started with comment", "target": 0}
{"idx": 7398, "func": "if other node type, we will just skip it", "target": 0}
{"idx": 7399, "func": "update treenode", "target": 0}
{"idx": 7400, "func": "tables that have at least one child table", "target": 0}
{"idx": 7401, "func": "FIXME: This is pretty gross; we should have a cleaner initialization that doesn't depend on package-visible fields and ideally is atomic, probably using an immutable structure we replace all at once. lazy, null when no groups defined", "target": 1}
{"idx": 7402, "func": "Test sending data as UTF-8, where user defined variables are used to set the value for form data", "target": 0}
{"idx": 7403, "func": "//{{{ doComplete() method", "target": 0}
{"idx": 7404, "func": "unrecoverable inputs", "target": 0}
{"idx": 7405, "func": "XXX - shouldn't this always return false in isolated mode?", "target": 1}
{"idx": 7406, "func": "//TODO: qualifiers (e.g., const) //TODO: stereotypes...", "target": 0}
{"idx": 7407, "func": "tick labels visible flag...", "target": 0}
{"idx": 7408, "func": "Try imported packages, e.g. \"import foo.bar.;\" in reverse order of import... (give later imports precedence...)", "target": 0}
{"idx": 7409, "func": "FIX: set the application name for Mac OS X", "target": 1}
{"idx": 7410, "func": "Add the new entries, including source, JRE container, and added variables and classpath containers. //", "target": 0}
{"idx": 7411, "func": "//TODO: ary_sort_check should be done here", "target": 1}
{"idx": 7412, "func": "union subclass support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 7413, "func": "axisLinePaint", "target": 0}
{"idx": 7414, "func": "Returns the base portion of the dynamic template path.", "target": 0}
{"idx": 7415, "func": "don't do this in static{} since we need jEdit.initMisc() run first so we have the jeditresource: protocol", "target": 0}
{"idx": 7416, "func": "SELECT //SEQSCHEMA,SEQNAME,DEFINER,DEFINERTYPE,OWNER,OWNERTYPE,SEQID,SEQTYPE,INCREMENT,START,MAXVALUE,MINVALUE, //NEXTCACHEFIRSTVALUE,CYCLE,CACHE,ORDER,DATATYPEID,SOURCETYPEID,CREATE_TIME,ALTER_TIME,PRECISION,ORIGIN, REMARKS FROM SYSCAT.SEQUENCES WHERE SEQNAME = ? and SEQSCHEMA = <schema>", "target": 0}
{"idx": 7417, "func": "That's it, we have a match!", "target": 0}
{"idx": 7418, "func": "Nodes and heap entries run from 1. Entry 0 for both the heap and nodes is a sentinel.", "target": 0}
{"idx": 7419, "func": "last mod file time", "target": 0}
{"idx": 7420, "func": "JPanel panel = (JPanel) this.getContentPane();", "target": 0}
{"idx": 7421, "func": "//i18n[DataSetUpdateableTableModelImpl.error.rowmatched=\\n Row {0} matched {1} rows in DB]", "target": 0}
{"idx": 7422, "func": "//{{{ PluginTableModel class", "target": 0}
{"idx": 7423, "func": "//_lafRegister.updateAllFrames();", "target": 0}
{"idx": 7424, "func": "Create the file input stream, and buffer everything over to the jar output stream", "target": 0}
{"idx": 7425, "func": "this only works because collection entries are kept in a sequenced map by persistence context (maybe we should do like entities and keep a separate sequences set...) //TODO: calling entrySet on an IdentityMap is SLOW!!", "target": 1}
{"idx": 7426, "func": "//{{{ Scroll vertically", "target": 0}
{"idx": 7427, "func": "Seems to be no change!", "target": 0}
{"idx": 7428, "func": "scripts should reside in <config-folder>/scripts/ directory", "target": 0}
{"idx": 7429, "func": "check number of cached MessageNodes //assertEquals(2, model.getMap().size());", "target": 0}
{"idx": 7430, "func": "shortcut key", "target": 0}
{"idx": 7431, "func": "Unfortunately, conversion to uppercase does not work properly for the Georgian alphabet, which has strange rules about case conversion. So we need to make one last check before exiting.", "target": 0}
{"idx": 7432, "func": "More constants needed by specs", "target": 0}
{"idx": 7433, "func": "CASE 1 : Comparing to another Month object --------------------------------------------", "target": 0}
{"idx": 7434, "func": "Fill 7 of value (byte) -19", "target": 0}
{"idx": 7435, "func": "use default account as fallback", "target": 0}
{"idx": 7436, "func": "Backref for $~, $1, etc", "target": 0}
{"idx": 7437, "func": "Read backwards until we read past the first physical sequential row with the key we are interested in loading", "target": 0}
{"idx": 7438, "func": "set From for redirecting; new: 20040629 SWITT", "target": 0}
{"idx": 7439, "func": "Change log.", "target": 0}
{"idx": 7440, "func": "i18n[oracle.triggerColumns=Columns]", "target": 0}
{"idx": 7441, "func": "Create list of interfaces to proxy (and make sure they really are interfaces)", "target": 0}
{"idx": 7442, "func": "//Needed for project deletion", "target": 0}
{"idx": 7443, "func": "replace some arguments by another field names (constants)", "target": 0}
{"idx": 7444, "func": "case 3", "target": 0}
{"idx": 7445, "func": "i18n[mysql.status=MySQL Status]", "target": 0}
{"idx": 7446, "func": "this.DATA = null; this.DATA = stat;", "target": 0}
{"idx": 7447, "func": "//add to the list", "target": 0}
{"idx": 7448, "func": "TODO: check threshold", "target": 1}
{"idx": 7449, "func": "//{{{ showGoToLineDialog() method", "target": 0}
{"idx": 7450, "func": "Wait for pending I/O requests", "target": 0}
{"idx": 7451, "func": "Determine the values that will remain and move them into the right order, if necessary. //", "target": 0}
{"idx": 7452, "func": "And hook it to the transition immediately, so that an exception can not cause it to remain dangling:", "target": 0}
{"idx": 7453, "func": "TODO: Change the linked operation.", "target": 0}
{"idx": 7454, "func": "Process the contents of the extent //", "target": 0}
{"idx": 7455, "func": "line 1155", "target": 0}
{"idx": 7456, "func": "Help document.", "target": 0}
{"idx": 7457, "func": "we have to give a message to user and set the system to unsaved!", "target": 0}
{"idx": 7458, "func": "second argument is allowed, but ignored (MRI)", "target": 0}
{"idx": 7459, "func": "cache these since they are stateless this one could even be static...", "target": 0}
{"idx": 7460, "func": "value[outputPos];", "target": 0}
{"idx": 7461, "func": "Create a TaggedValue with a tag/type matching our source module filename and a value of the file's last modified timestamp. TODO: This functionality needs to be moved someplace useful if it's needed, otherwise it can be deleted. - tfm - 20070217", "target": 1}
{"idx": 7462, "func": "Try the built-in mime table", "target": 0}
{"idx": 7463, "func": "//ignore release of an already-closed funnel", "target": 0}
{"idx": 7464, "func": "ArtifactName Type Installed? Install/Update/Remove", "target": 0}
{"idx": 7465, "func": "TODO: This is updating model on a per character basis as well as unregistering/reregistering event listeners every character - very wasteful - tfm", "target": 1}
{"idx": 7466, "func": "i18n[dataTypeTime.full=Full ({0})]", "target": 0}
{"idx": 7467, "func": "i18n[generalSessionPropertiesPanel.table=Table]", "target": 0}
{"idx": 7468, "func": "Calculate the insets for the JTREE, not the viewport the tree is in. This makes it a bit messy. @see java.awt.dnd.Autoscroll#getAutoscrollInsets()", "target": 0}
{"idx": 7469, "func": "jonasroot", "target": 0}
{"idx": 7470, "func": "map to new reference", "target": 0}
{"idx": 7471, "func": "FIXME: I think this chunk is equivalent to MRI id2name (and not our public method id2name). Make into method if used more than once.", "target": 1}
{"idx": 7472, "func": "convert number conversion issue into IO issue for consistancy", "target": 0}
{"idx": 7473, "func": "in UML2, the target is already the \"expression\" (Opaque...)", "target": 0}
{"idx": 7474, "func": "----- setup similar to the super() implementation -----", "target": 0}
{"idx": 7475, "func": "can't select, just have to do a blocking call", "target": 0}
{"idx": 7476, "func": "Select Buttons", "target": 0}
{"idx": 7477, "func": "//skip the driving table", "target": 0}
{"idx": 7478, "func": "Get Tooltip for Icon", "target": 0}
{"idx": 7479, "func": "handle the (assumed) valid cases: #1 - the only valid datetime addition synatx is one or the other is a datetime (but not both)", "target": 0}
{"idx": 7480, "func": "The value is not encoded", "target": 0}
{"idx": 7481, "func": "//{{{ _endVFSSession() method", "target": 0}
{"idx": 7482, "func": "eg user just closed a view and didn't focus another", "target": 0}
{"idx": 7483, "func": "push 'this'", "target": 0}
{"idx": 7484, "func": "//DMS this doesn't really produce nice output. //", "target": 1}
{"idx": 7485, "func": "Enough to read the header column names Get the first line, and see if it is the header", "target": 0}
{"idx": 7486, "func": "Getters and Setters", "target": 0}
{"idx": 7487, "func": "(non-Javadoc) @see org.columba.mail.folder.Folder#isTrashFolder()", "target": 0}
{"idx": 7488, "func": "TEXTAREA LABEL", "target": 0}
{"idx": 7489, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsDifferentTableCorrelationNames()", "target": 0}
{"idx": 7490, "func": "Handle ~user paths.", "target": 0}
{"idx": 7491, "func": "add $RUBYLIB paths", "target": 0}
{"idx": 7492, "func": "Also initialises JMeter logging", "target": 0}
{"idx": 7493, "func": "the other obj is null, so see if this non-null obj contains a null value, which is equivilent. Assume that if we have read some of the data and we still have _data == null, then the value in the DB is actually null.", "target": 0}
{"idx": 7494, "func": "FIXME: arg_concat logic missing for opt_call_args", "target": 1}
{"idx": 7495, "func": "TODO: Rationalize this with getModelElementContainer", "target": 1}
{"idx": 7496, "func": "i18n[SchemaPropertiesPanel.printCacheFileLocation=Print cache file path to message panel]", "target": 0}
{"idx": 7497, "func": "Notation events are likely to cause GEF/Swing operations, so we dispatch them on the Swing event thread as a convenience so that the receiving notationChanged() methods don't need to deal with it", "target": 0}
{"idx": 7498, "func": "build the command line from what we got. the format is cleartool mklbtype [options...] type-selector... as specified in the CLEARTOOL help", "target": 0}
{"idx": 7499, "func": "----------- get/set methods ------------------- //", "target": 0}
{"idx": 7500, "func": "protected void initializeTableModel() { tableModel = new ObjectTableModel( new String[] { ArgumentsPanel.COLUMN_NAMES_0, ArgumentsPanel.COLUMN_NAMES_1, ENCODE_OR_NOT, INCLUDE_EQUALS }, new Functor[] { new Functor(\"getName\"), new Functor(\"getValue\"), new Functor(\"isAlwaysEncoded\"), new Functor(\"isUseEquals\") }, new Functor[] { new Functor(\"setName\"), new Functor(\"setValue\"), new Functor(\"setAlwaysEncoded\"), new Functor(\"setUseEquals\") }, new Class[] { String.class, String.class, Boolean.class, Boolean.class }); }", "target": 0}
{"idx": 7501, "func": "set the ps to read from the file we just created.", "target": 0}
{"idx": 7502, "func": "i18n[DiffExecutor.noDiffsMessage=No differences were detected]", "target": 0}
{"idx": 7503, "func": "user cancelled sending operation open composer view", "target": 0}
{"idx": 7504, "func": "(", "target": 0}
{"idx": 7505, "func": "misc ------------------------------------------------------------------------", "target": 0}
{"idx": 7506, "func": "Keep track of any changes to the command information.", "target": 0}
{"idx": 7507, "func": "TODO: Document! @author penyaskito", "target": 1}
{"idx": 7508, "func": "Creating a filter that catches \".tst\" files.", "target": 0}
{"idx": 7509, "func": "TODO should errors be thrown back through RMI?", "target": 1}
{"idx": 7510, "func": "Called by CSVRead(x,next) - sets the row to nil so the next row will be picked up the next time round", "target": 0}
{"idx": 7511, "func": "//i18n[DerbyPlugin.prefsHint=Set preferences for Derby Plugin]", "target": 0}
{"idx": 7512, "func": "FocusManager.getInstance().delete();", "target": 0}
{"idx": 7513, "func": "JPanel panel = new JPanel();panel.setLayout( new BoxLayout( panel, BoxLayout.X_AXIS ) );panel.add( hostLabel );centerPanel.add( panel );", "target": 0}
{"idx": 7514, "func": "If we can open an input stream, then the path is there, and we have a good URL. //", "target": 0}
{"idx": 7515, "func": "Our cleartext as bytes //$NON-NLS-1$", "target": 0}
{"idx": 7516, "func": "scale image", "target": 0}
{"idx": 7517, "func": "Set the content encoding", "target": 0}
{"idx": 7518, "func": "Trim off the segments corresponding to the package nesting. //", "target": 0}
{"idx": 7519, "func": "if it's not in the class hash, and not marked as non-existent, try loading it from the CLASSPATH", "target": 0}
{"idx": 7520, "func": "We just copied the last table. Now it is safe to copy the constraints.(Well, that is, if all FK dependencies are met in the group of tables being copied. TODO: new feature could be to examine table list for FK's in tables not in the list then prompt the user to add those missing tables to the list.", "target": 1}
{"idx": 7521, "func": "Does this dialect support the UNIQUE column syntax?", "target": 1}
{"idx": 7522, "func": "//{{{ getLineLength() method", "target": 0}
{"idx": 7523, "func": "write output to file", "target": 0}
{"idx": 7524, "func": "i18n[UpdateManagerDialog.checkButtonLabel=Check]", "target": 0}
{"idx": 7525, "func": "none to register for generic", "target": 0}
{"idx": 7526, "func": "//i8n[syntax.abrevNewLineNote=Use \\n in corrections for line break. Note: Bookmarks are more powerful than abreviations.]", "target": 0}
{"idx": 7527, "func": "For a Transition use indirection through source StateVertex", "target": 0}
{"idx": 7528, "func": "initialize the Plugins branch of the options tree", "target": 0}
{"idx": 7529, "func": "Appears not to be used - however it is invoked via the Functor class", "target": 0}
{"idx": 7530, "func": "we can't use SystemClassLoader here, because that wouldn't work with java webstart, ResourceBundle uses its own internal classloader if no classloader is given -> set classloader = null", "target": 1}
{"idx": 7531, "func": "topPanel.add(iconLabel, BorderLayout.WEST);", "target": 0}
{"idx": 7532, "func": "This is for the in2out feature. //", "target": 0}
{"idx": 7533, "func": "//int iconOffset = getHorizontalAlignment() + getIcon().getIconWidth() + 1;", "target": 0}
{"idx": 7534, "func": "TODO: The project should be bound to the action when it is created?", "target": 1}
{"idx": 7535, "func": "@see org.argouml.profile.internal.ocl.ModelInterpreter#invokeFeature(java.util.Map, java.lang.Object, java.lang.String, java.lang.String, java.lang.Object[])", "target": 0}
{"idx": 7536, "func": "Comment.name text field - editing disabled", "target": 0}
{"idx": 7537, "func": "Silly bug workaround #8694. If you look at the above code, note that we restore the saved caret position first, then scroll to the saved location. However, the caret changing can itself result in scrolling to a different location than what was saved; and since moveCaretPosition() calls updateBracketHighlight(), the bracket highlight's out of bounds calculation will rely on a different set of physical first/last lines than what we will end up with eventually. Instead of confusing the user with status messages that appear at random when switching buffers, we simply hide the message altogether.", "target": 1}
{"idx": 7538, "func": "Should not enter the loop next time But should continue to the end of the loop", "target": 0}
{"idx": 7539, "func": "promise to implement zero to three", "target": 0}
{"idx": 7540, "func": "Note: object is only used here for precondition... get rid of it?", "target": 1}
{"idx": 7541, "func": "//i18n[ColumnDetailsDialog.columnNameTootTip={0} does not //support altering column name]", "target": 0}
{"idx": 7542, "func": "throw redo error if we're still good", "target": 0}
{"idx": 7543, "func": "first read the .argo file from Zip", "target": 0}
{"idx": 7544, "func": "Forward all the SSLSocket methods to the input socket", "target": 0}
{"idx": 7545, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getVersion()", "target": 0}
{"idx": 7546, "func": "light yellow", "target": 0}
{"idx": 7547, "func": "disable plugin", "target": 0}
{"idx": 7548, "func": "i18n[UdfDetailsTab.title=Details]", "target": 0}
{"idx": 7549, "func": "outline stroke index", "target": 0}
{"idx": 7550, "func": "For ant setup", "target": 0}
{"idx": 7551, "func": "Both eObject1 and eObject2 are not null. If eObject1 has been compared already... //", "target": 0}
{"idx": 7552, "func": "could not get canonical path, just use given path", "target": 0}
{"idx": 7553, "func": "throws IOE, ME", "target": 0}
{"idx": 7554, "func": "//{{{ countNewlines() method", "target": 0}
{"idx": 7555, "func": "the default group is always at index 0", "target": 0}
{"idx": 7556, "func": "no-op; CCS did not have such a concept", "target": 0}
{"idx": 7557, "func": "//c.fill = GridBagConstraints.HORIZONTAL;", "target": 0}
{"idx": 7558, "func": "refer to comment in StatefulPersistenceContext.addCollection()", "target": 0}
{"idx": 7559, "func": "i18n[sqlbookmark.noSQLPanel=To run a bookmark you must open this window\\nusing the \"Edit Bookmarks\" toolbar button of a Session window.\\nThe bookmars SQL Code will then be written to the Session's SQL editor.]", "target": 0}
{"idx": 7560, "func": "@see java.util.Collection#retainAll(java.util.Collection)", "target": 0}
{"idx": 7561, "func": "Do this here because getExtendedMetaData() is used during initialization and the mappings are are populated the first time it's fetched which will miss the packages we add as we initialize the tree. //", "target": 0}
{"idx": 7562, "func": "Uh-oh! We shouldn't have more than one plugin registering a custom exception handler for a given session. The first one wins and all others get an error message.", "target": 0}
{"idx": 7563, "func": "set original node of annotations (to allow get methods to work correctly)", "target": 0}
{"idx": 7564, "func": "we consume this to work around the bug where A+TAB window switching activates the menu bar on Windows.", "target": 1}
{"idx": 7565, "func": "i18n[editWhereColsPanel.limitColsInCellHint=Limit columns used in WHERE clause when editing table]", "target": 0}
{"idx": 7566, "func": "jvc has no option for source-path so we will add it to classpath.", "target": 0}
{"idx": 7567, "func": "CASE 1 : Comparing to another Day object ----------------------------------------", "target": 0}
{"idx": 7568, "func": "Set the visibility annotations for the EstructuralFeature. //", "target": 0}
{"idx": 7569, "func": "add attachments (mimeparts) from view to the model", "target": 0}
{"idx": 7570, "func": "Synchronize and re-check to avoid creating more than one Selector per provider //", "target": 0}
{"idx": 7571, "func": "OK, Java 1.3.", "target": 0}
{"idx": 7572, "func": "// settings.setComponentTuplizerFactory( this.getComponentTuplizerFactory() );", "target": 0}
{"idx": 7573, "func": "isNCName(int):boolean", "target": 0}
{"idx": 7574, "func": "Can occur at run-time could be caused by the bsh Exceptions: EvalError, ParseException or TargetError", "target": 0}
{"idx": 7575, "func": "Process the final list of internal transitions, and hook it to the state:", "target": 0}
{"idx": 7576, "func": "Skip over the command that threw the exception. //", "target": 0}
{"idx": 7577, "func": "draw the header on every page", "target": 0}
{"idx": 7578, "func": "System.err.println(\"Warning: Cannot clone '\" + sourceNode.getContents() + \"'\");", "target": 0}
{"idx": 7579, "func": "if a label has been supplied and it is a revision label, use the raw the view as the snapshot", "target": 0}
{"idx": 7580, "func": "Check all the keys are in the default props file", "target": 0}
{"idx": 7581, "func": "QName l_qn = new QName( \"http://sqlvalidator.mimer.com/v1\", \"SessionData\" );", "target": 0}
{"idx": 7582, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider#getCopyDestSession()", "target": 0}
{"idx": 7583, "func": "no check for 1<=kind<=3 - only internal use therefore check it while development", "target": 0}
{"idx": 7584, "func": "Save settings in case user kills the backgrounded jEdit process", "target": 0}
{"idx": 7585, "func": "This next bit is to allow for both unsaved-value=\"negative\" and for \"older\" behavior where version number did not get seeded if it was already set in the object TODO: shift it into unsaved-value strategy", "target": 1}
{"idx": 7586, "func": "i18n[RefactoringPreferencesPanel.qualifyCheckboxLabel=Qualify table names in scripts with schema]", "target": 0}
{"idx": 7587, "func": "@see java.awt.event.MouseListener#mouseClicked( java.awt.event.MouseEvent)", "target": 0}
{"idx": 7588, "func": "//ITEM LABEL PAINT /////////////////////////////////////////////////////", "target": 0}
{"idx": 7589, "func": "Initialize simple dependencies", "target": 0}
{"idx": 7590, "func": "next, iterate over all optional args, until no more arguments", "target": 0}
{"idx": 7591, "func": "if there are no stereotypes, we return (0,0), preventing double lines in the class (see issue 4939)", "target": 0}
{"idx": 7592, "func": "we are presumably running a precompiled class; load directly", "target": 0}
{"idx": 7593, "func": "POP3s / IMAPs", "target": 0}
{"idx": 7594, "func": "Register our last chance exception handler", "target": 0}
{"idx": 7595, "func": "restore last selected tab", "target": 0}
{"idx": 7596, "func": "//TODO: cache the persister, this shows up in yourkit", "target": 1}
{"idx": 7597, "func": "work around for broken FTP plugin!", "target": 1}
{"idx": 7598, "func": "We'll assume that all the CreateCopyCommand's and InitializeCopyCommand's can execute. //", "target": 0}
{"idx": 7599, "func": "Tooltips and questions", "target": 0}
{"idx": 7600, "func": "//WARNING: We trim the values of all the attributes because //Some extension declarations are badly defined (ie have spaces //after version or vendorID)", "target": 0}
{"idx": 7601, "func": "@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabRefresh()", "target": 0}
{"idx": 7602, "func": "add action to menu", "target": 0}
{"idx": 7603, "func": "Does not appear to be used", "target": 1}
{"idx": 7604, "func": "//dmo //zero when the parameter is not set", "target": 0}
{"idx": 7605, "func": "up two slots, for long's two halves", "target": 0}
{"idx": 7606, "func": "use COUNT as the default. This mimics the old behavior, although NONE might be a better option moving forward in the case of callable", "target": 1}
{"idx": 7607, "func": "set to default thread group", "target": 0}
{"idx": 7608, "func": "Find all beans out there and check their resource property files: - Check that non-default property files don't have any extra keys. - Check all necessary properties are defined at least in the default property file, except for beans whose name contains \"Experimental\" or \"Alpha\". TODO: - Check property files don't have duplicate keys (is this important)", "target": 1}
{"idx": 7609, "func": "check if firstname, middlename or lastname contain only valid characters", "target": 0}
{"idx": 7610, "func": "// String BLINK_CARET = \"blinkCaret\"; // String BLOCK_CARET_ENABLED = \"blockCaretEnabled\"; // String BRACKET_HIGHLIGHTING = \"bracketHighlighting\"; // String BRACKET_HIGHLIGHT_COLOR = \"bracketHighlightColor\"; // String CARET_COLOR = \"caretColor\";", "target": 0}
{"idx": 7611, "func": "entry is the first element of this bucket", "target": 0}
{"idx": 7612, "func": "(non-Javadoc) @see org.apache.log.LogTarget#processEvent(org.apache.log.LogEvent)", "target": 0}
{"idx": 7613, "func": "Renames the source column.", "target": 0}
{"idx": 7614, "func": "range", "target": 0}
{"idx": 7615, "func": "implies lastModified == 0", "target": 0}
{"idx": 7616, "func": "Start of string ([, (, {, <, ', \", \\n)", "target": 0}
{"idx": 7617, "func": "Raise an error if arity does not match requirements", "target": 0}
{"idx": 7618, "func": "add every header from HeaderList to the table as MessageNode", "target": 0}
{"idx": 7619, "func": "//sortJListModel(ruleLibraryList);", "target": 0}
{"idx": 7620, "func": "no need to sync as one per instance", "target": 0}
{"idx": 7621, "func": "Java does not support this encoding so we have to handle it manually.", "target": 0}
{"idx": 7622, "func": "We only look at singletons", "target": 0}
{"idx": 7623, "func": "Tell sampler to do multipart, even if we have no files to upload", "target": 0}
{"idx": 7624, "func": "For a deployment diagram, not just any namespace will do - we need a package.", "target": 0}
{"idx": 7625, "func": "In case of BSF and JSR elements i want to add textAreaEditor as a listener to scriptLanguage ComboBox.", "target": 0}
{"idx": 7626, "func": "//outlineStroke", "target": 0}
{"idx": 7627, "func": "public Hashtable getProcessedFiles() { return processedFiles; }", "target": 0}
{"idx": 7628, "func": "i do believe the getSimpleName() will end in ;1 if it's a procedure and ;0 if it's a UDF.", "target": 0}
{"idx": 7629, "func": "line 510", "target": 0}
{"idx": 7630, "func": "secondaryDatasetRangeAxisMap...", "target": 0}
{"idx": 7631, "func": "(non-Javadoc) @see java.util.Observer#update(java.util.Observable, java.lang.Object)", "target": 0}
{"idx": 7632, "func": "//{{{ updatePreview() method", "target": 0}
{"idx": 7633, "func": "The value is already encoded by the user Must decode the value now, so that when the httpclient encodes it, we end up with the same value as the user had entered.", "target": 0}
{"idx": 7634, "func": "'12345'", "target": 0}
{"idx": 7635, "func": "3. Determine the channel that the user wants (stable or snapshot)", "target": 0}
{"idx": 7636, "func": "Searches for a stereotype just like the given stereotype in all given models (and their sub-namespaces). The given stereotype can not have its namespace set yet; otherwise it will be returned itself! TODO: This function should not take a stereotype object as parameter, but a name and a baseclass. <p> TODO: Currently only works for stereotypes with only one baseclass. <p> TODO: Should it only search for stereotypes owned by the Model object? @param models a collection of models @param stereo is the given stereotype @return Stereotype", "target": 1}
{"idx": 7637, "func": "Save off selections so that selection/focus can be restored later.", "target": 0}
{"idx": 7638, "func": "API not yet generic throws ME", "target": 0}
{"idx": 7639, "func": "//private JCheckBox[] chFields;", "target": 0}
{"idx": 7640, "func": "Memory status", "target": 0}
{"idx": 7641, "func": "//{{{ paintHeader() method", "target": 0}
{"idx": 7642, "func": "Maximum", "target": 0}
{"idx": 7643, "func": "//{{{ recalculateVisibleLines() method", "target": 0}
{"idx": 7644, "func": "first label", "target": 0}
{"idx": 7645, "func": "uncomment to enable action", "target": 0}
{"idx": 7646, "func": "check dataset with one time period", "target": 0}
{"idx": 7647, "func": "//testLongVarbinaryColType(sourceName, destName); //testNumericColType(sourceName, destName); //testRealColType(sourceName, destName); //testSmallIntColType(sourceName, destName); //testTimestampColType(sourceName, destName); //testTimeColType(sourceName, destName); //testTinyIntColType(sourceName, destName);", "target": 0}
{"idx": 7648, "func": "If we got back null we interpret this as meaning delete the reference to the extension point from the use case, otherwise we set the fields of the extension point to the values in newEp.", "target": 0}
{"idx": 7649, "func": "if the collapsible is collapsed, we do not want its border to be painted.", "target": 0}
{"idx": 7650, "func": "@see org.argouml.uml.ui.SourcePathController#getSourcePath(java.lang.Object)", "target": 0}
{"idx": 7651, "func": "system id", "target": 0}
{"idx": 7652, "func": "We need to be careful that we don't end up requiring the no namespace package just because the feature is unqualified. //", "target": 0}
{"idx": 7653, "func": "Initialize data types", "target": 0}
{"idx": 7654, "func": "$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$", "target": 0}
{"idx": 7655, "func": "@see org.argouml.uml.diagram.ui.FigNodeModelElement#updateListeners(java.lang.Object)", "target": 0}
{"idx": 7656, "func": "show/hide new toolbar", "target": 0}
{"idx": 7657, "func": "//private File addressbookFile;", "target": 0}
{"idx": 7658, "func": "OK to call TestBeanHelper.prepare()", "target": 0}
{"idx": 7659, "func": "We have a default", "target": 0}
{"idx": 7660, "func": "need to call Mode.init() if the file name or first line globs change", "target": 0}
{"idx": 7661, "func": "regexp for correct timestamp", "target": 0}
{"idx": 7662, "func": "Serveral DBs automatically create an index for primary key fields and return this index in getIndexInfo(). We remove this index from the script because it would break the script with an index already exists error.", "target": 0}
{"idx": 7663, "func": "message list", "target": 0}
{"idx": 7664, "func": "private ConfigFrame frame;", "target": 0}
{"idx": 7665, "func": "The assumption here is that the 'in' stream provides proper available() support. If available() always returns 0, we'll hang!", "target": 0}
{"idx": 7666, "func": "//{{{ AWT stuff", "target": 0}
{"idx": 7667, "func": "don't show splash screen if there is a file named 'nosplash' in the settings directory", "target": 0}
{"idx": 7668, "func": "renderingHints", "target": 0}
{"idx": 7669, "func": "Add the new typed var", "target": 0}
{"idx": 7670, "func": "Explicit zero in MRI returns immediately", "target": 0}
{"idx": 7671, "func": "line 1473", "target": 0}
{"idx": 7672, "func": "Just put the whole postbody as the value of a parameter //used when postData is pure xml (ex. an xml-rpc call)", "target": 0}
{"idx": 7673, "func": "childs", "target": 0}
{"idx": 7674, "func": "message size should be at least 1 KB", "target": 0}
{"idx": 7675, "func": "promise to implement one to three with block", "target": 0}
{"idx": 7676, "func": "//\\t\\n\\\"\\\\'`@$><=;|&{(", "target": 0}
{"idx": 7677, "func": "Create SQL_TOKEN nodes for the columns.", "target": 0}
{"idx": 7678, "func": "This method is called to build arguments for a block!", "target": 0}
{"idx": 7679, "func": "result.append(\", \");", "target": 0}
{"idx": 7680, "func": "//copy the properties file", "target": 0}
{"idx": 7681, "func": "//{{{ osok() method", "target": 0}
{"idx": 7682, "func": "when the x-values are sorted in descending order, the lower bound is found by calculating relative to the xHigh value", "target": 0}
{"idx": 7683, "func": "following the update the priority should be equivalent to Decision.UNSPEC", "target": 0}
{"idx": 7684, "func": "'basePaint' : immutable, no need to clone reference", "target": 0}
{"idx": 7685, "func": "//return currentId;", "target": 0}
{"idx": 7686, "func": "Can we produce IOError which bypasses a close?", "target": 0}
{"idx": 7687, "func": "Needes to be done via event queque because adding the session to the drop down happens via the event queue too.", "target": 0}
{"idx": 7688, "func": "//yyLhs 496", "target": 0}
{"idx": 7689, "func": "A HTTP GET request, with UTF-8 encoding", "target": 0}
{"idx": 7690, "func": "line 666", "target": 0}
{"idx": 7691, "func": "TODO: This needs to be double checked. - tfm", "target": 1}
{"idx": 7692, "func": "String catalog, String schema, String simpleName, String tableType, String remarks,", "target": 0}
{"idx": 7693, "func": "1k - the previous 100k made no sense (there's tons of buffers elsewhere in the chain) and it caused OOM when many concurrent uploads were being done. Could be fixed by increasing the evacuation ratio in bin/jmeter[.bat], but this is better.", "target": 0}
{"idx": 7694, "func": "not the same device (would be \"\" on Linux/Unix)", "target": 0}
{"idx": 7695, "func": "XXX Wrong, but will have to do for now", "target": 1}
{"idx": 7696, "func": "---- telephoneTextField4 ----", "target": 0}
{"idx": 7697, "func": "could refactor these a bit", "target": 1}
{"idx": 7698, "func": "//{{{ addStyleChoice() method", "target": 0}
{"idx": 7699, "func": "send notification event @see org.columba.mail.gui.message.TextViewer", "target": 0}
{"idx": 7700, "func": "Get key including \"=\"", "target": 0}
{"idx": 7701, "func": "We need this method to satisfy one of the Interfaces we implement, but since we have moved all operations to the DataType sub-panels which initialize their own data during creation, there is nothing for us to do here", "target": 0}
{"idx": 7702, "func": "So we can detect extra entries", "target": 0}
{"idx": 7703, "func": "When the user is typing, etc, we don't want the caret to blink", "target": 0}
{"idx": 7704, "func": "remove all of the listeners", "target": 0}
{"idx": 7705, "func": "//{{{ findMatchingBracket() method", "target": 0}
{"idx": 7706, "func": "Remember the static instance. //", "target": 0}
{"idx": 7707, "func": "@see org.argouml.cognitive.Poster#getClarifier()", "target": 0}
{"idx": 7708, "func": "add color selection to reference", "target": 0}
{"idx": 7709, "func": "Continue and return null.", "target": 0}
{"idx": 7710, "func": "This does the assignment!", "target": 0}
{"idx": 7711, "func": "------------ methods that override JTree methods ---------", "target": 0}
{"idx": 7712, "func": "generate xml document", "target": 0}
{"idx": 7713, "func": "end class StylePanelFigRRect", "target": 0}
{"idx": 7714, "func": "send all messages", "target": 0}
{"idx": 7715, "func": "line 1647", "target": 0}
{"idx": 7716, "func": "PKTABLE_NAME PKCOLUMN_NAME FKCOLUMN_NAME FK_NAME", "target": 0}
{"idx": 7717, "func": "?< | boolean | True if the modification time of file1 is prior to that of file2", "target": 0}
{"idx": 7718, "func": "if a directory is selected, create new dir in there. if a file is selected, create new dir inside its parent.", "target": 0}
{"idx": 7719, "func": "We're going to change the name immediately, so just use \"\"", "target": 0}
{"idx": 7720, "func": "only draw if we have good values", "target": 0}
{"idx": 7721, "func": "//build table of Pi values", "target": 0}
{"idx": 7722, "func": "make sure descriptor is registered", "target": 0}
{"idx": 7723, "func": "If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //", "target": 0}
{"idx": 7724, "func": "only if tempfile was corrupted", "target": 0}
{"idx": 7725, "func": "Foreign Key", "target": 0}
{"idx": 7726, "func": "TODO: use a generator here", "target": 1}
{"idx": 7727, "func": "here we do a check to see if the user is installing the \"Legacy\" theme, and reset the bar painters in that case...", "target": 0}
{"idx": 7728, "func": "4. Make sure the only FigGroups on a diagram are also FigNodes The report", "target": 0}
{"idx": 7729, "func": "//\"org.argouml.notation.providers\",//fails because sub-packages fail (?) //\"org.argouml.notation.providers.java\", //\"org.argouml.notation.providers.uml\", //\"org.argouml.notation\",//fails because sub-packages fail (?) //\"org.argouml.notation.ui\",", "target": 0}
{"idx": 7730, "func": "skip autosave files", "target": 0}
{"idx": 7731, "func": "In Oracle, matchFull modifier is not supported", "target": 0}
{"idx": 7732, "func": "overflow character from last data chunk.", "target": 0}
{"idx": 7733, "func": "Append the catalog path of the nested catalog", "target": 0}
{"idx": 7734, "func": "axisLineStroke", "target": 0}
{"idx": 7735, "func": "AbstractFolder.append also automatically removes the folder from its parent", "target": 0}
{"idx": 7736, "func": "//String path = \"/release/snapshot/\";", "target": 0}
{"idx": 7737, "func": "these are all simple cases that don't require the heavier defined logic", "target": 0}
{"idx": 7738, "func": "need to loosen this to any throwable... do we need to handle that in interpreter somewhere? check first...", "target": 1}
{"idx": 7739, "func": "If this dot has already been resolved, stop now.", "target": 0}
{"idx": 7740, "func": "//{{{ Get ready", "target": 0}
{"idx": 7741, "func": "... delete it when Columba exists instead", "target": 0}
{"idx": 7742, "func": "XMLReader used to validation process", "target": 0}
{"idx": 7743, "func": "Make the line dashed", "target": 0}
{"idx": 7744, "func": "This is not an expression that computes anything", "target": 0}
{"idx": 7745, "func": "Searches for a type/classifier with name s. If the type is not found, a new type is created and added to the current namespace. <p> TODO: Move to Model subsystem - tfm 20070307 @param s the name of the type/classifier to be found @return Classifier", "target": 1}
{"idx": 7746, "func": "Returns the destination of a relation or link. The destination of a relation is defined as the ModelElement that receives this relation. If there are more then 1 destinations, only the first is returned. If there is no destination, null is returned. Examples of sources include classifiers that are types to associationends, usecases that are bases to extend and include relations and so on. In the case of an association, the destination is defined as the type of the second element in the connections list.<p> TODO: move this method to a generic ModelHelper @param relationship is the relation @return object", "target": 1}
{"idx": 7747, "func": "//{{{ getEncodings() method", "target": 0}
{"idx": 7748, "func": "// JInternalFrame[] frames = GUIUtils.getOpenNonToolWindows(getDesktopPane().getAllFrames()); // _app.getActionCollection().internalFrameOpenedOrClosed(frames.length);", "target": 0}
{"idx": 7749, "func": "//////////////////////////////////////////////////////////////events", "target": 0}
{"idx": 7750, "func": "At least set the references that we were able to resolve, if any. //", "target": 0}
{"idx": 7751, "func": "LOOP COUNT", "target": 0}
{"idx": 7752, "func": "word char; keep going", "target": 0}
{"idx": 7753, "func": "//throw new CError();", "target": 0}
{"idx": 7754, "func": "Get the title if one is specified", "target": 0}
{"idx": 7755, "func": "////////////////LOW-LEVEL CLASS VARIABLE INTERFACE //////////////fetch/store/list class variables for this module //", "target": 0}
{"idx": 7756, "func": "Font font = MainInterface.columbaTheme.getControlTextFont();", "target": 0}
{"idx": 7757, "func": "leave stack alone", "target": 0}
{"idx": 7758, "func": "store the token just read for next time", "target": 0}
{"idx": 7759, "func": "Make sure they are closed no matter what bad thing happens. //", "target": 0}
{"idx": 7760, "func": "save the project into a new file", "target": 0}
{"idx": 7761, "func": "Since this timer must be started when SQuirreL is launched, wait a couple of minutes for SQuirreL to get done initializing the UI.", "target": 0}
{"idx": 7762, "func": "//row 2: background paint for the chart", "target": 0}
{"idx": 7763, "func": "todo : look at optimizing these...", "target": 1}
{"idx": 7764, "func": "This is done for compatibility with previous version: Move the argo.user.properties written before 0.25.4 to the new location, if it exists.", "target": 0}
{"idx": 7765, "func": "give priority to standard documentation tag", "target": 0}
{"idx": 7766, "func": "put in the newroots vector the include patterns without wildcard tokens", "target": 0}
{"idx": 7767, "func": "You can only add type arguments if there are type parameters not yet used up. //", "target": 0}
{"idx": 7768, "func": "//{{{ updateAssignedTo() method", "target": 0}
{"idx": 7769, "func": "get first provider // ISearchProvider provider = searchPanel.getSearchManager() // .getAllProviders().next(); // ISearchCriteria defaultCriteria = null; // SearchBar.this.searchPanel.searchInCriteria( // textField.getText(), provider.getTechnicalName(), // provider.getDefaultCriteria(textField.getText()) // .getTechnicalName(), searchInsideCheckBox // .isSelected());", "target": 0}
{"idx": 7770, "func": "probably Avalon format", "target": 0}
{"idx": 7771, "func": "draw the annotations (if any)...", "target": 0}
{"idx": 7772, "func": "Get the history into an array.", "target": 0}
{"idx": 7773, "func": "@see javax.swing.tree.TreeModel#removeTreeModelListener(javax.swing.event.TreeModelListener)", "target": 0}
{"idx": 7774, "func": "register content handler", "target": 0}
{"idx": 7775, "func": "reference counter allows us to remove a column from the table when no directory using this column is visible", "target": 0}
{"idx": 7776, "func": "FIXME: this should generate a series change event", "target": 1}
{"idx": 7777, "func": "++ and -- must be cast back the original type", "target": 0}
{"idx": 7778, "func": "TODO: turn off the negative? will return -0.0 in lax mode", "target": 1}
{"idx": 7779, "func": "TODO correct URL?", "target": 1}
{"idx": 7780, "func": "Otherwise don't save anything - no point", "target": 0}
{"idx": 7781, "func": "retrieve metadata", "target": 0}
{"idx": 7782, "func": "(non-Javadoc) @see org.apache.jmeter.report.engine.ReportEngine#stopReport()", "target": 0}
{"idx": 7783, "func": "ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 7784, "func": "Our shell scripts pass in non-canonicalized paths, but even if we didn't anyone who did would become unhappy because Ruby apps expect no relative operators in the pathname (rubygems, for example).", "target": 0}
{"idx": 7785, "func": "Just mark for rebuild next time since we use lazy loading", "target": 0}
{"idx": 7786, "func": "line 434", "target": 0}
{"idx": 7787, "func": "If an IO exception occurs (something odd, but possible) A directory may return null.", "target": 0}
{"idx": 7788, "func": "//errorIndicatorPaint;", "target": 0}
{"idx": 7789, "func": "Set up the buffers for data and names", "target": 0}
{"idx": 7790, "func": "If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil", "target": 0}
{"idx": 7791, "func": "Validates URL", "target": 0}
{"idx": 7792, "func": "or should the 1 be 0 ?", "target": 0}
{"idx": 7793, "func": "//{{{ getSkipIndex() method", "target": 0}
{"idx": 7794, "func": "Do not check if the parameters match.", "target": 0}
{"idx": 7795, "func": "Helper method to set up the GUI screen", "target": 0}
{"idx": 7796, "func": "Don't do replacement if we just did one, or if previous line ended with a semicolon. //", "target": 0}
{"idx": 7797, "func": "//ie. no select clause", "target": 0}
{"idx": 7798, "func": "will be cached from now on...", "target": 0}
{"idx": 7799, "func": "indicate that initializer has been changed (required to not overwrite initializer if variables are split later)", "target": 0}
{"idx": 7800, "func": "we need to use up the int now", "target": 0}
{"idx": 7801, "func": "Binary data viewing option: view ascii as char rather than as numeric value", "target": 0}
{"idx": 7802, "func": "TODO: Removed from UML 2.x", "target": 1}
{"idx": 7803, "func": "verify the items were correctly added", "target": 0}
{"idx": 7804, "func": "line should look like : This is a line with an <span>embedded key</span> in it. //", "target": 0}
{"idx": 7805, "func": "There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and newer one (US/Pacific, America/Los_Angeles). This pattern is to detect the legacy TZ format in order to convert it to the newer format understood by Java API.", "target": 0}
{"idx": 7806, "func": "the first element of pp is the abbrev itself", "target": 0}
{"idx": 7807, "func": "//slice, to get the columns for this component //property", "target": 0}
{"idx": 7808, "func": "i18n[oracle.rows=Rows]", "target": 0}
{"idx": 7809, "func": "i18n[dataSetViewerEditableTablePanel.noRowsDeleted={0}\\nNo rows deleted from database.]", "target": 0}
{"idx": 7810, "func": "i18n[sqlscript.dlgCreatTableOfSql=Create table of SQL]", "target": 0}
{"idx": 7811, "func": "FIXME: ConstDecl could be two seperate classes (or done differently since constNode and name never exist at the same time.", "target": 1}
{"idx": 7812, "func": "Fixes ClassCastException, see below.", "target": 0}
{"idx": 7813, "func": "If there was no old input, then we must be providing content for this part for the first time... //", "target": 0}
{"idx": 7814, "func": "Next immediate scope. Variable and constant scoping rules make use of this variable in different ways.", "target": 0}
{"idx": 7815, "func": "Only whitespace - ignore", "target": 0}
{"idx": 7816, "func": "line 314", "target": 0}
{"idx": 7817, "func": "finally with exception", "target": 0}
{"idx": 7818, "func": "Create the mapping domain with a special command stack.", "target": 0}
{"idx": 7819, "func": "Initialize SQL nodes here.", "target": 0}
{"idx": 7820, "func": "Parse the boundary box text. Null is returned if it is empty or invalid, which causes no change. Otherwise we tell GEF we are making a change, make the change and tell GEF we've finished.", "target": 0}
{"idx": 7821, "func": "No need to check version, just process the attributes if present", "target": 0}
{"idx": 7822, "func": "i18n[Application.error.loadsqlhistory=Unable to load SQL history from persistant storage.]", "target": 0}
{"idx": 7823, "func": "prompt for jabber id", "target": 0}
{"idx": 7824, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.ISQLPanelAPI#fileOpen()", "target": 0}
{"idx": 7825, "func": "selected a header; skip to the next row", "target": 0}
{"idx": 7826, "func": "try null list", "target": 0}
{"idx": 7827, "func": "check which targetmanager method to call", "target": 0}
{"idx": 7828, "func": "process should abort", "target": 0}
{"idx": 7829, "func": "Data", "target": 0}
{"idx": 7830, "func": "Builds a message within some interaction related to some assocationrole. The message is added as the last in the interaction sequence. Furthermore, the message is added as the last to the list of messages already attached to the role. Effectively, the already attached messages become predecessors of this message. TODO: This sets the activator as a side effect. However it is impossible to determine the activator at this stage as we don't yet know what the action will be of the message we're creating. See issue 5692. @param inter The Interaction. @param role The Association Role. @return The newly created Message.", "target": 1}
{"idx": 7831, "func": "//dmo: (end dmo additions)", "target": 0}
{"idx": 7832, "func": "check for absolute path - RFC 2396 5.2 #5", "target": 0}
{"idx": 7833, "func": "we know variables cannot be null since localstaticscope will create a 0 length one.", "target": 0}
{"idx": 7834, "func": "Everything fine...", "target": 0}
{"idx": 7835, "func": "Get the static This reference from the proto-instance", "target": 0}
{"idx": 7836, "func": "Set root level", "target": 0}
{"idx": 7837, "func": "//i18n[ColumnListDialog.primaryKeyTitle=Choose column(s) for primary key]", "target": 0}
{"idx": 7838, "func": "There are various details panes all of which could hold different tabs pages according to users settings. Place each pane in the required border area.", "target": 0}
{"idx": 7839, "func": "use 1.8 impl", "target": 0}
{"idx": 7840, "func": "flag for whether we have already loaded the properties or not", "target": 0}
{"idx": 7841, "func": "get ../ or ../../ etc.", "target": 0}
{"idx": 7842, "func": "//special case", "target": 0}
{"idx": 7843, "func": "write", "target": 0}
{"idx": 7844, "func": "//i18n[SQLFilterAction.singleObjectMessage=You must have a //single table or view selected to activate the SQL Filter]", "target": 0}
{"idx": 7845, "func": "== null before loaded", "target": 0}
{"idx": 7846, "func": "//i18n[sqlparam.valueFor=Value for {0}]", "target": 0}
{"idx": 7847, "func": "Did sample succeed? Sampler data", "target": 0}
{"idx": 7848, "func": "Check that userinfo is well formed if it exists.", "target": 0}
{"idx": 7849, "func": "user's can't edit default account", "target": 0}
{"idx": 7850, "func": "reset colors index", "target": 0}
{"idx": 7851, "func": "categoryLabelToolTips", "target": 0}
{"idx": 7852, "func": "i18n[sessionPropertiesPanel.objectTree=Object Tree]", "target": 0}
{"idx": 7853, "func": "//{{{ Offset conversion", "target": 0}
{"idx": 7854, "func": "add a new series", "target": 0}
{"idx": 7855, "func": "don't zoom unless the mouse pointer is in the plot's data area", "target": 0}
{"idx": 7856, "func": "get the current data item...", "target": 0}
{"idx": 7857, "func": "calculate the adjusted data area taking into account the 3D effect... this assumes that there is a 3D renderer, all this 3D effect is a bit of an ugly hack...", "target": 1}
{"idx": 7858, "func": "If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!", "target": 0}
{"idx": 7859, "func": "circular", "target": 0}
{"idx": 7860, "func": "@see org.argouml.model.ModelImplementation#getCollaborationsHelper()", "target": 0}
{"idx": 7861, "func": "i18n[DBUtil.info.bindbloblength=bindBlobVarInFile: writing '{0}' bytes.]", "target": 0}
{"idx": 7862, "func": "All this logic is so that we only create a list if the adapter is set to more than one target. //", "target": 0}
{"idx": 7863, "func": "suppress compiler warning", "target": 0}
{"idx": 7864, "func": "vars will be null on Test Plan", "target": 0}
{"idx": 7865, "func": "This may be called directly on an EObject for the case of a containment. //", "target": 0}
{"idx": 7866, "func": "---- companyLabel ----", "target": 0}
{"idx": 7867, "func": "those would fail because of the way BuildFileTest captures output", "target": 0}
{"idx": 7868, "func": "in the future we will want something better, eg. having an 'evt' object passed to EditAction.invoke().", "target": 0}
{"idx": 7869, "func": "//_treeAPI.addDetailTab(DatabaseObjectType.INDEX, new DatabaseObjectInfoTab()); //_treeAPI.addDetailTab(DatabaseObjectType.INDEX, new IndexDetailsTab());", "target": 0}
{"idx": 7870, "func": "extent", "target": 0}
{"idx": 7871, "func": "Appending Labels with optional components ------------------------------", "target": 0}
{"idx": 7872, "func": "Check if multiple items are selected:", "target": 0}
{"idx": 7873, "func": "TODO: This should listen for new target events fired by WizStep.updateTabToDo so that we can decouple it from the ProjectBrowser.", "target": 1}
{"idx": 7874, "func": "Don't wrap this error - display it as is", "target": 0}
{"idx": 7875, "func": "C:\\ is returned unchanged", "target": 0}
{"idx": 7876, "func": "The nameFig is transparent, since this is a box and the fill color is drawn by the bigPort.", "target": 0}
{"idx": 7877, "func": "//{{{ _getFiles() method", "target": 0}
{"idx": 7878, "func": "//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$", "target": 0}
{"idx": 7879, "func": "FIXME: add setBaseOutlinePaint(Paint, boolean)?", "target": 0}
{"idx": 7880, "func": "We want to resolve to this. //", "target": 0}
{"idx": 7881, "func": "i18n[rowDataInputFrame.colDescription=\\nColumn\\nDescription\\n]", "target": 0}
{"idx": 7882, "func": "call chmod after we created the RandomAccesFile because otherwise, the file could be read-only", "target": 0}
{"idx": 7883, "func": "end suffix iteration", "target": 0}
{"idx": 7884, "func": "Should never happen - something's really wrong", "target": 0}
{"idx": 7885, "func": "Allow TestResultWrapper to feed back the samples This is effectively the same as saver.fromXML(InputStream) except we get to provide the DataHolder Don't know why there is no method for this in the XStream class", "target": 0}
{"idx": 7886, "func": "Label for the start of the method Label for the end of the method", "target": 0}
{"idx": 7887, "func": "MIDDLE: check d1, d2 and d3", "target": 0}
{"idx": 7888, "func": "build the command line from what we got. the format is cleartool mklabel [options...] [viewpath ...] as specified in the CLEARTOOL help", "target": 0}
{"idx": 7889, "func": "putIANA2JavaMapping(String,String)", "target": 0}
{"idx": 7890, "func": "backgroundImage", "target": 0}
{"idx": 7891, "func": "Hide Window on ESC //$NON-NLS-1$", "target": 0}
{"idx": 7892, "func": "try specific name first, falling back on simple name", "target": 0}
{"idx": 7893, "func": "already know 'a' isn't null", "target": 0}
{"idx": 7894, "func": "this should be externalized to the properties", "target": 0}
{"idx": 7895, "func": "//{{{ Edit mode methods", "target": 0}
{"idx": 7896, "func": "@see org.argouml.cognitive.Poster#unsnooze()", "target": 0}
{"idx": 7897, "func": "for enum constants use special range", "target": 0}
{"idx": 7898, "func": "line 1045", "target": 0}
{"idx": 7899, "func": "add button panel to main panel", "target": 0}
{"idx": 7900, "func": "Is the first character a special character, i.e., something other than '@'? //", "target": 0}
{"idx": 7901, "func": "end class DismissToDoItemDialog", "target": 0}
{"idx": 7902, "func": "line 1767", "target": 0}
{"idx": 7903, "func": "test for 401 result (HTTP only)", "target": 0}
{"idx": 7904, "func": "STRING", "target": 0}
{"idx": 7905, "func": "//{{{ ignoreWord() method", "target": 0}
{"idx": 7906, "func": "Also programming error", "target": 0}
{"idx": 7907, "func": "Used by Test code", "target": 0}
{"idx": 7908, "func": "Just change the Name and linked operation", "target": 0}
{"idx": 7909, "func": "//TODO: Return content type according to the mime part in the mail", "target": 1}
{"idx": 7910, "func": "arg1", "target": 0}
{"idx": 7911, "func": "TODO: This uses a \"last one wins\" algorithm for registration We should warn if a factory is being overwritten.", "target": 1}
{"idx": 7912, "func": "i18n[ErrorStream.oneerror=1 error detected]", "target": 0}
{"idx": 7913, "func": "@see org.argouml.uml.util.namespace.NamespaceElement#getNamespaceElement()", "target": 0}
{"idx": 7914, "func": "only do checking if we are in online state", "target": 0}
{"idx": 7915, "func": "Append the new tables to the new array, starting at the end of the original", "target": 0}
{"idx": 7916, "func": "----- member variables - configuration -----", "target": 0}
{"idx": 7917, "func": "//{{{ ReplaceActionHandler class", "target": 0}
{"idx": 7918, "func": "Replace \"-8\" with Types.ROWID when Java6 is the minimum supported version", "target": 0}
{"idx": 7919, "func": "//{{{ getStartLine() method", "target": 0}
{"idx": 7920, "func": "current default language properties file", "target": 0}
{"idx": 7921, "func": "i18n[HQLPanelController.hqlToSqlSuccess=Generated {0} SQL(s) in {1} milliseconds.]", "target": 0}
{"idx": 7922, "func": "//some statistics", "target": 0}
{"idx": 7923, "func": "If this happens then this is a programming error as we said in the above call to ingore these errors.", "target": 0}
{"idx": 7924, "func": "other java proxy classes added under their superclass' java proxy", "target": 0}
{"idx": 7925, "func": "end class CrZeroLengthEdge", "target": 0}
{"idx": 7926, "func": "TODO: gone from UML 2", "target": 0}
{"idx": 7927, "func": "look for associations", "target": 0}
{"idx": 7928, "func": "use a date formatter", "target": 0}
{"idx": 7929, "func": "(non-Javadoc) @see org.apache.jmeter.gui.action.AbstractAction#getActionNames()", "target": 0}
{"idx": 7930, "func": "@see org.argouml.uml.ui.SourcePathController#setSourcePath( java.lang.Object, java.io.File)", "target": 0}
{"idx": 7931, "func": "encoding doesn't have to be copied.", "target": 0}
{"idx": 7932, "func": "i18n[DataSetUpdateableTableModelImpl.error.multimatchingrows=Muliple rows in DB match current row in table - cannot re-read data.]", "target": 0}
{"idx": 7933, "func": "Get the text in the field, and don't do anything if the field is empty.", "target": 0}
{"idx": 7934, "func": "//TODO: suck this logic into the collection!", "target": 1}
{"idx": 7935, "func": "//{{{ getFileVFS() method", "target": 0}
{"idx": 7936, "func": "Display events are fired on the Swing event thread. We need to wait for them to be dispatched NOTE: if more display events are added to this test, this one needs to be last", "target": 0}
{"idx": 7937, "func": "implement the recursion for getClassImpl()", "target": 1}
{"idx": 7938, "func": "Test if there are type parameters that might require substitution. //", "target": 0}
{"idx": 7939, "func": "Make sure we close only once. //", "target": 0}
{"idx": 7940, "func": "We expect all extensions to have a manifest even though we can operate without one if necessary.", "target": 0}
{"idx": 7941, "func": "Ensure the dialog is only created when it is first needed In turn this avoids scanning the templates until first needed", "target": 0}
{"idx": 7942, "func": "This is here because addCompletionsAtListBegin() won't work when schema info is still loading", "target": 1}
{"idx": 7943, "func": "TODO: We overflow on large files...We could increase to long to limit this, but then the impl gets more involved since java io APIs based on int (means we have to chunk up a long into a series of int ops).", "target": 1}
{"idx": 7944, "func": "//defaultBox.removeAll();", "target": 0}
{"idx": 7945, "func": "connect to the previous point", "target": 0}
{"idx": 7946, "func": "Returns the containing parent scope!", "target": 0}
{"idx": 7947, "func": "Create an empty file and try to read it", "target": 0}
{"idx": 7948, "func": "//TODO: add logging, but this will never happen and is handled", "target": 0}
{"idx": 7949, "func": "TODO: This shouldn't know the internal form of type names, but I'm not sure what GEF's PredicateType does, so I'm fixing it here - tfm", "target": 1}
{"idx": 7950, "func": "//setForeground( Color.blue );", "target": 0}
{"idx": 7951, "func": "The reason why we need the stream is to be able to invoke available() on it. STDIN in Java is non-interruptible, non-selectable, and attempt to read on such stream might lead to thread being blocked without any way to unblock it. That's where available() comes it, so at least we could check whether anything is available to be read without blocking.", "target": 0}
{"idx": 7952, "func": "for relative links", "target": 0}
{"idx": 7953, "func": "done processing args", "target": 0}
{"idx": 7954, "func": "i18n[DialectUtils.columnTypeUnsupported={0} doesn''t support altering a column's type attribute]", "target": 0}
{"idx": 7955, "func": "this has been changed since 1.03 to be non-overlapping matches", "target": 0}
{"idx": 7956, "func": "//{{{ TextAreaSelection class", "target": 0}
{"idx": 7957, "func": "an interface", "target": 0}
{"idx": 7958, "func": "builder2.addStrut(Sizes.pixel(4));", "target": 0}
{"idx": 7959, "func": "configure the range axis...", "target": 0}
{"idx": 7960, "func": "Skip whitespace at the end.", "target": 0}
{"idx": 7961, "func": "FIXME: add setBaseItemLabelGenerator(CategoryItemLabelGenerator, boolean) ?", "target": 0}
{"idx": 7962, "func": "prev in expanded range", "target": 0}
{"idx": 7963, "func": "I wish protected access were limited to children and not also package scope... I want this to be a singleton implemented by various children.", "target": 1}
{"idx": 7964, "func": "WFR Transitions, OMG UML 1.3", "target": 0}
{"idx": 7965, "func": "//Project p = ProjectManager.getManager().getCurrentProject(); //Collection elems = //ModelManagementHelper.getHelper() .getAllModelElementsOfKind(MClassifier.class);", "target": 0}
{"idx": 7966, "func": "Scripting classes currently requires accessibility This can be eliminated with a bit more work.", "target": 1}
{"idx": 7967, "func": "FormLayout layout = new FormLayout( \"default, 3dlu, default, 3dlu, default, 3dlu, \" + \"default, 3dlu, default, 3dlu, default, 3dlu, \" + \"default, 6dlu, default, 3dlu, default, 3dlu, \" + \"default, 3dlu\", \"fill:default\"); PanelBuilder b = new PanelBuilder(this, layout); CellConstraints c = new CellConstraints(); b.add(paragraphComboBox, cc.xy(1, 1)); b.add(sizeLabel, cc.xy(3, 1)); b.add(sizeComboBox, cc.xy(5, 1)); b.add(boldFormatButton, cc.xy(7, 1)); b.add(italicFormatButton, cc.xy(9, 1)); b.add(underlineFormatButton, cc.xy(11, 1)); b.add(strikeoutFormatButton, cc.xy(13, 1)); b.add(leftJustifyButton, cc.xy(15, 1)); b.add(centerJustifyButton, cc.xy(17, 1)); b.add(rightJustifyButton, cc.xy(19, 1));", "target": 0}
{"idx": 7968, "func": "//{{{ Static variables", "target": 0}
{"idx": 7969, "func": "Configured using the Properties File Configurator", "target": 0}
{"idx": 7970, "func": "Block added by BobTarling 8-Jan-2002 Set the checkbox on or off according to the SELECTED value of the action. If no SELECTED value is found then this defaults to true in order to remain compatible with previous versions of this code.", "target": 0}
{"idx": 7971, "func": "NOTUSED Dimension dim = layoutSize(parent, false);", "target": 0}
{"idx": 7972, "func": "don't do this on initial token marker", "target": 0}
{"idx": 7973, "func": "selecting the message", "target": 0}
{"idx": 7974, "func": "// IApplication app = getApplication(); // CursorChanger cursorChg = new CursorChanger(app.getMainFrame()); // cursorChg.show(); // try // { // new ShowNativeSQLCommand(_session).execute(); // } // finally // { // cursorChg.restore(); // }", "target": 0}
{"idx": 7975, "func": "validate command parameters. At the moment only checks if there are any invalid email addresses", "target": 0}
{"idx": 7976, "func": "tell caller that the underlying data was not updated //?? is this always true, or could the data be updated with a warning?", "target": 1}
{"idx": 7977, "func": "genPackage can be a broken proxy", "target": 0}
{"idx": 7978, "func": "includes the \"/\" the \"seq_expr\" from the header javadoc the \":\" is not included in \"number\" - it is always present", "target": 0}
{"idx": 7979, "func": "i18n[ColorPropertiesPanel.instructions=These settings control the background colors...]", "target": 0}
{"idx": 7980, "func": "unknown column name", "target": 0}
{"idx": 7981, "func": "FIXME remove method toolbarPane.add(c);", "target": 1}
{"idx": 7982, "func": "\"backup metadata only\" \"inhibit garbage collection\" \"save old style metadata descriptions\" \"transportable format\" \"backup external files as tables\" \"start backup\"", "target": 0}
{"idx": 7983, "func": "i.e. does keytool support -gencert and -ext ?", "target": 0}
{"idx": 7984, "func": "i18n[DBCopyGlobalPreferencesTab.hint=Preferences for DB Copy]", "target": 0}
{"idx": 7985, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getTypesDataSet()", "target": 0}
{"idx": 7986, "func": "tickUnit", "target": 0}
{"idx": 7987, "func": "the java methods return a nice week of year, we need hard facts", "target": 0}
{"idx": 7988, "func": "//i18n[syntax.findNetbeansOnly=Find is only available when the Netbeans editor is used.\\nSee menu File --> New Session Properties --> Tab Syntax]", "target": 0}
{"idx": 7989, "func": "TODO: Spring-inject when this class is a Spring bean", "target": 1}
{"idx": 7990, "func": "find first Monday after 2001-01-01", "target": 0}
{"idx": 7991, "func": "Begin SET and GET methods", "target": 0}
{"idx": 7992, "func": "this is the order in which MRI does these two tests", "target": 0}
{"idx": 7993, "func": "1400..167F;", "target": 0}
{"idx": 7994, "func": "do different things depending on data type", "target": 0}
{"idx": 7995, "func": "private static final int BG_BLACK = 40; private static final int BG_RED = 41; private static final int BG_GREEN = 42; private static final int BG_YELLOW = 44; private static final int BG_BLUE = 44; private static final int BG_MAGENTA = 45; private static final int BG_CYAN = 46; private static final int BG_WHITE = 47;", "target": 0}
{"idx": 7996, "func": "create a new awt font with the appropiate data", "target": 0}
{"idx": 7997, "func": "It was not found in the model class so check if primitive type. //", "target": 0}
{"idx": 7998, "func": "We assume, that every output, jikes does, stands for an error/warning XXX Is this correct?", "target": 1}
{"idx": 7999, "func": "//TODO: make EntityPersister not depend on SessionFactoryImplementor //interface, if possible", "target": 1}
{"idx": 8000, "func": "Now get the factory implementation method to be invoked", "target": 0}
{"idx": 8001, "func": "TODO: this should fail, but it doesn't:", "target": 1}
{"idx": 8002, "func": "Currently not cachable if autodiscover types is in effect (e.g. \"select ...\")", "target": 0}
{"idx": 8003, "func": "new WSDLHelper(\"http://services.bio.ifi.lmu.de:1046/prothesaurus/services/BiologicalNameService?wsdl\");", "target": 0}
{"idx": 8004, "func": "If we have type info and the child is an array initializer pass it along... Else use the default eval style. (This allows array initializer to handle the problem... allowing for future enhancements in loosening types there).", "target": 0}
{"idx": 8005, "func": "IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject", "target": 0}
{"idx": 8006, "func": "@see org.argouml.cognitive.ToDoListListener#toDoListChanged(org.argouml.cognitive.ToDoListEvent)", "target": 0}
{"idx": 8007, "func": "Quick return: directories cannot be signed", "target": 0}
{"idx": 8008, "func": "Order of body and condition is swapped for do / while", "target": 0}
{"idx": 8009, "func": "1. Find the local release.xml file", "target": 0}
{"idx": 8010, "func": "get the data point...", "target": 0}
{"idx": 8011, "func": "FIXME: Old Mac format strings?", "target": 0}
{"idx": 8012, "func": "FIXME: it probably makes sense to allocate an array of 256 Colors and lazily populate this array...", "target": 1}
{"idx": 8013, "func": "Blindly trust the user doesn't set any invalid headers", "target": 0}
{"idx": 8014, "func": "get the real name for use later", "target": 0}
{"idx": 8015, "func": "i18n[graph.zoom=Zoom]", "target": 0}
{"idx": 8016, "func": "Regression test for HARMONY-4493", "target": 0}
{"idx": 8017, "func": "line 627", "target": 0}
{"idx": 8018, "func": "//{{{ updateRenderingHints() method", "target": 0}
{"idx": 8019, "func": "We clone dynamic scope because this will be a new instance of a block. Any previously captured instances of this block may still be around and we do not want to start overwriting those values when we create a new one. ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate", "target": 1}
{"idx": 8020, "func": "TODO: Use Model.getModelManagementHelper().getPathList(modelElement); TODO: This will fail with nested Models", "target": 1}
{"idx": 8021, "func": "check if virtual folder, if yes, do not use these uids, use the real uids instead", "target": 0}
{"idx": 8022, "func": "check the bounds of a simple dataset", "target": 0}
{"idx": 8023, "func": "//Update is unnecessary", "target": 0}
{"idx": 8024, "func": "debugging and looking at fig.headFig.figs[1]._currText I can see that it's working, but how to test it?", "target": 0}
{"idx": 8025, "func": "create toolbar", "target": 0}
{"idx": 8026, "func": "sqlResultTypeList,", "target": 0}
{"idx": 8027, "func": "Protected first so if any GUI tool offers a default based on enum #0, it will be right.", "target": 0}
{"idx": 8028, "func": "FIXME: -x flag not supported case 'x' : break;", "target": 1}
{"idx": 8029, "func": "get plugin handler for filter actions", "target": 0}
{"idx": 8030, "func": "This URI handler redirect the URI based on the mapping. //", "target": 0}
{"idx": 8031, "func": "OK to set pre-emptive auth?", "target": 0}
{"idx": 8032, "func": "//vfolder.showFilterDialog((AbstractMailFrameController) getFrameMediator());", "target": 0}
{"idx": 8033, "func": "If file encoding is specified, read using that encoding, otherwise use default platform encoding", "target": 0}
{"idx": 8034, "func": "The pattern has only fixed string. The engine uses Boyer-Moore.", "target": 0}
{"idx": 8035, "func": "private final int TABLE_COL_DATATYPE = 3; not used", "target": 0}
{"idx": 8036, "func": "mask off \"once\" flag", "target": 0}
{"idx": 8037, "func": "This is the name of the model. //", "target": 0}
{"idx": 8038, "func": "i18n[mysql.copyToNewTable=Copy to new Table:]", "target": 0}
{"idx": 8039, "func": "The main conditional logic -- if the attribute is somehow \"special\" (i.e., it has known semantic meaning) then deal with it appropriately.", "target": 0}
{"idx": 8040, "func": "end date", "target": 0}
{"idx": 8041, "func": "include any interfaces we extend", "target": 0}
{"idx": 8042, "func": "no point in checking if we don't have anything to compare against", "target": 0}
{"idx": 8043, "func": "x", "target": 0}
{"idx": 8044, "func": "argument checking delegated...", "target": 0}
{"idx": 8045, "func": "Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //", "target": 0}
{"idx": 8046, "func": "//TODO: currently broken for unique-key references (does not detect change to unique key property of the associated object)", "target": 1}
{"idx": 8047, "func": "build the configPanel:", "target": 0}
{"idx": 8048, "func": "Extract charset and store as DataEncoding N.B. The meta tag: <META http-equiv=\"content-type\" content=\"text/html; charset=foobar\"> is now processed by HTTPSampleResult#getDataEncodingWithDefault $NON-NLS-1$", "target": 0}
{"idx": 8049, "func": "If the layer is null, then most likely we are being deleted.", "target": 0}
{"idx": 8050, "func": "We can enable the action as indicated by the command, and we can set all the other values from the command. //", "target": 0}
{"idx": 8051, "func": "i18n[rowInputDataFrame.conversionErr=Conversion Error]", "target": 0}
{"idx": 8052, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#storesUpperCaseQuotedIdentifiers()", "target": 0}
{"idx": 8053, "func": "had an exception constructing suite", "target": 0}
{"idx": 8054, "func": "Use the logger config", "target": 0}
{"idx": 8055, "func": "//SERIES OUTLINE STROKE /////////////////////", "target": 0}
{"idx": 8056, "func": "@see org.tigris.gef.graph.GraphFactory#makeGraphModel()", "target": 0}
{"idx": 8057, "func": "Check for a count, i.e., a '.' followed by a number. //", "target": 0}
{"idx": 8058, "func": "//{{{ delete() method", "target": 0}
{"idx": 8059, "func": "@see org.argouml.cognitive.Poster#expand(java.lang.String, ListSet)", "target": 0}
{"idx": 8060, "func": "//{{{ setEnabled() method", "target": 0}
{"idx": 8061, "func": "//{{{ showMostRecent() method", "target": 0}
{"idx": 8062, "func": "//no initial zoom rectangle exists but the handler is set //as life handler unregister", "target": 0}
{"idx": 8063, "func": "Shall we use the HTML-IViewer?", "target": 0}
{"idx": 8064, "func": "this profile could have not been loaded when the default profile configuration was loaded at first, so we need to do it again", "target": 0}
{"idx": 8065, "func": "end of loop over selected messages", "target": 0}
{"idx": 8066, "func": "FIXME: This is causing a verification error for some reason //nilClass.dispatcher = callbackFactory.createDispatcher(nilClass);", "target": 1}
{"idx": 8067, "func": "l_year = new JLabel(); p1.add(l_year);", "target": 0}
{"idx": 8068, "func": "//TODO: should we allow suffixes on these ?", "target": 1}
{"idx": 8069, "func": "1D400..1D7FF;", "target": 0}
{"idx": 8070, "func": "Flags for parsing context. //", "target": 0}
{"idx": 8071, "func": "otherwise ExecuteJava has thrown an exception", "target": 0}
{"idx": 8072, "func": "//{{{ getLeadingWhiteSpaceWidth() method", "target": 0}
{"idx": 8073, "func": "end class EnabledCM", "target": 0}
{"idx": 8074, "func": "line 890", "target": 0}
{"idx": 8075, "func": "Ensure global counters and lock are shared across threads in the group", "target": 0}
{"idx": 8076, "func": "Wait for the end of output and error streams", "target": 0}
{"idx": 8077, "func": "//{{{ ScrollHandler class", "target": 0}
{"idx": 8078, "func": "So if the resolved object is also present... //", "target": 0}
{"idx": 8079, "func": "Count just the bits up to this one. Note that shifting 32 bits is a no op. //", "target": 0}
{"idx": 8080, "func": "//{{{ setBuffer() method", "target": 0}
{"idx": 8081, "func": "full-pathname specified == path in list simple name specified == path in list", "target": 0}
{"idx": 8082, "func": "This target is a statemachine, for which no diagram exists yet, so, let's use it.", "target": 0}
{"idx": 8083, "func": "the merge file always wins, even for Class-Path", "target": 0}
{"idx": 8084, "func": "Make sure the sample start time and sample end time are recorded in order not to confuse the statistics calculation methods: if an error occurs and an exception is thrown it is possible that the result.sampleStart() or result.sampleEnd() won't be called", "target": 0}
{"idx": 8085, "func": "Since JUNK is a non-system Flag we have to set it with an addtitional STORE command", "target": 0}
{"idx": 8086, "func": "\"ALTER TABLE $tableName$ \" + \"ADD $constraint$ $constraintName$ UNIQUE $index$ $indexName$ $indexType$ ( $indexColumnName$ )\";", "target": 0}
{"idx": 8087, "func": "DYNAMIC UPDATE", "target": 0}
{"idx": 8088, "func": "figure out which column the user clicked on so we can pass in the right column description", "target": 0}
{"idx": 8089, "func": "Make sure it's okay. //", "target": 0}
{"idx": 8090, "func": "//{{{ getResource() method", "target": 0}
{"idx": 8091, "func": "we have to set up the table later!! yuck", "target": 1}
{"idx": 8092, "func": "EATM Foreign Model", "target": 0}
{"idx": 8093, "func": "header[0] is not the status line... $NON-NLS-1$", "target": 0}
{"idx": 8094, "func": "2 is != 0 and even, so it is considered failure on any platform currently supported by Execute#isFailure.", "target": 0}
{"idx": 8095, "func": "add listener to buttons", "target": 0}
{"idx": 8096, "func": "save the project", "target": 0}
{"idx": 8097, "func": "A special parent loader which is not the system class loader:", "target": 0}
{"idx": 8098, "func": "Is the location still existing?", "target": 0}
{"idx": 8099, "func": "//TODO: design new lifecycle for ProxyFactory", "target": 1}
{"idx": 8100, "func": "collect filesets to pass them to getResourcesToAdd", "target": 0}
{"idx": 8101, "func": "view headerlist in message list viewer", "target": 0}
{"idx": 8102, "func": "does the selection", "target": 0}
{"idx": 8103, "func": "(non-Javadoc) @see org.columba.mail.imap.IImapServer#setObservable(org.columba.api.command.IStatusObservable)", "target": 0}
{"idx": 8104, "func": "configure attributes of the object and it's children. If it is a task container, defer the configuration till the task container attempts to use the task", "target": 0}
{"idx": 8105, "func": "Fix path to allow the use of UNC URLs", "target": 1}
{"idx": 8106, "func": "EATM must fix isSet bits.", "target": 1}
{"idx": 8107, "func": "Ensure room for terminating zero byte", "target": 0}
{"idx": 8108, "func": "//{{{ backspace() method", "target": 0}
{"idx": 8109, "func": "4.6.2.4 TagDefinition", "target": 0}
{"idx": 8110, "func": "//do some padding, I don't understand the padding strategy", "target": 0}
{"idx": 8111, "func": "i18n[DB2Plugin.showUdfSource=Show UDF source]", "target": 0}
{"idx": 8112, "func": "Fallback to the old method, going directly to the database instead of using SchemaInfo, since SchemaInfo didn't have it.", "target": 0}
{"idx": 8113, "func": "\\cX, \\c\\M-X", "target": 0}
{"idx": 8114, "func": "Look for special Sleep request //$NON-NLS-1$", "target": 0}
{"idx": 8115, "func": "//{{{ getActionContext() method", "target": 0}
{"idx": 8116, "func": "don't deal with object types here... unless above", "target": 0}
{"idx": 8117, "func": "TODO make an assert here", "target": 1}
{"idx": 8118, "func": "//TestCase/unsetGenFeature.todo.override.javajetinc", "target": 0}
{"idx": 8119, "func": "FIXME This function needs documentation @return boolean @param XmlElement E", "target": 1}
{"idx": 8120, "func": "//{{{ InputHandler constructor", "target": 0}
{"idx": 8121, "func": "class AttributesProxy", "target": 0}
{"idx": 8122, "func": "Only create the map if it is required", "target": 0}
{"idx": 8123, "func": "if the 'notify' flag has been switched to false, we don't notify the listeners", "target": 0}
{"idx": 8124, "func": "Note: the item name is used by ChangeLanguage to create a Locale for that language, so need to ensure that the language strings are valid If they exist, use the Locale language constants. Also, need to ensure that the names are valid resource entries too.", "target": 0}
{"idx": 8125, "func": "callers that plan to use this name without appending a suffix should call f.safeName(f.getName()) to make sure its not a keyword this is a safe guaranteed uncapitalized form of the name the safe name and cast to EObject, if necessary.", "target": 0}
{"idx": 8126, "func": "cascade first, so that all unsaved objects get their copy created before we actually copy", "target": 0}
{"idx": 8127, "func": "create one list containing the marked items, which have to be \"unmarked\" and another list containing the items remained to be marked", "target": 0}
{"idx": 8128, "func": "ExtCaret highlighting options", "target": 0}
{"idx": 8129, "func": "//return cal.getTimeInMillis(); preceding code won't work with JDK 1.3", "target": 1}
{"idx": 8130, "func": "no delimiter found -> this is already the final folder if folder doesn't exist already", "target": 0}
{"idx": 8131, "func": "xmi:id xmi:XMI xmi:type xmi:version xmlns:xmi", "target": 0}
{"idx": 8132, "func": "line 331", "target": 0}
{"idx": 8133, "func": "We use multi even for a single line because we want to respond to the enter key. //", "target": 0}
{"idx": 8134, "func": "//{{{ runStartupScripts() method", "target": 0}
{"idx": 8135, "func": "only http and https are supported", "target": 0}
{"idx": 8136, "func": "I'm lazy", "target": 0}
{"idx": 8137, "func": "Claims conversion is done via 'to_s' in docs.", "target": 0}
{"idx": 8138, "func": "Throw out any previous elements that were enclosed but are not a concurrent region; let's move them onto the first region:", "target": 0}
{"idx": 8139, "func": "we want to save this info if we are going to make another pass", "target": 0}
{"idx": 8140, "func": "'' situation, so skip one", "target": 0}
{"idx": 8141, "func": "//}}} //{{{ SPAN_REGEXP", "target": 0}
{"idx": 8142, "func": "//{{{ getItem() method", "target": 0}
{"idx": 8143, "func": "(non-Javadoc) @see org.columba.mail.folder.headercache.HeaderList#keySet()", "target": 0}
{"idx": 8144, "func": "// JScrollPane scrollPane = new JScrollPane(tree); // scrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED); // // add(scrollPane, BorderLayout.CENTER);", "target": 0}
{"idx": 8145, "func": "if the user pressed eg C+e n n in the search bar we want focus to go back there after the prefix is done", "target": 0}
{"idx": 8146, "func": "Set the icon:", "target": 0}
{"idx": 8147, "func": "register all the DTDs, both the ones that are known and any supplied by the user", "target": 0}
{"idx": 8148, "func": "domainAxis...", "target": 0}
{"idx": 8149, "func": "igndore it...", "target": 0}
{"idx": 8150, "func": "preset to \"Text\" option", "target": 0}
{"idx": 8151, "func": "With ssl request, url is host:port (without https:or path) $NON-NLS-1$", "target": 0}
{"idx": 8152, "func": "//{{{ registerDockableWindow() method", "target": 0}
{"idx": 8153, "func": "end class PredIsFinalState", "target": 0}
{"idx": 8154, "func": "Set up footer of table which displays numerics of the graphs", "target": 0}
{"idx": 8155, "func": "we draw a cross", "target": 0}
{"idx": 8156, "func": "enable flexdock ghost preview", "target": 0}
{"idx": 8157, "func": "setTickValues was missing from ColorPalette v. 0.96 //colorPalette.setTickValues(this.axis.getTicks());", "target": 0}
{"idx": 8158, "func": "Most subclasses will need these:", "target": 0}
{"idx": 8159, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#isCatalogAtStart()", "target": 0}
{"idx": 8160, "func": "Check arguments against parameters for type and number TODO: Perhaps move this to a critic instead? - tfm - 20070326", "target": 1}
{"idx": 8161, "func": "check that something which is not a testcase generates no errors at first even though this is incorrect.", "target": 0}
{"idx": 8162, "func": "new logical?", "target": 0}
{"idx": 8163, "func": "Otherwise we can't finish", "target": 0}
{"idx": 8164, "func": "//popupMenu.getSelectionModel().setSelectedIndex(0);", "target": 0}
{"idx": 8165, "func": "next succeeds is a match try next option", "target": 0}
{"idx": 8166, "func": "Unqualified (simple, non-compound) name", "target": 0}
{"idx": 8167, "func": "TODO Charset ?", "target": 0}
{"idx": 8168, "func": "include legend tooltips urls", "target": 0}
{"idx": 8169, "func": "Knuth's increments seem to work better than Incerpi-Sedgewick here. Possibly because the number of elems to sort is usually small, typically <= 20.", "target": 0}
{"idx": 8170, "func": "not enough bytes", "target": 0}
{"idx": 8171, "func": "File to convert where to put the results", "target": 0}
{"idx": 8172, "func": "in a previous version, the date of the file was set to 123456 milliseconds since 01.01.1970 it did not work on a computer running JDK 1.4.1_02 + Windows 2000", "target": 0}
{"idx": 8173, "func": "NOI18N", "target": 0}
{"idx": 8174, "func": "entityNames may now include slashes for the representations //classname may be an inner class", "target": 0}
{"idx": 8175, "func": "@see java.lang.Object#hashCode() This will result in rather bad performance but at least we will not violate the contract together with {@link #equals(Object)}.", "target": 0}
{"idx": 8176, "func": "i18n[HelpViewerWindow.error.loadpluginlicence=Error generating Licence entry for plugin {0}]", "target": 0}
{"idx": 8177, "func": "//$NON_NLS-1$ don't match the empty category", "target": 0}
{"idx": 8178, "func": "Push the existing status.", "target": 0}
{"idx": 8179, "func": "check that a suite generates no errors", "target": 0}
{"idx": 8180, "func": "// private static final class CellRenderer extends BasicComboBoxRenderer // { // public Component getListCellRendererComponent(JList list, Object value, // int index, boolean isSelected, boolean cellHasFocus) // { // setText(((TableColumnInfo)value).getColumnName()); // return this; // } // }", "target": 0}
{"idx": 8181, "func": "begins a new current block, resets the relative current and max stack sizes", "target": 0}
{"idx": 8182, "func": "i18n[mssql.objectsOn=Objects on {0}:]", "target": 0}
{"idx": 8183, "func": "no maximum set, so it will stretch...", "target": 0}
{"idx": 8184, "func": "//we normally compare destination with source", "target": 0}
{"idx": 8185, "func": "@see javax.swing.plaf.metal.MetalTheme#getControlTextFont()", "target": 0}
{"idx": 8186, "func": "table-specific parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 8187, "func": "line 1214", "target": 0}
{"idx": 8188, "func": "@see org.argouml.uml.diagram.ui.FigNodeModelElement#textEditStarted(org.tigris.gef.presentation.FigText)", "target": 0}
{"idx": 8189, "func": "we need to utilize dynamic delete statements", "target": 0}
{"idx": 8190, "func": "@see org.argouml.ui.explorer.WeakExplorerNode#subsumes(java.lang.Object)", "target": 0}
{"idx": 8191, "func": "i18n[SchemaTableUpdateWhatItem.allObjects=All Objects]", "target": 0}
{"idx": 8192, "func": "@see org.argouml.uml.ui.AbstractActionAddModelElement#getChoices()", "target": 0}
{"idx": 8193, "func": "//dont do any progress, unless asked", "target": 0}
{"idx": 8194, "func": "//{{{ getScreenBounds() method", "target": 0}
{"idx": 8195, "func": "If any objects are matched. //", "target": 0}
{"idx": 8196, "func": "The following is a work-around for the problem on Mac OS X where the Apple LAF delegates to the Swing Popup factory but then tries to set a 90% alpha on the underlying Cocoa window, which will always be null if you're using JGoodies L&F see http://www.caimito.net/pebble/2005/07/26/1122392314480.html#comment1127522262179 This has no effect on Linux/Windows", "target": 1}
{"idx": 8197, "func": "line 1516", "target": 0}
{"idx": 8198, "func": "If -soshome was not specified then we can look for nocache", "target": 0}
{"idx": 8199, "func": "need to reset the stream handler to restart reading of pipes; go ahead and do it always w/ nested redirectors", "target": 0}
{"idx": 8200, "func": "//TOOL TIP GENERATOR ///////////////////////////////////////////////////", "target": 0}
{"idx": 8201, "func": "This is the new length", "target": 0}
{"idx": 8202, "func": "always enable the menuitem again r[0].getPOP3ServerController().enableActions(true);", "target": 0}
{"idx": 8203, "func": "Use the default encoding for urls", "target": 0}
{"idx": 8204, "func": "Standalone", "target": 0}
{"idx": 8205, "func": "make sure buildfile exists", "target": 0}
{"idx": 8206, "func": "//{{{ ToggleAction constructor", "target": 0}
{"idx": 8207, "func": "If the -j or -l flag is set to LAST or LAST.log|LAST.jtl, then the last loaded file name is used to generate the log file name by removing .JMX and replacing it with .log|.jtl", "target": 0}
{"idx": 8208, "func": "Textfield uses \\n (LF) to delimit lines; we need to send CRLF. Rather than change the way that arguments are processed by the samplers for raw data, it is easier to fix the data. On retrival, CRLF is converted back to LF for storage in the text field. See", "target": 0}
{"idx": 8209, "func": "treePathButton.setMargin(new Insets(0,0,0,0));", "target": 0}
{"idx": 8210, "func": "It is important to process the name change first - so that we can use the new name instead of the old in subsequent alterations", "target": 0}
{"idx": 8211, "func": "@see org.argouml.model.UmlHelper#getSource(java.lang.Object)", "target": 0}
{"idx": 8212, "func": "Regression for HARMONY-829", "target": 0}
{"idx": 8213, "func": "//i18n[SybaseASEPlugin.showViewSource=Show view source]", "target": 0}
{"idx": 8214, "func": "(non-Javadoc) @see org.apache.jmeter.util.LocaleChangeListener#localeChanged(org.apache.jmeter.util.LocaleChangeEvent)", "target": 0}
{"idx": 8215, "func": "Some databases store a time component in DATE columns (Oracle) The user can set a preference for DATEs that allows them to be read as TIMESTAMP columns instead. This doesn't appear to have ill effects for databases that are standards compliant (such as MySQL or PostgreSQL). If the user prefers it, use the TIMESTAMP data type instead of DATE.", "target": 0}
{"idx": 8216, "func": "We use FILE versus IO to match T_FILE in MRI.", "target": 0}
{"idx": 8217, "func": "all AliasToEntityMapResultTransformer are considered equal ~~~~~~~~~~~~~", "target": 0}
{"idx": 8218, "func": "i18n[sqlval.connected=Connected to the SQL Validation web service]", "target": 0}
{"idx": 8219, "func": "garbage collected", "target": 0}
{"idx": 8220, "func": "TODO : This is a bit fragile", "target": 1}
{"idx": 8221, "func": "@see org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode#calculateWeight()", "target": 0}
{"idx": 8222, "func": "Add separator as the last item", "target": 0}
{"idx": 8223, "func": "create a form builder", "target": 0}
{"idx": 8224, "func": "protected AddressbookFolder tempFolder;", "target": 0}
{"idx": 8225, "func": "Make sure the line is dashed", "target": 0}
{"idx": 8226, "func": "always start from the current ftp working dir", "target": 0}
{"idx": 8227, "func": "general exception", "target": 0}
{"idx": 8228, "func": "//{{{ findWordEnd() method", "target": 0}
{"idx": 8229, "func": "define ARGV and $ for this runtime", "target": 0}
{"idx": 8230, "func": "//i18n[SQLScriptPreferencesPanel.deleteActionLabel=Action to take on delete:]", "target": 0}
{"idx": 8231, "func": "//{{{ addWorkRequest() method", "target": 0}
{"idx": 8232, "func": "workaround for missing ability to parse \"\"", "target": 1}
{"idx": 8233, "func": "//this handles the need to perform a 'step'.", "target": 0}
{"idx": 8234, "func": "//wait for all Setup Threads To Exit", "target": 0}
{"idx": 8235, "func": "svgClass will be null so the function will return false", "target": 0}
{"idx": 8236, "func": "(non-Javadoc) @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)", "target": 0}
{"idx": 8237, "func": "@see org.argouml.model.ModelImplementation#getCoreHelper()", "target": 0}
{"idx": 8238, "func": "strictJava", "target": 0}
{"idx": 8239, "func": "@note: it is a string and not a file to handle relative/absolute otherwise a relative file will be resolved based on the current basedir.", "target": 0}
{"idx": 8240, "func": "if fixed auto range, then derive lower bound...", "target": 0}
{"idx": 8241, "func": "the parameters", "target": 0}
{"idx": 8242, "func": "//{{{ tabsToSpaces() method", "target": 0}
{"idx": 8243, "func": "String used to indicate a null value", "target": 0}
{"idx": 8244, "func": "Make sure this test happens on the AWT event thread", "target": 0}
{"idx": 8245, "func": "UML 1.4 spec is ambiguous - English says no Association or Generalization, but OCL only includes Association || Model.getFacade().isAGeneralization(dm)", "target": 1}
{"idx": 8246, "func": "encountered a comment character at the beginning of the line so just ignore the rest of the line", "target": 0}
{"idx": 8247, "func": "ArgoEventPump.fireEvent( new ArgoImporterEvent(ArgoEventTypes.IMPORTER_ADDED, gen));", "target": 0}
{"idx": 8248, "func": "//{{{ doTripleClick() method", "target": 0}
{"idx": 8249, "func": "i18n[dataSetViewerEditableTablePanel.error=Error]", "target": 0}
{"idx": 8250, "func": "check if this completion request is outside the original definition point", "target": 0}
{"idx": 8251, "func": "vulture thread will periodically expunge dead entries. entries are also expunged during 'put' operations; this is designed to cover the case where many objects are created initially, followed by limited put activity. FIXME: DISABLED (below) pending resolution of finalization issue //", "target": 1}
{"idx": 8252, "func": "Only return once per diagram so we don't, for example, find a class as a diagram element and also as a child of a package which is on the diagram", "target": 0}
{"idx": 8253, "func": "save the current count", "target": 0}
{"idx": 8254, "func": "3190..319F;", "target": 0}
{"idx": 8255, "func": "////////////////////////////////////////////////////////////////////////test construction process //////////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 8256, "func": "Get the next non-return parameter. Null if non left.", "target": 0}
{"idx": 8257, "func": "//Class/setGenFeature.todo.override.javajetinc", "target": 0}
{"idx": 8258, "func": "bench fixnum-boxed fib", "target": 0}
{"idx": 8259, "func": "======================================================================== Instance variables.", "target": 0}
{"idx": 8260, "func": "don't need this", "target": 0}
{"idx": 8261, "func": "remove from model", "target": 0}
{"idx": 8262, "func": "Find all VirtualFolders and rewrite the FolderReference", "target": 0}
{"idx": 8263, "func": "set annotation contents", "target": 0}
{"idx": 8264, "func": "one arg, no block; load NULL_BLOCK", "target": 0}
{"idx": 8265, "func": "//TODO: this is a little inefficient, don't need to do a whole deep replaceElements() call", "target": 1}
{"idx": 8266, "func": "line 1577", "target": 0}
{"idx": 8267, "func": "end class SAXParserBase", "target": 0}
{"idx": 8268, "func": "//call throwException via JRuby", "target": 0}
{"idx": 8269, "func": "context.swapValues(); //context.consumeCurrentValue();", "target": 0}
{"idx": 8270, "func": "mockApplication", "target": 0}
{"idx": 8271, "func": "dump stack trace for debugging purposes", "target": 0}
{"idx": 8272, "func": "computes the stack size variation", "target": 0}
{"idx": 8273, "func": "If we are blocked by a member of a deadlock chain but do not belong to the deadlock chain ourselves this prevents a forever loop.", "target": 0}
{"idx": 8274, "func": "no action required.", "target": 0}
{"idx": 8275, "func": "add the profile to the project configuration", "target": 0}
{"idx": 8276, "func": "Extent ignored for eUML2 implementation (required for NetBeans MDR)", "target": 0}
{"idx": 8277, "func": "//{{{ try to merge with an existing menu first", "target": 0}
{"idx": 8278, "func": "ignore, no debugger present", "target": 0}
{"idx": 8279, "func": "line 466", "target": 0}
{"idx": 8280, "func": "Change to true to enable testing", "target": 0}
{"idx": 8281, "func": "Must be in 0x0040-0x005f", "target": 0}
{"idx": 8282, "func": "TODO - should check that error has been logged...", "target": 1}
{"idx": 8283, "func": "//hum ... should we cascade anyway? throw an exception? fine like it is?", "target": 1}
{"idx": 8284, "func": "This is what we expect", "target": 0}
{"idx": 8285, "func": "@see javax.swing.JComponent#setVisible(boolean)", "target": 0}
{"idx": 8286, "func": "MySQL disallows quoted column identifiers when dropping a column.", "target": 0}
{"idx": 8287, "func": "//-- ApacheCatalogResolver", "target": 0}
{"idx": 8288, "func": "//all methods static", "target": 0}
{"idx": 8289, "func": "skip backup files. This is actually a workaround for the cpp generator, which always creates backup files (it's a bug).", "target": 0}
{"idx": 8290, "func": "//{{{ RecentMenu class", "target": 0}
{"idx": 8291, "func": "Set up for next iteration", "target": 0}
{"idx": 8292, "func": "TODO: we didn't check the width yet", "target": 1}
{"idx": 8293, "func": "Do not exit", "target": 0}
{"idx": 8294, "func": "Containing class...The parent of Object is null. Object should always be last in chain.", "target": 0}
{"idx": 8295, "func": "TODO: this assumes ranges are sorted. Is this true? - tfm", "target": 1}
{"idx": 8296, "func": "line 782", "target": 0}
{"idx": 8297, "func": "After this it can't be stopped anymore!", "target": 0}
{"idx": 8298, "func": "Set clonedSet;", "target": 0}
{"idx": 8299, "func": "//{{{ Initialize some misc. stuff", "target": 0}
{"idx": 8300, "func": "Duration", "target": 0}
{"idx": 8301, "func": "ColumbaHeader header = (ColumbaHeader) headerList.get(uid); header.getAttributes().put(key, value);", "target": 0}
{"idx": 8302, "func": "value font", "target": 0}
{"idx": 8303, "func": "have to do this because setText() sets index to -1", "target": 0}
{"idx": 8304, "func": "//TODO:", "target": 0}
{"idx": 8305, "func": "//{{{ isCellEditable() method", "target": 0}
{"idx": 8306, "func": "TODO: Unused?", "target": 1}
{"idx": 8307, "func": "To avoid any problems if components are added or removed while the message is being sent", "target": 0}
{"idx": 8308, "func": "Get the mimepart", "target": 0}
{"idx": 8309, "func": "RENAME TABLE <tablename> TO <newtablename>;", "target": 0}
{"idx": 8310, "func": "setup", "target": 0}
{"idx": 8311, "func": "borderStroke", "target": 0}
{"idx": 8312, "func": "Specified property-name is \"\" -> true", "target": 0}
{"idx": 8313, "func": "remove color // add color selection to reference", "target": 0}
{"idx": 8314, "func": "/First column is X data", "target": 0}
{"idx": 8315, "func": "//TODO: this class depends directly upon CriteriaImpl, in the impl package ... add a CriteriaImplementor interface", "target": 1}
{"idx": 8316, "func": "line 481", "target": 0}
{"idx": 8317, "func": "SSS: FIXME: Somewhere here, we need to record information the type of this operand as String", "target": 1}
{"idx": 8318, "func": "No new methods.", "target": 0}
{"idx": 8319, "func": "//{{{ showBufferSwitcher() method", "target": 0}
{"idx": 8320, "func": "//{{{ getMenuName() method", "target": 0}
{"idx": 8321, "func": "line 1818", "target": 0}
{"idx": 8322, "func": "fillPaint", "target": 0}
{"idx": 8323, "func": "create an actual polygon", "target": 0}
{"idx": 8324, "func": "Tempering", "target": 0}
{"idx": 8325, "func": "//Interrogate JDBC metadata", "target": 0}
{"idx": 8326, "func": "substring longer than string", "target": 0}
{"idx": 8327, "func": "f2name shouldn't be selected: only timestamp has changed!", "target": 0}
{"idx": 8328, "func": "Set of options that we want to copy from the current definition", "target": 0}
{"idx": 8329, "func": "add the tables.", "target": 0}
{"idx": 8330, "func": "Eager fetch the collection so we can use it detached", "target": 0}
{"idx": 8331, "func": "We get the posted bytes using the charset that was used to create them", "target": 0}
{"idx": 8332, "func": "Should we download external DTDs?", "target": 0}
{"idx": 8333, "func": "Extra careful now, not to keep any references to the second argument.", "target": 0}
{"idx": 8334, "func": "Make the connection ready for sending post data", "target": 0}
{"idx": 8335, "func": "'d' and 'i' are the same", "target": 0}
{"idx": 8336, "func": "//{{{ Position tool bars if they are managed by us", "target": 0}
{"idx": 8337, "func": "line 411", "target": 0}
{"idx": 8338, "func": "On second pass render shapes and collect entity and tooltip information", "target": 0}
{"idx": 8339, "func": "For n same values in sum of square is equal to nval^2", "target": 0}
{"idx": 8340, "func": "i18n[hashtabledataset.value=Value]", "target": 0}
{"idx": 8341, "func": "Make sure we start with a reasonable value", "target": 0}
{"idx": 8342, "func": "Build IR for body", "target": 0}
{"idx": 8343, "func": "//{{{ checkDelegateEnd() method", "target": 0}
{"idx": 8344, "func": "Add our other standard marker. //", "target": 0}
{"idx": 8345, "func": "since we cannot do exact matches on floating point numbers, we cannot use this field in the WHERE clause.", "target": 0}
{"idx": 8346, "func": "//{{{ DynamicMenuChanged constructor", "target": 0}
{"idx": 8347, "func": "line 965", "target": 0}
{"idx": 8348, "func": "//small log values in use; create numeric value for tick", "target": 0}
{"idx": 8349, "func": "Finds a classifier with a certain name.<p> Will only return first classifier with the matching name. TODO: Move to Model subsystem - tfm 20070307 @param s is short name. @param ns Namespace where we do the search. @return the found classifier (or <code>null</code> if not found).", "target": 1}
{"idx": 8350, "func": "line 638", "target": 0}
{"idx": 8351, "func": "still running at this point, i.e. setUp was not cancelled for each thread group", "target": 0}
{"idx": 8352, "func": "Update the current field. The addend is only expected to be +1/-1, but other values will work. N.B. the roll() method only supports changes by a single unit - up or down", "target": 0}
{"idx": 8353, "func": "feature is instance of EAttribute", "target": 0}
{"idx": 8354, "func": "This just handles a particular case of component projection, perhaps get rid of it and throw an exception", "target": 0}
{"idx": 8355, "func": "in order to make pragma's noops we set location to a special value", "target": 0}
{"idx": 8356, "func": "i18n[oracle.rowsPerExec=Rows per Exec]", "target": 0}
{"idx": 8357, "func": "//TestCase/isSetGenFeature.annotations.insert.javajetinc", "target": 0}
{"idx": 8358, "func": "(non-Javadoc) @see org.columba.core.gui.frame.focus.FocusOwner#isUndoActionEnabled()", "target": 0}
{"idx": 8359, "func": "ENEBO: Very wrong", "target": 1}
{"idx": 8360, "func": "//i18n[ImportTableDataCommand.settingsDialogTitle=Import file settings]", "target": 0}
{"idx": 8361, "func": "//{{{ usage() method", "target": 0}
{"idx": 8362, "func": "MAIN PANEL", "target": 0}
{"idx": 8363, "func": "@see tudresden.ocl.check.types.Type#navigateQualified( java.lang.String, tudresden.ocl.check.types.Type[])", "target": 0}
{"idx": 8364, "func": "Note: We can't use file.exists() to check whether the symlink exists or not, because that method returns false for existing but broken symlink. So, we try without the existence check, but in the try-catch block. MRI behavior: symlink? on broken symlink should return true.", "target": 0}
{"idx": 8365, "func": "Reached EOF: //", "target": 0}
{"idx": 8366, "func": "\"ALTER SEQUENCE $sequenceName$ \" + \"$restartWith$ $startValue$ \" + \"$incrementBy$ $incrementValue$ \";", "target": 0}
{"idx": 8367, "func": "i18n[Application.splash.loadsqlhistory=Loading SQL history...]", "target": 0}
{"idx": 8368, "func": "Our wrapped version of the same error", "target": 0}
{"idx": 8369, "func": "In case last next was the newline.", "target": 0}
{"idx": 8370, "func": "WebsphereMQ does not allow corr. id. to be set using setStringProperty() $NON-NLS-1$", "target": 0}
{"idx": 8371, "func": "we support up to 3 address entries (work/private/other)", "target": 0}
{"idx": 8372, "func": "Added by Patch 2856103 for Apple/Mac", "target": 0}
{"idx": 8373, "func": "special case: no current development version", "target": 0}
{"idx": 8374, "func": "Remove zero width non-breaking space, which may be used as a byte order marker, and may be ignored according to the Unicode FAQ: http://www.unicode.org/unicode/faq/utf_bom.html#38 //", "target": 0}
{"idx": 8375, "func": "Set tableSP's preferred height to 0 so that details height is used in pack()", "target": 0}
{"idx": 8376, "func": "//{{{ getCaretLine() method", "target": 0}
{"idx": 8377, "func": "Add regexp tester pane $NON-NLS-1$ $NON-NLS-1$", "target": 0}
{"idx": 8378, "func": "@see org.argouml.ui.targetmanager.TargetListener#targetRemoved( TargetEvent)", "target": 0}
{"idx": 8379, "func": "apply theme", "target": 0}
{"idx": 8380, "func": "No need to update if model element went away", "target": 0}
{"idx": 8381, "func": "---- fileunderLabel ----", "target": 0}
{"idx": 8382, "func": "data offset will be filled later", "target": 0}
{"idx": 8383, "func": "superclass does not support types", "target": 0}
{"idx": 8384, "func": "//return the id in the event object", "target": 0}
{"idx": 8385, "func": "(non-Javadoc) @see org.columba.addressbook.gui.tree.AddressbookTreeNode#getName()", "target": 0}
{"idx": 8386, "func": "register protocol handler", "target": 0}
{"idx": 8387, "func": "can't set TC classloader", "target": 0}
{"idx": 8388, "func": "&& state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {", "target": 0}
{"idx": 8389, "func": "//private POP3ServerCollection popServer;", "target": 0}
{"idx": 8390, "func": "This fixes the issue where the tree is getting constructed prior to the Oracle plugin expanders being registered.(USERS, SESSIONS, INSTANCES nodes have no children until the tree is refreshed). Even though this is a hack, it doesn't seem to negatively impact performance even when loading all schemas.", "target": 0}
{"idx": 8391, "func": "end class CrOppEndConflict", "target": 0}
{"idx": 8392, "func": "TODO: Make this final asap.", "target": 1}
{"idx": 8393, "func": "//default true:", "target": 0}
{"idx": 8394, "func": "create string from inputstream", "target": 0}
{"idx": 8395, "func": "there is also a javax.swing.text.Document class.", "target": 0}
{"idx": 8396, "func": "alu operations", "target": 0}
{"idx": 8397, "func": "this really needs to be inlined here", "target": 0}
{"idx": 8398, "func": "we support up to 4 phone entries", "target": 0}
{"idx": 8399, "func": "Fetch Reader content up to the end - and put characters in a StringBuffer", "target": 0}
{"idx": 8400, "func": "list.repaint();", "target": 0}
{"idx": 8401, "func": "ensure no drawing occurs outside chart area...", "target": 0}
{"idx": 8402, "func": "The container class must be null for the open content features of the document root to ensure that they are looked up in the actual eClass() rather than assumed to be a feature with a feature ID relative to the actual class. Otherwise, it's good to have this optimization. //", "target": 0}
{"idx": 8403, "func": "---- privateCountryLabel ----", "target": 0}
{"idx": 8404, "func": "catalog <--> catalog", "target": 0}
{"idx": 8405, "func": "line 791", "target": 0}
{"idx": 8406, "func": "emptyDirectory", "target": 0}
{"idx": 8407, "func": "//there is no harm in trying to clear up", "target": 0}
{"idx": 8408, "func": "i18n[TableExportCsvController.fileChooserButton=Choose]", "target": 0}
{"idx": 8409, "func": "add to global buddy list", "target": 0}
{"idx": 8410, "func": "//+this.fixedString", "target": 0}
{"idx": 8411, "func": "Set it!", "target": 0}
{"idx": 8412, "func": "2 columns size", "target": 0}
{"idx": 8413, "func": "in an effort to avoid concurrent-modification-exceptions (from potential recursive calls back through here as a result of the eventual call to PersistentCollection#endRead), we scan the internal loadingCollections map for matches and store those matches in a temp collection. the temp collection is then used to \"drive\" the #endRead processing.", "target": 0}
{"idx": 8414, "func": "//scan the query string for class names appearing in the from clause and replace //with all persistent implementors of the class/interface, returning multiple //query strings (make sure we don't pick up a class in the select clause!)", "target": 0}
{"idx": 8415, "func": "yHigh", "target": 0}
{"idx": 8416, "func": "Determine if the operation is executable. //", "target": 0}
{"idx": 8417, "func": "protected CharsetMenuItem selectedMenuItem = new CharsetMenuItem(null);", "target": 0}
{"idx": 8418, "func": "Option to select default catalog only applies to sessions that support catalogs.", "target": 0}
{"idx": 8419, "func": "@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event. DocumentEvent)", "target": 0}
{"idx": 8420, "func": "try to delete", "target": 0}
{"idx": 8421, "func": "contains AbstractFileSet (both DirSet and FileSet)", "target": 0}
{"idx": 8422, "func": "The hostname cannot change during a run, so safe to cache it just once", "target": 0}
{"idx": 8423, "func": "does the file really exists?", "target": 0}
{"idx": 8424, "func": "move all children to the enum, converting some fields to constants", "target": 0}
{"idx": 8425, "func": "The following angle calc will ensure there isn't a top vertical axis - this may be useful if you don't want any given criteria to 'appear' move important than the others.. + (getDirection().getFactor() (cat + 0.5) 360 / catCount);", "target": 0}
{"idx": 8426, "func": "//defaultButton.setEnabled(enabled);", "target": 0}
{"idx": 8427, "func": "//i18n[ColumnDetailsDialog.columnCommentLabel={0} does not //support column comments]", "target": 0}
{"idx": 8428, "func": "TODO: Make this work when the given stereotype has more than one baseclass. TODO: Currently only works for stereotypes where the baseclass is equal to the given one - inheritance does not work.", "target": 1}
{"idx": 8429, "func": "load the info into the text fields", "target": 0}
{"idx": 8430, "func": "These names must agree case-wise with the variable and property names //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$", "target": 0}
{"idx": 8431, "func": "//{{{ setDragEnabled() method", "target": 0}
{"idx": 8432, "func": "line 1145", "target": 0}
{"idx": 8433, "func": "i18n[DataSetUpdateableTableModelImpl.error.staleupdaterow=This row in the Database has been changed since you refreshed the data.\\nNo rows will be updated by this operation.\\nDo you wish to proceed?]", "target": 0}
{"idx": 8434, "func": "save the ungot", "target": 0}
{"idx": 8435, "func": "//i18n[ColumnListDialog.modifyTitle=Select Column To Modify]", "target": 0}
{"idx": 8436, "func": "Report a progress to the ProgressMonitor window. @see org.argouml.application.api.ProgressMonitor#updateProgress(int)", "target": 0}
{"idx": 8437, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#nullPlusNonNullIsNull()", "target": 0}
{"idx": 8438, "func": "utility method", "target": 0}
{"idx": 8439, "func": "encapsulate bodytext in html-code", "target": 0}
{"idx": 8440, "func": "add a second dataset", "target": 0}
{"idx": 8441, "func": "now, start printing the targets and their descriptions", "target": 0}
{"idx": 8442, "func": "end class CrAlreadyRealizes", "target": 0}
{"idx": 8443, "func": "1 < buf.size()", "target": 0}
{"idx": 8444, "func": "Do nothing! The next time we refresh, we will fetch the values again.", "target": 0}
{"idx": 8445, "func": "Not yet ready DataImportGlobalPreferencesTab tab = new DataImportGlobalPreferencesTab(); return new IGlobalPreferencesPanel[] { tab };", "target": 1}
{"idx": 8446, "func": "//if all fields are null, we might need to delete existing row", "target": 0}
{"idx": 8447, "func": "Do not use TestCase.run(TestResult) method, since it will call setUp and tearDown. Doing that will result in calling the setUp and tearDown method twice and the elapsed time will include setup and teardown.", "target": 0}
{"idx": 8448, "func": "@see org.argouml.ui.targetmanager.TargetListener#targetRemoved( org.argouml.ui.targetmanager.TargetEvent)", "target": 0}
{"idx": 8449, "func": "String not exhausted, but pattern is. Failure.", "target": 0}
{"idx": 8450, "func": "Override the logging of output in order to filter out Generating messages. Generating messages are set to a priority of VERBOSE unless they appear after what could be an informational message. //", "target": 0}
{"idx": 8451, "func": "Options for global popup menu.", "target": 0}
{"idx": 8452, "func": "//{{{ getDependentPlugins() method", "target": 0}
{"idx": 8453, "func": "line 479", "target": 0}
{"idx": 8454, "func": "TODO: Some elements such as Generalization are no longer named. For a transitional period we'll return a String so debug can continue, but the calling code should probably be fixed. - tfm 20070607 Bob says - these are the comments that were in FacadeEUMLImpl.getName. Same trick is needed here for now.", "target": 1}
{"idx": 8455, "func": "so that Home <mouse click> Home is not the same as pressing Home twice in a row", "target": 0}
{"idx": 8456, "func": "The 1st region has an invisible divider line (the box is always invisible):", "target": 0}
{"idx": 8457, "func": "semantic action processing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 8458, "func": "If source column is type 1111 (OTHER), try to use the column type name to find a type that isn't 1111.", "target": 0}
{"idx": 8459, "func": "//not modified so no file download. just return //instead and trace out something so the user //doesn't think that the download happened when it //didn't", "target": 0}
{"idx": 8460, "func": "The registrations below are made in support for new types introduced in Java6", "target": 0}
{"idx": 8461, "func": "TODO: Need to add storageOptions to the add index dialog valuesMap.put(ST_STORAGE_OPTION_KEY, );", "target": 1}
{"idx": 8462, "func": "Rule for Project->Root (Top level) Elements. TODO: As currently implemented it returns all top level elements in the model repository, not just those in a given project. Since we only support a single project at a time currently, these are equivalent but this will need to be enhanced with additional bookkeeping in Project when we support multiple open projects - tfm. TODO: I changed it to get the roots from the project. It was showing the profiles that were loaded but were not applied to the current project - maurelio1234. @author Tom Morris <tfmorris@gmail.com>", "target": 0}
{"idx": 8463, "func": "noDataMessageFont", "target": 0}
{"idx": 8464, "func": "handle zoom box", "target": 0}
{"idx": 8465, "func": "register interested on changes in the running worker list", "target": 0}
{"idx": 8466, "func": "now test with a single value in the series...", "target": 0}
{"idx": 8467, "func": "Parse an element-content model. [42] elements ::= (choice | seq) ('?' | '' | '+')? [44] cps ::= S? %cp S? [45] choice ::= '(' S? %ctokplus (S? '|' S? %ctoks) S? ')' [46] ctokplus ::= cps ('|' cps)+ [47] ctoks ::= cps ('|' cps) [48] seq ::= '(' S? %stoks (S? ',' S? %stoks) S? ')' [49] stoks ::= cps (',' cps) NOTE: the opening '(' and S have already been read. TODO: go over parameter entity boundaries more carefully.", "target": 1}
{"idx": 8468, "func": "The ArgoUML version with which this project was last saved:", "target": 0}
{"idx": 8469, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.datasetviewer.IDataSet#get(int)", "target": 0}
{"idx": 8470, "func": "If there's a second argument, it's the path to which the first argument is relative.", "target": 0}
{"idx": 8471, "func": "return default-account identityItem instead", "target": 0}
{"idx": 8472, "func": "This test tries to emulate a http sample, with two subsamples, representing images that are downloaded for the page representing the first sample.", "target": 0}
{"idx": 8473, "func": "Do not allow an existing MANIFEST.MF to be overwritten, as the tests project is originally generated from scratch. //", "target": 0}
{"idx": 8474, "func": "record the plot area...", "target": 0}
{"idx": 8475, "func": "//{{{ nextTabStop() method", "target": 0}
{"idx": 8476, "func": "@see java.io.FileFilter#accept(java.io.File)", "target": 0}
{"idx": 8477, "func": "called by HttpRequestHdr", "target": 0}
{"idx": 8478, "func": "TODO add javadocs", "target": 1}
{"idx": 8479, "func": "$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$", "target": 0}
{"idx": 8480, "func": "@return the statemachine TODO: If this method is called by any of the Figs, it will introduce a dependency cycle. It would be much better if they could just use {@link org.argouml.uml.diagram.ArgoDiagram#getOwner()} which does the same thing.", "target": 1}
{"idx": 8481, "func": "column keys...", "target": 0}
{"idx": 8482, "func": "i18n[HibernateAttribuiteDataSet.attrName=Attribute name]", "target": 0}
{"idx": 8483, "func": "Set if we were successful or not", "target": 0}
{"idx": 8484, "func": "isRetained=true", "target": 0}
{"idx": 8485, "func": "dynamically increase", "target": 0}
{"idx": 8486, "func": "small icon for menu", "target": 0}
{"idx": 8487, "func": "!!! Size = 12 create filter configuration -> check if <Subject> <contains> pattern <test>", "target": 0}
{"idx": 8488, "func": "no messages in this folder", "target": 0}
{"idx": 8489, "func": "create command", "target": 0}
{"idx": 8490, "func": "TEXT FIELD $NON-NLS-1$", "target": 0}
{"idx": 8491, "func": "update tree label", "target": 0}
{"idx": 8492, "func": "always returns original value", "target": 0}
{"idx": 8493, "func": "volatile, transient", "target": 0}
{"idx": 8494, "func": "i18n[TimeDateFunctionsTab.title=Time/Date Functions]", "target": 0}
{"idx": 8495, "func": "yearFormatter", "target": 0}
{"idx": 8496, "func": "//this is the list of lu", "target": 0}
{"idx": 8497, "func": "(non-Javadoc) @see jodd.lagarto.EmptyTagVisitor#tag(jodd.lagarto.Tag)", "target": 0}
{"idx": 8498, "func": "If there is no data type for this node, and we're at the end of the path (top most dot node), then this might be a Java constant.", "target": 0}
{"idx": 8499, "func": "create a DirectoryEntry manually instead of using _vfs._getDirectoryEntry() since so many VFS's have broken implementations of this method", "target": 0}
{"idx": 8500, "func": "TODO: correctly implement next function in the model subsystem for issue 1942:", "target": 1}
{"idx": 8501, "func": "data is longer than the limit, so we need to do more checking", "target": 0}
{"idx": 8502, "func": "Raw protocol methods below here", "target": 0}
{"idx": 8503, "func": "Set a value in the RubyHash", "target": 0}
{"idx": 8504, "func": "We represent a from-clause alias", "target": 0}
{"idx": 8505, "func": "Is it typed?", "target": 0}
{"idx": 8506, "func": "Now read it and check the results.", "target": 0}
{"idx": 8507, "func": "//{{{ userInput() method", "target": 0}
{"idx": 8508, "func": "Alter table <table> add constraint <constraint> foreign key(<column>) references <table>(<column>) on delete set null", "target": 0}
{"idx": 8509, "func": "return \"parsing.java.help.attribute\";", "target": 0}
{"idx": 8510, "func": "//int columnIndex = getColumnIndex(columnKey);", "target": 0}
{"idx": 8511, "func": "class attributes", "target": 0}
{"idx": 8512, "func": "which UID should be downloaded next", "target": 0}
{"idx": 8513, "func": "ignore this row of results! Note the early exit", "target": 0}
{"idx": 8514, "func": "Is there something built into JRuby to do this?", "target": 0}
{"idx": 8515, "func": "tests one the file object", "target": 0}
{"idx": 8516, "func": "//{{{ getActionForEvent() method", "target": 0}
{"idx": 8517, "func": "some database keys, see #getProperties(int)", "target": 0}
{"idx": 8518, "func": "-- Implementation private methods --", "target": 0}
{"idx": 8519, "func": "Ensure transient object is created by the server", "target": 0}
{"idx": 8520, "func": "Insert the workbench node", "target": 0}
{"idx": 8521, "func": "line 1705", "target": 0}
{"idx": 8522, "func": "take into account the tab is not as wide as the body:", "target": 0}
{"idx": 8523, "func": "@see tudresden.ocl.check.types.Type#conformsTo(tudresden.ocl.check.types.Type)", "target": 0}
{"idx": 8524, "func": "------------------------------------------ general Javadoc arguments", "target": 0}
{"idx": 8525, "func": "append the new Date header", "target": 0}
{"idx": 8526, "func": "most recent", "target": 0}
{"idx": 8527, "func": "//Getting java.sql.Driver to run shutdown command", "target": 0}
{"idx": 8528, "func": "if user drops into the same selection where they started, do nothing.", "target": 0}
{"idx": 8529, "func": "Expressions are DataTypes, not independent model elements be careful not to reuse them", "target": 0}
{"idx": 8530, "func": "BUGFIX but don't know why that bug occurs", "target": 0}
{"idx": 8531, "func": "//{{{ getCaretPosition() method", "target": 0}
{"idx": 8532, "func": "MRI has extra pointer which makes our code look a little bit more strange in comparison", "target": 0}
{"idx": 8533, "func": "i18n[SQLResultExecuterPanel.sqlLabel=SQL:]", "target": 0}
{"idx": 8534, "func": "simply all all group items to the list", "target": 0}
{"idx": 8535, "func": "update all subclasses", "target": 0}
{"idx": 8536, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsSubqueriesInExists()", "target": 0}
{"idx": 8537, "func": "SEQUENCE TYPE DBO", "target": 0}
{"idx": 8538, "func": "We will need to check the containment if we have to convert the EAttribute to an EReference later. //", "target": 0}
{"idx": 8539, "func": "Test all possible matches for this number of repeats", "target": 0}
{"idx": 8540, "func": "if the original object is not null, then it contains a Clob object that we need to re-use, since that is the DBs reference to the clob data area. Otherwise, we set the original Clob to null, and the write method needs to know to set the field to null.", "target": 0}
{"idx": 8541, "func": "If there's no position, the list is being cleared. //", "target": 0}
{"idx": 8542, "func": "line 271", "target": 0}
{"idx": 8543, "func": "found contact item in contact component", "target": 0}
{"idx": 8544, "func": "If this folder has children add them TODO: In the future we should try to fetch additional children on demand when the tree of the dialog is opened", "target": 1}
{"idx": 8545, "func": "For Transition use indirection through target StateVertex", "target": 0}
{"idx": 8546, "func": "//overriden to avoid System.exit", "target": 0}
{"idx": 8547, "func": "//MVW", "target": 0}
{"idx": 8548, "func": "TODO: Also check REG_ANCHORINDEX vs. anchor", "target": 1}
{"idx": 8549, "func": "//Class/eUnset.override.javajetinc", "target": 0}
{"idx": 8550, "func": "traverse element node", "target": 0}
{"idx": 8551, "func": "catch those hooligans passing null urls", "target": 0}
{"idx": 8552, "func": "super is now the closure's super or class instance", "target": 0}
{"idx": 8553, "func": "//$NON-NLS-1$ //-- JMX tag values", "target": 0}
{"idx": 8554, "func": "the test runner that wrap the dummy formatter that interests us", "target": 0}
{"idx": 8555, "func": "Builds an initialized stereotype with no namespace. A stereotype must have a namespace so this method is unsafe. Use buildStereotype(String, Object). @param text is the name of the stereotype @return an initialized stereotype.", "target": 0}
{"idx": 8556, "func": "invokeinterface enabled.getInterceptFieldCallback()", "target": 0}
{"idx": 8557, "func": "RETRIEVE IMAGES $NON-NLS-1$", "target": 0}
{"idx": 8558, "func": "we've found a Java type to which we've coerced the Ruby value, wrap it", "target": 0}
{"idx": 8559, "func": "Skips '.'", "target": 0}
{"idx": 8560, "func": "//////////////////////////////////////////////////////////////critiquing API", "target": 0}
{"idx": 8561, "func": "//{{{ isLineVisible() method", "target": 0}
{"idx": 8562, "func": "i18n[HibernateConfigPanel.classPathRemove=Remove selected entries]", "target": 0}
{"idx": 8563, "func": "We're greedy, but ease off until a true match is found", "target": 0}
{"idx": 8564, "func": "object is a java.lang wrapper for boolean, char, or number type", "target": 0}
{"idx": 8565, "func": "//TODO: assumes all collections disassemble to an array!", "target": 1}
{"idx": 8566, "func": "labelFont", "target": 0}
{"idx": 8567, "func": "-------------------- Methods to override --------------------", "target": 0}
{"idx": 8568, "func": "Load the resource through the editing domain. //", "target": 0}
{"idx": 8569, "func": "Disable DELETE if there are no rows in the table to delete.", "target": 0}
{"idx": 8570, "func": "Selection controller with two sub-controllers, but each has only 1 child", "target": 0}
{"idx": 8571, "func": "this should not happen since the DTD prevents it", "target": 0}
{"idx": 8572, "func": "//Ignore exception", "target": 0}
{"idx": 8573, "func": "Methods for interacting with Parser", "target": 0}
{"idx": 8574, "func": "draw the plot background...", "target": 0}
{"idx": 8575, "func": "check that the generator has been cloned", "target": 0}
{"idx": 8576, "func": "Find all the classes which implement the JavaSamplerClient interface.", "target": 0}
{"idx": 8577, "func": "load all table types with catalog = doi.getCatalog() and schema = doi.getSchema()", "target": 0}
{"idx": 8578, "func": "select.add(ActionAddEventAsDeferrableEvent.SINGLETON);", "target": 0}
{"idx": 8579, "func": "draw the label", "target": 0}
{"idx": 8580, "func": "here we tweak the notify flag on the plot so that only one notification happens even though we update multiple axes...", "target": 1}
{"idx": 8581, "func": "segments starts at front and finishes at back...", "target": 0}
{"idx": 8582, "func": "Create description", "target": 0}
{"idx": 8583, "func": "actual cache of the entries. soft references are used for both the keys and the values here since the values pertaining to the MRU entries are kept in a seperate hard reference cache (to avoid their enqueuement/garbage-collection).", "target": 0}
{"idx": 8584, "func": "This is needed for the JUnit tests. Otherwise a \"assert initialized\" would suffice.", "target": 0}
{"idx": 8585, "func": "line 1111", "target": 0}
{"idx": 8586, "func": "If there are siblings that need to be reparented. //", "target": 0}
{"idx": 8587, "func": "checkbox for limit/no-limit on data read during initial table load", "target": 0}
{"idx": 8588, "func": "TODO: Rather than specifically ignore some item maybe it would be better to specifically state what items are of interest. Otherwise we may still be acting on other events we don't need", "target": 1}
{"idx": 8589, "func": "Does not open file", "target": 0}
{"idx": 8590, "func": "TODO: Probably really want to cancel editing //((FigTextEditor) focusOwner).cancelEditing();", "target": 0}
{"idx": 8591, "func": "//i18n[syntax.findExplain=Press F3 to go to next result. Press Ctrl+Shift+F7 to toggle highlight search.]", "target": 0}
{"idx": 8592, "func": "First try the buffer-local properties", "target": 0}
{"idx": 8593, "func": "----------------------------------------------------", "target": 0}
{"idx": 8594, "func": "TODO: Do we really want stereotypes from nested packages?", "target": 1}
{"idx": 8595, "func": "H2 uses Java classes that implement the \"Trigger\" interface to operate on database tables rows when an action triggers them. Therefore, there is currently no way to access the source for a trigger. Hopefully this will change at some point in the future. _treeAPI.addDetailTab(DatabaseObjectType.TRIGGER, new TriggerSourceTab(\"The source of the trigger\"));", "target": 1}
{"idx": 8596, "func": "//i18n[WhereClausePanel.operatorsLabel=Operators]", "target": 0}
{"idx": 8597, "func": "We define an actual list to get around bug in java integration (1387115)", "target": 0}
{"idx": 8598, "func": "Check against \"\" is needed for backward compatibility. Don't remove without checking subclasses and warning downstream developers - tfm - 20081211", "target": 0}
{"idx": 8599, "func": "the initial x is the left side of the activation", "target": 0}
{"idx": 8600, "func": "case SCLASSNODE: return buildSClass(node, m); DEFERRED done done done done done done done done case UNDEFNODE: return buildUndef(node, m); DEFERRED done case VALIASNODE: return buildVAlias(node, m); DEFERRED done done", "target": 0}
{"idx": 8601, "func": "//{{{ getPhysicalLineOfScreenLine() method", "target": 0}
{"idx": 8602, "func": "For testing only at present", "target": 0}
{"idx": 8603, "func": "check if starting new column", "target": 0}
{"idx": 8604, "func": "Void type keyword numeric-id", "target": 0}
{"idx": 8605, "func": "N.B. Originally the response code was saved with the code \"rs\" but retrieved with the code \"rc\". Changed to always use \"rc\", but allow for \"rs\" when restoring values. //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$", "target": 0}
{"idx": 8606, "func": "The group must be resized if a text field exceed the bounds", "target": 0}
{"idx": 8607, "func": "return the generator for ALL series, if there is one...", "target": 0}
{"idx": 8608, "func": "look for illegal chars", "target": 0}
{"idx": 8609, "func": "Finds our starting angle from the centre for this axis", "target": 0}
{"idx": 8610, "func": "N.B. default charset is used deliberately here", "target": 0}
{"idx": 8611, "func": "read VCARD file into string buffer", "target": 0}
{"idx": 8612, "func": "i18n[ColorPropertiesController.hint=Set session colors for this Alias]", "target": 0}
{"idx": 8613, "func": "Look for the loaded command", "target": 0}
{"idx": 8614, "func": "ARRAY and STRUCT are only used internally", "target": 0}
{"idx": 8615, "func": "i18n[ProgressBarDialog.insertingRecordsLabel=Copying records]", "target": 0}
{"idx": 8616, "func": "record data about the last scanned resource", "target": 0}
{"idx": 8617, "func": "line 436", "target": 0}
{"idx": 8618, "func": "Set the current value:", "target": 0}
{"idx": 8619, "func": "verify isRelevant not is false", "target": 0}
{"idx": 8620, "func": "There actually don't appear to be any restrictions on the namespace for a Generalization. The UML 1.4 WFR 2.5.3.20 #3 refers to GeneralizableElements, not Generalizations - tfm", "target": 0}
{"idx": 8621, "func": "Helper method to get an attribute value, if it exists @param attrs list of attributs @param attname attribute name @return", "target": 0}
{"idx": 8622, "func": "frame", "target": 0}
{"idx": 8623, "func": "//?? Extract this out into a class like CascadeInternalFramePositioner.", "target": 1}
{"idx": 8624, "func": "by default the build already builds one default EP", "target": 0}
{"idx": 8625, "func": "tfMailFrom.setEnabled(false); tfMailTo.setEnabled(false); tfMailToCC.setEnabled(false); tfMailToBCC.setEnabled(false); tfSubject.setEnabled(false);", "target": 0}
{"idx": 8626, "func": "strip the - -- sequence .. it can either mean a change of state to STATE_NO_OPTIONS or else a long option", "target": 0}
{"idx": 8627, "func": "majorTickIncrement majorTickLength majorTickPaint majorTickStroke minorTickCount minorTickLength minorTickPaint minorTickStroke tickLabelOffset tickLabelFont tickLabelsVisible tickLabelFormatter firstTickLabelsVisible", "target": 0}
{"idx": 8628, "func": "////////////////COMMON CONSTANT / CVAR METHODS ////////////////", "target": 0}
{"idx": 8629, "func": "Empty constructor", "target": 0}
{"idx": 8630, "func": "//{{{ Key class", "target": 0}
{"idx": 8631, "func": "Redisplay.", "target": 0}
{"idx": 8632, "func": "store the local vars in a local variable for preparing the class (using previous scope)", "target": 0}
{"idx": 8633, "func": "\\d,\\D,\\w,\\W,\\s,\\S", "target": 0}
{"idx": 8634, "func": "If it doesn't correspond to a bundle, then try to process it as a project in the workspace. //", "target": 0}
{"idx": 8635, "func": "GUI Widgets", "target": 0}
{"idx": 8636, "func": "No go through the parse SQL and build the final SQL replacing parameters with values is goes. //", "target": 0}
{"idx": 8637, "func": "//TODO: assertion only, could be optimized away", "target": 1}
{"idx": 8638, "func": "i18n[mssql.generateDependend=Generate scripts for all dependent objects]", "target": 0}
{"idx": 8639, "func": "we can have more than one file in the string so tokenize on whitespace. Let the user know if we find multiple tokens that they cannot place drop than one file at a time", "target": 0}
{"idx": 8640, "func": "Perhaps if Xerces wasn't slightly brain-damaged, we would not need this", "target": 1}
{"idx": 8641, "func": "If the user has selected ModePlace either by a diagram tool or AddToDiagram then we don't want to show the toolbelt items.", "target": 0}
{"idx": 8642, "func": "labels", "target": 0}
{"idx": 8643, "func": "i18n[UpdatePreferencesPanel.dailyLabel=Daily]", "target": 0}
{"idx": 8644, "func": "Add parameterised tests. For simplicity we assune each has cases 0-10", "target": 0}
{"idx": 8645, "func": "Whether to force user to enter dates in exact format or use heuristics to guess it", "target": 0}
{"idx": 8646, "func": "get the source coordinate - this plot has always a VERTICAL orientation", "target": 0}
{"idx": 8647, "func": "TODO: MVW: This needs rethinking/rework! I have the following questions: Why does it not search for a stereotype in the namespace using properties and only create a new stereotype if it will actually be used? Ie, why is there not a getStereotype(String name, String baseClass)? (edited by d00mst) <these comments imported from NSUML implementation - tfm> @see org.argouml.model.ExtensionMechanismsFactory#buildStereotype(java.lang.Object, java.lang.Object, java.lang.Object)", "target": 1}
{"idx": 8648, "func": "add the profile stereotype to the class", "target": 0}
{"idx": 8649, "func": "TODO : add this info to the translator and aggregate it here...", "target": 1}
{"idx": 8650, "func": "Reset the selection", "target": 0}
{"idx": 8651, "func": "<phone> <business>value</business> <home>value</home> </phone>", "target": 0}
{"idx": 8652, "func": "check if totally out of range.", "target": 0}
{"idx": 8653, "func": "Pass 1: compute preferred row heights / column widths", "target": 0}
{"idx": 8654, "func": "//{{{ getDefault() method", "target": 0}
{"idx": 8655, "func": "bottom-label-case", "target": 0}
{"idx": 8656, "func": "get account information from message", "target": 0}
{"idx": 8657, "func": "The prefix really is a prefix of this. If this has just one more, empty segment, the paths are the same.", "target": 0}
{"idx": 8658, "func": "declaringNameSpace", "target": 0}
{"idx": 8659, "func": "Make sure the container is not being put into a contained object. //", "target": 0}
{"idx": 8660, "func": "//domain.getMappingRoot().removeMapping(newMapping);", "target": 0}
{"idx": 8661, "func": "//{{{ parsePermissions() method", "target": 0}
{"idx": 8662, "func": "//{{{ foldHandlerChanged() method", "target": 0}
{"idx": 8663, "func": "just no item added in this case", "target": 0}
{"idx": 8664, "func": "draw farout", "target": 0}
{"idx": 8665, "func": "Whether to skip the delete confirmation dialogue $NON-NLS-1$", "target": 0}
{"idx": 8666, "func": "rounded seconds No point displaying decimals (less than 1% error) decimal would be zero", "target": 0}
{"idx": 8667, "func": "Returns <code>true</code> if this URI contains non-ASCII characters; <code>false</code> otherwise. This unused code is included for possible future use...", "target": 0}
{"idx": 8668, "func": "LOG.log(Level.FINE, \"dragOver\");", "target": 0}
{"idx": 8669, "func": "inverted", "target": 0}
{"idx": 8670, "func": "assume for now that next can only be one character", "target": 0}
{"idx": 8671, "func": "Can't add a Workbench anywhere", "target": 0}
{"idx": 8672, "func": "TODO Charset ? $NON-NLS-1$", "target": 0}
{"idx": 8673, "func": "the model is changed - job done", "target": 0}
{"idx": 8674, "func": "//{{{ isMainThread() method", "target": 0}
{"idx": 8675, "func": "State is concrete in UML 1.3, but becomes abstract in UML 1.4, so we never allow it to be created (and don't test creation)", "target": 0}
{"idx": 8676, "func": "record some sizes to allow HTTPSampleResult.getBytes() with different options", "target": 0}
{"idx": 8677, "func": "undocumented hack to allow browser actions to work. XXX - clean up in 4.3", "target": 1}
{"idx": 8678, "func": "can't zoom domain axis", "target": 0}
{"idx": 8679, "func": "label.setFont(UIManager.getFont(\"Label.font\").deriveFont(Font.PLAIN));", "target": 0}
{"idx": 8680, "func": "for non-ascii character: make it positive, then escape", "target": 0}
{"idx": 8681, "func": "Limit the length of the menu text if needed", "target": 0}
{"idx": 8682, "func": "save passphrase in hash map", "target": 0}
{"idx": 8683, "func": "i18n[oracle.userDetails=Details]", "target": 0}
{"idx": 8684, "func": "//newOp.setOwnerScope(op.getOwnerScope()); //not needed in case of operation", "target": 0}
{"idx": 8685, "func": "i18n[SQLResultExecuterPanel.closeAll=Close all]", "target": 0}
{"idx": 8686, "func": "start() would throw IllegalThreadStateException from ThreadGroup.add if it were destroyed", "target": 0}
{"idx": 8687, "func": "creates a new Edge object or reuses one from the shared pool", "target": 0}
{"idx": 8688, "func": "//{{{ SearchBar constructor", "target": 0}
{"idx": 8689, "func": "(non-Javadoc) @see org.columba.core.gui.frame.focus.FocusOwner#getComponent()", "target": 0}
{"idx": 8690, "func": "MRI ignores seek errors, presumably for unseekable files like serial ports (JRUBY-2979), so we shall too.", "target": 0}
{"idx": 8691, "func": "//chFields = new JCheckBox[colNames.length];", "target": 0}
{"idx": 8692, "func": "//_sqlEntryFactoryProxy = new OsterSQLEntryAreaFactory(this, originalFactory);", "target": 0}
{"idx": 8693, "func": "walk up hierarchy, looking for an EditPane", "target": 0}
{"idx": 8694, "func": "If the target has changed notify the third party listener if it exists and dispatch a new element event listener to ourself. Otherwise dispatch a target reasserted to ourself.", "target": 0}
{"idx": 8695, "func": "Do string compare of names of UML objects. Comparison is case insensitive using a primary strength collator in the user's locale. @see java.util.Comparator#compare(java.lang.Object, java.lang.Object)", "target": 0}
{"idx": 8696, "func": "line 543", "target": 0}
{"idx": 8697, "func": "//new InQuotesCommand(_session.getSQLPanelAPI(_plugin)).execute();", "target": 0}
{"idx": 8698, "func": "TODO: Temporary until we sort out a better way to do guido's fix assertEquals(SECOND_STMT_SEP, qt2.getSQLStatementSeparator());", "target": 1}
{"idx": 8699, "func": "this part sucks", "target": 1}
{"idx": 8700, "func": "Add components to the panel:", "target": 0}
{"idx": 8701, "func": "FIXME: the renderer interface doesn't have the drawDomainLine() method, so we have to rely on the renderer being a subclass of AbstractXYItemRenderer (which is lame)", "target": 1}
{"idx": 8702, "func": "VirtualMessage m = new VirtualMessage(f, uid, index);", "target": 0}
{"idx": 8703, "func": "no library or extension found, try to load directly as a class", "target": 0}
{"idx": 8704, "func": "Used for saving entries to a file", "target": 0}
{"idx": 8705, "func": "It's a time-event now, but was of another type before!", "target": 0}
{"idx": 8706, "func": "//TODO: use these in methods above", "target": 1}
{"idx": 8707, "func": "//{{{ getNext() method", "target": 0}
{"idx": 8708, "func": "Process any set of annotations No supported options", "target": 0}
{"idx": 8709, "func": "Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 8710, "func": "This is a bit hard coded but if we use _scale here some number displays go crazy.", "target": 1}
{"idx": 8711, "func": "//{{{ selectParagraph() method", "target": 0}
{"idx": 8712, "func": "A constant pool item. Constant pool items can be created with the 'newXXX' methods in the {@link ClassWriter} class.", "target": 0}
{"idx": 8713, "func": "//to stop the class from being unloaded", "target": 0}
{"idx": 8714, "func": "remove extra whitespace", "target": 0}
{"idx": 8715, "func": "//{{{ setMagicCaretPosition() method", "target": 0}
{"idx": 8716, "func": "wrap up any new collections directly referenced by the object or its components", "target": 0}
{"idx": 8717, "func": "construct the proxy method //", "target": 0}
{"idx": 8718, "func": "baseSeriesOutlineStroke", "target": 0}
{"idx": 8719, "func": "compensate for missing slash after drive letter on windows", "target": 0}
{"idx": 8720, "func": "Multiplicity, MultiplicityRange, and all Expression subtypes don't have 0-argument create methods, so we special case them.", "target": 0}
{"idx": 8721, "func": "tickLabelPaint2", "target": 0}
{"idx": 8722, "func": "insert succeeded", "target": 0}
{"idx": 8723, "func": "Add a 0-sized invisible component that will take all the vertical space that nobody wants:", "target": 0}
{"idx": 8724, "func": "//Set USE_REFLECTION_OPTIMIZER to false to fix HHH-227", "target": 0}
{"idx": 8725, "func": "Object#to_a is obsolete. We match Ruby's hack until to_a goes away. Then we can remove this hack too.", "target": 1}
{"idx": 8726, "func": "important: not lineMgr.getScreenLineCount()", "target": 0}
{"idx": 8727, "func": "sends the result to the visualiser updates the model used for sending e-mails", "target": 0}
{"idx": 8728, "func": "Generates expected Exception", "target": 0}
{"idx": 8729, "func": "If we've fallen through here we are no longer resolving to a class type.", "target": 0}
{"idx": 8730, "func": "local file header signature", "target": 0}
{"idx": 8731, "func": "////////////////CLASS VARIABLE RUBY METHODS ////////////////", "target": 0}
{"idx": 8732, "func": "---- label3 ----", "target": 0}
{"idx": 8733, "func": "Anchor position refers to the index into the source input at which the matching operation began. This is also useful for the ANCHORINDEX option.", "target": 0}
{"idx": 8734, "func": "@see org.argouml.uml.diagram.layout.Layouter#remove(org.argouml.uml.diagram.layout.LayoutedObject)", "target": 0}
{"idx": 8735, "func": "If we have no source and dest connector then we assume this is load of an old UML1.4 diagram from before this data was saved in PGML. For UML1.4 we can assume the source is first connection and destination is last connection stored in repository for this association.", "target": 0}
{"idx": 8736, "func": "baseItemURLGenerator", "target": 0}
{"idx": 8737, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsSchemasInIndexDefinitions()", "target": 0}
{"idx": 8738, "func": "not supported by virtual folder", "target": 0}
{"idx": 8739, "func": "\\\\uHHHH", "target": 0}
{"idx": 8740, "func": "add java_method for unbound use", "target": 0}
{"idx": 8741, "func": "If center points are \"close enough\" we just adjust the endpoints of the line a little bit. Otherwise we add a jog in the middle to deal with the offset. TODO: Epsilon is currently fixed, but could probably be computed dynamically as 10% of the width of the narrowest figure or some other value which is visually not noticeable.", "target": 0}
{"idx": 8742, "func": "//{{{ isBackgroundMode() method", "target": 0}
{"idx": 8743, "func": "private List workerslist;", "target": 0}
{"idx": 8744, "func": "Add child to parent", "target": 0}
{"idx": 8745, "func": "$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$", "target": 0}
{"idx": 8746, "func": "//_x = x; _y = y; _w = w; _h = h;", "target": 0}
{"idx": 8747, "func": "NOTE : this is being used from the process of shutting down a SessionFactory. Specific things to consider: (1) this clearing of the region should not propagate to other nodes on the cluster (if any); this is the cache-mode-local option bit... (2) really just trying a best effort to cleanup after ourselves; lock failures, etc are not critical here; this is the fail-silently option bit...", "target": 0}
{"idx": 8748, "func": "Add in additional wrappers to search. //", "target": 0}
{"idx": 8749, "func": "@param response @return", "target": 0}
{"idx": 8750, "func": "If it's newly allocated, add a new value, and indicate there was no previous value. //", "target": 0}
{"idx": 8751, "func": "if there is no plot, there is no dataset to access...", "target": 0}
{"idx": 8752, "func": "| this | bean | args | raw bean |", "target": 0}
{"idx": 8753, "func": "//{{{ loadDirectory() method", "target": 0}
{"idx": 8754, "func": "its always possible that no folder is currenlty selected", "target": 0}
{"idx": 8755, "func": "create open file dialog", "target": 0}
{"idx": 8756, "func": "List<String> args = null;", "target": 0}
{"idx": 8757, "func": "double precision, big-endian", "target": 0}
{"idx": 8758, "func": "even here, if only properties mapped to the \"base table\" are referenced in the set and where clauses, this could be handled by the BasicDelegate. TODO : decide if it is better performance-wise to perform that check, or to simply use the MultiTableUpdateDelegate", "target": 1}
{"idx": 8759, "func": "enable button", "target": 0}
{"idx": 8760, "func": "If equals() is not explicitly defined we must override the default implemented by the This object protocol for scripted object. To support XThis equals() must test for equality with the generated proxy object, not the scripted bsh This object; otherwise callers from outside in Java will not see a the proxy object as equal to itself.", "target": 0}
{"idx": 8761, "func": "i18n[DataSetUpdateableTableModelImpl.error.unknownerror=Unknown error during check on DB. Update is probably not safe.\\nDo you wish to proceed?]", "target": 0}
{"idx": 8762, "func": "display the frame", "target": 0}
{"idx": 8763, "func": "SQL defines \"--\" as a comment to EOL and in Oracle it may contain a hint so we cannot just remove it, instead we must end it", "target": 0}
{"idx": 8764, "func": "get unique boundary (not checked against att. list part - but guess its ok)", "target": 0}
{"idx": 8765, "func": "use default behavior", "target": 0}
{"idx": 8766, "func": "$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ Look and Feel prefix $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ enable/disable $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$", "target": 0}
{"idx": 8767, "func": "//Need this, since join condition can appear inside parens!", "target": 0}
{"idx": 8768, "func": "now do the minor tick marks", "target": 0}
{"idx": 8769, "func": "Authority will be everything up to path, query or fragment", "target": 0}
{"idx": 8770, "func": "//TODO: what to do with the return value?", "target": 1}
{"idx": 8771, "func": "//{{{ 3. Check whether it is in jEdit's system jars folder:", "target": 0}
{"idx": 8772, "func": "the dataset should prevent the addition of a series with the same name as an existing series in the dataset", "target": 0}
{"idx": 8773, "func": "/final because called from ctor", "target": 0}
{"idx": 8774, "func": "If the -classpath flag isn't specified, use the system classpath", "target": 0}
{"idx": 8775, "func": "CheckStyle:VisibilityModifier OFF - bc the source file the destination file the destination directory", "target": 0}
{"idx": 8776, "func": "in case superclass modifies them.", "target": 0}
{"idx": 8777, "func": "i18n[SchemaTableUpdateWhatItem.views=Views]", "target": 0}
{"idx": 8778, "func": "other IOExceptions than ChangedCharsetException", "target": 0}
{"idx": 8779, "func": "override the JTable method so that whenever something asks for the cellEditor, we save a reference to that cell editor. Our ASSUMPTION is that the cell editor is only requested when it is about to be activated.", "target": 0}
{"idx": 8780, "func": "end else", "target": 0}
{"idx": 8781, "func": "lblTitle.setBackground(new Color(204,204,204)); lblTitle.setName(\"lblTitle\"); lblTitle.setOpaque(true); lblTitle.setText(\"Default values\"); EtchedBorder etchedborder1 = new EtchedBorder(EtchedBorder.RAISED,null,null); lblTitle.setBorder(etchedborder1); jpanel1.add(lblTitle,cc.xywh(2,2,9,1));", "target": 0}
{"idx": 8782, "func": "The fields on this object is in fact represented in the xml structure found as getRoot(). Therefore super.equals() should do the job", "target": 0}
{"idx": 8783, "func": "Shouldn't happen", "target": 0}
{"idx": 8784, "func": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 8785, "func": "Parser stats", "target": 0}
{"idx": 8786, "func": "end loop", "target": 0}
{"idx": 8787, "func": "(non-Javadoc) @see org.columba.core.filter.IFilterRule#remove(int)", "target": 0}
{"idx": 8788, "func": "Lists for remote engines menu items", "target": 0}
{"idx": 8789, "func": "end class DesignGoalsCM", "target": 0}
{"idx": 8790, "func": "TODO: Something about pipe buffer length here", "target": 1}
{"idx": 8791, "func": "The effect will get deleted automatically by MDR, unlike the Guard.", "target": 0}
{"idx": 8792, "func": "label for the date format combo, used to enable/disable text i18n[dateTypeTimestamp.orLocaleDependend= or locale-dependent format:]", "target": 0}
{"idx": 8793, "func": "wait for 2 seconds until the dialog is openened", "target": 0}
{"idx": 8794, "func": "This check is redundant -- see handleFeature method (EL)", "target": 0}
{"idx": 8795, "func": "@bgen(jjtree) ClassDeclaration", "target": 0}
{"idx": 8796, "func": "Remove series 2 and add new series", "target": 0}
{"idx": 8797, "func": "//not \"log10\"-type label", "target": 0}
{"idx": 8798, "func": "//{{{ selectFile() method", "target": 0}
{"idx": 8799, "func": "Add this PropertySet's nested PropertySets' property names.", "target": 0}
{"idx": 8800, "func": "can't shift floats", "target": 0}
{"idx": 8801, "func": "number of non extreme nodes (_m-2)", "target": 0}
{"idx": 8802, "func": "just plain data", "target": 0}
{"idx": 8803, "func": "//TODO: native ids", "target": 1}
{"idx": 8804, "func": "Close connection", "target": 0}
{"idx": 8805, "func": "next, check that setting a duplicate key fails", "target": 0}
{"idx": 8806, "func": "i18n[SchemasTab.hint=Show all the schemas]", "target": 0}
{"idx": 8807, "func": "(non-Javadoc) @see org.columba.mail.imap.IImapServer#getDelimiter()", "target": 0}
{"idx": 8808, "func": "Remember this was first in its batch", "target": 0}
{"idx": 8809, "func": "todo : need map? the prob is a proper key, right?", "target": 1}
{"idx": 8810, "func": "The diagram to be laid out.", "target": 0}
{"idx": 8811, "func": "types for NEWARRAY", "target": 0}
{"idx": 8812, "func": "private TitledBorderLabel m_titledborderlabel1 = new TitledBorderLabel(); private TitledBorderLabel m_titledborderlabel2 = new TitledBorderLabel();", "target": 0}
{"idx": 8813, "func": "Break the cycle. //", "target": 0}
{"idx": 8814, "func": "first determine the size of the chart rendering area...", "target": 0}
{"idx": 8815, "func": "if series are in columns, then the categories are the row keys", "target": 0}
{"idx": 8816, "func": "//{{{ getLineEndOffset() method", "target": 0}
{"idx": 8817, "func": "Idem here: clone.stereotypeFig = (FigStereotypesGroup) cloneFig;", "target": 0}
{"idx": 8818, "func": "look up the table in the EditWhereCols list", "target": 0}
{"idx": 8819, "func": "release parser back to the pool", "target": 0}
{"idx": 8820, "func": "build up datastructure. final cache.", "target": 0}
{"idx": 8821, "func": "update folder selection", "target": 0}
{"idx": 8822, "func": "builder.addFixedNarrow((JButton) rightButtonVector.get(i));", "target": 0}
{"idx": 8823, "func": "&& !isPathExtensionNoEquals()", "target": 0}
{"idx": 8824, "func": "submit this data item as a candidate for the crosshair point", "target": 0}
{"idx": 8825, "func": "set up cell editors on first row", "target": 0}
{"idx": 8826, "func": "If the target is read-only, we can ask the platform to release it. //", "target": 0}
{"idx": 8827, "func": "Setting at an index. Make sure the index is valid, the type is valid, and the value isn't already in a unique feature. Record the old value. //", "target": 0}
{"idx": 8828, "func": "@see org.argouml.model.PseudostateKind#getDeepHistory()", "target": 0}
{"idx": 8829, "func": "Make a tmp namespace to hold the original constructor args for use in eval of the parameters node", "target": 0}
{"idx": 8830, "func": "UML 2.x files could also contain a profile model. Try again with uml:Profile as main tag.", "target": 0}
{"idx": 8831, "func": "two args with block", "target": 0}
{"idx": 8832, "func": "We removed the last partition, so now remove the pool, too:", "target": 0}
{"idx": 8833, "func": "find colum", "target": 0}
{"idx": 8834, "func": "The next line does not work:", "target": 1}
{"idx": 8835, "func": "@see org.tigris.gef.presentation.Fig#setLayer(org.tigris.gef.base.Layer)", "target": 0}
{"idx": 8836, "func": "Engine may be null if it has not correctly started", "target": 0}
{"idx": 8837, "func": "We know that URL arguments should always be encoded in UTF-8 according to spec", "target": 0}
{"idx": 8838, "func": "TODO: Fonts shouldn't be handled any differently than other rendering attributes", "target": 1}
{"idx": 8839, "func": "//{{{ invalidateCachedFoldLevels() method", "target": 0}
{"idx": 8840, "func": "TODO: rounding mode should not be hard-coded. See #mode.", "target": 1}
{"idx": 8841, "func": "label for the date format combo, used to enable/disable text i18n[dataTypeDate.orlocaleIndependent= or locale-dependent format:]", "target": 0}
{"idx": 8842, "func": "targetIndex --> end", "target": 0}
{"idx": 8843, "func": "//iri = iri || containsNonASCII(fragment);", "target": 0}
{"idx": 8844, "func": "@see org.argouml.model.DirectionKind#getOutParameter()", "target": 0}
{"idx": 8845, "func": "/////////////////////////////////////////////////////////////////Message", "target": 0}
{"idx": 8846, "func": "//i18n[sqlparam.inputParameterValues=Please input the parameter values]", "target": 0}
{"idx": 8847, "func": "construct the mirror class and parent classes", "target": 0}
{"idx": 8848, "func": "(non-Javadoc) @see org.columba.mail.imap.IImapServer#getMessageFolderInfo(org.columba.mail.folder.imap.IMAPFolder)", "target": 0}
{"idx": 8849, "func": "//i18n[CSVSettingsPanel.useChar=Seperated by character:]", "target": 0}
{"idx": 8850, "func": "Internal bootstrap uses Literals constants, so we must force initialization this inner interface first. //", "target": 0}
{"idx": 8851, "func": "If we have more than one arg, make sure the array created to contain them is not ObjectSpaced", "target": 0}
{"idx": 8852, "func": "Get and sort the property descriptors:", "target": 0}
{"idx": 8853, "func": "FIXME: Arg may also be true, false, and nil and still be valid. Strangely enough, protocol conversion is not happening in Ruby on this arg?", "target": 1}
{"idx": 8854, "func": "synchronize with FixedQueueExecutor", "target": 0}
{"idx": 8855, "func": "@bgen(jjtree) PrimaryExpression", "target": 0}
{"idx": 8856, "func": "MRI 1.8 behavior: this combination of flags is not allowed", "target": 1}
{"idx": 8857, "func": "the name of an SQL function", "target": 0}
{"idx": 8858, "func": "shortcut key is STRG-E ;mod: 20040629 SWITT", "target": 0}
{"idx": 8859, "func": "VersionType impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Note : simply returns null for seed() and next() as the only known application of binary types for versioning is for use with the TIMESTAMP datatype supported by Sybase and SQL Server, which are completely db-generated values...", "target": 0}
{"idx": 8860, "func": "push ConstructorArgs", "target": 0}
{"idx": 8861, "func": "ai (degree 3)", "target": 0}
{"idx": 8862, "func": "save window position", "target": 0}
{"idx": 8863, "func": "Returns all substates some composite state contains. <p> TODO: {@link #getAllPossibleSubvertices(Object)} and {@link #getAllSubStates(Object)} are duplicates as implemented for MDR. It isn't clear from the Javadoc or usage whether they should do different things or this just happened because no one noticed we already had another method. @param compState the given compositestate @return all substates", "target": 1}
{"idx": 8864, "func": "clean up again, so this instance can be used a second time", "target": 0}
{"idx": 8865, "func": "modal dialog", "target": 0}
{"idx": 8866, "func": "if curHandle.index is 0 or 2, the adjacent region is the previous region but if it is 5 or 7, the adjacent region is the next region. curHandle.index show which corner of the bound we are dragging.", "target": 0}
{"idx": 8867, "func": "Push the new namespace on the call stack", "target": 0}
{"idx": 8868, "func": "now draw the bar chart", "target": 0}
{"idx": 8869, "func": "Get the value of the <ejb-name> tag. Only the first occurrence.", "target": 0}
{"idx": 8870, "func": "No reason to change the working directory as all filenames and path components have been resolved already. Avoid problems with command line length in some environments.", "target": 0}
{"idx": 8871, "func": "initialized in static initializer block below", "target": 0}
{"idx": 8872, "func": "delegate already handles PK columns", "target": 0}
{"idx": 8873, "func": "Quadrant IV", "target": 0}
{"idx": 8874, "func": "Handling the isInitiated method", "target": 0}
{"idx": 8875, "func": "//System.err.println(\"Non-match in fixed-string search.\");", "target": 0}
{"idx": 8876, "func": "which kind of color?", "target": 0}
{"idx": 8877, "func": "see explanation above...", "target": 0}
{"idx": 8878, "func": "@see org.argouml.model.PseudostateKind#getShallowHistory()", "target": 0}
{"idx": 8879, "func": "chop to server.name", "target": 0}
{"idx": 8880, "func": "enable all menuitems", "target": 0}
{"idx": 8881, "func": "Attribute", "target": 0}
{"idx": 8882, "func": "currently allowed...", "target": 0}
{"idx": 8883, "func": "A Link is an Assocation in UML2.x", "target": 0}
{"idx": 8884, "func": "N.B. This is only called at the start and end of a thread, so there is not necessary to cache the search results, thus saving memory", "target": 0}
{"idx": 8885, "func": "disable the actionlistener for this period to avoid an unwanted port check", "target": 0}
{"idx": 8886, "func": "add the old classpath", "target": 0}
{"idx": 8887, "func": "//{{{ getFirstInvalidFoldLevel() method", "target": 0}
{"idx": 8888, "func": "Common mock objects", "target": 0}
{"idx": 8889, "func": "get the \"To\" headerfield from the header", "target": 0}
{"idx": 8890, "func": "// private boolean _bStopExecution = false;", "target": 0}
{"idx": 8891, "func": "any other char", "target": 0}
{"idx": 8892, "func": "Mixed case", "target": 0}
{"idx": 8893, "func": "Prepare a string with the same number of redundant slashes so that we easily can prepend it to the result.", "target": 0}
{"idx": 8894, "func": "line 1687", "target": 0}
{"idx": 8895, "func": "FIXME: Is \"No Namespace is Empty Namespace\" really OK?", "target": 1}
{"idx": 8896, "func": "MRI issuses warning here on (RBIGNUM(x)->len SIZEOF_BDIGITS yy > 10241024)", "target": 0}
{"idx": 8897, "func": "If I'm removing an EOF character, do so first so that the other filters don't see that character.", "target": 0}
{"idx": 8898, "func": "temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 8899, "func": "simple, because we can't have a one-to-one or a collection (or even a property-ref) in a composite-element:", "target": 0}
{"idx": 8900, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getDriverName()", "target": 0}
{"idx": 8901, "func": "mark as captured if from containing scope", "target": 0}
{"idx": 8902, "func": "//{{{ Add to AWT queue...", "target": 0}
{"idx": 8903, "func": "If the tree is in a DND action then we dont need to update all listeners, since this only a temporary folder selection.", "target": 0}
{"idx": 8904, "func": "class and module bodies default to public, so make the block's visibility public. JRUBY-1185.", "target": 0}
{"idx": 8905, "func": "Create as many directory prefixes as parent levels to traverse, in addition to the reference directory itself", "target": 0}
{"idx": 8906, "func": "i18n[popupeditableIoPanel.exportError7=Export Error]", "target": 0}
{"idx": 8907, "func": "This may change, if we add advanced parsing capabilities.", "target": 1}
{"idx": 8908, "func": "private static final long SCHEME_CHAR_HI = ALPHANUM_HI | highBitmask(\"+-.\"); private static final long SCHEME_CHAR_LO = ALPHANUM_LO | lowBitmask(\"+-.\");", "target": 0}
{"idx": 8909, "func": "//{{{ physDown() method scroll down by physical line amount", "target": 0}
{"idx": 8910, "func": "RANGE / FIXED", "target": 0}
{"idx": 8911, "func": "?b | boolean | True if file1 is a block device", "target": 0}
{"idx": 8912, "func": "//JTabbedPane tabs = new JTabbedPane(); //mainPanel.add(tabs, BorderLayout.CENTER); //tabs.addTab(\"All Diagrams\", allDiagrams);", "target": 0}
{"idx": 8913, "func": "TODO: add constructors for combinations of number and date formatters.", "target": 1}
{"idx": 8914, "func": "Don't fool around with manual commit later.", "target": 0}
{"idx": 8915, "func": "//{{{ getVirtualWidth() method", "target": 0}
{"idx": 8916, "func": "A potentially previously close IO is being 'reopened'.", "target": 0}
{"idx": 8917, "func": "TODO: number formatting here, MRI uses \"%-.10g\", 1.4 API is a must?", "target": 1}
{"idx": 8918, "func": "make sure we aren't going to get the path separator next", "target": 0}
{"idx": 8919, "func": "Here, I don't completely understand how these types are to be used in all databases and I haven't yet had time to implement support in the dialects for them. So, this exclude list will keep these less commonly used types from failing the test. Also, since not all of these types appear in Java5 and we currently support compiling the code base with it, I use the integer values for new types that were introduces in Java6, rather than the type constant name.", "target": 1}
{"idx": 8920, "func": "Must be like \"text/plain; charset=windows-1251\"", "target": 0}
{"idx": 8921, "func": "TODO these assertions should be separate tests", "target": 1}
{"idx": 8922, "func": "bottom", "target": 0}
{"idx": 8923, "func": "default: 3.0f //$NON-NLS-1$", "target": 0}
{"idx": 8924, "func": "More than 3 tokens. Assume the last token is the last name and take the rest of the names as the first name. This handles names like this: \"Sue & Gene Stark\".", "target": 0}
{"idx": 8925, "func": "to enable button again after search is finished", "target": 0}
{"idx": 8926, "func": "((CharsetOwnerInterface) mediator).setCharset(charset);", "target": 0}
{"idx": 8927, "func": "//TreePackageImpl", "target": 0}
{"idx": 8928, "func": "MS SQLServer yields \"Conversion failed when converting datetime from character string\" for {ts '2008-02-21 21:26:23.966123'}", "target": 0}
{"idx": 8929, "func": "empty entry stops reading --> last line!", "target": 0}
{"idx": 8930, "func": "We hang our heads in shame. There are still bugs in ArgoUML and/or GEF that cause corruptions in the model. Before a save takes place we repair the model in order to be as certain as possible that the saved file will reload. TODO: Split into small inner classes for each fix. @return A text that explains what is repaired.", "target": 1}
{"idx": 8931, "func": "Return the node or edge that owns the given port. @see org.tigris.gef.graph.BaseGraphModel#getOwner(java.lang.Object)", "target": 0}
{"idx": 8932, "func": "//{{{ setDragInProgress() method", "target": 0}
{"idx": 8933, "func": "//start with instantiating the class.", "target": 0}
{"idx": 8934, "func": "Create the model project. //", "target": 0}
{"idx": 8935, "func": "open search dialog", "target": 0}
{"idx": 8936, "func": "(non-Javadoc) @see javax.swing.JTabbedPane#setSelectedIndex(int)", "target": 0}
{"idx": 8937, "func": "normal finally and exit", "target": 0}
{"idx": 8938, "func": "delegate 'info' and 'source' argument checks...", "target": 0}
{"idx": 8939, "func": "@see TestRegexFunction for unit tests", "target": 0}
{"idx": 8940, "func": "If no project was entered on the command line, try to reload the most recent project if that option is true", "target": 0}
{"idx": 8941, "func": "i18n[ErrorStream.expected=expected]", "target": 0}
{"idx": 8942, "func": "@bgen(jjtree) Assignment", "target": 0}
{"idx": 8943, "func": "two plugins provide same class!", "target": 1}
{"idx": 8944, "func": "TODO: re-enable feature, the following code violates our design, accessing folders is only allowed in Command.execute()", "target": 0}
{"idx": 8945, "func": "4.11.3.5 UseCase", "target": 0}
{"idx": 8946, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#storesUpperCaseIdentifiers()", "target": 0}
{"idx": 8947, "func": "maybe with Inner join better performance", "target": 0}
{"idx": 8948, "func": "i18n[oracle.displayDetails=Display index details]", "target": 0}
{"idx": 8949, "func": "//////////////////////////////////////////////////////////////display related methods", "target": 0}
{"idx": 8950, "func": "the list of entity names that indicate the batch number", "target": 0}
{"idx": 8951, "func": "let RescuedBlock continue", "target": 0}
{"idx": 8952, "func": "needs to be improved !!!", "target": 1}
{"idx": 8953, "func": "is it HTML or plain text", "target": 0}
{"idx": 8954, "func": "for example: \"[columba-users]Re: this is a subject\"", "target": 0}
{"idx": 8955, "func": "TODO: Why is this here? Who is calling this? @see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)", "target": 1}
{"idx": 8956, "func": "//{{{ getCharWidth() method", "target": 0}
{"idx": 8957, "func": "i18n[ConnectionStatusTab.hint=Connection Status]", "target": 0}
{"idx": 8958, "func": "//i18n[syntax.font=Select font color]", "target": 0}
{"idx": 8959, "func": "single precision, little-endian", "target": 0}
{"idx": 8960, "func": "create mocks to be injected", "target": 0}
{"idx": 8961, "func": "if value doesn't exist, use false as default", "target": 0}
{"idx": 8962, "func": "the method", "target": 0}
{"idx": 8963, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.client.preferences.IGlobalPreferencesPanel#initialize(net.sourceforge.squirrel_sql.client.IApplication)", "target": 0}
{"idx": 8964, "func": "i18n[favs.newFolder=New Folder] ?? i18n", "target": 0}
{"idx": 8965, "func": "new line", "target": 0}
{"idx": 8966, "func": "End of EjbInfo inner class", "target": 0}
{"idx": 8967, "func": "// putValue(SMALL_ICON, // MailImageLoader.getIcon(\"email_open.png\"));", "target": 0}
{"idx": 8968, "func": "Already logged", "target": 0}
{"idx": 8969, "func": "//{{{ addBrowserListener() method", "target": 0}
{"idx": 8970, "func": "We should have a query string part", "target": 0}
{"idx": 8971, "func": "(non-Javadoc) @see org.columba.api.gui.frame.IDock#setSplitProportion(org.columba.api.gui.frame.IDockable, float)", "target": 0}
{"idx": 8972, "func": "An ident node can represent an index expression if the ident represents a naked property ref Note: this makes the assumption (which is currently the case in the hql-sql grammar) that the ident is first resolved itself (addrExpr -> resolve()). The other option, if that changes, is to call resolve from here; but it is currently un-needed overhead.", "target": 0}
{"idx": 8973, "func": "6d - remove \".\" if path ends with \".\" as a complete path segment", "target": 0}
{"idx": 8974, "func": "Add the buttons to it", "target": 0}
{"idx": 8975, "func": "create virtual folder", "target": 0}
{"idx": 8976, "func": "TODO (@author waffel): encrypt AND sign dosN#t work. The message is always only encrypted. We need a function that knows, here is an encrypted AND signed Message. Thus first encyrpt and then verifySign the message if this message is signed/encrypted we have to use GnuPG to extract the decrypted bodypart - multipart/encrypted - multipart/signed", "target": 1}
{"idx": 8977, "func": "//{{{ CommandsMenuButton class", "target": 0}
{"idx": 8978, "func": "//not small log values in use; allow for values <= 0 //if did zero tick last iter then //decrement to do 1.0 tick now //calculate power-of-ten value for tick:", "target": 0}
{"idx": 8979, "func": "tick marks visible flag...", "target": 0}
{"idx": 8980, "func": "SUBCLASS PROPERTY CLOSURE", "target": 0}
{"idx": 8981, "func": "if any directories are selected, add them, otherwise add current directory", "target": 0}
{"idx": 8982, "func": "Set the name and icon:", "target": 0}
{"idx": 8983, "func": "Trick to import java.util. without warnings", "target": 0}
{"idx": 8984, "func": "wellformednessrules and preconditions", "target": 0}
{"idx": 8985, "func": "(non-Javadoc) @see org.columba.core.filter.IFilterRule#removeLast()", "target": 0}
{"idx": 8986, "func": "(non-Javadoc) @see org.columba.mail.imap.IImapServer#fetchFlagsListStartFrom2(int, org.columba.mail.folder.imap.IMAPFolder)", "target": 0}
{"idx": 8987, "func": "N.B. It seems that Opera needs a chain in order to accept server keys signed by the intermediate CA Opera does not seem to like server keys signed by the root (self-signed) cert.", "target": 0}
{"idx": 8988, "func": "Split constraint body, if user wants us to", "target": 0}
{"idx": 8989, "func": "Whether or not to read date type columns with rs.getTimestamp()", "target": 0}
{"idx": 8990, "func": "Remove the old fig from the diagram, so we can draw the new one in its place:", "target": 0}
{"idx": 8991, "func": "//{{{ CompletionPopup constructor", "target": 0}
{"idx": 8992, "func": "//it was not embedded, so the argument is just an id", "target": 0}
{"idx": 8993, "func": "add match as Integer", "target": 0}
{"idx": 8994, "func": "Only update the stored copy of the tree for a full save refetch, because convertSubTree affects it", "target": 0}
{"idx": 8995, "func": "We get canonical path to try and flatten the path out. a dir '/subdir/..' should return as '/' cnutter: Do we want to flatten path out?", "target": 0}
{"idx": 8996, "func": "Testing: does not fire.", "target": 0}
{"idx": 8997, "func": "TODO must get polling interval from config file", "target": 1}
{"idx": 8998, "func": "line 1164", "target": 0}
{"idx": 8999, "func": "Formatting", "target": 0}
{"idx": 9000, "func": "Add the action to the component", "target": 0}
{"idx": 9001, "func": "verify the copied nested package and the copied interface", "target": 0}
{"idx": 9002, "func": "views.xml <view header=\"100\" header_enabled=\"true\" id=\"ThreePaneMail\" infopanel=\"true\" main=\"100\"> <window maximized=\"true\" height=\"721\" width=\"1034\" y=\"26\" x=\"0\"></window> <toolbars infopanel=\"true\" main=\"true\"></toolbars> <splitpanes header=\"200\" header_enabled=\"true\" main=\"283\" attachment=\"100\"></splitpanes> </view>", "target": 0}
{"idx": 9003, "func": "//{{{ Caret", "target": 0}
{"idx": 9004, "func": "//{{{ getPlugin(String, boolean) method", "target": 0}
{"idx": 9005, "func": "cached character == Integer.MAX_VALUE when invalid", "target": 0}
{"idx": 9006, "func": "TODO: Document! What does this do? Interacts with event pump in some manner @param objects new objeccts", "target": 1}
{"idx": 9007, "func": "//alpha", "target": 0}
{"idx": 9008, "func": "//get positive exponent //create multiplier value //multiply, round up, and divide for bound value:", "target": 0}
{"idx": 9009, "func": "default branch always invokes no args super push 'this'", "target": 0}
{"idx": 9010, "func": "mvw: Indeed. The intention of the constructor parameter is to prove that there is a valid UML object to bind the notation to. So, the next statement should fail on a null parameter, and on anything that is not an object of which we can retrieve the multiplicity.", "target": 0}
{"idx": 9011, "func": "If there is no field, then we can't do this.", "target": 0}
{"idx": 9012, "func": "TODO: implement this", "target": 1}
{"idx": 9013, "func": "TODO: error counting needs to be sorted out. At present the Statistical Sampler tracks errors separately It would make sense to move the error count here, but this would mean lots of changes. It's also tricky maintaining the count - it can't just be incremented/decremented when the success flag is set as this may be done multiple times. The work-round for now is to do the work in the StatisticalSampleResult, which overrides this method. Note that some JMS samplers also create samples with > 1 sample count Also the Transaction Controller probably needs to be changed to do proper sample and error accounting. The purpose of this work-round is to allow at least minimal support for errors in remote statistical batch mode.", "target": 1}
{"idx": 9014, "func": "For an ellipse, we can put the box in the middle:", "target": 0}
{"idx": 9015, "func": "It's intentional to keep going.", "target": 0}
{"idx": 9016, "func": "$NON-NLS-1$ don't set empty to keep cssJquery cssJqueryField.setText(\"\"); $NON-NLS-1$ $NON-NLS-1$ don't set empty to keep attribute this.attributeField.setText(\"\"); $NON-NLS-1$ don't change impl this.cssJqueryLabeledChoice.setText(HtmlExtractor.DEFAULT_EXTRACTOR);", "target": 0}
{"idx": 9017, "func": "//DO NOT SET THE -signedjar OPTION if source==dest //unless you like fielding hotspot crash reports", "target": 0}
{"idx": 9018, "func": "//{{{ removeEntry() method", "target": 0}
{"idx": 9019, "func": "For consistency, we always set 1-1 container relations from the container end. //", "target": 0}
{"idx": 9020, "func": "reorder submenu TODO: I think this requires I18N, but not sure - tfm", "target": 1}
{"idx": 9021, "func": "CheckStyle:VisibilityModifier ON", "target": 0}
{"idx": 9022, "func": "I believe Ruby bails out with a \"bug\" if closing fails", "target": 0}
{"idx": 9023, "func": "assume default charset is OK here <apache-bsf.version>2.4.0</apache-bsf.version>", "target": 0}
{"idx": 9024, "func": "//{{{ isSelectionRectangular() method", "target": 0}
{"idx": 9025, "func": "set the anchor value for the horizontal axis...", "target": 0}
{"idx": 9026, "func": "line 339", "target": 0}
{"idx": 9027, "func": "find the bases of the connected classifierroles so that we can see what associations are between them. If there are bases then the associations between those bases form the possible bases. Otherwise the bases are formed by all associations in the namespace of the collaboration", "target": 0}
{"idx": 9028, "func": "add source to destination folder", "target": 0}
{"idx": 9029, "func": "<p>A valid opaque part must be non-null and non-empty. It may contain any allowed URI characters, but its first character may not be <code>/</code>", "target": 0}
{"idx": 9030, "func": "TL - S&E", "target": 0}
{"idx": 9031, "func": "Should work for Unix/Windows.", "target": 0}
{"idx": 9032, "func": "3. & 3a. Get the release.xml file as a ChannelXmlBean from the server or filesystem.", "target": 0}
{"idx": 9033, "func": "log.info(\"testLASTPrevOK\");", "target": 0}
{"idx": 9034, "func": "builder.append(quotedColorCheckBox, quotedColorButton); builder.nextLine();", "target": 0}
{"idx": 9035, "func": "this column is limited, so truncate the data", "target": 0}
{"idx": 9036, "func": "line 1158", "target": 0}
{"idx": 9037, "func": "//XMLTypePackageImpl", "target": 0}
{"idx": 9038, "func": "add email addresses", "target": 0}
{"idx": 9039, "func": "There have been reports that 300 files could be compiled so 250 is a conservative approach", "target": 0}
{"idx": 9040, "func": "Defines the methods to generate source code from the model. Each class providing code generation functionality must implement this to be recognized by ArgoUML as a code generator. <p> TODO: A GUI-independent mechanism to pass settings to the code generator is needed similar to what we have for reverse engineering. See {@link org.argouml.uml.reveng.ImportInterface#getImportSettings()} and {@link org.argouml.uml.reveng.SettingsTypes} @since 0.20 when it replaced the FileGenerator interface.", "target": 1}
{"idx": 9041, "func": "//??? For now, use the same renderer as everyone else. //?? //?? IN FUTURE: change this to use a new instance of renderer //?? for this data type.", "target": 1}
{"idx": 9042, "func": "update visible lines", "target": 0}
{"idx": 9043, "func": "Create resources for all the root EPackages. //", "target": 0}
{"idx": 9044, "func": "build new message body", "target": 0}
{"idx": 9045, "func": "TODO: are we intentionally eating all events? - tfm 20060203 document!", "target": 1}
{"idx": 9046, "func": "line 507", "target": 0}
{"idx": 9047, "func": "Fine!", "target": 0}
{"idx": 9048, "func": "Initialise values from properties", "target": 0}
{"idx": 9049, "func": "bench Long fib", "target": 0}
{"idx": 9050, "func": "end class CrNoInitialState", "target": 0}
{"idx": 9051, "func": "Change import precedence if we are a class body/instance Get imported first.", "target": 0}
{"idx": 9052, "func": "//bottom.add( Box.createHorizontalGlue() );", "target": 0}
{"idx": 9053, "func": "Create an instance of the compiler, redirecting output to the project log", "target": 0}
{"idx": 9054, "func": "//{{{ getCurrentIdentForLine() method", "target": 0}
{"idx": 9055, "func": "default button title", "target": 0}
{"idx": 9056, "func": "The optional SQL string defined in the where attribute", "target": 0}
{"idx": 9057, "func": "initialize the model and profile subsystems to simulate a fresh ArgoUML session", "target": 0}
{"idx": 9058, "func": "FIXME: It may be possible to killpg on systems which support it. POSIX library needs to tell whether a particular method works or not", "target": 1}
{"idx": 9059, "func": "FIXME: do we really want 'declared' methods? includes private/protected, and does _not_ include superclass methods", "target": 1}
{"idx": 9060, "func": "TODO: This should use a minimal update strategy instead of removing all and then adding all - tfm - 20070806", "target": 1}
{"idx": 9061, "func": "_mainFrame = new MainFrame(this);", "target": 0}
{"idx": 9062, "func": "Login info is required", "target": 0}
{"idx": 9063, "func": "reset starting position in y-direction", "target": 0}
{"idx": 9064, "func": "TODO: Any Namespace can contain other elements. Why don't we allow this? - tfm", "target": 1}
{"idx": 9065, "func": "leave these on the stack for Arguments() to handle", "target": 0}
{"idx": 9066, "func": "// ISession mockSession = mockHelper.createMock(ISession.class); // IApplication mockApplication = mockHelper.createMock(IApplication.class); // expect(mockSession.getApplication()).andStubReturn(mockApplication); // TaskThreadPool mockThreadPool = mockHelper.createMock(TaskThreadPool.class); // mockThreadPool.addTask(EasyMock.isA(Runnable.class)); // expectLastCall().anyTimes(); // expect(mockApplication.getThreadPool()).andStubReturn(mockThreadPool); // String[] tableTypes = new String[] { \"TABLE\" }; // ISQLConnection mockSQLConnection = mockHelper.createMock(ISQLConnection.class); // expect(mockSession.getSQLConnection()).andStubReturn(mockSQLConnection); // SQLDatabaseMetaData mockSQLDatabaseMetaData = mockHelper.createMock(SQLDatabaseMetaData.class); // expect(mockSQLConnection.getSQLMetaData()).andStubReturn(mockSQLDatabaseMetaData); // expect(mockSQLDatabaseMetaData.getTableTypes()).andStubReturn(tableTypes); // // // mockHelper.replayAll(); // classUnderTest = new DefaultDatabaseExpander(mockSession); // mockHelper.verifyAll(); // mockHelper.resetAll();", "target": 0}
{"idx": 9067, "func": "//}}} //{{{ SEQ", "target": 0}
{"idx": 9068, "func": "//TODO: this dependency is kinda Bad", "target": 1}
{"idx": 9069, "func": "enable max occurrences", "target": 0}
{"idx": 9070, "func": "where only an address is supplied", "target": 0}
{"idx": 9071, "func": "simulate charset changed to initialize selectedMenuItem", "target": 0}
{"idx": 9072, "func": "//a composite key", "target": 0}
{"idx": 9073, "func": "//do the system assertions", "target": 0}
{"idx": 9074, "func": "TODO: Allow other configuration handlers.", "target": 1}
{"idx": 9075, "func": "we don't care", "target": 0}
{"idx": 9076, "func": "Consult the generator option for backwards compatibility. //", "target": 0}
{"idx": 9077, "func": "this doesn't support I18N or multiple states, but it's just a default", "target": 0}
{"idx": 9078, "func": "we basically ignore protocol. let someone report it...", "target": 1}
{"idx": 9079, "func": "N.B. originally called clear() @see also Clearable", "target": 0}
{"idx": 9080, "func": "should not get here", "target": 0}
{"idx": 9081, "func": "TypeMatcher", "target": 0}
{"idx": 9082, "func": "cascade-save to collections AFTER the collection owner was saved", "target": 0}
{"idx": 9083, "func": "(non-Javadoc) @see javax.swing.table.TableCellRenderer#getTableCellRendererComponent(javax.swing.JTable, java.lang.Object, boolean, boolean, int, int)", "target": 0}
{"idx": 9084, "func": "Translate the visibility flag of a Fig to the PGML \"visibility\" attribute value. The PGML values are 0=hidden and 1=shown. If not specified then 1 is the default so we return null for this to prevent redundent data being written to PGML. TODO: Remove on GEF release after 0.11.9 as it will be provided there. @param f The Fig @return \"0\"=hidden, null=shown", "target": 1}
{"idx": 9085, "func": "TODO only clear the relevant entry - if possible...", "target": 1}
{"idx": 9086, "func": "//ATTRIBUTES MAINTAINED BETWEEN FLUSH CYCLES", "target": 0}
{"idx": 9087, "func": "Match by name", "target": 0}
{"idx": 9088, "func": "We parse evals more often in source so assume an eval parse.", "target": 0}
{"idx": 9089, "func": "N.B. this class is shared between threads (NoThreadClone) so all access to variables needs to be protected by a lock (either sync. or volatile) to ensure safe publication.", "target": 0}
{"idx": 9090, "func": "@see java.awt.event.ActionListener#actionPerformed(ActionEvent)", "target": 0}
{"idx": 9091, "func": "end class ActionHelp", "target": 0}
{"idx": 9092, "func": "does the class have a package structure", "target": 0}
{"idx": 9093, "func": "but we do trap this error to make tests work better", "target": 0}
{"idx": 9094, "func": "drive letters must be considered just normal filenames.", "target": 0}
{"idx": 9095, "func": "@see javax.swing.table.TableModel#getValueAt(int, int)", "target": 0}
{"idx": 9096, "func": "Here, we have seen an odd number of backslash's followed by a 'u'", "target": 0}
{"idx": 9097, "func": "add all attachments", "target": 0}
{"idx": 9098, "func": "//cat.debug(\"bad decision\");", "target": 0}
{"idx": 9099, "func": "//{{{ JEditTextArea constructor", "target": 0}
{"idx": 9100, "func": "Is this a containment reference child? //", "target": 0}
{"idx": 9101, "func": "On Unix, set permissions of port file to rw-------, so that on broken Unices which give everyone read access to user home dirs, people can't see your port file (and hence send arbitriary BeanShell code your way. Nasty.)", "target": 1}
{"idx": 9102, "func": "Append the classpath of the nested catalog", "target": 0}
{"idx": 9103, "func": "create directory <config-folder>/mail/spamdb", "target": 0}
{"idx": 9104, "func": "This is (a logically not sufficent) try to cope with the problem that there are the following contradictory rules in the JDBC API Doc: Statement.getResultSet(): This method should be called only once per result. Statement.getUpdateCount(): This method should be called only once per result. Statement.getMoreResults(): There are no more results when the following is true: (!getMoreResults() && (getUpdateCount() == -1) If getMoreResults() returns false, we don't know if we have more results, we only know that it isn't a result set. Since we called getUpdateCount() before getMoreResults() because we would like to know the update count of the first result, we might not be allowed to call getUpdateCount() again. The Intersystems Cache Driver for example always returns the same updateCount on simple INSERT, UPDATE, DELETE statements not matter if getMoreResults() was called. So updateCount never gets -1 and this will loop forever. When I discussed the issue with the Intersystems people they just told me not to call getUpdateCount() twice. That simple. My hope is that this will cure problems with DBs that just don't care for multiple result sets.", "target": 1}
{"idx": 9105, "func": "ask whether to remove the old shortcut", "target": 0}
{"idx": 9106, "func": "The model for the table with the tagged values. Implementation for UML 1.4 and TagDefinitions. TODO: This currently only supports TaggedValues with a TagDefinition which has a type of String.", "target": 1}
{"idx": 9107, "func": "never mind", "target": 0}
{"idx": 9108, "func": "message", "target": 0}
{"idx": 9109, "func": "DROP SEQUENCE sequenceName CASCADE;", "target": 0}
{"idx": 9110, "func": "this is handled a little differently from other jEdit settings as the splash screen flag needs to be known very early in the startup sequence, before the user properties have been loaded", "target": 0}
{"idx": 9111, "func": "add range axes to lists...", "target": 0}
{"idx": 9112, "func": "(non-Javadoc) @see org.columba.core.search.api.ISearchResult#getLocation()", "target": 0}
{"idx": 9113, "func": "TODO Update this after old tests pass and then update the old tests to reflect this change. //", "target": 1}
{"idx": 9114, "func": "// private String _sqlOutputMetaDataClassName = IDataSetDestinations.READ_ONLY_TABLE;", "target": 0}
{"idx": 9115, "func": "having these as publicly accessible members will prevent the overhead of the method call that exists on properties", "target": 0}
{"idx": 9116, "func": "must not use getEntry as \"well behaving\" applications must accept the manifest in any capitalization", "target": 0}
{"idx": 9117, "func": "constructors and factory methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 9118, "func": "@see IDataSetViewer#getRowCount()", "target": 0}
{"idx": 9119, "func": "Use Case", "target": 0}
{"idx": 9120, "func": "view can be broken", "target": 0}
{"idx": 9121, "func": "watch out for a case where old is still referenced somewhere in the object graph! (which is a user error)", "target": 0}
{"idx": 9122, "func": "i18n[editextras.date=Date]", "target": 0}
{"idx": 9123, "func": "//{{{ ShowFileAction class", "target": 0}
{"idx": 9124, "func": "//////////////////////////////////////////////////////////////event processing", "target": 0}
{"idx": 9125, "func": "quick check for independence", "target": 0}
{"idx": 9126, "func": "//{{{ getPreferredSize() method", "target": 0}
{"idx": 9127, "func": "get the first editable extent (which is OK unless there is more than one editable extent)", "target": 0}
{"idx": 9128, "func": "Compilation", "target": 0}
{"idx": 9129, "func": "These JComponent methods provide the appropriate points to subscribe and unsubscribe this object to the EditBus", "target": 0}
{"idx": 9130, "func": "check attribute overrides build.compiler", "target": 0}
{"idx": 9131, "func": "Look for a matching named element. //", "target": 0}
{"idx": 9132, "func": "//TODO: shift block down by half", "target": 1}
{"idx": 9133, "func": "the text box containing the problem messages TODO: This should be hidden by default, but accessible on via a \"details\" button or tab to provide more info to the user.", "target": 1}
{"idx": 9134, "func": "Initialize package", "target": 0}
{"idx": 9135, "func": "line 1309", "target": 0}
{"idx": 9136, "func": "(non-Javadoc) @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#getChildren()", "target": 0}
{"idx": 9137, "func": "otherwise fall back on system temp location", "target": 0}
{"idx": 9138, "func": "add a second renderer with the same index as dataset2, now it will be used", "target": 0}
{"idx": 9139, "func": "tick mark outside length...", "target": 0}
{"idx": 9140, "func": "//{{{ saveAllBuffers() method", "target": 0}
{"idx": 9141, "func": "-------------------- Common properties -------------------- The following properties are required by import ( and other tasks that read build files using ProjectHelper ).", "target": 0}
{"idx": 9142, "func": "//special case ... this is the leaf of the containment graph, even though not immutable", "target": 0}
{"idx": 9143, "func": "TODO: This appears unused. If it's needed, the Model API should be enhanced to provide a method that does this directly.", "target": 1}
{"idx": 9144, "func": "XXX is this code still necessary? is there any 1.2+ port? Pull in .zip from packages directory", "target": 1}
{"idx": 9145, "func": "support \"(name) address\"", "target": 0}
{"idx": 9146, "func": "// return !isOneToMany();", "target": 0}
{"idx": 9147, "func": "load xml configuration from file", "target": 0}
{"idx": 9148, "func": "possibly should not in object space", "target": 0}
{"idx": 9149, "func": "Ignore case when sorting", "target": 0}
{"idx": 9150, "func": "@see org.argouml.uml.ui.SourcePathController#setSourcePath(org.argouml.uml.ui.SourcePathTableModel)", "target": 0}
{"idx": 9151, "func": "Some DBMS's (EG Think SQL) throw an exception on a call to getBestRowIdentifier.", "target": 0}
{"idx": 9152, "func": "Copy next element", "target": 0}
{"idx": 9153, "func": "If we had child elements, we need to indent before we close the element, otherwise we're on the same line and don't need to indent", "target": 0}
{"idx": 9154, "func": "transform string to Date representation", "target": 0}
{"idx": 9155, "func": "Create a new read buffer. (Note the four-character margin)", "target": 0}
{"idx": 9156, "func": "//TODO: suck this into initLaziness!", "target": 1}
{"idx": 9157, "func": "Table was deleted from DB", "target": 0}
{"idx": 9158, "func": "Maintain a (weak hash) set on the type parameter of all referencing generic types. //", "target": 0}
{"idx": 9159, "func": "Token was accepted", "target": 0}
{"idx": 9160, "func": "Constructor is initially called once for each occurrence in the test plan. For GUI, several more instances are created. Then clear is called at start of test. Called several times during test startup. The name will not necessarily have been set at this point.", "target": 0}
{"idx": 9161, "func": "Register popup menu with toolbar.", "target": 0}
{"idx": 9162, "func": "not Clonable", "target": 0}
{"idx": 9163, "func": "@see org.argouml.uml.diagram.ui.FigNodeModelElement#getNotationProviderType()", "target": 0}
{"idx": 9164, "func": "line 1286", "target": 0}
{"idx": 9165, "func": "i18n[syntax.corExt=correction / extension]", "target": 0}
{"idx": 9166, "func": "Let them choose type parameters as well. //", "target": 0}
{"idx": 9167, "func": "Choosing character set of the mail message First: looking it from MimeType", "target": 0}
{"idx": 9168, "func": "//{{{ TreeHandler class", "target": 0}
{"idx": 9169, "func": "//Ecore2XMLResourceFactoryImpl", "target": 0}
{"idx": 9170, "func": "create uuid", "target": 0}
{"idx": 9171, "func": "needs more work: sending and receiving icons", "target": 1}
{"idx": 9172, "func": "//TODO: use ANTLR to parse the grammar file to do this.", "target": 0}
{"idx": 9173, "func": "Create a resource set and load the model file into it. //", "target": 0}
{"idx": 9174, "func": "extend to include the comment at the same line as the position if there is nothing between the position and the comment", "target": 0}
{"idx": 9175, "func": "whether number is signed or unsigned", "target": 0}
{"idx": 9176, "func": "If the containing object was a String, then use it as the ID.", "target": 0}
{"idx": 9177, "func": "First, check that all elements are correctly configured", "target": 0}
{"idx": 9178, "func": "i18n[userscript.propsDlgCheck=Check]", "target": 0}
{"idx": 9179, "func": "Constructor for a {@link FigClass} during file load.<p> Parent {@link org.argouml.uml.diagram.ui.FigNodeModelElement} will have created the main box {@link #getBigPort()} and its name {@link #getNameFig()} and stereotype (@link #getStereotypeFig()}. This constructor creates a box for the attributes and operations.<p> The properties of all these graphic elements are adjusted appropriately. The main boxes are all filled and have outlines. TODO: which is wrong, since the bigPort is filled, too. @param element model element to be represented by this fig. @param bounds rectangle describing bounds @param settings rendering settings", "target": 0}
{"idx": 9180, "func": "Try and get the resource selection to determine a current directory for the file dialog. //", "target": 0}
{"idx": 9181, "func": "set up Cancel button i18n[cellDataPopup.cancel=Cancel]", "target": 0}
{"idx": 9182, "func": "For the case of dynamic-insert=\"false\", use the static SQL", "target": 0}
{"idx": 9183, "func": "if the series is sorted, the negative index is a result from Collections.binarySearch() and tells us where to insert the new item...otherwise it will be just -1 and we should just append the value to the list...", "target": 0}
{"idx": 9184, "func": "//{{{ setCharWidth() method", "target": 0}
{"idx": 9185, "func": "choose addressbook", "target": 0}
{"idx": 9186, "func": "row 4", "target": 0}
{"idx": 9187, "func": "first, expand the viewing area into a drawing frame", "target": 0}
{"idx": 9188, "func": "A shallow query is ok (although technically there should be no fetching here...)", "target": 0}
{"idx": 9189, "func": "//decrement the lock", "target": 0}
{"idx": 9190, "func": "Initialize salutation strings", "target": 0}
{"idx": 9191, "func": "chop to server.name:xx", "target": 0}
{"idx": 9192, "func": "//get filename or \"\"", "target": 0}
{"idx": 9193, "func": "calculate the bar width - this calculation differs from the BarRenderer calculation because the bars are layered on top of one another, so there is effectively only one bar per category for the purpose of the bar width calculation", "target": 0}
{"idx": 9194, "func": "//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ $NON-NLS-1$", "target": 0}
{"idx": 9195, "func": "Note: bshmethod needs to re-evaluate arg types here This is broken.", "target": 0}
{"idx": 9196, "func": "@see MouseMotionListener#mouseDragged(MouseEvent)", "target": 0}
{"idx": 9197, "func": "end constructor", "target": 0}
{"idx": 9198, "func": "Get the string of enumerated values if necessary.", "target": 0}
{"idx": 9199, "func": "////////////////////////////////////////////////////////////////////High-level reading and scanning methods. //////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 9200, "func": "Create an instance of the rmic, redirecting output to the project log", "target": 0}
{"idx": 9201, "func": "//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc", "target": 0}
{"idx": 9202, "func": "//messageController.setAttachmentSelectionReference(local);", "target": 0}
{"idx": 9203, "func": "//{{{ getMarkers() method", "target": 0}
{"idx": 9204, "func": "//{{{ toggleWordWrap() method", "target": 0}
{"idx": 9205, "func": "i18n[sqlscript.configYourMultiTableScript=Configure your multi table script:]", "target": 0}
{"idx": 9206, "func": "records the existance of an equal sign", "target": 0}
{"idx": 9207, "func": "Print page", "target": 0}
{"idx": 9208, "func": "now check autoPopulate==true", "target": 0}
{"idx": 9209, "func": "TODO turn into method?", "target": 1}
{"idx": 9210, "func": "Check that the object isn't already in a unique list. //", "target": 0}
{"idx": 9211, "func": "standard deviation lines", "target": 0}
{"idx": 9212, "func": "New style importers don't create diagrams, so we'll do it based on the list of newElements that they created", "target": 0}
{"idx": 9213, "func": "A collection of entities...", "target": 0}
{"idx": 9214, "func": "MySQL 4.x and below MySQL 5.x and above", "target": 0}
{"idx": 9215, "func": "like <exec> like <exec> like <exec>", "target": 0}
{"idx": 9216, "func": "line 610", "target": 0}
{"idx": 9217, "func": "\\O, \\OO, \\OOO or backref", "target": 0}
{"idx": 9218, "func": "extend range forward", "target": 0}
{"idx": 9219, "func": "See if the user configured a multiplexer stack", "target": 0}
{"idx": 9220, "func": "TODO: Only occurrence of isConcurrent in UML 2.1.1 is in index it's not on the page that is indexed", "target": 1}
{"idx": 9221, "func": "For some reason, Frontbase doesn't find tables that have been previously created.", "target": 0}
{"idx": 9222, "func": "skip any identical items already on the list", "target": 0}
{"idx": 9223, "func": "//do nothing", "target": 0}
{"idx": 9224, "func": "Get the names of the two ends. If there are none (i.e they are currently anonymous), use the ArgoUML convention of \"(anon)\" for the names", "target": 0}
{"idx": 9225, "func": "CheckStyle:VisibilityModifier OFF - bc //ToDo: If dealing with default cl need to parse out <enter description here>", "target": 0}
{"idx": 9226, "func": "//{{{ getPluginJAR() method", "target": 0}
{"idx": 9227, "func": "//{{{ adjustForScreenBounds() method", "target": 0}
{"idx": 9228, "func": "If this also does not work -> fall back to no charset specified", "target": 0}
{"idx": 9229, "func": "receiver, args, result, value", "target": 0}
{"idx": 9230, "func": "Read the encoding.", "target": 0}
{"idx": 9231, "func": "Convert both to Sets", "target": 0}
{"idx": 9232, "func": "found an open link", "target": 0}
{"idx": 9233, "func": "close window where another remote client might jump in", "target": 0}
{"idx": 9234, "func": "If we've been successful on an update, delete the temporary file", "target": 0}
{"idx": 9235, "func": "//don't bother trying to update, we know there is no row there yet", "target": 0}
{"idx": 9236, "func": "NOTE: This listener needs to always be active even if this tab isn't visible", "target": 0}
{"idx": 9237, "func": "does nothing - override if necessary", "target": 0}
{"idx": 9238, "func": "topPanel.setLayout( );", "target": 0}
{"idx": 9239, "func": "REVISIT: j:CNS11643 -> EUC-TW? ISO-2022-CN? ISO-2022-CN-EXT?", "target": 0}
{"idx": 9240, "func": "Collection Types:", "target": 0}
{"idx": 9241, "func": "if it's the exception we're expecting", "target": 0}
{"idx": 9242, "func": "//{{{ blinkCaret() method", "target": 0}
{"idx": 9243, "func": "should be impossible", "target": 0}
{"idx": 9244, "func": "TBLRC 00111 - left, right and center items", "target": 0}
{"idx": 9245, "func": "don't bother checking class is present if it is to be updated", "target": 0}
{"idx": 9246, "func": "look for the instance by uuid", "target": 0}
{"idx": 9247, "func": "6b - append the relative URI path", "target": 0}
{"idx": 9248, "func": "(non-Javadoc) @see org.columba.mail.folder.IMailbox#getMessageSourceStream(java.lang.Object)", "target": 0}
{"idx": 9249, "func": "//{{{ Selection", "target": 0}
{"idx": 9250, "func": "Return whether there is a list, the value is in the list, and index is in range... //", "target": 0}
{"idx": 9251, "func": "@JRubyMethod public IRubyObject to_proc() { return RubyProc.newProc(getRuntime(), CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()), Block.Type.PROC); }", "target": 0}
{"idx": 9252, "func": "i18n[mssql.remove_Mnemonic=R]", "target": 0}
{"idx": 9253, "func": "The NumberFormat object to use for all locale-dependent formatting.", "target": 0}
{"idx": 9254, "func": "FIXME This function needs documentation @param Attrs Hashtable to use as the attributes", "target": 1}
{"idx": 9255, "func": "If the first object is null, the second object must be null. //", "target": 0}
{"idx": 9256, "func": "we look through the source path elements. If the element is a dir we look for the file. If it is a zip, we look for the zip entry. This isn't normal for source paths but we get it for free", "target": 0}
{"idx": 9257, "func": "jdk 1.5 xsltc", "target": 0}
{"idx": 9258, "func": "//{{{ Initialize settings directory", "target": 0}
{"idx": 9259, "func": "//{{{ isMacOS() method", "target": 0}
{"idx": 9260, "func": "i18n[syntax.switchingNotSupported=Switching the editor of a runninig session is not supported.\\nYou may switch the entry area in the New Session Properties dialog]", "target": 0}
{"idx": 9261, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsCorrelatedSubqueries()", "target": 0}
{"idx": 9262, "func": "find action performed", "target": 0}
{"idx": 9263, "func": "//addRightComponent(taskButton, 30);", "target": 0}
{"idx": 9264, "func": "//Sybase fail if we don't do that, sigh...", "target": 0}
{"idx": 9265, "func": "int version =", "target": 0}
{"idx": 9266, "func": "Regression for HARMONY-444", "target": 0}
{"idx": 9267, "func": "Add remaining stuff from buffer", "target": 0}
{"idx": 9268, "func": "position variable for pattern start", "target": 0}
{"idx": 9269, "func": "ioe.printStackTrace();", "target": 0}
{"idx": 9270, "func": "//{{{ Macro class", "target": 0}
{"idx": 9271, "func": "MModelElement", "target": 0}
{"idx": 9272, "func": "now load all available plugins PluginManager.getInstance().initExternalPlugins();", "target": 0}
{"idx": 9273, "func": "else - there is a comment that starts exactly at rangeStartPos", "target": 0}
{"idx": 9274, "func": "//null caused some problems", "target": 0}
{"idx": 9275, "func": "Allow getThis() to work through BlockNameSpace to the method namespace XXX re-eval this... do we need it?", "target": 1}
{"idx": 9276, "func": "Is the parser current within a singleton (value is number of nested singletons)", "target": 0}
{"idx": 9277, "func": "-v", "target": 0}
{"idx": 9278, "func": "//////////////////////////////////////////////////////////////event handling", "target": 0}
{"idx": 9279, "func": "mock object folder facade, only returns folder list", "target": 0}
{"idx": 9280, "func": "// mockResultSet = mockHelper.createMock(ResultSet.class);", "target": 0}
{"idx": 9281, "func": "//{{{ setIgnoreCase() method", "target": 0}
{"idx": 9282, "func": "Create a proper feature map entry. //", "target": 0}
{"idx": 9283, "func": "Compare path of two elements in reverse order (inner to outer) using a primary strength text collator. This will collate e, E, �, � together, but not eliminate non-identical strings which collate in the same place. @return equivalent of list1.compareTo(list2)", "target": 0}
{"idx": 9284, "func": "A HTTP GET request", "target": 0}
{"idx": 9285, "func": "Log some stuff", "target": 0}
{"idx": 9286, "func": "use factory to get the appropriate editor", "target": 0}
{"idx": 9287, "func": "only do something if ignore flag is not set", "target": 0}
{"idx": 9288, "func": "remove it so editor can continue functioning", "target": 0}
{"idx": 9289, "func": "allow this as imported in targets are only tested when a target is run", "target": 0}
{"idx": 9290, "func": "Try reading a standalone declaration", "target": 0}
{"idx": 9291, "func": "Use the OS launcher so we get environment variables", "target": 0}
{"idx": 9292, "func": "// paramTranslations = new ParameterTranslationsImpl( collectedParameterSpecifications );", "target": 0}
{"idx": 9293, "func": "re-implement legacy behaviour:", "target": 0}
{"idx": 9294, "func": "view.addCaretListener(this);", "target": 0}
{"idx": 9295, "func": "encrypt the input", "target": 0}
{"idx": 9296, "func": "FIXME: may need to broaden for IPV6 IP address strings", "target": 1}
{"idx": 9297, "func": "| //removed to workaround problems with autosplit OCLEditor.OPTIONMASK_AUTOSPLIT", "target": 0}
{"idx": 9298, "func": "If there are some... //", "target": 0}
{"idx": 9299, "func": "add an item entity, if this information is being collected", "target": 0}
{"idx": 9300, "func": "//P4 runtime directives", "target": 0}
{"idx": 9301, "func": "//{{{ handleKey() method", "target": 0}
{"idx": 9302, "func": "change to false after the first insert", "target": 0}
{"idx": 9303, "func": "selected rectangle shouldn't extend outside the data area...", "target": 0}
{"idx": 9304, "func": "//same as for ChartEntity!", "target": 0}
{"idx": 9305, "func": "Transforms email-addresses into HTML just as substituteEmailAddress(String), but tries to ignore email-addresses, which are already links, if the ignore links flag is set. <br> This extended functionality is necessary when parsing a text which is already (partly) html. <br> FIXME: Can this be done smarter, i.e. directly with reg. expr. without manual parsing?? @param s input text @param ignoreLinks if true link tags are ignored. This gives a wrong result if some e-mail adresses are already links (but uses reg. expr. directly, and is therefore faster) @return text with email-adresses transformed to links", "target": 1}
{"idx": 9306, "func": "Create a new tagged value with the given type and value and add it to a ModelElement.", "target": 0}
{"idx": 9307, "func": "//int logLevel = filesetManifestConfig == null ? Project.MSG_WARN : Project.MSG_VERBOSE; //log(\"File \" + file + \" includes a META-INF/MANIFEST.MF which will be ignored. \" + \"To include this file, set filesetManifest to a value other \" + \"than 'skip'.\", logLevel);", "target": 0}
{"idx": 9308, "func": "line 2014", "target": 0}
{"idx": 9309, "func": "We found the classifier, now go find the operation:", "target": 0}
{"idx": 9310, "func": "The mode_decode routine may or may not be there. We don't care if it is not there, but log an info if we failed to drop it for some other reason.", "target": 0}
{"idx": 9311, "func": "//i18n[MappingRoot.connectionErr=Error getting SQL connection data from Hibernate:]", "target": 0}
{"idx": 9312, "func": "not closing from finalize", "target": 0}
{"idx": 9313, "func": "//shortcut", "target": 1}
{"idx": 9314, "func": "Loads a project displaying a nice ProgressMonitor @param file the project to be opened @param showUI whether to show the GUI or not TODO: This needs to be refactored to be GUI independent - tfm", "target": 1}
{"idx": 9315, "func": "setup base url in order to be able to display images in html-component", "target": 0}
{"idx": 9316, "func": "//do nothing to avoid a lazy property initialization", "target": 0}
{"idx": 9317, "func": "m contains either BshMethod or Vector of BshMethod", "target": 0}
{"idx": 9318, "func": "message colour should be black as default", "target": 0}
{"idx": 9319, "func": "Set the focus to the editor pane and set cursor to the top", "target": 0}
{"idx": 9320, "func": "Update an existing tagged value on a model element.", "target": 0}
{"idx": 9321, "func": "replaces GOTO with GOTO_W, JSR with JSR_W and IFxxx <l> with IFNOTxxx <l'> GOTO_W <l>, where IFNOTxxx is the \"opposite\" opcode of IFxxx (i.e., IFNE for IFEQ) and where <l'> designates the instruction just after the GOTO_W.", "target": 0}
{"idx": 9322, "func": "Write indent characters", "target": 0}
{"idx": 9323, "func": "TODO: It doesn't matter what these get set to because GEF can't draw anything except 1 pixel wide lines", "target": 1}
{"idx": 9324, "func": "We'd like the collection of things added to be selected after this command completes. //", "target": 0}
{"idx": 9325, "func": "get parent", "target": 0}
{"idx": 9326, "func": "object is a custom class that extended one of the native types other than Object", "target": 0}
{"idx": 9327, "func": "if this composite state is not attached to a statemachine it is not the toplevel composite state.", "target": 0}
{"idx": 9328, "func": "loading collection xrefs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 9329, "func": "@see java.awt.dnd.DropTargetListener#dragEnter( java.awt.dnd.DropTargetDragEvent)", "target": 0}
{"idx": 9330, "func": "It looks better if the height increases, too", "target": 0}
{"idx": 9331, "func": "Define a second version that doesn't take a block, so we have unique code paths for both cases.", "target": 0}
{"idx": 9332, "func": "//i18n[FileEditorDropTargetListener.internalErrorMessage=Internal error occurred. //See log for details]", "target": 0}
{"idx": 9333, "func": "Check arguments We should have one argument, with the value equal to the post body", "target": 0}
{"idx": 9334, "func": "I hate to admit it, but we don't know what happened here. Throw the Exception.", "target": 1}
{"idx": 9335, "func": "//not small log values in use; allow for values <= 0 //if did zero tick last iter then", "target": 0}
{"idx": 9336, "func": "user = loginTextField.getText();", "target": 0}
{"idx": 9337, "func": "no space after :", "target": 0}
{"idx": 9338, "func": "create it.", "target": 0}
{"idx": 9339, "func": "preserveInTarget would find all files we want to keep, but we need to find all that we want to delete - so the meaning of all patterns and selectors must be inverted", "target": 0}
{"idx": 9340, "func": "Do we have some data, or a trailing empty field? we have some data we've started a field Just seen \"\"", "target": 0}
{"idx": 9341, "func": "TODO: Model implementation independent", "target": 1}
{"idx": 9342, "func": "must be called before setting startedColumn = false", "target": 0}
{"idx": 9343, "func": "i18n[HelpViewerWindow.changelogs=Change Logs]", "target": 0}
{"idx": 9344, "func": "//{{{ replaceOne() method", "target": 0}
{"idx": 9345, "func": "If we are connecting to a database, then this is fine. However, when using MockObjects, this is problematic since there are many unimplemented methods in the MockObjects implementation that are required by this.", "target": 1}
{"idx": 9346, "func": "////////////////////Code ///////////////////////////", "target": 0}
{"idx": 9347, "func": "Extended property name $NON-NLS-1$", "target": 0}
{"idx": 9348, "func": "Create a new FigText instance based on the given mouse down event and the state of the parent Editor.", "target": 0}
{"idx": 9349, "func": "//important: reuse the same event instances for performance!", "target": 0}
{"idx": 9350, "func": "//{{{ Lay out docking areas", "target": 0}
{"idx": 9351, "func": "New Template Container Label", "target": 0}
{"idx": 9352, "func": "dataset index", "target": 0}
{"idx": 9353, "func": "This gives us a directory... //", "target": 0}
{"idx": 9354, "func": "/ <summary> / How much usable data has been read into the stream, / which will not always be as long as Buffer.Length. / </summary>", "target": 0}
{"idx": 9355, "func": "TODO: double check - tfm", "target": 0}
{"idx": 9356, "func": "@see org.argouml.model.ModelEventPump#addModelEventListener( java.beans.PropertyChangeListener, java.lang.Object, java.lang.String)", "target": 0}
{"idx": 9357, "func": "set value", "target": 0}
{"idx": 9358, "func": "i18n[SessionSQLPropertiesPanel.removeMultiLineComment=Remove multi line comment (...) from SQL before sending to database]", "target": 0}
{"idx": 9359, "func": "otherwise a null or brand new collection this will also (inefficiently) handle arrays, which have no snapshot, so we can't do any better //processArrayOrNewCollection(collection, type);", "target": 0}
{"idx": 9360, "func": "general purpose bit flag", "target": 0}
{"idx": 9361, "func": "record the colorStartPos of the last bit of text that we colored", "target": 0}
{"idx": 9362, "func": "check a series with three items", "target": 0}
{"idx": 9363, "func": "Enable the DELETE and SAVE buttons if they are currently disabled.", "target": 0}
{"idx": 9364, "func": "Walk up the scope tree right now as much as possible, to avoid run-time walking SSS FIXME: Any reason why this might break in the presence of ruby's dynamic resolution? What might break?", "target": 1}
{"idx": 9365, "func": "Use the entry from the generic jar", "target": 0}
{"idx": 9366, "func": "Value of \"TZ\" property is of a bit different format, which confuses the Java's TimeZone.getTimeZone(id) method, and so, we need to convert it.", "target": 0}
{"idx": 9367, "func": "empty at the moment", "target": 0}
{"idx": 9368, "func": "TODO: should this be restored?", "target": 1}
{"idx": 9369, "func": "20030906, karlpeder Method signature changed to take an AbstractEditorController (instead of an TextEditorView) as parameter since the view is no longer directly available", "target": 0}
{"idx": 9370, "func": "(NOT (LT a b) ) => (GE a b)", "target": 0}
{"idx": 9371, "func": "TODO: We'd like these to not be filled, but GEF won't let us select them if we do that. setFilled(false);", "target": 1}
{"idx": 9372, "func": "splatted when, can't do it yet", "target": 0}
{"idx": 9373, "func": "Check the Request URI sent to the mirror server, and sent back by the mirror server", "target": 0}
{"idx": 9374, "func": "wrong", "target": 0}
{"idx": 9375, "func": "line 1445", "target": 0}
{"idx": 9376, "func": "Restore the previous state.", "target": 0}
{"idx": 9377, "func": "This should be per instance", "target": 1}
{"idx": 9378, "func": "open the stream", "target": 0}
{"idx": 9379, "func": "catch callers attempting to use one without other", "target": 0}
{"idx": 9380, "func": "If there are any files, we need to end the previous multipart", "target": 0}
{"idx": 9381, "func": "//Find out if we already loaded the needed ResourceBundle //object in the hashtable.", "target": 0}
{"idx": 9382, "func": "@bgen(jjtree) IfStatement", "target": 0}
{"idx": 9383, "func": "Standard setup", "target": 0}
{"idx": 9384, "func": "Test session cookie is returned", "target": 0}
{"idx": 9385, "func": "//no non-whitechars in text? remove attr!", "target": 0}
{"idx": 9386, "func": "Needed for example on PostgreSQL", "target": 0}
{"idx": 9387, "func": "notify tree //getRealModel().getTreeModel().nodeStructureChanged(getRootNode()); //}", "target": 0}
{"idx": 9388, "func": "Generate implicit joins, only if necessary.", "target": 0}
{"idx": 9389, "func": "this is executed on shutdown: store all open frames so that they can be restored on the next start", "target": 0}
{"idx": 9390, "func": "such as (?-i)", "target": 0}
{"idx": 9391, "func": "//get lower bound value", "target": 0}
{"idx": 9392, "func": "simply demonstration of how to change the docking title", "target": 0}
{"idx": 9393, "func": "is used as InstanceSpecification, see UMLDeploymentDiagram", "target": 0}
{"idx": 9394, "func": "//ChangeSwitch", "target": 0}
{"idx": 9395, "func": "The default setting to be used (i.e. historic)", "target": 0}
{"idx": 9396, "func": "buf.append(\"<b>\" + title + \"</b><br>\");", "target": 0}
{"idx": 9397, "func": "//IObjectTreeAPI api = _session.getObjectTreeAPI(_plugin);", "target": 0}
{"idx": 9398, "func": "make space for the clarifier for vertical symmetry margin between text and border", "target": 0}
{"idx": 9399, "func": "remove this account", "target": 0}
{"idx": 9400, "func": "N.B. we don't wait for the thread to complete, as that would prevent parallel TGs", "target": 0}
{"idx": 9401, "func": "//i18n[ImportTableDataCommand.ioErrorOccured=An error occured while reading import file data.]", "target": 0}
{"idx": 9402, "func": "//{{{ Get indent attributes for current line", "target": 0}
{"idx": 9403, "func": "Fill 7 of value (byte) -19 Fill 3 of value (byte) 33", "target": 0}
{"idx": 9404, "func": "register the default button, if available", "target": 0}
{"idx": 9405, "func": "Check that the response is one of the valid codes", "target": 0}
{"idx": 9406, "func": "//create tick label:", "target": 0}
{"idx": 9407, "func": "Output Directory", "target": 0}
{"idx": 9408, "func": "Cached values used for interface RangeInfo: (note minValue pinned at 0) A single set of extrema covers the entire SeriesCollection", "target": 0}
{"idx": 9409, "func": "Use a caching mechanism for this", "target": 0}
{"idx": 9410, "func": "gc.draw3DRect(xp, yp, cellSize, cellSize, true); if the cell is selected, fill it with the highlight color", "target": 0}
{"idx": 9411, "func": "TODO: Support navigability. The code below causes and exception in FigAssociationEndAnnotation.", "target": 1}
{"idx": 9412, "func": "$5 == null ? NilImplicitNode.NIL : $5;", "target": 0}
{"idx": 9413, "func": "set the name to a different value", "target": 0}
{"idx": 9414, "func": "//{{{ Wrap mode", "target": 0}
{"idx": 9415, "func": "Any type", "target": 0}
{"idx": 9416, "func": "//{{{ moveCaretPosition() method", "target": 0}
{"idx": 9417, "func": "i18n[DriverPropertiesPanel.useDriverProperties=Use driver properties]", "target": 0}
{"idx": 9418, "func": "i18n[DerbyDialect.varcharMessage=Derby only allows varchar columns to be altered]", "target": 0}
{"idx": 9419, "func": "Map types to assignable forms, need to keep this fast...", "target": 0}
{"idx": 9420, "func": "Implements JavaSamplerClient.getDefaultParameters()", "target": 0}
{"idx": 9421, "func": "(should we cache info in not a class case too?)", "target": 1}
{"idx": 9422, "func": "we grab serial number first; the worst that will happen is we cache a later update with an earlier serial number, which would just flush anyway", "target": 0}
{"idx": 9423, "func": "Originally called ResultType in the grammar", "target": 0}
{"idx": 9424, "func": "plain text", "target": 0}
{"idx": 9425, "func": "re-use identity type for recipient list", "target": 0}
{"idx": 9426, "func": "Instantiate render classes", "target": 0}
{"idx": 9427, "func": "The default SQLExceptionConverter for all dialects is based on SQLState since SQLErrorCode is extremely vendor-specific. Specific Dialects may override to return whatever is most appropriate for that vendor.", "target": 0}
{"idx": 9428, "func": "Check if we should do a multipart/form-data or an application/x-www-form-urlencoded post request", "target": 0}
{"idx": 9429, "func": "then Classifier", "target": 0}
{"idx": 9430, "func": "Title label at top.", "target": 0}
{"idx": 9431, "func": "Text color", "target": 0}
{"idx": 9432, "func": "The cache of file packs - for faster local access", "target": 0}
{"idx": 9433, "func": "Make sure we got what we started with", "target": 0}
{"idx": 9434, "func": "iterate over the old list", "target": 0}
{"idx": 9435, "func": "line 1828", "target": 0}
{"idx": 9436, "func": "it's an absolute path, use it as-is", "target": 0}
{"idx": 9437, "func": "Show splash screen", "target": 0}
{"idx": 9438, "func": "Here we are actually violating the test independance since we keep the DetailsPane from test to test. The reason to do this is to make it possible to run the tests with less memory requirements. Hopefully someone might eventually fix the DetailsPane so that it is garbage collected properly and this is no longer needed. @see junit.framework.TestCase#setUp()", "target": 0}
{"idx": 9439, "func": "i18n[DualProgressBarDialog.copyingRecordsLabel=Copying records]", "target": 0}
{"idx": 9440, "func": "//////////////////////////////////////////////////////////////////////////////////////Printing", "target": 0}
{"idx": 9441, "func": "shutdown already is in progress", "target": 0}
{"idx": 9442, "func": "Fill 9 of value (byte) 33", "target": 0}
{"idx": 9443, "func": "i18n[DeleteTablesCommand.loadingPrefix=Analyzing table:]", "target": 0}
{"idx": 9444, "func": "Default implementation... subclasses can extend this.", "target": 0}
{"idx": 9445, "func": "read the dependency cache from the disk", "target": 0}
{"idx": 9446, "func": "//{{{ addInstall() method", "target": 0}
{"idx": 9447, "func": "mock objects contact facade, only returns getContactItem() and getAllGroups()", "target": 0}
{"idx": 9448, "func": "INSERT INTO tableName (column1, column2) query;", "target": 0}
{"idx": 9449, "func": "Make a read-only copy of the listeners list so that reentrant calls back to add/removeListener won't mess us up. TODO: Potential performance issue, but we need the correctness - tfm", "target": 1}
{"idx": 9450, "func": "Select the new file resource in the current view. //", "target": 0}
{"idx": 9451, "func": "TODO - is this the correct default?", "target": 1}
{"idx": 9452, "func": "//catch script/ant mismatch with a meaningful message //we could ignore it, but there are likely to be other //version problems, so we stamp down on the configuration now", "target": 0}
{"idx": 9453, "func": "names are Strings", "target": 0}
{"idx": 9454, "func": "create new default options", "target": 0}
{"idx": 9455, "func": "for some reason the antlr.CommonAST initialization routines force this method to get called twice. The first time with an empty string", "target": 0}
{"idx": 9456, "func": "The token.image text of the name... never changes.", "target": 0}
{"idx": 9457, "func": "Custom sql", "target": 0}
{"idx": 9458, "func": "TABLE NAME COLUMN NAME COLUMN SIZE COLUMN SIZE", "target": 0}
{"idx": 9459, "func": "If set, this is the regex that is used to extract the status from the response NOT implemented yet private static final String STATUS_REGEX = JMeterUtils.getPropDefault(\"tcp.status.regex\",\"\");", "target": 0}
{"idx": 9460, "func": "-V", "target": 0}
{"idx": 9461, "func": "do not create a constraint:", "target": 0}
{"idx": 9462, "func": "Initialize the NotationUtilityUml:", "target": 0}
{"idx": 9463, "func": "i18n[mmsql.textFiles=Text Files]", "target": 0}
{"idx": 9464, "func": "Do statement is just a While statement with a special hook to execute at least once.", "target": 0}
{"idx": 9465, "func": "initialize MimeHeader as RFC822-compliant-message", "target": 0}
{"idx": 9466, "func": "compose message body as multipart/alternative", "target": 0}
{"idx": 9467, "func": "PlainJUnitResultFormatter", "target": 0}
{"idx": 9468, "func": "required and optional only", "target": 0}
{"idx": 9469, "func": "@see org.argouml.uml.ui.behavior.common_behavior.ActionNewAction#createAction()", "target": 0}
{"idx": 9470, "func": "TODO: Use default value of appropriate type here", "target": 1}
{"idx": 9471, "func": "Default config of <mycopy> for our purposes.", "target": 0}
{"idx": 9472, "func": "and when the class changes name:", "target": 0}
{"idx": 9473, "func": "CVS", "target": 0}
{"idx": 9474, "func": "(non-Javadoc) @see org.columba.addressbook.facade.IGroupItem#getContactCount()", "target": 0}
{"idx": 9475, "func": "//extra information about the element type", "target": 0}
{"idx": 9476, "func": "print all collected profile data", "target": 0}
{"idx": 9477, "func": "setup new, etc unless this is a ConcreteJavaProxy subclass", "target": 0}
{"idx": 9478, "func": "If a message has a name and a named operation, then show the operation:", "target": 0}
{"idx": 9479, "func": "draw all the subplots", "target": 0}
{"idx": 9480, "func": "check that removing by index also works", "target": 0}
{"idx": 9481, "func": "//{{{ Used to store property values", "target": 0}
{"idx": 9482, "func": "Options", "target": 0}
{"idx": 9483, "func": "We need to check canExecute() in case optimize is true. //", "target": 0}
{"idx": 9484, "func": "\"ignore bad checksums\" \"ignore transaction in Limbo\"", "target": 0}
{"idx": 9485, "func": "//borrowed from TokenFilterTest", "target": 1}
{"idx": 9486, "func": "N.B. A node which is an Association is either a n-ary association or the Class part of an AssociationClass", "target": 0}
{"idx": 9487, "func": "Allow Sampler access to test element name", "target": 0}
{"idx": 9488, "func": "should be a MutableTreeNode", "target": 0}
{"idx": 9489, "func": "Probably no point in converting this to return a SampleEvent", "target": 0}
{"idx": 9490, "func": "checkbox", "target": 0}
{"idx": 9491, "func": "int superClassIndex =", "target": 0}
{"idx": 9492, "func": "default directory to the project's base directory", "target": 0}
{"idx": 9493, "func": "Drag, resize interactions", "target": 0}
{"idx": 9494, "func": "RubyUNIXServer", "target": 0}
{"idx": 9495, "func": "//openWithBrowser(getLink());", "target": 0}
{"idx": 9496, "func": "Initialise the gui field values", "target": 0}
{"idx": 9497, "func": "optional connector name prefix", "target": 0}
{"idx": 9498, "func": "shape outlined =", "target": 0}
{"idx": 9499, "func": "yLow", "target": 0}
{"idx": 9500, "func": "Order first by number of features (descending) and then alphabetically (ascending) //", "target": 0}
{"idx": 9501, "func": "Data //", "target": 0}
{"idx": 9502, "func": "4.5.2.26 Method", "target": 0}
{"idx": 9503, "func": "reset the value", "target": 0}
{"idx": 9504, "func": "remove from view", "target": 0}
{"idx": 9505, "func": "Define gradient (blue to widget background color)", "target": 0}
{"idx": 9506, "func": "//{{{ setFoldLevel() method Also sets 'fold level valid' flag", "target": 0}
{"idx": 9507, "func": "aliases for composite-id's", "target": 0}
{"idx": 9508, "func": "Decide how many coding tables to use", "target": 0}
{"idx": 9509, "func": "no specific renderer found -> use default renderer", "target": 0}
{"idx": 9510, "func": "//wait for all Test Threads To Exit", "target": 0}
{"idx": 9511, "func": "//NOI18N", "target": 0}
{"idx": 9512, "func": "@see org.argouml.model.PseudostateKind#getJoin()", "target": 0}
{"idx": 9513, "func": "The following calls are ORDER DEPENDENT. Not sure why, but the layer add must come before the model add or we'll end up with duplicate figures in the diagram. - tfm", "target": 0}
{"idx": 9514, "func": "Single OS identifiers: Window 95, Window 98, ...", "target": 0}
{"idx": 9515, "func": "even though we might find a pre-existing element by join path, we may not be able to reuse it...", "target": 0}
{"idx": 9516, "func": "First the multipart start divider", "target": 0}
{"idx": 9517, "func": "add it to the project configuration", "target": 0}
{"idx": 9518, "func": "Activate the glass pane capabilities", "target": 0}
{"idx": 9519, "func": "version needed to extract general purpose bit flag", "target": 0}
{"idx": 9520, "func": "Position window to where it was when last closed. If this is not on the screen, move it back on to the screen.", "target": 0}
{"idx": 9521, "func": "view text areas temporarily blank out while a buffer is being loaded, to indicate to the user that there is no data available yet.", "target": 0}
{"idx": 9522, "func": "//FIXME: When we get JNA3 we need to properly write this to errno.", "target": 1}
{"idx": 9523, "func": "//disable the buttons for now, since no selection has been made yet", "target": 0}
{"idx": 9524, "func": "i18n[editWhereColsPanel.cannotRemoveAllCols=You cannot remove all of the fields from the 'use columns' list.]", "target": 0}
{"idx": 9525, "func": "get which locale-dependent format to use set to use the Java default", "target": 0}
{"idx": 9526, "func": "//{{{ removePluginProps() method", "target": 0}
{"idx": 9527, "func": "current position in s", "target": 0}
{"idx": 9528, "func": "Close activity log stream", "target": 0}
{"idx": 9529, "func": "Put toolbar at top of window.", "target": 0}
{"idx": 9530, "func": "//{{{ TOCHandler constructor", "target": 0}
{"idx": 9531, "func": "//{{{ closeBuffer() method", "target": 0}
{"idx": 9532, "func": "can happen because of the multiple ways Cache.remove() can be invoked :(", "target": 1}
{"idx": 9533, "func": "//here we successfully loaded the class or failed.", "target": 0}
{"idx": 9534, "func": "default for starting tempVariableIndex is ok", "target": 0}
{"idx": 9535, "func": "Nothing to do.", "target": 0}
{"idx": 9536, "func": "otherwise assume the parent is the the criteria that created us", "target": 0}
{"idx": 9537, "func": "otherwise (subquery case) dont reuse the fromElement if we are processing the from-clause of the subquery", "target": 0}
{"idx": 9538, "func": "icons // putValue(SMALL_ICON, ImageLoader.getIcon(\"folder_delete.png\")); // putValue(LARGE_ICON, ImageLoader.getIcon(\"folder_delete.png\"));", "target": 0}
{"idx": 9539, "func": "add result to main sampleResult", "target": 0}
{"idx": 9540, "func": "If you don't do this, you get all sorts of annoying warnings about a missing properties file. However, it seems to work just fine with default values. Ultimately, we should probably include a \"CatalogManager.properties\" file in the ant jarfile with some default property settings. See CatalogManager.java for more details. //", "target": 0}
{"idx": 9541, "func": "//{{{ addLeftOfScrollBar() method", "target": 0}
{"idx": 9542, "func": "Because we map both ends of an association we'll see many names twice LOG.log(Level.FINE, \"Duplicate property name found - {0}:{1}\", new Object[]{typeName, propertyName});", "target": 0}
{"idx": 9543, "func": "Make the composite state 1 region higher:", "target": 0}
{"idx": 9544, "func": "select v.VIEWDEFINITION from sys.SYSVIEWS v, sys.SYSTABLES t, sys.SYSSCHEMAS s where v.TABLEID = t.TABLEID and s.SCHEMAID = t.SCHEMAID and UPPER(t.TABLENAME) = 'VIEWNAME' and UPPER(s.SCHEMANAME) = 'SCHEMANAME'", "target": 0}
{"idx": 9545, "func": "<String>", "target": 0}
{"idx": 9546, "func": "Selects the values for the where part", "target": 0}
{"idx": 9547, "func": "record \\n and \\t on lines specially so that auto indent can take place", "target": 0}
{"idx": 9548, "func": "Add the height of all the compartments (if there are any), and check their minimum width:", "target": 0}
{"idx": 9549, "func": "Should not happen", "target": 0}
{"idx": 9550, "func": "JFreeChart chart =", "target": 0}
{"idx": 9551, "func": "//TODO: this is temporary in that the end result will probably not take a Property reference per-se.", "target": 1}
{"idx": 9552, "func": "activity belongs to calendar id ?", "target": 0}
{"idx": 9553, "func": "returns Object covering both Integer and Boolean return types", "target": 0}
{"idx": 9554, "func": "i18n[popupeditableIoPanel.cannotAccessFile=Cannot access file name {0}\\nAborting export.]", "target": 0}
{"idx": 9555, "func": "i18n[ColorPropertiesPanel.toolbarBackgroundColorBtnLabel=Choose Toolbar Color]", "target": 0}
{"idx": 9556, "func": "register for the doActivity etc.", "target": 0}
{"idx": 9557, "func": "//i18n[DerbyPlugin.prefsTitle=Derby]", "target": 0}
{"idx": 9558, "func": "Try to create a specific command based on the current desired operation. //", "target": 0}
{"idx": 9559, "func": "If a table cell is being edited, we must cancel the editing before deleting the row", "target": 0}
{"idx": 9560, "func": "size", "target": 0}
{"idx": 9561, "func": "Handle the same document proxies, which may have problems resulting from the other end of a bidirectional reference being handled as an IDREF rather than as a proxy. When we are done with these, we know that funny proxies are now resolved as if they were handled as IDREFs. //", "target": 0}
{"idx": 9562, "func": "line 1130", "target": 0}
{"idx": 9563, "func": "//FB TBD filter out volatile and other inappropriate links?", "target": 1}
{"idx": 9564, "func": "cascade-delete to collections BEFORE the collection owner is deleted", "target": 0}
{"idx": 9565, "func": "handle special case of delete with <null> contents", "target": 0}
{"idx": 9566, "func": "tooltip text ;mod: 20040629 SWITT", "target": 0}
{"idx": 9567, "func": "Walk the fields. //", "target": 0}
{"idx": 9568, "func": "Check if list of files to check has been specified", "target": 0}
{"idx": 9569, "func": "we might need to perform a DST correction", "target": 1}
{"idx": 9570, "func": "If this is the only message contained in the Interaction we delete the Interaction", "target": 0}
{"idx": 9571, "func": "setting the tooltip to type and name", "target": 0}
{"idx": 9572, "func": "//{{{ getRepeatCount() method", "target": 0}
{"idx": 9573, "func": "the arguments:", "target": 0}
{"idx": 9574, "func": "name is used to load plugin", "target": 0}
{"idx": 9575, "func": "//printBtnPrefSize.width -=10;", "target": 0}
{"idx": 9576, "func": "//{{{ resetClassManager() method", "target": 0}
{"idx": 9577, "func": "this check for files without extension...", "target": 0}
{"idx": 9578, "func": "eContainer = newContainer; eContainerFeatureID = newContainerFeatureID;", "target": 0}
{"idx": 9579, "func": "Check if alias is suitable here, rather than waiting for connection to fail", "target": 0}
{"idx": 9580, "func": "stop listening for changes to the existing chart", "target": 0}
{"idx": 9581, "func": "//TODO: if lock.getTimestamp().equals(ts)", "target": 1}
{"idx": 9582, "func": "Get the boundary string for the multiparts from the content type", "target": 0}
{"idx": 9583, "func": "store is faulty, we need to recreate it if cert is not valid, flag up to recreate it", "target": 0}
{"idx": 9584, "func": "Ensure properties files don't use special characters", "target": 0}
{"idx": 9585, "func": "make sure we know it when a classifier is added as a base", "target": 0}
{"idx": 9586, "func": "First, try an existing implementation of getChildReference(). This provides backwards compatibility if that method, now deprecated, was overridden. //", "target": 0}
{"idx": 9587, "func": "//{{{ save() method", "target": 0}
{"idx": 9588, "func": "Escaped dollar commma and backslash with no variable reference", "target": 0}
{"idx": 9589, "func": "//{{{ applicationDockMenu() method", "target": 0}
{"idx": 9590, "func": "line 1090", "target": 0}
{"idx": 9591, "func": "WFR 2.10.3.3 #4", "target": 0}
{"idx": 9592, "func": "No additional features TypeConverter", "target": 0}
{"idx": 9593, "func": "//if this is our context we assume there must be something here:", "target": 0}
{"idx": 9594, "func": "-O", "target": 0}
{"idx": 9595, "func": "//{{{ PluginJAR constructor", "target": 0}
{"idx": 9596, "func": "//MessageNode getMessageNodeAtRow(int index);", "target": 0}
{"idx": 9597, "func": "If the next scope out has the same binding scope as this scope it means we are evaling within an eval and in that case we should be sharing the same binding scope.", "target": 0}
{"idx": 9598, "func": "submit the current data point as a crosshair candidate", "target": 0}
{"idx": 9599, "func": "//TestCase/unsetGenFeature.override.javajetinc", "target": 0}
{"idx": 9600, "func": "//{{{ AppearanceOptionPane constructor", "target": 0}
{"idx": 9601, "func": "Currently visiting this node, so have a cycle", "target": 0}
{"idx": 9602, "func": "Get value from current scope or one of its captured scopes. FIXME: block variables are not getting primed to nil so we need to null check those until we prime them properly. Also add assert back in. @param offset zero-indexed value that represents where variable lives @param depth how many captured scopes down this variable should be set @return the value here", "target": 1}
{"idx": 9603, "func": "create reference of newly arrived messages", "target": 0}
{"idx": 9604, "func": "All characters in the string are used. Check if only ''s are left in the pattern. If so, we succeeded. Otherwise failure.", "target": 0}
{"idx": 9605, "func": "Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.", "target": 0}
{"idx": 9606, "func": "Create a temporary file where the existing contents of the archive can be written before the new contents are added. //", "target": 0}
{"idx": 9607, "func": "make sure that this is REALLY a testsuite.", "target": 0}
{"idx": 9608, "func": "//remove the .class", "target": 0}
{"idx": 9609, "func": "try a listener type that isn't registered", "target": 0}
{"idx": 9610, "func": "get the end position of the range for the previous node", "target": 0}
{"idx": 9611, "func": "-O-", "target": 0}
{"idx": 9612, "func": "init errorInfo to nil", "target": 0}
{"idx": 9613, "func": "XMI 2.1", "target": 0}
{"idx": 9614, "func": "Ctor. Wraps this exception around another. @param wrapee The exception that this one is wrapped around.", "target": 0}
{"idx": 9615, "func": "If we have buffered replace data, use it.", "target": 0}
{"idx": 9616, "func": "Try to get data from subresult Needed for addSubResult()", "target": 0}
{"idx": 9617, "func": "// Log.log(Log.DEBUG,this,\"AWT runner queued\");", "target": 0}
{"idx": 9618, "func": "//clear out queues! @@@", "target": 0}
{"idx": 9619, "func": "//////////////////////////////////////////////////////////////issue resolution", "target": 0}
{"idx": 9620, "func": "If encoding happened, create a new string; otherwise, return the orginal one.", "target": 0}
{"idx": 9621, "func": "Count up the objects that will be removed. The objects are exchanged to produce this list's order //", "target": 0}
{"idx": 9622, "func": "Force the raw type to be resolved so we don't resolve this endlessly. //", "target": 0}
{"idx": 9623, "func": "Cannot edit the rowID column, if present", "target": 0}
{"idx": 9624, "func": "//{{{ setNewFile() method", "target": 0}
{"idx": 9625, "func": "join.getKey().setType( new Type( lazz.getIdentifier() ) );", "target": 0}
{"idx": 9626, "func": "i18n[SQLResultExecuterPanel.outputStatus=Building output...]", "target": 0}
{"idx": 9627, "func": "convert to IRubyObject", "target": 0}
{"idx": 9628, "func": "language", "target": 0}
{"idx": 9629, "func": "new target is a fig, refresh should be called", "target": 0}
{"idx": 9630, "func": "Recent Directories", "target": 0}
{"idx": 9631, "func": "set a custom background for the chart", "target": 0}
{"idx": 9632, "func": "delete a backup created using above method", "target": 0}
{"idx": 9633, "func": "create a class model element", "target": 0}
{"idx": 9634, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#copyStarted(net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyEvent)", "target": 0}
{"idx": 9635, "func": "Parse the rest of the content model.", "target": 0}
{"idx": 9636, "func": "@author fdietz: hackish way of creating a search toolbar //JToolBar searchToolBar = new ExtendableToolBar();", "target": 1}
{"idx": 9637, "func": "Set the mapper to build an XSD2EcoreMappingRoot, if available. //", "target": 0}
{"idx": 9638, "func": "(non-Javadoc) @see org.columba.core.taskmanager.ITaskManager#addTaskManagerListener(org.columba.core.taskmanager.TaskManagerListener)", "target": 0}
{"idx": 9639, "func": "Not needed", "target": 0}
{"idx": 9640, "func": "@bgen(jjtree) AllocationExpression", "target": 0}
{"idx": 9641, "func": "//{{{ redo() method", "target": 0}
{"idx": 9642, "func": "///////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 9643, "func": "TODO: Make Parameter implement SQLItem interface which has a getString method which can also be implemented by SQLString, or SQLFragment or some such. We can then eliminate the use of instanceof below and clean up the code a bit, by making itemsInSql look like: ArrayList<SQLItem> itemsInSql = new ArrayList<SQLItem>();", "target": 1}
{"idx": 9644, "func": "Test for creating a tempfile in a directory that does not exist.", "target": 0}
{"idx": 9645, "func": "Prepare to execute the block. We must create a new BlockNameSpace to hold the catch parameter and swap it on the stack after initializing it.", "target": 0}
{"idx": 9646, "func": "builder.nextLine();", "target": 0}
{"idx": 9647, "func": "update() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 9648, "func": "true number of bytes to be added (or removed) from this instruction = (future number of padding bytes - current number of padding byte) - previously over estimated variation = = ((3 - newOffset%4) - (3 - u%4)) - u%4 = (-newOffset%4 + u%4) - u%4 = -(newOffset & 3)", "target": 0}
{"idx": 9649, "func": "ignore it", "target": 0}
{"idx": 9650, "func": "Figs on a diagram without an owning model element", "target": 0}
{"idx": 9651, "func": "Set up the property panels for critics:", "target": 0}
{"idx": 9652, "func": "java.home is bogus", "target": 0}
{"idx": 9653, "func": "@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)", "target": 0}
{"idx": 9654, "func": "draw the outline of the cell gc.setColor(MetalLookAndFeel.getPrimaryControlShadow());", "target": 0}
{"idx": 9655, "func": "TODO: The above populate works but seems rather heavy here. I can see something like this is needed though as events won't manage this quick enough. Could we make FigEditableCompartment.createModelElement() create the new child Fig instance? It may also be useful for it to return the new model element rather than the current void return - Bob.", "target": 1}
{"idx": 9656, "func": "value is already on stack, save it for later", "target": 0}
{"idx": 9657, "func": "check box for whether to use Java Default or a Locale-dependent format", "target": 0}
{"idx": 9658, "func": "tabs.addTab(Translator.localize(\"dialog.find.tab.name-and-location\"), nameLocTab);", "target": 0}
{"idx": 9659, "func": "Return a package to use as the Namespace.", "target": 0}
{"idx": 9660, "func": "Login loop until authenticated", "target": 0}
{"idx": 9661, "func": "add all additional names (middle names)", "target": 0}
{"idx": 9662, "func": "no attachments found - just convert it to text/plain or text/html", "target": 0}
{"idx": 9663, "func": "Procedures", "target": 0}
{"idx": 9664, "func": "Target server panel", "target": 0}
{"idx": 9665, "func": "//{{{ addExplicitFold() method", "target": 0}
{"idx": 9666, "func": "if we saved over an already open file using 'save a copy as', then reload the existing buffer", "target": 0}
{"idx": 9667, "func": "When the encoding is not known, the argument will get the encoded value, and the \"encode?\" set to false", "target": 0}
{"idx": 9668, "func": "error", "target": 0}
{"idx": 9669, "func": "TODO: The UML 1.4 concept of a Multiplicity & Multiplicity Range has been replaced by a single element", "target": 1}
{"idx": 9670, "func": "create the HashMap of names to use and put it in EditWhereCols", "target": 0}
{"idx": 9671, "func": "session-start/post-flush persistent state", "target": 0}
{"idx": 9672, "func": "return the clean value", "target": 0}
{"idx": 9673, "func": "//this is almost implausible, but required handling", "target": 0}
{"idx": 9674, "func": "We only want IO objects with valid streams (better to error now).", "target": 0}
{"idx": 9675, "func": "computes the true beginning stack size of this successor block", "target": 0}
{"idx": 9676, "func": "@see AbstractAction#actionPerformed(ActionEvent)", "target": 0}
{"idx": 9677, "func": "Save Location so resulting sample can be disabled", "target": 0}
{"idx": 9678, "func": "should header be saved with the data? //$NON-NLS-1$", "target": 0}
{"idx": 9679, "func": "For access to stop methods.", "target": 0}
{"idx": 9680, "func": "//+ JMX field names - do not change values //$NON-NLS-1$", "target": 0}
{"idx": 9681, "func": "check build.compiler provides defaults", "target": 0}
{"idx": 9682, "func": "Look up class name using the first identifier in the path.", "target": 0}
{"idx": 9683, "func": "i18n[BaseSourceTab.title=Source]", "target": 0}
{"idx": 9684, "func": "fucking GTK look and feel", "target": 1}
{"idx": 9685, "func": "Save bytes read $NON_NLS-1$", "target": 0}
{"idx": 9686, "func": "TODO: see if protected or need to be present in each subclass", "target": 1}
{"idx": 9687, "func": "the URL text should already have been escaped by the URL generator", "target": 0}
{"idx": 9688, "func": "Can't happen", "target": 0}
{"idx": 9689, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#supportsCatalogs()", "target": 0}
{"idx": 9690, "func": "These methods handle parameters that could contain delimiters or quotes:", "target": 0}
{"idx": 9691, "func": "try the parent FromClause...", "target": 0}
{"idx": 9692, "func": "user checks ------------------------------------------------------------------------", "target": 0}
{"idx": 9693, "func": "Apply most specific signature matching", "target": 0}
{"idx": 9694, "func": "ignore this if the object does not have a set project method or the method is private/protected.", "target": 0}
{"idx": 9695, "func": "The most deeply nested output stream that will be returned wrapped as the result. //", "target": 0}
{"idx": 9696, "func": "////Object Tree Expanders //////Schema Expanders - sequence", "target": 0}
{"idx": 9697, "func": "$NON-NLS-1$ $NON-NLS-1$ //$NON-NLS-1$ $NON-NLS-1$", "target": 0}
{"idx": 9698, "func": "both have the same settings", "target": 0}
{"idx": 9699, "func": "Count the retries as well in the time", "target": 0}
{"idx": 9700, "func": "single string command, pass to sh to expand wildcards", "target": 0}
{"idx": 9701, "func": "n2.isLabelUpdate()", "target": 0}
{"idx": 9702, "func": "Check if need to set the loader", "target": 0}
{"idx": 9703, "func": "setup a user defined profile which isn't loaded by the model subsystem and contains a stereotype and this contains a tag definition", "target": 0}
{"idx": 9704, "func": "Parser with specified options can't be built", "target": 0}
{"idx": 9705, "func": "$=: ignorecase", "target": 0}
{"idx": 9706, "func": "we know we are on a DOS style platform and the next path starts with a slash or backslash, so we know this is a drive spec", "target": 0}
{"idx": 9707, "func": "Expected results established using the DDA algorithm (see http://www.siggraph.org/education/materials/HyperGraph/scanline/outprims/drawline.htm): 0/1 vs. 1/1 -> 0 is closer to 33.33 0/2 vs. 1/2 -> 50.0 is closer to 33.33 1/3 vs. 2/3 -> 33.33 is closer to 33.33 1/4 vs. 2/4 -> 25.0 is closer to 33.33 1/5 vs. 2/5 -> 40.0 is closer to 33.33 2/6 vs. 3/6 -> 33.33 is closer to 33.33", "target": 0}
{"idx": 9708, "func": "rangeZeroBaselineStroke", "target": 0}
{"idx": 9709, "func": "Don't change the case of the identifier if database allows mixed case.", "target": 0}
{"idx": 9710, "func": "request with a negative index", "target": 0}
{"idx": 9711, "func": "make sure facade knows about magic properties and fork setting", "target": 0}
{"idx": 9712, "func": "fill it up path with parts which were not equal", "target": 0}
{"idx": 9713, "func": "//{{{ loadAbbrevs() method", "target": 0}
{"idx": 9714, "func": "not too many old files", "target": 0}
{"idx": 9715, "func": "//{{{ goToBuffer() method", "target": 0}
{"idx": 9716, "func": "From the Java Look and Feel Guidelines: If all items in a menu are disabled, then disable the menu. Makes sense.", "target": 0}
{"idx": 9717, "func": "update the values", "target": 0}
{"idx": 9718, "func": "create menuitems for all registered frame extensions", "target": 0}
{"idx": 9719, "func": "//no caching", "target": 0}
{"idx": 9720, "func": "This should just produce an error message.", "target": 0}
{"idx": 9721, "func": "The size of buffers to be used", "target": 0}
{"idx": 9722, "func": "//previousNode.getStartPosition() + previousNode.getLength();", "target": 0}
{"idx": 9723, "func": "//{{{ nextBuffer() method", "target": 0}
{"idx": 9724, "func": "add button for Brows i18n[popupeditableIoPanel.browse=Browse]", "target": 0}
{"idx": 9725, "func": "select invisible virtual folder", "target": 0}
{"idx": 9726, "func": "TODO only called by UserParameterXMLParser.getXMLParameters which is a deprecated class", "target": 1}
{"idx": 9727, "func": "//i18n[CopyTablesCommand.progressDialogTitle=Analyzing FKs in Tables to Copy]", "target": 0}
{"idx": 9728, "func": "@see org.argouml.model.ModelImplementation#getExtensionMechanismsFactory()", "target": 0}
{"idx": 9729, "func": "don't wait, just continue shutdown procedure, commands will be killed", "target": 0}
{"idx": 9730, "func": "Expanders - trigger and index expanders are added inside the table expander", "target": 0}
{"idx": 9731, "func": "TODO: cache?", "target": 1}
{"idx": 9732, "func": "This is temporary. Load project should create a new project with its own UndoManager and so there should be no Command", "target": 0}
{"idx": 9733, "func": "TODO: It would be better to defer this initialization until the panel actually needs to be displayed. Perhaps optimistically always return true and figure out later if we've got something to display - tfm - 20070110", "target": 1}
{"idx": 9734, "func": "delegate 'state' and 'source' argument checks...", "target": 0}
{"idx": 9735, "func": "if wizClass is not a subclass of Wizard, print a warning", "target": 0}
{"idx": 9736, "func": "We create one extra dynamicScope on a binding so that when we 'eval \"b=1\", binding' the 'b' will get put into this new dynamic scope. The original scope does not see the new 'b' and successive evals with this binding will. I take it having the ability to have succesive binding evals be able to share same scope makes sense from a programmers perspective. One crappy outcome of this design is it requires Dynamic and Static scopes to be mutable for this one case.", "target": 0}
{"idx": 9737, "func": "//{{{ getFoldHandler() method", "target": 0}
{"idx": 9738, "func": "//i18n[SyntaxPlugin.touppercase=touppercase]", "target": 0}
{"idx": 9739, "func": "all tests should consider the threshold as inclusive value", "target": 0}
{"idx": 9740, "func": "Append nothing - standard says this is equivalent to NO ACTION and some DBs (e.g. Oracle don't accept ... NO ACTION)", "target": 0}
{"idx": 9741, "func": "line 354", "target": 0}
{"idx": 9742, "func": "@see org.argouml.model.ActivityGraphsHelper#findClassifierByName(java.lang.Object, java.lang.String) all methods below similarly implement methods from ActivityGraphsHelper", "target": 0}
{"idx": 9743, "func": "All of the ApplicationListener methods are void; return null regardless of what happens", "target": 0}
{"idx": 9744, "func": "lock doesn't cascade to uninitialized collections", "target": 0}
{"idx": 9745, "func": "store header after processing", "target": 0}
{"idx": 9746, "func": "//{{{ Screen line stuff", "target": 0}
{"idx": 9747, "func": "line 592", "target": 0}
{"idx": 9748, "func": "Should we create our own copy of the RMI registry?", "target": 0}
{"idx": 9749, "func": "the name of the parent diagram instance", "target": 0}
{"idx": 9750, "func": "updateBackground();", "target": 0}
{"idx": 9751, "func": "These files contain images etc. We try to filter out these props.", "target": 0}
{"idx": 9752, "func": "rb: writable", "target": 0}
{"idx": 9753, "func": "TODO: getAllPossibleSubvertices and getAllSubStates are duplicates - tfm", "target": 1}
{"idx": 9754, "func": "Note: the resource string won't respond to locale-changes, however this does not matter as it is only used when pasting to the clipboard", "target": 0}
{"idx": 9755, "func": "Only add the hook once", "target": 0}
{"idx": 9756, "func": "suppress", "target": 0}
{"idx": 9757, "func": "//should not occur, otherwise the bundlePath would not be in the hashtable", "target": 0}
{"idx": 9758, "func": "//FILL PAINT //////////////////////////////////////////////////////////", "target": 0}
{"idx": 9759, "func": "If the table is indenting, draw tree lines. //", "target": 0}
{"idx": 9760, "func": "//private double arrowWidth;", "target": 0}
{"idx": 9761, "func": "//{{{ getRegexpProperty() method", "target": 0}
{"idx": 9762, "func": "-------------------------------------------------------------------------- Fields --------------------------------------------------------------------------", "target": 0}
{"idx": 9763, "func": "Filter conditions need to be inserted before the HQL where condition and the theta join node. This is because org.hibernate.loader.Loader binds the filter parameters first, then it binds all the HQL query parameters, see org.hibernate.loader.Loader.processFilterParameters().", "target": 0}
{"idx": 9764, "func": "Test to see if the correct number of directories are returned.", "target": 0}
{"idx": 9765, "func": "rounds!", "target": 0}
{"idx": 9766, "func": "This constructor is used for convenience when we know the set beforehand, e.g. \\d --> new RETokenOneOf(\"0123456789\",false, ..) \\D --> new RETokenOneOf(\"0123456789\",true, ..)", "target": 0}
{"idx": 9767, "func": "pre-fetch the colors for each key...this is because the subplots may not display every key, but we need the coloring to be consistent...", "target": 0}
{"idx": 9768, "func": "The initial version used DateFormat.SHORT for the time format, which ignores seconds. If we want seconds as well, we need DateFormat.MEDIUM, which in turn would break all old build files. First try to parse with DateFormat.SHORT and if that fails with MEDIUM - throw an exception if both fail.", "target": 0}
{"idx": 9769, "func": "If visibility is already changed for this class, respect it.", "target": 0}
{"idx": 9770, "func": "Second pass: match by value equality. //", "target": 0}
{"idx": 9771, "func": "1.8", "target": 0}
{"idx": 9772, "func": "specifies valid elements for a Signal to contain", "target": 0}
{"idx": 9773, "func": "convert nullint into a varchar(100)", "target": 0}
{"idx": 9774, "func": "If the command is executable, record and execute it. //", "target": 0}
{"idx": 9775, "func": "Error/warning messageArea", "target": 0}
{"idx": 9776, "func": "Allow for a bit-shift of growth. //", "target": 0}
{"idx": 9777, "func": "We can't want to do encoding of platform resource URIs by default yet. //", "target": 0}
{"idx": 9778, "func": "Can't work with ISessionAction because if a result window is on top the session in a ISessionAction is null.", "target": 0}
{"idx": 9779, "func": "proposed addition (see above for details):", "target": 0}
{"idx": 9780, "func": "TRY SOME MORE COMPLEX MOVING", "target": 0}
{"idx": 9781, "func": "//{{{ showSplashScreen() method", "target": 0}
{"idx": 9782, "func": "@see org.argouml.profile.ProfileManager#lookForRegisteredProfile(java.lang.String)", "target": 0}
{"idx": 9783, "func": "this function returns the resulting process from the exec", "target": 0}
{"idx": 9784, "func": "initialResources is not empty", "target": 0}
{"idx": 9785, "func": "first response", "target": 0}
{"idx": 9786, "func": "entry exists, proxy doesn't match. replace. this could happen if old proxy was gc'ed TODO: raise exception if stored proxy is non-null? (not gc'ed)", "target": 1}
{"idx": 9787, "func": "pass contact data along to AddressComboBox", "target": 0}
{"idx": 9788, "func": "//for a dynamic-class", "target": 0}
{"idx": 9789, "func": "//{{{ setHorizontalOffset() method", "target": 0}
{"idx": 9790, "func": "For an explicit many-to-many relationship, add a second join from the intermediate (many-to-many) table to the destination table. Also, make sure that the from element's idea of the destination is the destination table.", "target": 0}
{"idx": 9791, "func": "Static example shape creation", "target": 0}
{"idx": 9792, "func": "//when writing to the log, we'll see what's happening:", "target": 0}
{"idx": 9793, "func": "PlotOrientation.VERTICAL", "target": 0}
{"idx": 9794, "func": "init selection handler", "target": 0}
{"idx": 9795, "func": "TODO: implement", "target": 1}
{"idx": 9796, "func": "Nothing to do for an SQL internal frame", "target": 0}
{"idx": 9797, "func": "//deduplicate unique constraints sharing the same columns //this is needed by Hibernate Annotations since it creates automagically unique constraints for the user", "target": 0}
{"idx": 9798, "func": "Get all the selected object names and place in a comma separated list.", "target": 0}
{"idx": 9799, "func": "//$NON-NLS-1$ //unreadLabel.setFont(boldFont); //$NON-NLS-1$", "target": 0}
{"idx": 9800, "func": "NULL means \"no value\". This ia a placeholder for primitive null value.", "target": 0}
{"idx": 9801, "func": "Correct the index, if necessary. //", "target": 0}
{"idx": 9802, "func": "loop over the data stream until the end of data is found or the end of the record is found", "target": 0}
{"idx": 9803, "func": "return eVirtualIndexBits[offset];", "target": 0}
{"idx": 9804, "func": "line 1251", "target": 0}
{"idx": 9805, "func": "prpTodo = createProperty(\"label.todo-pane\", positions, TabToDo.class); prpProperties = createProperty(\"label.properties-pane\", positions, TabProps.class); prpDocumentation = createProperty(\"label.documentation-pane\", positions, TabDocumentation.class); prpStyle = createProperty(\"label.style-pane\", positions, TabStyle.class); prpSource = createProperty(\"label.source-pane\", positions, TabSrc.class); prpConstraints = createProperty(\"label.constraints-pane\", positions, TabConstraints.class); prpTaggedValues = createProperty(\"label.tagged-values-pane\", positions, TabTaggedValues.class); Property[] propertyList = new Property[] { prpTodo, prpProperties, prpDocumentation, prpStyle, // prpSource, prpConstraints, prpTaggedValues, }; Arrays.sort(propertyList); top.add(new JScrollPane(new PropertyTable( // propertyList, // paneColumnHeader, // positionColumnHeader)), // BorderLayout.CENTER);", "target": 0}
{"idx": 9806, "func": "//create new client and try to connect to server", "target": 0}
{"idx": 9807, "func": "Type parameter casts can't be checked. //", "target": 0}
{"idx": 9808, "func": "Transmit the mapping table.", "target": 0}
{"idx": 9809, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsGroupByBeyondSelect()", "target": 0}
{"idx": 9810, "func": "Create a page, set the title, and the initial model file name. //", "target": 0}
{"idx": 9811, "func": "These are NOT entry/exit/do activities!", "target": 0}
{"idx": 9812, "func": "FIXME threaded-view auto collapse", "target": 1}
{"idx": 9813, "func": "hack: if start and end time is at 00:00:00:000 it is an all day event", "target": 1}
{"idx": 9814, "func": "//source.getPersistenceContext().removeNonExist( new EntityKey( id, persister, source.getEntityMode() ) );", "target": 0}
{"idx": 9815, "func": "//Create the comment links and draw them", "target": 0}
{"idx": 9816, "func": "Column numbers - must agree with order above", "target": 0}
{"idx": 9817, "func": "See if the second lookahed token can be an identifier.", "target": 0}
{"idx": 9818, "func": "i18n[SchemaInfoCacheSerializer.endStore=Finished writing schema cache for Alias{0}. file: {1}]", "target": 0}
{"idx": 9819, "func": "the last used iterator", "target": 0}
{"idx": 9820, "func": "index in zptr[] of original string after sorting.", "target": 0}
{"idx": 9821, "func": "Set the KeyStroke to use", "target": 0}
{"idx": 9822, "func": "we were the first to add an update; add update sending runnable to AWT thread", "target": 0}
{"idx": 9823, "func": "Perl extension", "target": 0}
{"idx": 9824, "func": "use numbered access method", "target": 0}
{"idx": 9825, "func": "line 1081", "target": 0}
{"idx": 9826, "func": "Create the zip entry and add it to the jar file", "target": 0}
{"idx": 9827, "func": "//{{{ input() method", "target": 0}
{"idx": 9828, "func": "deal with length/width", "target": 0}
{"idx": 9829, "func": "TODO: Can we move this knowledge behind model facade rather than have a condition here?", "target": 1}
{"idx": 9830, "func": "locate the registered function by the given name", "target": 0}
{"idx": 9831, "func": "copy a range that begins before and ends in the middle of the series...", "target": 0}
{"idx": 9832, "func": "Comment.body text field - editing disabled", "target": 0}
{"idx": 9833, "func": "OK, it has been supplied", "target": 0}
{"idx": 9834, "func": "This exception is not because wrong username or password", "target": 0}
{"idx": 9835, "func": "rerouting the destination:", "target": 0}
{"idx": 9836, "func": "change the shape and make sure it only affects p1", "target": 0}
{"idx": 9837, "func": "Use regexes to match the source data", "target": 0}
{"idx": 9838, "func": "FIXME: arg_concat missing for opt_call_args", "target": 1}
{"idx": 9839, "func": "i18n[DBUtil.info.bindclobfile=bindClobVarInFile: Opening temp file '{0}']", "target": 0}
{"idx": 9840, "func": "If this is windows, check the default installation location for the gpg.exe binary.", "target": 0}
{"idx": 9841, "func": "and this is not a forced initialization during flush", "target": 0}
{"idx": 9842, "func": "The association should have same namespace as from class", "target": 0}
{"idx": 9843, "func": "loop to fetch desired connector", "target": 0}
{"idx": 9844, "func": "c.gridy = 0; c.gridx = 2; JLabel lowLabel = new JLabel(\"Low\"); gb.setConstraints(lowLabel, c); _mainPanel.add(lowLabel);", "target": 0}
{"idx": 9845, "func": "Make sure the contents match what we expect", "target": 0}
{"idx": 9846, "func": "$NON-NLS-1$ may be null", "target": 0}
{"idx": 9847, "func": "Recent Buffers", "target": 0}
{"idx": 9848, "func": "do the same on OS X", "target": 0}
{"idx": 9849, "func": "Types can probably have associations, but we should not nag at them not having any. utility is a namespace collection - also not strictly required to have associations.", "target": 0}
{"idx": 9850, "func": "store Number as Double", "target": 0}
{"idx": 9851, "func": "checkcast (case of primitive type) invokevirtual (case of primitive type)", "target": 0}
{"idx": 9852, "func": "Prepare the Results tabbed pane", "target": 0}
{"idx": 9853, "func": "don't care about other param types here, just those explicitly user-defined...", "target": 0}
{"idx": 9854, "func": "@see org.argouml.model.AbstractModelEventPump#addClassModelEventListener(java.beans.PropertyChangeListener, java.lang.Object, java.lang.String[])", "target": 0}
{"idx": 9855, "func": "could be pulled down to RubyClass in future rb_class_boot", "target": 0}
{"idx": 9856, "func": "Why null??", "target": 0}
{"idx": 9857, "func": "Method should add the JUnit testXXX method to the list at the end, since the sequence matters. @param methodName", "target": 0}
{"idx": 9858, "func": "//NOTE SPECIAL CASE: default to join and non-lazy for the \"second join\" of the many-to-many", "target": 0}
{"idx": 9859, "func": "Equivalent of Data_Get_Struct This will first check that the object in question is actually a T_DATA equivalent.", "target": 0}
{"idx": 9860, "func": "Make sure that all from elements registered with this FROM clause are actually in the AST.", "target": 0}
{"idx": 9861, "func": "set javadoc", "target": 0}
{"idx": 9862, "func": "<drop_index_statement> ::= DROP INDEX <index_name> [ON <table_name>]", "target": 0}
{"idx": 9863, "func": "Keep existing settings", "target": 0}
{"idx": 9864, "func": "super-duper-classic-parser-regression-testing-mojo-magic...", "target": 0}
{"idx": 9865, "func": "disable other", "target": 0}
{"idx": 9866, "func": "Save the method name", "target": 0}
{"idx": 9867, "func": "i18n[oracle.bufferGets=Buffer Gets]", "target": 0}
{"idx": 9868, "func": "local variable | this |", "target": 0}
{"idx": 9869, "func": "Write the rest of the headers", "target": 0}
{"idx": 9870, "func": "Save settings", "target": 0}
{"idx": 9871, "func": "in one case not a single AWT class will have been touched (splash screen off + -nogui -nobackground switches on command line)", "target": 0}
{"idx": 9872, "func": "test independence", "target": 0}
{"idx": 9873, "func": "draw range crosshair if required...", "target": 0}
{"idx": 9874, "func": "We could not find all of them print out first one (we could print them all?)", "target": 0}
{"idx": 9875, "func": "Objects needed to handle radio buttons", "target": 0}
{"idx": 9876, "func": "grrr... for differentiation of mysql storage engines", "target": 0}
{"idx": 9877, "func": "//{{{ Instance variables this is a bad hack", "target": 0}
{"idx": 9878, "func": "If we're trying to set the namespace to the existing value then don't do any more work.", "target": 0}
{"idx": 9879, "func": "line 1307", "target": 0}
{"idx": 9880, "func": "//{{{ getStartColumn() method", "target": 0}
{"idx": 9881, "func": "@see org.tigris.gef.graph.GraphEdgeRenderer#getFigEdgeFor( org.tigris.gef.graph.GraphModel, org.tigris.gef.base.Layer, java.lang.Object, java.util.Map)", "target": 0}
{"idx": 9882, "func": "we need to determine the best way to know that two joinables represent a single many-to-many...", "target": 0}
{"idx": 9883, "func": "If we can open an input stream, then the plugin.properties is in the folder, and we have a good base URL. //", "target": 0}
{"idx": 9884, "func": "don't know the type, should throw exception instead?", "target": 0}
{"idx": 9885, "func": "don't care", "target": 0}
{"idx": 9886, "func": "right we have a good looking class file.", "target": 0}
{"idx": 9887, "func": "//should not fail", "target": 0}
{"idx": 9888, "func": "- JMX names", "target": 0}
{"idx": 9889, "func": "//{{{ invoke() method", "target": 0}
{"idx": 9890, "func": "The interface realization will be created in the client namespace (client is a namespace)", "target": 0}
{"idx": 9891, "func": "end of subset", "target": 0}
{"idx": 9892, "func": "pass mouse move event if some ChartMouseListener are listening", "target": 0}
{"idx": 9893, "func": "produce a nicer error since Rubyists aren't used to seeing this", "target": 0}
{"idx": 9894, "func": "remember that ordinal parameters numbers are 1-based!!!", "target": 0}
{"idx": 9895, "func": "try a default instance", "target": 0}
{"idx": 9896, "func": "initialize SnoozeOrder", "target": 0}
{"idx": 9897, "func": "// root.setDefaultButton(_okBtn);", "target": 0}
{"idx": 9898, "func": "//NOTE EARLY EXIT!", "target": 0}
{"idx": 9899, "func": "i18n[PreLaunchHelperImpl.installFailedMessage=Unexpected error while attempting to install updates]", "target": 0}
{"idx": 9900, "func": "This is explained by WFR 2 of a StructuralFeature: The type of a StructuralFeature must be a Class, DataType, or Interface. @see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)", "target": 0}
{"idx": 9901, "func": "//TODO: perhaps this should be some other RuntimeException...", "target": 1}
{"idx": 9902, "func": "Constructors", "target": 0}
{"idx": 9903, "func": "index should be last column listed", "target": 0}
{"idx": 9904, "func": "more space above", "target": 0}
{"idx": 9905, "func": "Create an empty but initialized instance of a UML Constraint. @return an initialized UML Constraint instance. TODO: This needs an extra parameter to specify the model/extent where the new element should be created.", "target": 1}
{"idx": 9906, "func": "Total Hack! Type OTHER(1111) can be other types as well?", "target": 1}
{"idx": 9907, "func": "get tree-like structure of mimeparts", "target": 0}
{"idx": 9908, "func": "Find an appropriate constructor. use declared here to see package and private as well (there are no inherited constructors to worry about)", "target": 0}
{"idx": 9909, "func": "Mock Objects", "target": 0}
{"idx": 9910, "func": "-------------------------------------------------------------------------- Direct conversion from classes to type descriptors, without intermediate Type objects --------------------------------------------------------------------------", "target": 0}
{"idx": 9911, "func": "Dispose of any fonts we have created", "target": 0}
{"idx": 9912, "func": "not needed in UML 1.x", "target": 0}
{"idx": 9913, "func": "When a length is given, read_string acts like get_bytes", "target": 0}
{"idx": 9914, "func": "register any DTDs supplied by the user", "target": 0}
{"idx": 9915, "func": "@see org.tigris.gef.presentation.Fig#getFillColor()", "target": 0}
{"idx": 9916, "func": "fire callback to remove all tags from selected items", "target": 0}
{"idx": 9917, "func": "Partitions are composite elements and will get deleted implicitly Partition contents don't need to be deleted or checked", "target": 0}
{"idx": 9918, "func": "Copy our name into that of the controller otherwise name reverts", "target": 0}
{"idx": 9919, "func": "registerColumnType(Types.BOOLEAN, \"bit\");", "target": 0}
{"idx": 9920, "func": "line 861", "target": 0}
{"idx": 9921, "func": "@see org.tigris.gef.base.Diagram#getClassAndModelID()", "target": 0}
{"idx": 9922, "func": "Trigger any pending Flag syncs", "target": 0}
{"idx": 9923, "func": "//Class/isSetGenFeature.annotations.insert.javajetinc", "target": 0}
{"idx": 9924, "func": "$\": already loaded files", "target": 0}
{"idx": 9925, "func": "@see org.argouml.uml.ui.UMLComboBoxModel2#isValidElement( java.lang.Object)", "target": 0}
{"idx": 9926, "func": "//////////////////////////////////////////////////////////////fig accessors", "target": 0}
{"idx": 9927, "func": "then Classifier & Package", "target": 0}
{"idx": 9928, "func": "script can also use setResponseData() so long as it returns null", "target": 0}
{"idx": 9929, "func": "Execute the SQL command in the SQL tab and then display the SQL tab.", "target": 0}
{"idx": 9930, "func": "Get the extension panel for the configuration settings.", "target": 0}
{"idx": 9931, "func": "create command reference array for the command", "target": 0}
{"idx": 9932, "func": "TODO: this should call the single namespace form getStereotype(it2.next(); stereo);", "target": 1}
{"idx": 9933, "func": "JasonsThemes", "target": 0}
{"idx": 9934, "func": "wait for stream threads to die", "target": 0}
{"idx": 9935, "func": "Assign the closure to the block variable in the parent scope and return it", "target": 0}
{"idx": 9936, "func": "CREATE GENERATOR EMPNO_GEN; COMMIT; SET TERM !! ; CREATE TRIGGER CREATE_EMPNO FOR EMPLOYEES BEFORE INSERT POSITION 0 AS BEGIN NEW.EMPNO = GEN_ID(EMPNO_GEN, 1); END", "target": 0}
{"idx": 9937, "func": "======================================================================== Constructors", "target": 0}
{"idx": 9938, "func": "we only get here if an exception has been thrown", "target": 0}
{"idx": 9939, "func": "If there is no script, then the language should not be maintained.", "target": 0}
{"idx": 9940, "func": "//{{{ isDragInProgress() method", "target": 0}
{"idx": 9941, "func": "create a new area polygon for the series", "target": 0}
{"idx": 9942, "func": "expected type is intrinsic here...", "target": 0}
{"idx": 9943, "func": "we don't want to include the line comments immediately before an import in the returned range", "target": 0}
{"idx": 9944, "func": "NEGATIVE ITEM LABEL ANCHOR", "target": 0}
{"idx": 9945, "func": "i18n[UpdatePreferencesTab.hint=Software Update Settings]", "target": 0}
{"idx": 9946, "func": "isName(int):boolean", "target": 0}
{"idx": 9947, "func": "//{{{ reloadAllBuffers() method", "target": 0}
{"idx": 9948, "func": "MRI behavior: Be default, 2 digits in the exponent. Use 3 digits only when necessary. See comment for writeExp method for more details.", "target": 0}
{"idx": 9949, "func": "Builds a default implementation for a class. The class is not owned by any model element by default. Users should not forget to add ownership. @return newly created Class TODO: This needs an extra parameter to specify the model/extent where the new element should be created.", "target": 1}
{"idx": 9950, "func": "do not check hashcodes; unequal objects may have equal hashcodes", "target": 0}
{"idx": 9951, "func": "line 470", "target": 0}
{"idx": 9952, "func": "Notify the user that the modules in the list that are selected but not enabled were not possible to enable and that are not selected that we cannot disable. Currently we just log this. TODO: We could eventually pop up some warning window. //", "target": 0}
{"idx": 9953, "func": "//i18n[ColumnListDialog.dropErrorTitle=Too Many Columns Selected]", "target": 0}
{"idx": 9954, "func": "//i18n[TablePriviligesTab.title=Privileges]", "target": 0}
{"idx": 9955, "func": "Go through class super types to catch any from other packages", "target": 0}
{"idx": 9956, "func": "New behavior for delayed task creation. Description will be evaluated in Project.getDescription()", "target": 0}
{"idx": 9957, "func": "TODO: For UML 2.x, powertypes are accessed indirectly through the GeneralizationSets that contain a Generalization. @since Nov 3, 2002 @author jaap.branderhorst@xs4all.nl", "target": 1}
{"idx": 9958, "func": "Reencode the remaining characters as bytes again", "target": 0}
{"idx": 9959, "func": "public boolean isNonExistant(EntityUniqueKey key) { return nonExistentEntityUniqueKeys.contains(key); }", "target": 0}
{"idx": 9960, "func": "All three specified but class missing -> null", "target": 0}
{"idx": 9961, "func": "delete LinkEnds which have this as their associationEnd", "target": 0}
{"idx": 9962, "func": "(non-Javadoc) @see org.apache.jmeter.samplers.RemoteThreadsListener#threadFinished()", "target": 0}
{"idx": 9963, "func": "//{{{ mousePressed() method", "target": 0}
{"idx": 9964, "func": "((DefaultTreeModel) model.getTree().getModel()).setAsksAllowsChildren(true);", "target": 0}
{"idx": 9965, "func": "i18n[resultFrame.stayOnTop=Stay on top]", "target": 0}
{"idx": 9966, "func": "Only return the operation for an executable command. //", "target": 0}
{"idx": 9967, "func": "ran out of time", "target": 0}
{"idx": 9968, "func": "//++ JMX file constants - do not change //$NON-NLS-1$", "target": 0}
{"idx": 9969, "func": "seriesVisibleInLegend", "target": 0}
{"idx": 9970, "func": "check that changing a tick label paint in a1 doesn't change a2", "target": 0}
{"idx": 9971, "func": "//{{{ getInstance() method", "target": 0}
{"idx": 9972, "func": "remove old sticky tab", "target": 0}
{"idx": 9973, "func": "Test for toURI with a file name with illegal chars.", "target": 0}
{"idx": 9974, "func": "add the main query", "target": 0}
{"idx": 9975, "func": "PostgreSQL uses literal values true/false instead of 1/0.", "target": 0}
{"idx": 9976, "func": "//+ JMX names - do not change $NON-NLS-1$", "target": 0}
{"idx": 9977, "func": "we reached \"From ...\" (start of new message)", "target": 0}
{"idx": 9978, "func": "create visual container for result panel", "target": 0}
{"idx": 9979, "func": "We've either reached the end of the string, the address ends in an IPv4 address, or it is invalid. scanHexSequence has already made sure that we have the right number of bits.", "target": 0}
{"idx": 9980, "func": "Lines colors", "target": 0}
{"idx": 9981, "func": "Strip off drive letters! REVIEW Would a better check be \"(File.separator == '\\')\"?", "target": 1}
{"idx": 9982, "func": "test a process that runs and failed", "target": 0}
{"idx": 9983, "func": "//add(new DropSelectedTablesAction(_app));", "target": 0}
{"idx": 9984, "func": "if not overloaded, we add a method that guesses at which signature to use TODO: just adding first one right now...add in signature-guessing logic", "target": 1}
{"idx": 9985, "func": "rangeCrosshairPaint", "target": 0}
{"idx": 9986, "func": "//set source and rebuild options", "target": 0}
{"idx": 9987, "func": "Return the value.", "target": 0}
{"idx": 9988, "func": "$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$", "target": 0}
{"idx": 9989, "func": "parse the output of the command", "target": 0}
{"idx": 9990, "func": "load receiver", "target": 0}
{"idx": 9991, "func": "TODO : shouldnt inserts be Expectations.NONE?", "target": 0}
{"idx": 9992, "func": "@see javax.swing.plaf.metal.MetalTheme#getSecondary3()", "target": 0}
{"idx": 9993, "func": "see if the file is in fact a .class file, and determine its actual name.", "target": 0}
{"idx": 9994, "func": "'plot' : just retain reference, not a deep copy", "target": 0}
{"idx": 9995, "func": "//{{{ fvmreset() method", "target": 0}
{"idx": 9996, "func": "transfer attachments from model to view", "target": 0}
{"idx": 9997, "func": "//attachments", "target": 0}
{"idx": 9998, "func": "set rename to false if > 1 file selected", "target": 0}
{"idx": 9999, "func": "TODO: Enhance the isValidNamespace function so that this never happens.", "target": 1}
{"idx": 10000, "func": "////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 10001, "func": "SILLY: allow for anti-aliased characters' \"fuzz\"", "target": 0}
{"idx": 10002, "func": "first day of week is Sunday", "target": 0}
{"idx": 10003, "func": "Allow test code to change the default useNanoTime setting", "target": 0}
{"idx": 10004, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsAlterTableWithAddColumn()", "target": 0}
{"idx": 10005, "func": "keep a hash table of the column objects so we can reuse them.", "target": 0}
{"idx": 10006, "func": "This reloads the token marker and sends a message which causes edit panes to repaint their text areas", "target": 0}
{"idx": 10007, "func": "Sun's and Apple's 1.4 have JCE and JSSE in separate jars.", "target": 0}
{"idx": 10008, "func": "Some kind of 8-bit encoding without \"<?XML\" (otherwise) UTF-8 without encoding/XML declaration", "target": 0}
{"idx": 10009, "func": "check for max size reached (only works when DB provides non-zero scale info", "target": 0}
{"idx": 10010, "func": "temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 10011, "func": "try a null dataset - should return a null range", "target": 0}
{"idx": 10012, "func": "//TODO: would it be better to do a refresh from db?", "target": 1}
{"idx": 10013, "func": "get inbox-folder from pop3-server preferences", "target": 0}
{"idx": 10014, "func": "-- Loader implementation --", "target": 0}
{"idx": 10015, "func": "invoke callMethodMissing", "target": 0}
{"idx": 10016, "func": "already handled", "target": 0}
{"idx": 10017, "func": "//testDecimalColType(sourceName, destName); //testDoubleColType(sourceName, destName); //testFloatColType(sourceName, destName);", "target": 0}
{"idx": 10018, "func": "pre JUnit 3.7", "target": 0}
{"idx": 10019, "func": "no renderer, no gridlines...", "target": 0}
{"idx": 10020, "func": "userinfo can contain alphanumerics, mark characters, escaped and ';',':','&','=','+','$',','", "target": 0}
{"idx": 10021, "func": "2LINE_WIDTH? or extra padding?", "target": 0}
{"idx": 10022, "func": "Don't show foreignKeys dialog if only one index exists to be modified", "target": 0}
{"idx": 10023, "func": "sb.append( response + \"\\r\\n\" );", "target": 0}
{"idx": 10024, "func": "BAR X", "target": 0}
{"idx": 10025, "func": "//{{{ moveGapStart() method", "target": 0}
{"idx": 10026, "func": "Failure Tests", "target": 0}
{"idx": 10027, "func": "edit message in composer", "target": 0}
{"idx": 10028, "func": "determine the id getter and setter methods from the proxy interface (if any) determine all interfaces needed by the resulting proxy", "target": 0}
{"idx": 10029, "func": "object loaded by update()", "target": 0}
{"idx": 10030, "func": "Skip any commandline args if /usr/bin/env is in play", "target": 0}
{"idx": 10031, "func": "try unknown column key", "target": 0}
{"idx": 10032, "func": "FIXME: Not sure what the semantics of transfer are //cFiber.defineFastMethod(\"transfer\", cb.getFastOptMethod(\"transfer\"));", "target": 1}
{"idx": 10033, "func": "a subclass of Foo with the same values as the original", "target": 0}
{"idx": 10034, "func": "need the array, use unoptz version", "target": 0}
{"idx": 10035, "func": "//typeComboBox.setEnabled(b);", "target": 0}
{"idx": 10036, "func": "encodings", "target": 0}
{"idx": 10037, "func": "First allow the actual type to control the return value. (the actual underlying sqltype could actually be different)", "target": 0}
{"idx": 10038, "func": "because we're listening for stereotypes being added and removed but we're really interested in their owned tag definitions, the default implementation won't work for us", "target": 0}
{"idx": 10039, "func": "composer can either edit in html or plain text mode listen for configuration changes", "target": 0}
{"idx": 10040, "func": "line 1470", "target": 0}
{"idx": 10041, "func": "force class", "target": 0}
{"idx": 10042, "func": "Nullable", "target": 0}
{"idx": 10043, "func": "cancel here if user requests", "target": 0}
{"idx": 10044, "func": "This directory may have become empty... We need to re-query its children list!", "target": 0}
{"idx": 10045, "func": "//{{{ Wrapper class", "target": 0}
{"idx": 10046, "func": "If there are any scalars (non-entities) selected, render the select column aliases.", "target": 0}
{"idx": 10047, "func": "error messages", "target": 0}
{"idx": 10048, "func": "put the property into the hashmap", "target": 0}
{"idx": 10049, "func": "58, 110, 165); //189, 220, 251); //153, 179, 205);", "target": 0}
{"idx": 10050, "func": "//{{{ IconCellRenderer class", "target": 0}
{"idx": 10051, "func": "c.fill = GridBagConstraints.HORIZONTAL;", "target": 0}
{"idx": 10052, "func": "TODO: I considered validating the presence of the TS cache here, but decided to defer unti getQueryCacheInstance() in case the cache is never actually used", "target": 1}
{"idx": 10053, "func": "(MAssociation)", "target": 0}
{"idx": 10054, "func": "Close action dialog box when tapping Escape key", "target": 0}
{"idx": 10055, "func": "Set group start & end marks.", "target": 0}
{"idx": 10056, "func": "Protocol defined Mechanisms", "target": 0}
{"idx": 10057, "func": "May be replaced later", "target": 1}
{"idx": 10058, "func": "if folder is message folder ->TODO (@author fdietz): there should be an interface, instead of the AbstractMessageFolder class", "target": 0}
{"idx": 10059, "func": "Create resources for all the referenced EPackages The referencedEPackage is a \"local\" instance of the realEPackage. We will add the former to a resource that has the same URI of the later.", "target": 0}
{"idx": 10060, "func": "DStrNode: :\"some text #{some expression}\"", "target": 0}
{"idx": 10061, "func": "line 152 \"-\" %token constants", "target": 0}
{"idx": 10062, "func": "i18n[codeCompletion.prefixConfig.newRow=Add new row]", "target": 0}
{"idx": 10063, "func": "Add the binding to the provided hash table: //", "target": 0}
{"idx": 10064, "func": "//$NON-NLS-1$ //locationLabel.setFont(boldFont); //$NON-NLS-1$", "target": 0}
{"idx": 10065, "func": "//check if the managed object is the parent", "target": 0}
{"idx": 10066, "func": "//{{{ floatDockableWindow() method", "target": 0}
{"idx": 10067, "func": "If location is non-null, convert to a rectangle that we can use", "target": 0}
{"idx": 10068, "func": "Yield that mapping, create a stack, record it as the next one to prune, and add it to the stack. //", "target": 0}
{"idx": 10069, "func": "These tell the Dialect test runner where tables that is creates can be found.", "target": 0}
{"idx": 10070, "func": "(MCompositeState)", "target": 0}
{"idx": 10071, "func": "If we made something aggregate, make sure the other ends conform to UML 1.4 WFR 2.5.3.1 #2 - no more than one aggregate end", "target": 0}
{"idx": 10072, "func": "-C", "target": 0}
{"idx": 10073, "func": "//note that each iteration of the loop may add new elements", "target": 0}
{"idx": 10074, "func": "TODO: Not implemented", "target": 1}
{"idx": 10075, "func": "Added to the arrow type for navigable", "target": 0}
{"idx": 10076, "func": "Return empty list if source string is empty.", "target": 0}
{"idx": 10077, "func": "//#now match the files", "target": 0}
{"idx": 10078, "func": "(non-Javadoc) @see org.columba.core.filter.IFilterList#remove(int)", "target": 0}
{"idx": 10079, "func": "line 1502", "target": 0}
{"idx": 10080, "func": "\"CREATE SEQUENCE $sequenceName$ $startWith$ $increment$ $minimum$ $maximum$ $cache$ $cycle$\";", "target": 0}
{"idx": 10081, "func": "don't forget to remove old internals!", "target": 0}
{"idx": 10082, "func": "autoRangeMinimumSize", "target": 0}
{"idx": 10083, "func": "------ Define the operations below ----", "target": 0}
{"idx": 10084, "func": "redirect the Esc key to Cancel button", "target": 0}
{"idx": 10085, "func": "end class StylePanelFigClass", "target": 0}
{"idx": 10086, "func": "rotation angle", "target": 0}
{"idx": 10087, "func": "x = mantissa 2 exponent Where mantissa is in the range of [.5, 1)", "target": 0}
{"idx": 10088, "func": "draw the left axes", "target": 0}
{"idx": 10089, "func": "states", "target": 0}
{"idx": 10090, "func": "implements UnsharedComponent", "target": 0}
{"idx": 10091, "func": "we can delete figs like figrects now too", "target": 0}
{"idx": 10092, "func": "end of inner class", "target": 0}
{"idx": 10093, "func": "succeeded", "target": 0}
{"idx": 10094, "func": "everything is fine: autoWidth is on, and an autoIntervalWidth was set.", "target": 0}
{"idx": 10095, "func": "use folder specific options", "target": 0}
{"idx": 10096, "func": "Skip to the next archive path and continue the loop. //", "target": 0}
{"idx": 10097, "func": "ds returns the directories in lexicographic order. iterating through the array backwards means we are deleting leaves before their parent nodes - thus making sure (well, more likely) that the directories are empty when we try to delete them.", "target": 0}
{"idx": 10098, "func": "pattern now holds while string is not exhausted this will generate false positives but we can live with that.", "target": 1}
{"idx": 10099, "func": "//{{{ addPluginJARsFromDirectory() method", "target": 0}
{"idx": 10100, "func": "an uninitialized proxy, noop, don't even need to return an id, since it is never a save()", "target": 0}
{"idx": 10101, "func": "//System.err.println(\"Creates UnionOp\");", "target": 0}
{"idx": 10102, "func": "TODO: use the destination database type to derive a format that is acceptable.", "target": 1}
{"idx": 10103, "func": "try a customised instance", "target": 0}
{"idx": 10104, "func": "ommit root package name; it's the model's root", "target": 0}
{"idx": 10105, "func": "we have the form: trim(from trimSource). This is functionally equivalent to trim(trimSource)", "target": 0}
{"idx": 10106, "func": "When the value is changed, the property sheet page doesn't update the property sheet viewer input before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the model object. //return needsEncoding(feature) ? encode((String)getEntryValue()) : getEntryValue();", "target": 0}
{"idx": 10107, "func": "Filter out explicit EObject from super types, except in the Ecore package itself, or if it appears in the @model superTypes. //", "target": 0}
{"idx": 10108, "func": "Remove the states that did not match.", "target": 0}
{"idx": 10109, "func": "register in exception table", "target": 0}
{"idx": 10110, "func": "Name of the preferences files", "target": 0}
{"idx": 10111, "func": "Note: this class is final because we may test == Primitive.class in places. If we need to change that search for those tests.", "target": 0}
{"idx": 10112, "func": "only generate a new ClassLoader if we have a classpath", "target": 0}
{"idx": 10113, "func": "update configuration", "target": 0}
{"idx": 10114, "func": "start new column", "target": 0}
{"idx": 10115, "func": "if not sync, we switch to write buffered mode", "target": 0}
{"idx": 10116, "func": "ALTERNATION OPERATOR \\| or | (if RE_NO_BK_VBAR) or newline (if RE_NEWLINE_ALT) not available if RE_LIMITED_OPS is set", "target": 0}
{"idx": 10117, "func": "----- Constructors -----", "target": 0}
{"idx": 10118, "func": "Private versions of what might eventually be part of Commons-CSV or Commons-Lang/Io...", "target": 0}
{"idx": 10119, "func": "Create the new label and update the repository", "target": 0}
{"idx": 10120, "func": "if the original is a PersistentCollection, and that original was not flagged as dirty, then reset the target's dirty flag here after the copy operation. </p> One thing to be careful of here is a \"bare\" original collection in which case we should never ever ever reset the dirty flag on the target because we simply do not know...", "target": 0}
{"idx": 10121, "func": "merges don't cascade to uninitialized collections // //TODO: perhaps this does need to cascade after all....", "target": 1}
{"idx": 10122, "func": "private JButton b_lyear, b_ryear, b_lmonth, b_rmonth;", "target": 0}
{"idx": 10123, "func": "PointBase doesn't follow the spec with regard to column 11 of getColumns (should return a type constant, but instead returns a Boolean.", "target": 0}
{"idx": 10124, "func": "the state name", "target": 0}
{"idx": 10125, "func": "strip the null", "target": 0}
{"idx": 10126, "func": "get the values from the \"use\" list", "target": 0}
{"idx": 10127, "func": "size -> @see org.columba.mail.folder.cache.CachedHeaderfields for a -> complete -> list of possible attributes", "target": 0}
{"idx": 10128, "func": "Apply a redirection pattern, if specified. //", "target": 0}
{"idx": 10129, "func": "adjust for insets...", "target": 0}
{"idx": 10130, "func": "//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$", "target": 0}
{"idx": 10131, "func": "// _session.getProperties().forceTableContentsOutputClassNameChange();", "target": 0}
{"idx": 10132, "func": "mockThreadPool", "target": 0}
{"idx": 10133, "func": "Extract file's base-name", "target": 0}
{"idx": 10134, "func": "//private Paint arrowPaint;", "target": 0}
{"idx": 10135, "func": "getContainer().setContentPane(this);", "target": 0}
{"idx": 10136, "func": "now anything that is not a HQL keyword", "target": 0}
{"idx": 10137, "func": "(non-Javadoc) @see org.columba.mail.imap.IImapServer#getIndex(java.lang.Integer, org.columba.mail.folder.imap.IMAPFolder)", "target": 0}
{"idx": 10138, "func": "TODO: Implement", "target": 1}
{"idx": 10139, "func": "A Fig with a null owner", "target": 0}
{"idx": 10140, "func": "//EcoreFactory", "target": 0}
{"idx": 10141, "func": "i18n[mysql.displayStatus=(MySQL) Display database status]", "target": 0}
{"idx": 10142, "func": "@see org.argouml.model.ChangeableKind#getChangeable()", "target": 0}
{"idx": 10143, "func": "Read the literal.", "target": 0}
{"idx": 10144, "func": "//////////////////////////////////////////////////////////////criticism control", "target": 0}
{"idx": 10145, "func": "values for how to use timestamps in WHERE clauses", "target": 0}
{"idx": 10146, "func": "Make sure we're not about to clobber something", "target": 0}
{"idx": 10147, "func": "Record the records for the executed commands on the stack. //", "target": 0}
{"idx": 10148, "func": "check handling when the dataset is a regular XYDataset, not an XYZDataset...", "target": 0}
{"idx": 10149, "func": "even if installDirectory is different", "target": 0}
{"idx": 10150, "func": "RUN MENU //$NON-NLS-1$", "target": 0}
{"idx": 10151, "func": "7", "target": 0}
{"idx": 10152, "func": "an empty dataset should return a null max", "target": 0}
{"idx": 10153, "func": "try to fix broken html-strings", "target": 0}
{"idx": 10154, "func": "//- RedrawManager.lock();", "target": 0}
{"idx": 10155, "func": "new collections that get found + wrapped during flush shouldn't be ignored", "target": 0}
{"idx": 10156, "func": "matches after a newline", "target": 0}
{"idx": 10157, "func": "---- workCityTextField ----", "target": 0}
{"idx": 10158, "func": "FIXME: Remove this from grammars.", "target": 1}
{"idx": 10159, "func": "user just entered the hour, so append min & sec", "target": 0}
{"idx": 10160, "func": "Restore the persistent command stack, if need be. //", "target": 0}
{"idx": 10161, "func": "//NOTE EARLY EXIT", "target": 0}
{"idx": 10162, "func": "apply the margins - these should apply to the exponent range", "target": 0}
{"idx": 10163, "func": "//Skip dates that are too late", "target": 0}
{"idx": 10164, "func": "not a char and not EOF", "target": 0}
{"idx": 10165, "func": "set old font properties", "target": 0}
{"idx": 10166, "func": "self = args[0] SSS FIXME: Verify that this is correct", "target": 1}
{"idx": 10167, "func": "Some drivers will give null.", "target": 0}
{"idx": 10168, "func": "TODO: We currently delete the old values before setting to something new. This is a workaround to issue 6056. We should consider giving an API to get the lower and upper values so that controls can listen directly to those rather than the element containing those values.", "target": 1}
{"idx": 10169, "func": "Options in popup menu.", "target": 0}
{"idx": 10170, "func": "Dir::tmpdir", "target": 0}
{"idx": 10171, "func": "not yet handled", "target": 1}
{"idx": 10172, "func": "clear any exceptions in this timeline", "target": 0}
{"idx": 10173, "func": "Push it onto the stack.", "target": 0}
{"idx": 10174, "func": "JScrollPane tableScrollPane = new JScrollPane(navigationController .getView()); tableScrollPane.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));", "target": 0}
{"idx": 10175, "func": "all clear", "target": 0}
{"idx": 10176, "func": "//{{{ getProtocolOfURL() method", "target": 0}
{"idx": 10177, "func": "stop/start creating more critics", "target": 0}
{"idx": 10178, "func": "/Determine max and min values.", "target": 0}
{"idx": 10179, "func": "Apparently this object had no setItemUID", "target": 0}
{"idx": 10180, "func": "For the case of dynamic-insert=\"true\", we need to generate the INSERT SQL", "target": 0}
{"idx": 10181, "func": "//TODO: disable batch loading if lockMode > READ?", "target": 1}
{"idx": 10182, "func": "//{{{ expandFolds() method", "target": 0}
{"idx": 10183, "func": "This transaction is done", "target": 0}
{"idx": 10184, "func": "//{{{ Button box setup", "target": 0}
{"idx": 10185, "func": "if use proxy is checked, we enable the text fields for the host and port", "target": 0}
{"idx": 10186, "func": "This runs the options, and shows progress. //", "target": 0}
{"idx": 10187, "func": "//{{{ getNoWordSep() method", "target": 0}
{"idx": 10188, "func": "This can take a long time for big jars - so it is not done on the EDT.", "target": 0}
{"idx": 10189, "func": "(non-Javadoc) @see org.columba.core.gui.selection.ISelectionListener#selectionChanged(org.columba.core.gui.selection.SelectionChangedEvent)", "target": 0}
{"idx": 10190, "func": "String title = getUI().getDialogTitle(this);", "target": 0}
{"idx": 10191, "func": "do median of 7 if the array is over 200 elements.", "target": 0}
{"idx": 10192, "func": "helper method to allow input and output to be changed for chaining", "target": 0}
{"idx": 10193, "func": "//$NON-NLS-1$ $NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-1$", "target": 0}
{"idx": 10194, "func": "need to handle manifest as a special check", "target": 0}
{"idx": 10195, "func": "TODO: This will vary based on the type of the TagDefinition", "target": 1}
{"idx": 10196, "func": "For use by FunctionHelper", "target": 0}
{"idx": 10197, "func": "remove all collections for the entity from the session-level cache", "target": 0}
{"idx": 10198, "func": "Test for clone()", "target": 0}
{"idx": 10199, "func": "_x = first.getX(); _y = first.getY();", "target": 0}
{"idx": 10200, "func": "new", "target": 0}
{"idx": 10201, "func": "NOTE: we have to do this due to leftovers from other tests being causing strange errors when running in Eclipse.", "target": 0}
{"idx": 10202, "func": "TODO: Use getModelElementContainer for transition", "target": 1}
{"idx": 10203, "func": "//{{{ scrollDown() method scroll down by screen line amount", "target": 0}
{"idx": 10204, "func": "remove whitespaces", "target": 0}
{"idx": 10205, "func": "toolbar container", "target": 0}
{"idx": 10206, "func": "this constructor is used by fdopen, so we don't increment descriptor ref count", "target": 0}
{"idx": 10207, "func": "TODO: Lots more types - Duration, Instance, Interval", "target": 1}
{"idx": 10208, "func": "Prevent triggering too many events by setName().", "target": 0}
{"idx": 10209, "func": "create OK and Details buttons", "target": 0}
{"idx": 10210, "func": "Prompt is unnecessary", "target": 0}
{"idx": 10211, "func": "try a single item", "target": 0}
{"idx": 10212, "func": "Select the charset of the original message", "target": 0}
{"idx": 10213, "func": "No longer abstract to allow subclasses to remove, so we provide a null default implementation", "target": 0}
{"idx": 10214, "func": "Button", "target": 0}
{"idx": 10215, "func": "public static Decision decisionUNCATEGORIZED = new Decision(\"Uncategorized\", 1);", "target": 0}
{"idx": 10216, "func": "//{{{ isBorderOpaque() method", "target": 0}
{"idx": 10217, "func": "no args method", "target": 0}
{"idx": 10218, "func": "Checkbox $NON-NLS-1$", "target": 0}
{"idx": 10219, "func": "@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)", "target": 0}
{"idx": 10220, "func": "Push the existing status", "target": 0}
{"idx": 10221, "func": "//fill sizes string array with numbers from 7 to 18", "target": 0}
{"idx": 10222, "func": "checks for entries in use", "target": 0}
{"idx": 10223, "func": "can't be converted any more, return it", "target": 0}
{"idx": 10224, "func": "VIEW TYPE DBO (doesn't exist yet)", "target": 0}
{"idx": 10225, "func": "Here is no '-'.", "target": 0}
{"idx": 10226, "func": "//enable schema //setFeature(XmlConstants.FEATURE_VALIDATION, false);", "target": 0}
{"idx": 10227, "func": "Create a page, set the title, and the initial model file name. //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$", "target": 0}
{"idx": 10228, "func": "i18n[mysql.displayOpenTables=(MySQL) Display open tables]", "target": 0}
{"idx": 10229, "func": "Search the local scope for a resolution of the type parameter name. //", "target": 0}
{"idx": 10230, "func": "line 367", "target": 0}
{"idx": 10231, "func": "mock folder class, only returns folder id", "target": 0}
{"idx": 10232, "func": "update the progress", "target": 0}
{"idx": 10233, "func": "empty chars, return to null", "target": 0}
{"idx": 10234, "func": "TODO: We may want to restrict the list to parameters which conform to the following WFR: parameter.type = ofstype or (parameter.kind = #in and ofstype.allSupertypes->includes(type)) or ((parameter.kind = #out or parameter.kind = #return) and type.allSupertypes->includes(ofstype)) or (parameter.kind = #inout and ( ofstype.allSupertypes->includes(type) or type.allSupertypes->includes(ofstype))))", "target": 1}
{"idx": 10235, "func": "Base external identifiers for resolution. //", "target": 0}
{"idx": 10236, "func": "b2.nextLine();", "target": 0}
{"idx": 10237, "func": "all attributes are immutable, so we can just return the super.clone() FIXME: in fact, the generator itself is immutable, so cloning is not necessary", "target": 1}
{"idx": 10238, "func": "@see java.awt.dnd.DropTargetListener#dragExit(java.awt.dnd.DropTargetEvent)", "target": 0}
{"idx": 10239, "func": "i18n[popupeditableIoPanel.importWarning=Import Warning]", "target": 0}
{"idx": 10240, "func": "i18n[xmlRefomatter.xmlWarning=XML Warning]", "target": 0}
{"idx": 10241, "func": "TODO: This is actually a hack! Some diagram types (like the statechart diagrams) access the current diagram to get some info. This might cause problems if there's another statechart diagram active, so I remove the current project, before loading the new one.", "target": 1}
{"idx": 10242, "func": "TODO somehow show progress", "target": 1}
{"idx": 10243, "func": "Simple test with single Selection controller Generic Controller + Sampler \"before\" + Switch Controller + + Sampler \"zero\" + + Sampler \"one\" + + Sampler \"two\" + + Sampler \"three\" + Sampler \"after\"", "target": 0}
{"idx": 10244, "func": "do search", "target": 0}
{"idx": 10245, "func": "What linenumber will the source think it starts from?", "target": 0}
{"idx": 10246, "func": "//{{{ PaneNameRenderer class", "target": 0}
{"idx": 10247, "func": "There used to be a frame.pack() here but it resized the frame to be very wide if text output was used.", "target": 0}
{"idx": 10248, "func": "This should be transparent. //", "target": 0}
{"idx": 10249, "func": "add the main fileset to the list of filesets to process.", "target": 0}
{"idx": 10250, "func": "get JavaClass if this is the new proxy class; verify it matches if this is a superclass proxy.", "target": 0}
{"idx": 10251, "func": "On most systems one could use: /bin/sh -c env", "target": 0}
{"idx": 10252, "func": "TODO handle class cast exception better.", "target": 1}
{"idx": 10253, "func": "get call site and thread context", "target": 0}
{"idx": 10254, "func": "Insert the collection at the right place. //", "target": 0}
{"idx": 10255, "func": "a and b should not be equal", "target": 0}
{"idx": 10256, "func": "Must return a valid node, or may generate an NPE", "target": 0}
{"idx": 10257, "func": "Generate the \"intno\" of the given Message. <p> If the predecessor of the given message has only one successor, then we return the string representation of the given integer. <p> If the predecessor of the given message has more than one successor, then this is a case of parallel execution of messages, e.g. Message 3.1a and Message 3.1b are concurrent within activation 3.1. Hence In this case we use a syntax like: 1a, 1b, 1c. This means that the first successor in the ordered list of successors that has more than one entry will get the postfix a, the second b, etc. TODO: Document exceptional behaviour. @param umlMessage the UML message object to generate the sequence number for @param umlPredecessor the immediate predecessor message (UML object) that has the given message as successor @param position the integer position of the given message within its sequence @return the generated sequence expression string, or null if the given Message was null", "target": 1}
{"idx": 10258, "func": "use a stack to accumulate segments of base, except for the last (i.e. skip trailing separator and anything following it), and of relative path", "target": 0}
{"idx": 10259, "func": "If there isn't a 3rd column then this represents a connection of elements of the same type.", "target": 0}
{"idx": 10260, "func": "check that minItem limit is observed", "target": 0}
{"idx": 10261, "func": "//System.err.println(\"cleaned up weak ref: \"+deadref);", "target": 0}
{"idx": 10262, "func": "Create a proxy object around this handler that can be reflectively added as an Apple ApplicationListener", "target": 0}
{"idx": 10263, "func": "Test that only loops twice", "target": 0}
{"idx": 10264, "func": "The most recently processed command will never have been executed. //", "target": 0}
{"idx": 10265, "func": "NUMBER OF THREADS", "target": 0}
{"idx": 10266, "func": "Did a test fail?", "target": 0}
{"idx": 10267, "func": "see if there is already an element with the same name //", "target": 0}
{"idx": 10268, "func": "// private List collectionOwnerAliases = new ArrayList(); // private List collectionAliases = new ArrayList(); // private List collectionPersisters = new ArrayList(); // private List collectionResults = new ArrayList();", "target": 0}
{"idx": 10269, "func": "Initialize the ArgoUML application version, so that {@link ApplicationVersion#getVersion()} doesn't return null. @throws Exception if something goes wrong... TODO: move this to an helper class.", "target": 1}
{"idx": 10270, "func": "//tomcat4.1 gets the new one", "target": 0}
{"idx": 10271, "func": "//wince isn't really 9x, but crippled enough to //be a muchness. Ant doesnt run on CE, anyway.", "target": 0}
{"idx": 10272, "func": "Do the conversion into the object in a safe manner", "target": 0}
{"idx": 10273, "func": "Does the collection referenced by this FromElement specify an order-by attribute? If so, attach it to the query's order-by", "target": 0}
{"idx": 10274, "func": "find the point offset on the line that gives a correct offset", "target": 0}
{"idx": 10275, "func": "private Plot parent <-- don't clone the parent plot, but take care childs in combined plots instead", "target": 0}
{"idx": 10276, "func": "//yukky! Don't you have subclasses for that! //TODO race conditions can happen here", "target": 1}
{"idx": 10277, "func": "try null argument", "target": 0}
{"idx": 10278, "func": "//{{{ Rect constructor", "target": 0}
{"idx": 10279, "func": "How many bytes into the source are we?", "target": 0}
{"idx": 10280, "func": "use Algorithm specified by classname", "target": 0}
{"idx": 10281, "func": "//i18n[ColumnsTab.hint=Show columns for the selected table]", "target": 0}
{"idx": 10282, "func": "GenTypeParameter", "target": 0}
{"idx": 10283, "func": "Now clear out any previously selected channels", "target": 0}
{"idx": 10284, "func": "should be Element not EObject really", "target": 0}
{"idx": 10285, "func": "//Get default P4 settings from environment - Mark would have done something cool with //introspection here.....:-)", "target": 0}
{"idx": 10286, "func": "i18n[ResultTab.executedLabel=Executed:]", "target": 0}
{"idx": 10287, "func": "Test skipped for now as behaviour is not yet properly defined", "target": 0}
{"idx": 10288, "func": "For all windows (other than the first one opened) for a session add a number on the end of the title to differentiate them in menus etc.", "target": 0}
{"idx": 10289, "func": "Find the closing '%' //", "target": 0}
{"idx": 10290, "func": "delegate to other method", "target": 0}
{"idx": 10291, "func": "replace any / , or - with a space", "target": 0}
{"idx": 10292, "func": "a null key should throw an IllegalArgumentException", "target": 0}
{"idx": 10293, "func": "For debugging you probably want either this OR the logging for every event which is fired - not both", "target": 0}
{"idx": 10294, "func": "@see java.util.Collection#iterator()", "target": 0}
{"idx": 10295, "func": "//{{{ initSiteProperties() method", "target": 0}
{"idx": 10296, "func": "already have some bytes buffered, just return those", "target": 0}
{"idx": 10297, "func": "time of the build in milli seconds", "target": 0}
{"idx": 10298, "func": "//TODO: if we support multiple fetch groups, we would need to clone the set of lazy properties!", "target": 1}
{"idx": 10299, "func": "Now ftab contains the first loc of every small bucket. Calculate the running order, from smallest to largest big bucket.", "target": 0}
{"idx": 10300, "func": "//{{{ setSelectedColor() method", "target": 0}
{"idx": 10301, "func": "//p = new UMLValueSpecificationPanel(model, propertyName);", "target": 0}
{"idx": 10302, "func": "add array construction methods", "target": 0}
{"idx": 10303, "func": "if the path is non-empty and originally ended in an empty segment, a parent reference, or a self reference, add a trailing separator", "target": 0}
{"idx": 10304, "func": "//TODO: does this really need to be here? does the collection already have it's own up-to-date snapshot?", "target": 1}
{"idx": 10305, "func": "@see org.argouml.uml.diagram.state.ui.FigState#getInitialX()", "target": 0}
{"idx": 10306, "func": "/////////////////////////////////////////////////////////////////Now check length of Strings in splitPieces1 again", "target": 0}
{"idx": 10307, "func": "Prepare the Request tabbed pane", "target": 0}
{"idx": 10308, "func": "We don't destroy the timer when there's nothing happening because it would mean a lot more work on every single AWT event that gets dispatched.", "target": 0}
{"idx": 10309, "func": "wait till we are at the last item for the row then draw the whole stack at once", "target": 0}
{"idx": 10310, "func": "//System.err.println(\"ADDING CHAR: \" + (char)cx + \" with number: \" + cx);", "target": 0}
{"idx": 10311, "func": "i18n[userscript.classNotFound=Class {0} not found]", "target": 0}
{"idx": 10312, "func": "super.isCellEditable(row, column);", "target": 0}
{"idx": 10313, "func": "TODO: Why isn't this stuff managed by the nameFig itself?", "target": 1}
{"idx": 10314, "func": "@see tudresden.ocl.parser.analysis.DepthFirstAdapter#outAStringLiteral(tudresden.ocl.parser.node.AStringLiteral)", "target": 0}
{"idx": 10315, "func": "// final JScrollPane sp = new JScrollPane(); // sp.setBorder(BorderFactory.createEmptyBorder()); // sp.setViewportView(_tree); // sp.setPreferredSize(new Dimension(200, 200));", "target": 0}
{"idx": 10316, "func": "@bgen(jjtree) PackageDeclaration", "target": 0}
{"idx": 10317, "func": "get name of folder", "target": 0}
{"idx": 10318, "func": "work out the value, label and position", "target": 0}
{"idx": 10319, "func": "Loop through the files. Each file represents one deployment descriptor, and hence one bean in our model.", "target": 0}
{"idx": 10320, "func": "To disable downloading and rendering of images and frames, enable the editor-kit. The Stream property can then be", "target": 0}
{"idx": 10321, "func": "TODO: fix output when this flag is set to true", "target": 1}
{"idx": 10322, "func": "retrieve source node corresponding to target //", "target": 0}
{"idx": 10323, "func": "update headerlist of destination-folder -> this is necessary to reflect the changes visually but only do it if the target folder is still in sync!", "target": 0}
{"idx": 10324, "func": "Fill 6 of value (byte) -19 Fill 3 of value (byte) 33 Fill 3 of value (byte) -19", "target": 0}
{"idx": 10325, "func": "ENEBO: 1.9 has CURR nodes for local/block variables. We don't. I believe we follow proper logic", "target": 0}
{"idx": 10326, "func": "TODO Is this a valid operation on a timestamps cache?", "target": 1}
{"idx": 10327, "func": "Non-instantiable", "target": 0}
{"idx": 10328, "func": "Now the functions for the Popup-related operations.", "target": 0}
{"idx": 10329, "func": "(MClassifier)", "target": 0}
{"idx": 10330, "func": "SSS FIXME: Should I be returning the operand constructed here?", "target": 1}
{"idx": 10331, "func": "line 1298", "target": 0}
{"idx": 10332, "func": "make the link area a square if the pie chart is to be circular... is circular?", "target": 0}
{"idx": 10333, "func": "draw an orange line for 50% point", "target": 0}
{"idx": 10334, "func": "Bump lastLine so that the next line doesn't erronously pick up the \\r", "target": 0}
{"idx": 10335, "func": "not for internal use:", "target": 0}
{"idx": 10336, "func": "Read the content model.", "target": 0}
{"idx": 10337, "func": "Since the granularity of time in Java is only milliseconds, add an adjustment so that the time is represented in 100s of nanoseconds. The version number (1) is multiplexed into the most significant hex digit. //", "target": 0}
{"idx": 10338, "func": "TODO: public only?", "target": 1}
{"idx": 10339, "func": "boot the Object class", "target": 0}
{"idx": 10340, "func": "initialize this if it hasn't been", "target": 0}
{"idx": 10341, "func": "//testing with subset of targets", "target": 0}
{"idx": 10342, "func": "else did not match rest of the tokens, try again on smaller sample", "target": 0}
{"idx": 10343, "func": "save list of open files", "target": 0}
{"idx": 10344, "func": "At least one version of PostgreSQL through the JDBC/ODBC bridge returns an empty result set for the list of table types. Another version of PostgreSQL returns 6 entries of \"SYSTEM TABLE\" (which we have already filtered back to one).", "target": 0}
{"idx": 10345, "func": "v =", "target": 0}
{"idx": 10346, "func": "Menus", "target": 0}
{"idx": 10347, "func": "find the next name in the text", "target": 0}
{"idx": 10348, "func": "There was an object in map, destroy the temporary and return one in map (oldCtx)", "target": 0}
{"idx": 10349, "func": "Allow the mimetype of the file to control the content type", "target": 0}
{"idx": 10350, "func": "Convert the src uids back to virtual uids", "target": 0}
{"idx": 10351, "func": "//XMLNamespaceFactoryImpl", "target": 0}
{"idx": 10352, "func": "message belongs to which account?", "target": 0}
{"idx": 10353, "func": "score message and mark as \"spam\" or \"not spam\"", "target": 0}
{"idx": 10354, "func": "If LOGGER_PANEL_MAX_LENGTH is 0, it means all log events are kept", "target": 0}
{"idx": 10355, "func": "TODO: This should be handled with an Iterator", "target": 1}
{"idx": 10356, "func": "===================== helper methods and classes ====================", "target": 0}
{"idx": 10357, "func": "bench straight-up integer fib(30)", "target": 0}
{"idx": 10358, "func": "Fill 10 of value (byte) -19 Fill 8 of value (byte) -87 Fill 13 of value (byte) 33 Fill 10 of value (byte) -87 Fill 6 of value (byte) 33", "target": 0}
{"idx": 10359, "func": "-- Overall Dialog box", "target": 0}
{"idx": 10360, "func": "If we still can't find it, just try using all of the text", "target": 0}
{"idx": 10361, "func": "UseCase 4.11.3.5 [3]", "target": 0}
{"idx": 10362, "func": "prune away any files not belonging to the revision label this is one ugly API from Starteam SDK", "target": 0}
{"idx": 10363, "func": "Make the class name look nice, by splitting on _ and capitalize each segment, then joining the, together without anything separating them, and last put on \"Service\" at the end.", "target": 0}
{"idx": 10364, "func": "TODO: Do we have anything to add here?", "target": 1}
{"idx": 10365, "func": "//{{{ doAWTRequest() method", "target": 0}
{"idx": 10366, "func": "Our readback/pushback buffer.", "target": 0}
{"idx": 10367, "func": "//{{{ getScreenLineCount() method", "target": 0}
{"idx": 10368, "func": "File is not found in specified filepath", "target": 0}
{"idx": 10369, "func": "tweak.", "target": 0}
{"idx": 10370, "func": "if get to an arg barrier then return to normal mode else continue accumulating options", "target": 0}
{"idx": 10371, "func": "TODO: use UndoableEditEvent to make this really work", "target": 1}
{"idx": 10372, "func": "TODO: no need to calculate every time.", "target": 1}
{"idx": 10373, "func": "@TODO using taskName here is brittle, as a user could override it. this should probably be modified to use the classname instead.", "target": 1}
{"idx": 10374, "func": "//{{{ checkDependencies() method", "target": 0}
{"idx": 10375, "func": "//use dialect default properties", "target": 0}
{"idx": 10376, "func": "It's definitely a package if it was declared as such. //", "target": 0}
{"idx": 10377, "func": "FIXME this is not correct", "target": 1}
{"idx": 10378, "func": "//non java char at start => underscore then the the _hex value", "target": 0}
{"idx": 10379, "func": "if there are only null items, we get a NaNRange", "target": 0}
{"idx": 10380, "func": "Might need to add, to free memory from any previous result sets", "target": 0}
{"idx": 10381, "func": "i18n[laf.other=Other]", "target": 0}
{"idx": 10382, "func": "line 361", "target": 0}
{"idx": 10383, "func": "if it's an object type we must do a check cast", "target": 0}
{"idx": 10384, "func": "Registry based authority.", "target": 0}
{"idx": 10385, "func": "iterate entries ordered by capacity to find first fit", "target": 0}
{"idx": 10386, "func": "Result as integers, rounded up. We ensure that the radii are integers for convenience.", "target": 0}
{"idx": 10387, "func": "currentEdge.setBetweenNearestPoints(false);", "target": 0}
{"idx": 10388, "func": "city", "target": 0}
{"idx": 10389, "func": "Invoke generator adapters for each object. //", "target": 0}
{"idx": 10390, "func": "The message area is on the right of the statusbar and takes up all available space.", "target": 0}
{"idx": 10391, "func": "top", "target": 0}
{"idx": 10392, "func": "i18n[SequenceDetailsTab.hint=Display sequence details]", "target": 0}
{"idx": 10393, "func": "//int transX = (int) (xx + ww (x - domainMin) / domainLength); //int transY = (int) (yy - hh (y - rangeMin) / rangeLength);", "target": 0}
{"idx": 10394, "func": "Check for missing <html> tag", "target": 0}
{"idx": 10395, "func": "Look for a comment", "target": 0}
{"idx": 10396, "func": "last in expanded range", "target": 0}
{"idx": 10397, "func": "//{{{ setEOLMarkerColor() method", "target": 0}
{"idx": 10398, "func": "it is safe here to cast to AbstractMailFrameControlller", "target": 0}
{"idx": 10399, "func": "// taskButton = new JButton(); // taskButton.setIcon(ImageLoader.getImageIcon(\"group_small.png\")); // taskButton.setToolTipText(\"Show list of running tasks\"); // taskButton.setRolloverEnabled(true); // taskButton.setActionCommand(\"TASKMANAGER\"); // taskButton.addActionListener(this); // taskButton.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));", "target": 0}
{"idx": 10400, "func": "send a dataset change event to self...", "target": 0}
{"idx": 10401, "func": "Convert max x/y to width/height", "target": 0}
{"idx": 10402, "func": "this may be obsolete (not used anywhere)", "target": 1}
{"idx": 10403, "func": "line 1201", "target": 0}
{"idx": 10404, "func": "do nothing, this iteration restarts", "target": 0}
{"idx": 10405, "func": "add some test data", "target": 0}
{"idx": 10406, "func": "//{{{ EditAction constructor", "target": 0}
{"idx": 10407, "func": "if this is the last item, draw the path ...", "target": 0}
{"idx": 10408, "func": "add the new chart", "target": 0}
{"idx": 10409, "func": "Only handle classifiers from this package. //", "target": 0}
{"idx": 10410, "func": "look for a label option", "target": 0}
{"idx": 10411, "func": "TODO : currently we really do not handle ValueInclusion.PARTIAL... ValueInclusion.PARTIAL would indicate parts of a component need to be included in the select; currently we then just render the entire component into the select clause in that case.", "target": 1}
{"idx": 10412, "func": "//{{{ Deprecated methods", "target": 0}
{"idx": 10413, "func": "Holds the mappings from the saveservice properties file Key: alias Entry: full class name There may be multiple aliases which map to the same class", "target": 0}
{"idx": 10414, "func": "install user-selected packages", "target": 0}
{"idx": 10415, "func": "//{{{ loadCaretInfo() method", "target": 0}
{"idx": 10416, "func": "//{{{ addPluginJAR() method", "target": 0}
{"idx": 10417, "func": "//One PAD e.g. 3cQ[Pad]", "target": 0}
{"idx": 10418, "func": "Create the header of the multipart", "target": 0}
{"idx": 10419, "func": "else if might have been created by another process so not a problem", "target": 0}
{"idx": 10420, "func": "End of the useBean tag. //", "target": 0}
{"idx": 10421, "func": "// Dimension dim = getPreferredSize(); // dim.width = PREFERRED_WIDTH; // setPreferredSize(dim); // setRows(3);", "target": 0}
{"idx": 10422, "func": "ready to set the value finally", "target": 0}
{"idx": 10423, "func": "i18n[syntax.configAutoCorr=Configure auto correct /abreviation]", "target": 0}
{"idx": 10424, "func": "For Sockets, only write as much as will fit.", "target": 0}
{"idx": 10425, "func": "get the relevant source coordinate given the plot orientation", "target": 0}
{"idx": 10426, "func": "TODO ?? //OK //OK", "target": 0}
{"idx": 10427, "func": "remove old items and notify if necessary", "target": 0}
{"idx": 10428, "func": "line 1598", "target": 0}
{"idx": 10429, "func": "short cut check...", "target": 1}
{"idx": 10430, "func": "segment size for computing slope", "target": 0}
{"idx": 10431, "func": "add -command AddLabel to the commandline", "target": 0}
{"idx": 10432, "func": "//should always fail", "target": 0}
{"idx": 10433, "func": "skip if contact item is not valid", "target": 0}
{"idx": 10434, "func": "//{{{ getTable() method", "target": 0}
{"idx": 10435, "func": "can be null if an error occurred in setUp", "target": 0}
{"idx": 10436, "func": "y-axis label", "target": 0}
{"idx": 10437, "func": "Check if the header manager had a content type header This allows the user to specify his own content-type for a POST request", "target": 0}
{"idx": 10438, "func": "copy the last item...", "target": 0}
{"idx": 10439, "func": "i18n[I18n.WorkingDir=Working Directory]", "target": 0}
{"idx": 10440, "func": "try null column key", "target": 0}
{"idx": 10441, "func": "invoke specific arity version", "target": 0}
{"idx": 10442, "func": "Do nothing if no resources (including nested text)", "target": 0}
{"idx": 10443, "func": "draw the standard deviation lines before the shapes (if they're visible) - it looks better if the shape fill colour is different to the line colour", "target": 0}
{"idx": 10444, "func": "line 498", "target": 0}
{"idx": 10445, "func": "i18n[mssql.oneFilePerObject=Create one file per object]", "target": 0}
{"idx": 10446, "func": "$NON-NLS-1$ SOAP request (generally) //blank name $NON-NLS-1$", "target": 0}
{"idx": 10447, "func": "Keep adding parts until we have a class", "target": 0}
{"idx": 10448, "func": "TODO understand qualifiers", "target": 1}
{"idx": 10449, "func": "now emit bodies", "target": 0}
{"idx": 10450, "func": "This is the name of the HotSpot Diagnostic platform MBean (Sun Java 1.6) See: http://download.oracle.com/javase/6/docs/jre/api/management/extension/com/sun/management/HotSpotDiagnosticMXBean.html", "target": 0}
{"idx": 10451, "func": "are we recursing?", "target": 0}
{"idx": 10452, "func": "fall-back to email address", "target": 0}
{"idx": 10453, "func": "do nothing...this is just a hook for subclasses", "target": 0}
{"idx": 10454, "func": "Get the next one down and then test it for has next. //", "target": 0}
{"idx": 10455, "func": "Pointbase has no known variation of a \"SELECT ... FOR UPDATE\" syntax...", "target": 0}
{"idx": 10456, "func": "ci (degree 1)", "target": 0}
{"idx": 10457, "func": "remove all old elements", "target": 0}
{"idx": 10458, "func": "do nothing, it's a non-impl method", "target": 0}
{"idx": 10459, "func": "(non-Javadoc) @see org.columba.chat.jabber.IBuddyStatus#getChatMediator()", "target": 0}
{"idx": 10460, "func": "//////////////////////////////////////////////////////////////contructors", "target": 0}
{"idx": 10461, "func": "PROPERTIES", "target": 0}
{"idx": 10462, "func": "Add any joins", "target": 0}
{"idx": 10463, "func": "? 2LINE_WIDTH?", "target": 0}
{"idx": 10464, "func": "Give access to the method for test code", "target": 0}
{"idx": 10465, "func": "check if either series is a degenerate case (i.e. less than 2 points)", "target": 0}
{"idx": 10466, "func": "//private static ReportPlan plan;", "target": 0}
{"idx": 10467, "func": "save properties to file", "target": 0}
{"idx": 10468, "func": "i18n[userscript.selScriptToEdit=Please select the script to edit]", "target": 0}
{"idx": 10469, "func": "defer argument checks...", "target": 0}
{"idx": 10470, "func": "Was expected, test passes", "target": 0}
{"idx": 10471, "func": "TODO - should this be restored?", "target": 1}
{"idx": 10472, "func": "Spring-injected", "target": 0}
{"idx": 10473, "func": "finish processing samples", "target": 0}
{"idx": 10474, "func": "strict?", "target": 0}
{"idx": 10475, "func": "User closing the progress window is interpreted as cancel request", "target": 0}
{"idx": 10476, "func": "Fixme: This does not have exact same semantics as RubyArray.join, but they probably could be consolidated (perhaps as join(args[], sep, doChomp)).", "target": 1}
{"idx": 10477, "func": "read qualified", "target": 0}
{"idx": 10478, "func": "i18n[SchemaPropertiesPanel.schemaTableUpdateApply=Apply]", "target": 0}
{"idx": 10479, "func": "Replace \"-9\" with Types.NVARCHAR when Java6 is the minimum supported version", "target": 0}
{"idx": 10480, "func": "The text is always opaque.", "target": 0}
{"idx": 10481, "func": "//{{{ insideSelection() method", "target": 0}
{"idx": 10482, "func": "interned, OK for \"fast\" methods", "target": 0}
{"idx": 10483, "func": "There is no parent", "target": 0}
{"idx": 10484, "func": "i18n[oracle.sessionDetails=Details]", "target": 0}
{"idx": 10485, "func": "check if initial polygon needs to be clipped", "target": 0}
{"idx": 10486, "func": "Create the root \"bsh\" system object if it doesn't exist.", "target": 0}
{"idx": 10487, "func": "Try object imports", "target": 0}
{"idx": 10488, "func": "create the JTable for input and put in the top of window", "target": 0}
{"idx": 10489, "func": "Drop Conflicts", "target": 0}
{"idx": 10490, "func": "Differs from RE_SYNTAX_POSIX_EXTENDED in that RE_CONTEXT_INVALID_OPS replaces RE_CONTEXT_INDEP_OPS and RE_NO_BK_REFS is added.", "target": 0}
{"idx": 10491, "func": "standard sql92 functions (can be overridden by subclasses)", "target": 0}
{"idx": 10492, "func": "If value and default are both specified and the property did not exist in the property file, the property is set to default.", "target": 0}
{"idx": 10493, "func": "For -sourcepath, use the \"sourcepath\" value if present. Otherwise default to the \"srcdir\" value.", "target": 0}
{"idx": 10494, "func": "//because numeric can be anything", "target": 0}
{"idx": 10495, "func": "message composed of headers and body", "target": 0}
{"idx": 10496, "func": "offset the start of the box if the box width is smaller than the category width", "target": 0}
{"idx": 10497, "func": "i18n[ErrorStream.error.syntax=Syntax error {0}]", "target": 0}
{"idx": 10498, "func": "set the icon for this poster", "target": 0}
{"idx": 10499, "func": "When using this as a custom selector, this method will be called. It translates each parameter into the appropriate setXXX() call. @param parameters the complete set of parameters for this selector", "target": 0}
{"idx": 10500, "func": "get the data points", "target": 0}
{"idx": 10501, "func": "get calendar ui component depository", "target": 0}
{"idx": 10502, "func": "baseSeriesPaint", "target": 0}
{"idx": 10503, "func": "if we get to this point, we need to resolve relative path RFC 2396 5.2 #6", "target": 0}
{"idx": 10504, "func": "//TODO: this is a bit arbitrary, expose a switch to the user?", "target": 1}
{"idx": 10505, "func": "if there's no receiver, evaluate and pass in the superclass, or pass self if it no superclass", "target": 0}
{"idx": 10506, "func": "now get the data and plot it (the visual representation will depend on the renderer that has been set)...", "target": 0}
{"idx": 10507, "func": "This class is a temporary wrapper around the GEF UndoManager. This will be changed when GEF is modified to create commands and provide an observer interface for ArgoUML to receive them. <p> TODO: How does this relate to {@link org.argouml.kernel.DefaultUndoManager}? @author Bob Tarling", "target": 0}
{"idx": 10508, "func": "This is a big festering hack to make the images the right size from the start. //", "target": 1}
{"idx": 10509, "func": "Create a new TagDefinition if none found", "target": 0}
{"idx": 10510, "func": "//{{{ Maybe show add abbrev dialog", "target": 0}
{"idx": 10511, "func": "Programming error: bail out.", "target": 1}
{"idx": 10512, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsConvert(int, int)", "target": 0}
{"idx": 10513, "func": "Check that the EJB \"source\" classes all exist", "target": 0}
{"idx": 10514, "func": "@see org.argouml.model.ModelImplementation#getUseCasesFactory()", "target": 0}
{"idx": 10515, "func": "one line is added to the header for each attachment (which has a filename defined)", "target": 0}
{"idx": 10516, "func": "Iterate over the RubyHash keySet, simultaneously iterating over the values()", "target": 0}
{"idx": 10517, "func": "by default, name/value are encoded on fetch", "target": 0}
{"idx": 10518, "func": "We can try to do a drop on instead. //", "target": 0}
{"idx": 10519, "func": "build the map of standard ANSI SQL aggregation functions ~~~~~~~~~~~~~~~", "target": 0}
{"idx": 10520, "func": "//////////////////////////////////////////////////////////////ToDoListListener implementation", "target": 0}
{"idx": 10521, "func": "now map the dataset to the second xAxis", "target": 0}
{"idx": 10522, "func": "add all nicknames", "target": 0}
{"idx": 10523, "func": "//plugin = instanciateJavaClass(className, arguments);", "target": 0}
{"idx": 10524, "func": "map null to Primtive.NULL coming in...", "target": 0}
{"idx": 10525, "func": "DISCRIMINATOR", "target": 0}
{"idx": 10526, "func": "//{{{ loadStyles() method", "target": 0}
{"idx": 10527, "func": "Close dialog, view.close() call need a view...", "target": 0}
{"idx": 10528, "func": "//{{{ PluginManagerProgress constructor", "target": 0}
{"idx": 10529, "func": "//XMLTypeValidator", "target": 0}
{"idx": 10530, "func": "IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject", "target": 0}
{"idx": 10531, "func": "i18n[HQLEntryPanelManager.quoteHQL=Quote HQL]", "target": 0}
{"idx": 10532, "func": "adjust the plot area by the interior spacing value", "target": 0}
{"idx": 10533, "func": "TODO: figure out why bind variables aren't working", "target": 1}
{"idx": 10534, "func": "(non-Javadoc) @see org.columba.mail.folder.IMailFolder#getRootFolder()", "target": 0}
{"idx": 10535, "func": "//{{{ setFoldHandler() method", "target": 0}
{"idx": 10536, "func": "EOF, not zero read apparently", "target": 0}
{"idx": 10537, "func": "package-private since they are accessed by inner classes and we want this to be fast", "target": 0}
{"idx": 10538, "func": "//defaults.put(prefix + \".inactiveForeground\",foreground);", "target": 0}
{"idx": 10539, "func": "Required for KeyListener interface, but not used", "target": 0}
{"idx": 10540, "func": "putting a bit back, so we're not at EOF anymore", "target": 0}
{"idx": 10541, "func": "Find the index of the largest local Uid", "target": 0}
{"idx": 10542, "func": "found", "target": 0}
{"idx": 10543, "func": "This only happens if model-change events arrive before we are completely constructed.", "target": 0}
{"idx": 10544, "func": "check pre-conds", "target": 0}
{"idx": 10545, "func": "now find available running slots for the remaining threads", "target": 0}
{"idx": 10546, "func": "'Z' adds extra null pad (versus 'a')", "target": 0}
{"idx": 10547, "func": "line 1154", "target": 0}
{"idx": 10548, "func": "We got to the end of the script without finding a proc separator. Just add it as if we had.", "target": 0}
{"idx": 10549, "func": "get the elements", "target": 0}
{"idx": 10550, "func": "read access flags and class index.", "target": 0}
{"idx": 10551, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getDatabaseProductVersion()", "target": 0}
{"idx": 10552, "func": "determine the type of the first argument...", "target": 0}
{"idx": 10553, "func": "unsigned char", "target": 0}
{"idx": 10554, "func": "0370..03FF;", "target": 0}
{"idx": 10555, "func": "TODO should these fields be public? They don't appear to be used externally. Also, are they any different from HTTPConstants.GET etc. ? In some cases they seem to be used as the method name from the Tomcat log. However the RMETHOD field is used as the value for HTTPSamplerBase.METHOD, for which HTTPConstants is most approriate.", "target": 1}
{"idx": 10556, "func": "Check if a plugin with the same name is already loaded", "target": 0}
{"idx": 10557, "func": "first point is outside, so we update it against one of the four sides then continue", "target": 0}
{"idx": 10558, "func": "Get control panels to let user adjust properties on DataType classes.", "target": 0}
{"idx": 10559, "func": "Delete dependencies where this is the only supplier", "target": 0}
{"idx": 10560, "func": "not Replaceable Controller", "target": 0}
{"idx": 10561, "func": "treat non-matching groups as empty matches", "target": 0}
{"idx": 10562, "func": "i18n[HelpViewerWindow.error.loadchangelogfile=Error retrieving Change Log file URL for {0}]", "target": 0}
{"idx": 10563, "func": "A SetCommand needs to go through SetCommand.create() to ensure it can execute and undo. //", "target": 0}
{"idx": 10564, "func": "Returns the number of children on the stack in the current node scope.", "target": 0}
{"idx": 10565, "func": "Subversion", "target": 0}
{"idx": 10566, "func": "unsigned int, native", "target": 0}
{"idx": 10567, "func": "//{{{ toggleOverwriteEnabled() method", "target": 0}
{"idx": 10568, "func": "decSlide.setPaintLabels(true);", "target": 0}
{"idx": 10569, "func": "Set up PRIMITIVE_TYPE_MAP", "target": 0}
{"idx": 10570, "func": "otherwise immediately materialize it", "target": 0}
{"idx": 10571, "func": "Roughly equivalent to and derived from old Import.doFile()", "target": 0}
{"idx": 10572, "func": "remove item", "target": 0}
{"idx": 10573, "func": "@author headius FIXME convert to enum ?", "target": 1}
{"idx": 10574, "func": "line 492", "target": 0}
{"idx": 10575, "func": "//$NON-NLS-1$ (Flash Media Manifest)", "target": 0}
{"idx": 10576, "func": "//XMLNamespacePackageImpl", "target": 0}
{"idx": 10577, "func": "//and paths are stripped", "target": 0}
{"idx": 10578, "func": "Just append all the parameter values, and use that as the entity body", "target": 0}
{"idx": 10579, "func": "Get the list of the uids on the server Important: Use a clone of the List since we must not change it!", "target": 0}
{"idx": 10580, "func": "//setBackground(item.getColor());", "target": 0}
{"idx": 10581, "func": "i18n[FileManager.savedfile=Saved to {0}]", "target": 0}
{"idx": 10582, "func": "//{{{ getSelectedFiles() method", "target": 0}
{"idx": 10583, "func": "a file doesnt exist rebuild", "target": 0}
{"idx": 10584, "func": "Allow all Packages and Classifiers..", "target": 0}
{"idx": 10585, "func": "//implement ResourceSelector; inherit doc", "target": 0}
{"idx": 10586, "func": "the default is to simply not lazy fetch properties for now...", "target": 0}
{"idx": 10587, "func": "empty implementation - not used.", "target": 0}
{"idx": 10588, "func": "Wait for the buffer to load", "target": 0}
{"idx": 10589, "func": "We don't need to encode here because the only platform resource URIs in the map are for projects whose names are the same as corresponding plug-in IDs, and hence never need to be encoded (see EcorePlugin.computePlatformResourceToPlatformPluginMap()). //", "target": 0}
{"idx": 10590, "func": "//{{{ the character under the cursor changes how we behave.", "target": 0}
{"idx": 10591, "func": "// Log.log(Log.DEBUG,this,\"Running in AWT thread: \" + request);", "target": 0}
{"idx": 10592, "func": "//{{{ setWaitSocket() method", "target": 0}
{"idx": 10593, "func": "At this point, we know we have a tie.", "target": 0}
{"idx": 10594, "func": "Give a name to a value. Enebo: This should be used more.", "target": 0}
{"idx": 10595, "func": "//String s =", "target": 0}
{"idx": 10596, "func": "@see org.argouml.model.CommonBehaviorHelper#setReceiver(java.lang.Object, java.lang.Object)", "target": 0}
{"idx": 10597, "func": "Invalid type specified", "target": 0}
{"idx": 10598, "func": "Ignore trailing whitespace", "target": 0}
{"idx": 10599, "func": "elementOrdering(figures);", "target": 0}
{"idx": 10600, "func": "get the x and y coordinates", "target": 0}
{"idx": 10601, "func": "//{{{ getEOLMarkersPainted() method", "target": 0}
{"idx": 10602, "func": "retrieve tag/category to be selected", "target": 0}
{"idx": 10603, "func": "save blocking state", "target": 0}
{"idx": 10604, "func": "If the downloads dir doesn't already exist, just create it.", "target": 0}
{"idx": 10605, "func": "We're not setting the provider or anything, but it seems that BouncyCastle does some internal things in its provider's constructor which require it to be executed in a secure context. Ideally this hack should be removed. See JRUBY-3919 and this BC bug: http://www.bouncycastle.org/jira/browse/BJA-227", "target": 1}
{"idx": 10606, "func": "Logon using specified user name and password.", "target": 0}
{"idx": 10607, "func": "we totally failed to stop the test", "target": 0}
{"idx": 10608, "func": "MRI behavior: Contrary to what seems to be logical, when '' is given, MRI calculates the distance to the end, in order to go backwards.", "target": 0}
{"idx": 10609, "func": "If the \"short file name\" doesn't exist, then assume that the 8.3 file name compatibility is disabled.", "target": 0}
{"idx": 10610, "func": "Output an empty String", "target": 0}
{"idx": 10611, "func": "update message list", "target": 0}
{"idx": 10612, "func": "@see org.argouml.model.ModelImplementation#getScopeKind()", "target": 0}
{"idx": 10613, "func": "EARLY EXIT!!!!", "target": 0}
{"idx": 10614, "func": "or bidirectional safety method, setting both sides: aPerson.addToEvent(anEvent);", "target": 0}
{"idx": 10615, "func": "public boolean isNonExistant(EntityKey key) { return nonExistantEntityKeys.contains(key); }", "target": 0}
{"idx": 10616, "func": "need names ordered for key generation later", "target": 0}
{"idx": 10617, "func": "FIXME calendar?", "target": 1}
{"idx": 10618, "func": "If not empty then script in ScriptText will be compiled and cached", "target": 0}
{"idx": 10619, "func": "new MultiKeyBinding(KeyStroke.getKeyStroke(KeyEvent.VK_OPEN_BRACKET, MENU_MASK), ExtKit.matchBraceAction), new MultiKeyBinding(KeyStroke.getKeyStroke(KeyEvent.VK_OPEN_BRACKET, MENU_MASK | InputEvent.SHIFT_MASK), ExtKit.selectionMatchBraceAction), new MultiKeyBinding(KeyStroke.getKeyStroke(KeyEvent.VK_F10, InputEvent.SHIFT_MASK), ExtKit.showPopupMenuAction),", "target": 0}
{"idx": 10620, "func": "TODO (@author fdietz): until we can get all the settings update immediately we just open a message box, telling the user to restart", "target": 1}
{"idx": 10621, "func": "case of a backward jump with an offset >= -32768, or of a forward jump with, of course, an unknown offset. In these cases we store the offset in 2 bytes (which will be increased in resizeInstructions, if needed).", "target": 0}
{"idx": 10622, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.dialects.HibernateDialect#supportsSchemasInTableDefinition()", "target": 0}
{"idx": 10623, "func": "create a virtual folder with all messages holding this tag", "target": 0}
{"idx": 10624, "func": "single precision, native", "target": 0}
{"idx": 10625, "func": "Enable/Disable tooltips", "target": 0}
{"idx": 10626, "func": "computes the real size of the bytecode of this class", "target": 0}
{"idx": 10627, "func": "two conditions where we need to transform this to a theta-join syntax: 1) 'elem' is the \"root from-element\" in correlated subqueries 2) The DotNode.useThetaStyleImplicitJoins has been set to true and 'elem' represents an implicit join", "target": 0}
{"idx": 10628, "func": "//Remove the element from Available List", "target": 0}
{"idx": 10629, "func": "this.offset points the next of '?'. modifiers ::= [imsw] ('-' [imsw])? ':'", "target": 0}
{"idx": 10630, "func": "If the cause is a IMAPExcpetion then only password wrong else bogus authentication mechanism", "target": 0}
{"idx": 10631, "func": "20030926, karlpeder Added html support MimePart mp = tree.getFirstTextPart(\"plain\");", "target": 0}
{"idx": 10632, "func": "shape", "target": 0}
{"idx": 10633, "func": "Required to satisfy HTTPSamplerBase Should not be called, as we override sample()", "target": 0}
{"idx": 10634, "func": "Tests", "target": 0}
{"idx": 10635, "func": "count limit time limit attributes (null = all) return object ? dereference links?", "target": 0}
{"idx": 10636, "func": "//{{{ runCachedBlock() method", "target": 0}
{"idx": 10637, "func": "if there are no groups defined or matched, but the whole pattern matches, then markup nodes with pattern name //", "target": 0}
{"idx": 10638, "func": "will use chunked encoding", "target": 0}
{"idx": 10639, "func": "(non-Javadoc) @see org.apache.jmeter.protocol.http.util.accesslog.LogFilter#excPattern(java.lang.String)", "target": 0}
{"idx": 10640, "func": "Adding a todo member removes any existing one.", "target": 0}
{"idx": 10641, "func": "//{{{ parseStyle() method", "target": 0}
{"idx": 10642, "func": "Causes NPE in JDK 1.3.1 //_contentsTxt.setText(\"\");", "target": 0}
{"idx": 10643, "func": "-1 for 1 pixel overlap", "target": 0}
{"idx": 10644, "func": "ensure the object is associated with the wrapper we found it in, so that if it comes back we don't re-wrap it", "target": 0}
{"idx": 10645, "func": "//{{{ getActions() method", "target": 0}
{"idx": 10646, "func": "delegate the re-routing to graphmodels.", "target": 0}
{"idx": 10647, "func": "TODO: ToDoItem stuff should be made an opaque extension", "target": 1}
{"idx": 10648, "func": "process pattern between stars. padIdxStart and patIdxEnd point always to a ''.", "target": 0}
{"idx": 10649, "func": "i18n[dateTypeTimestamp.generateWhereClause=For internally generated WHERE clauses:]", "target": 0}
{"idx": 10650, "func": "Null value is just a declaration Note: we might want to keep any existing value here instead of reset", "target": 1}
{"idx": 10651, "func": "This pattern has a fixed string of which length is more than one.", "target": 0}
{"idx": 10652, "func": "@bgen(jjtree) SwitchLabel", "target": 0}
{"idx": 10653, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.ISession#getSchemaInfo()", "target": 0}
{"idx": 10654, "func": "changing the selection to the specified row changeSelection(row, 0, true, false);", "target": 0}
{"idx": 10655, "func": "this command will be executed only on the specified OS", "target": 0}
{"idx": 10656, "func": "The only thing that would prevent us from editing a string in the popup is if that string has been truncated when read from the DB. Thus, being able to edit the string is the same as not needing to re-read the data.", "target": 0}
{"idx": 10657, "func": "create plot ...", "target": 0}
{"idx": 10658, "func": "//The following is data used while processing stdout of CVS command", "target": 0}
{"idx": 10659, "func": "user asked to see binary data in a different format default to hex", "target": 0}
{"idx": 10660, "func": "TODO: The code implementing this method is from 2003 (see issue 2171) - mechanically integrated by tfmorris in May 2007. Needs to be reviewed/updated. @author Decki,Endi,Yayan, Politechnic of Bandung. Computer Departement method for changing text of Message @param newOwner @param parameter", "target": 1}
{"idx": 10661, "func": "Javadoc copied from base class.", "target": 0}
{"idx": 10662, "func": "non-existent file", "target": 0}
{"idx": 10663, "func": "Compare the destination with the temp file", "target": 0}
{"idx": 10664, "func": "//propertyTableNumbersByName.put( prop.getName(), join );", "target": 0}
{"idx": 10665, "func": "Use up the command. Note that notification will cause a new command to be created. //", "target": 0}
{"idx": 10666, "func": "restrict to out-of-date resources", "target": 0}
{"idx": 10667, "func": "//TODO add tests for ReportSaveGraphics", "target": 1}
{"idx": 10668, "func": "TODO: Bobs says - what is the purpose of this flag? Please document.", "target": 1}
{"idx": 10669, "func": "3 columns //$NON-NLS-1$", "target": 0}
{"idx": 10670, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsGroupByUnrelated()", "target": 0}
{"idx": 10671, "func": "NOTUSED private String chosenFile;", "target": 1}
{"idx": 10672, "func": "Add JETBuilder //", "target": 0}
{"idx": 10673, "func": "check another regular value", "target": 0}
{"idx": 10674, "func": "//{{{ Result class", "target": 0}
{"idx": 10675, "func": "//{{{ NewViewAction class", "target": 0}
{"idx": 10676, "func": "//TODO: formulas ?", "target": 1}
{"idx": 10677, "func": "get the legend items for the datasets...", "target": 0}
{"idx": 10678, "func": "updates current and max stack sizes", "target": 0}
{"idx": 10679, "func": "//means platform default", "target": 0}
{"idx": 10680, "func": "try a null value", "target": 0}
{"idx": 10681, "func": "if this panel is called before any instances of the class have been created, we need to load the properties from the DTProperties.", "target": 0}
{"idx": 10682, "func": "This method should be rewritten to use getFields() and avoid catching exceptions during the search.", "target": 1}
{"idx": 10683, "func": "initially zero, so that we always show the first message", "target": 0}
{"idx": 10684, "func": "TODO: This version differs from ioctl by checking whether fcntl exists and raising notimplemented if it doesn't; perhaps no difference for us?", "target": 1}
{"idx": 10685, "func": "Done with closure compilation", "target": 0}
{"idx": 10686, "func": "We need the wrapper, not the item provider, to handle a DragAndDropCommand; the move, add, remove, etc. commands that implement it will have their values unwrapped as usual. //", "target": 0}
{"idx": 10687, "func": "Have we handled UML2 here?", "target": 0}
{"idx": 10688, "func": "Precondition: input[index-1] == '{', minMax != null", "target": 0}
{"idx": 10689, "func": "//$JUnit-END$", "target": 0}
{"idx": 10690, "func": "could still be OS/2", "target": 0}
{"idx": 10691, "func": "Prepare for typing in rationale field when window is opened. @see java.awt.Component#setVisible(boolean)", "target": 0}
{"idx": 10692, "func": "In the current logic, if we get here we know that module is not an IncludedModuleWrapper, so there's no need to fish out the delegate. But just in case the logic should change later, let's do it anyway", "target": 0}
{"idx": 10693, "func": "open context-menu -> this has to happen in the awt-event dispatcher thread", "target": 0}
{"idx": 10694, "func": "TODO: This is a composite association, so these will get deleted automatically. The only thing we need to do is check for any additional elements that need to be deleted as a result.", "target": 1}
{"idx": 10695, "func": "MRI doesn't flag it as an error if width is given multiple times as a number (but it does for )", "target": 0}
{"idx": 10696, "func": "Additionally add ?-postfixed aliases to any boolean methods and properties.", "target": 0}
{"idx": 10697, "func": "//{{{ MirrorList constructor", "target": 0}
{"idx": 10698, "func": "otherwise, the proxy was pruned during the serialization process", "target": 0}
{"idx": 10699, "func": "//linewidth?", "target": 0}
{"idx": 10700, "func": "limit/offset support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 10701, "func": "//{{{ getLineInfo() method", "target": 0}
{"idx": 10702, "func": "@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)", "target": 0}
{"idx": 10703, "func": "But the collaboration diagram refuses to leave them out:", "target": 0}
{"idx": 10704, "func": "//where oh where has my test case 3 gone?", "target": 1}
{"idx": 10705, "func": "put the \"standard\" tuplizers into the tuplizer map first", "target": 0}
{"idx": 10706, "func": "nothing to do", "target": 0}
{"idx": 10707, "func": "presence of the host (whether valid or empty) means double-slashes which means generic uri", "target": 0}
{"idx": 10708, "func": "UML2 only", "target": 0}
{"idx": 10709, "func": "only add an exception if it is currently an included segment", "target": 0}
{"idx": 10710, "func": "for each of the defined parameters, make sure its value has been set", "target": 0}
{"idx": 10711, "func": "i18n[generalSessionPropertiesPanel.objectTabs=Object Tabs:]", "target": 0}
{"idx": 10712, "func": "if this is set to true, we use the local selection, instead of using the table selection", "target": 0}
{"idx": 10713, "func": "i18n[TableExportCsvDlg.OK=OK]", "target": 0}
{"idx": 10714, "func": "//unwrap the object", "target": 0}
{"idx": 10715, "func": "Error protection against using a suffix without a \".\"?", "target": 0}
{"idx": 10716, "func": "//{{{ focusOnFileView() method", "target": 0}
{"idx": 10717, "func": "the problem with this is that if we have two edit panes looking at the same buffer and the file is reloaded both will jump to the same location", "target": 0}
{"idx": 10718, "func": "Association Class 4.5.3.2 [1]", "target": 0}
{"idx": 10719, "func": "setBackground(UIManager.getColor(\"TextField.background\"));", "target": 0}
{"idx": 10720, "func": "TODO: should the constraint name simply be the column name or something more like a constraint name?", "target": 1}
{"idx": 10721, "func": "remember the most recent dockable", "target": 0}
{"idx": 10722, "func": "@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAAdditiveExpressionTail(tudresden.ocl.parser.node.AAdditiveExpressionTail)", "target": 0}
{"idx": 10723, "func": "CLASS + TABLE", "target": 0}
{"idx": 10724, "func": "remove duplicates", "target": 0}
{"idx": 10725, "func": "---- notesLabel ----", "target": 0}
{"idx": 10726, "func": "<URL>", "target": 0}
{"idx": 10727, "func": "@see org.argouml.uml.ui.UMLCheckBox#buildModel()", "target": 0}
{"idx": 10728, "func": "TODO: port exact behavior from MRI, and move most locking logic into ChannelDescriptor TODO: for all LOCK_NB cases, return false if they would block", "target": 1}
{"idx": 10729, "func": "TODO: Determine whether we should perhaps store non-singleton class in the implementationClass", "target": 1}
{"idx": 10730, "func": "don't want it to show \"0 bytes\" for size, etc.", "target": 0}
{"idx": 10731, "func": "Get the function name node.", "target": 0}
{"idx": 10732, "func": "Set up HTTP scheme override if necessary", "target": 0}
{"idx": 10733, "func": "public Type[] getSqlResultTypes() { return sqlResultTypes; }", "target": 0}
{"idx": 10734, "func": "//mappingRoot.ePackageMapping().getMapping_Outputs() : //mappingRoot.ePackageMapping().getMapping_Inputs(),", "target": 0}
{"idx": 10735, "func": "Add a forward reference from tgt -> currBB", "target": 0}
{"idx": 10736, "func": "//{{{ FloatAction constructor", "target": 0}
{"idx": 10737, "func": "add to search panel", "target": 0}
{"idx": 10738, "func": "//this isnt strictly needed, but by being fussy now, //we can change implementation details later", "target": 0}
{"idx": 10739, "func": "Read the external identifiers.", "target": 0}
{"idx": 10740, "func": "Change Cancel label to Close //$NON-NLS-1$", "target": 0}
{"idx": 10741, "func": "Buffer for parsed character data. //", "target": 0}
{"idx": 10742, "func": "Utilities usually do not require a constructor either", "target": 0}
{"idx": 10743, "func": "Complete the big bucket [ss] by quicksorting any unsorted small buckets [ss, j]. Hopefully previous pointer-scanning phases have already completed many of the small buckets [ss, j], so we don't have to sort them at all.", "target": 0}
{"idx": 10744, "func": "we are at the first hour in the day...", "target": 0}
{"idx": 10745, "func": "TODO: It would be really, really nice to use this to also model components!", "target": 1}
{"idx": 10746, "func": "//Class/getGenFeature.annotations.insert.javajetinc", "target": 0}
{"idx": 10747, "func": "Transaction is done, we do not have a sampler to sample", "target": 0}
{"idx": 10748, "func": "line 717", "target": 0}
{"idx": 10749, "func": "i18n[ColorPropertiesPanel.statusBarBackgroundColorChooserDialogTitle=Select Background Color for Status Bar]", "target": 0}
{"idx": 10750, "func": "append unseen count to folder name", "target": 0}
{"idx": 10751, "func": "expand folder", "target": 0}
{"idx": 10752, "func": "1", "target": 0}
{"idx": 10753, "func": "References to actions that we need for Mac hack", "target": 1}
{"idx": 10754, "func": "BLOB exists, so try to read the data from it based on the user's directions", "target": 0}
{"idx": 10755, "func": "we represent a naked (simple) prop-ref", "target": 0}
{"idx": 10756, "func": "retrieve Command of filter action", "target": 0}
{"idx": 10757, "func": "Produce the supplemental character as an entity", "target": 0}
{"idx": 10758, "func": "Remember the path being dragged (because if it is being moved, we will have to delete it later).", "target": 0}
{"idx": 10759, "func": "Update follow redirects setting just for this connection", "target": 0}
{"idx": 10760, "func": "use the id assigned to the instance", "target": 0}
{"idx": 10761, "func": "-W", "target": 0}
{"idx": 10762, "func": "//}}} //{{{ Handle $", "target": 0}
{"idx": 10763, "func": "note: it's okay for two URIs to share a segments array, since neither will ever modify it", "target": 0}
{"idx": 10764, "func": "@see org.argouml.persistence.SAXParserBase#handleEndElement( org.argouml.persistence.XMLElement)", "target": 0}
{"idx": 10765, "func": "perhaps this should be an exception since it is only ever used in the above method?", "target": 1}
{"idx": 10766, "func": "//Create the file", "target": 0}
{"idx": 10767, "func": "send to specific event handler", "target": 0}
{"idx": 10768, "func": "Not yet open", "target": 0}
{"idx": 10769, "func": "getting current node (under the selection)", "target": 0}
{"idx": 10770, "func": "//after reset!", "target": 0}
{"idx": 10771, "func": "Column renderers", "target": 0}
{"idx": 10772, "func": "I have no direction yet", "target": 0}
{"idx": 10773, "func": "The current node is now updated", "target": 0}
{"idx": 10774, "func": "allocates a byte vector of this size, in order to avoid unnecessary arraycopy operations in the ByteVector.enlarge() method", "target": 0}
{"idx": 10775, "func": "Create the CSVRead function and set its parameters.", "target": 0}
{"idx": 10776, "func": "fillPaintList", "target": 0}
{"idx": 10777, "func": "time functions mapped to ansi extract", "target": 0}
{"idx": 10778, "func": "can use an empty blob for editing", "target": 0}
{"idx": 10779, "func": "write mode abbrevs", "target": 0}
{"idx": 10780, "func": "we don't need the sign", "target": 0}
{"idx": 10781, "func": "no auto-flushing to support in stateless session", "target": 0}
{"idx": 10782, "func": "Show the user a dialog with a list of columns and ask them to select", "target": 0}
{"idx": 10783, "func": "These are, respectively, the first and last tokens in our linked list If there is only one token, firstToken == lastToken", "target": 0}
{"idx": 10784, "func": "If file encoding is specified, write using that encoding, otherwise use default platform encoding", "target": 0}
{"idx": 10785, "func": "early return", "target": 0}
{"idx": 10786, "func": "//fall through...", "target": 0}
{"idx": 10787, "func": "this.startDoc = false; this.endDoc = true;", "target": 0}
{"idx": 10788, "func": "confirm that the clone is independent of the original", "target": 0}
{"idx": 10789, "func": "i18n[SchemaPropertiesController.cacheDeleted=Deleted {0}]", "target": 0}
{"idx": 10790, "func": "(non-Javadoc) @see org.columba.api.gui.frame.IDock#dock(org.columba.api.gui.frame.IDockable, org.columba.api.gui.frame.IDock.REGION)", "target": 0}
{"idx": 10791, "func": "//{{{ endElement() method", "target": 0}
{"idx": 10792, "func": "FIXME: add setBaseItemURLGenerator(CategoryURLGenerator, boolean) ?", "target": 1}
{"idx": 10793, "func": "@see org.argouml.persistence.SAXParserBase#handleStartElement( org.argouml.persistence.XMLElement)", "target": 0}
{"idx": 10794, "func": "Utility method to encode a String in a way that allows it to be saved properly in an XML file and regained filtering out any noice that an XML framework might have seen fit to add. TODO: Why are we doing this ourselves? Surely encoding information for XML serialization is a well known task - tfm I have never understood why this is being done. I think we should remove any usage - bob @param str The String to encode. @return The encoded String.", "target": 1}
{"idx": 10795, "func": "//now run the command of exe + settings + files", "target": 0}
{"idx": 10796, "func": "return the absolutePath of the file", "target": 0}
{"idx": 10797, "func": "to prevent windows looking for a disk in the floppy drive", "target": 0}
{"idx": 10798, "func": "i18n[ObjectTreeSearch.error.objectnotfound=Could not locate the database object ''{0}'' in Object tree]", "target": 0}
{"idx": 10799, "func": "And remember where we are about to draw the new ghost image:", "target": 0}
{"idx": 10800, "func": "Resolve everything up to this dot, but don't resolve the placeholders yet.", "target": 0}
{"idx": 10801, "func": "expunge folder", "target": 0}
{"idx": 10802, "func": "you need a sound.wav in your program folder", "target": 0}
{"idx": 10803, "func": "Are we choosing ourselves recursively through a this() reference?", "target": 0}
{"idx": 10804, "func": "This will be null if initialization succeeds.", "target": 0}
{"idx": 10805, "func": "++", "target": 0}
{"idx": 10806, "func": "all printable ASCII characters", "target": 0}
{"idx": 10807, "func": "@see java.awt.event.KeyListener#keyTyped(java.awt.event.KeyEvent)", "target": 0}
{"idx": 10808, "func": "Fill 3 of value (byte) -19 Fill 4 of value (byte) 33 Fill 5 of value (byte) -87 Fill 3 of value (byte) 33 Fill 3 of value (byte) -87", "target": 0}
{"idx": 10809, "func": "This must be the original (Java) HTTP sampler", "target": 0}
{"idx": 10810, "func": "@see org.argouml.model.AbstractModelEventPump#removeClassModelEventListener(java.beans.PropertyChangeListener, java.lang.Object, java.lang.String[])", "target": 0}
{"idx": 10811, "func": "// void setComponentTuplizerFactory(ComponentTuplizerFactory componentTuplizerFactory) { // this.componentTuplizerFactory = componentTuplizerFactory; // }", "target": 0}
{"idx": 10812, "func": "//this.key = null;", "target": 0}
{"idx": 10813, "func": "//SECTION PAINT ////////////////////////////////////////////////////////", "target": 0}
{"idx": 10814, "func": "//{{{ indentLine() method", "target": 0}
{"idx": 10815, "func": "not valid for \"dead\" state", "target": 0}
{"idx": 10816, "func": "//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "target": 0}
{"idx": 10817, "func": "holds keys from file", "target": 0}
{"idx": 10818, "func": "Build an activity graph with a single action state the way the GUI would", "target": 0}
{"idx": 10819, "func": "verify this is a valid class file.", "target": 0}
{"idx": 10820, "func": "TODO: Need to clean up objectToId (can we do it based on modelelement delete notifications?)", "target": 1}
{"idx": 10821, "func": "...or if it's a wildcard or group feature. Also, make it FeatureMap-typed. //", "target": 0}
{"idx": 10822, "func": "<!-- begin-user-doc --> The <b>Adapter Factory</b> for the model. It provides an adapter <code>createXXX</code> method for each class of the model. <!-- end-user-doc --> @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage @generated", "target": 0}
{"idx": 10823, "func": "make the spawned process run 4 seconds", "target": 0}
{"idx": 10824, "func": "This should never happen since superclass is Object", "target": 0}
{"idx": 10825, "func": "undo check", "target": 0}
{"idx": 10826, "func": "set arguments", "target": 0}
{"idx": 10827, "func": "paint outer border g2d.setPaint(OUTER);", "target": 0}
{"idx": 10828, "func": "maybe io error?", "target": 0}
{"idx": 10829, "func": "Connect to the http server, and do a simple http post with utf-8 encoding of the body, which caused problems when reader/writer classes were used in the HttpMirrorThread", "target": 0}
{"idx": 10830, "func": "//{{{ paintFooter() method", "target": 0}
{"idx": 10831, "func": "stereotypeConstraint ?", "target": 0}
{"idx": 10832, "func": "Remove the commentedge. If there are more then one comment-edges between the 2 objects, then delete them all.", "target": 0}
{"idx": 10833, "func": "normalize angle", "target": 0}
{"idx": 10834, "func": "Look for a substitution group feature in the additional packages. //", "target": 0}
{"idx": 10835, "func": "//{{{ requestDone() method", "target": 0}
{"idx": 10836, "func": "We know that dynselector must be non-null if no error message", "target": 0}
{"idx": 10837, "func": "Special case: the input is exactly the output", "target": 0}
{"idx": 10838, "func": "//TODO: implement functionality this might be painful to do here, as the \"join post processing\" for the subquery has already been performed (meaning that for theta-join dialects, the join conditions have already been moved over to the where clause). A \"simple\" solution here might to perform \"join post processing\" once for the entire query (including any subqueries) at one fell swoop", "target": 1}
{"idx": 10839, "func": "Loads a project displaying a nice ProgressMonitor @param overwrite if true, the file is going to be overwritten @param file the target file TODO: Separate this into a Swing specific class - tfm @param exit if true: exit ArgoUML when done", "target": 1}
{"idx": 10840, "func": "if is a message, it must return the sender and the receiver of the message.", "target": 0}
{"idx": 10841, "func": "@bgen(jjtree) ReturnType", "target": 0}
{"idx": 10842, "func": "SELECT 'CREATE VIEW <newViewName> AS ' || SUBSTR(TEXT , LOCATE('as', TEXT)+2, LENGTH(TEXT)) FROM SYSCAT.VIEWS WHERE VIEWSCHEMA = '<schema>' AND VIEWNAME = '<oldViewName>';", "target": 0}
{"idx": 10843, "func": "If child of TransactionController is a ThroughputController and TPC does not sample its children, then we will have this TODO Should this be at warn level ?", "target": 1}
{"idx": 10844, "func": "Check how much of the body we have already read as part of reading the headers We subtract two bytes for the crlf divider between header and body", "target": 0}
{"idx": 10845, "func": "Tries to load at compile-time the constant referred to by 'constRef'. This might be possible if the constant is defined and is not a forward reference to a value that will be defined later in the class.", "target": 0}
{"idx": 10846, "func": "make sure buffer details track the output", "target": 0}
{"idx": 10847, "func": "assert thenBody != null : \"thenBody is not null\"; assert elseBody != null : \"elseBody is not null\";", "target": 0}
{"idx": 10848, "func": "do nothing, who cares", "target": 0}
{"idx": 10849, "func": "Check if the host is a valid IPv6reference.", "target": 0}
{"idx": 10850, "func": "Add the recent files, which will also add a separator that is visible when needed", "target": 0}
{"idx": 10851, "func": "check for at least 10 whitespaces", "target": 0}
{"idx": 10852, "func": "FIXME: lose syntactical elements here (and others like this)", "target": 1}
{"idx": 10853, "func": "fall back on empty env when security disallows environment var access (like in an applet)", "target": 0}
{"idx": 10854, "func": "re-use node association logic", "target": 0}
{"idx": 10855, "func": "Instance fields are constructed by the client when the instance is create in the test plan and the field values are then transferred to the server copy by RMI serialisation/deserialisation", "target": 0}
{"idx": 10856, "func": "Dump drivers", "target": 0}
{"idx": 10857, "func": "checkcast cast bean", "target": 0}
{"idx": 10858, "func": "i18n[dataTypeOther.sqlOtherType=SQL Other (SQL type 1111)]", "target": 0}
{"idx": 10859, "func": "//{{{ ThreadProgress constructor", "target": 0}
{"idx": 10860, "func": "Listener interfaces", "target": 0}
{"idx": 10861, "func": "Once save is complete, do a few other things", "target": 0}
{"idx": 10862, "func": "thermometerStroke", "target": 0}
{"idx": 10863, "func": "replicate does cascade to uninitialized collections", "target": 0}
{"idx": 10864, "func": "//register for status events", "target": 0}
{"idx": 10865, "func": "TRY PREDECESSORS", "target": 0}
{"idx": 10866, "func": "at end", "target": 0}
{"idx": 10867, "func": "Functions are wrapped in ${ and } //$NON-NLS-1$", "target": 0}
{"idx": 10868, "func": "++modCount //", "target": 0}
{"idx": 10869, "func": "If it is in a resource, form the URI relative to that resource. //", "target": 0}
{"idx": 10870, "func": "@see java.awt.Window#dispose()", "target": 0}
{"idx": 10871, "func": "//test this entity to see if we must query it", "target": 0}
{"idx": 10872, "func": "we check length == 0 for 'load', which does not use load path", "target": 0}
{"idx": 10873, "func": "Separator", "target": 0}
{"idx": 10874, "func": "First of all, let's set up the duplicate hash. This hash contains all the duplicate key for another key. TODO: every duplicate.put() is done twice - but how to avoid this?", "target": 1}
{"idx": 10875, "func": "work-around for this driver, which must have \"dbo\" for schema. The JConnect family of drivers appears to not be affected and can accept a null schema, which is necessary to find tables in other schemas, within the same catalog. Similarly, jTDS 1.2.2 doesn't require this, yet it doesn't return non-dbo schema tables, unfortunately.", "target": 1}
{"idx": 10876, "func": "while more labels or blocks and haven't hit return control", "target": 0}
{"idx": 10877, "func": "//bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);", "target": 0}
{"idx": 10878, "func": "fetch once; must be done under lock (also protects against null)", "target": 0}
{"idx": 10879, "func": "disable max occurrences", "target": 0}
{"idx": 10880, "func": "i18n[mssql.allUDFs=All user-defined functions]", "target": 0}
{"idx": 10881, "func": "line 1652", "target": 0}
{"idx": 10882, "func": "IN FACT, we should probably raise an error, yes?", "target": 1}
{"idx": 10883, "func": "AShape textShape = new TextAShape(\"text\", \"$\" + GridRow.NAME + \"$\", textRect, TextAShape.TYPE_SINGE_LINE, font, fgColor, AtFraction.CENTER, AtStart.START0, Boolean.FALSE);", "target": 0}
{"idx": 10884, "func": "Create this object using the specified port (0 means anonymous)", "target": 0}
{"idx": 10885, "func": "saves / updates don't cascade to uninitialized collections", "target": 0}
{"idx": 10886, "func": "once we find a folder that isn't in the repository, anything below it can be deleted.", "target": 0}
{"idx": 10887, "func": "call workaround", "target": 1}
{"idx": 10888, "func": "currently this is in this try block as it does not work _propertyPanel always has size 0,0", "target": 0}
{"idx": 10889, "func": "//{{{ ScrollLineCount class", "target": 0}
{"idx": 10890, "func": "seems to have spotty LOB suppport", "target": 0}
{"idx": 10891, "func": "Core class that exists in system classpath is ignored, but found in specified classpath", "target": 0}
{"idx": 10892, "func": "draw the background", "target": 0}
{"idx": 10893, "func": "//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "target": 0}
{"idx": 10894, "func": "get \"self\"", "target": 0}
{"idx": 10895, "func": "This property is a Boolean, to allow three values, so it can match MRI's nil, false and true", "target": 0}
{"idx": 10896, "func": "//{{{ addExtendedAttributes() method", "target": 0}
{"idx": 10897, "func": "MAC OS 9 and previous //TODO: I have no idea how to get it, someone must fix it", "target": 1}
{"idx": 10898, "func": "empty dataset returns null", "target": 0}
{"idx": 10899, "func": "this function has a template -> restore output, apply the template and write the result out TODO: Downcast to avoid using an interface? Yuck.", "target": 1}
{"idx": 10900, "func": "jump back to the top of the main body of this closure", "target": 0}
{"idx": 10901, "func": "//bshinit,log);", "target": 0}
{"idx": 10902, "func": "no targetFilePos", "target": 0}
{"idx": 10903, "func": "Go the other way to lookup an element by path", "target": 0}
{"idx": 10904, "func": "this regular expression should cover anything from a@a.pt or a@a.com to a@a.info. Permits usage of invalid top domains though. <p> [bug] fdietz: added \".\" and \"-\" as regular characters (example:mail@toplevel.mail.de) <p> TODO: see if we can replace the matching code with Ristretto stuff", "target": 1}
{"idx": 10905, "func": "Same as regular <copy> task... see at end-of-file!", "target": 0}
{"idx": 10906, "func": "64-bit number, native (as fixnum)", "target": 0}
{"idx": 10907, "func": "-1 is the code for a failed sample. //", "target": 0}
{"idx": 10908, "func": "more initialization", "target": 0}
{"idx": 10909, "func": "attributPanel.add(imapPanel, BorderLayout.CENTER);", "target": 0}
{"idx": 10910, "func": "//no non-whitechars in text? remove op!", "target": 0}
{"idx": 10911, "func": "If type already assignable no cast necessary We do this last to allow various errors above to be caught. e.g cast Primitive.Void to Object would pass this", "target": 0}
{"idx": 10912, "func": "CREATE VIEW <viewname>[(<viewcolumn>,..) AS SELECT ... FROM ... [WHERE Expression] [ORDER BY orderExpression [, ...]] [LIMIT <limit> [OFFSET <offset>]];", "target": 0}
{"idx": 10913, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsSchemasInDataManipulation()", "target": 0}
{"idx": 10914, "func": "now some data...", "target": 0}
{"idx": 10915, "func": "The UML 2.1.1 metamodel is a MOF 2.0 CMOF model, so we want nodes with tag=\"ownedMember\", attribute xmi:type=\"cmof:Class\" TODO: This code is untested - tfm", "target": 1}
{"idx": 10916, "func": "TODO: Work out why KLUDGE: For some reason, I am not able to get the sheet to size correctly. It always displays with a size that causes the sub-panels to have their scrollbars showing. Add a bit of an increase in the size of the panel so the scrollbars are not displayed.", "target": 1}
{"idx": 10917, "func": "@see org.tigris.gef.graph.BaseGraphModel#getOwner(java.lang.Object)", "target": 0}
{"idx": 10918, "func": "//{{{ clone() method", "target": 0}
{"idx": 10919, "func": "TODO: This appears to expect that the UML 1.3 tag name will appear as a property name in an event, but with the UML 1.4 switch to TagDefinitions, this won't work", "target": 1}
{"idx": 10920, "func": "end class CrIllegalName", "target": 0}
{"idx": 10921, "func": "//Set the target server and name space", "target": 0}
{"idx": 10922, "func": "$NON-NLS-1$ //--", "target": 0}
{"idx": 10923, "func": "For arrays, consider the element type. //", "target": 0}
{"idx": 10924, "func": "If we are enabling the Edit-->Remove menu item, then we also need to enable the Edit menu. The Edit menu may already be enabled, but there's no harm it trying to enable it again.", "target": 0}
{"idx": 10925, "func": "USED BY PGML.tee", "target": 0}
{"idx": 10926, "func": "either layer or owner was null", "target": 0}
{"idx": 10927, "func": "Handle line number", "target": 0}
{"idx": 10928, "func": "This should not be necessary, but let's be sure:", "target": 0}
{"idx": 10929, "func": "i18n[i18n.parseSuccess=Added {0} new and {1} replaced properties to {2}]", "target": 0}
{"idx": 10930, "func": "interiorGap...", "target": 0}
{"idx": 10931, "func": "//test for and handle a forced process death", "target": 0}
{"idx": 10932, "func": "(non-Javadoc) @see org.columba.addressbook.model.IEmailModel#getAddress()", "target": 0}
{"idx": 10933, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsLimitedOuterJoins()", "target": 0}
{"idx": 10934, "func": "get source references", "target": 0}
{"idx": 10935, "func": "//XMLTypePackage", "target": 0}
{"idx": 10936, "func": "try to get errno value out of the class", "target": 0}
{"idx": 10937, "func": "line 912", "target": 0}
{"idx": 10938, "func": "Args", "target": 0}
{"idx": 10939, "func": "// private boolean _showLineNumbers = false;", "target": 0}
{"idx": 10940, "func": "See SQLSettingsInitializer to find out how fonts are handled in the Netbeans editor. _textArea.setFont(font);", "target": 0}
{"idx": 10941, "func": "_logContentsTxt.setEditable(false);", "target": 0}
{"idx": 10942, "func": "TODO: This has different semantics than everything else", "target": 1}
{"idx": 10943, "func": "max", "target": 0}
{"idx": 10944, "func": "TODO: Lets build this into a separate buildToolbar method", "target": 1}
{"idx": 10945, "func": "updates ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 10946, "func": "If the workspace node has null as well, OK; if not we've been modified in a non-comparable manner, which we have to treat as us being newer", "target": 0}
{"idx": 10947, "func": "root-level logic", "target": 0}
{"idx": 10948, "func": "//{{{ initPlugins() method", "target": 0}
{"idx": 10949, "func": "add Figs to the FigNode in back-to-front order", "target": 0}
{"idx": 10950, "func": "i18n[LogPanel.logMsg=Logged by {0} at {1}:\\n\\n {2}]", "target": 0}
{"idx": 10951, "func": "Write the capacity. //", "target": 0}
{"idx": 10952, "func": "We can not optimize.", "target": 0}
{"idx": 10953, "func": "Catches a mouseevent and calls mySingleClick and myDoubleClick if a tab is clicked which is selected. @see java.awt.event.MouseListener#mouseClicked(MouseEvent)", "target": 0}
{"idx": 10954, "func": "ClassFinder needs the classpath", "target": 0}
{"idx": 10955, "func": "default to element set if no elements() specified", "target": 0}
{"idx": 10956, "func": "resize the FigNode to accommodate the new text", "target": 0}
{"idx": 10957, "func": "@see javax.swing.tree.TreeModel#getRoot()", "target": 0}
{"idx": 10958, "func": "Don't display Request headers label if rh is null or empty", "target": 0}
{"idx": 10959, "func": "@see javax.swing.tree.TreeNode#isLeaf()", "target": 0}
{"idx": 10960, "func": "Create an initialize copy command for each of the created objects. //", "target": 0}
{"idx": 10961, "func": "Create the key from the key bytes", "target": 0}
{"idx": 10962, "func": "Setup the table", "target": 0}
{"idx": 10963, "func": "value is of type Collection<JMeterProperty>", "target": 0}
{"idx": 10964, "func": "Just a Test", "target": 0}
{"idx": 10965, "func": "//result = false;", "target": 0}
{"idx": 10966, "func": "use body as is", "target": 0}
{"idx": 10967, "func": "should get no output at all", "target": 0}
{"idx": 10968, "func": "use ImageIcon because it waits for the image to load...", "target": 0}
{"idx": 10969, "func": "add interection point to new polygon", "target": 0}
{"idx": 10970, "func": "cancel/close button", "target": 0}
{"idx": 10971, "func": "restore the default time zone", "target": 0}
{"idx": 10972, "func": "@see org.argouml.uml.ui.UMLComboBoxModel2#buildModelList()", "target": 0}
{"idx": 10973, "func": "Create a new file when the last is closed", "target": 0}
{"idx": 10974, "func": "if there is a tool tip, we expect it to generate the title and alt values, so we only add an empty alt if there is no tooltip", "target": 0}
{"idx": 10975, "func": "We can't undo it, so we'd better give up. //", "target": 0}
{"idx": 10976, "func": "If the value index set, there's no index to return. //", "target": 0}
{"idx": 10977, "func": "//HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());", "target": 0}
{"idx": 10978, "func": "domain labels can contain alphanumerics and '-\" but must start and end with an alphanumeric", "target": 0}
{"idx": 10979, "func": "i18n[sqlval.user=User:]", "target": 0}
{"idx": 10980, "func": "Loop through source records...", "target": 0}
{"idx": 10981, "func": "next statement is necessary to update the textfield if the selection is equal to what was allready selected", "target": 0}
{"idx": 10982, "func": "//ADD THOSE MANUALLY //F0000..FFFFD; \"Private Use\", //100000..10FFFD; \"Private Use\" //FFF0..FFFD; \"Specials\",", "target": 0}
{"idx": 10983, "func": "replace all occurances of OFFENDER with the name of the first offender", "target": 0}
{"idx": 10984, "func": "i18n[oracle.instanceDetails=Details]", "target": 0}
{"idx": 10985, "func": "registerColumnType(Types.LONGVARCHAR, 31982, \"varchar($l)\");", "target": 0}
{"idx": 10986, "func": "line 732", "target": 0}
{"idx": 10987, "func": "cancel", "target": 0}
{"idx": 10988, "func": "i18n[ImportFileDialog.importFileColumn=Import file column]", "target": 0}
{"idx": 10989, "func": "SSS FIXME: Where is this set up? How is this diff from ClassVarDeclNode??", "target": 1}
{"idx": 10990, "func": "redraw the whole table because a second shortcut might have changed, too", "target": 0}
{"idx": 10991, "func": "TODO: allow the user to specify ignore case or preserve case.", "target": 1}
{"idx": 10992, "func": "i18n[DataSetUpdateableTableModelImpl.info.deletecancelled=Delete canceled at user request.]", "target": 0}
{"idx": 10993, "func": "can't cache this stuff either (per-invocation) we are given a map of user-alias -> lock mode create a new map of sql-alias -> lock mode", "target": 0}
{"idx": 10994, "func": "Handle Ruby exceptions (RaiseException)", "target": 0}
{"idx": 10995, "func": "TODO: This should happen in GEF", "target": 1}
{"idx": 10996, "func": "MySQL driver gets unhappy when we use the same PreparedStatement to bind null and non-null LOB variables without clearing the parameters first.", "target": 0}
{"idx": 10997, "func": "get reference", "target": 0}
{"idx": 10998, "func": "//tableName = mappings.getNamingStrategy().propertyToTableName( className, path );", "target": 0}
{"idx": 10999, "func": "//{{{ addScrollListener() method", "target": 0}
{"idx": 11000, "func": "These are not really used by timeout, but exposed for compatibility", "target": 0}
{"idx": 11001, "func": "FIXME: the code below is a copy of RubyIO.puts, and we should avoid copy-paste.", "target": 1}
{"idx": 11002, "func": "Read the character", "target": 0}
{"idx": 11003, "func": "//peek ahead to see if the next char is a property or not //not a property: insert the char as a literal", "target": 0}
{"idx": 11004, "func": "This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements", "target": 0}
{"idx": 11005, "func": "Override superclass to do nothing. Fill property cannot be changed.", "target": 0}
{"idx": 11006, "func": "if it's a non source file, copy it if a later date than the dest if it's a source file, see if the destination class file needs to be recreated via compilation", "target": 0}
{"idx": 11007, "func": "hasn't implemented DomainInfo, so iterate...", "target": 0}
{"idx": 11008, "func": "@see javax.swing.tree.TreeModel#isLeaf(java.lang.Object)", "target": 0}
{"idx": 11009, "func": "rerouting the source:", "target": 0}
{"idx": 11010, "func": "the Interceptor handled the dirty checking", "target": 0}
{"idx": 11011, "func": "SignalFacade", "target": 0}
{"idx": 11012, "func": "Remove the collection of replacements. //", "target": 0}
{"idx": 11013, "func": "Did sample succeed?", "target": 0}
{"idx": 11014, "func": "Test for boolean equals(Object)", "target": 0}
{"idx": 11015, "func": "Use default formatting for any other type of UML element", "target": 0}
{"idx": 11016, "func": "Here we create an \"anonymous\" exception type used for unrolling the stack. MRI creates a new one for every call to timeout, which can be costly. We opt to use a single exception type for all cases to avoid this overhead.", "target": 0}
{"idx": 11017, "func": "Use special field ip source address (for pseudo 'ip spoofing')", "target": 0}
{"idx": 11018, "func": "Copy for Opera", "target": 0}
{"idx": 11019, "func": "XXX - why not simply new File(dir, filename)?", "target": 1}
{"idx": 11020, "func": "dummy bodies for default impls", "target": 0}
{"idx": 11021, "func": "inner joins can be abbreviated to 'join'", "target": 0}
{"idx": 11022, "func": "For consistency with attribute and operation, give it a default name and location", "target": 0}
{"idx": 11023, "func": "If we fall out, no matches.", "target": 0}
{"idx": 11024, "func": "//i18n[ColumnDetailsDialog.executeButtonLabel=Execute]", "target": 0}
{"idx": 11025, "func": "i18n[ColorPropertiesPanel.toolbarBackgroundColorChooserDialogTitle=Select Background Color for Toolbar]", "target": 0}
{"idx": 11026, "func": "@see org.argouml.cognitive.Poster#snooze()", "target": 0}
{"idx": 11027, "func": "add column to JTable column model", "target": 0}
{"idx": 11028, "func": "TODO: In UML2.x Event has no parameters. The Event metaclass in UML1.x corresponds to the Trigger metaclass in UML2.x (see UML Superstructure page 456).", "target": 1}
{"idx": 11029, "func": "Mix-ins are everything after the base class. //", "target": 0}
{"idx": 11030, "func": "create the generic jar first", "target": 0}
{"idx": 11031, "func": "//i18n[ColumnListDialog.editSQLButtonLabel=Edit SQL]", "target": 0}
{"idx": 11032, "func": "redo the markup since nodes changed now", "target": 0}
{"idx": 11033, "func": "@see org.argouml.model.ModelImplementation#getCoreFactory()", "target": 0}
{"idx": 11034, "func": "Test sending data as UTF-8, with values that needs to be urlencoded", "target": 0}
{"idx": 11035, "func": "swallow it, and continue to roll back JTA transaction", "target": 0}
{"idx": 11036, "func": "Following methods we don't delegate since they have so little logic it's clearer to just implement them here", "target": 0}
{"idx": 11037, "func": "t1 depends on t2", "target": 0}
{"idx": 11038, "func": "find optimum height, then map to range", "target": 0}
{"idx": 11039, "func": "build the command line from what we got the format is ss History elements [-H] [-L] [-N] [-O] [-V] [-Y] [-#] [-?] as specified in the SS.EXE help", "target": 0}
{"idx": 11040, "func": "close output stream", "target": 0}
{"idx": 11041, "func": "toggle autoCommit to false if set", "target": 0}
{"idx": 11042, "func": "//if we found a TestPlan, then we are on our way to the TestFragment", "target": 0}
{"idx": 11043, "func": "//TODO: move these to a new JoinableType abstract class, //extended by EntityType and PersistentCollectionType:", "target": 1}
{"idx": 11044, "func": "typeName", "target": 0}
{"idx": 11045, "func": "<- this is the code that actually COPIES the pixels", "target": 0}
{"idx": 11046, "func": "Enable/Disable actions that require open session frames.", "target": 0}
{"idx": 11047, "func": "calculate sub-plot area", "target": 0}
{"idx": 11048, "func": "number Panel", "target": 0}
{"idx": 11049, "func": "must not be a directory", "target": 0}
{"idx": 11050, "func": "the first initialization must precede creation of the ValueSet array: establishes length of each array", "target": 0}
{"idx": 11051, "func": "Set namespace so buildAssocationRole works", "target": 0}
{"idx": 11052, "func": "Throw an Exception to ensure caller knows ...", "target": 0}
{"idx": 11053, "func": "load contents into document", "target": 0}
{"idx": 11054, "func": "add buttons to button panel", "target": 0}
{"idx": 11055, "func": "i18n[oracle.refreshSecons=(seconds)]", "target": 0}
{"idx": 11056, "func": "select node", "target": 0}
{"idx": 11057, "func": "remove all memorized search folders", "target": 0}
{"idx": 11058, "func": "copy raised signals:", "target": 0}
{"idx": 11059, "func": "handle ASCII chars Irrespective of the radix, the second byte will always be a space when the data is displayed as a single ASCII character.", "target": 0}
{"idx": 11060, "func": "line 1282", "target": 0}
{"idx": 11061, "func": "//xml is the entity name", "target": 0}
{"idx": 11062, "func": "The owner is already linked to the component", "target": 0}
{"idx": 11063, "func": "End of EjbcException inner class", "target": 0}
{"idx": 11064, "func": "is message marked as spam", "target": 0}
{"idx": 11065, "func": "let's load the current shortcut from the configuration (as a string)", "target": 0}
{"idx": 11066, "func": "//{{{ isFoldEnd() method", "target": 0}
{"idx": 11067, "func": "DB2Sqlca sqlca = ((DB2Diagnosable) t).getSqlca();", "target": 0}
{"idx": 11068, "func": "line 1694", "target": 0}
{"idx": 11069, "func": "Get the filename of vendor specific descriptor", "target": 0}
{"idx": 11070, "func": "@JRubyMethod(name = \"new\", meta = true, visibility = Visibility.PRIVATE)", "target": 0}
{"idx": 11071, "func": "addEnterExitOverride(outlineAShape, outlineAShape, AShape.A_PAINT, moOutlinePaint, false, true);", "target": 0}
{"idx": 11072, "func": "Add tryMatch to list of possibilities.", "target": 0}
{"idx": 11073, "func": "Trailing file", "target": 0}
{"idx": 11074, "func": "Split string provided", "target": 0}
{"idx": 11075, "func": "This is almost always already interned, since it will be called with a symbol in most cases but when created from Java code, we might get an argument that needs to be interned. addAccessor has as a precondition that the string MUST be interned", "target": 0}
{"idx": 11076, "func": "remove plot2, but plot1 is removed instead", "target": 0}
{"idx": 11077, "func": "We only save markers to VFS's that support deletion. Otherwise, we will accumilate stale marks files.", "target": 0}
{"idx": 11078, "func": "//{{{ getActionBar() method", "target": 0}
{"idx": 11079, "func": "create temporary folder in \"<your-config-folder>/mail/\"", "target": 0}
{"idx": 11080, "func": "Code duplicated from getPageSize()", "target": 0}
{"idx": 11081, "func": "remove old data", "target": 0}
{"idx": 11082, "func": "if entry starts with a slash, skip it since classloader resources never start with a /", "target": 0}
{"idx": 11083, "func": "i18n[sqlbookmark.deleteConfirm=Do you really wish to delete the selected bookmark?]", "target": 0}
{"idx": 11084, "func": "TODO : will need reference to session factory to fully complete HHH-1907", "target": 1}
{"idx": 11085, "func": "Buffers", "target": 0}
{"idx": 11086, "func": "//$JUnit-BEGIN$", "target": 0}
{"idx": 11087, "func": "delete folder from your harddrive", "target": 0}
{"idx": 11088, "func": "force a redraw", "target": 0}
{"idx": 11089, "func": "//dbNameDialectMap.put(\"DB2/390\", db2390Dialect); //dbNameDialectMap.put(\"DB2/400\", db2400Dialect);", "target": 0}
{"idx": 11090, "func": "Pop it off the stack. //", "target": 0}
{"idx": 11091, "func": "Listener objects //", "target": 0}
{"idx": 11092, "func": "can safely use '/' because Windows understands '/' as separator", "target": 0}
{"idx": 11093, "func": "List theList = new java.util.ArrayList(); protected List delegateList() { return theList; }", "target": 0}
{"idx": 11094, "func": "Don't bother", "target": 0}
{"idx": 11095, "func": "For each mapping being added... //", "target": 0}
{"idx": 11096, "func": "Register the handler for focus listening. This handler will only notify the registered when the text changes from when the focus is gained to when it is lost.", "target": 0}
{"idx": 11097, "func": "create a non-unique index on mychar", "target": 0}
{"idx": 11098, "func": "//DatabaseObjectType.SEQUENCE_TYPE_DBO=Sequence Type", "target": 0}
{"idx": 11099, "func": "\\M-X, \\M-\\C-X, \\M-\\cX", "target": 0}
{"idx": 11100, "func": "setBase()", "target": 0}
{"idx": 11101, "func": "happens when 'is' comes from a zip file", "target": 0}
{"idx": 11102, "func": "Find the coding table which is best for this group, and record its identity in the selector table.", "target": 0}
{"idx": 11103, "func": "tick label font", "target": 0}
{"idx": 11104, "func": "Just use the first one of the possible many charsets", "target": 0}
{"idx": 11105, "func": "Add an EditBus component that will reload edit modes and macros if they are changed from within the editor", "target": 0}
{"idx": 11106, "func": "support multiple packages", "target": 0}
{"idx": 11107, "func": "setup a user defined profile", "target": 0}
{"idx": 11108, "func": "Made following change from OCL in UML 1.4 section 2.9.3.22: CollaborationInstance -> CollaborationInstanceSet", "target": 0}
{"idx": 11109, "func": "do the search", "target": 0}
{"idx": 11110, "func": "//TODO: merge into one method!", "target": 1}
{"idx": 11111, "func": "Find the modeled package for the name and look up the name there. //", "target": 0}
{"idx": 11112, "func": "fill under the curve...", "target": 0}
{"idx": 11113, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo#getCatalogName()", "target": 0}
{"idx": 11114, "func": "Don't really unset it.", "target": 0}
{"idx": 11115, "func": "LF -> EOL", "target": 0}
{"idx": 11116, "func": "create scrollapen", "target": 0}
{"idx": 11117, "func": "Don't remove the adapter if the object is in a different resource and that resource (and hence all its contents) are being cross referenced. //", "target": 0}
{"idx": 11118, "func": "//{{{ FoldHandler() constructor", "target": 0}
{"idx": 11119, "func": "TODO: Should we handle <<access>> and <<import>>?", "target": 1}
{"idx": 11120, "func": "//MappingPackage ePackage = ((FunctionPair)msg.getNotifier()).ePackageMapping();", "target": 0}
{"idx": 11121, "func": "compile into array", "target": 0}
{"idx": 11122, "func": "Make sure the module we include does not already exist", "target": 0}
{"idx": 11123, "func": "create composer model", "target": 0}
{"idx": 11124, "func": "un-iconify using JDK 1.3 API", "target": 0}
{"idx": 11125, "func": "Revoke permission to write user.home (granted above via user.), still able to read though. and the default granted permission to read os.name.", "target": 0}
{"idx": 11126, "func": "Build the module body", "target": 0}
{"idx": 11127, "func": "line 613", "target": 0}
{"idx": 11128, "func": "get the Hashvalues", "target": 0}
{"idx": 11129, "func": "// Logger for this class. // private final static ILogger s_log = // LoggerController.createLogger(AlterTableCommand.class);", "target": 0}
{"idx": 11130, "func": "return the stack unfiltered", "target": 0}
{"idx": 11131, "func": "//{{{ removePosition() method", "target": 0}
{"idx": 11132, "func": "end setting whole list", "target": 0}
{"idx": 11133, "func": "make all buttons the same size", "target": 0}
{"idx": 11134, "func": "build the command line from what we got the format is cleartool lsco [options...] [viewpath ...] as specified in the CLEARTOOL.EXE help", "target": 0}
{"idx": 11135, "func": "a collection loaded in the current session can not possibly be the collection belonging to the entity passed to update()", "target": 0}
{"idx": 11136, "func": "This should only be possible if the caches are constructor injected", "target": 0}
{"idx": 11137, "func": "save the profile into a xmi file", "target": 0}
{"idx": 11138, "func": "Maps to contain page and form encodings TODO - do these really need to be shared between all Proxy instances?", "target": 1}
{"idx": 11139, "func": "do nothing here", "target": 0}
{"idx": 11140, "func": "TODO - removes the nodes from the CheckDirty map - should it be done later, in case some can't be removed?", "target": 1}
{"idx": 11141, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsOrderByUnrelated()", "target": 0}
{"idx": 11142, "func": "just confirm args length == required", "target": 0}
{"idx": 11143, "func": "If tick overlap when cycling, update last tick too", "target": 0}
{"idx": 11144, "func": "initialize system structures (just to be safe)", "target": 0}
{"idx": 11145, "func": "TODO: This is currently duplicated from MetaDataCache - must find a common place in model facade", "target": 1}
{"idx": 11146, "func": "vertical orientation", "target": 0}
{"idx": 11147, "func": "Prefix for the JCC SqlException class name", "target": 0}
{"idx": 11148, "func": "gbc.gridheight = 10;", "target": 0}
{"idx": 11149, "func": "FIXME: create AttrReaderMethod, AttrWriterMethod, for faster attr access", "target": 1}
{"idx": 11150, "func": "We will use an xmi:Extension element for these", "target": 0}
{"idx": 11151, "func": "Note: this implementation is temporary. We currently keep a flat namespace of the base name of classes. i.e. BeanShell cannot be in the process of defining two classes in different packages with the same base name. To remove this limitation requires that we work through namespace imports in an analogous (or using the same path) as regular class import resolution. This workaround should handle most cases so we'll try it for now.", "target": 1}
{"idx": 11152, "func": "calling CopyMessageCommand.execute() here! //super.execute(worker);", "target": 0}
{"idx": 11153, "func": "//{{{ HyperSearchRequest constructor", "target": 0}
{"idx": 11154, "func": "///////////////Transaction Controller - parent ////////////////", "target": 0}
{"idx": 11155, "func": "@see org.argouml.model.ModelImplementation#getChangeableKind()", "target": 0}
{"idx": 11156, "func": "update popup menu based on searchterm", "target": 0}
{"idx": 11157, "func": "No image is a good default. //", "target": 0}
{"idx": 11158, "func": "log.debug(\"data[\"+s+\"][\"+idx+\"]: \" + data[s][idx]);", "target": 0}
{"idx": 11159, "func": "//{{{ getFileNameNoExtension() method", "target": 0}
{"idx": 11160, "func": "0000..007F;", "target": 0}
{"idx": 11161, "func": "Install the factory for creating SQL entry text controls.", "target": 0}
{"idx": 11162, "func": "either autoWidth is off or autoIntervalWidth was not set.", "target": 0}
{"idx": 11163, "func": "//{{{ EditServer constructor", "target": 0}
{"idx": 11164, "func": "Find the WHERE; if there is no WHERE, find the FROM...", "target": 0}
{"idx": 11165, "func": "return warnMultiReturnNil(ruby);", "target": 0}
{"idx": 11166, "func": "exception instructions", "target": 0}
{"idx": 11167, "func": "Force TestFragment to only be pastable under a Test Plan", "target": 0}
{"idx": 11168, "func": "note that it might be better to iterate the snapshot but this is safe, assuming the user implements equals() properly, as required by the Set contract!", "target": 0}
{"idx": 11169, "func": "EBComponent implementation //", "target": 0}
{"idx": 11170, "func": "cast to Folder", "target": 0}
{"idx": 11171, "func": "Just append all the parameter values, and use that as the post body", "target": 0}
{"idx": 11172, "func": "Write a warning message:", "target": 0}
{"idx": 11173, "func": "reuse signal event:", "target": 0}
{"idx": 11174, "func": "final Object scope,", "target": 0}
{"idx": 11175, "func": "//{{{ DockableWindowCompare class", "target": 0}
{"idx": 11176, "func": "try a Double.NEGATIVE_INFINITY", "target": 0}
{"idx": 11177, "func": "In other GUI component, clearGUI resets the value to defaults one as there is one GUI per Element With TestBeanGUI as it's shared, its default values are only known here, we must call setValues with element (as it holds default values) otherwise we will get values as computed by customizer reset and not default ones", "target": 0}
{"idx": 11178, "func": "Ignore empty file specs", "target": 0}
{"idx": 11179, "func": "Make sure we have a root model for TagDefinitions to get put in.", "target": 0}
{"idx": 11180, "func": "line 1261", "target": 0}
{"idx": 11181, "func": "standard ResourceBundle behaviour", "target": 0}
{"idx": 11182, "func": "Now attach Java-related extras to core classes", "target": 0}
{"idx": 11183, "func": "\"-Dstupid=\",\"-c\"", "target": 0}
{"idx": 11184, "func": "Can happen if called during test closedown", "target": 0}
{"idx": 11185, "func": "TODO: Can we delegate this to a specialist FigName class?", "target": 1}
{"idx": 11186, "func": "end class TabChecklist", "target": 0}
{"idx": 11187, "func": "A complex internal transition", "target": 0}
{"idx": 11188, "func": "i18n[favs.nameMustNotBeBlank=Name cannot be blank.]", "target": 0}
{"idx": 11189, "func": "For unit tests, @see TestCSVSaveService", "target": 0}
{"idx": 11190, "func": "Begin Cached result structures These are optimizations", "target": 0}
{"idx": 11191, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#doesMaxRowSizeIncludeBlobs()", "target": 0}
{"idx": 11192, "func": "content-type", "target": 0}
{"idx": 11193, "func": "Check Internet Connection", "target": 0}
{"idx": 11194, "func": "Truncate the file", "target": 0}
{"idx": 11195, "func": "variables ======================================================================== non visible ------------------------------------------------------------------------ Logger for this class", "target": 0}
{"idx": 11196, "func": "First parse the SQL string //", "target": 0}
{"idx": 11197, "func": "Create the menu item", "target": 0}
{"idx": 11198, "func": "Determine size of grid to tile into. e.g 3X3 for 9 cells.", "target": 0}
{"idx": 11199, "func": "number of child nodes", "target": 0}
{"idx": 11200, "func": "Calls <code>validateXXX</code> for the corresponding classifier of the model. <!-- begin-user-doc --> <!-- end-user-doc --> @generated", "target": 0}
{"idx": 11201, "func": "(non-Javadoc) @see org.columba.addressbook.facade.IGroupItem#setContacts(java.util.List)", "target": 0}
{"idx": 11202, "func": "Process all subfolders recursively if recursion is on.", "target": 0}
{"idx": 11203, "func": "Compute MTF values for the selectors.", "target": 0}
{"idx": 11204, "func": "Store to temp so it does null out on us mid-stream", "target": 0}
{"idx": 11205, "func": "Informix: when no database is given in the connect url, then no table types are returned. The catalog can be changed which will select a database, but by that time it is too late.", "target": 0}
{"idx": 11206, "func": "only add Summariser if it can not be shared with the ResultCollector", "target": 0}
{"idx": 11207, "func": "Setters and Getters for each field.", "target": 0}
{"idx": 11208, "func": "While (blank), previous sample OK - should loop until false", "target": 0}
{"idx": 11209, "func": "otherwise, it's a literal array", "target": 0}
{"idx": 11210, "func": "//sql = query;", "target": 0}
{"idx": 11211, "func": "if this worked, remove it from tree.xml configuration, too", "target": 0}
{"idx": 11212, "func": "selected rows before updating the model -> used later to restore the selection", "target": 0}
{"idx": 11213, "func": "sql contains columns from multiple tables, so we cannot use all of the columns in a WHERE clause and it becomes difficult to know which table (or tables!) an edited column belongs to. Therefore limit the output to be read-only", "target": 0}
{"idx": 11214, "func": "Sessions.", "target": 0}
{"idx": 11215, "func": "Segment fromSegment = getSegment(from); fromSegment.inc(); Segment toSegment = getSegment(to); toSegment.dec();", "target": 0}
{"idx": 11216, "func": "FIXME we should probably still be dyncalling 'write' here", "target": 1}
{"idx": 11217, "func": "No need to log normally, as we set the status $NON-NLS-1$", "target": 0}
{"idx": 11218, "func": "//{{{ JARClassLoader constructor", "target": 0}
{"idx": 11219, "func": "remove initial \", \"", "target": 0}
{"idx": 11220, "func": "string to search", "target": 0}
{"idx": 11221, "func": "in new api, protocol always equals name", "target": 0}
{"idx": 11222, "func": "- don't do these checks while a save is in progress, because for a moment newModTime will be greater than oldModTime, due to the multithreading - only supported on local file system", "target": 0}
{"idx": 11223, "func": "TODO: this must be wrong...", "target": 1}
{"idx": 11224, "func": "//{{{ Model class", "target": 0}
{"idx": 11225, "func": "t2 depends on t1", "target": 0}
{"idx": 11226, "func": "If it is a file channel, then we can pre-allocate the output buffer to the total size of buffered + remaining bytes in file //", "target": 0}
{"idx": 11227, "func": "delegate this way around to support subclasses that overwrite getFile", "target": 0}
{"idx": 11228, "func": "Test TestElements - create the suite", "target": 0}
{"idx": 11229, "func": "Return the original URI.", "target": 0}
{"idx": 11230, "func": "//{{{ Request types", "target": 0}
{"idx": 11231, "func": "saves current position in data List", "target": 0}
{"idx": 11232, "func": "//{{{ getModel() method", "target": 0}
{"idx": 11233, "func": "Utility methods", "target": 0}
{"idx": 11234, "func": "//rely on RMIC being on the path", "target": 0}
{"idx": 11235, "func": "space for more argumentativeness command.addArgument(); command.addArgument();", "target": 0}
{"idx": 11236, "func": "//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc", "target": 0}
{"idx": 11237, "func": "//i18n[ColumnDetailsDialog.addColumnTitle=Add Column]", "target": 0}
{"idx": 11238, "func": "circle", "target": 0}
{"idx": 11239, "func": "1!", "target": 0}
{"idx": 11240, "func": "//{{{ IntegerArray constructor", "target": 0}
{"idx": 11241, "func": "<p>A valid scheme may be null, or consist of a single letter followed by any number of letters, numbers, and the following characters: <code>+ - .</code>", "target": 0}
{"idx": 11242, "func": "Numeric Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 11243, "func": "if no batch, use \"foo = ? and bar = ?\"", "target": 0}
{"idx": 11244, "func": "Certain types of fixed text (e.g. a FigStereotype with a keyword) may not have an owner", "target": 0}
{"idx": 11245, "func": "Override the defualt schemes as necessary", "target": 0}
{"idx": 11246, "func": "FIXME This function needs documentation Constructor @param String Name", "target": 1}
{"idx": 11247, "func": "enable selection", "target": 0}
{"idx": 11248, "func": "description", "target": 0}
{"idx": 11249, "func": "Remember it. //", "target": 0}
{"idx": 11250, "func": "i18n[CreateDriverAction.error.loadDefaultDrivers]", "target": 0}
{"idx": 11251, "func": "//{{{ getRegister() method", "target": 0}
{"idx": 11252, "func": "Copy the name //", "target": 0}
{"idx": 11253, "func": "maybe the plugin wasn't loaded correctly -> use default row = new MarkActionRow(this,action);", "target": 0}
{"idx": 11254, "func": "not so backwards-compatible here, but no one should have been calling this anyway.", "target": 0}
{"idx": 11255, "func": "1646886: If we've already seen the parameter, don't create another instance as this will force the user to enter the same value twice. Add the previous instance to itemsInSql though so that the parameters value gets propagated to the right spot(s) in the SQL statement.", "target": 0}
{"idx": 11256, "func": "TODO (@author karlpeder): Guess that right thing to do is to get height as getDrawingSize().getHeight(), since this should take top- and bottom margin of this print object into account. But the height seems not to be set correctly in computePositionAndSize() (20030604, karlpeder)", "target": 1}
{"idx": 11257, "func": "---- BeanShell specific stuff hereafter ---- //", "target": 0}
{"idx": 11258, "func": "Should behave the same for blank and LAST because success on input", "target": 0}
{"idx": 11259, "func": "(non-Javadoc) @see org.columba.calendar.store.api.IStoreListener#itemRemoved(org.columba.calendar.store.api.StoreEvent)", "target": 0}
{"idx": 11260, "func": "Set toolbar color button", "target": 0}
{"idx": 11261, "func": "tick mark paint...", "target": 0}
{"idx": 11262, "func": "//{{{ removeNotify() method", "target": 0}
{"idx": 11263, "func": "default toolbar", "target": 0}
{"idx": 11264, "func": "read succeeded, so reset the BlobDescriptor to match", "target": 0}
{"idx": 11265, "func": "A Fig designed to be the child of some FigNode or FigEdge to display the stereotypes of the model element represented by the parent Fig. Currently, multiple stereotypes are shown stacked one on top of the other, each enclosed by guillemets.<p> The minimum width of this fig is the largest minimum width of its child figs. The minimum height of this fig is the total minimum height of its child figs.<p> The owner of this Fig is the UML element that is extended with the stereotypes. We are listening to changes to the model: addition and removal of stereotypes. <p> This fig supports showing one keyword as the first \"stereotype\" in the list. <p> There is no way to remove a keyword fig, once added. <p> TODO: Allow for UML2 style display where all stereotypes are displayed in the same guillemet pair and are delimited by commas. The style should be changeable by calling getOrientation(Orientation). The swidget Orientation class can be used for this. @author Bob Tarling", "target": 0}
{"idx": 11266, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsOpenCursorsAcrossCommit()", "target": 0}
{"idx": 11267, "func": "Fill 3 of value (byte) 33 Fill 4 of value (byte) -19 Fill 2 of value (byte) 33", "target": 0}
{"idx": 11268, "func": "SHAPE", "target": 0}
{"idx": 11269, "func": "//rem generate cert for DOMAIN using CA (requires Java7 for gencert) and import it", "target": 0}
{"idx": 11270, "func": "Not implemented in MDR", "target": 0}
{"idx": 11271, "func": "//{{{ getLastPhysicalLine() method", "target": 0}
{"idx": 11272, "func": "@see org.argouml.uml.ui.PropPanel#shouldBeEnabled(java.lang.Object)", "target": 0}
{"idx": 11273, "func": "Regression test for HARMONY-21", "target": 0}
{"idx": 11274, "func": "//{{{ regionMatches() method", "target": 0}
{"idx": 11275, "func": "@see TargetListener#targetRemoved(TargetEvent)", "target": 0}
{"idx": 11276, "func": "specifies valid elements for an SimpleState to contain", "target": 0}
{"idx": 11277, "func": "(non-Javadoc) @see org.columba.mail.imap.IImapServer#unsubscribeFolder(java.lang.String)", "target": 0}
{"idx": 11278, "func": "//unsupported", "target": 0}
{"idx": 11279, "func": "The user's full name:", "target": 0}
{"idx": 11280, "func": "just the range axis...", "target": 0}
{"idx": 11281, "func": "end class StylePanelFigPackage", "target": 0}
{"idx": 11282, "func": "skip, if filter is disabled", "target": 0}
{"idx": 11283, "func": "non-null Comparators don't appear to be used at present", "target": 0}
{"idx": 11284, "func": "List of ChecklistStatus:es. Indexed on the model element itself. TODO: Should use weak references so that this is forgotten about when the object is removed.", "target": 1}
{"idx": 11285, "func": "//i18n[ColumnDetailsDialog.dialectLabel=Dialect: ]", "target": 0}
{"idx": 11286, "func": "it might still need to apply a collection ordering based on a many-to-many defined order-by...", "target": 0}
{"idx": 11287, "func": "Relatively expensive operation, so do it once", "target": 0}
{"idx": 11288, "func": "This list is reduced, because most search requests can be answered anyway, using locally cached headerfields", "target": 0}
{"idx": 11289, "func": "array creation should use this variant", "target": 0}
{"idx": 11290, "func": "Look for our specification", "target": 0}
{"idx": 11291, "func": "//((IMainFrame) comp).addInternalFrame(taif, false); //taif.setLayer(JLayeredPane.POPUP_LAYER);", "target": 0}
{"idx": 11292, "func": "i18n[CancelStatementThread.cancelFailed=Failed to cancel statement. Perhaps the driver/RDDBMS does not support cancelling statements. See logs for further details ({0})]", "target": 0}
{"idx": 11293, "func": "passive: if not initialized do it now", "target": 0}
{"idx": 11294, "func": "import and external processing can only be done if panel is editable", "target": 0}
{"idx": 11295, "func": "//{{{ getLeadingWhiteSpace() method", "target": 0}
{"idx": 11296, "func": "TODO: We should really test the model instead for this but we have no API yet. Can we just check if the collection to build the JList control implements the List interface?", "target": 1}
{"idx": 11297, "func": "//{{{ BufferIORequest constructor", "target": 0}
{"idx": 11298, "func": "i18n[editWherColsSheet.close=Close]", "target": 0}
{"idx": 11299, "func": "creates a shallow copy of this object", "target": 0}
{"idx": 11300, "func": "compose message body as text/plain", "target": 0}
{"idx": 11301, "func": "@see java.lang.Object#hashCode() This is a rather bad hash solution but with the {@link #equals(Object)} defined as below, it is not possible to do better.", "target": 0}
{"idx": 11302, "func": "ensure that all the symbols are displayed", "target": 0}
{"idx": 11303, "func": "//cancel any current cell editing operations", "target": 0}
{"idx": 11304, "func": "//{{{ getExtendedState() method", "target": 0}
{"idx": 11305, "func": "i18n[CreateTableScriptCommand.error.getprimarykey=Unable to get primary key info for table {0}]", "target": 0}
{"idx": 11306, "func": "i18n[popupeditableIoPanel.exportSuccess=Export Success]", "target": 0}
{"idx": 11307, "func": "######################################################################## ########## events ######################################################################## ------------------------------------------------------------------------", "target": 0}
{"idx": 11308, "func": "Must wrap non-scriptable objects before presenting to Rhino", "target": 0}
{"idx": 11309, "func": "test that the category and description are correct", "target": 0}
{"idx": 11310, "func": "(non-Javadoc) @see org.columba.mail.gui.composer.AbstractEditorController#setViewText(java.lang.String)", "target": 0}
{"idx": 11311, "func": "verify it if it's there", "target": 0}
{"idx": 11312, "func": "======== scrollPane3 ========", "target": 0}
{"idx": 11313, "func": "Restore the original Locale", "target": 0}
{"idx": 11314, "func": "Lines in the file, split into columns", "target": 0}
{"idx": 11315, "func": "update, but dont draw tick marks (needed for stepped colors)", "target": 0}
{"idx": 11316, "func": "if no Message-Id: available create bogus", "target": 0}
{"idx": 11317, "func": "Get the region as the first Region in the State. If there is no region in the StateMachine then create one.", "target": 0}
{"idx": 11318, "func": "----- BuildListener interface methods -----", "target": 0}
{"idx": 11319, "func": "bottom-label-separator", "target": 0}
{"idx": 11320, "func": "(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)", "target": 0}
{"idx": 11321, "func": "no filterlist treenode found -> create a new one", "target": 0}
{"idx": 11322, "func": "broken Eclipse workaround! 24 Febuary 2004", "target": 1}
{"idx": 11323, "func": "If this is just a proxy being resolved... //", "target": 0}
{"idx": 11324, "func": "DEPRECATED FIELDS AND METHODS...", "target": 0}
{"idx": 11325, "func": "check option not supported", "target": 0}
{"idx": 11326, "func": "trying via forName() first to be as close to DriverManager's semantics", "target": 0}
{"idx": 11327, "func": "(non-Javadoc) @see org.columba.mail.imap.IImapServer#fetchUid(org.columba.ristretto.imap.SequenceSet, org.columba.mail.folder.imap.IMAPFolder)", "target": 0}
{"idx": 11328, "func": "Oracle8 and previous define only a \"DATE\" type which is used to represent all aspects of date/time", "target": 0}
{"idx": 11329, "func": "-replace", "target": 0}
{"idx": 11330, "func": "We have to deal with assembly!!! The programmer can be writing little 32 byte chunks for all we know, and we must assemble complete records for writing. REVIEW Maybe this should be in TarBuffer? Could that help to eliminate some of the buffer copying. //", "target": 1}
{"idx": 11331, "func": "Assume that it's not available.", "target": 0}
{"idx": 11332, "func": "if everything went ok, commit the transaction and close the obtained connection handle...", "target": 0}
{"idx": 11333, "func": "separatorStroke", "target": 0}
{"idx": 11334, "func": "Found the full name in imported classes.", "target": 0}
{"idx": 11335, "func": "i18n[popupeditableIoPanel.withCommand=With command:]", "target": 0}
{"idx": 11336, "func": "//{{{ removeCaretListener() method", "target": 0}
{"idx": 11337, "func": "adds the previous Edge to the list of Edges used by this CodeWriter", "target": 0}
{"idx": 11338, "func": "Fill 3 of value (byte) -19 Fill 2 of value (byte) -87 Fill 2 of value (byte) 33 Fill 10 of value (byte) -87 Fill 2 of value (byte) -19 Fill 16 of value (byte) 33", "target": 0}
{"idx": 11339, "func": "//reflection to avoid bootstrap/build problems", "target": 0}
{"idx": 11340, "func": "print the stacktrace in the build file it is always useful... better have too much info than not enough.", "target": 0}
{"idx": 11341, "func": "$NON-NLS-1$ $NON-NLS-1$ Don't try to instantiate these", "target": 0}
{"idx": 11342, "func": "//i18n[ProcedureSourceTab.cLanguageProcMsg=This is a C-language routine. The //source code is unavailable.]", "target": 0}
{"idx": 11343, "func": "tests, if the list substracted with an empty list is equal to itself", "target": 0}
{"idx": 11344, "func": "this is a binary field, so allow for multiple viewing options", "target": 0}
{"idx": 11345, "func": "i18n[ValidatorGlobalPreferencesTab.hint=Preferences for SQL validation]", "target": 0}
{"idx": 11346, "func": "Check how Class definition behaves", "target": 0}
{"idx": 11347, "func": "remove xml config", "target": 0}
{"idx": 11348, "func": "TODO: changed for UML 2.x", "target": 0}
{"idx": 11349, "func": "Skip special properties if required", "target": 0}
{"idx": 11350, "func": "must be top or bottom", "target": 0}
{"idx": 11351, "func": "the class hierarchy structure", "target": 0}
{"idx": 11352, "func": "mouse listener", "target": 0}
{"idx": 11353, "func": "/////////////////////////////////////////////////////////////INCLUDE-EXCLUDE processing ///////////////////////////////////////////////////////////////", "target": 0}
{"idx": 11354, "func": "//{{{ Handle abbrevs of the form abbrev#pos1#pos2#pos3#...", "target": 0}
{"idx": 11355, "func": "the whole clob has been previously read in", "target": 0}
{"idx": 11356, "func": "this rectangle marks the whole modelelement figure; everything is inside it:", "target": 0}
{"idx": 11357, "func": "TODO: We can't have a global \"current\" language NotationProviderFactory2.setCurrentLanguage(oldLanguage);", "target": 1}
{"idx": 11358, "func": "Mark this as newly created. This is to get round the problem with creating figs for loaded comments that had stereotypes. They are saved with their dimensions INCLUDING the stereotype, but since we pretend the stereotype is not visible, we add height the first time we render such a comment. This is a complete fudge, and really we ought to address how comment objects with stereotypes are saved. But that will be hard work.", "target": 0}
{"idx": 11359, "func": "//draw line", "target": 0}
{"idx": 11360, "func": "//removed item in last position", "target": 0}
{"idx": 11361, "func": "Show full path", "target": 0}
{"idx": 11362, "func": "TODO: Generalize this type-checking code into IRubyObject helper.", "target": 1}
{"idx": 11363, "func": "TODO: the following fails due to the XMI writing saving all top level model elements and because even if there was no empty project, by creating a class, the undo mechanism in the project manager will force the creation of an empty project. assertEquals(1, profileModels.size());", "target": 0}
{"idx": 11364, "func": "set the start to 00:00:00", "target": 0}
{"idx": 11365, "func": "default impl", "target": 0}
{"idx": 11366, "func": "The type of DnD object being dragged...", "target": 0}
{"idx": 11367, "func": "keep track of the last letter because we need it for several key decisions", "target": 0}
{"idx": 11368, "func": "heuristic #1", "target": 0}
{"idx": 11369, "func": "These don't appear to work. rowHeaderTableCol1.setResizable(true); rowHeaderTableCol2.setResizable(true); cornerTableCol1.setResizable(true); cornerTableCol2.setResizable(true);", "target": 1}
{"idx": 11370, "func": "figure out how many blank spaces there are before first day of month, and calculate coordinates of first drawn cell", "target": 0}
{"idx": 11371, "func": "@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabSave()", "target": 0}
{"idx": 11372, "func": "This might be invalid or an IPv4address. If it's potentially an IPv4address, backup to just after the last valid character that matches hexseq.", "target": 0}
{"idx": 11373, "func": "method is only ever called from one thread at a time so it's OK to use a static DateFormat", "target": 0}
{"idx": 11374, "func": "notify listeners", "target": 0}
{"idx": 11375, "func": "//assertEquals(\"/\",man.get(0).getPath());", "target": 0}
{"idx": 11376, "func": "Mask should contain all types (but not NOT)", "target": 0}
{"idx": 11377, "func": "TODO: Generalize extension and remove critic specific stuff", "target": 1}
{"idx": 11378, "func": "$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$", "target": 0}
{"idx": 11379, "func": "Paths which end in \"/\" or \"\\\\\" must be stripped off.", "target": 0}
{"idx": 11380, "func": "As a last resort, get the length of the longest value in the specified column.", "target": 0}
{"idx": 11381, "func": "number of samples taken", "target": 0}
{"idx": 11382, "func": "//_driversListWindow.nowVisible(true);", "target": 0}
{"idx": 11383, "func": "input scanner last recognized token lookahead token", "target": 0}
{"idx": 11384, "func": "work out the space required by the domain axis...", "target": 0}
{"idx": 11385, "func": "set MetaProfile as a default profile", "target": 0}
{"idx": 11386, "func": "Make use of the default visibility, which is public... TODO: centralise this knowledge. @see org.argouml.uml.diagram.ui.AbstractActionRadioMenuItem#valueOfTarget(java.lang.Object)", "target": 1}
{"idx": 11387, "func": "(non-Javadoc) @see org.columba.mail.folder.headercache.PersistantHeaderList#persist()", "target": 0}
{"idx": 11388, "func": "If the -t flag is to \"LAST\", then the last loaded file (if any) is used", "target": 0}
{"idx": 11389, "func": "TODO: values", "target": 0}
{"idx": 11390, "func": "a default equals() testing for equality with the This reference", "target": 0}
{"idx": 11391, "func": "create all nessessary configuration keys for lru", "target": 0}
{"idx": 11392, "func": "non-file resources", "target": 0}
{"idx": 11393, "func": "Continue processing dynamically as normal.", "target": 0}
{"idx": 11394, "func": "Remark: There is also a java-like notation, which is also part of ArgoUML core distribution.", "target": 0}
{"idx": 11395, "func": "Get the function return value type, based on the type of the first argument.", "target": 0}
{"idx": 11396, "func": "link.setFont(link.getFont().deriveFont(Font.BOLD));", "target": 0}
{"idx": 11397, "func": "//this.setDaemon(true);", "target": 0}
{"idx": 11398, "func": "Allow for non-sample time", "target": 0}
{"idx": 11399, "func": "i18n[syntax.textLimitLineWidth=Text limit line width]", "target": 0}
{"idx": 11400, "func": "TODO: get/setRootModel aren't specific to the Model implementation they could probably be moved elsewhere - tfm - 20070530", "target": 1}
{"idx": 11401, "func": "Ignore this now //", "target": 0}
{"idx": 11402, "func": "Ok, maybe catalog was really a schema instead.", "target": 0}
{"idx": 11403, "func": "EATM in JDK 1.4 there will be an indexOf on StringBuffer. //", "target": 1}
{"idx": 11404, "func": "TODO: This whole class needs to be updated to remove use of deprecated methods and (hopefully) test multi-root and multi-project methods. @since Nov 17, 2002 @author jaap.branderhorst@xs4all.nl", "target": 1}
{"idx": 11405, "func": "isValidIANAEncoding(String):boolean", "target": 0}
{"idx": 11406, "func": "4.5.2.23 Generalizable Element", "target": 0}
{"idx": 11407, "func": "never null", "target": 0}
{"idx": 11408, "func": "only resource collections, there better be some", "target": 0}
{"idx": 11409, "func": "ok in normal Hibernate usage to delete a detached entity; JPA however forbids it, thus this is a hook for HEM to affect this behavior", "target": 0}
{"idx": 11410, "func": "i18n[exportconfig.fileWillBeCreated={0} not found - will be created]", "target": 0}
{"idx": 11411, "func": "TODO: Need to define a better approach to getting dialects. That is, we don't really want to ever prompt the user in this case. It's always Oracle. Yet, we may have a new OracleDialect at some point.", "target": 1}
{"idx": 11412, "func": "add the chart title, if one has been specified...", "target": 0}
{"idx": 11413, "func": "I don't know of any API for getting the event dispatch thread, but we can assume that it's the current thread if we're in the middle of dispatching an AWT event...", "target": 0}
{"idx": 11414, "func": "clip top and bottom bounds to data area", "target": 0}
{"idx": 11415, "func": "The following is deprecated, but can never be removed to preserve backward compatibility with old project files", "target": 0}
{"idx": 11416, "func": "not null is implicit", "target": 0}
{"idx": 11417, "func": "All done, so return", "target": 0}
{"idx": 11418, "func": "//SerialUtilities.writeImage(this.image, stream);", "target": 0}
{"idx": 11419, "func": "create list of contact folders", "target": 0}
{"idx": 11420, "func": "If neither approach finds a contradiction, we must assume they are okay and then check all the arguments. //", "target": 0}
{"idx": 11421, "func": "// private SimpleAttributeSet _saSetErrorHistory;", "target": 0}
{"idx": 11422, "func": "filter out all unchanged files", "target": 0}
{"idx": 11423, "func": "polymorphism not really handled completely correctly, perhaps...well, actually its ok, assuming that the entity name used in the lookup is the same as the the one used here, which it will be", "target": 1}
{"idx": 11424, "func": "allow these (deprecated) methods to pass through", "target": 0}
{"idx": 11425, "func": "Assuming mime type in form \"text/XXXX; charset=XXXXXX\"", "target": 0}
{"idx": 11426, "func": "find insertion point from returned result (-(insertion point) - 1) commentIndex is the index of the first element with end position > rangeEndPos", "target": 0}
{"idx": 11427, "func": "not an expression, only compile the elements", "target": 0}
{"idx": 11428, "func": "set label text", "target": 0}
{"idx": 11429, "func": "-version", "target": 0}
{"idx": 11430, "func": "//ResourceFactoryClass/createResource.override.javajetinc", "target": 0}
{"idx": 11431, "func": "\\ doesn't have a special meaning anymore - this is different from what the Unix sh does but causes a lot of problems on DOS based platforms otherwise", "target": 0}
{"idx": 11432, "func": "read a content of lfile", "target": 0}
{"idx": 11433, "func": "TODO: proper sign", "target": 1}
{"idx": 11434, "func": "We should only evalute the condition if it is the first time ( first \"iteration\" ) we are called. For subsequent calls, we are inside the IfControllerGroup, so then we just pass the control to the next item inside the if control", "target": 0}
{"idx": 11435, "func": "//{{{ swapMarkerAndCaret() method", "target": 0}
{"idx": 11436, "func": "to support dialects that have their own identity data type", "target": 0}
{"idx": 11437, "func": "normal all-rest method", "target": 0}
{"idx": 11438, "func": "Apparently this object had no getUUID", "target": 0}
{"idx": 11439, "func": "extra field length", "target": 0}
{"idx": 11440, "func": "special handling of operations while editing this data type", "target": 0}
{"idx": 11441, "func": "Ensure there are no extraneous style bits. //", "target": 0}
{"idx": 11442, "func": "Record the successfully executed command. //", "target": 0}
{"idx": 11443, "func": "case WorkerStatusChangedEvent.FINISHED : setVisible(false); break;", "target": 0}
{"idx": 11444, "func": "this will overwrite the \"old\" tag with same id", "target": 0}
{"idx": 11445, "func": "@see org.argouml.cognitive.Poster#expand(java.lang.String, org.argouml.cognitive.ListSet)", "target": 0}
{"idx": 11446, "func": "we are chmodding the given directory", "target": 0}
{"idx": 11447, "func": "//tick value not below lowest data value", "target": 0}
{"idx": 11448, "func": "overrideNameSpace", "target": 0}
{"idx": 11449, "func": "in case it already exists", "target": 0}
{"idx": 11450, "func": "add any jars in the directory", "target": 0}
{"idx": 11451, "func": "//first or last tick on graph or value is 1.0 //create label for tick:", "target": 0}
{"idx": 11452, "func": "Load the standard colour, just add an alpha channel.", "target": 0}
{"idx": 11453, "func": "now make a change to the renderer and see if it triggers a plot change event...", "target": 0}
{"idx": 11454, "func": "$NON-NLS-1$ $NON-NLS-1$ proxy.binary.filetype=binary", "target": 0}
{"idx": 11455, "func": "Always add the collection's query spaces.", "target": 0}
{"idx": 11456, "func": "All other", "target": 0}
{"idx": 11457, "func": "Remember the viewer and listen to SWT.DragDetect to alert the start of the drag operation. //", "target": 0}
{"idx": 11458, "func": "File was not opened successfully Are we processing a file sequence?", "target": 0}
{"idx": 11459, "func": "treat an empty base path as the root absolute path", "target": 0}
{"idx": 11460, "func": "Show icons", "target": 0}
{"idx": 11461, "func": "This 'dot' expression now refers to the resulting from element.", "target": 0}
{"idx": 11462, "func": "draw |^", "target": 0}
{"idx": 11463, "func": "if the metadata allowed proxy creation and caller did not request forceful eager loading, generate a proxy", "target": 0}
{"idx": 11464, "func": "dup", "target": 0}
{"idx": 11465, "func": "Call this to reinitialize the node stack. It is called automatically by the parser's ReInit() method.", "target": 0}
{"idx": 11466, "func": "assume it's senstive data", "target": 0}
{"idx": 11467, "func": "save the pointer needed for insert and delete operations", "target": 0}
{"idx": 11468, "func": "MapNames are Strings", "target": 0}
{"idx": 11469, "func": "now draw the real shape", "target": 0}
{"idx": 11470, "func": "Java object", "target": 0}
{"idx": 11471, "func": "We need to guarantee that any existing reads of old Map can proceed. So we cannot yet null out each bin.", "target": 0}
{"idx": 11472, "func": "//{{{ getViewCount() method", "target": 0}
{"idx": 11473, "func": "Undo the preparation for next and continue.", "target": 0}
{"idx": 11474, "func": "Simulate the user changing the session properties", "target": 0}
{"idx": 11475, "func": "FIXME: We can't guarantee this will always be a RubyIO...so the old code here is not safe", "target": 1}
{"idx": 11476, "func": "no need to do anything", "target": 0}
{"idx": 11477, "func": "line 1948", "target": 0}
{"idx": 11478, "func": "Are we working with a time series.", "target": 0}
{"idx": 11479, "func": "int index = locationToIndex(new Point(x, y)); setSelectedIndex(index);", "target": 0}
{"idx": 11480, "func": "//{{{ doDoubleDrag() method", "target": 0}
{"idx": 11481, "func": "negativeItemLabelPositionFallback", "target": 0}
{"idx": 11482, "func": "WITHOUT AUTOPRUNING", "target": 0}
{"idx": 11483, "func": "GeneralizableElement 4.5.3.20 [1]", "target": 0}
{"idx": 11484, "func": "Update only if the selection did not change", "target": 0}
{"idx": 11485, "func": "Index of writing point Index of processing point", "target": 0}
{"idx": 11486, "func": "Arguments args = sampler.getArguments();", "target": 0}
{"idx": 11487, "func": "empty if not provided use the system property to determine the type otherwise use the name", "target": 0}
{"idx": 11488, "func": "row 2: outline color", "target": 0}
{"idx": 11489, "func": "UML 1.4 WFR 2.5.3.1 #3", "target": 0}
{"idx": 11490, "func": "add toolbar panel.add(toolbar, BorderLayout.NORTH);", "target": 0}
{"idx": 11491, "func": "Tests whether an escape occurs in the given string, starting at index i. An escape sequence is a % followed by two hex digits.", "target": 0}
{"idx": 11492, "func": "//override facility for subclasses to put custom hashtables in", "target": 0}
{"idx": 11493, "func": "TODO support nested let expressions !", "target": 1}
{"idx": 11494, "func": "//?", "target": 0}
{"idx": 11495, "func": "close streams", "target": 0}
{"idx": 11496, "func": "//textArea.getBuffer().beginCompoundEdit();", "target": 0}
{"idx": 11497, "func": "Write out search results in a stable order (including order of all subelements which might be reordered like attributes and their values) so that simple textual comparison can be done, unless the number of results exceeds {@link #MAX_SORTED_RESULTS} in which case just stream the results out without sorting.", "target": 0}
{"idx": 11498, "func": "//{{{ Clock constructor", "target": 0}
{"idx": 11499, "func": "Test with empty output variable name", "target": 0}
{"idx": 11500, "func": "Tests the non-null string value to see if it contains only ASCII characters in the set represented by the specified 128-bit bitmask, as well as, optionally, non-ASCII characters 0xA0 and above, and, also optionally, escape sequences of % followed by two hex digits. This method is used for the new, strict URI validation that is not not currently in place.", "target": 0}
{"idx": 11501, "func": "//{{{ isToggle() method", "target": 0}
{"idx": 11502, "func": "ShapeGradientPaint bgPaint = new ShapeGradientPaint(new Color(235, 235, 235), new Color(255, 255, 255), 180, 1f, 0.5f, false);", "target": 0}
{"idx": 11503, "func": "Property", "target": 0}
{"idx": 11504, "func": "for field declarations use variable declaration fragments instead", "target": 0}
{"idx": 11505, "func": "TODO: Do we care?", "target": 1}
{"idx": 11506, "func": "Characters per second to emulate", "target": 0}
{"idx": 11507, "func": "else will be done by threadFinished()", "target": 0}
{"idx": 11508, "func": "we do not have to worry about queued additions to uninitialized collections, since they can only occur for inverse collections!", "target": 0}
{"idx": 11509, "func": "three general cases we check here as to whether to render a physical SQL join: 1) is our parent a DotNode as well? If so, our property reference is being further de-referenced... 2) is this a DML statement 3) we were asked to generate any needed joins (generateJoins==true) OR // we are currently processing a select or from clause (an additional check is the REGRESSION_STYLE_JOIN_SUPPRESSION check solely intended for the test suite) The REGRESSION_STYLE_JOIN_SUPPRESSION is an additional check intended solely for use within the test suite. This forces the implicit join resolution to behave more like the classic parser. The underlying issue is that classic translator is simply wrong about its decisions on whether or not to render an implicit join into a physical SQL join in a lot of cases. The piece it generally tends to miss is that INNER joins effect the results by further restricting the data set! A particular manifestation of this is the fact that the classic translator will skip the physical join for ToOne implicit joins if the query is shallow; the result being that Query.list() and Query.iterate() could return different number of results!", "target": 1}
{"idx": 11510, "func": "load all internal calendar plugins", "target": 0}
{"idx": 11511, "func": "//{{{ handlePopupTrigger() method", "target": 0}
{"idx": 11512, "func": "retrieve last replacer", "target": 0}
{"idx": 11513, "func": "end of try-catch", "target": 0}
{"idx": 11514, "func": "create the timer, but DO NOT start it.", "target": 0}
{"idx": 11515, "func": "TODO: we loose encoding information here, fix it", "target": 1}
{"idx": 11516, "func": "line 1649", "target": 0}
{"idx": 11517, "func": "user entered hour an min. See if they also entered secs", "target": 0}
{"idx": 11518, "func": "TODO Plugin supports only the main session window", "target": 1}
{"idx": 11519, "func": "the minimum set of standard types", "target": 0}
{"idx": 11520, "func": "//{{{ resetDefaultVariables() method", "target": 0}
{"idx": 11521, "func": "//TODO externalize string //$NON-NLS-1$", "target": 1}
{"idx": 11522, "func": "//element = XMLHelper.generateDom4jElement( persister.getNodeName() );", "target": 0}
{"idx": 11523, "func": "//can't reuse in this case", "target": 0}
{"idx": 11524, "func": "North, South, West, East, South-West", "target": 0}
{"idx": 11525, "func": "//{{{ isBlockCaretEnabled() method", "target": 0}
{"idx": 11526, "func": "-a", "target": 0}
{"idx": 11527, "func": "TODO @author fdietz: ensure that we don't fetch individual headers to reduce client/server roundtrips", "target": 1}
{"idx": 11528, "func": "TODO: figure out how to get then name of the table that the trigger is on. //\"and tables.name = ? \" +", "target": 1}
{"idx": 11529, "func": "no digits, go calc (will return +/- 0.0 for lax)", "target": 0}
{"idx": 11530, "func": "TODO: Presumably this is only relevant if obj is actually a Model or Profile. An added test of isAModel(obj) or isAProfile(obj) would clarify what is going on here.", "target": 1}
{"idx": 11531, "func": "optional args, so we have IRubyObject[] TODO: confirm", "target": 1}
{"idx": 11532, "func": "$$: pid", "target": 0}
{"idx": 11533, "func": "Expanders - trigger and index expanders are added inside the table expander //_treeAPI.addExpander(DatabaseObjectType.SCHEMA, new SchemaExpander());", "target": 0}
{"idx": 11534, "func": "//}}} //{{{ Word character...", "target": 0}
{"idx": 11535, "func": "get the soap:operation", "target": 0}
{"idx": 11536, "func": "//{{{ getActionSets() method", "target": 0}
{"idx": 11537, "func": "Quick check catches public fields include those in interfaces", "target": 0}
{"idx": 11538, "func": "@see java.util.List#add(int, java.lang.Object)", "target": 0}
{"idx": 11539, "func": "checkAssignIDToObject(seqdiag, true, true);", "target": 0}
{"idx": 11540, "func": "First, build an assignment for a splat, if any, with the rest of the args!", "target": 0}
{"idx": 11541, "func": "seconds", "target": 0}
{"idx": 11542, "func": "Nothing specified -> Fail", "target": 0}
{"idx": 11543, "func": "Add messages from caught exceptions", "target": 0}
{"idx": 11544, "func": "Set up the non-wild variables", "target": 0}
{"idx": 11545, "func": "these are static instead of final so they can be changed in unit test isn't visible outside this class and is only accessed once during CsvReader construction", "target": 0}
{"idx": 11546, "func": "1D100..1D1FF;", "target": 0}
{"idx": 11547, "func": "add a few type-specific special methods", "target": 0}
{"idx": 11548, "func": "If nothing is selected, then not allowed to remove it.", "target": 0}
{"idx": 11549, "func": "draw range indicators...", "target": 0}
{"idx": 11550, "func": "//{{{ _loadClass() method", "target": 0}
{"idx": 11551, "func": "Needed for HTTPSampler2", "target": 0}
{"idx": 11552, "func": "does the series exist?", "target": 0}
{"idx": 11553, "func": "Structure highlight", "target": 0}
{"idx": 11554, "func": "//{{{ paintInvalidLine() method", "target": 0}
{"idx": 11555, "func": "@see org.argouml.uml.notation.NotationProvider#getParsingHelp()", "target": 0}
{"idx": 11556, "func": "end HandlerBase implementation", "target": 0}
{"idx": 11557, "func": "alter column clauses", "target": 0}
{"idx": 11558, "func": "forbid instantiation", "target": 0}
{"idx": 11559, "func": "//(ALLOWS_EDITING_FALSE == ret)", "target": 0}
{"idx": 11560, "func": "Figure out what we're reading from.", "target": 0}
{"idx": 11561, "func": "-------------------------------------------------------------------------- Utility methods: instruction resizing (used to handle GOTO_W and JSR_W) --------------------------------------------------------------------------", "target": 0}
{"idx": 11562, "func": "if line doesn't start with \"From\" or line length is 0 -> save everything in StringBuffer", "target": 0}
{"idx": 11563, "func": "TODO: subclass these hibernate dialects to provide the \"canPasteTo\" api method in HibernateDialect interface. //private static final DB2390Dialect db2390Dialect = new DB2390Dialect();", "target": 1}
{"idx": 11564, "func": "(non-Javadoc) @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getInfo(org.eclipse.emf.ecore.ENamedElement)", "target": 0}
{"idx": 11565, "func": "//{{{ filesActivated() method canDoubleClickClose set to false when ENTER pressed", "target": 0}
{"idx": 11566, "func": "ignored", "target": 0}
{"idx": 11567, "func": "The tag element is used as a fileset. Parse all the files and create -tag arguments.", "target": 0}
{"idx": 11568, "func": "//{{{ TextAreaOptionPane constructor", "target": 0}
{"idx": 11569, "func": "//{{{ getSettingsDirectory() method", "target": 0}
{"idx": 11570, "func": "OnlyOnce inside inner loop", "target": 0}
{"idx": 11571, "func": "CASE 1 : Comparing to another ComparableObjectItem object ---------------------------------------------------------", "target": 0}
{"idx": 11572, "func": "Determine the object's parent. //", "target": 0}
{"idx": 11573, "func": "must be power of 2!", "target": 0}
{"idx": 11574, "func": "write the replacement to", "target": 0}
{"idx": 11575, "func": "//image.setMargin(new Insets(0, 0, 0, 0));", "target": 0}
{"idx": 11576, "func": "if we have seen a property for this DataType before, then the hashmap already exists. Otherwise, we need to create it now.", "target": 0}
{"idx": 11577, "func": "vertical tab", "target": 0}
{"idx": 11578, "func": "//{{{ getCacheableActionNames() method", "target": 0}
{"idx": 11579, "func": "i18n[editextras.month=Month]", "target": 0}
{"idx": 11580, "func": "Set up the table itself", "target": 0}
{"idx": 11581, "func": "Escaped dollar commma and backslash with missing variable reference", "target": 0}
{"idx": 11582, "func": "Default value $NON-NLS-1$", "target": 0}
{"idx": 11583, "func": "@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()", "target": 0}
{"idx": 11584, "func": "Extra keywords that this DBMS supports.", "target": 0}
{"idx": 11585, "func": "remove from header-list", "target": 0}
{"idx": 11586, "func": "margin", "target": 0}
{"idx": 11587, "func": "//collection.clearDirty()", "target": 0}
{"idx": 11588, "func": "TODO: Implement following WFR for GeneralizableElements [4] The parent must be included in the Namespace of the GeneralizableElement. self.generalization->forAll(g | self.namespace.allContents->includes(g.parent) ) return ModelManagementHelperMDRImpl.getContents(ns).contains( gen.getParent());", "target": 1}
{"idx": 11589, "func": "Save the value in the variable if present", "target": 0}
{"idx": 11590, "func": "Make up a unique new name here. //", "target": 0}
{"idx": 11591, "func": "LOCALVAR", "target": 0}
{"idx": 11592, "func": "Do nothing by default.", "target": 0}
{"idx": 11593, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsConvert()", "target": 0}
{"idx": 11594, "func": "//now render the joins", "target": 0}
{"idx": 11595, "func": "This method is CPU intensive and therefore needs to be as efficient as possible.", "target": 0}
{"idx": 11596, "func": "this entity defines proeprty generation, so process those generated values...", "target": 0}
{"idx": 11597, "func": "set the range axis to display integers only...", "target": 0}
{"idx": 11598, "func": "If the table+column already has a data object in the map, then remove it.", "target": 0}
{"idx": 11599, "func": "//always do an INSERT, and let it fail by constraint violation", "target": 0}
{"idx": 11600, "func": "//OK //OK Don't copy this; it is per instance resultFileName = res.resultFileName;", "target": 0}
{"idx": 11601, "func": "disabled IMAP folder tests as they require connection to remote IMAP server //setup(suite, new IMAPTstFactory());", "target": 0}
{"idx": 11602, "func": "TODO Ristretto should handle the logging of streams in another way.", "target": 1}
{"idx": 11603, "func": "//make port invisible unless mouse enters", "target": 0}
{"idx": 11604, "func": "TODO: we can probably release our references to the constantFields array and static/instance callback hashes at this point.", "target": 1}
{"idx": 11605, "func": "stolen from org.apache.xerces.impl.XMLEntityManager#getUserDir() of the Xerces-J team which ASCII characters need to be escaped", "target": 1}
{"idx": 11606, "func": "NOOP", "target": 0}
{"idx": 11607, "func": "//workaround for WebLogic", "target": 1}
{"idx": 11608, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getPrimaryKey(net.sourceforge.squirrel_sql.fw.sql.ITableInfo)", "target": 0}
{"idx": 11609, "func": "line is invisible?", "target": 0}
{"idx": 11610, "func": "Fill 3 of value (byte) -87 Fill 6 of value (byte) 33 Fill 40 of value (byte) -19 Fill 7379 of value (byte) 33 Fill 20902 of value (byte) -19 Fill 3162 of value (byte) 33 Fill 11172 of value (byte) -19 Fill 92 of value (byte) 33 Fill 8190 of value (byte) 33", "target": 0}
{"idx": 11611, "func": "Flow is not in UML 2.x - don't implement", "target": 0}
{"idx": 11612, "func": "nothing else to here - the module version will be included in the class.", "target": 0}
{"idx": 11613, "func": "This can never happen because this rule will always eliminate the child NOT. case NOT: return x.getFirstChild(); (NOT (NOT x) ) => (x)", "target": 0}
{"idx": 11614, "func": "cached headerfield list", "target": 0}
{"idx": 11615, "func": "TODO Handle multiple top level packages", "target": 1}
{"idx": 11616, "func": "Returns the root package. @return the Package which is the root @deprecated for 0.25.4 by tfmorris - use {@link #getRoots()} to get packages/model elements which are at the top level. <p> TODO: We probably need a getDefaultNamespace() method or something similar to replace some uses of this.", "target": 1}
{"idx": 11617, "func": "Get the uids from the headercache", "target": 0}
{"idx": 11618, "func": "sign", "target": 0}
{"idx": 11619, "func": "Externally callable suite() method for use by JUnit Allows tests to be run directly under JUnit, rather than using the startup code in the rest of the module. No parameters can be passed in, so it is less flexible.", "target": 0}
{"idx": 11620, "func": "//deal with jdk1.4.2 bug:", "target": 0}
{"idx": 11621, "func": "//{{{ getShortcut() method", "target": 0}
{"idx": 11622, "func": "Process all the directories marked for styling", "target": 0}
{"idx": 11623, "func": "test 1...", "target": 0}
{"idx": 11624, "func": "//i18n[ArtifactStatus.translationLabel=translation]", "target": 0}
{"idx": 11625, "func": "//count++;", "target": 0}
{"idx": 11626, "func": "default for plugins that don't specify this property (ie, 4.1-style plugins) is to load them on startup", "target": 0}
{"idx": 11627, "func": "(non-Javadoc) @see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)", "target": 0}
{"idx": 11628, "func": "aliases for identifier ( alias.id ); skip if the entity defines a non-id property named 'id'", "target": 0}
{"idx": 11629, "func": "@see org.argouml.uml.ui.UMLModelElementListModel#buildModelList()", "target": 0}
{"idx": 11630, "func": "/////////////////////////////// CLONE AND MAP /////////////////////////////////////", "target": 0}
{"idx": 11631, "func": "@see java.util.List#get(int)", "target": 0}
{"idx": 11632, "func": "assume default charset is OK here <classpathentry kind=\"lib\" path=\"lib/geronimo-jms_1.1_spec-1.1.1.jar\"/> <classpathentry kind=\"lib\" path=\"lib/activation-1.1.1.jar\"/> <classpathentry kind=\"lib\" path=\"lib/jtidy-r938.jar\"/>", "target": 0}
{"idx": 11633, "func": "headerList.clear();", "target": 0}
{"idx": 11634, "func": "no else to handle multiple inheritance of linkobject", "target": 0}
{"idx": 11635, "func": "fire up search command", "target": 0}
{"idx": 11636, "func": "TODO: Localize these", "target": 0}
{"idx": 11637, "func": "@see java.beans.PropertyChangeListener#propertyChange(java.beans. PropertyChangeEvent)", "target": 0}
{"idx": 11638, "func": "start of next expanded range", "target": 0}
{"idx": 11639, "func": "implement is called to force this class to create stubs for all methods in the given interface, so they'll show up in the list of methods and be invocable without passing through method_missing", "target": 0}
{"idx": 11640, "func": "//use fle from original weblogic jar", "target": 0}
{"idx": 11641, "func": "stupid scrollbar policy is an attempt to work around bugs people have been seeing with IBM's JDK -- 7 Sep 2000", "target": 1}
{"idx": 11642, "func": "line 1057", "target": 0}
{"idx": 11643, "func": "TODO: gone in UML 2.1", "target": 1}
{"idx": 11644, "func": "10330..1034F;", "target": 0}
{"idx": 11645, "func": "Build IR for args", "target": 0}
{"idx": 11646, "func": "setHelpMenu(help);", "target": 0}
{"idx": 11647, "func": "Used by both StandardJMeterEngine and ClientJMeterEngine. In the latter case, only ResultCollectors are updated, as only these are relevant to the client, and updating other elements causes all sorts of problems. skip certain processing for remote tests", "target": 0}
{"idx": 11648, "func": "install invokedynamic bootstrapper TODO need to abstract this setup behind another compiler interface", "target": 1}
{"idx": 11649, "func": "using IOChannel may not be the most performant way, but it's easy.", "target": 1}
{"idx": 11650, "func": "Get the points representing the poly line for our edge", "target": 0}
{"idx": 11651, "func": "add all suffixes", "target": 0}
{"idx": 11652, "func": "extend to include the comment at the same line as the position", "target": 0}
{"idx": 11653, "func": "Constants for attribute default value. //", "target": 0}
{"idx": 11654, "func": "this ensures that the first line is always visible", "target": 0}
{"idx": 11655, "func": "create dummy catalog", "target": 0}
{"idx": 11656, "func": "start a new search -> clear all previous search results", "target": 0}
{"idx": 11657, "func": "//get the list of generic jar entries", "target": 0}
{"idx": 11658, "func": "one column for the object name, another column for the object's owner.", "target": 0}
{"idx": 11659, "func": "Show ...", "target": 0}
{"idx": 11660, "func": "Create the delegate URL //", "target": 0}
{"idx": 11661, "func": "//{{{ _logException() method", "target": 0}
{"idx": 11662, "func": "ensure <checksum> follows the immutability rule", "target": 0}
{"idx": 11663, "func": "Tests for split(String,String,String)", "target": 0}
{"idx": 11664, "func": "1040 byte 2064 byte 2064 byte", "target": 0}
{"idx": 11665, "func": "date", "target": 0}
{"idx": 11666, "func": "i18n[HibernateConfigPanel.ConfiguirationDef=Configuration definition]", "target": 0}
{"idx": 11667, "func": "TODO categoryEnumeration", "target": 1}
{"idx": 11668, "func": "//ChangeDescriptionImpl", "target": 0}
{"idx": 11669, "func": "((value != null)", "target": 0}
{"idx": 11670, "func": "asupport = new ActionSupport(this);", "target": 0}
{"idx": 11671, "func": "//{{{ showDockableWindow() method", "target": 0}
{"idx": 11672, "func": "Constants for element content type. //", "target": 0}
{"idx": 11673, "func": "The following will bring up a dialog box, so can't be run headless actionClient.actionPerformed(new ActionEvent(this, 0, \"foo\"));", "target": 0}
{"idx": 11674, "func": "//iri = iri || containsNonASCII(query);", "target": 0}
{"idx": 11675, "func": "handle panning if we have a start point", "target": 0}
{"idx": 11676, "func": "//{{{ parseKey() method", "target": 0}
{"idx": 11677, "func": "i18n[generalPropertiesPanel.right=Right]", "target": 0}
{"idx": 11678, "func": "We'll put the association in the namespace of whichever end is not navigable and is writeable. If they both are, we'll use the namepace of c1.", "target": 0}
{"idx": 11679, "func": "//{{{ selectMatch() method", "target": 0}
{"idx": 11680, "func": "Now we can remove ourself (which will also remove the attached association ends edges)", "target": 0}
{"idx": 11681, "func": "Name of directory to store extra LAFs in for the user.", "target": 0}
{"idx": 11682, "func": "SSS FIXME: We need to build debug information tracking into the IR in some fashion So, these methods below would have to have equivalents in IR_Scope implementations.", "target": 1}
{"idx": 11683, "func": "inner radius", "target": 0}
{"idx": 11684, "func": "Text", "target": 0}
{"idx": 11685, "func": "<p>A valid fragment may be null or contain any allowed URI characters.", "target": 0}
{"idx": 11686, "func": "Note: if we want methods declared inside blocks to be accessible via this.methodname() inside the block we could handle it here as a special case. See also resolveThisFieldReference() special handling for BlockNameSpace case. They currently work via the direct name e.g. methodName().", "target": 0}
{"idx": 11687, "func": "---- freebusyButton ----", "target": 0}
{"idx": 11688, "func": "List of the additional colorings", "target": 0}
{"idx": 11689, "func": "FIXME: No argument seems to work for -K in MRI plus this should not siphon off additional args 'jruby -K ~/scripts/foo'. Also better error processing.", "target": 1}
{"idx": 11690, "func": "we tokenize using double quotes. this means for tomcat we should have 3 tokens if there isn't any additional information in the logs", "target": 0}
{"idx": 11691, "func": "Not overlapped src1: o-----o src2: o-----o res: empty Reuse src2", "target": 0}
{"idx": 11692, "func": "keep a reference to avoid the memory being freed", "target": 0}
{"idx": 11693, "func": "first we iterate through the bindings", "target": 0}
{"idx": 11694, "func": "updates current and max stack sizes only if opcode == NEW (stack size variation = 0 for ANEWARRAY, CHECKCAST, INSTANCEOF)", "target": 0}
{"idx": 11695, "func": "Parse the arguments that are not options", "target": 0}
{"idx": 11696, "func": "i18n[codecompletion.unknowntable=unknown table {0}]", "target": 0}
{"idx": 11697, "func": "toolTipGeneratorList", "target": 0}
{"idx": 11698, "func": "Type node is passed down the chain for array initializers which need it under some circumstances", "target": 0}
{"idx": 11699, "func": "&& args.getMaxArgumentsCount() != 1) {", "target": 0}
{"idx": 11700, "func": "file does exist -> property 'test' == 'true'", "target": 0}
{"idx": 11701, "func": "Pass the container to the processing of this node,", "target": 0}
{"idx": 11702, "func": "copy the source and support files", "target": 0}
{"idx": 11703, "func": "//if you cannot read it, you won't be able to write it either", "target": 0}
{"idx": 11704, "func": "TODO: Move this in FigGroup (in GEF). @param scb The suppressCalcBounds to set.", "target": 1}
{"idx": 11705, "func": "No match, so bail out!", "target": 0}
{"idx": 11706, "func": "for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding", "target": 0}
{"idx": 11707, "func": "//i18n[ColumnListDialog.dropErrorMessage=Can't drop all columns - a //table must have at least one column", "target": 0}
{"idx": 11708, "func": "decode headerfield", "target": 0}
{"idx": 11709, "func": "trim extension to try other options", "target": 0}
{"idx": 11710, "func": "URL GENERATOR", "target": 0}
{"idx": 11711, "func": "check for all uppercase and/or mixed with underscores", "target": 0}
{"idx": 11712, "func": "UCS-2 without a BOM must begin with \"<?XML\" 0x3c 0x00 0x3f 0x00: UCS-2, little-endian, no byte-order mark", "target": 0}
{"idx": 11713, "func": "Show folder only if changed.", "target": 0}
{"idx": 11714, "func": "if HTML stripping is enabled", "target": 0}
{"idx": 11715, "func": "Use the test element name for the label", "target": 0}
{"idx": 11716, "func": "unimplemented - we only care about expanding", "target": 0}
{"idx": 11717, "func": "line 1620", "target": 0}
{"idx": 11718, "func": "Multiple jet directives.", "target": 0}
{"idx": 11719, "func": "IPv6 addresses are 128-bit, so there can be at most eight sections.", "target": 0}
{"idx": 11720, "func": "-recurse", "target": 0}
{"idx": 11721, "func": "tell the rest of the world that the table has changed. The 'fire' method used here is very course - it says that the whole table has been changed when really only one row has been added. However, finer-grained methods did not seem to cause the right effect, so I'm using this one untill someone reports a problem with it. Also, if either of these notifications (the actual model and the sortable model) are eliminated, it either throws an exception or does not update the GUI. Go figure. Finally, the 'fire' on the _acutalModel is triggered from this method rather than from inside the MyJTable code because the add() method used to add a row is also used when loading the table with lots of rows, and in that case we do not want to generate events until all of the rows have been added, so the 'fire' cannot happen there.", "target": 0}
{"idx": 11722, "func": "need to treat this as if it where optimistic-lock=\"all\" (dirty does not make sense); first we need to locate the \"loaded\" state Note, it potentially could be a proxy, so perform the location the safe way...", "target": 0}
{"idx": 11723, "func": "TODO: Beautify the 2nd part of this string:", "target": 1}
{"idx": 11724, "func": "relative offset of LFH", "target": 0}
{"idx": 11725, "func": "There was a comment saying that the below has no cycles, but Classycle thinks there's a cycle here too, so I believe there really is one - tfm 20070702 \"org.argouml.uml.cognitive.critics\",", "target": 0}
{"idx": 11726, "func": "look for places to break the string", "target": 0}
{"idx": 11727, "func": "i18n[I18n.NativeToAsciiOutDir=native2Ascii output dir]", "target": 0}
{"idx": 11728, "func": "update modification timestamp", "target": 0}
{"idx": 11729, "func": "//no big deal", "target": 0}
{"idx": 11730, "func": "sequence clauses", "target": 0}
{"idx": 11731, "func": "//{{{ getSmartCaseReplace() method", "target": 0}
{"idx": 11732, "func": "//yyLhs 542", "target": 0}
{"idx": 11733, "func": "might be null (e.g. in testing)", "target": 0}
{"idx": 11734, "func": "buffer.append(getShortClassName(record.getSourceClassName())); buffer.append(\".\"); buffer.append(record.getSourceMethodName()); buffer.append(\" - \");", "target": 0}
{"idx": 11735, "func": "Not implemented", "target": 1}
{"idx": 11736, "func": "//System.err.println(\"getSign()\");", "target": 0}
{"idx": 11737, "func": "//{{{ getVersion() method", "target": 0}
{"idx": 11738, "func": "get the hashmap for this type, or create it if this is a new property", "target": 0}
{"idx": 11739, "func": "//{{{ getBufferChangeListeners() method", "target": 0}
{"idx": 11740, "func": "TODO?? ColumnDisplayDefinition should also have the Type (String, Date, Double,Integer,Boolean)", "target": 1}
{"idx": 11741, "func": "TODO: process warnings? Set Code and Message to success?", "target": 1}
{"idx": 11742, "func": "Informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 11743, "func": "// Log.log(Log.DEBUG,this,\"AWT immediate: \" + run);", "target": 0}
{"idx": 11744, "func": "explode array, it's an internal \"args\" array", "target": 0}
{"idx": 11745, "func": "Start edit server", "target": 0}
{"idx": 11746, "func": "//i18n[ColumnDetailsDialog.nullableLabel=Nullable: ]", "target": 0}
{"idx": 11747, "func": "//setBorder(BorderFactory.createEmptyBorder(4, 4, 4, 4));", "target": 0}
{"idx": 11748, "func": "//[RubyClass]", "target": 0}
{"idx": 11749, "func": "command returned non-standard value. ask user before proceeding.", "target": 0}
{"idx": 11750, "func": "Create a default extent for the user UML model. This will get replaced if a new model is read in from an XMI file.", "target": 0}
{"idx": 11751, "func": "init progressbar", "target": 0}
{"idx": 11752, "func": "end class ActionCut", "target": 0}
{"idx": 11753, "func": "TODO presentation??", "target": 1}
{"idx": 11754, "func": "If the user has cancelled the query, don't bother logging an error message. It is likely that the cancel request interfered with the attempt to fetch results from the ResultSet, which is to be expected when the Statement is closed. So, let's not bug the user with obvious error messages that we can do nothing about.", "target": 0}
{"idx": 11755, "func": "clear basename so it's anonymous when raising", "target": 0}
{"idx": 11756, "func": "NUL", "target": 0}
{"idx": 11757, "func": "//{{{ StringCompare class", "target": 0}
{"idx": 11758, "func": "Mckoi has no known variation of a \"SELECT ... FOR UPDATE\" syntax...", "target": 0}
{"idx": 11759, "func": "if user is currently changing selection, don't do anything -> wait until the final selection is available", "target": 0}
{"idx": 11760, "func": "give the ResultSetReader some time to realize that the user requested cancel and stop fetching results. This allows us to stop the query processing gracefully.", "target": 0}
{"idx": 11761, "func": "i18n[exportconfig.errorSavingDrivers=Error saving drivers]", "target": 0}
{"idx": 11762, "func": "int spare = cntr.getThreadInfo().getMaxSpareThreads();", "target": 0}
{"idx": 11763, "func": "Handle other uses of <private> contents", "target": 0}
{"idx": 11764, "func": "Permissible values: true - match against headers false or absent - match against body (this was the original default) URL - match against URL These are passed to the setUseField() method Do not change these values!", "target": 0}
{"idx": 11765, "func": "register the plot as a listener with its axes, datasets, and renderers...", "target": 0}
{"idx": 11766, "func": "TODO: Performance. Consider instantiating this just once outside the for loops and clear at this point instead.", "target": 1}
{"idx": 11767, "func": "Note: we negate the expanded state because this is a will-expand/collapse listener", "target": 0}
{"idx": 11768, "func": "The default behaviour from FigEdgeModelElement is not correct here. See issue 5005. TODO: We must determine what to do here but for now doing nothing is better. I'm not sure why the super method would not work as I would expect that to do nothing if the ends are already correct. @return true at all times for now", "target": 1}
{"idx": 11769, "func": "For the case of dynamic-update=\"false\", or no snapshot, we use the static SQL", "target": 0}
{"idx": 11770, "func": "The class is not available.", "target": 0}
{"idx": 11771, "func": "//The class is now way to complex!", "target": 1}
{"idx": 11772, "func": "create new locale xml treenode", "target": 0}
{"idx": 11773, "func": "Inner classes follow", "target": 0}
{"idx": 11774, "func": "//wrong root element name issue a warning.", "target": 0}
{"idx": 11775, "func": "Original and clone should be equal", "target": 0}
{"idx": 11776, "func": "This ID is used as DEFAULT_ID !", "target": 0}
{"idx": 11777, "func": "$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-2$ remove \".class\"", "target": 0}
{"idx": 11778, "func": "There are attributes to handle.", "target": 0}
{"idx": 11779, "func": "null object ref is not instance of any type", "target": 0}
{"idx": 11780, "func": "this shortcut was already been assigned to another action; let's pop-up a message for the user", "target": 0}
{"idx": 11781, "func": "6192 byte 6192 byte 6192 byte 24 byte", "target": 0}
{"idx": 11782, "func": "end class wafermaprenderer", "target": 0}
{"idx": 11783, "func": "some other primitive should avoid calling methods on primitive, as we do in Name (can't treat primitive like an object message) but the hole is useful right now.", "target": 1}
{"idx": 11784, "func": "Jump to 'l' if this arg is not null. If null, fall through and build the default value!", "target": 0}
{"idx": 11785, "func": "add other existing entries, but filter the just added one", "target": 0}
{"idx": 11786, "func": "we need to strip off the embedded parens so that sql-gen does not double these up", "target": 0}
{"idx": 11787, "func": "Dump System Properties.", "target": 0}
{"idx": 11788, "func": "work out the trailing gap", "target": 0}
{"idx": 11789, "func": "Only if we are at the remembered index do we NOT need to save. //return top != saveIndex;", "target": 0}
{"idx": 11790, "func": "Object insertions, updates, and deletions have list semantics because they must happen in the right order so as to respect referential integrity", "target": 0}
{"idx": 11791, "func": "@see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int)", "target": 0}
{"idx": 11792, "func": "Sorts the specified destInfos array based on the order of the sourceInfos array. Not a very efficient algorthim, but it gets the job done. TODO: rewrite this using Collections sorting capability. @param sourceInfos @param destInfos @param sourceTableName @param destTableName @return a re-ordered version of the specified destInfos array @throws MappingException if the arrays differ in length or column names.", "target": 1}
{"idx": 11793, "func": "these are only needed if we have a non-noop call config", "target": 0}
{"idx": 11794, "func": "set up array to return for public access to cmd line args", "target": 0}
{"idx": 11795, "func": "otherwise, utilize the static delete statements", "target": 0}
{"idx": 11796, "func": "//{{{ initTextArea() method", "target": 0}
{"idx": 11797, "func": "We set it and get back the interned string. This way, when instanceClassName == instanceTypeName we know we should serialize only the class name. //", "target": 0}
{"idx": 11798, "func": "open connection to SMTP server", "target": 0}
{"idx": 11799, "func": "Create filter for each style sheet and chain to previous filter/reader", "target": 0}
{"idx": 11800, "func": "//{{{ DirectoryEntry class", "target": 0}
{"idx": 11801, "func": "(non-Javadoc) @see org.columba.mail.imap.IImapServer#append(java.io.InputStream, org.columba.mail.folder.imap.IMAPFolder)", "target": 0}
{"idx": 11802, "func": "no . found", "target": 0}
{"idx": 11803, "func": "//{{{ Check for an escape sequence", "target": 0}
{"idx": 11804, "func": "putNotationArgument(\"showAssociationName\", getSettings().isShowAssociationNames());", "target": 0}
{"idx": 11805, "func": "correct limits if body tags where not found", "target": 0}
{"idx": 11806, "func": "The Set is used to ignore duplicated binary files. Using a LinkedHashSet to avoid unnecessary overhead in iterating the elements in the set later on. As a side-effect, this will keep them roughly in order, which should be a better model of browser behaviour.", "target": 0}
{"idx": 11807, "func": "Scan hex sequence before possible '::' or IPv4 address.", "target": 0}
{"idx": 11808, "func": "Pass request to new proxy thread", "target": 0}
{"idx": 11809, "func": "//{{{ isScreenLineCountValid() method", "target": 0}
{"idx": 11810, "func": "Use with SSL connection", "target": 0}
{"idx": 11811, "func": "line 884", "target": 0}
{"idx": 11812, "func": "clear list and collect uids for new folder", "target": 0}
{"idx": 11813, "func": "We do not know the content encoding of the query string", "target": 0}
{"idx": 11814, "func": "//{{{ if there are no requests, execute AWT requests immediately", "target": 0}
{"idx": 11815, "func": "test with a class and an inner class", "target": 0}
{"idx": 11816, "func": "If we are disconnected from root we need to handle the def imports", "target": 0}
{"idx": 11817, "func": "for non-inverse one-to-many, with a not-null fk, add a backref!", "target": 0}
{"idx": 11818, "func": "@see org.argouml.cognitive.ui.Wizard#canGoNext()", "target": 0}
{"idx": 11819, "func": "here we change the AffineTransform so we can draw the annotation to a larger area and scale it down into the display area afterwards, the original transform is restored", "target": 0}
{"idx": 11820, "func": "we don't need to worry about existing version being uninitialized because this block isn't called by a re-entrant load (re-entrant loads _always_ have lock mode NONE)", "target": 0}
{"idx": 11821, "func": "Now scan this big bucket so as to synthesise the sorted order for small buckets [t, ss] for all t != ss.", "target": 0}
{"idx": 11822, "func": "Update the discriminator if it changed", "target": 0}
{"idx": 11823, "func": "HeaderItem[] items = new HeaderItem[selection1.length]; items = selection1; HeaderItemDNDManager.getInstance().setHeaderItemList(items);", "target": 0}
{"idx": 11824, "func": "create new modifiers and add to rewrite", "target": 0}
{"idx": 11825, "func": "ZIP file comment", "target": 0}
{"idx": 11826, "func": "if the dataset is not a StatisticalCategoryDataset then just revert to the superclass (LineAndShapeRenderer) behaviour...", "target": 0}
{"idx": 11827, "func": "//setForeground( Color.red );", "target": 0}
{"idx": 11828, "func": "maybe a concrete SQLpropertyresult type, but Map is exactly what is required at the moment", "target": 0}
{"idx": 11829, "func": "//actions.clear();", "target": 0}
{"idx": 11830, "func": "if true the Scheduler is enabled", "target": 0}
{"idx": 11831, "func": "Operations that work on classes of objects:", "target": 0}
{"idx": 11832, "func": "save old framemediator in cache (use containers's old id)", "target": 0}
{"idx": 11833, "func": "Skip files that are not installed - new files", "target": 0}
{"idx": 11834, "func": "Other tests", "target": 0}
{"idx": 11835, "func": "//notifyTableListeners(new TableModelEvent(this, 0, logMessages.size()));", "target": 0}
{"idx": 11836, "func": "//{{{ showBrowseDialog() method", "target": 0}
{"idx": 11837, "func": "end of for loop over uids to save", "target": 0}
{"idx": 11838, "func": "=== DEPRECATED CODE ===", "target": 0}
{"idx": 11839, "func": "else nothing changed", "target": 0}
{"idx": 11840, "func": "@see java.awt.event.FocusListener#focusGained(java.awt.event.FocusEvent)", "target": 0}
{"idx": 11841, "func": "If the Parameter data cannot be converted to Raw, then the user should be prevented from doing so raise an error dialog", "target": 0}
{"idx": 11842, "func": "Generate the property select tokens.", "target": 0}
{"idx": 11843, "func": "2100..214F;", "target": 0}
{"idx": 11844, "func": "Save cache information", "target": 0}
{"idx": 11845, "func": "//{{{ BufferPrintable constructor", "target": 0}
{"idx": 11846, "func": "-------------------------------------------------------------------------- Fields for the control flow graph analysis algorithm (used to compute the maximum stack size). A control flow graph contains one node per \"basic block\", and one edge per \"jump\" from one basic block to another. Each node (i.e., each basic block) is represented by the Label object that corresponds to the first instruction of this basic block. Each node also stores the list of its successors in the graph, as a linked list of Edge objects. --------------------------------------------------------------------------", "target": 0}
{"idx": 11847, "func": "//{{{ Actions", "target": 0}
{"idx": 11848, "func": "the document should only have one service node if it doesn't it may not work!", "target": 0}
{"idx": 11849, "func": "set argv from main's args", "target": 0}
{"idx": 11850, "func": "delete all mails in folder", "target": 0}
{"idx": 11851, "func": "FIXME: optimize for cases where we have no false branch", "target": 1}
{"idx": 11852, "func": "Reset search", "target": 0}
{"idx": 11853, "func": "//create the command to run Java, including user specified options", "target": 0}
{"idx": 11854, "func": "Fill 2 of value (byte) -19 Fill 4 of value (byte) 33 Fill 10 of value (byte) -87 Fill 18 of value (byte) 33 Fill 2 of value (byte) -87", "target": 0}
{"idx": 11855, "func": "a normal block passed to define_method changes to do arity checking; make it a lambda", "target": 0}
{"idx": 11856, "func": "We create the post body content now, so we know the size", "target": 0}
{"idx": 11857, "func": "This would be done by the run command", "target": 0}
{"idx": 11858, "func": "method is done, declare all variables", "target": 0}
{"idx": 11859, "func": "return eProperties;", "target": 0}
{"idx": 11860, "func": "i18n[Application.info.setjdbcdebuglogsuccess=JDBC debug log set to output stream successfully]", "target": 0}
{"idx": 11861, "func": "Value of the display-name element read from the standard EJB descriptor", "target": 0}
{"idx": 11862, "func": "AccessObject to the test-Ant-environment", "target": 0}
{"idx": 11863, "func": "Get the largest width and height", "target": 0}
{"idx": 11864, "func": "//i18n[ColumnDetailsDialog.modifyButtonLabel=Modify Column]", "target": 0}
{"idx": 11865, "func": "make sure the main stream is set to null", "target": 0}
{"idx": 11866, "func": "line 708", "target": 0}
{"idx": 11867, "func": "//////////////////////////////////////////////////////////Methods used to store and retrieve the MailerVisualizer. ////////////////////////////////////////////////////////////", "target": 0}
{"idx": 11868, "func": "if the axis has a fixed dimension, return it...", "target": 0}
{"idx": 11869, "func": "Searches for a type/classifier with name s. If defineNew is true, a new type is defined if the type/classifier is not found. The newly created type is added to the currentNamespace and given the name s. <p> TODO: Move to Model subsystem - tfm 20070307 @param s the name of the type/classifier to be found @param defineNew if true, define a new one @return Classifier the found classifier", "target": 1}
{"idx": 11870, "func": "(non-Javadoc) @see org.columba.core.profiles.IProfileManager#getSelectedProfile()", "target": 0}
{"idx": 11871, "func": "TODO: toLowerCase was not done before. Only used in Template.", "target": 1}
{"idx": 11872, "func": "build the command line from what we got the format is cleartool checkout [options...] [viewpath ...] as specified in the CLEARTOOL.EXE help", "target": 0}
{"idx": 11873, "func": "Check if the entry index corresponds to a tag, if so return the tag This also works if the tags were not translated", "target": 0}
{"idx": 11874, "func": "cache the fact that this is a static method invocation on this class", "target": 0}
{"idx": 11875, "func": "@see MouseListener#mousePressed(MouseEvent)", "target": 0}
{"idx": 11876, "func": "Unload the arguments from the ConstructorArgs object", "target": 0}
{"idx": 11877, "func": "//postInitialize() will be called after initialization", "target": 0}
{"idx": 11878, "func": "handle cross-connection between fields", "target": 0}
{"idx": 11879, "func": "It is the JMeterThread which knows how to sample a real sampler", "target": 0}
{"idx": 11880, "func": "//}}} //{{{ show popup if > 1", "target": 0}
{"idx": 11881, "func": "not using remove(Object) here to avoid the equals() call", "target": 0}
{"idx": 11882, "func": "Create a test bean to clone", "target": 0}
{"idx": 11883, "func": "create jpim contact instance", "target": 0}
{"idx": 11884, "func": "line 1239", "target": 0}
{"idx": 11885, "func": "b_lyear.setEnabled(true); b_ryear.setEnabled(true);", "target": 0}
{"idx": 11886, "func": "an empty dataset should return a null range", "target": 0}
{"idx": 11887, "func": "The keyword used to specify a nullable column.", "target": 0}
{"idx": 11888, "func": "sent folder", "target": 0}
{"idx": 11889, "func": "Assign actual codes for the tables.", "target": 0}
{"idx": 11890, "func": "the max-age directive overrides the Expires header,", "target": 0}
{"idx": 11891, "func": "Specified class is \"\" -> can not exist", "target": 0}
{"idx": 11892, "func": "//{{{ getMember() method", "target": 0}
{"idx": 11893, "func": "add an entity for the item...", "target": 0}
{"idx": 11894, "func": "Ignore and keep trying", "target": 0}
{"idx": 11895, "func": "constructor", "target": 0}
{"idx": 11896, "func": "This is called when it's time to fully resolve a path expression.", "target": 0}
{"idx": 11897, "func": "//validation logic", "target": 0}
{"idx": 11898, "func": "signed short, little-endian", "target": 0}
{"idx": 11899, "func": "//i18n[ProgressCallBackDialog.defaultLoadingPrefix=Loading:]", "target": 0}
{"idx": 11900, "func": "search all of its interfaces breadth first", "target": 0}
{"idx": 11901, "func": "Changes to parameter types should also update the operation's label. //", "target": 0}
{"idx": 11902, "func": "update the previously selected tab", "target": 0}
{"idx": 11903, "func": "N.B. HostConfiguration.equals() includes proxy settings in the compare.", "target": 0}
{"idx": 11904, "func": "e.g. www.apache.org", "target": 0}
{"idx": 11905, "func": "@see java.util.Enumeration#hasMoreElements()", "target": 0}
{"idx": 11906, "func": "invoke the constructor method from the instanceThis", "target": 0}
{"idx": 11907, "func": "call sp_help on the stored procedure, then look at the second ResultSet for the parameter information.", "target": 0}
{"idx": 11908, "func": "According to Slava this is better", "target": 0}
{"idx": 11909, "func": "//{{{ getDownloadDir() method", "target": 0}
{"idx": 11910, "func": "LRUMap does not support generics currently", "target": 0}
{"idx": 11911, "func": "verify list of exceptions", "target": 0}
{"idx": 11912, "func": "Node", "target": 0}
{"idx": 11913, "func": "Get the two ends of any valid edge", "target": 0}
{"idx": 11914, "func": "For use by the server script", "target": 0}
{"idx": 11915, "func": "//check for all components values in the collection", "target": 0}
{"idx": 11916, "func": "jar execution requires an additional -jar option", "target": 0}
{"idx": 11917, "func": "Add an arrow with an open arrow head", "target": 0}
{"idx": 11918, "func": "//swallow it (the transaction _was_ successful or successfully rolled back)", "target": 0}
{"idx": 11919, "func": "insert new value", "target": 0}
{"idx": 11920, "func": "line 964", "target": 0}
{"idx": 11921, "func": "generate.add(Actions.GenerateWeb);", "target": 0}
{"idx": 11922, "func": "mockDatabaseObjectInfo", "target": 0}
{"idx": 11923, "func": "execute", "target": 0}
{"idx": 11924, "func": "empty line. inherit previous line's fold level", "target": 0}
{"idx": 11925, "func": "Start with 0 so tries at least once, and retries at most MAX_CONN_RETRIES times", "target": 0}
{"idx": 11926, "func": "advance line Stroke", "target": 0}
{"idx": 11927, "func": "If it is an unqualified name, we will assume it refers to a type parameter, since we don't support default package. //", "target": 0}
{"idx": 11928, "func": "Just try to use what we got", "target": 0}
{"idx": 11929, "func": "//EObjectToChangesMapEntryImpl", "target": 0}
{"idx": 11930, "func": "email addresses and phone numbers", "target": 0}
{"idx": 11931, "func": "log options used", "target": 0}
{"idx": 11932, "func": "DocumentListener Methods", "target": 0}
{"idx": 11933, "func": "unsigned short, native", "target": 0}
{"idx": 11934, "func": "execute background search", "target": 0}
{"idx": 11935, "func": "disable text in toolbar", "target": 0}
{"idx": 11936, "func": "call this before any Iterator method to make sure that the current Iterator is not exhausted", "target": 0}
{"idx": 11937, "func": "//Class/basicGetGenFeature.override.javajetinc", "target": 0}
{"idx": 11938, "func": "handle orphaned entities!!", "target": 0}
{"idx": 11939, "func": "//end point is either lower left corner --> vertical gradient //or end point is upper right corner --> horizontal gradient", "target": 0}
{"idx": 11940, "func": "/////////////////////////////////////////////////////////////////////Proxy methods for real UMLModelElementTaggedValue ///////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 11941, "func": "outline stroke", "target": 0}
{"idx": 11942, "func": "This doesn't work in UML2: both owner and property needed!", "target": 0}
{"idx": 11943, "func": "//DEBUG //System.err.println(\"isRegisterNonXS: \"+name);", "target": 0}
{"idx": 11944, "func": "get the list of files in the dir", "target": 0}
{"idx": 11945, "func": "Check if used by attributes", "target": 0}
{"idx": 11946, "func": "Should be true", "target": 0}
{"idx": 11947, "func": "only for docked", "target": 0}
{"idx": 11948, "func": "//_listeners.add(ISQLExecutionListener.class, lis);", "target": 0}
{"idx": 11949, "func": "TODO @author fdietz: no paging used currently show only first 5 results", "target": 1}
{"idx": 11950, "func": "(non-Javadoc) @see org.eclipse.emf.ecore.xmi.XMLResource#load(org.w3c.dom.Node, java.util.Map)", "target": 0}
{"idx": 11951, "func": "promise to implement three to N", "target": 0}
{"idx": 11952, "func": "Make sure everything created gets deleted", "target": 0}
{"idx": 11953, "func": "Column 0 Row 0", "target": 0}
{"idx": 11954, "func": "The next AssociationEnd", "target": 0}
{"idx": 11955, "func": "If this line has become longer or shorter (in which case the new physical line number is different from the cached one) we need to: - continue updating past the last line - advise the text area to repaint On the other hand, if the line wraps beyond lastScreenLine, we need to keep updating the chunk list to ensure proper alignment of invalidation flags (see start of method)", "target": 0}
{"idx": 11956, "func": "dangling '%' char", "target": 0}
{"idx": 11957, "func": "override some of the code so we can test the handling of the return code only.", "target": 0}
{"idx": 11958, "func": "TODO: move to plot state", "target": 1}
{"idx": 11959, "func": "16A0..16FF;", "target": 0}
{"idx": 11960, "func": "//{{{ autodetect() method", "target": 0}
{"idx": 11961, "func": "//FIXME we should really assert a value here", "target": 1}
{"idx": 11962, "func": "Create a new arg list with a different set of args (but same types)", "target": 0}
{"idx": 11963, "func": "//utilUnderTest = ;", "target": 0}
{"idx": 11964, "func": "//{{{ expandAbbrev() method", "target": 0}
{"idx": 11965, "func": "Add the path of the model to the search path, so we can read dependent models", "target": 0}
{"idx": 11966, "func": "couldn't resolve it", "target": 0}
{"idx": 11967, "func": "save the pointer needed to enable editing of data on-demand", "target": 0}
{"idx": 11968, "func": "helper method to save the cache entry", "target": 0}
{"idx": 11969, "func": "user said not to read any of the data from the blob", "target": 0}
{"idx": 11970, "func": "XXX", "target": 0}
{"idx": 11971, "func": "//{{{ hyperSearch() method", "target": 0}
{"idx": 11972, "func": "sometimes the last few days of the year are considered to fall in the first week of the following year. Refer to the Javadocs for GregorianCalendar.", "target": 0}
{"idx": 11973, "func": "root.addSubShape(outlineShape);", "target": 0}
{"idx": 11974, "func": "draw the bar...", "target": 0}
{"idx": 11975, "func": "show dialog", "target": 0}
{"idx": 11976, "func": "Mock objects", "target": 0}
{"idx": 11977, "func": "//mappingRoot.ePackageMapping().getMapping_Inputs() : //mappingRoot.ePackageMapping().getMapping_Outputs(),", "target": 0}
{"idx": 11978, "func": "Force an update because Eclipse hides empty menus now. //", "target": 0}
{"idx": 11979, "func": "------------------------------------------------------", "target": 0}
{"idx": 11980, "func": "url to website/homepage", "target": 0}
{"idx": 11981, "func": "store reference to source message", "target": 0}
{"idx": 11982, "func": "overridden to make public", "target": 0}
{"idx": 11983, "func": "Surround the selected element with double-quotes, if necessary", "target": 0}
{"idx": 11984, "func": "//{{{ isLoaded() method", "target": 0}
{"idx": 11985, "func": "//item.setSelected(checkbox.isSelected());", "target": 0}
{"idx": 11986, "func": "//{{{ getSymlinkPath() method", "target": 0}
{"idx": 11987, "func": "i18n[DataSetUpdateableTableModelImpl.error.unknownupdateerror=Unknown problem during update.\\nNo count of updated rows was returned.\\nDatabase may be corrupted!]", "target": 0}
{"idx": 11988, "func": "FOREVER CHECKBOX $NON-NLS-1$", "target": 0}
{"idx": 11989, "func": "Fill 2 of value (byte) 33 Fill 2 of value (byte) -19", "target": 0}
{"idx": 11990, "func": "if the edge is near the bottom of the classifier roles, we enlarge all the FigClassifierRoles in the diagram.", "target": 0}
{"idx": 11991, "func": "The 2 Radios have only one information.", "target": 0}
{"idx": 11992, "func": "i18n[mssql.allDefaults=All defaults]", "target": 0}
{"idx": 11993, "func": "(major).(minor).(<99 = preX, 99 = final).(bug fix)", "target": 0}
{"idx": 11994, "func": "The driver throws an exception for varchar with length > 3924", "target": 0}
{"idx": 11995, "func": "String sampleLog = \"C:/eclipse3/workspace/jmeter-21/bin/testfiles/sample_log1.jtl\";", "target": 0}
{"idx": 11996, "func": "Add child descriptors contributed by extenders. //", "target": 0}
{"idx": 11997, "func": "dynamic filters specifically for many-to-many inside the collection", "target": 0}
{"idx": 11998, "func": "ensure that the text does not start with a newline", "target": 0}
{"idx": 11999, "func": "When user leaves a cell after editing it, the contents of that cell need to be converted from a string into an object of the appropriate type before updating the table. However, when the call comes from the Popup window, the data has already been converted and validated. We assume that a String being passed in here is a value from a text field that needs to be converted to an object, and a non-string object has already been validated and converted.", "target": 0}
{"idx": 12000, "func": "If we can't set the collection, try setting use the single value of the collection. //", "target": 0}
{"idx": 12001, "func": "TODO: assumes public, user pref for default visibility?", "target": 0}
{"idx": 12002, "func": "calculation for negatives when %u specified for values >= Integer.MIN_VALUE 2, MRI uses (the equivalent of) long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val for smaller values, BigInteger math is required to conform to MRI's result.", "target": 0}
{"idx": 12003, "func": "Do nothing.", "target": 0}
{"idx": 12004, "func": "//----- from now, the methods are all related to DOM tree manipulation", "target": 0}
{"idx": 12005, "func": "The modelelement must have been deleted - ignore this - it will pass.", "target": 0}
{"idx": 12006, "func": "TODO: Get rid of magic numbers! Figure out which represent line widths vs padding vs offsets", "target": 1}
{"idx": 12007, "func": "line 857", "target": 0}
{"idx": 12008, "func": "This test disabled for now until we figure out a better way to do concurrent modifications to the schemaInfoCache. @Test", "target": 0}
{"idx": 12009, "func": "For now just skip registering this and ignore the request, but the real issue is that MagicDraw serializes the same object in two different composition associations, first in the referencing file and second in the referenced file", "target": 0}
{"idx": 12010, "func": "line 623", "target": 0}
{"idx": 12011, "func": "end class FigCompositeState", "target": 0}
{"idx": 12012, "func": "Add the ControlMimePart", "target": 0}
{"idx": 12013, "func": "i18n[generalSessionPropertiesPanel.dataTYpe1=Properties for the individual Data Types may be set in the]", "target": 0}
{"idx": 12014, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#supportsSchemasInDataManipulation()", "target": 0}
{"idx": 12015, "func": "Override setBounds to keep shapes looking right. @see org.tigris.gef.presentation.Fig#setBounds(int, int, int, int)", "target": 0}
{"idx": 12016, "func": "//System.err.println(\" main/len=\" + len);", "target": 0}
{"idx": 12017, "func": "We never directly set a multiplicity-many feature to a list directly. Instead, we remove the old values values, move the values that remain, and insert the new values. If all old values are removed, we'll still set it to an empty list, or unset it, as appropriate. //", "target": 0}
{"idx": 12018, "func": "Only the bigPort may be filled", "target": 0}
{"idx": 12019, "func": "a default hashCode()", "target": 0}
{"idx": 12020, "func": "Values for constants are bit indexes", "target": 0}
{"idx": 12021, "func": "\"ALTER TABLE $tableName$ RENAME COLUMN $oldColumnName$ to $newColumnName$\";", "target": 0}
{"idx": 12022, "func": "Set the tooltip of the arrow to open combined tools:", "target": 0}
{"idx": 12023, "func": "@see org.argouml.model.ScopeKind#getInstance()", "target": 0}
{"idx": 12024, "func": "if label is default or equals switchVal", "target": 0}
{"idx": 12025, "func": "ALTER TABLE <tablename> ADD [CONSTRAINT <constraintname>] FOREIGN KEY (<column list>) REFERENCES <exptablename> (<column list>) [ON {DELETE | UPDATE} {CASCADE | SET DEFAULT | SET NULL}];", "target": 0}
{"idx": 12026, "func": "Not should always succeed against an empty result", "target": 0}
{"idx": 12027, "func": "look for default view settings (if not found, null is returned)", "target": 0}
{"idx": 12028, "func": "Start I/O threads", "target": 0}
{"idx": 12029, "func": "======== this ========", "target": 0}
{"idx": 12030, "func": "//REVISIT: at this point even non HTTP connections may //support the if-modified-since behaviour -we just check //the date of the content and skip the write if it is not //newer. Some protocols (FTP) don't include dates, of //course.", "target": 0}
{"idx": 12031, "func": "//MappingAdapterFactory", "target": 0}
{"idx": 12032, "func": "EUC-JP", "target": 0}
{"idx": 12033, "func": "strip off \"_dot_rb\" for .rb files", "target": 0}
{"idx": 12034, "func": "i18n[HelpViewerWindow.error.displaydocument=Error displaying document]", "target": 0}
{"idx": 12035, "func": "See if we can copy a class right off", "target": 0}
{"idx": 12036, "func": "inlined: bsW(2, 3);", "target": 0}
{"idx": 12037, "func": "verify SnoozeOrder starts off not snoozed", "target": 0}
{"idx": 12038, "func": "TODO : perhaps we should additionally require that the incoming entity version be equivalent to the defined unsaved-value?", "target": 1}
{"idx": 12039, "func": "we update the activations...", "target": 0}
{"idx": 12040, "func": "defensive check", "target": 0}
{"idx": 12041, "func": "will be null for HEAD", "target": 0}
{"idx": 12042, "func": "Only specified format are allowed.", "target": 0}
{"idx": 12043, "func": "@see java.awt.dnd.DropTargetListener#dropActionChanged(java.awt.dnd.DropTargetDragEvent)", "target": 0}
{"idx": 12044, "func": "//{{{ getTextArea() method", "target": 0}
{"idx": 12045, "func": "show error message", "target": 0}
{"idx": 12046, "func": "i18n[SQLResultExecuterPanel.rowsSelected={0} Row(s) Selected]", "target": 0}
{"idx": 12047, "func": "$NON-NLS-1$ Maximum connection retries", "target": 0}
{"idx": 12048, "func": "handle GradientPaint as a special case", "target": 0}
{"idx": 12049, "func": "//{{{ getViews() method", "target": 0}
{"idx": 12050, "func": "TODO: Before allowing this, we should really check that TemplateParameter.defaultElement is defined", "target": 1}
{"idx": 12051, "func": "put size at the specified place", "target": 0}
{"idx": 12052, "func": "parse for quotings and color the darkgray", "target": 0}
{"idx": 12053, "func": "I don't think localMatcher can be null here, but check just in case", "target": 0}
{"idx": 12054, "func": "set read-only properties CheckStyle:VisibilityModifier ON", "target": 0}
{"idx": 12055, "func": "Show the colourless image. //", "target": 0}
{"idx": 12056, "func": "higlight the background corners...", "target": 0}
{"idx": 12057, "func": "Prepare the left hand side and get the data type.", "target": 0}
{"idx": 12058, "func": "2nd argument", "target": 0}
{"idx": 12059, "func": "TODO: This references the concrete factory We need a factories factory", "target": 1}
{"idx": 12060, "func": "//{{{ match() method", "target": 0}
{"idx": 12061, "func": "check that reference zipfilesets cannot have specific attributes", "target": 0}
{"idx": 12062, "func": "Only one open quote. //", "target": 0}
{"idx": 12063, "func": "End BeanShell Modification - moved body to overloaded getMessage()", "target": 0}
{"idx": 12064, "func": "Case 2: The current token is after FROM and before '.'.", "target": 0}
{"idx": 12065, "func": "Add any files", "target": 0}
{"idx": 12066, "func": "expected fileOperationInfos for files that will be installed", "target": 0}
{"idx": 12067, "func": "Get the salutation if one is specified", "target": 0}
{"idx": 12068, "func": "draw data lines", "target": 0}
{"idx": 12069, "func": "We capture the original \"new\" and make it private", "target": 0}
{"idx": 12070, "func": "TODO: how to handle changes in shadowsize from the project properties?", "target": 1}
{"idx": 12071, "func": "Keylistener to indicate changing of text", "target": 0}
{"idx": 12072, "func": "Remove any relative prefix, e.g. \"./foo/bar\" becomes \"foo/bar\".", "target": 0}
{"idx": 12073, "func": "check the id unsaved-value", "target": 0}
{"idx": 12074, "func": "menuManager.insertBefore(\"additions\", new Separator(\"schema-actions\")); menuManager.insertAfter(\"schema-actions\", generateSchemaAction);", "target": 0}
{"idx": 12075, "func": "//-- XSLTProcess", "target": 0}
{"idx": 12076, "func": "Only one end should be navigable", "target": 0}
{"idx": 12077, "func": "line 779", "target": 0}
{"idx": 12078, "func": "show docking view", "target": 0}
{"idx": 12079, "func": "Begin BeanShell Modification - override error methods and toString", "target": 0}
{"idx": 12080, "func": "//TODO: Open in message frame //TODO: Handle also message attachments from OpenInComposer action", "target": 1}
{"idx": 12081, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getDatabaseProductName()", "target": 0}
{"idx": 12082, "func": "execute java process", "target": 0}
{"idx": 12083, "func": "//{{{ addExtension() method", "target": 0}
{"idx": 12084, "func": "text which we are looking for, or want to replace replaced text which we want to have text where we make a search search/replace is case sensitive search/replace matches whole words only search/replace works backwards on the text", "target": 0}
{"idx": 12085, "func": "ok, that didn't work - let's see if the table looks fully qualified. if so, we'll split the name from the schema/catalog and try that.", "target": 0}
{"idx": 12086, "func": "String definitions for the charsetnames NOTE: these are also used to look up the menuentries from the resourceloader", "target": 0}
{"idx": 12087, "func": "there's a duplicate: let's recheck if there is a conflict", "target": 0}
{"idx": 12088, "func": "only executed if above loop falls through, ie there is no handler for this file", "target": 0}
{"idx": 12089, "func": "Readline", "target": 0}
{"idx": 12090, "func": "check if the optional value exists", "target": 0}
{"idx": 12091, "func": "//{{{ Buffer events", "target": 0}
{"idx": 12092, "func": "Process big buckets, starting with the least full.", "target": 0}
{"idx": 12093, "func": "Close the connection", "target": 0}
{"idx": 12094, "func": "Check for Singleton stereotype, uninitialised instance variables and outgoing associations, as per JavaDoc above.", "target": 0}
{"idx": 12095, "func": "check to see if the shutdown hook methods exists (support pre-JDK 1.3 VMs)", "target": 0}
{"idx": 12096, "func": "field is not nullable or input was not a delete we have already handled all legal input, so just tell user this is being ignored", "target": 0}
{"idx": 12097, "func": "find the serial index of the period specified by 'latest'", "target": 0}
{"idx": 12098, "func": "//{{{ registerService() method", "target": 0}
{"idx": 12099, "func": "Used to be 'dábale', but caused trouble on Gump. Reasons unknown.", "target": 0}
{"idx": 12100, "func": "This is now handled earlier in this method.", "target": 0}
{"idx": 12101, "func": "//ignored", "target": 0}
{"idx": 12102, "func": "base64 encode photo byte[] to string", "target": 0}
{"idx": 12103, "func": "//{{{ searchInDirectory() method", "target": 0}
{"idx": 12104, "func": "Translate ret = (a || b) to ret = (a ? true : b) as follows v1 = -- build(a) -- OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. while this info can be inferred by using attributes, why bother if we can do this? ret = true beq(v1, true, L) v2 = -- build(b) -- ret = v2 L: //", "target": 0}
{"idx": 12105, "func": "example configuration (tree.xml) <actionlist> <action uid=\"122\" type=\"Move Message\"></action> </actionlist>", "target": 0}
{"idx": 12106, "func": "//set the sender", "target": 0}
{"idx": 12107, "func": "manually rewrite the connection url, because if there is no rewrite the database files are created in the starting directory, we don't want that!", "target": 1}
{"idx": 12108, "func": "@see org.argouml.model.VisibilityKind#getProtected()", "target": 0}
{"idx": 12109, "func": "Record the input and output streams for closing in case of failure so that handles are not left open. //", "target": 0}
{"idx": 12110, "func": "skip if chart is null", "target": 0}
{"idx": 12111, "func": "//private Paint negativeBarPaint;", "target": 0}
{"idx": 12112, "func": "@see org.tigris.gef.ui.PopupGenerator#getPopUpActions(java.awt.event.MouseEvent)", "target": 0}
{"idx": 12113, "func": "i18n[UpdateControllerImpl.changesRecordedTitle=Changes Recorded]", "target": 0}
{"idx": 12114, "func": "updateable only because the user did not specify anything; just override it", "target": 0}
{"idx": 12115, "func": "Delete Stimuli which have this as a Sender or Receiver", "target": 0}
{"idx": 12116, "func": "The EnumeratedAttributes for the three interface implementations. Name-Classname mapping is done in the configure() method.", "target": 0}
{"idx": 12117, "func": "Add local system properties, if the file is found //$NON-NLS-1$", "target": 0}
{"idx": 12118, "func": "Should work whether or not redirector.inputStream == null:", "target": 0}
{"idx": 12119, "func": "i18n[TableExportCsvDlg.useDefaultFormating=Use default formating]", "target": 0}
{"idx": 12120, "func": "(non-Javadoc) @see org.columba.addressbook.facade.IGroupItem#addContact(org.columba.addressbook.facade.IContactItem)", "target": 0}
{"idx": 12121, "func": "//render series in reverse order", "target": 0}
{"idx": 12122, "func": "A buffer for transferring archive contents. //", "target": 0}
{"idx": 12123, "func": "include all interfaces", "target": 0}
{"idx": 12124, "func": "\"\" should become a single empty argument, same for '' PR 5906", "target": 1}
{"idx": 12125, "func": "Create chooser for objects we are to import. Old style modules get to provide their own (although I don't believe any of them do), while new style modules get the a chooser provided by us (which matches what the abstract class FileImportSupport used to provide).", "target": 0}
{"idx": 12126, "func": "there should be no change event when clearing an empty series", "target": 0}
{"idx": 12127, "func": "Ignore it if we can't find it since we'll fail anyway.", "target": 0}
{"idx": 12128, "func": "and leave things unchanged", "target": 0}
{"idx": 12129, "func": "get selected calendar", "target": 0}
{"idx": 12130, "func": "Add a listener for changes to any property", "target": 0}
{"idx": 12131, "func": "@see org.tigris.gef.presentation.FigText#setTextFilled(boolean)", "target": 0}
{"idx": 12132, "func": "For concurrent get resources", "target": 0}
{"idx": 12133, "func": "<email> <work>value</work> <home>value</home> </email>", "target": 0}
{"idx": 12134, "func": "Add logTargets to root logger FIXME What's the clean way to add a LogTarget afterwards ? @param logTargets LogTarget array", "target": 1}
{"idx": 12135, "func": "poly type", "target": 0}
{"idx": 12136, "func": "Precision", "target": 0}
{"idx": 12137, "func": "default tab todo", "target": 0}
{"idx": 12138, "func": "lifecycle methods", "target": 0}
{"idx": 12139, "func": "line 811", "target": 0}
{"idx": 12140, "func": "//{{{ insertSelection() method", "target": 0}
{"idx": 12141, "func": "Init Mime-Header with Default-Values (text/html)", "target": 0}
{"idx": 12142, "func": "c.gridy = 0; c.gridx = 1; JLabel offLabel = new JLabel(\"Off\"); gb.setConstraints(offLabel, c); _mainPanel.add(offLabel);", "target": 0}
{"idx": 12143, "func": "otherwise, a trim-specification and/or a trim-character have been specified; we need to decide which options are present and \"do the right thing\" should leading trim-characters be trimmed? should trailing trim-characters be trimmed? the trim-character the trim-source", "target": 1}
{"idx": 12144, "func": "Attempt the connection:", "target": 0}
{"idx": 12145, "func": "i18n[sessionPropertiesSheet.sessionProperties=- Session Properties]", "target": 0}
{"idx": 12146, "func": "public ColumbaMenu getMenuBar() { return menu; }", "target": 0}
{"idx": 12147, "func": "Don't save this, as it is derived from the time format", "target": 0}
{"idx": 12148, "func": "end class UUIDManager", "target": 0}
{"idx": 12149, "func": "for convenience to save some lookups", "target": 0}
{"idx": 12150, "func": "FIXME better ask the renderer instead of DatasetUtilities", "target": 1}
{"idx": 12151, "func": "Don't beep if the user presses some key we don't know about unless a prefix is active. Otherwise it will beep when caps lock is pressed, etc.", "target": 0}
{"idx": 12152, "func": "= new QueryTree();", "target": 0}
{"idx": 12153, "func": "//$NON-NLS-<n>$", "target": 0}
{"idx": 12154, "func": "If the file being added is META-INF/application.xml, we warn if it's not the one specified in the \"appxml\" attribute - or if it's being added twice, meaning the same file is specified by the \"appxml\" attribute and in a <fileset> element.", "target": 0}
{"idx": 12155, "func": "The method also needs a scope, do both", "target": 0}
{"idx": 12156, "func": "TODO: non-strict option", "target": 1}
{"idx": 12157, "func": "Keep only the plugins that have GenModels for consideration. //", "target": 0}
{"idx": 12158, "func": "The current block is already associated with proc. No need to create a new one", "target": 0}
{"idx": 12159, "func": "background color.", "target": 0}
{"idx": 12160, "func": "line 601", "target": 0}
{"idx": 12161, "func": "//assertions take up space too", "target": 0}
{"idx": 12162, "func": "//This can lead to code smell, meh! Do we care", "target": 1}
{"idx": 12163, "func": "either end of buffer or a line separator char", "target": 0}
{"idx": 12164, "func": "TODO: Should we take some action to ensure signature is valid html?", "target": 1}
{"idx": 12165, "func": "TODO: do above but not below for additional newline nodes", "target": 1}
{"idx": 12166, "func": "TODO: Bob says - how can we auto-generate this list?", "target": 1}
{"idx": 12167, "func": "test that the properties were correctly initialized", "target": 0}
{"idx": 12168, "func": "// top panel", "target": 0}
{"idx": 12169, "func": "Write any appropriate versioning conditional parameters", "target": 0}
{"idx": 12170, "func": "i18n[mysql.droppingDBs=Dropping database(s)]", "target": 0}
{"idx": 12171, "func": "that's what JDK5 produces on Windows Vista", "target": 0}
{"idx": 12172, "func": "Delete all TaggedValues with this type", "target": 0}
{"idx": 12173, "func": "Internationalized strings for this class.", "target": 0}
{"idx": 12174, "func": "assertNotNull(Model.getUmlFactory().buildNode( Model.getMetaTypes().getExtend())); assertNotNull(Model.getUmlFactory().buildNode( Model.getMetaTypes().getInclude())); assertNotNull(Model.getUmlFactory().buildNode( Model.getMetaTypes().getUseCaseInstance())); assertNotNull(Model.getUmlFactory().buildNode( Model.getMetaTypes().getExtensionPoint())); ...", "target": 0}
{"idx": 12175, "func": "ensure that we are currently in the mail component", "target": 0}
{"idx": 12176, "func": "//{{{ showPluginErrorDialog() method", "target": 0}
{"idx": 12177, "func": "create an empty set for the \"not use\" list", "target": 0}
{"idx": 12178, "func": "Separators for parsing a URI string.", "target": 0}
{"idx": 12179, "func": "add to the corresponding positive power of 32 for the result. meaningful? no. conformant? yes. I just write the code...", "target": 0}
{"idx": 12180, "func": "(NOT (NOT_BETWEEN a b) ) => (BETWEEN a b)", "target": 0}
{"idx": 12181, "func": "i18n[userscript.dlgTabScriptsRemove2=Remove]", "target": 0}
{"idx": 12182, "func": "//{{{ _save() method", "target": 0}
{"idx": 12183, "func": "authenticationComboBox.addActionListener(this);", "target": 0}
{"idx": 12184, "func": "(non-Javadoc) @see javax.swing.table.AbstractTableModel#getColumnName(int)", "target": 0}
{"idx": 12185, "func": "Check using default encoding", "target": 0}
{"idx": 12186, "func": "we support up to 4 email addresses", "target": 0}
{"idx": 12187, "func": "it will be null unless remoteStop = true", "target": 0}
{"idx": 12188, "func": "line 1182", "target": 0}
{"idx": 12189, "func": "FIXME: We should not be regenerating this over and over", "target": 1}
{"idx": 12190, "func": "if the types report logical equivalence, return true...", "target": 0}
{"idx": 12191, "func": "Currently, we deal with only two path formats: Unix and Windows And Unix is everything that is not Windows", "target": 0}
{"idx": 12192, "func": "@see org.argouml.model.AggregationKind#getNone()", "target": 0}
{"idx": 12193, "func": "//{{{ setRate() method", "target": 0}
{"idx": 12194, "func": "//bail on no references", "target": 0}
{"idx": 12195, "func": "Remove all the series from the collection and notify listeners.", "target": 0}
{"idx": 12196, "func": "needed for measuring sending time", "target": 0}
{"idx": 12197, "func": "i18n[userscript.scriptAdminErr=Err Msg]", "target": 0}
{"idx": 12198, "func": "TODO: ProjectBrowser doesn't need to mediate this conversation Use an event listener in the ToDoPane to communicate instead. - tfm", "target": 1}
{"idx": 12199, "func": "i18n[editWherColsSheet.ok=OK]", "target": 0}
{"idx": 12200, "func": "TODO: We really want this class to have package scope however the reflection", "target": 1}
{"idx": 12201, "func": "i18n[oracle.showTriggerSource=Show trigger source]", "target": 0}
{"idx": 12202, "func": "TODO: Do we need this one.", "target": 1}
{"idx": 12203, "func": "evaluate a method declaration", "target": 0}
{"idx": 12204, "func": "-- Path-component accessors --", "target": 0}
{"idx": 12205, "func": "//i18n[ColumnDetailsDialog.newColumnValue=NewColumn]", "target": 0}
{"idx": 12206, "func": "if no requests are running, requestDone() will not be called, so we must queue the AWT runner ourselves.", "target": 0}
{"idx": 12207, "func": "//umlReserved.add(\"document\");", "target": 0}
{"idx": 12208, "func": "1-ms test timeline using 5 included and 2 excluded segments. timeline start time = 0 | v 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 .. +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+.. | | | | | |EE|EE| | | | | |EE|EE| | | | | | |EE|EE| <-- msTimeline +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+.. \\_________ ________/ \\_/ \\/ | segment group segment size = 1 ms //", "target": 0}
{"idx": 12209, "func": "unique boundary found", "target": 0}
{"idx": 12210, "func": "CASE 3 : Comparing to a non-TimePeriod object ---------------------------------------------", "target": 0}
{"idx": 12211, "func": "hibernate seems to ignore this type...", "target": 0}
{"idx": 12212, "func": "i18n[HibernateSQLPanel.sql=SQL:]", "target": 0}
{"idx": 12213, "func": "set the mimetype if not done already (and required)", "target": 0}
{"idx": 12214, "func": "ResolvedCritic(Critic, ListSet, boolean)", "target": 0}
{"idx": 12215, "func": "if this is the last time through the loop then move will not occur, but that's what we want", "target": 0}
{"idx": 12216, "func": "CONSTANT TABLE METHODS - pass to delegate //", "target": 0}
{"idx": 12217, "func": "we initialize the coordinates.", "target": 0}
{"idx": 12218, "func": "format validation This class encodes/decodes hexadecimal data @author Jeffrey Rodriguez", "target": 0}
{"idx": 12219, "func": "Infos", "target": 0}
{"idx": 12220, "func": "//??GETRIDOFTHIS", "target": 1}
{"idx": 12221, "func": "remove docs-only jars", "target": 0}
{"idx": 12222, "func": "buffer link list", "target": 0}
{"idx": 12223, "func": "Fetch some variables", "target": 0}
{"idx": 12224, "func": "Iterate over all the operations but skip all the operations in the first super. //", "target": 0}
{"idx": 12225, "func": "//{{{ isMarkerHighlightEnabled()", "target": 0}
{"idx": 12226, "func": "Since we are reading Meta-data about the DB, we should never see a CLOB. However, if we do we assume that it is printable text and that the user wants to see it, so read in the entire thing.", "target": 0}
{"idx": 12227, "func": "//{{{ getNotLoadedPluginJARs() method", "target": 0}
{"idx": 12228, "func": "MRI checks all types first:", "target": 0}
{"idx": 12229, "func": "//place popup according to caret position and Placement", "target": 0}
{"idx": 12230, "func": "must not qualify the new table name", "target": 0}
{"idx": 12231, "func": "Sets the language of an expression. TODO: This operation is fooling the user in thinking that the body of the object is changed. Instead, a new object is created. There is no other way: a MExpression can not be altered, once created! So, this operation returns a newly created object instead. @param handle The expression. @param language The new language. @return The newly created Object.", "target": 1}
{"idx": 12232, "func": "get list of all accounts", "target": 0}
{"idx": 12233, "func": "//{{{ MarkersMenuItem constructor", "target": 0}
{"idx": 12234, "func": "message includes the file name", "target": 0}
{"idx": 12235, "func": "Not found", "target": 0}
{"idx": 12236, "func": "the equations", "target": 0}
{"idx": 12237, "func": "a single separator, possibly preceded by some parent reference segments, is redundant", "target": 0}
{"idx": 12238, "func": "---------- These methods below are used during compile-time optimizations -------", "target": 0}
{"idx": 12239, "func": "Match them and return true. //", "target": 0}
{"idx": 12240, "func": "And set the specification to the current operation.", "target": 0}
{"idx": 12241, "func": "plain internal array assignment", "target": 0}
{"idx": 12242, "func": "MRI 1.8.5-p12 doesn't support 1-char strings, but YARV 0.4.1 does. I don't think it hurts to include this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])", "target": 0}
{"idx": 12243, "func": "legendItemURLGenerator", "target": 0}
{"idx": 12244, "func": "No proxy, so don't check proxy fields", "target": 0}
{"idx": 12245, "func": "workaround for Swing's annoying processing of labels starting with <html>, which often breaks", "target": 1}
{"idx": 12246, "func": "throw BuildException on error", "target": 0}
{"idx": 12247, "func": "try \"get\"", "target": 0}
{"idx": 12248, "func": "Remove from by position in reverse order. //", "target": 0}
{"idx": 12249, "func": "empty space", "target": 0}
{"idx": 12250, "func": "//{{{ Handle regexps", "target": 0}
{"idx": 12251, "func": "Need to clamp source (buffer) size to avoid overrun //", "target": 0}
{"idx": 12252, "func": "FIXME this below is temporary, but its much safer for COW (it prevents not shared Strings with begin != 0) this allows now e.g.: ByteList#set not to be begin aware", "target": 1}
{"idx": 12253, "func": "We can use == for EObjects and EnumLiterals. //", "target": 0}
{"idx": 12254, "func": "place to save reference to DataType object needed for calling the appropriate renderer on the object value", "target": 0}
{"idx": 12255, "func": "identity definition", "target": 0}
{"idx": 12256, "func": "The length is 1 if no item is selected", "target": 0}
{"idx": 12257, "func": "Build a new extension point", "target": 0}
{"idx": 12258, "func": "Equivalent of T_DATA", "target": 0}
{"idx": 12259, "func": "TODO do tests for collections of collections (8.5.13), even though it is not yet supported question: should this happen with all collections or only the constructed ones?", "target": 1}
{"idx": 12260, "func": "Fill 3 of value (byte) -87 Fill 18 of value (byte) 33", "target": 0}
{"idx": 12261, "func": "Whether to use the redirect disabling feature (can be switched off if it does not work)", "target": 0}
{"idx": 12262, "func": "only import VEVENT and VTODO for now", "target": 0}
{"idx": 12263, "func": "find selected rows and make a list of the model elements that are selected", "target": 0}
{"idx": 12264, "func": "//i18n[MappingRoot.classpath=Classpath]", "target": 0}
{"idx": 12265, "func": "show the command", "target": 0}
{"idx": 12266, "func": "shape index", "target": 0}
{"idx": 12267, "func": "case 1 and 2", "target": 0}
{"idx": 12268, "func": "Interface SessionInfoProvider implementation", "target": 0}
{"idx": 12269, "func": "//{{{ getElementCount() method", "target": 0}
{"idx": 12270, "func": "line 286", "target": 0}
{"idx": 12271, "func": "//{{{ paintHorizBorder() method", "target": 0}
{"idx": 12272, "func": "//{{{ preloadSearchDialog() method", "target": 0}
{"idx": 12273, "func": "Always add the type to the return type list.", "target": 0}
{"idx": 12274, "func": "Statement syntax follows.", "target": 0}
{"idx": 12275, "func": "add the current fragment to the THETA_JOINS node", "target": 0}
{"idx": 12276, "func": "required for unit tests", "target": 0}
{"idx": 12277, "func": "Empty strings at EOF", "target": 0}
{"idx": 12278, "func": "@see java.awt.Component#getMinimumSize()", "target": 0}
{"idx": 12279, "func": "TODO - can this eever happen?", "target": 1}
{"idx": 12280, "func": "i18n[DBUtil.error.bindclobfailure=bindBlobVar: failed to bind blob using filesystem - attempting to bind blob using memory]", "target": 0}
{"idx": 12281, "func": "FIXME: add setBaseItemLabelPaint(Paint, boolean) ?", "target": 0}
{"idx": 12282, "func": "Remove all the cookies.", "target": 0}
{"idx": 12283, "func": "backgroundImageAlpha", "target": 0}
{"idx": 12284, "func": "SSS FIXME: Token can be final for a method -- implying that the token is only for this particular implementation of the method But, if the mehod is modified, we create a new method object which in turn gets a new token. What makes sense?? Intuitively, it seems the first one ... but let us see ... Current code version token for this method -- can change during execution as methods get redefined!", "target": 1}
{"idx": 12285, "func": "columns rows", "target": 0}
{"idx": 12286, "func": "Instance //", "target": 0}
{"idx": 12287, "func": "used when postData is pure xml (eg. an xml-rpc call) or for PUT", "target": 0}
{"idx": 12288, "func": "No samples collected ...", "target": 0}
{"idx": 12289, "func": "tables that are netiher children nor parents - utility tables", "target": 0}
{"idx": 12290, "func": "the case of a foreign key to something other than the pk is handled in createPropertyRefConstraints", "target": 0}
{"idx": 12291, "func": "The following will be used as types and tasks", "target": 0}
{"idx": 12292, "func": "This column is created in the create script abd unused unless testing DB2", "target": 0}
{"idx": 12293, "func": "Repeatedly select the lower index and corresponding object, and advance past the selected pair. //", "target": 0}
{"idx": 12294, "func": "already defined", "target": 0}
{"idx": 12295, "func": "self.allConnections->forAll(r | self.namespace.allContents->includes(r.participant) )", "target": 0}
{"idx": 12296, "func": "Give the instance space its object import", "target": 0}
{"idx": 12297, "func": "authentication was successful -> save name/password", "target": 0}
{"idx": 12298, "func": "leftToken made us start as nest 1", "target": 0}
{"idx": 12299, "func": "show this message when all I/O requests are complete", "target": 0}
{"idx": 12300, "func": "By default, no simplifications!", "target": 0}
{"idx": 12301, "func": "TODO: Consider a better way of synchronizing", "target": 1}
{"idx": 12302, "func": "update table", "target": 0}
{"idx": 12303, "func": "idem, e.g. for a generalization with leaf/root object TODO: but showing the message in the statusbar would help TODO: IllegalArgumentException should not be used for events we expect to happen. We need a different way of catching well-formedness rules.", "target": 1}
{"idx": 12304, "func": "axis.setTickMarkStroke(getTickMarkStroke());", "target": 0}
{"idx": 12305, "func": "the driver must still be cached.", "target": 0}
{"idx": 12306, "func": "Property type operations", "target": 0}
{"idx": 12307, "func": "Create the XML reader... xr = XMLReaderFactory.createXMLReader();", "target": 0}
{"idx": 12308, "func": "If systemId is publicId previously mapped from a systemId, try to use the systemId.", "target": 0}
{"idx": 12309, "func": "can't call invoke using super class", "target": 0}
{"idx": 12310, "func": "Create list of interface names to proxy (and make sure they really are interfaces) Also build a hashcode from all classes to use for retrieving previously-created impl", "target": 0}
{"idx": 12311, "func": "Otherwise, try to use the no-arg constructor", "target": 0}
{"idx": 12312, "func": "There are more dependancies then just FKs (like views, etc.), therefore cascadeConstraints is used as a parameter for the TableDropSQL.", "target": 0}
{"idx": 12313, "func": "check handling of null key", "target": 0}
{"idx": 12314, "func": "In Oracle, no action is implied when the ON DELETE clause is omitted", "target": 0}
{"idx": 12315, "func": "end of while loop", "target": 0}
{"idx": 12316, "func": "Reset it", "target": 0}
{"idx": 12317, "func": "A HTTP POST request, with encoding not known", "target": 0}
{"idx": 12318, "func": "convert criteria into int-value", "target": 0}
{"idx": 12319, "func": "Not localized:", "target": 0}
{"idx": 12320, "func": "isInvalid(int):boolean", "target": 0}
{"idx": 12321, "func": "//debug ?", "target": 0}
{"idx": 12322, "func": "@see java.awt.Component#setVisible(boolean)", "target": 0}
{"idx": 12323, "func": "io.available() only returns 0 after EOF is encountered so we need to differentiate between the empty string and EOF", "target": 0}
{"idx": 12324, "func": "time_hi //", "target": 0}
{"idx": 12325, "func": "The switch that delegates to the <code>createXXX</code> methods. <!-- begin-user-doc --> <!-- end-user-doc --> @generated", "target": 0}
{"idx": 12326, "func": "found the string", "target": 0}
{"idx": 12327, "func": "Used as the value of startedLastEventDispatchAt when we're not in the middle of event dispatch.", "target": 0}
{"idx": 12328, "func": "N.B. Cannot change value, as that is used in JMX files $NON-NLS-1$", "target": 0}
{"idx": 12329, "func": "if there is any content after the node on the same line, insert line break (to prevent commenting out extra content)", "target": 0}
{"idx": 12330, "func": "Create and register diagrams for activity and statemachines in the model(s) of the project. If no other diagrams are created, a default Class Diagram will be created. ArgoUML currently requires at least one diagram for proper operation. TODO: Move to XmiFilePersister (protected) @param project The project", "target": 1}
{"idx": 12331, "func": "Register the type of the out param - PostgreSQL uses Types.OTHER", "target": 0}
{"idx": 12332, "func": "update the deprecated field", "target": 0}
{"idx": 12333, "func": "TODO - need a lot more tests", "target": 1}
{"idx": 12334, "func": "Don't allow connections to be created from a read only model element to any other TODO: This should be considered a workaround. It only works because, by default, we place newly created relationships in the namespace of the fromElement. The correct behavior in the presence of read-only elements really depends on the type of connection as well as the writeability of both ends.", "target": 1}
{"idx": 12335, "func": "//{{{ getHandlers() method", "target": 0}
{"idx": 12336, "func": "@see java.awt.Component#getPreferredSize()", "target": 0}
{"idx": 12337, "func": "This check is needed, otherwise the setbase() below gives an exception.", "target": 0}
{"idx": 12338, "func": ".. and set the flags", "target": 0}
{"idx": 12339, "func": "//Object obj = action.getValue(BaseAction.IBaseActionPropertyNames.ROLLOVER_ICON);", "target": 0}
{"idx": 12340, "func": "name of the file", "target": 0}
{"idx": 12341, "func": "execute the script", "target": 0}
{"idx": 12342, "func": "Check for quoted string $NON-NLS-1$ remove quotes", "target": 0}
{"idx": 12343, "func": "Let's at least make a half-assed attempt at conforming to the Metal PLAF colors.", "target": 0}
{"idx": 12344, "func": "FIXME: add setBaseStroke(Stroke, boolean) ?", "target": 0}
{"idx": 12345, "func": "Set a custom LAF", "target": 0}
{"idx": 12346, "func": "i18n[xmlReformatter.xmlWarning2=XML Warning]", "target": 0}
{"idx": 12347, "func": "//@GuardedGy(\"this\")", "target": 0}
{"idx": 12348, "func": "BSHType will cache the type for us", "target": 0}
{"idx": 12349, "func": "switch editor and resync view with model", "target": 0}
{"idx": 12350, "func": "SingletonHolder idiom for lazy initialisation", "target": 0}
{"idx": 12351, "func": "default - if we do not know the data type, then we cannot re-read it", "target": 0}
{"idx": 12352, "func": "Add a new formatter for Sybase-Errors/Warnings", "target": 0}
{"idx": 12353, "func": "//{{{ _setContent() method", "target": 0}
{"idx": 12354, "func": "skip", "target": 0}
{"idx": 12355, "func": "return the index following the '}'", "target": 0}
{"idx": 12356, "func": "Wait for the process to finish", "target": 0}
{"idx": 12357, "func": "standard case - plain XYDataset", "target": 0}
{"idx": 12358, "func": "@see org.argouml.uml.reveng.ImportSettingsInternal#isChangedOnlySelected()", "target": 0}
{"idx": 12359, "func": "@see org.argouml.uml.ui.ActionNewDiagram#createDiagram()", "target": 0}
{"idx": 12360, "func": "Now go through the list in the given order to get the panels", "target": 0}
{"idx": 12361, "func": "If we weren't given a system ID, attempt to use the URL for the JAR that we were loaded from. (Why? - tfm)", "target": 1}
{"idx": 12362, "func": "TODO: Get default output directory from user settings Project p = ProjectManager.getManager().getCurrentProject(); p.getProjectSettings().setGenerationOutputDir(path);", "target": 0}
{"idx": 12363, "func": "Get the main threadcontext (gets constructed for us)", "target": 0}
{"idx": 12364, "func": "//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!", "target": 0}
{"idx": 12365, "func": "model->view update", "target": 0}
{"idx": 12366, "func": "Create and start event pump first so it's available for all others", "target": 0}
{"idx": 12367, "func": "TODO: constraints, ...", "target": 0}
{"idx": 12368, "func": "If we don't have a body, check for required or opt args if opt args, they could have side effects if required args, need to raise errors if too few args passed otherwise, method does nothing, make it a nop", "target": 0}
{"idx": 12369, "func": "@see javax.swing.table.TableModel#setValueAt( java.lang.Object, int, int)", "target": 0}
{"idx": 12370, "func": "Get the Main Frame.", "target": 0}
{"idx": 12371, "func": "//{{{ isClosed() method", "target": 0}
{"idx": 12372, "func": "Check to see if we need a build and start doing the work!", "target": 0}
{"idx": 12373, "func": "@see javax.swing.text.Document#remove(int, int)", "target": 0}
{"idx": 12374, "func": "//{{{ checkFileForLoad() method", "target": 0}
{"idx": 12375, "func": "Impossible.", "target": 0}
{"idx": 12376, "func": "user has not entered anything or has reset to defaults, so make sure there is no entry for this column in the saved info", "target": 0}
{"idx": 12377, "func": "BarRenderer", "target": 0}
{"idx": 12378, "func": "load Object under value", "target": 0}
{"idx": 12379, "func": "persist modified calendar", "target": 0}
{"idx": 12380, "func": "default ~ plain text", "target": 0}
{"idx": 12381, "func": "we have a plugin-handler for this kind of extension", "target": 0}
{"idx": 12382, "func": "//{{{ Set the buffer's path Caveat: won't work if save() called with a relative path. But I don't think anyone calls it like that anyway.", "target": 1}
{"idx": 12383, "func": "i18n[HelpViewerWindow.title=SQuirreL SQL Client Help]", "target": 0}
{"idx": 12384, "func": "ParserSupport.literal_concat). Check token length", "target": 0}
{"idx": 12385, "func": "may well happen", "target": 0}
{"idx": 12386, "func": "Here we use index inside of column names so that we don't have to alias the columns in the dialect. Different dialects call these sequence information columns by different names. Just make sure to preserve the order in the dialect. last_value max_value min_value cache_value increment_by is_cycled", "target": 0}
{"idx": 12387, "func": "@see javax.swing.table.TableModel#getRowCount()", "target": 0}
{"idx": 12388, "func": "Convenience methods to return saved width and height values", "target": 0}
{"idx": 12389, "func": "Connect.", "target": 0}
{"idx": 12390, "func": "add a fourth time period", "target": 0}
{"idx": 12391, "func": "classify nodes by base path", "target": 0}
{"idx": 12392, "func": "backgroundAlpha", "target": 0}
{"idx": 12393, "func": "create a new project and assert that it has the MetaProfile as part of the project's profile configuration", "target": 0}
{"idx": 12394, "func": "//i18n[WhereClausePanel.valueLabel=Value]", "target": 0}
{"idx": 12395, "func": "return getPresentationPackageName() + \".\" + getEditorPluginClassName();", "target": 0}
{"idx": 12396, "func": "Compare the type of the parameters. If any of the types is null, then we have a match.", "target": 0}
{"idx": 12397, "func": "if no output directory is specified, used the target's directory", "target": 0}
{"idx": 12398, "func": "i18n[i18n.notGeneratedInWorkDir=File {0} has not been generated. Cannot continue.]", "target": 0}
{"idx": 12399, "func": "$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$", "target": 0}
{"idx": 12400, "func": "If the attribute is set, record it's old value. //", "target": 0}
{"idx": 12401, "func": "have the DataType object fill in the appropriate kind of value into the appropriate variable position in the prepared stmt", "target": 0}
{"idx": 12402, "func": "//(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));", "target": 0}
{"idx": 12403, "func": "exec command on system runtime", "target": 0}
{"idx": 12404, "func": "//{{{ getTabSize() method", "target": 0}
{"idx": 12405, "func": "delete when null => original value", "target": 0}
{"idx": 12406, "func": "check whether the character is in the range 0x30 ~ 0x39", "target": 0}
{"idx": 12407, "func": "If our position was clamped, try to make it up on the other end", "target": 0}
{"idx": 12408, "func": "Probably a missing jar", "target": 0}
{"idx": 12409, "func": "Test with all kinds of input data", "target": 0}
{"idx": 12410, "func": "TODO: mvw: do we really look into super-types of the stereotype, or should we be looking into super-types of the baseclass?", "target": 1}
{"idx": 12411, "func": "seriesKey", "target": 0}
{"idx": 12412, "func": "check for frame field reads or writes", "target": 0}
{"idx": 12413, "func": "assumed this is called after a font render context is set up. changing font render context settings without a setStyles() call will not reset cached monospaced font info.", "target": 0}
{"idx": 12414, "func": "deal with the ResourceCollections", "target": 0}
{"idx": 12415, "func": "History count", "target": 0}
{"idx": 12416, "func": "AFTER", "target": 0}
{"idx": 12417, "func": "classloader wants no leading slash", "target": 0}
{"idx": 12418, "func": "//yyGindex 136", "target": 0}
{"idx": 12419, "func": "thread context, receiver and original args", "target": 0}
{"idx": 12420, "func": "try to re-use already instanciated class", "target": 0}
{"idx": 12421, "func": "Work out the radii of the ellipse, a and b. The top right corner of the ellipse (Cartesian coordinates, centered on the origin) will be at (x,y)", "target": 0}
{"idx": 12422, "func": "else absolute path: keep it and query", "target": 0}
{"idx": 12423, "func": "return with an error", "target": 0}
{"idx": 12424, "func": "for the column that is being changed, use the value passed in by the caller (which may be either the current value or the new replacement value)", "target": 0}
{"idx": 12425, "func": "now run main threads in limited numbers... start initial batch of threads", "target": 0}
{"idx": 12426, "func": "if user doesn't overwrite logger settings with commandline arguments just initialize default logging Logging.createDefaultHandler();", "target": 0}
{"idx": 12427, "func": "create a new collection wrapper, to be initialized later", "target": 0}
{"idx": 12428, "func": "Add type/creator to local buffer property list on open", "target": 0}
{"idx": 12429, "func": "models for addressbook/recipients lists", "target": 0}
{"idx": 12430, "func": "we do have another slash; omit both / and . (JRUBY-1606)", "target": 0}
{"idx": 12431, "func": "//For testing on the live server URL l_url = new URL(\"http://sqlvalidator.mimer.com/beta2/services\");", "target": 0}
{"idx": 12432, "func": "//Maybe do nothing at all?", "target": 1}
{"idx": 12433, "func": "The drag gesture listener is notified of drag gestures by a recognizer. The typical response is to initiate a drag by invoking DragSource.startDrag(). <p> TODO: find a way to show a different image when multiple elements are dragged. @param dragGestureEvent the DragGestureEvent describing the gesture that has just occurred @see java.awt.dnd.DragGestureListener#dragGestureRecognized(java.awt.dnd.DragGestureEvent)", "target": 1}
{"idx": 12434, "func": "@see org.tigris.gef.graph.GraphListener#edgeAdded(org.tigris.gef.graph.GraphEvent)", "target": 0}
{"idx": 12435, "func": "now that we have stripped the file, we can parse the parameters", "target": 0}
{"idx": 12436, "func": "The value is in the second group", "target": 0}
{"idx": 12437, "func": "i18n[CreateTableOfCurrentSQLCommand.noQuery=No query found to create the script from.]", "target": 0}
{"idx": 12438, "func": "//{{{ ButtonLayout class", "target": 0}
{"idx": 12439, "func": "//{{{ getEnd() method", "target": 0}
{"idx": 12440, "func": "no new methods required", "target": 0}
{"idx": 12441, "func": "By default, the first value of the combobox is selected.", "target": 0}
{"idx": 12442, "func": "Force that the last line in buffer does NOT have a newline", "target": 0}
{"idx": 12443, "func": "Construct an exception with a message and a causing exception. @param message the message @param c the cause of the exception public XmiReferenceException(String message, Throwable c) { super(message, c); }", "target": 0}
{"idx": 12444, "func": "while", "target": 0}
{"idx": 12445, "func": "snip off ruby or jruby command from list of arguments leave alone if the command is the name of a script", "target": 0}
{"idx": 12446, "func": "This only works for old globally registered things.", "target": 0}
{"idx": 12447, "func": "test if our To headerfield contains or contains not the search string", "target": 0}
{"idx": 12448, "func": "//{{{ ok() method", "target": 0}
{"idx": 12449, "func": "upper-case package name TODO: top-level upper-case package was supported in the previous (Ruby-based) implementation, so leaving as is. see note at #getProxyOrPackageUnderPackage re: future approach below the top-level.", "target": 1}
{"idx": 12450, "func": "i18n[UdfDetailsTab.hint=Display UDF details]", "target": 0}
{"idx": 12451, "func": "Execute a Ruby script (add the menubar to the frame).", "target": 0}
{"idx": 12452, "func": "@see javax.swing.event.CaretListener#caretUpdate(javax.swing.event.CaretEvent)", "target": 0}
{"idx": 12453, "func": "line 555", "target": 0}
{"idx": 12454, "func": "TODO: implement the entity for the annotation", "target": 1}
{"idx": 12455, "func": "Outer only once + (\"three\" + \"only once five and six\" + (\"four\" + \"seven\") innerLoopCount) outerLoopCount;", "target": 0}
{"idx": 12456, "func": "mark found pattern (select) //text.grabFocus();", "target": 0}
{"idx": 12457, "func": "If we want to support multiple commands in the command path we need to change this to not throw the exception.", "target": 0}
{"idx": 12458, "func": "i18n[SQLPanelAPI.untitledLabel=Untitled]", "target": 0}
{"idx": 12459, "func": "//{{{ setExpanded() method", "target": 0}
{"idx": 12460, "func": "Generate code to unwrap bsh Primitive types", "target": 0}
{"idx": 12461, "func": "//tokens that close a sub expression //tokens that open a sub expression //tokens that would indicate a sub expression is a boolean expression", "target": 0}
{"idx": 12462, "func": "Parse '='", "target": 0}
{"idx": 12463, "func": "we can't do anything", "target": 0}
{"idx": 12464, "func": "//{{{ WindowTableModel class", "target": 0}
{"idx": 12465, "func": "maxValue", "target": 0}
{"idx": 12466, "func": "Workaround for JDK bug 4071281, where system.in.available() returns too large a value. This bug has been fixed in JDK 1.2.", "target": 1}
{"idx": 12467, "func": "<!-- begin-user-doc --> The <b>Adapter Factory</b> for the model. It provides an adapter <code>createXXX</code> method for each class of the model. <!-- end-user-doc --> @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage @generated", "target": 0}
{"idx": 12468, "func": "Let's use it!", "target": 0}
{"idx": 12469, "func": "Now split the segment as needed", "target": 0}
{"idx": 12470, "func": "//GenModelAdapterFactory", "target": 0}
{"idx": 12471, "func": "using default english language, shipped with Columba", "target": 0}
{"idx": 12472, "func": "copy selected URL to clipboard as string", "target": 0}
{"idx": 12473, "func": "This should probably be inside xmiReader.parse but there is another place in this source where XMIReader is used, but it appears to be the NSUML XMIReader. When Argo XMIReader is used consistently, it can be responsible for loading the listener. Until then, do it here.", "target": 1}
{"idx": 12474, "func": "Extend, but only between two use cases. Remember we draw from the extension port to the base port.", "target": 0}
{"idx": 12475, "func": "SQLFilterAction.java Created on March 22, 2003, 10:55 AM Adapted from SessionPropertiesAction.java by Colin Bell. TODO: CHange name to ContentsTabFilterAction", "target": 1}
{"idx": 12476, "func": "generate block bodies initialization code", "target": 0}
{"idx": 12477, "func": "//lastCursor = -1; //prepared = 0;", "target": 0}
{"idx": 12478, "func": "computeRoute(); this recomputes the route if you reload the diagram.", "target": 0}
{"idx": 12479, "func": "Add the given node to the graph, if valid. @see org.tigris.gef.graph.MutableGraphModel#addNode(java.lang.Object)", "target": 0}
{"idx": 12480, "func": "Use null for url to simulate that HttpRequestHdr do not know the encoding for the page. Specify contentEncoding, so the request is \"sent\" using that encoding", "target": 0}
{"idx": 12481, "func": "This is a template method called by the ArgoUML framework as the result of a change to a model element. Do not call this method directly yourself. <p>Override this in any subclasses in order to change what model elements the FigNode is listening to as a result of change to the model. </p> <p>This method is guaranteed by the framework to be running on the same thread as the model subsystem.</p> TODO: Lets refactor this at some time to take UmlChangeEvent argument @param event the UmlChangeEvent that caused the change", "target": 1}
{"idx": 12482, "func": "//TODO: handle property-ref", "target": 1}
{"idx": 12483, "func": "shouldn't throw out deprecation warnings before we know, the wrong version has been used.", "target": 0}
{"idx": 12484, "func": "//negatives allowed or upper bound not between 0 & 1 //if flag then change to log version of highest value to make range begin at a 10^n value; else use nearest int", "target": 0}
{"idx": 12485, "func": "Is Destination setup static? else dynamic $NON-NLS-1$ default to maintain compatibility", "target": 0}
{"idx": 12486, "func": "Close variable like attributes \"%>\"", "target": 0}
{"idx": 12487, "func": "Hide Window on ESC", "target": 0}
{"idx": 12488, "func": "set sort-string/displayname", "target": 0}
{"idx": 12489, "func": "//{{{ getStringProperty() method", "target": 0}
{"idx": 12490, "func": "FIXME: We should be getting this from the runtime rather than assume none? //return runtime.getEncodingService().getEncoding(runtime.getDefaultExternalEncoding());", "target": 1}
{"idx": 12491, "func": "i18n[SchemaPropertiesPanel.schemaTableUpdateLable1=Set]", "target": 0}
{"idx": 12492, "func": "//Class/setGenFeature.javadoc.override.javajetinc", "target": 0}
{"idx": 12493, "func": "Remove any non-Java dependencies from being added. //", "target": 0}
{"idx": 12494, "func": "//TODO: look at the owning property and check that it isn't lazy (by instrumentation)", "target": 1}
{"idx": 12495, "func": "@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAIfExpression(tudresden.ocl.parser.node.AIfExpression)", "target": 0}
{"idx": 12496, "func": "Create a data input text field @return the panel for entering the data", "target": 0}
{"idx": 12497, "func": "i18n[sqlbookmark.desc=Description:]", "target": 0}
{"idx": 12498, "func": "default to plain version", "target": 0}
{"idx": 12499, "func": "MVW This is not the correct way, but it allows connecting a CommentEdge to it! See e.g. ActionAddNote for the correct way. Testcase: 1. Select the message. 2. Click the Comment tool.", "target": 0}
{"idx": 12500, "func": "//{{{ activateIfNecessary() method", "target": 0}
{"idx": 12501, "func": "Determine installation directory. If the jedit.home property is set, use that. Then, look for jedit.jar in the classpath. If that fails, assume this is the web start version.", "target": 0}
{"idx": 12502, "func": "add -command CheckOutFile to the commandline", "target": 0}
{"idx": 12503, "func": "// else", "target": 0}
{"idx": 12504, "func": "not a valid header", "target": 0}
{"idx": 12505, "func": "this() constructors come after super constructors in the table", "target": 0}
{"idx": 12506, "func": "line 336", "target": 0}
{"idx": 12507, "func": "Should we exit at end of the test? (only applies to server, because host is non-null)", "target": 1}
{"idx": 12508, "func": "@see org.argouml.cognitive.critics.Critic#isActive()", "target": 0}
{"idx": 12509, "func": "first pass draws the background (lines, for instance)", "target": 0}
{"idx": 12510, "func": "//{{{ Chunk constructor", "target": 0}
{"idx": 12511, "func": "\"ALTER SEQUENCE $sequenceName$ $startWith$ $increment$ $minimum$ $maximum$ $cache$ $cycle$\";", "target": 0}
{"idx": 12512, "func": "reserve some space for the range axis...", "target": 0}
{"idx": 12513, "func": "we force argParamCount to 1 since we always know we'll have [] args", "target": 0}
{"idx": 12514, "func": "/////////////////////////////////////////////////////////Handling of comments", "target": 0}
{"idx": 12515, "func": "//{{{ getBeanShellReplace() method", "target": 0}
{"idx": 12516, "func": "Action to trigger code generation for one or more classes. <p> In fact, only all named classes and interfaces on the active diagram are generated. Or, if this delivers an empty collection, all selected classes, interfaces and the contents of selected packages are generated (independent if they are named or not). <p> TODO: Implement a more logical behaviour.", "target": 1}
{"idx": 12517, "func": "a file, not in the root since the jar may be one without directory entries, add the parent dir of this file as well.", "target": 0}
{"idx": 12518, "func": "where clause usage group", "target": 0}
{"idx": 12519, "func": "Be careful here since subclasses could have overridden this with the assumption that it wouldn't be called before the constructors finished", "target": 0}
{"idx": 12520, "func": "0.0 is ok float range inverted float range? NaN +infinity -infinity", "target": 0}
{"idx": 12521, "func": "really delete file", "target": 0}
{"idx": 12522, "func": "i18n[graph.dina4=Din A 4]", "target": 0}
{"idx": 12523, "func": "so that quick copy works", "target": 0}
{"idx": 12524, "func": "//{{{ getRowCount() method", "target": 0}
{"idx": 12525, "func": "The keyword used to specify an identity column, if identity column key generation is supported.", "target": 0}
{"idx": 12526, "func": "table has focus", "target": 0}
{"idx": 12527, "func": "get all the files in the descriptor directory", "target": 0}
{"idx": 12528, "func": "for each message", "target": 0}
{"idx": 12529, "func": "allow out-of-range selection selectedDate.set(Calendar.DATE, selectedDay);", "target": 0}
{"idx": 12530, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsLikeEscapeClause()", "target": 0}
{"idx": 12531, "func": "//columns.add(columnName); //aliases.add(tableAlias);", "target": 0}
{"idx": 12532, "func": "//{{{ Inner classes", "target": 0}
{"idx": 12533, "func": "we need to dirty check many-to-ones with not-found=\"ignore\" in order to update the cache (not the database), since in this case a null entity reference can lose information", "target": 0}
{"idx": 12534, "func": "Date formats to try if the time format does not parse as milliseconds", "target": 0}
{"idx": 12535, "func": "@see org.argouml.model.ExtensionMechanismsHelper#getAllPossibleStereotypes(java.util.Collection, java.lang.Object)", "target": 0}
{"idx": 12536, "func": "Here the actions to divide a region", "target": 0}
{"idx": 12537, "func": "not a field, try property access", "target": 0}
{"idx": 12538, "func": "Double.MAX_EXPONENT since Java 1.6", "target": 0}
{"idx": 12539, "func": "//XMLNamespaceValidator", "target": 0}
{"idx": 12540, "func": "//we mark the file to be deleted on exit. //the alternative would be to cache the filename and delete //after execution finished, which is much better for long-lived runtimes //though spawning complicates things...", "target": 0}
{"idx": 12541, "func": "@see org.tigris.swidgets.Dialog#nameButtons()", "target": 0}
{"idx": 12542, "func": "headerfield is empty", "target": 0}
{"idx": 12543, "func": "//{{{ getJAR() method", "target": 0}
{"idx": 12544, "func": "trim the table name in case of HADB", "target": 0}
{"idx": 12545, "func": "code generation", "target": 0}
{"idx": 12546, "func": "IN is the same!", "target": 0}
{"idx": 12547, "func": "keep track of active windows (used by dialogs which don't have a direct parent)", "target": 0}
{"idx": 12548, "func": "Consume to stop other modes from trying to take over", "target": 0}
{"idx": 12549, "func": "parent plot...", "target": 0}
{"idx": 12550, "func": "Activate all Virtual Folders", "target": 0}
{"idx": 12551, "func": "Helper method to simplify marshall routine", "target": 0}
{"idx": 12552, "func": "//{{{ RecentHandler class", "target": 0}
{"idx": 12553, "func": "//ArrayList<String> result = new ArrayList<String>();", "target": 0}
{"idx": 12554, "func": "add stereotypes", "target": 0}
{"idx": 12555, "func": "Write the contents to our master list of links This method assumes that all links are defined in terms of absolute paths, or paths relative to the working directory:", "target": 0}
{"idx": 12556, "func": "f is a module", "target": 0}
{"idx": 12557, "func": "select search folder", "target": 0}
{"idx": 12558, "func": "Do nothing, eplicit from elements are always in the projection list.", "target": 0}
{"idx": 12559, "func": "Interpreter.debug(\"Simple var LHS...\");", "target": 0}
{"idx": 12560, "func": "add listener to changes", "target": 0}
{"idx": 12561, "func": "Get the (sub)-Project instance currently in use. @return Project @since Ant 1.7", "target": 0}
{"idx": 12562, "func": "i18n[I18n.includeTimestamp=Include timestamp in modified properties file]", "target": 0}
{"idx": 12563, "func": "mirko: check", "target": 0}
{"idx": 12564, "func": "backspace", "target": 0}
{"idx": 12565, "func": "ignore!", "target": 0}
{"idx": 12566, "func": "See if we can copy a stereotype right off", "target": 0}
{"idx": 12567, "func": "4.5.2.18 ElementOwnership", "target": 0}
{"idx": 12568, "func": "//{{{ Position methods", "target": 0}
{"idx": 12569, "func": "Disable the DELETE and SAVE buttons if no rows remaining after delete.", "target": 0}
{"idx": 12570, "func": "null 'from' type corresponds to type of Primitive.NULL assign to any object type", "target": 0}
{"idx": 12571, "func": "//No need to be focusable", "target": 0}
{"idx": 12572, "func": "Check that bsh has read the file", "target": 0}
{"idx": 12573, "func": "Remove with null item should remove all entries for key", "target": 0}
{"idx": 12574, "func": "parent directory for mail folders for example: \".columba/mail/\"", "target": 0}
{"idx": 12575, "func": "minimumArcAngleToDraw", "target": 0}
{"idx": 12576, "func": "replace or append", "target": 0}
{"idx": 12577, "func": "MUST be called from synchronized/locked block! should only be called by variableTableStore/variableTableFastStore", "target": 0}
{"idx": 12578, "func": "hibernate impelemnts cast in Dialect.java", "target": 0}
{"idx": 12579, "func": "Now, iterate through the attributes adding them.", "target": 0}
{"idx": 12580, "func": "check to see if the connection is in auto-commit mode (no connection means aggressive connection release outside a JTA transaction context, so MUST be autocommit mode)", "target": 0}
{"idx": 12581, "func": "//cat.debug(\"bad goal\");", "target": 0}
{"idx": 12582, "func": "//strip leading \", \"", "target": 0}
{"idx": 12583, "func": "Empty implementation - not used.", "target": 1}
{"idx": 12584, "func": "if some action was performed", "target": 0}
{"idx": 12585, "func": "//|| ( getParent()!=null && getParent().classStatic != null )", "target": 0}
{"idx": 12586, "func": "i18n[SessionStartupTimeHintDlg.title=Session startup time hint]", "target": 0}
{"idx": 12587, "func": "Store context from Root Thread to pass it to created threads", "target": 0}
{"idx": 12588, "func": "XMLReaderFactory.createXMLReader(vendorParseClass);", "target": 0}
{"idx": 12589, "func": "Increment the symbol frequencies for the selected table.", "target": 0}
{"idx": 12590, "func": "we cannot use an iterator here because the close method manipulates the list", "target": 0}
{"idx": 12591, "func": "//////////////////////////////////////////////////////////////user interface", "target": 0}
{"idx": 12592, "func": "hack to ensure the newly created awt fonts will be rendered with the same height as the swt one", "target": 1}
{"idx": 12593, "func": "Get the corresponding type. //", "target": 0}
{"idx": 12594, "func": "octal constant", "target": 0}
{"idx": 12595, "func": "//Listen for enable changes", "target": 0}
{"idx": 12596, "func": "if name starts with a / we're done (classloader resources won't load with an initial /)", "target": 0}
{"idx": 12597, "func": "not included, to nothing", "target": 0}
{"idx": 12598, "func": "//{{{ OptionTreeModel class", "target": 0}
{"idx": 12599, "func": "//WARNING: this depends on entries in ButtonGroup being in the same order as the values for whereClauseUsage", "target": 0}
{"idx": 12600, "func": "FillAShape filledShadow = new FillAShape(\"shadowShape\", new RoundRectangle(0, 0, 1, 1, 5, 5), bgAbsRect, new Color(0, 0, 0, 100), Boolean.TRUE);", "target": 0}
{"idx": 12601, "func": "using IOOutputStream may not be the most performance way, but it's easy.", "target": 1}
{"idx": 12602, "func": "TODO: These 2 should be handled with an Iterator!!!", "target": 1}
{"idx": 12603, "func": "Control reuse of cached SSL Context in subsequent iterations", "target": 0}
{"idx": 12604, "func": "name of file to do export/import/process on", "target": 0}
{"idx": 12605, "func": "//socks", "target": 0}
{"idx": 12606, "func": "Disabled thread start if listen on sample choice", "target": 0}
{"idx": 12607, "func": "and remaining jump exceptions should restore $!", "target": 0}
{"idx": 12608, "func": "add command to CompoundCommand", "target": 0}
{"idx": 12609, "func": "A \\r was read, hence a MacOS file", "target": 0}
{"idx": 12610, "func": "wrap-round check", "target": 0}
{"idx": 12611, "func": "//RGB values discovered using ZoomIn", "target": 0}
{"idx": 12612, "func": "warn user", "target": 0}
{"idx": 12613, "func": "draw the bottom circle", "target": 0}
{"idx": 12614, "func": "An AntClassLoader which is supposed to delegate to the parent and then to the disk path:", "target": 0}
{"idx": 12615, "func": "line 1972", "target": 0}
{"idx": 12616, "func": "line 1815", "target": 0}
{"idx": 12617, "func": "restore log level", "target": 0}
{"idx": 12618, "func": "find the point at the appropriate distance end point along the axis/angle identified above and add it to the polygon", "target": 0}
{"idx": 12619, "func": "aload 5 load exception", "target": 0}
{"idx": 12620, "func": "Fix for invalid characters. If you think of more add to the list.", "target": 1}
{"idx": 12621, "func": "L L L L L N N N Mc", "target": 0}
{"idx": 12622, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getSystemFunctions()", "target": 0}
{"idx": 12623, "func": "@see org.argouml.ui.StylePanelFig#refresh()", "target": 0}
{"idx": 12624, "func": "try MIME format", "target": 0}
{"idx": 12625, "func": "//{{{ showSearchDialog() method", "target": 0}
{"idx": 12626, "func": "Synchronize the startup directory", "target": 0}
{"idx": 12627, "func": "line 348", "target": 0}
{"idx": 12628, "func": "//TODO: avoid this for non-new instances where mightBeDirty==false", "target": 1}
{"idx": 12629, "func": "advance the minuend if needed", "target": 0}
{"idx": 12630, "func": "//{{{ breakPlugin() method", "target": 0}
{"idx": 12631, "func": "//splitPane.setDividerSize(1); //setDividerSize(5);", "target": 0}
{"idx": 12632, "func": "it's not one of the types we convert, so just pass it out as-is without wrapping", "target": 0}
{"idx": 12633, "func": "Stop when we hit a null index.", "target": 0}
{"idx": 12634, "func": "TO DO: these annotations only work with XYPlot, see if it is possible to make ContourPlot a subclass of XYPlot (DG);", "target": 1}
{"idx": 12635, "func": "Now add the subsamples to the sample", "target": 0}
{"idx": 12636, "func": "draw vertical crosshair if required...", "target": 0}
{"idx": 12637, "func": "Initialize dirty flags for arrays + collections with composite elements and reset reached, doupdate, etc.", "target": 0}
{"idx": 12638, "func": "reply-to", "target": 0}
{"idx": 12639, "func": "i18n[graphToClipboard.closeButton=Close]", "target": 0}
{"idx": 12640, "func": "Userinfo can contain alphanumerics, mark characters, escaped and ';',':','&','=','+','$',','", "target": 0}
{"idx": 12641, "func": "verify the size of the list", "target": 0}
{"idx": 12642, "func": "24 chars", "target": 0}
{"idx": 12643, "func": "Process all the files marked for styling", "target": 0}
{"idx": 12644, "func": "size of message", "target": 0}
{"idx": 12645, "func": "no args, do not pass args processor", "target": 0}
{"idx": 12646, "func": "stupidity", "target": 1}
{"idx": 12647, "func": "//TBD return super classes of classes in this package that come from a delegate package.", "target": 1}
{"idx": 12648, "func": "Fill 16 of value (byte) -87 Fill 3 of value (byte) 33 Fill 4 of value (byte) -87 Fill 3 of value (byte) 33 Fill 10 of value (byte) -19 Fill 2 of value (byte) -87 Fill 2 of value (byte) 33 Fill 10 of value (byte) -87 Fill 17 of value (byte) 33 Fill 3 of value (byte) -87", "target": 0}
{"idx": 12649, "func": "TODO: Localize", "target": 0}
{"idx": 12650, "func": "TODO: not sure that we should skip calling join() altogether. Thread.join() has some implications for Java Memory Model, etc.", "target": 1}
{"idx": 12651, "func": "P K", "target": 0}
{"idx": 12652, "func": "user pressed \"Search\" button", "target": 0}
{"idx": 12653, "func": "Ruby uses Qnil here, we use \"dummy\" because we need a class", "target": 0}
{"idx": 12654, "func": "check for more operations (';' separated):", "target": 0}
{"idx": 12655, "func": "The values must be Java equal. //", "target": 0}
{"idx": 12656, "func": "No op", "target": 0}
{"idx": 12657, "func": "(non-Javadoc) @see org.columba.core.gui.frame.IFrameManager#switchView(org.columba.core.gui.frame.IContainer, java.lang.String)", "target": 0}
{"idx": 12658, "func": "A child got removed -> stay at this position to get the next", "target": 0}
{"idx": 12659, "func": "remove all components from container", "target": 0}
{"idx": 12660, "func": "If the other end is a many, then we should remove the owner from the old value's opposite feature so that undo will put it back. //", "target": 0}
{"idx": 12661, "func": "Since this is (hopefully) a temporary solution, and nobody ever looks at the type of notation event, we can simplify from sending every existing event to one event only. But since there is no catch-all event defined, we just make one up. Rationale: reduce the number of total refreshes of the drawing.", "target": 1}
{"idx": 12662, "func": "TODO : make this the factory for \"entity mode related\" sessions; also means making this the target of transaction-synch and the thing that knows how to cascade things between related sessions At that point, perhaps this thing is a \"SessionContext\", and ConnectionManager is a \"JDBCContext\"? A \"SessionContext\" should live in the impl package...", "target": 1}
{"idx": 12663, "func": "-GL", "target": 0}
{"idx": 12664, "func": "null some variables so that retaining references to closed views won't hurt as much.", "target": 0}
{"idx": 12665, "func": "the boundary parameter", "target": 0}
{"idx": 12666, "func": "We are near the middle, so we'll start by trying to do a drop on. //", "target": 0}
{"idx": 12667, "func": "i18n[popupeditableIoPanel.executeError2=Execute Error]", "target": 0}
{"idx": 12668, "func": "string has it's own ByteList, but it's pointing to a shared buffer (byte[])", "target": 0}
{"idx": 12669, "func": "load other internal headerfields, non-boolean type", "target": 0}
{"idx": 12670, "func": "//////////////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 12671, "func": "register as a listener with sub-components...", "target": 0}
{"idx": 12672, "func": "Maybe update the cache", "target": 0}
{"idx": 12673, "func": "advance line Visible", "target": 0}
{"idx": 12674, "func": "This keeps track of the editing domain that is used to track all changes to the model. <p> TODO: This probably needs to be a set of EditingDomain so that we can manage an EditingDomain per project.", "target": 1}
{"idx": 12675, "func": "-out", "target": 0}
{"idx": 12676, "func": "Handle Derived:", "target": 0}
{"idx": 12677, "func": "//{{{ getListCellRendererComponent() method", "target": 0}
{"idx": 12678, "func": "TODO processing instructions are not sent to recordValues", "target": 1}
{"idx": 12679, "func": "\"UseCaseInstance\", Gone in UML 2.x & unused by ArgoUML", "target": 0}
{"idx": 12680, "func": "If this object is compatible with this reference... //", "target": 0}
{"idx": 12681, "func": "Remove null characters at the end", "target": 0}
{"idx": 12682, "func": "test cases for making Url, and exercise method parseArguments(String queryString)", "target": 0}
{"idx": 12683, "func": "it is a simple table alias {foo}", "target": 0}
{"idx": 12684, "func": "note: absolutePath -> hierarchical", "target": 0}
{"idx": 12685, "func": "title x-axis label y-axis label", "target": 0}
{"idx": 12686, "func": "//{{{ charsToEscapes() method", "target": 0}
{"idx": 12687, "func": "//{{{ writeBooleanArray() method", "target": 0}
{"idx": 12688, "func": "@see org.tigris.gef.presentation.Fig#setBounds(int, int, int, int)", "target": 0}
{"idx": 12689, "func": "////////////////////////////////////////////////////////////////////XML query routines. //////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 12690, "func": "subscribe to the new mailbox", "target": 0}
{"idx": 12691, "func": "//{{{ setRectangularSelectionEnabled() method", "target": 0}
{"idx": 12692, "func": "i.e. '\\\\'", "target": 0}
{"idx": 12693, "func": "Init PGP", "target": 0}
{"idx": 12694, "func": "////////////////////////////////////////////////////////////////////Local Variables. //////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 12695, "func": "xmlResource.getResourceSet().getResources().addAll(generatedResources);", "target": 0}
{"idx": 12696, "func": "get search folder", "target": 0}
{"idx": 12697, "func": "closes reader as well", "target": 0}
{"idx": 12698, "func": "let's update also the actions array", "target": 0}
{"idx": 12699, "func": "shapeLocation", "target": 0}
{"idx": 12700, "func": "//i18n[DeleteAliasAction.error.selectingwindow=Error selecting window]", "target": 0}
{"idx": 12701, "func": "//dmo: added this panel for colorbar control. (start dmo additions)", "target": 0}
{"idx": 12702, "func": "else no collection element, but also no owner", "target": 0}
{"idx": 12703, "func": "//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$", "target": 0}
{"idx": 12704, "func": "setup our test timelines Legend for comments below: <spaces> = Segments included in the final timeline EE = Excluded segments via timeline rules xx = Exception segments inherited from base timeline exclusions", "target": 0}
{"idx": 12705, "func": "clear message-list selection", "target": 0}
{"idx": 12706, "func": "get the fileset and its basedir", "target": 0}
{"idx": 12707, "func": "should be ok performance-wise to generate new delegate instances for each request since these are locally stack-scoped. Besides, it makes the code much easier to read than the old TransactionHelper stuff...", "target": 0}
{"idx": 12708, "func": "array-of-interface-type creation/identity", "target": 0}
{"idx": 12709, "func": "do we need to fill the buffer?", "target": 0}
{"idx": 12710, "func": "set size of mPane according to the available width and fetch root view", "target": 0}
{"idx": 12711, "func": "get translation", "target": 0}
{"idx": 12712, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData#getExportedKeysInfo(net.sourceforge.squirrel_sql.fw.sql.ITableInfo)", "target": 0}
{"idx": 12713, "func": "returns Object covering both Double and Boolean return types", "target": 0}
{"idx": 12714, "func": "//create the URL //ant equivalent of fileToConvert.toURI().toURL().toExternalForm();", "target": 0}
{"idx": 12715, "func": "/////////////////////////////////////////////////////////////////Internal methods", "target": 0}
{"idx": 12716, "func": "///////////////////////", "target": 0}
{"idx": 12717, "func": "end class ClOperationCompartment", "target": 0}
{"idx": 12718, "func": "close.setPreferredSize(d);", "target": 0}
{"idx": 12719, "func": "i18n[I18n.appendI18nStringsProps=Create/Append I18nString.properties files]", "target": 0}
{"idx": 12720, "func": "handle negative value", "target": 0}
{"idx": 12721, "func": "pass mouse down event if some ChartMouseListener are listening", "target": 0}
{"idx": 12722, "func": "1. Remember current message paths", "target": 0}
{"idx": 12723, "func": "Convert position in buffer to Calendar type Assumes that pos >=0 (which is true for getCaretPosition())", "target": 0}
{"idx": 12724, "func": "Let's create a class with the given name, otherwise the user will not understand why we refuse his input!", "target": 0}
{"idx": 12725, "func": "test with a class in a package", "target": 0}
{"idx": 12726, "func": "TODO: the subplot areas needs to be moved out of the plot into the plot state", "target": 1}
{"idx": 12727, "func": "fire all of the notation events", "target": 0}
{"idx": 12728, "func": "Hack: don't show first column, where the model element object is placed.", "target": 1}
{"idx": 12729, "func": "//{{{ setDefault() method", "target": 0}
{"idx": 12730, "func": "TODO: columns, tables", "target": 0}
{"idx": 12731, "func": "LoggingManager.setPriority(\"DEBUG\",\"jmeter\");", "target": 0}
{"idx": 12732, "func": "Only remap package if we didn't remap specific class", "target": 0}
{"idx": 12733, "func": "suggestionsJScrollPane.setMaximumSize( new Dimension( Integer.MAX_VALUE, Integer.MAX_VALUE ) );", "target": 0}
{"idx": 12734, "func": "? two iterations of refinement, maybe should be a for-loop", "target": 0}
{"idx": 12735, "func": "dateFormatOverride", "target": 0}
{"idx": 12736, "func": "hack to reduce the need to load every class in non-GUI mode, which only needs functions TODO perhaps use BCEL to scan class files instead? class name should contain this string class name should not contain this string", "target": 1}
{"idx": 12737, "func": "we could check for base class of the stereotype but the condition normally covers it all.", "target": 0}
{"idx": 12738, "func": "FIXME: add setSeriesStroke(int, Stroke, boolean) ?", "target": 0}
{"idx": 12739, "func": "//private List aliases = new ArrayList();", "target": 0}
{"idx": 12740, "func": "finally block to release monitor", "target": 0}
{"idx": 12741, "func": "if the insertion point is a class, update subclass lists", "target": 0}
{"idx": 12742, "func": "private final static ILogger s_log = LoggerController.createLogger(CreateMysqlTableScriptCommand.class);", "target": 0}
{"idx": 12743, "func": "//yyDefRed 945", "target": 0}
{"idx": 12744, "func": "//must keep for subclass BC, though unused: CheckStyle:ConstantNameCheck OFF - bc", "target": 0}
{"idx": 12745, "func": "tickRadius", "target": 0}
{"idx": 12746, "func": "Make a seamless integration of the text in the note figure.", "target": 0}
{"idx": 12747, "func": "Register the new descriptor", "target": 0}
{"idx": 12748, "func": "@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(java.lang.Object)", "target": 0}
{"idx": 12749, "func": "templates i", "target": 0}
{"idx": 12750, "func": "Get the InputReader to use", "target": 0}
{"idx": 12751, "func": "@see javax.management.NotificationBroadcaster#getNotificationInfo()", "target": 0}
{"idx": 12752, "func": "autoRange", "target": 0}
{"idx": 12753, "func": "unused in parent", "target": 1}
{"idx": 12754, "func": "wait for connection", "target": 0}
{"idx": 12755, "func": "//Fallback to Securest Login method", "target": 0}
{"idx": 12756, "func": "i18n[mssql.ok=OK]", "target": 0}
{"idx": 12757, "func": "search through defaultViews to get settings for given id", "target": 0}
{"idx": 12758, "func": "start JPA entity manager", "target": 0}
{"idx": 12759, "func": "TODO: Optimize for root model case? - tfm", "target": 1}
{"idx": 12760, "func": "If the result about to be returned has children... //", "target": 0}
{"idx": 12761, "func": "Remove the node from removeSet", "target": 0}
{"idx": 12762, "func": "wrap read() methods to track output buffer", "target": 0}
{"idx": 12763, "func": "//{{{ isUntitled() method", "target": 0}
{"idx": 12764, "func": "look for a version attribute", "target": 0}
{"idx": 12765, "func": "Kick off a thread to go and fetch the files one-by-one and register callback class - DownloadStatusEventHandler", "target": 0}
{"idx": 12766, "func": "EqualityHelper", "target": 0}
{"idx": 12767, "func": "setSize( 750, getPreferredSize().height );", "target": 0}
{"idx": 12768, "func": "Pre-requisites are that column needs to be primary key and it must be integer type. alter table IDENTITYTEST2 alter column myid identity", "target": 0}
{"idx": 12769, "func": "close button only there if 'temp' is true", "target": 0}
{"idx": 12770, "func": "//{{{ HelpFile class", "target": 0}
{"idx": 12771, "func": "line 1661", "target": 0}
{"idx": 12772, "func": "Check for \\r, \\r\\n and \\r\\r\\n Regard \\r\\r not followed by \\n as two lines", "target": 0}
{"idx": 12773, "func": "the indicator bounds is calculated from the templateValue (which determines the minimum size), the maxTemplateValue (which, if specified, provides a maximum size) and the actual value", "target": 0}
{"idx": 12774, "func": "@see org.argouml.model.ModelImplementation#getPseudostateKind()", "target": 0}
{"idx": 12775, "func": "sort all the results", "target": 0}
{"idx": 12776, "func": "//sqlResultTypeList.add( type ); Generate the select expression.", "target": 0}
{"idx": 12777, "func": "Just change the time expression", "target": 0}
{"idx": 12778, "func": "Might also be a catalog or a schema name", "target": 0}
{"idx": 12779, "func": "//long v = stl.toTimelineValue(946684800020L);", "target": 0}
{"idx": 12780, "func": "else if it's elements changed", "target": 0}
{"idx": 12781, "func": "Prevent underline events if underline does not change. TODO: GEF should manage this after GEF 0.13.4 is included.", "target": 1}
{"idx": 12782, "func": "Test GUI elements - run for all components", "target": 0}
{"idx": 12783, "func": "Prevent entry if nothing to do", "target": 0}
{"idx": 12784, "func": "Some drivers (e.g. Oracle) give precision as 0 in some cases. When precision is 0, we cannot check the length, so do not try.", "target": 0}
{"idx": 12785, "func": "handle everything after -- as arguments to the jruby process", "target": 0}
{"idx": 12786, "func": "//+ JMX file attribut names - do not change! //$NON-NLS-1$", "target": 0}
{"idx": 12787, "func": "put the data into the DB and the on-screen JTable. If there was a failure, do not make this form go away since the user may be able to fix the problem by changing the data.", "target": 0}
{"idx": 12788, "func": "legacy behavior (with no abstract attribute specified)", "target": 0}
{"idx": 12789, "func": "array not exhausted", "target": 0}
{"idx": 12790, "func": "If an input stream can't be created, ensure that the resource is still considered loaded after the failure, and do all the same processing we'd do if we actually were able to create a valid input stream. //", "target": 0}
{"idx": 12791, "func": "//make a few calls", "target": 0}
{"idx": 12792, "func": "If dm is the top state of the statemachine, then it is not supposed to have incoming transitions.", "target": 0}
{"idx": 12793, "func": "Logger for this class", "target": 0}
{"idx": 12794, "func": "try to get it from the project or keys Backward compatibility", "target": 0}
{"idx": 12795, "func": "search is finished -> enable search button again", "target": 0}
{"idx": 12796, "func": "Don't bother reporting stop test interruptions", "target": 0}
{"idx": 12797, "func": "i18n[editextras.errorRemoveQuotes=Error processing Remove Quotes SQL command: {0}]", "target": 0}
{"idx": 12798, "func": "Configurable implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 12799, "func": "restore the lastModified attribute", "target": 0}
{"idx": 12800, "func": "add to the panel - Update", "target": 0}
{"idx": 12801, "func": "Bug in above method", "target": 1}
{"idx": 12802, "func": "i18n[KeywordsTab.hint=Show all the non-standard Keywords available in DBMS]", "target": 0}
{"idx": 12803, "func": "@see javax.swing.ListCellRenderer#getListCellRendererComponent( javax.swing.JList, java.lang.Object, int, boolean, boolean)", "target": 0}
{"idx": 12804, "func": "clear previous search results", "target": 0}
{"idx": 12805, "func": "getObjectsToDetachGen() should be changed only if required", "target": 0}
{"idx": 12806, "func": "Similarly, trying to delete a read-only directory should succeed", "target": 0}
{"idx": 12807, "func": "Lazy init", "target": 0}
{"idx": 12808, "func": "int n = 10;", "target": 0}
{"idx": 12809, "func": "//{{{ ToolBarEditDialog class", "target": 0}
{"idx": 12810, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#othersDeletesAreVisible(int)", "target": 0}
{"idx": 12811, "func": "@see java.util.Collection#toArray()", "target": 0}
{"idx": 12812, "func": "//addException(exceptionDate.getTime());", "target": 0}
{"idx": 12813, "func": "//conditionally compile", "target": 0}
{"idx": 12814, "func": "FIXME check if the id is a correct file name!", "target": 1}
{"idx": 12815, "func": "de-selects the fig minimising & layout if we are not creating diagrams", "target": 0}
{"idx": 12816, "func": "The methods were matched by a process that doesn't consider the parameters", "target": 0}
{"idx": 12817, "func": "upperPanel.setBorder(BorderFactory.createEtchedBorder());", "target": 0}
{"idx": 12818, "func": "Check assertions for the transaction sample", "target": 0}
{"idx": 12819, "func": "create method for toplevel of script", "target": 0}
{"idx": 12820, "func": "Fill 8 of value (byte) -87", "target": 0}
{"idx": 12821, "func": "A \"path\" attribute for a node within a Path object.", "target": 0}
{"idx": 12822, "func": "For serialization. Don't serialize non-serializable objects.", "target": 0}
{"idx": 12823, "func": "Recognizer for ModelElements which have the <<singleton>> Stereotype applied. <p> TODO: Moved this out of the Facade to someplace elese since it's not Model subsystem specific - tfm 20070607 @param handle candidate @return true if handle is a singleton.", "target": 1}
{"idx": 12824, "func": "trap focus traversal keys also", "target": 0}
{"idx": 12825, "func": "don't bother to check if final method, it won't be there (not generated, can't be!)", "target": 1}
{"idx": 12826, "func": "try UU format", "target": 0}
{"idx": 12827, "func": "//{{{ _createInputStream() method", "target": 0}
{"idx": 12828, "func": "//System.err.println(\"DEBUG: with firstchar-matching: \"+this.firstChar);", "target": 0}
{"idx": 12829, "func": "start the threads", "target": 0}
{"idx": 12830, "func": "line 464", "target": 0}
{"idx": 12831, "func": "And now add listeners to them all:", "target": 0}
{"idx": 12832, "func": "//this.iri = iri;", "target": 0}
{"idx": 12833, "func": "// final ApplicationFiles appFiles = new ApplicationFiles(); // _exportPrefsText.setText(getFileName(here, appFiles.getUserPreferencesFile().getName())); // _exportDriversText.setText(getFileName(here, appFiles.getDatabaseDriversFile().getName())); // _exportAliasesText.setText(getFileName(here, appFiles.getDatabaseAliasesFile().getName()));", "target": 0}
{"idx": 12834, "func": "this will throw an error if there's something wrong.", "target": 0}
{"idx": 12835, "func": "Returns the character encoded by % followed by the two given hex digits, which is always 0xFF or less, so can safely be casted to a byte. If either character is not a hex digit, a bogus result will be returned.", "target": 0}
{"idx": 12836, "func": "return getPrefixedName(\"EditPlugin\");", "target": 0}
{"idx": 12837, "func": "Add the diagram as a listener to the namespace so that when the namespace is removed the diagram is deleted also.", "target": 0}
{"idx": 12838, "func": "//i18n[ImportDataIntoTableExecutor.sqlException=A database error occured while inserting data] //i18n[ImportDataIntoTableExecutor.error=Error]", "target": 0}
{"idx": 12839, "func": "//i18n[LockDetailsTab.hint=Display Locks]", "target": 0}
{"idx": 12840, "func": "//-- processXML", "target": 0}
{"idx": 12841, "func": "if the default group is not mapped to, it should still count towards the group count...", "target": 0}
{"idx": 12842, "func": "Get all the request headers", "target": 0}
{"idx": 12843, "func": "Make sure the correspondence that we depend on doesn't change", "target": 0}
{"idx": 12844, "func": "Note: this field and the following static initializer must be located be in this order!", "target": 0}
{"idx": 12845, "func": "ILOAD_0", "target": 0}
{"idx": 12846, "func": "if the character / is found shows the user a error message", "target": 0}
{"idx": 12847, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsStatementPooling()", "target": 0}
{"idx": 12848, "func": "Generic SQL", "target": 0}
{"idx": 12849, "func": "//include locally for screening purposes", "target": 0}
{"idx": 12850, "func": "//}}} //{{{ Backward search", "target": 0}
{"idx": 12851, "func": "Singleton for now, it may change ( per/classloader )", "target": 1}
{"idx": 12852, "func": "//{{{ invalidateLayout() method", "target": 0}
{"idx": 12853, "func": "Perform the encoding", "target": 0}
{"idx": 12854, "func": "These are values for the TEST attribute above $NON-NLS-1$", "target": 0}
{"idx": 12855, "func": "Any features that delegate to features in this package. //", "target": 0}
{"idx": 12856, "func": "load xml configuration -> will be automatically saved every couple of minutes and on shutdown", "target": 0}
{"idx": 12857, "func": "the name of a class", "target": 0}
{"idx": 12858, "func": "openTickPaint", "target": 0}
{"idx": 12859, "func": "A HTTP POST request, multipart/form-data, with value that will change if they are url encoded Values are similar to __VIEWSTATE parameter that .net uses", "target": 0}
{"idx": 12860, "func": "ClassifierInState.class", "target": 0}
{"idx": 12861, "func": "drawCross(g, x, y);", "target": 0}
{"idx": 12862, "func": "no text!", "target": 0}
{"idx": 12863, "func": "proxy username", "target": 0}
{"idx": 12864, "func": "//{{{ getClassLoader() method", "target": 0}
{"idx": 12865, "func": "//if there is no property-ref, assume the join //is to the subclass table (ie. the table of the //subclass that the association belongs to)", "target": 0}
{"idx": 12866, "func": "Zlib behavior: negative win_bits means no header and no checksum.", "target": 0}
{"idx": 12867, "func": "exception handler should handle all error handling stuff", "target": 0}
{"idx": 12868, "func": "Singleton", "target": 0}
{"idx": 12869, "func": "If defaultViews doesn't exist, create it (backward compatibility)", "target": 0}
{"idx": 12870, "func": "no dec digits, end of parseable data, go to calc", "target": 0}
{"idx": 12871, "func": "TRY SOME ERRORS", "target": 0}
{"idx": 12872, "func": "builder.append(contextButton); builder.append(providerComboBox);", "target": 0}
{"idx": 12873, "func": "rangeGridlinesVisible", "target": 0}
{"idx": 12874, "func": "Do not use Axion's bigint data type. I get the following exception in my test: org.axiondb.AxionException: Invalid value \"3074478078827346\" for column (BIGINT_TYPE_TABLE).BIGINT_COLUMN, expected numeric(20,10) : data exception: numeric value out of range Can someone please tell me why Axion expects big integers to be limited to 20 precision and 10 scale?(Integers should have scale == 0, right?) So an Axion bigint is limited to just 20 digits to the left of the decimal point. TODO: consider filing a bug report against Axion build M3. 38 is the maximum precision for Axion's numeric type.", "target": 0}
{"idx": 12875, "func": "if the from-clauses are the same, we can be a little more aggressive in terms of what we reuse", "target": 0}
{"idx": 12876, "func": "create the dom tree", "target": 0}
{"idx": 12877, "func": "Wait for all Model subsystem events to be delivered", "target": 0}
{"idx": 12878, "func": "starts with the name of a mapped class (new style)", "target": 0}
{"idx": 12879, "func": "i18n[SQLResultExecuterPanel.title=Results]", "target": 0}
{"idx": 12880, "func": "//every condition is xored against the previous one", "target": 0}
{"idx": 12881, "func": "ensure this is called in the EDT", "target": 0}
{"idx": 12882, "func": "values to be masked must be set in the WebApp to \"\"", "target": 0}
{"idx": 12883, "func": "--------------------", "target": 0}
{"idx": 12884, "func": "This is for brute force detection of BLOB/CLOB lengths if necessary", "target": 0}
{"idx": 12885, "func": "2700..27BF;", "target": 0}
{"idx": 12886, "func": "Samplers and Controllers need not apply ...", "target": 0}
{"idx": 12887, "func": "Potentially expensive; do it once", "target": 0}
{"idx": 12888, "func": "must follow the checkbox setting", "target": 0}
{"idx": 12889, "func": "//{{{ smartHome() method", "target": 0}
{"idx": 12890, "func": "we move down or up the messages that are downward the broom", "target": 0}
{"idx": 12891, "func": "Color bgPaint = new Color(255, 150, 150);", "target": 0}
{"idx": 12892, "func": "Set up a SOSCheckout task", "target": 0}
{"idx": 12893, "func": "MENU_ADD_xxx - controls which items are in the ADD menu MENU_PARENT_xxx - controls which items are in the Insert Parent menu", "target": 0}
{"idx": 12894, "func": "version needed to extract", "target": 0}
{"idx": 12895, "func": "Simulate the user switching the statement separator for the session", "target": 0}
{"idx": 12896, "func": "END1 because the draw should be correct", "target": 0}
{"idx": 12897, "func": "Found no such attribute", "target": 0}
{"idx": 12898, "func": "update status message", "target": 0}
{"idx": 12899, "func": "This is the proper behavior for all non-expanded assigners which have a pre > 0. The rest override this.", "target": 0}
{"idx": 12900, "func": "needs to be public for testing", "target": 0}
{"idx": 12901, "func": "processes seem to have some peculiar locking sequences, so we need to ensure nobody is trying to close/destroy while we are", "target": 0}
{"idx": 12902, "func": "@see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)", "target": 0}
{"idx": 12903, "func": "and its stereotypes TODO: Aren't stereotypes handled elsewhere?", "target": 1}
{"idx": 12904, "func": "more difficult case - evaluate later...", "target": 0}
{"idx": 12905, "func": "folder.showFilterDialog(((AbstractMailFrameController) getFrameMediator()));", "target": 0}
{"idx": 12906, "func": "generate the certificate and store in output file", "target": 0}
{"idx": 12907, "func": "all methods are static, no need to instantiate", "target": 0}
{"idx": 12908, "func": "Scope (method/closure) to which this cfg belongs Entry BB -- dummy Exit BB -- dummy The actual graph Next available basic block id", "target": 0}
{"idx": 12909, "func": "//i18n[SyntaxPlugin.duplicateline=duplicateline]", "target": 0}
{"idx": 12910, "func": "//+ JMX attributes - do not change the values $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$", "target": 0}
{"idx": 12911, "func": "line 1317", "target": 0}
{"idx": 12912, "func": "//{{{ StyleTableModel class", "target": 0}
{"idx": 12913, "func": "Select the root object in the view. //", "target": 0}
{"idx": 12914, "func": "Disable DELETE and BROWSE if there are no rows in the table to delete.", "target": 0}
{"idx": 12915, "func": "--entryCursor;", "target": 0}
{"idx": 12916, "func": "TODO: READ_CHECK from MRI", "target": 0}
{"idx": 12917, "func": "user-specified key", "target": 0}
{"idx": 12918, "func": "This will call prepare() which will partially execute the command. //", "target": 0}
{"idx": 12919, "func": "search in subfolders recursively", "target": 0}
{"idx": 12920, "func": "If there are features delegating across packages, add only those that aren't already being generated. //", "target": 0}
{"idx": 12921, "func": "//yuck!", "target": 1}
{"idx": 12922, "func": "build descriptor string", "target": 0}
{"idx": 12923, "func": "this flag is used as a loop exit condition during parsing", "target": 0}
{"idx": 12924, "func": "No timeout in critical section", "target": 0}
{"idx": 12925, "func": "TODO : why aren't these the same?", "target": 1}
{"idx": 12926, "func": "TODO: Is is really used ? @see javax.swing.JComponent#removeNotify()", "target": 1}
{"idx": 12927, "func": "maximumBarWidth", "target": 0}
{"idx": 12928, "func": "If no webxml file is specified, it's an error.", "target": 0}
{"idx": 12929, "func": "MUTABLE", "target": 0}
{"idx": 12930, "func": "Go directly to the right entry in the zip file, get the stream, and wrap it so that closing it closes the zip file. //", "target": 0}
{"idx": 12931, "func": "//TODO: used to be exprNoParens! was this needed?", "target": 1}
{"idx": 12932, "func": "Test Old cookie is not returned", "target": 0}
{"idx": 12933, "func": "convert the condition string to an int which is easier to handle", "target": 0}
{"idx": 12934, "func": "i18n[laf.lafPerformanceWarning=Also note: Some Look and Feels may cause performance problems. If you think your selected Look and Feel slows down SQuirreL switch to a Metal or Plastic Look and Feel.]", "target": 0}
{"idx": 12935, "func": "NOTE: The <XMI.header></XMI.header> is provided for us", "target": 0}
{"idx": 12936, "func": "i18n[oracle.objectType=Object Type]", "target": 0}
{"idx": 12937, "func": "@see org.argouml.uml.diagram.layout.LayoutedEdge#layout()", "target": 0}
{"idx": 12938, "func": "note that we don't use setDirty(), because a) that would send an unnecessary message, b) it would also set the AUTOSAVE_DIRTY flag, which will make the autosave thread write out a redundant autosave file", "target": 0}
{"idx": 12939, "func": "@see org.argouml.uml.ui.AbstractActionAddModelElement#getDialogTitle()", "target": 0}
{"idx": 12940, "func": "A valid authority may be null or contain any allowed URI characters except for the following: <code>/ ?</code>", "target": 0}
{"idx": 12941, "func": "If the generic type is a different wildcard, it doesn't match. //", "target": 0}
{"idx": 12942, "func": "draw horizontal crosshair if required...", "target": 0}
{"idx": 12943, "func": "//{{{ intern() method", "target": 0}
{"idx": 12944, "func": "trailing string is not empty", "target": 0}
{"idx": 12945, "func": "--- End instance data ---", "target": 0}
{"idx": 12946, "func": "asupport.fireActionEvent(DATE_CHANGE_CMD);", "target": 0}
{"idx": 12947, "func": "//sort the list. Makes SCM and manual diffs easier.", "target": 0}
{"idx": 12948, "func": "We'll try adding a shallow copy of the clipboard contents, instead of a full copy. Note: we can't just try adding the clipboard contents itself, because the copy may be a different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //", "target": 0}
{"idx": 12949, "func": "//workaround, for backward compatibility of sets with no //not-null columns, assume all columns are used in the //row locator SQL", "target": 1}
{"idx": 12950, "func": "mark message as not spam", "target": 0}
{"idx": 12951, "func": "Constant for the PCLI listversionedfiles recursive i a format \"get\" understands", "target": 0}
{"idx": 12952, "func": "make all enum constants to be on separate lines", "target": 0}
{"idx": 12953, "func": "Add also the length of the file content", "target": 0}
{"idx": 12954, "func": "We expect there to be at least one archive path. //", "target": 0}
{"idx": 12955, "func": "//The old submachine container is deleted as listener", "target": 0}
{"idx": 12956, "func": "repaint the calendar pane", "target": 0}
{"idx": 12957, "func": "//{{{ moveUp() method", "target": 0}
{"idx": 12958, "func": "TODO: If this is an ordered list, then you have to add in the right location!", "target": 1}
{"idx": 12959, "func": "significant digits and exponent", "target": 0}
{"idx": 12960, "func": "(non-Javadoc) @see com.miginfocom.ashape.interaction.InteractionListener#interactionOccured(com.miginfocom.ashape.interaction.InteractionEvent)", "target": 0}
{"idx": 12961, "func": "//Plain text components don't fire these events", "target": 0}
{"idx": 12962, "func": "Normally we could leave these to fall back on the superclass, but since it dispatches through the [] version below, which may dispatch through the []+block version, we can save it a couple hops by overriding these here.", "target": 0}
{"idx": 12963, "func": "handled target", "target": 0}
{"idx": 12964, "func": "Check if the item is the last item for the series. and number of items > 0. We can't draw an area for a single point.", "target": 0}
{"idx": 12965, "func": "i18n[ErrorStream.invalid=invalid]", "target": 0}
{"idx": 12966, "func": "rebuild the bookmark menu.", "target": 0}
{"idx": 12967, "func": "i18n[dateTypeTimestamp.typeTimestamp=Timestamp (SQL type 93)]", "target": 0}
{"idx": 12968, "func": "superClazz = null;", "target": 0}
{"idx": 12969, "func": "//tstich: Someone added <html> tags here. This is not the right place!", "target": 0}
{"idx": 12970, "func": "FIXME: these descriptions should probably be moved out, to Constantine project which deals with all platform-dependent constants.", "target": 1}
{"idx": 12971, "func": "//{{{ createTextFieldAndListPanel() method", "target": 0}
{"idx": 12972, "func": "@see org.argouml.model.ModelImplementation#getOrderingKind()", "target": 0}
{"idx": 12973, "func": "============ FileNameMapper interface =======================", "target": 0}
{"idx": 12974, "func": "Throws an exception claiming that 2007 isn't a valid type - go figure. pstmt.setNull(position, _colDef.getSqlType());", "target": 0}
{"idx": 12975, "func": "This is expected to be safe, don't add a try block here", "target": 0}
{"idx": 12976, "func": "opt but no rest, must be at least required and no more than required + opt", "target": 0}
{"idx": 12977, "func": "test series with two items", "target": 0}
{"idx": 12978, "func": "still have to call this even if it equals the old one so that the offset manager sets the validity flag!", "target": 0}
{"idx": 12979, "func": "Setup values.length columns", "target": 0}
{"idx": 12980, "func": "//RubyModule module = context.getRubyClass();", "target": 0}
{"idx": 12981, "func": "//{{{ quicksort() method", "target": 0}
{"idx": 12982, "func": "We use offset here to keep track of extra newlines for windows", "target": 0}
{"idx": 12983, "func": "If we're running from within an IDE we may not have the .rb files in our classpath. Try to find them in the filesystem instead.", "target": 0}
{"idx": 12984, "func": "if the user changes the syntax token at the end of a line, need to do a full repaint.", "target": 0}
{"idx": 12985, "func": "do not insert line break if there is only whitespace after comma", "target": 0}
{"idx": 12986, "func": "//$NON-NLS-1$ resource name", "target": 0}
{"idx": 12987, "func": "Entity load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ currently, not yet used...", "target": 0}
{"idx": 12988, "func": "check number of JTable rows", "target": 0}
{"idx": 12989, "func": "long first because it's what Fixnum claims to be", "target": 0}
{"idx": 12990, "func": "register at shutdownmanager -> when closing Columba, this will automatically save all folder data", "target": 0}
{"idx": 12991, "func": "Get an array since we dont want trouble with the sessionsList when we remove the sessions from it.", "target": 0}
{"idx": 12992, "func": "remove comments", "target": 0}
{"idx": 12993, "func": "end execute", "target": 0}
{"idx": 12994, "func": "changes IFEQ ... JSR to opcodes 202 to 217 (inclusive)", "target": 0}
{"idx": 12995, "func": "line 1311", "target": 0}
{"idx": 12996, "func": "//{{{ Position center (edit pane, or split pane)", "target": 0}
{"idx": 12997, "func": "how much an occurrence in the title is worth", "target": 0}
{"idx": 12998, "func": "'class << state.self' and 'class << obj' uses defn as opposed to defs", "target": 0}
{"idx": 12999, "func": "4.5.2.39 TemplateParameter", "target": 0}
{"idx": 13000, "func": "Note: if \"Encoded?\" is not selected, arg.getEncodedValue is equivalent to arg.getValue", "target": 0}
{"idx": 13001, "func": "XMIHandler", "target": 0}
{"idx": 13002, "func": "Refresh the necessary state. //", "target": 0}
{"idx": 13003, "func": "&& getAutoCritique()", "target": 0}
{"idx": 13004, "func": "line 866", "target": 0}
{"idx": 13005, "func": "check if its a group item", "target": 0}
{"idx": 13006, "func": "requires JMeterTreeNode", "target": 0}
{"idx": 13007, "func": "SGA query", "target": 0}
{"idx": 13008, "func": "//abort the save (the object is already saved by a circular cascade)", "target": 0}
{"idx": 13009, "func": "//{{{ addTopComponent() method", "target": 0}
{"idx": 13010, "func": "fill up a Properties object with link and resource names:", "target": 0}
{"idx": 13011, "func": "i18n[sqlval.technology=Technology:]", "target": 0}
{"idx": 13012, "func": "no property no property no property", "target": 0}
{"idx": 13013, "func": "Address must contain 128-bits of information.", "target": 0}
{"idx": 13014, "func": "use array as-is, it's a literal array", "target": 0}
{"idx": 13015, "func": "@see javax.swing.table.TableModel#getColumnClass(int)", "target": 0}
{"idx": 13016, "func": "make a single list of all class names that we need to check. Start with the names of known, standard classes that provide Control Panels", "target": 0}
{"idx": 13017, "func": "invoke method", "target": 0}
{"idx": 13018, "func": "In certain places, like grep, we don't use real frames for the call blocks. This has the effect of not setting the backref in the correct frame - this delta is activated to the place where the grep is running in so that the backref will be set in an appropriate place.", "target": 0}
{"idx": 13019, "func": "Change the fill colour", "target": 0}
{"idx": 13020, "func": "@see org.apache.jmeter.report.gui.action.Command#getActionNames()", "target": 0}
{"idx": 13021, "func": "add classpath string", "target": 0}
{"idx": 13022, "func": "Try again. //", "target": 0}
{"idx": 13023, "func": "The reason the gui is initialized before the commands are run is that some of the commands will use the projectbrowser.", "target": 0}
{"idx": 13024, "func": "to remove directories, start by the end of the list the trunk does not let itself be removed before the leaves", "target": 0}
{"idx": 13025, "func": "i18n[SchemaInfo.loadingDataTypes=Loading data types]", "target": 0}
{"idx": 13026, "func": "Ignore w and h from here on.", "target": 0}
{"idx": 13027, "func": "A HTTP POST request, with content-type text/plain; charset=UTF-8 The encoding should be picked up from the header we send with the request", "target": 0}
{"idx": 13028, "func": "//Class/unsetGenFeature.override.javajetinc", "target": 0}
{"idx": 13029, "func": "TODO: This should be done after all events are delivered, but leave it here for now to avoid last minute synchronization problems", "target": 1}
{"idx": 13030, "func": "KLUDGE: We want some info about the columns to be available for validating the user input during cell editing operations. Ideally we would get that info inside the ResultSetDataSet class during the creation of the columnDefinition objects by using various functions in ResultSetMetaData such as isNullable(idx). Unfortunately, in at least some DBMSs (e.g. Postgres, HSDB) the results of those calls are not the same (and are less accurate than) the SQLMetaData.getColumns() call used in ColumnsTab to get the column info. Even more unfortunate is the fact that the set of attributes reported on by the two calls is not the same, with the ResultSetMetadata listing things not provided by getColumns. Most of the data provided by the ResultSetMetaData calls is correct. However, the nullable/not-nullable property is not set correctly in at least two DBMSs, while it is correct for those DBMSs in the getColumns() info. Therefore, we collect the collumn nullability information from getColumns() and pass that info to the ResultSet to override what it got from the ResultSetMetaData.", "target": 1}
{"idx": 13031, "func": "now create the aliases", "target": 0}
{"idx": 13032, "func": "//yySindex 945", "target": 0}
{"idx": 13033, "func": "Base Expectation impls ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 13034, "func": "let's look for a TimeEvent, ChangeEvent, CallEvent or SignalEvent", "target": 0}
{"idx": 13035, "func": "TODO: SafeStringValue here", "target": 1}
{"idx": 13036, "func": "Button for browsing webservice wsdl", "target": 0}
{"idx": 13037, "func": "Second-level / query cache:", "target": 0}
{"idx": 13038, "func": "ignored, already processed", "target": 0}
{"idx": 13039, "func": "static methods only - hide constructor", "target": 0}
{"idx": 13040, "func": "skip CR", "target": 0}
{"idx": 13041, "func": "Skips characters between '#' and a line end.", "target": 0}
{"idx": 13042, "func": "folderitem wraps xml configuration from tree.xml", "target": 0}
{"idx": 13043, "func": "i18n[popupeditableIoPanel.fileError=File Name Error]", "target": 0}
{"idx": 13044, "func": "notify model", "target": 0}
{"idx": 13045, "func": "We must return a valid RDMS/RSA command from this method to prevent RDMS/RSA from issuing ERROR 400", "target": 0}
{"idx": 13046, "func": "TODO (@author karlpeder): If existing meta tags are to be kept, code changes are necessary", "target": 1}
{"idx": 13047, "func": "NIF: runTruthTest(Model.getFacade().isAInteraction(o), Model.getFacade().INTERACTION);", "target": 0}
{"idx": 13048, "func": "Fill 4 of value (byte) 33 Fill 2 of value (byte) -19", "target": 0}
{"idx": 13049, "func": "i18n[userscript.scriptClass=Script class]", "target": 0}
{"idx": 13050, "func": "if we are drawing a perfect circle, we need to readjust the top left coordinates of the drawing area for the arcs to arrive at this effect.", "target": 0}
{"idx": 13051, "func": "//System.err.println(\"Merge '\"+previous+\"' and '\"+tok+\"'.\");", "target": 0}
{"idx": 13052, "func": "Check if the MessageFolderInfo is sane", "target": 0}
{"idx": 13053, "func": "project reference is set in super.setUp()", "target": 0}
{"idx": 13054, "func": "have the DataType object fill in the appropriate kind of value into the first (and only) variable position in the prepared stmt", "target": 0}
{"idx": 13055, "func": "We may need to subtract addition offset off of first", "target": 0}
{"idx": 13056, "func": "Reverse the objects to attach and detach lists. //", "target": 0}
{"idx": 13057, "func": "Iterate over all the AssociationEnds. We only have a problem if 1) there is an end connected to an Interface and 2) an end other than that end is navigable.", "target": 0}
{"idx": 13058, "func": "TODO: This is also defined in the MetaClass too...Consolidate somewhere.", "target": 1}
{"idx": 13059, "func": "we add the entry", "target": 0}
{"idx": 13060, "func": "for toolbar display", "target": 0}
{"idx": 13061, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getMetaDataSet()", "target": 0}
{"idx": 13062, "func": "specifies valid elements for a Enumeration to contain", "target": 0}
{"idx": 13063, "func": "For the extended meta data to be created. //", "target": 0}
{"idx": 13064, "func": "Insert the content type, if any.", "target": 0}
{"idx": 13065, "func": "in UML2, we don't want to see element imports in profiles", "target": 0}
{"idx": 13066, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsSchemasInPrivilegeDefinitions()", "target": 0}
{"idx": 13067, "func": "else nothing to do", "target": 0}
{"idx": 13068, "func": "strictjava", "target": 0}
{"idx": 13069, "func": "$NON-NLS-1$ file_merge.setAccelerator( KeyStroke.getKeyStroke(KeyEvent.VK_O, KeyEvent.CTRL_MASK));", "target": 0}
{"idx": 13070, "func": "A490..A4CF;", "target": 0}
{"idx": 13071, "func": "CRC will be added later", "target": 0}
{"idx": 13072, "func": "Defaults from properties:", "target": 0}
{"idx": 13073, "func": "IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String", "target": 0}
{"idx": 13074, "func": "//{{{ getRectParams() method", "target": 0}
{"idx": 13075, "func": "The bound is a wildcard with no constraints. //", "target": 0}
{"idx": 13076, "func": "Begin filter getters and setters", "target": 0}
{"idx": 13077, "func": "return null; ???", "target": 0}
{"idx": 13078, "func": "should the next two be public, maybe?", "target": 1}
{"idx": 13079, "func": "This would be sensible, but does not work: public int hashCode() { return propMap.hashCode(); }", "target": 1}
{"idx": 13080, "func": "Samplers and Controllers need not apply ... but AbstractThreadGroup (Controller) is OK", "target": 0}
{"idx": 13081, "func": "we check the count to see if we have exceeded the number of lines to parse. There's no way to know where to stop in the file. Therefore we use break to escape the while loop when we've reached the count.", "target": 0}
{"idx": 13082, "func": "increment an unknown column", "target": 0}
{"idx": 13083, "func": "Now we have to see if any state in any statemachine of classifier is named [name]. If so, then we only have to link the state to c.", "target": 0}
{"idx": 13084, "func": "TODO: Make use of the constants defined in the ToDoItem class!", "target": 0}
{"idx": 13085, "func": "If the directory exists, add one to the directory number (making it a new directory name.)", "target": 0}
{"idx": 13086, "func": "//{{{ Get properties", "target": 0}
{"idx": 13087, "func": "Iterate back over the executed commands to undo them. //", "target": 0}
{"idx": 13088, "func": "Both lists have the same length.", "target": 0}
{"idx": 13089, "func": "i18n[sqlbookmark.script=Script:]", "target": 0}
{"idx": 13090, "func": "//////////////////////////////////////////////////////////////accessors", "target": 0}
{"idx": 13091, "func": "Ruby's OMG capture all source in a Hash feature Add each line to buffer when encountering newline or EOF for first time.", "target": 0}
{"idx": 13092, "func": "//{{{ Static methods", "target": 0}
{"idx": 13093, "func": "//@GuardedBy(\"fileContainers\")", "target": 0}
{"idx": 13094, "func": "/////////////////////////////////////////////////////////IBM DB 2 specific code to read view definitions.", "target": 0}
{"idx": 13095, "func": "check if this addition will exceed the maximum item count...", "target": 0}
{"idx": 13096, "func": "NOT UML1.4", "target": 0}
{"idx": 13097, "func": "//will result in a SQL UPDATE:", "target": 0}
{"idx": 13098, "func": "minimise access$ methods", "target": 0}
{"idx": 13099, "func": "no first row, so we cannot retrieve the data i18n[DataSetUpdateableTableModelImpl.error.nomatchingrow=Could not find any row in DB matching current row in table]", "target": 0}
{"idx": 13100, "func": "(non-Javadoc) @see org.apache.jmeter.report.writers.PageSummary#pageEnded()", "target": 0}
{"idx": 13101, "func": "If the element import is in the old owned, it means it must have been removed. Make sure the associated model element is removed.", "target": 0}
{"idx": 13102, "func": "interrupt the target thread in case it's blocking or waiting WARNING: We no longer interrupt the target thread, since this usually means interrupting IO and with NIO that means the channel is no longer usable. We either need a new way to handle waking a target thread that's waiting on IO, or we need to accept that we can't wake such threads and must wait for them to complete their operation. //threadImpl.interrupt();", "target": 0}
{"idx": 13103, "func": "map to EReference when is navigable //", "target": 0}
{"idx": 13104, "func": "$NON-NLS-1$ Permit dynamic resize of TextArea", "target": 0}
{"idx": 13105, "func": "i18n[oracle.displayTriggerDetails=Display trigger details]", "target": 0}
{"idx": 13106, "func": "We have read in all properties.", "target": 0}
{"idx": 13107, "func": "remove old activity", "target": 0}
{"idx": 13108, "func": "Returns the dynamic template path, an ordered list of URIs corresponding to locations under which to find templates.", "target": 0}
{"idx": 13109, "func": "-- Attribute accessors --", "target": 0}
{"idx": 13110, "func": "@see javax.swing.ComboBoxEditor#selectAll()", "target": 0}
{"idx": 13111, "func": "EOL was \"\\r\\n\"", "target": 0}
{"idx": 13112, "func": "//{{{ isPlainView() method", "target": 0}
{"idx": 13113, "func": "end class CheckManager", "target": 0}
{"idx": 13114, "func": "line 1320", "target": 0}
{"idx": 13115, "func": "width unchanged", "target": 0}
{"idx": 13116, "func": "RFC 2732 only allows '[' and ']' to appear in the opaque part.", "target": 0}
{"idx": 13117, "func": "Keys for user preferences", "target": 0}
{"idx": 13118, "func": "so you the avid code reader should use MODES as the DOCTYPE instead, but we still let old catalogs through to avoid annoying users.", "target": 0}
{"idx": 13119, "func": "disable every icon -> set appropriate icon for selected column", "target": 0}
{"idx": 13120, "func": "//{{{ getCheckedValues() method", "target": 0}
{"idx": 13121, "func": "For the case were the first tick is greater than minZ", "target": 0}
{"idx": 13122, "func": "since UML2, this must appear before the isAClass clause", "target": 0}
{"idx": 13123, "func": "Selection color", "target": 0}
{"idx": 13124, "func": "//PostLoad is needed for EJB3 //TODO: reuse the PostLoadEvent...", "target": 1}
{"idx": 13125, "func": "should not need to grow beyond the size of the total number of columns in the rs", "target": 0}
{"idx": 13126, "func": "it's a multiple-statement body, iterate over all elements in turn and chain if it get too long", "target": 0}
{"idx": 13127, "func": "i18n[LogPanel.titleInfo=Last log entry (Entry type: Info)]", "target": 0}
{"idx": 13128, "func": "select the \"Normal\" entry as default", "target": 0}
{"idx": 13129, "func": "line 967", "target": 0}
{"idx": 13130, "func": "FIXME: this seems like a good assertion, but it breaks compiled code and the code seems to run without it... //assert currentModule != null : \"Can't push null RubyClass\";", "target": 1}
{"idx": 13131, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsColumnAliasing()", "target": 0}
{"idx": 13132, "func": "line 1089", "target": 0}
{"idx": 13133, "func": "2F00..2FDF;", "target": 0}
{"idx": 13134, "func": "We need our tm, so get it now and avoid doing other work if there is a problem", "target": 0}
{"idx": 13135, "func": "unchanged, i.e. no breaks before this view", "target": 0}
{"idx": 13136, "func": "Helper class (callback) for applying parameter definitions", "target": 0}
{"idx": 13137, "func": "//{{{ Create buttons", "target": 0}
{"idx": 13138, "func": "For many-to-many joins, use the tablename from the queryable collection for the default text.", "target": 0}
{"idx": 13139, "func": "make everything up to here be a branch. create vector if nec.", "target": 0}
{"idx": 13140, "func": "@see org.tigris.gef.presentation.Fig#removeFromDiagram()", "target": 0}
{"idx": 13141, "func": "Ruby code frequently uses a platform check to choose \"NUL:\" on windows but since that check doesn't work well on JRuby, we help it out", "target": 0}
{"idx": 13142, "func": "copying of dirs is trivial and can be done for non-file resources as well as for real files.", "target": 0}
{"idx": 13143, "func": "can't have a connection between 2 interfaces: get the 'other' end type", "target": 0}
{"idx": 13144, "func": "is it a domain axis?", "target": 0}
{"idx": 13145, "func": "@see javax.swing.ComboBoxEditor#getEditorComponent()", "target": 0}
{"idx": 13146, "func": "check if the line segments intersect", "target": 0}
{"idx": 13147, "func": "A list of valid connections between elements, the connection type first and then the elements to be connected", "target": 0}
{"idx": 13148, "func": "NOTE: the handling of simple- vs. double-quotes could be formally more accurate, but I can't imagine a session id containing either, so we should be OK. The whole set of expressions is a quick hack anyway, so who cares.", "target": 1}
{"idx": 13149, "func": "No body should have been sent", "target": 0}
{"idx": 13150, "func": "else keep device, path, and query", "target": 0}
{"idx": 13151, "func": "data", "target": 0}
{"idx": 13152, "func": "TODO: Changed in UML 2.x to special type of Property?", "target": 1}
{"idx": 13153, "func": "//here we'd parse the output from change -o into submit -i //in order to support default change.", "target": 0}
{"idx": 13154, "func": "Do we have the necessary jdk1.2 packages and optional package?", "target": 0}
{"idx": 13155, "func": "Further configuration", "target": 0}
{"idx": 13156, "func": "//Options column increased", "target": 0}
{"idx": 13157, "func": "not just a horizontal bar but need to perform a 'step'.", "target": 0}
{"idx": 13158, "func": "end class ProjectMemberModel", "target": 0}
{"idx": 13159, "func": "only allow a drag&drop inside the current jvm", "target": 0}
{"idx": 13160, "func": "Create the new FigNodeAssociation and locate it.", "target": 0}
{"idx": 13161, "func": "for interface impls", "target": 0}
{"idx": 13162, "func": "line 1582", "target": 0}
{"idx": 13163, "func": "first promote char to Number type to avoid duplicating code", "target": 0}
{"idx": 13164, "func": "//but if no dest is specified, compare source to source", "target": 0}
{"idx": 13165, "func": "TODO: should I be adding quotes if user wants identifiers quoted??", "target": 1}
{"idx": 13166, "func": "//Render the SQL query", "target": 0}
{"idx": 13167, "func": "//Class/basicSetGenFeature.todo.override.javajetinc", "target": 0}
{"idx": 13168, "func": "@see org.argouml.application.events.ArgoNotationEventListener#notationProviderAdded(org.argouml.application.events.ArgoNotationEvent)", "target": 0}
{"idx": 13169, "func": "DataFlavor.javaJVMLocalObjectMimeType))", "target": 0}
{"idx": 13170, "func": "Add...", "target": 0}
{"idx": 13171, "func": "out of order", "target": 0}
{"idx": 13172, "func": "The SOS class knows that the SOS server needs the password flag, even if there is no password ,so we send a \" \"", "target": 0}
{"idx": 13173, "func": "get ascii stream from rs", "target": 0}
{"idx": 13174, "func": "Create the instance namespace", "target": 0}
{"idx": 13175, "func": "Get the current classpath from the sysloader through reflection", "target": 0}
{"idx": 13176, "func": "Cut off from parent, we must have our own class manager. Can't do this in the run() command (needs to resolve stuff) Should we do it by default when we create a namespace will no parent of class manager?", "target": 1}
{"idx": 13177, "func": "TODO : this is a bit dodgy, come up with a better way to check this (plus see above comment)", "target": 1}
{"idx": 13178, "func": "case 3 & 4", "target": 0}
{"idx": 13179, "func": "convert the byte read into a char", "target": 0}
{"idx": 13180, "func": "by default just use an unanticipated capacity since we don't know how to extract the capacity to use from original here...", "target": 0}
{"idx": 13181, "func": "Search for a matching tuple, and return the string if we find one.", "target": 0}
{"idx": 13182, "func": "TODO: assumes public TODO: This is probably an undesirable side effect unless the user confirms it. Placing an element on a second diagram is going to potentially change its namespace. - tfm 20061208", "target": 1}
{"idx": 13183, "func": "//setIcon(ImageLoader.getImageIcon(\"stock_font_16.png\"));", "target": 0}
{"idx": 13184, "func": "single line mode (/s)", "target": 0}
{"idx": 13185, "func": "For the text node, add a property.", "target": 0}
{"idx": 13186, "func": "Check the offenders.<p> This is called from the constructors where the offenders are given. TODO: Why do we only care about checking the first 2 offenders above? @param offs The offenders.", "target": 1}
{"idx": 13187, "func": "Strip off the array indices if any. //", "target": 0}
{"idx": 13188, "func": "//{{{ getInstantPopups() method", "target": 0}
{"idx": 13189, "func": "sync view with new update to date model", "target": 0}
{"idx": 13190, "func": "Ignore the version", "target": 0}
{"idx": 13191, "func": "Should mean that no such property was found", "target": 0}
{"idx": 13192, "func": "Tabs to add to the database node.", "target": 0}
{"idx": 13193, "func": "//{{{ createEOLSpanRule() method", "target": 0}
{"idx": 13194, "func": "we have the form: trim(trimSource) so we trim leading and trailing spaces", "target": 0}
{"idx": 13195, "func": "collect entity and tool tip information...", "target": 0}
{"idx": 13196, "func": "diagrams are not placed in search results", "target": 0}
{"idx": 13197, "func": "//i18n[DBCopyGlobalPreferencesTab.title=DB Copy]", "target": 0}
{"idx": 13198, "func": "Y format", "target": 0}
{"idx": 13199, "func": "Read the default value.", "target": 0}
{"idx": 13200, "func": "//here do a bulk comparison", "target": 0}
{"idx": 13201, "func": "if next node is null (the end of the list) return", "target": 0}
{"idx": 13202, "func": "Skip if there's an equality filter and the values aren't equal. //", "target": 0}
{"idx": 13203, "func": "TODO should we allow null for non-primitive types?", "target": 1}
{"idx": 13204, "func": "Creates the model from the editor input //", "target": 0}
{"idx": 13205, "func": "i18n[codecompletion.useSyntaxPlugin=Code completion will work better if you use the Syntax plugin. Get it from squirrelsql.org, it's free!]", "target": 0}
{"idx": 13206, "func": "//ChangeAdapterFactory", "target": 0}
{"idx": 13207, "func": "hasn't implemented RangeInfo, so we'll have to iterate...", "target": 0}
{"idx": 13208, "func": "TOOL TIP GENERATOR", "target": 0}
{"idx": 13209, "func": "//iterate through the names, get the matching values", "target": 0}
{"idx": 13210, "func": "Uses the FrameManager instance in MainInterface to open a new addressbook window.", "target": 0}
{"idx": 13211, "func": "args is either constructor arguments or array dimensions", "target": 0}
{"idx": 13212, "func": "Testcase: drag something from another application into ArgoUML, and the explorer shows the drop icon, instead of the noDrop.", "target": 0}
{"idx": 13213, "func": "//stops flush being called multiple times if this method is recursively called", "target": 0}
{"idx": 13214, "func": "get all files and add them to the document", "target": 0}
{"idx": 13215, "func": "End of method saveMessage", "target": 0}
{"idx": 13216, "func": "must be before the below call so that the chunk cache is not updated with an invisible first line (see above)", "target": 0}
{"idx": 13217, "func": "add signature if defined", "target": 0}
{"idx": 13218, "func": "Variables used by setup methods exclusively", "target": 0}
{"idx": 13219, "func": "i18n[mssql.scriptDatabase=Script database]", "target": 0}
{"idx": 13220, "func": "Special setters for the sub-classes", "target": 0}
{"idx": 13221, "func": "Converts a class file from the text stored in a Jar file to a version that can be used in Class.forName(). @param strClassName the class name from a Jar file @return String the Java-style dotted version of the name", "target": 0}
{"idx": 13222, "func": "Removed for the SQLBookmark Plugin", "target": 0}
{"idx": 13223, "func": "additional dataArea modifications //check whether modification is", "target": 0}
{"idx": 13224, "func": "TODO: Why aren't we throwing an exception here? Returning null results in NPE and no explanation why.", "target": 1}
{"idx": 13225, "func": "Pick a tableInfo to remove and replace", "target": 0}
{"idx": 13226, "func": "draw background image, if there is one...", "target": 0}
{"idx": 13227, "func": "RDMS has no known variation of a \"SELECT ... FOR UPDATE\" syntax...", "target": 0}
{"idx": 13228, "func": "orphans should be deleted during save/update", "target": 0}
{"idx": 13229, "func": "For property references generate <tablealias>.<columnname> as <projectionalias>", "target": 0}
{"idx": 13230, "func": "fix the bug where the horiz. scroll bar was not updated after creating a new file.", "target": 0}
{"idx": 13231, "func": "Note that sampleStarted() and sampleStopped() is not made to appear in synch with sampleOccured() when replaying held samples. For now this is not critical since sampleStarted() and sampleStopped() is not used, but it may become an issue in the future. Then these events must also be stored so that replay of all events may occur and in the right order. Each stored event must then be tagged with something that lets you distinguish between occured, started and ended.", "target": 0}
{"idx": 13232, "func": "AND : simply create a list of arguments", "target": 0}
{"idx": 13233, "func": "current stack len = 2", "target": 0}
{"idx": 13234, "func": "Go through class super types to catch constraints from other packages", "target": 0}
{"idx": 13235, "func": "If defined, invoke it", "target": 0}
{"idx": 13236, "func": "cached for speed", "target": 0}
{"idx": 13237, "func": "get selected account", "target": 0}
{"idx": 13238, "func": "//{{{ getScrollLineCount() method", "target": 0}
{"idx": 13239, "func": "enabled/disabled", "target": 0}
{"idx": 13240, "func": "TODO: What is this needed for? - tfm", "target": 1}
{"idx": 13241, "func": "i18n[SchemaPropertiesController.tableHeader.procedures=Procedures]", "target": 0}
{"idx": 13242, "func": "//setup number formatter obj", "target": 0}
{"idx": 13243, "func": "//assert Arrays.asList(properties).contains( event.getPropertyName()) : event.getPropertyName(); TODO: Do we really always need to do this or only if notationProvider is null?", "target": 1}
{"idx": 13244, "func": "if the area has zero height or width, we shouldn't draw anything", "target": 0}
{"idx": 13245, "func": "create all of the gui objects now", "target": 0}
{"idx": 13246, "func": "for editors", "target": 0}
{"idx": 13247, "func": "// ( implied && DotNode.useThetaStyleImplicitJoins ) ) {", "target": 0}
{"idx": 13248, "func": "add IANA to Java encoding mappings.", "target": 0}
{"idx": 13249, "func": "use item paint for fills by default", "target": 0}
{"idx": 13250, "func": "i18n[ConnectToAliasCommand.error.closeconnection=Error occured closing Connection]", "target": 0}
{"idx": 13251, "func": "Now a single bit indicating randomisation.", "target": 0}
{"idx": 13252, "func": "for leap years!", "target": 0}
{"idx": 13253, "func": "i18n[PreferencesPanel.statementSeparatorToolTip=When multiple statements are selected, use this to separate them into single statements.]", "target": 0}
{"idx": 13254, "func": "TRY SOME ACTION ERRORS", "target": 0}
{"idx": 13255, "func": "//{{{ closeStream() method", "target": 0}
{"idx": 13256, "func": "update (x1, y1), (x2, y2) and f1 and f2 using intersections then recheck", "target": 0}
{"idx": 13257, "func": "Hence, a diagram name was saved in the project that we are loading. So, we use this name to retrieve any matching diagram.", "target": 0}
{"idx": 13258, "func": "We're behind schedule -- try to catch up: assume the sample will run immediately", "target": 0}
{"idx": 13259, "func": "An output stream that compresses into the BZip2 format (without the file header chars) into another stream. <p>The compression requires large amounts of memory. Thus you should call the {@link #close() close()} method as soon as possible, to force <tt>CBZip2OutputStream</tt> to release the allocated memory.</p> <p>You can shrink the amount of allocated memory and maybe raise the compression speed by choosing a lower blocksize, which in turn may cause a lower compression ratio. You can avoid unnecessary memory allocation by avoiding using a blocksize which is bigger than the size of the input. </p> <p>You can compute the memory usage for compressing by the following formula:</p> <pre> <code>400k + (9 blocksize)</code>. </pre> <p>To get the memory required for decompression by {@link CBZip2InputStream CBZip2InputStream} use</p> <pre> <code>65k + (5 blocksize)</code>. </pre> <table width=\"100%\" border=\"1\"> <colgroup> <col width=\"33%\" /> <col width=\"33%\" /> <col width=\"33%\" /> </colgroup> <tr> <th colspan=\"3\">Memory usage by blocksize</th> </tr><tr> <th align=\"right\">Blocksize</th> <th align=\"right\">Compression<br>memory usage</th> <th align=\"right\">Decompression<br>memory usage</th> </tr><tr> <td align=\"right\">100k</td> <td align=\"right\">1300k</td> <td align=\"right\"> 565k</td> </tr><tr> <td align=\"right\">200k</td> <td align=\"right\">2200k</td> <td align=\"right\">1065k</td> </tr><tr> <td align=\"right\">300k</td> <td align=\"right\">3100k</td> <td align=\"right\">1565k</td> </tr><tr> <td align=\"right\">400k</td> <td align=\"right\">4000k</td> <td align=\"right\">2065k</td> </tr><tr> <td align=\"right\">500k</td> <td align=\"right\">4900k</td> <td align=\"right\">2565k</td> </tr><tr> <td align=\"right\">600k</td> <td align=\"right\">5800k</td> <td align=\"right\">3065k</td> </tr><tr> <td align=\"right\">700k</td> <td align=\"right\">6700k</td> <td align=\"right\">3565k</td> </tr><tr> <td align=\"right\">800k</td> <td align=\"right\">7600k</td> <td align=\"right\">4065k</td> </tr><tr> <td align=\"right\">900k</td> <td align=\"right\">8500k</td> <td align=\"right\">4565k</td> </tr> </table> <p>For decompression <tt>CBZip2InputStream</tt> allocates less memory if the bzipped input is smaller than one block.</p> <p>Instances of this class are not threadsafe.</p> <p> TODO: Update to BZip2 1.0.1 </p>", "target": 1}
{"idx": 13260, "func": "//{{{ Check if file is valid", "target": 0}
{"idx": 13261, "func": "//help tab is 0", "target": 0}
{"idx": 13262, "func": "copy input and error to the output stream", "target": 0}
{"idx": 13263, "func": "tests with values", "target": 0}
{"idx": 13264, "func": "TODO: We just need to get someone to re-render a single line of text which represents the element here, but I'm not sure how to do that. - tfm TODO: Bob replies - we shouldn't be interested in this event here. The FigFeature (or its notation) should be listen for change and the FigFeature should be update from that.", "target": 0}
{"idx": 13265, "func": "line 633", "target": 0}
{"idx": 13266, "func": "no domain axis to zoom", "target": 0}
{"idx": 13267, "func": "then dom4j tuplizer, if dom4j representation is available", "target": 0}
{"idx": 13268, "func": "i18n[I18n.WorkdirIsNoDir=The working directory is not a directory.\\nNo bundles will be loaded from {0}]", "target": 0}
{"idx": 13269, "func": "a missing . might imply no package at all. Don't get fooled.", "target": 0}
{"idx": 13270, "func": "todo: not serialized yet", "target": 1}
{"idx": 13271, "func": "Listen for the removal of diagrams from project", "target": 0}
{"idx": 13272, "func": "//extraLargeFont", "target": 0}
{"idx": 13273, "func": "The 4-arg version of this method depends on this ordering. Don't change it!", "target": 0}
{"idx": 13274, "func": "line 2000", "target": 0}
{"idx": 13275, "func": "Allow list of headers to be overridden $NON-NLS-1$", "target": 0}
{"idx": 13276, "func": "Allow getSuper() to through BlockNameSpace to the method's super", "target": 0}
{"idx": 13277, "func": "//{{{ deactivate() method", "target": 0}
{"idx": 13278, "func": "//{{{ getMembers() method", "target": 0}
{"idx": 13279, "func": "backslash", "target": 0}
{"idx": 13280, "func": "lazily create class init only if necessary", "target": 0}
{"idx": 13281, "func": "//gridBandPaint", "target": 0}
{"idx": 13282, "func": "//and the hostname.", "target": 0}
{"idx": 13283, "func": "used by TableEditor", "target": 0}
{"idx": 13284, "func": "the name of an entity class", "target": 0}
{"idx": 13285, "func": "If we still don't have a MofClass, something's wrong", "target": 0}
{"idx": 13286, "func": "i18n[graph.addTableRefByNoHit=add table referenced by (no hit on FK)]", "target": 0}
{"idx": 13287, "func": "complete, according to Posix.2", "target": 0}
{"idx": 13288, "func": "Clear the name of the test plan file", "target": 0}
{"idx": 13289, "func": "The namespace of the statemachine is changed!", "target": 0}
{"idx": 13290, "func": "i18n[BaseListInternalFrame.error.execdoubleclick=Error occured executing doubleclick event]", "target": 0}
{"idx": 13291, "func": "i18n[PreLaunchHelperImpl.restoreFromBackupMessage=Restore SQuirreL to previous version before last update?]", "target": 0}
{"idx": 13292, "func": "registerColumnType(Types.VARBINARY, \"CHARACTER($l)\"); registerColumnType(Types.BLOB, \"CHARACTER($l)\" ); For use prior to CP 11.0 registerColumnType(Types.CLOB, \"CHARACTER($l)\" );", "target": 0}
{"idx": 13293, "func": "Create a generic super type with an EClass as the classifier for each super interface in the @model representation //", "target": 0}
{"idx": 13294, "func": "convert backslashes to slashes, otherwise jjtree will put this as comments and this seems to confuse javacc", "target": 0}
{"idx": 13295, "func": "Sets the mouse cursor to hourglass mode", "target": 0}
{"idx": 13296, "func": "//{{{ DockPositionCellRenderer class", "target": 0}
{"idx": 13297, "func": "Add one child.", "target": 0}
{"idx": 13298, "func": "i18n[i18n.noNativeToAsciiCommand=Cannot convert files without a native2Ascii command.]", "target": 0}
{"idx": 13299, "func": "XmiWriter implementation for MDR. This implementation is clumsy because the specified Writer interface wants characters, while the XmiWriter wants an OutputStream dealing in bytes. We could easily create a Writer from an OutputStream, but the reverse is not true. TODO: The old Writer based interface can be removed when the deprecated ModelImplementation.getXmiWriter is removed. @author lmaitre", "target": 1}
{"idx": 13300, "func": "renderer", "target": 0}
{"idx": 13301, "func": "Struct methods", "target": 0}
{"idx": 13302, "func": "@see org.tigris.gef.graph.GraphFactory#makeNode()", "target": 0}
{"idx": 13303, "func": "Delete the old extent first", "target": 0}
{"idx": 13304, "func": "@see org.tigris.gef.presentation.Fig#getClosestPoint(java.awt.Point)", "target": 0}
{"idx": 13305, "func": "Add any remaining nodes", "target": 0}
{"idx": 13306, "func": "Pickaxe says @ must be followed by a name character, but MRI does not require this.", "target": 0}
{"idx": 13307, "func": "line 883", "target": 0}
{"idx": 13308, "func": "Look in classpath next (we do not use File as a test since UNC names will match) Note: Jar resources must NEVER begin with an '/'. (previous code said \"always begin with a /\")", "target": 0}
{"idx": 13309, "func": "//DateFormat format = DateFormat.getTimeInstance(DateFormat.SHORT);", "target": 0}
{"idx": 13310, "func": "Ensure that separator is valid otherwise give it the default paragraph separator.", "target": 0}
{"idx": 13311, "func": "grab its current state", "target": 0}
{"idx": 13312, "func": "convert region enum to flexdock string", "target": 0}
{"idx": 13313, "func": "categoryLabelPositionOffset", "target": 0}
{"idx": 13314, "func": "Get the next object and check if it has the same parent. //", "target": 0}
{"idx": 13315, "func": "Open a ZipInputStream to the first file found with a given extension. TODO: Remove since this is a duplicate of ZipFilePersister method when we have refactored the Persister subsystem. @param url The URL of the zip file. @param ext The required extension. @return the zip stream positioned at the required location. @throws IOException if there is a problem opening the file.", "target": 1}
{"idx": 13316, "func": "You may still have other ResultSets or update counts left to process here but you can't do it now or the ResultSet you just got will be closed", "target": 0}
{"idx": 13317, "func": "Get the resource parent, if its a file. //", "target": 0}
{"idx": 13318, "func": "package", "target": 0}
{"idx": 13319, "func": "_resources.addToMenu(coll.get(CreateTableAction.class), mysqlMenu);", "target": 0}
{"idx": 13320, "func": "//{{{ MouseWheelHandler class", "target": 0}
{"idx": 13321, "func": "Works like clone() but doesn't show up in the Javadocs", "target": 0}
{"idx": 13322, "func": "@see javax.swing.text.Document#getLength()", "target": 0}
{"idx": 13323, "func": "east", "target": 0}
{"idx": 13324, "func": "the string so far", "target": 0}
{"idx": 13325, "func": "@since 2.4", "target": 0}
{"idx": 13326, "func": "Temporary events need to be included in case a modla dialog opens.", "target": 0}
{"idx": 13327, "func": "//new oata.util.ReaderInputStream(new InputStreamReader(", "target": 0}
{"idx": 13328, "func": "An object tagged as being the owner of a FigEdgeNote. Has knowledge about the source and destination of the FigEdgeNote. <p> The source and destination are ModelElements. At least one of them is a Comment - but they may be both Comments. TODO: There's tons of special case code scattered around ArgoUML for this one class since it is the only \"owner\" of a FigEdgeModelElement which is not a UML element. We should find a way to generalize this.<p> TODO: Issue 3031 requires this class to be replaced by a similar mechanism as the n-ary association class: the node and the edges shall all have the same owner, i.e. the UML Comment object. @since Jul 17, 2004 @author jaap.branderhorst@xs4all.nl", "target": 1}
{"idx": 13329, "func": "These two columns will be the only ones in the pktest table. They will start out being nullable, and we will test that the dialect correctly converts them to non-null then applies the PK constraint to them. This test shall not be run against any database dialect that claims not to support changing the nullability of a column.", "target": 0}
{"idx": 13330, "func": "Only refresh the tab if the bounds propertyChange event arrives. @see org.argouml.ui.StylePanel#refresh(java.beans.PropertyChangeEvent)", "target": 0}
{"idx": 13331, "func": "For an archive URI, check for the plugin.properties in the archive. //", "target": 0}
{"idx": 13332, "func": "If we are pessimistic, then we need to undo all the commands that we have executed so far. //", "target": 0}
{"idx": 13333, "func": "set explicitly before starting ?", "target": 0}
{"idx": 13334, "func": "create filter criteria based on selected type", "target": 0}
{"idx": 13335, "func": "It is a normal post request, with parameter names and values", "target": 0}
{"idx": 13336, "func": "try only literal search", "target": 0}
{"idx": 13337, "func": "TODO: This is in the wrong place. It's not profile specific. It needs to be moved to main XMI reading code. - tfm 20060326", "target": 1}
{"idx": 13338, "func": "CASE 1 : Comparing to another Year object -----------------------------------------", "target": 0}
{"idx": 13339, "func": "Compute our deltas", "target": 0}
{"idx": 13340, "func": "//{{{ setRecursive() method", "target": 0}
{"idx": 13341, "func": "//create \"1e#\"-type label", "target": 0}
{"idx": 13342, "func": "//i18n[ColumnDetailsDialog.columnNullLabel={0} does not //support altering column nullability]", "target": 0}
{"idx": 13343, "func": "update infopanel (gray panel below the toolbar) showing total/unread/recent messages count", "target": 0}
{"idx": 13344, "func": "i18n[editextras.errorProcessingFormat=Error processing Format SQL command: {0}]", "target": 0}
{"idx": 13345, "func": "All keys in messages.properties are lowercase (historical reasons?)", "target": 1}
{"idx": 13346, "func": "Check if we have read all the headers", "target": 0}
{"idx": 13347, "func": "we should be able to find the comma because the range for enum constants includes all preceding comments up to the previous constant if TargetSourceRangeComputer of ASTRewrite changes, this logic should change to skip comments see org.eclipse.emf.codegen.merge.java.facade.ast.CommentAwareSourceRangeComputer#getEnumConstantSourceRange(ASTNode)", "target": 1}
{"idx": 13348, "func": "Avalon only", "target": 0}
{"idx": 13349, "func": "JRUBY-1000, fail early when attempting to subclass a final Java class; solved here by adding an exception-throwing \"inherited\"", "target": 0}
{"idx": 13350, "func": "If not already a proc then we should try and make it one.", "target": 0}
{"idx": 13351, "func": "enable drag&drop, install a custom transfer handler", "target": 0}
{"idx": 13352, "func": "west", "target": 0}
{"idx": 13353, "func": "0 --> targetIndex", "target": 0}
{"idx": 13354, "func": "We need IMAPFlags", "target": 0}
{"idx": 13355, "func": "Backup filename prefix", "target": 0}
{"idx": 13356, "func": "// origin.addDestination(destination); Add the query spaces.", "target": 0}
{"idx": 13357, "func": "select new item", "target": 0}
{"idx": 13358, "func": "First we have the cell-related and Text-table operations.", "target": 0}
{"idx": 13359, "func": "if comma is on a line by itself, comment it out but do not insert the line break", "target": 0}
{"idx": 13360, "func": "add all addresses", "target": 0}
{"idx": 13361, "func": "Throw an EOFException if there is nothing else to pop.", "target": 0}
{"idx": 13362, "func": "line 872", "target": 0}
{"idx": 13363, "func": "if the target file is not there, then it can't be up-to-date", "target": 0}
{"idx": 13364, "func": "save the user options - we know that it is not the default because we do not allow importing from \"temp file\"", "target": 0}
{"idx": 13365, "func": "Fill 7 of value (byte) 33 Fill 38 of value (byte) -19 Fill 10 of value (byte) 33 Fill 17 of value (byte) -87", "target": 0}
{"idx": 13366, "func": "i18n[sqlscript.configMultiTableScript=Configuration of multi table scripts]", "target": 0}
{"idx": 13367, "func": "Set up the property panels for use case diagrams:", "target": 0}
{"idx": 13368, "func": "//private StackedBox box;", "target": 0}
{"idx": 13369, "func": "//+ JMX property names; do not change", "target": 0}
{"idx": 13370, "func": "Unused?", "target": 1}
{"idx": 13371, "func": "Internal entity.", "target": 0}
{"idx": 13372, "func": "Length to read", "target": 0}
{"idx": 13373, "func": "i18n[editextras.errorQuoteSql=Error processing Quote SQL command: {0}]", "target": 0}
{"idx": 13374, "func": "execute command -> use mock object class as worker which does nothing", "target": 0}
{"idx": 13375, "func": "//i18n[UpdateSummaryTable.installOptionsLabel=Install Options]", "target": 0}
{"idx": 13376, "func": "TODO: gone in UML 2", "target": 0}
{"idx": 13377, "func": "textPane.setMargin(new Insets(5, 5, 5, 5));", "target": 0}
{"idx": 13378, "func": "TODO: We should have all the information that is required in the NotationSettings object", "target": 1}
{"idx": 13379, "func": "================================================================", "target": 0}
{"idx": 13380, "func": "@see java.util.Collection#contains(java.lang.Object)", "target": 0}
{"idx": 13381, "func": "//TODO: shift block over to right", "target": 1}
{"idx": 13382, "func": "work around the \"feature\" where tree cache is validating the inserted node during the next transaction. no idea...", "target": 1}
{"idx": 13383, "func": "Implementation", "target": 0}
{"idx": 13384, "func": "MRI behavior, enforced by tests", "target": 0}
{"idx": 13385, "func": "this may need mangling due to peeks", "target": 0}
{"idx": 13386, "func": "send a content of lfile", "target": 0}
{"idx": 13387, "func": "binding given, use binding's file", "target": 0}
{"idx": 13388, "func": "args", "target": 0}
{"idx": 13389, "func": "everything seems to have worked ok", "target": 0}
{"idx": 13390, "func": "@see tudresden.ocl.parser.analysis.DepthFirstAdapter#outAIntegerLiteral(tudresden.ocl.parser.node.AIntegerLiteral)", "target": 0}
{"idx": 13391, "func": "I assume that the editorInput is a file object. //", "target": 0}
{"idx": 13392, "func": "note: interface is assumed to already contain HibernateProxy.class", "target": 0}
{"idx": 13393, "func": "//get the coordinates of the shape that is to be filled", "target": 0}
{"idx": 13394, "func": "TODO: Bob says - tabs that listen for target changes should register themselves not expect DetailsPane to listen and pass on the event. Otherwise these tabs always rely on DetailsPane. TabToDoTarget and TabProps currently listen directly.", "target": 1}
{"idx": 13395, "func": "Requires JavaMail 1.4.2+", "target": 0}
{"idx": 13396, "func": "force for args", "target": 0}
{"idx": 13397, "func": "get value of Subject, From or To header", "target": 0}
{"idx": 13398, "func": "... otherwise we select the item below the mousepointer.", "target": 0}
{"idx": 13399, "func": "itemMargin", "target": 0}
{"idx": 13400, "func": "rosePaint", "target": 0}
{"idx": 13401, "func": "TODO: This shouldn't be referencing the current project. Instead the appropriate UndoManager should have already been retrieved from the correct project.", "target": 1}
{"idx": 13402, "func": "if a label has been supplied, use it to configure the view otherwise use current view", "target": 0}
{"idx": 13403, "func": "//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it", "target": 0}
{"idx": 13404, "func": "Read past the colon.", "target": 0}
{"idx": 13405, "func": "//{{{ getSource() method", "target": 0}
{"idx": 13406, "func": "promise to implement zero to three with block", "target": 0}
{"idx": 13407, "func": "Quote according model type (text/html)", "target": 0}
{"idx": 13408, "func": "transparent cyan", "target": 0}
{"idx": 13409, "func": "i18n[graph.graphRenamed=Renamed \"{0}\" to \"{1}\"]", "target": 0}
{"idx": 13410, "func": "evaluate result", "target": 0}
{"idx": 13411, "func": "@see java.awt.event.WindowListener#windowActivated(java.awt.event.WindowEvent)", "target": 0}
{"idx": 13412, "func": "//set up the URL connection", "target": 0}
{"idx": 13413, "func": "Make up a default", "target": 0}
{"idx": 13414, "func": "//{{{ hashCode() method", "target": 0}
{"idx": 13415, "func": "example: X-BeenThere: columba-devel@lists.sourceforge.net", "target": 0}
{"idx": 13416, "func": "line 745", "target": 0}
{"idx": 13417, "func": "Handle namespaces", "target": 0}
{"idx": 13418, "func": "line 342", "target": 0}
{"idx": 13419, "func": "TODO: Why would this be null?", "target": 1}
{"idx": 13420, "func": "//{{{ createChunk() method", "target": 0}
{"idx": 13421, "func": "BSF/JSR223 language to use //-- For TestBean implementations only", "target": 0}
{"idx": 13422, "func": "@see org.argouml.model.ModelEventPump#flushModelEvents()", "target": 0}
{"idx": 13423, "func": "any errors that may occur cannot stop other scripts from running", "target": 0}
{"idx": 13424, "func": "Not whitespace - fail", "target": 0}
{"idx": 13425, "func": "//{{{ MutableCaretEvent class", "target": 0}
{"idx": 13426, "func": "We'll need to keep track of the information we use to create the command, so that we can recreate it in drop.", "target": 0}
{"idx": 13427, "func": "i18n[mssql.add_Menmonic=\"]", "target": 0}
{"idx": 13428, "func": "add a third time period", "target": 0}
{"idx": 13429, "func": "TODO - is this used? (apart from test code)", "target": 1}
{"idx": 13430, "func": "Multi-param string dialect functions...", "target": 0}
{"idx": 13431, "func": "prior to 1.0.14, we just fired a PropertyChange - so we need to keep doing this", "target": 0}
{"idx": 13432, "func": "Initial load of prefs.", "target": 0}
{"idx": 13433, "func": "TODO: this is a bit of copy/paste from IndexedCollection.createPrimaryKey()", "target": 1}
{"idx": 13434, "func": "A little hack - add each listener to the start of the list - this ensures that the thread running the show is the first listener and can modify certain values before other listeners are called.", "target": 1}
{"idx": 13435, "func": "Clean it up. //", "target": 0}
{"idx": 13436, "func": "Packages to be remapped", "target": 0}
{"idx": 13437, "func": "find pattern", "target": 0}
{"idx": 13438, "func": "align this rectangle to the frameAnchor", "target": 0}
{"idx": 13439, "func": "If there is a jar-file with the required name, we add this to the class path.", "target": 0}
{"idx": 13440, "func": "Get the value from the map via the values iterator", "target": 0}
{"idx": 13441, "func": "//rethrow", "target": 0}
{"idx": 13442, "func": "cat.debug(\"Checking for inhibitors \" + rc);", "target": 0}
{"idx": 13443, "func": "A method name that starts with _ requires a session object", "target": 0}
{"idx": 13444, "func": "//$NON-NLS-1$ //$NON-NLS-1$ reduce font", "target": 0}
{"idx": 13445, "func": "i18n[HibernateAttribuiteDataSet.tableCols=Table columns]", "target": 0}
{"idx": 13446, "func": "BasicEMap.this.removeEntry(index, j);", "target": 0}
{"idx": 13447, "func": "not allowed", "target": 0}
{"idx": 13448, "func": "for reading from CSV files ignored currently", "target": 0}
{"idx": 13449, "func": "//-- make sure destination directory exists...", "target": 0}
{"idx": 13450, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.ISession#getMetaData()", "target": 0}
{"idx": 13451, "func": "The node's been placed on the diagram", "target": 0}
{"idx": 13452, "func": "The special value <code>null</code> is used internally to indicate that the default value should be inherited from the next level of settings.", "target": 0}
{"idx": 13453, "func": "return the expected format for this data", "target": 0}
{"idx": 13454, "func": "SSS FIXME: Why is the for node being built using closures and not as a \"regular\" loop with branches? This has implications on inlining, implementations of closures, next, break, etc. When \"each\" and the block it consumes are inlined together in the caller, the \"loop\" from the each should become a normal loop without any closures. But, in this implementation of for, we replace one closure with another! //", "target": 1}
{"idx": 13455, "func": "basic check for independence", "target": 0}
{"idx": 13456, "func": "Use a CYAN background to indicate that the cell is editable in the popup", "target": 0}
{"idx": 13457, "func": "create a copy of declaration", "target": 0}
{"idx": 13458, "func": "disable date picker", "target": 0}
{"idx": 13459, "func": "//{{{ Try connecting to another running jEdit instance", "target": 0}
{"idx": 13460, "func": "use reflection to get the SVG string", "target": 0}
{"idx": 13461, "func": "in the case when the filter is not set, we parse all the lines", "target": 0}
{"idx": 13462, "func": "Check the type of the specified child object and return the proper feature to use for adding (see {@link AddCommand}) it as a child.", "target": 0}
{"idx": 13463, "func": "RIYAD: The Prefs API cannot be used to read the Window's registry, it is coded to use the registry (if available) as a backing store on in the SOFTWARE/JavaSoft/Prefs registry keys for HKEY_CURRENT_USER and HKEY_LOCAL_MACHINE paths. I have seen a few java apps that use the Windows registry and they all required a native lib to do it.", "target": 0}
{"idx": 13464, "func": "Example: ALTER TABLE kvpos ADD CONSTRAINT kv_kvpos FOREIGN KEY (kvid) kv(kvid) -------------------------------------------------------------^ (\"References\" expected) kv will not be marked with the condition above, because errInf.endPos <= absolutePosition + len is never true.", "target": 0}
{"idx": 13465, "func": "missing attribute", "target": 0}
{"idx": 13466, "func": "================ Module Methods ================", "target": 0}
{"idx": 13467, "func": "OK", "target": 0}
{"idx": 13468, "func": "@see org.argouml.model.XmiReader#getXMIUUIDToObjectMap()", "target": 0}
{"idx": 13469, "func": "set dirty flag", "target": 0}
{"idx": 13470, "func": "head must not be null and there must be no \"args\" (like arg)", "target": 0}
{"idx": 13471, "func": "Initialize the module loader. At least the plug-ins that provide profiles need to be initialized before the project is loaded, because some of these profile may have been set as default profiles and need to be applied to the project as soon as it has been created or loaded. The first instance of a Project is needed during the GUI initialization.", "target": 0}
{"idx": 13472, "func": "We really shouldn't add it until after it is set up, but we need it to have an owner for the following method calls", "target": 0}
{"idx": 13473, "func": "Translates an AST join type (i.e., the token type) into a JoinFragment.XXX join type. @param astJoinType The AST join type (from HqlSqlTokenTypes or SqlTokenTypes) @return a JoinFragment.XXX join type. @see JoinFragment @see SqlTokenTypes", "target": 0}
{"idx": 13474, "func": "@see org.tigris.gef.presentation.Fig#calcBounds()", "target": 0}
{"idx": 13475, "func": "click on the already selected value must not call setValue", "target": 0}
{"idx": 13476, "func": "13!", "target": 0}
{"idx": 13477, "func": "Cell related methods come next.", "target": 0}
{"idx": 13478, "func": "line 1395", "target": 0}
{"idx": 13479, "func": "tables that have at least one child table and have a least one parent table", "target": 0}
{"idx": 13480, "func": "//XMLMapImpl", "target": 0}
{"idx": 13481, "func": "i18n[generalSessionPropertiesPanel.general=General]", "target": 0}
{"idx": 13482, "func": "should we really overwrite the Look and Feel font settings", "target": 0}
{"idx": 13483, "func": "Combo box for read-all/read-part of blob", "target": 0}
{"idx": 13484, "func": "create a new batch for this type. The batch number is the number of current batches.", "target": 0}
{"idx": 13485, "func": "i18n[popupeditableIoPanel.executeError=Execute Error]", "target": 0}
{"idx": 13486, "func": "can also handle empty archives", "target": 0}
{"idx": 13487, "func": "NotReached", "target": 0}
{"idx": 13488, "func": "box it", "target": 0}
{"idx": 13489, "func": "\"deactivate indexes during restore\" \"restore without creating shadows\" \"do not reserve space for record versions\" \"restores one table at a time\" \"do not restore database validity conditions\" \"replace database from backup file\" \"override old page size\" \"new page size\" \"restore\"", "target": 0}
{"idx": 13490, "func": "Multi-param date dialect functions...", "target": 0}
{"idx": 13491, "func": "//handle empty collections", "target": 0}
{"idx": 13492, "func": "i18n[graph.dina5=Din A 5]", "target": 0}
{"idx": 13493, "func": "The user's email:", "target": 0}
{"idx": 13494, "func": "//{{{ setText() method", "target": 0}
{"idx": 13495, "func": "adjusts paths started with '/' or '\\\\', on windows.", "target": 0}
{"idx": 13496, "func": "Match them and accumulate the appropriate result. //", "target": 0}
{"idx": 13497, "func": "by default nodes are marked up", "target": 0}
{"idx": 13498, "func": "try negative column index", "target": 0}
{"idx": 13499, "func": "grab a part of aInput which does not include aOldPattern", "target": 0}
{"idx": 13500, "func": "//System.err.println(\"figureOutBase()/base=\" + base);", "target": 0}
{"idx": 13501, "func": "this happens if the projecthelper was not registered with the project.", "target": 0}
{"idx": 13502, "func": "Let's not be picky about the brackets - just remove them:", "target": 0}
{"idx": 13503, "func": "user wants field to be false", "target": 0}
{"idx": 13504, "func": "Add a space before the display text.", "target": 0}
{"idx": 13505, "func": "NOTE: these lines center the about dialog in the current window. Some older Swing versions have a bug in getLocationOnScreen() and they may not make this behave properly.", "target": 1}
{"idx": 13506, "func": "line 875", "target": 0}
{"idx": 13507, "func": "row 3", "target": 0}
{"idx": 13508, "func": "'<' and '>' are only used if the algorithm has properties", "target": 0}
{"idx": 13509, "func": "//return the id, so we can use it to reset the proxy id //return result;", "target": 0}
{"idx": 13510, "func": "Bottom (embedded resources, source address and optional tasks)", "target": 0}
{"idx": 13511, "func": "RegEx pattern for XML declaration and, optionally, DOCTYPE Backslashes are doubled up - one for Java, one for Regex", "target": 0}
{"idx": 13512, "func": "filter the list of all DB objects looking for things with the given name", "target": 0}
{"idx": 13513, "func": "Make sure JBC doesn't look one up", "target": 0}
{"idx": 13514, "func": "inlined: bsW(1, inUse[i16 + j] ? 1 : 0);", "target": 0}
{"idx": 13515, "func": "local constraint", "target": 0}
{"idx": 13516, "func": "increment the value", "target": 0}
{"idx": 13517, "func": "a --> b --> c --- def \\-- ghi", "target": 0}
{"idx": 13518, "func": "WORKAROUND: System.setSecurityManager(null); This call effectly disables the sandbox mode and seems to work fine. Below I use another way. The policy for all classloaders is set to \"all-permissions\". Don't really know the difference though.", "target": 1}
{"idx": 13519, "func": "get array of source references", "target": 0}
{"idx": 13520, "func": "update the wrapped object", "target": 0}
{"idx": 13521, "func": "Make it easier to enter a tab (can use \\<tab> but that is awkward)", "target": 1}
{"idx": 13522, "func": "Bind the where", "target": 0}
{"idx": 13523, "func": "UML 1.4", "target": 0}
{"idx": 13524, "func": "(non-Javadoc) @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)", "target": 0}
{"idx": 13525, "func": "returns false if directory already exists, so need to check again", "target": 0}
{"idx": 13526, "func": "should normally be", "target": 0}
{"idx": 13527, "func": "public boolean dropTemporaryTableAfterUse() { //we have to, because postgres sets current tx //to rollback only after a failed create table return true; }", "target": 0}
{"idx": 13528, "func": "switch for no exponent, so drop through for calculation", "target": 0}
{"idx": 13529, "func": "Next indicates to decode using native encoding format", "target": 0}
{"idx": 13530, "func": "Fetch once; needs to stay constant", "target": 0}
{"idx": 13531, "func": "Forget about all GUIs we've created so far: we'll need to re-created them all!", "target": 0}
{"idx": 13532, "func": "String md5Result = DigestUtils.md5Hex(resultData);", "target": 0}
{"idx": 13533, "func": "<rename_view_statement> ::= RENAME VIEW <old_table_name> TO <new_table_name> <old_table_name> ::= <table_name> <new_table_name> ::= <table_name", "target": 0}
{"idx": 13534, "func": "handler.skippedEntity(name);", "target": 0}
{"idx": 13535, "func": "Make all the parts match the main fig", "target": 0}
{"idx": 13536, "func": "No max-age && No expires", "target": 0}
{"idx": 13537, "func": "Test files for testLoad; output will generally be different in size and line count", "target": 0}
{"idx": 13538, "func": "84", "target": 0}
{"idx": 13539, "func": "line 723", "target": 0}
{"idx": 13540, "func": "Enable buttons when selection made. @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)", "target": 0}
{"idx": 13541, "func": "train message as spam", "target": 0}
{"idx": 13542, "func": "There is none...", "target": 0}
{"idx": 13543, "func": "revert to traditional hibernate behavior of setting initialPoolSize to minPoolSize unless otherwise specified with a c3p0.-style parameter.", "target": 0}
{"idx": 13544, "func": "desactivate or not specials regexp char", "target": 0}
{"idx": 13545, "func": "Now put the current GUI in place. [This code was copied from the EditCommand action -- we can't just trigger the action because that would populate the current node with the contents of the new GUI -- which is empty.] Fetch once Probably caused by unit testing on headless system", "target": 0}
{"idx": 13546, "func": "we are done - clear the progress bar", "target": 0}
{"idx": 13547, "func": "Create temporary file for output TODO: we should be able to chain this directly to XMI reader", "target": 1}
{"idx": 13548, "func": "//item.setImage(NSWorkspace.sharedWorkspace().iconForFile( // buffs[i].getPath()));", "target": 0}
{"idx": 13549, "func": "If there is more than one exact match, we must get an index number; //", "target": 0}
{"idx": 13550, "func": "TODO - should this use setFirst() ?", "target": 1}
{"idx": 13551, "func": "Create enums", "target": 0}
{"idx": 13552, "func": "//TODO: for some dialects it would be appropriate to add the renderOrderByPropertiesSelect() to other select strings", "target": 1}
{"idx": 13553, "func": "(non-Javadoc) @see org.columba.mail.message.HeaderInterface#getFlags()", "target": 0}
{"idx": 13554, "func": "map loose return type to Object", "target": 0}
{"idx": 13555, "func": "Try with a parameter-less constructor first", "target": 0}
{"idx": 13556, "func": "Then the pre-release status", "target": 0}
{"idx": 13557, "func": "//{{{ getSymbolicName() method", "target": 0}
{"idx": 13558, "func": "this will be a text qualified column, so we need to set startedWithQualifier to make it enter the seperate branch to handle text qualified columns", "target": 0}
{"idx": 13559, "func": "TODO: 21/12/2008 dthompson mouseClicked(me) above consumes the mouse event internally, so I suspect that this line might not be necessary.", "target": 1}
{"idx": 13560, "func": "rb: check_modifiable", "target": 0}
{"idx": 13561, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getAuthor()", "target": 0}
{"idx": 13562, "func": "Ignore the problem", "target": 0}
{"idx": 13563, "func": "//FB TBD can we come up with a better algorithm for choosing the default label feature?", "target": 1}
{"idx": 13564, "func": "reset the min and max", "target": 0}
{"idx": 13565, "func": "user didn't select any folder -> make Inbox the default folder", "target": 0}
{"idx": 13566, "func": "Store the resource keys", "target": 0}
{"idx": 13567, "func": "This can't execute if there is no owner list or the owner list doesn't contain the value being replaced or there are not replacements. //", "target": 0}
{"idx": 13568, "func": "this path could be a drive spec, so look at the next token", "target": 0}
{"idx": 13569, "func": "//}}} //{{{ SPAN", "target": 0}
{"idx": 13570, "func": "Couldn't find anything, so return null and let the wizard ask the user.", "target": 0}
{"idx": 13571, "func": "set this to true on to enable debugging figs", "target": 0}
{"idx": 13572, "func": "i18n[laf.tabHint=Fonts]", "target": 0}
{"idx": 13573, "func": "TODO: This is the 2nd part of this method:", "target": 0}
{"idx": 13574, "func": "Mac does \\n\\r, but that's tough to distinguish from Windows \\r\\n\\r\\n. Don't tackle that problem right now.", "target": 0}
{"idx": 13575, "func": "TODO: Get saved default directory outputDirectoryComboBox.getModel().setSelectedItem(savedDir);", "target": 0}
{"idx": 13576, "func": "Translate & clip graphic to match region of interest", "target": 0}
{"idx": 13577, "func": "Es mach nichts, wenn es die PID nicht g�be. Sie wird dann einfach oben nicht zugeordnet.", "target": 0}
{"idx": 13578, "func": "private void setFailureCount(long count) { this.failureCount = count; }", "target": 0}
{"idx": 13579, "func": "check nullability but do not perform command execute we'll use scheduled updates for that.", "target": 0}
{"idx": 13580, "func": "then extrapolate...", "target": 0}
{"idx": 13581, "func": "Add the element and place it in the namespace of the model", "target": 0}
{"idx": 13582, "func": "Additional Operations in 4.5.3.26", "target": 0}
{"idx": 13583, "func": "@see org.argouml.cognitive.ToDoItem#select()", "target": 0}
{"idx": 13584, "func": "Static int to signify the type of logical comparitor to assert", "target": 0}
{"idx": 13585, "func": "//should never happen, i think", "target": 0}
{"idx": 13586, "func": "Number of active threads in this group", "target": 0}
{"idx": 13587, "func": "//{{{ addCurrentToHistory() method", "target": 0}
{"idx": 13588, "func": "return each type", "target": 0}
{"idx": 13589, "func": "check that super class fields are being looked at...", "target": 0}
{"idx": 13590, "func": "try parent", "target": 0}
{"idx": 13591, "func": "for deprecated saveOrUpdateCopy()", "target": 0}
{"idx": 13592, "func": "If we delete a FigEdge or FigNode we actually call this method with the owner not the Fig itself. However, this method is called by ActionDeleteModelElements for primitive Figs (without owner).", "target": 0}
{"idx": 13593, "func": "Should clean this up to a single return statement", "target": 1}
{"idx": 13594, "func": "@see org.argouml.uml.ui.UMLRadioButtonPanel#buildModel()", "target": 0}
{"idx": 13595, "func": "remove node", "target": 0}
{"idx": 13596, "func": "Remap specific classes", "target": 0}
{"idx": 13597, "func": "//{{{ goToEndOfLine() method", "target": 0}
{"idx": 13598, "func": "//{{{ LogViewer constructor", "target": 0}
{"idx": 13599, "func": "TODO: Adding implicit nils caused multiple problems in compiler -- revist after landing //assert bodyNode != null : \"bodyNode is not null\";", "target": 1}
{"idx": 13600, "func": "create new default frame controller", "target": 0}
{"idx": 13601, "func": "//{{{ actionPerformed() method", "target": 0}
{"idx": 13602, "func": "WARNING - could be large", "target": 0}
{"idx": 13603, "func": "here, we have two possibilities: 1) the property-name matches the explicitly identifier property name // 2) the property-name matches the implicit 'id' property name", "target": 0}
{"idx": 13604, "func": "Nested GenAnnotations", "target": 0}
{"idx": 13605, "func": "//{{{ StringICaseCompare class", "target": 0}
{"idx": 13606, "func": "I.e., the classifiers are considered equal if they wrap the same non-null type. //", "target": 0}
{"idx": 13607, "func": "East Europe # 10", "target": 0}
{"idx": 13608, "func": "Test can't have a duration more than 2^31 secs (cast from long to int)", "target": 0}
{"idx": 13609, "func": "the graph should stay the same.", "target": 0}
{"idx": 13610, "func": "//{{{ getOffset() method", "target": 0}
{"idx": 13611, "func": "If the argument is not a String or Location, and if there is an overloaded form of this method already defined, we just override that with the new one. This mechanism does not guarantee any specific order in which the methods will be selected: so any code that depends on the order in which \"set\" methods have been defined, is not guaranteed to be selected in any particular order.", "target": 0}
{"idx": 13612, "func": "Set the appropriate aggregation on each end", "target": 0}
{"idx": 13613, "func": "//if the hibernate-mapping did not specify a schema/catalog, use the defaults //specified by properties - but note that if the schema/catalog were specified //in hibernate-mapping, or as params, they will already be initialized and //will override the values set here (they are in identifierGeneratorProperties)", "target": 0}
{"idx": 13614, "func": "//add the home class", "target": 0}
{"idx": 13615, "func": "(non-Javadoc) @see javax.swing.event.CaretListener#caretUpdate(javax.swing.event.CaretEvent)", "target": 0}
{"idx": 13616, "func": "only set if open", "target": 0}
{"idx": 13617, "func": "there should only be one more thread in thread group than before we started", "target": 0}
{"idx": 13618, "func": "TODO What about the instance type name and the fact that we should be matching its type argument structure? If they match so far, we must assume they are okay and then check all the arguments. //", "target": 1}
{"idx": 13619, "func": "shouldn't happen - ignore", "target": 0}
{"idx": 13620, "func": "i18n[laf.staticFontEanbled=Enabled]", "target": 0}
{"idx": 13621, "func": "The following only works if SwingUtilities.getRoot(table) returns and instanceof BaseMDIParentFrame. If SwingTUilities.getRoot(table) returns and instance of Dialog or Frame, then other code must be used.", "target": 1}
{"idx": 13622, "func": "Create this constructor method", "target": 0}
{"idx": 13623, "func": "// necessary for the message-frame only", "target": 0}
{"idx": 13624, "func": "//TODO: move to .sql package, and refactor with similar things!", "target": 1}
{"idx": 13625, "func": "//_app.getDataCache().addAliasesListener(new MyAliasesListener(this));", "target": 0}
{"idx": 13626, "func": "================= internal business =================", "target": 0}
{"idx": 13627, "func": "insert new line at the end of previous constant", "target": 0}
{"idx": 13628, "func": "The cutoff point to the next archive. //", "target": 0}
{"idx": 13629, "func": "replace _xAxisTitle to null (don't display x axis title)", "target": 0}
{"idx": 13630, "func": "A binary association is not a node so reject.", "target": 0}
{"idx": 13631, "func": "SizeConstraint sConstr2 = new SizeConstraint(new AtFixed(0), new AtFraction(0.5f), 1.0f);", "target": 0}
{"idx": 13632, "func": "do something with the arguments..", "target": 0}
{"idx": 13633, "func": "//needed for SOAP libraries, etc", "target": 0}
{"idx": 13634, "func": "EJB's display name EJB's home interface name EJB's remote interface name EJB's implementation class EJB's primary key class or \"stateful\" or \"stateless\" Does this EJB support CMP? Does this EJB support IIOP? Does this EJB require failover? CMP descriptor list", "target": 0}
{"idx": 13635, "func": "//This test needed for a FigPool", "target": 0}
{"idx": 13636, "func": "//JMH: For additional performance we could utilise the fixed_table_sequence column //from the session, to investigate which rows need to be updated on a refresh //See V$SESSION doco for more info.", "target": 0}
{"idx": 13637, "func": "check for simple feature", "target": 0}
{"idx": 13638, "func": "//{{{ addRemove() method", "target": 0}
{"idx": 13639, "func": "Test for int hashCode().", "target": 0}
{"idx": 13640, "func": "@see org.argouml.cognitive.checklist.CheckItem#expand(java.lang.String, java.lang.Object)", "target": 0}
{"idx": 13641, "func": "nothing to do yet", "target": 0}
{"idx": 13642, "func": "//{{{ Buffer constructor", "target": 0}
{"idx": 13643, "func": "Everything else is OK", "target": 0}
{"idx": 13644, "func": "//OK", "target": 0}
{"idx": 13645, "func": "If the user has selected ModePlace either by a diagram tool or AddToDiagram then we don't want to show the clarifiers.", "target": 0}
{"idx": 13646, "func": "assume the sample will run as soon as the delay has expired", "target": 0}
{"idx": 13647, "func": "// private int _lastX;", "target": 0}
{"idx": 13648, "func": "//{{{ getUrlVFS() method", "target": 0}
{"idx": 13649, "func": "//{{{ CompoundEdit class", "target": 0}
{"idx": 13650, "func": "Create an empty but initialized instance of a UML Operation. @return an initialized UML Operation instance. TODO: This needs an extra parameter to specify the model/extent where the new element should be created.", "target": 1}
{"idx": 13651, "func": "Listen to selection so that we can handle it is a special way. //", "target": 0}
{"idx": 13652, "func": "build message orginal ; mod:2004629 SWITT", "target": 0}
{"idx": 13653, "func": "If we hold a Java object, we need a java_class accessor", "target": 0}
{"idx": 13654, "func": "Server-only work item", "target": 0}
{"idx": 13655, "func": "if the given class is subclass of enum and node is of subclass of type", "target": 0}
{"idx": 13656, "func": "Fill 3 of value (byte) 49", "target": 0}
{"idx": 13657, "func": "clone will produce correct type", "target": 0}
{"idx": 13658, "func": "Class.allocate object is not allocatable before it is initialized", "target": 0}
{"idx": 13659, "func": "if it's an array, only add methods for aref, aset, and length", "target": 0}
{"idx": 13660, "func": "Apparently in some environments you can't catch the security exception at all... e.g. as an applet in IE ... will probably have to work around", "target": 1}
{"idx": 13661, "func": "Show first time Account Wizard", "target": 0}
{"idx": 13662, "func": "... and we save them in order not to recompute them in the future", "target": 0}
{"idx": 13663, "func": "i18n[ThreadCheckingRepaintManager.workinwrongthread=GUI work done in wrong thread]", "target": 0}
{"idx": 13664, "func": "FIXME: this really ought to be in clinit, but it doesn't matter much", "target": 1}
{"idx": 13665, "func": "Need a directory that exists", "target": 0}
{"idx": 13666, "func": "Restore parser state: //", "target": 0}
{"idx": 13667, "func": "//{{{ saveHistory() method", "target": 0}
{"idx": 13668, "func": "//{{{ allowRead() method", "target": 0}
{"idx": 13669, "func": "TODO: Fix this so it will work for non-POJO entity mode", "target": 1}
{"idx": 13670, "func": "//////////////////////////////////////////////////////////////user interaction methods", "target": 0}
{"idx": 13671, "func": "<!-- begin-user-doc --> The <b>Switch</b> for the model's inheritance hierarchy. It supports the call {@link #doSwitch(EObject) doSwitch(object)} to invoke the <code>caseXXX</code> method for each class of the model, starting with the actual class of the object and proceeding up the inheritance hierarchy until a non-null result is returned, which is the result of the switch. <!-- end-user-doc --> @see org.eclipse.emf.ecore.EcorePackage @generated", "target": 0}
{"idx": 13672, "func": "Only accept commands from the local host", "target": 0}
{"idx": 13673, "func": "guard against something really stupid", "target": 0}
{"idx": 13674, "func": "//tolerates nulls", "target": 0}
{"idx": 13675, "func": "Remember where we are now. //", "target": 0}
{"idx": 13676, "func": "Don't save empty comments - except for the TestPlan (to maintain compatibility)", "target": 0}
{"idx": 13677, "func": "A \"refid\" attribute for a node within a Path object.", "target": 0}
{"idx": 13678, "func": "Interface", "target": 0}
{"idx": 13679, "func": "N.B. It's not po ssible to forward threadStarted() to the implementation class. This is because Config items are not processed until later, and HTTPDefaults may define the implementation", "target": 0}
{"idx": 13680, "func": "TODO: is this correct ?", "target": 1}
{"idx": 13681, "func": "used to mark non-existent classes in class hash", "target": 0}
{"idx": 13682, "func": "--", "target": 0}
{"idx": 13683, "func": "NEWLINE ESCAPE \\n", "target": 0}
{"idx": 13684, "func": "The RDMS concat() function only supports 2 parameters", "target": 0}
{"idx": 13685, "func": "Add pgp-specific content-parameters", "target": 0}
{"idx": 13686, "func": "Reset the node type, because the rest of the system is expecting FROM_FRAGMENT, all we wanted was for the factory to create the right sub-class. This might get reset again later on anyway to make the SQL generation simpler.", "target": 0}
{"idx": 13687, "func": "//this.fork = s;", "target": 0}
{"idx": 13688, "func": "it won't hurt fixnums", "target": 0}
{"idx": 13689, "func": "Add a new entry in the list and select it. Translator.localize(\"button.add\") +", "target": 0}
{"idx": 13690, "func": "$key will be $key, for example", "target": 0}
{"idx": 13691, "func": "This can throw an exception if the target has been deleted. We don't want to try locking the repository because this is called from the event delivery thread and could cause a deadlock. Instead catch the exception and leave the model empty.", "target": 0}
{"idx": 13692, "func": "singleton", "target": 0}
{"idx": 13693, "func": "&& uri.charAt(i) == FRAGMENT_SEPARATOR (implied)", "target": 0}
{"idx": 13694, "func": "@see org.argouml.uml.cognitive.critics.AbstractCrUnconventionalName#computeSuggestion(java.lang.String)", "target": 0}
{"idx": 13695, "func": "Use format to create number; if it fails, use the default", "target": 0}
{"idx": 13696, "func": "TODO: should this be clearData()?", "target": 1}
{"idx": 13697, "func": "may be negative", "target": 0}
{"idx": 13698, "func": "Check illegal array lengths", "target": 0}
{"idx": 13699, "func": "Use actual class name for log", "target": 0}
{"idx": 13700, "func": "Last token read via yylex().", "target": 0}
{"idx": 13701, "func": "this is just a folder ->disable all actions", "target": 0}
{"idx": 13702, "func": "to avoid having to deal with read/write locks and such, we insert the loaded data into the buffer in the post-load cleanup runnable, which runs in the AWT thread.", "target": 0}
{"idx": 13703, "func": "Regression test for HARMONY-382", "target": 0}
{"idx": 13704, "func": "indicate that an error occured", "target": 0}
{"idx": 13705, "func": "Groups are separated by at least one WS character", "target": 0}
{"idx": 13706, "func": "save headercache", "target": 0}
{"idx": 13707, "func": "internal constructor used for alternation", "target": 0}
{"idx": 13708, "func": "create the imput stream (so that DataType objects don't have to)", "target": 0}
{"idx": 13709, "func": "Read message from a file", "target": 0}
{"idx": 13710, "func": "Isolating the new objects", "target": 0}
{"idx": 13711, "func": "//subList.clear(); Sublist is supposed to share same backing store as list...TODO in RubyArray. //assertTrue(list.size() == 1);", "target": 1}
{"idx": 13712, "func": "load arguments", "target": 0}
{"idx": 13713, "func": "We have to process this command first -> break here!", "target": 0}
{"idx": 13714, "func": "INDEX", "target": 0}
{"idx": 13715, "func": "register interest on status updates", "target": 0}
{"idx": 13716, "func": "prepend value and type list with null for any positions before the wanted position.", "target": 0}
{"idx": 13717, "func": "push the current iterator onto the stack and then iterate through this directory.", "target": 0}
{"idx": 13718, "func": "paint right inside border g2d.setPaint(p2);", "target": 0}
{"idx": 13719, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.ISQLPanelAPI#filePrint()", "target": 0}
{"idx": 13720, "func": "Only encode strings if outVersion = 1.0 //$NON-NLS-1$", "target": 0}
{"idx": 13721, "func": "returns the package in which this feature is defined returns the name of the feature get method in the package interface (e.g. Company_Name) returns the name of the feature get method in the package interface (e.g. Xyz.eINSTANCE.getCompany_Name)", "target": 0}
{"idx": 13722, "func": "put a timeout if tasks couldn't terminate", "target": 0}
{"idx": 13723, "func": "//GenFeatureImpl", "target": 0}
{"idx": 13724, "func": "GradientPaint painter = new GradientPaint(0, 0, midColor.brighter(), 0, 5, midColor); g2.setPaint(painter); // g2.fillRect(0,0,w,5); // new GradientPaint(0, h-1, midColor, 0, h-1-5, Color.red); g2.setPaint(painter); // g2.fillRect(0,h-5,w,5);", "target": 0}
{"idx": 13725, "func": "if we got here, no unused display manager in list", "target": 0}
{"idx": 13726, "func": "we need to obtain the lock before any actions are executed, since this may be an inverse=\"true\" bidirectional association and it is one of the earlier entity actions which actually updates the database (this action is resposible for second-level cache invalidation only)", "target": 0}
{"idx": 13727, "func": "//{{{ getBrowserActionSet() method", "target": 0}
{"idx": 13728, "func": "ListChange", "target": 0}
{"idx": 13729, "func": "used by jpackage for JavaCC 3.x", "target": 0}
{"idx": 13730, "func": "//current.addSeparator();", "target": 0}
{"idx": 13731, "func": "Memory background color", "target": 0}
{"idx": 13732, "func": "from SortedMap", "target": 0}
{"idx": 13733, "func": "Old API", "target": 0}
{"idx": 13734, "func": "put the x at the right side of the activation if needed", "target": 0}
{"idx": 13735, "func": "We do this stuff because the browser is not able to handle more than one request yet", "target": 0}
{"idx": 13736, "func": "check the URL for \"?\" symbol", "target": 0}
{"idx": 13737, "func": "a label is required", "target": 0}
{"idx": 13738, "func": "Perform a cast, cast check, or assignability check. @param toType the class type of the cast result, which may include primitive types, e.g. Byte.TYPE. toType may be null to indicate a loose type assignment (which matches any fromType). @param fromType is the class type of the value to be cast including java primitive TYPE classes for primitives. fromType should be null to indicate that the fromValue is or would be Primitive.NULL @param fromValue an Object or bsh.Primitive primitive value (including Primitive.NULL or Primitive.VOID ) @param checkOnly If checkOnly is true then fromValue must be null. FromType is checked for the cast to toType... If checkOnly is false then fromValue must be non-null (Primitive.NULL is ok) and the actual cast is performed. @throws UtilEvalError on invalid assignment (when operation is assignment ). @throws UtilTargetError wrapping ClassCastException on cast error (when operation is cast) @param operation is Types.CAST or Types.ASSIGNMENT @see Primitive.getType()", "target": 0}
{"idx": 13739, "func": "we are starting a new series path", "target": 0}
{"idx": 13740, "func": "TODO not used?", "target": 1}
{"idx": 13741, "func": "Do not do new HashMap() here.", "target": 0}
{"idx": 13742, "func": "Remember Isolation level", "target": 0}
{"idx": 13743, "func": "If we still don't have one, we'll have to settle for an EDataType or EClass with an instance class name. //", "target": 0}
{"idx": 13744, "func": "Maintain a count of errors. //", "target": 0}
{"idx": 13745, "func": "NOTE: If we switch to a persistent repository like the b-tree repository we'll want to keep the old extent(s) around", "target": 0}
{"idx": 13746, "func": "Zero sleeps forever", "target": 0}
{"idx": 13747, "func": "And finally, the block data proper", "target": 0}
{"idx": 13748, "func": "//Ecore2XMLPackageImpl", "target": 0}
{"idx": 13749, "func": "$NON-NLS-1$ don't set empty to keep regexp regexpField.setText(\"\"); $NON-NLS-1$ $NON-NLS-1$", "target": 0}
{"idx": 13750, "func": "Delegate to the static method", "target": 0}
{"idx": 13751, "func": "Allow all but images", "target": 0}
{"idx": 13752, "func": "Set the EAttribute attributes. //", "target": 0}
{"idx": 13753, "func": "@see javax.swing.table.TableModel#getColumnName(int)", "target": 0}
{"idx": 13754, "func": "//{{{ expand() method", "target": 0}
{"idx": 13755, "func": "If the type also specifies a classifier... //", "target": 0}
{"idx": 13756, "func": "//{{{ invalidateCachedScreenLineCounts() method", "target": 0}
{"idx": 13757, "func": "this is ugly here, but needed because its a subquery", "target": 1}
{"idx": 13758, "func": "queue of undos. last is most recent, first is oldest", "target": 0}
{"idx": 13759, "func": "TODO implementationLocation??", "target": 1}
{"idx": 13760, "func": "//{{{ BufferLoadedVisitor class", "target": 0}
{"idx": 13761, "func": "Process the factory path", "target": 0}
{"idx": 13762, "func": "For a many-to-1 or 1-to-1 association, if the opposite reference on the new value is already set to something, we need a compound command that first explicitly removes that reference, so that it will be restored in the undo. //", "target": 0}
{"idx": 13763, "func": "If the file using the base name with no extention exists, it is first. The other files are in order from oldest to newest. The set of files to delete is slightly different depending on whether the base name file exists or not.", "target": 0}
{"idx": 13764, "func": "more than one year", "target": 0}
{"idx": 13765, "func": "call parent method setup flag based on bounds values", "target": 0}
{"idx": 13766, "func": "First, try to locate this resource through the current context classloader.", "target": 0}
{"idx": 13767, "func": "clone will produce correct type TODO but why do we need to clone the list?", "target": 1}
{"idx": 13768, "func": "//{{{ If reloading root, update parent directory list", "target": 0}
{"idx": 13769, "func": "try with Statediagram", "target": 0}
{"idx": 13770, "func": "TestSuite only finds testXXX() methods, and does not look for suite() methods. To provide more compatibilty with stand-alone tests, where JUnit does look for a suite() method, check for it first here.", "target": 0}
{"idx": 13771, "func": "//{{{ select() method", "target": 0}
{"idx": 13772, "func": "Bug #1995728 MS-SQL is inconsistent with regard to setting the current catalog. If you have a database with periods or spaces, then in some cases you must surround the catalog with quotes. For example, if you have a catalog named 'db with spaces' you must execute the following SQL: use \"db with spaces\" However, the same is not always true for the JDBC API method Connection.setCatalog. For some old versions of Microsoft drivers, you must quote the catalog as well. But for newer versions of the driver, you must not quote the catalog. So here, we attempt to use the unquoted version first, then if that fails, we will try quoting it.", "target": 1}
{"idx": 13773, "func": "used for the stringReplace and beanShell replace radio buttons, so that the user can press tab to go from the find field to the replace field in one go", "target": 0}
{"idx": 13774, "func": "just ignore", "target": 0}
{"idx": 13775, "func": "simply create 3 usecases and an actor in a package with individual names", "target": 0}
{"idx": 13776, "func": "(non-Javadoc) @see org.columba.ristretto.message.Message#getHeader()", "target": 0}
{"idx": 13777, "func": "Find the constructor (now in the instance namespace)", "target": 0}
{"idx": 13778, "func": "TODO: The following rather than the above is probably the correct way to search stereo = findStereotype(obj, null, name);", "target": 1}
{"idx": 13779, "func": "this is a transient object with existing persistent state not loaded by the session", "target": 0}
{"idx": 13780, "func": "//{{{ getCachedDockableNames() method", "target": 0}
{"idx": 13781, "func": "Compare the two maps for equality", "target": 0}
{"idx": 13782, "func": "Note: this method incorrectly caches the method structure. It needs to be cleared when the classloader changes.", "target": 1}
{"idx": 13783, "func": "Check for PCDATA alone.", "target": 0}
{"idx": 13784, "func": "Read the entity value.", "target": 0}
{"idx": 13785, "func": "Class to display graphics for a UML Choice State in a diagram - the circle. TODO: This should really be renamed FigChoiceState. It's the last vestige of the UML 1.3 name. @author pepargouml", "target": 1}
{"idx": 13786, "func": "if something goes wrong here, fall back to \"mark as read\"", "target": 0}
{"idx": 13787, "func": "Just a helper to make the fromResultSet ? ... below look nicer.", "target": 0}
{"idx": 13788, "func": "line 280", "target": 0}
{"idx": 13789, "func": "//we check the presence of signatures on lazy signing", "target": 0}
{"idx": 13790, "func": "check second argument less than first argument", "target": 0}
{"idx": 13791, "func": "public static final int NO_ACTION = 0; public static final int CASCADE_DELETE = 1; public static final int SET_DEFAULT = 2; public static final int SET_NULL = 3;", "target": 0}
{"idx": 13792, "func": "a redraw should NOT trigger another change event", "target": 1}
{"idx": 13793, "func": "new Name of the table", "target": 0}
{"idx": 13794, "func": "Arrays, Ranges, etc. are compound values Variables, fixnums, floats, etc. are \"atomic\" values", "target": 0}
{"idx": 13795, "func": "Bootstrap the top of the hierarchy", "target": 0}
{"idx": 13796, "func": "Sample in inner loop", "target": 0}
{"idx": 13797, "func": "//{{{ Constructor", "target": 0}
{"idx": 13798, "func": "i18n[codecompletion.prefs.table.udfWithoutParams=UDF without params]", "target": 0}
{"idx": 13799, "func": "More than one selection is allowed - check to see if we should change the selection", "target": 0}
{"idx": 13800, "func": "This is the path of the target directory. //", "target": 0}
{"idx": 13801, "func": "User provided incorrect query type", "target": 0}
{"idx": 13802, "func": "check negative index throws exception", "target": 0}
{"idx": 13803, "func": "integer division", "target": 0}
{"idx": 13804, "func": "Pick screen with largest intersection", "target": 0}
{"idx": 13805, "func": "if opcode == ATHROW or xRETURN, ends current block (no successor)", "target": 0}
{"idx": 13806, "func": "Maximum size to convert a document to text (default 10Mb)", "target": 0}
{"idx": 13807, "func": "method handle, arg receive, return value, and call instructions", "target": 0}
{"idx": 13808, "func": "Get the item count for the series, so that we can know which is the end of the series.", "target": 0}
{"idx": 13809, "func": "Set the selection to the widget. //", "target": 0}
{"idx": 13810, "func": "We break if we know this sleep was explicitly woken up/interrupted", "target": 0}
{"idx": 13811, "func": "if previous node is not commented out, but all the following nodes are, comment out a comma (constant separator)", "target": 0}
{"idx": 13812, "func": "I cannot think of any reason for doing anything at all here", "target": 0}
{"idx": 13813, "func": "Stores", "target": 0}
{"idx": 13814, "func": "do nothing, leave empty", "target": 0}
{"idx": 13815, "func": "saves the project", "target": 0}
{"idx": 13816, "func": "convert each column that will be a member key to non-null - this doesn't hurt if they are already null.", "target": 0}
{"idx": 13817, "func": "//use suffix for the entity columns", "target": 0}
{"idx": 13818, "func": "modify card properties in folder", "target": 0}
{"idx": 13819, "func": "TODO: Make into an assert once I get things like blockbodynodes to be implicit nil", "target": 1}
{"idx": 13820, "func": "decimal form, like (but not just like!) 'f'", "target": 0}
{"idx": 13821, "func": "Check for scheme, which must be before '/', '?' or '#'. Also handle names with DOS drive letters ('D:'), so 1-character schemes are not allowed.", "target": 0}
{"idx": 13822, "func": "This is applied to fields that should cause a restart when changed $NON-NLS-1$", "target": 0}
{"idx": 13823, "func": "i18n[popupeditableIoPanel.fileOverwrite=File {0} already exists.\\n\\nDo you wish to overwrite this file?]", "target": 0}
{"idx": 13824, "func": "//{{{ selectMode() method", "target": 0}
{"idx": 13825, "func": "don't reposition when we've reached the end of the stream", "target": 0}
{"idx": 13826, "func": "Current column whose tooltip is being displayed. This variable is used to minimize the calls to setToolTipText().", "target": 0}
{"idx": 13827, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#recordCopied(net.sourceforge.squirrel_sql.plugins.dbcopy.event.RecordEvent)", "target": 0}
{"idx": 13828, "func": "line 636", "target": 0}
{"idx": 13829, "func": "Do search on Enter", "target": 0}
{"idx": 13830, "func": "Required for MouseListener interface, but we only care about clicks", "target": 0}
{"idx": 13831, "func": "capture the output", "target": 0}
{"idx": 13832, "func": "do nothing, allow loop to redo", "target": 0}
{"idx": 13833, "func": "a new map always has 1 group (the default group)", "target": 0}
{"idx": 13834, "func": "for request Data", "target": 0}
{"idx": 13835, "func": "//First replace all special entities", "target": 0}
{"idx": 13836, "func": "Get the Matcher for this thread", "target": 0}
{"idx": 13837, "func": "create virtual folder for each criteria", "target": 0}
{"idx": 13838, "func": "Instance", "target": 0}
{"idx": 13839, "func": "We just add placeholder text for file content", "target": 0}
{"idx": 13840, "func": "create constructorInstaller; if there are no constructors, it will disable construction", "target": 0}
{"idx": 13841, "func": "check for thread events, in case we've been woken up to die", "target": 0}
{"idx": 13842, "func": "The operand that this attribute targets DEFERRED AttributeValue _val; Attribute value", "target": 0}
{"idx": 13843, "func": "Miscellaneous typical temporary files", "target": 0}
{"idx": 13844, "func": "//MappingRootImpl", "target": 0}
{"idx": 13845, "func": "I already wrote a comment expaining this in Macro.invoke().", "target": 0}
{"idx": 13846, "func": "Invert the sign, since TZ format and Java format use opposite signs, sigh... Also, Java API requires the sign to be always present, be it \"+\" or \"-\".", "target": 0}
{"idx": 13847, "func": "//sort first by role name", "target": 0}
{"idx": 13848, "func": "(non-Javadoc) @see org.columba.mail.folder.IMailbox#getMimePartSourceStream(java.lang.Object, java.lang.Integer[])", "target": 0}
{"idx": 13849, "func": "Called by: - ClientJMeterEngine.exe() which is called on remoteStop", "target": 0}
{"idx": 13850, "func": "very unlikely to happen", "target": 0}
{"idx": 13851, "func": "range markers - no longer separate fields but test anyway...", "target": 0}
{"idx": 13852, "func": "Test sending data with ISO-8859-1 encoding", "target": 0}
{"idx": 13853, "func": "//force immediate execution of the insert", "target": 0}
{"idx": 13854, "func": "This is the result of a bug that left off all trailing arguments. E.g.: system \"ls\", \"-1\", \"dir\" would be seen as system \"ls\"", "target": 1}
{"idx": 13855, "func": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 13856, "func": "Create a new THETA_JOINS node as a parent of all filters", "target": 0}
{"idx": 13857, "func": "IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args", "target": 0}
{"idx": 13858, "func": "//{{{ MultiFileActionHandler class", "target": 0}
{"idx": 13859, "func": "Display resulting MimeParts", "target": 0}
{"idx": 13860, "func": "XXX ignore attributes in a different NS ( maybe store them ? )", "target": 1}
{"idx": 13861, "func": "store call information so method_missing impl can use it", "target": 0}
{"idx": 13862, "func": "Only look at classes...", "target": 0}
{"idx": 13863, "func": "No header provided", "target": 0}
{"idx": 13864, "func": "//{{{ overlaps() method", "target": 0}
{"idx": 13865, "func": "TODO: check semantics here - tfm", "target": 1}
{"idx": 13866, "func": "just ignore unknown people", "target": 0}
{"idx": 13867, "func": "we set scope-aware to true to force heap-based locals", "target": 0}
{"idx": 13868, "func": "//get lower bound value:", "target": 0}
{"idx": 13869, "func": "Creates a new checkbox menu item attached to the specified action object and appends it to the end of this menu. TODO: This is almost a duplicate of ArgoJMenu.addCheckItem must find a way to merge. @param a the Action for the checkbox menu item to be added @return the new checkbox menu item", "target": 1}
{"idx": 13870, "func": "//{{{ load() method", "target": 0}
{"idx": 13871, "func": "never reached", "target": 0}
{"idx": 13872, "func": "If configured to not care about whether the element is already checked out to the current view. Then check to see if it is checked out.", "target": 0}
{"idx": 13873, "func": "Event: Anniversary", "target": 0}
{"idx": 13874, "func": "N.B. This needs to divert the log for SampleResult", "target": 0}
{"idx": 13875, "func": "Indicates the end of the range for notation events.<p> TODO: Remove this - not used anyway. @return the last id reserved for events.", "target": 1}
{"idx": 13876, "func": "We should not have a query string part", "target": 0}
{"idx": 13877, "func": "the old-time stand-by...", "target": 0}
{"idx": 13878, "func": "start with the current tick unit...", "target": 0}
{"idx": 13879, "func": "Ensure that all proxies are resolved so that references into the controlled object will be saved to reference the new resource. //", "target": 0}
{"idx": 13880, "func": "Generate the select expression.", "target": 0}
{"idx": 13881, "func": "Line numbering", "target": 0}
{"idx": 13882, "func": "TODO fix up for Nimbus LAF", "target": 1}
{"idx": 13883, "func": "Ensure that it won't be closed in the finally block. //", "target": 0}
{"idx": 13884, "func": "get the updated snapshot of the entity state by cloning current state; it is safe to copy in place, since by this time no-one else (should have) has a reference to the array", "target": 0}
{"idx": 13885, "func": "Move me to classpath/ClassManagerImpl???", "target": 1}
{"idx": 13886, "func": "//iconLabel.setBackground(titleBackground);", "target": 0}
{"idx": 13887, "func": "Usually the initialized is set to true. But here it must not. Because the prepend and append readers have to be instantiated on runtime //newFilter.setInitialized(true);", "target": 0}
{"idx": 13888, "func": "TODO: build arg list based on number of args, optionals, etc", "target": 1}
{"idx": 13889, "func": "@see org.argouml.uml.diagram.ui.FigNodeModelElement#updateNameText()", "target": 0}
{"idx": 13890, "func": "i18n[userscript.execOn=Execute script on {0}]", "target": 0}
{"idx": 13891, "func": "add stream to folder", "target": 0}
{"idx": 13892, "func": "category 1", "target": 0}
{"idx": 13893, "func": "if the id not currently set (for example in the security panel in the account-config", "target": 0}
{"idx": 13894, "func": "i18n[SQLHistoryController.mnuAppendSelectionToEditor=Append selected statements to SQL editor]", "target": 0}
{"idx": 13895, "func": "Get height adjustment based on stack and translate to Java2D values", "target": 0}
{"idx": 13896, "func": "//no server running, start our own", "target": 0}
{"idx": 13897, "func": "some regexps (eg ^ by itself) have a length == 0, so we implement this hack. if you don't understand what's going on here, then go back to watching MTV", "target": 1}
{"idx": 13898, "func": "baseNameTerminator not found: the descriptor use the JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and not [Foo<baseNameTerminator>-ejb-jar.xml, Foo<baseNameTerminator>-jonas-ejb-jar.xml].", "target": 0}
{"idx": 13899, "func": "//subtitlePaint;", "target": 0}
{"idx": 13900, "func": "//turn off anti-aliasing when filling rectangles", "target": 0}
{"idx": 13901, "func": "//tick value is 1.0 and 0.0 is within data range //set tick value to zero //indicate zero tick", "target": 0}
{"idx": 13902, "func": "//System.err.print(\" creating new outlier list \");", "target": 0}
{"idx": 13903, "func": "So we know which button is selected", "target": 0}
{"idx": 13904, "func": "do nothing, so null is returned", "target": 0}
{"idx": 13905, "func": "//ItemProvider/getText.override.javajetinc", "target": 0}
{"idx": 13906, "func": "first lets draw the grid", "target": 0}
{"idx": 13907, "func": "DB2 doesn't support set default for FK constraint delete action", "target": 0}
{"idx": 13908, "func": "Restore the contents to the original value.", "target": 0}
{"idx": 13909, "func": "//{{{ setRegister() method", "target": 0}
{"idx": 13910, "func": "get mimeparts", "target": 0}
{"idx": 13911, "func": "Look for a declaration subset.", "target": 0}
{"idx": 13912, "func": "If only default is specified and the property previously existed in the property file, it is unchanged.", "target": 0}
{"idx": 13913, "func": "a while node could receive non-local flow control from any of these: a closure within the loop an eval within the loop a block-arg-based proc called within the loop", "target": 0}
{"idx": 13914, "func": "store_1 each type", "target": 0}
{"idx": 13915, "func": "//ignore", "target": 0}
{"idx": 13916, "func": "This seems to be a pretty sweet formula that supports good growth. Adding an object to a list will create a list of capacity 4, which is just about the average list size. //", "target": 0}
{"idx": 13917, "func": "if so, remove it", "target": 0}
{"idx": 13918, "func": "First time through, skip the double spacing", "target": 0}
{"idx": 13919, "func": "i.e. not using Expires Check that we are processing Expires/CacheControl", "target": 0}
{"idx": 13920, "func": "avoid a race condition see bug #834338", "target": 0}
{"idx": 13921, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#copyFinished(int)", "target": 0}
{"idx": 13922, "func": "GridLayout makes equal cells", "target": 0}
{"idx": 13923, "func": "run jEditLauncher installation", "target": 0}
{"idx": 13924, "func": "total number of entries in", "target": 0}
{"idx": 13925, "func": "//topBorderPanel.setBorder(BorderFactory.createEmptyBorder(0, 0, 5, 0));", "target": 0}
{"idx": 13926, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#getConfigurationPanel()", "target": 0}
{"idx": 13927, "func": "///////////////GEF Methods //////////////////////////TODO: These should really be picked up automatically from some GEF interface that we extend, but there is no such thing. NOTE: We've only added methods used by ArgoUML, so it's possible that external consumers need other methods.", "target": 1}
{"idx": 13928, "func": "as a special case, if the bar colour has alpha == 0, we draw nothing.", "target": 0}
{"idx": 13929, "func": "//{{{ setPluginCache() method", "target": 0}
{"idx": 13930, "func": "//add -revision xxxxx to the commandline", "target": 0}
{"idx": 13931, "func": "make sure that dummy edit is not in the tree", "target": 0}
{"idx": 13932, "func": "when(...)", "target": 0}
{"idx": 13933, "func": "TODO: Shouldn't we do something here?", "target": 1}
{"idx": 13934, "func": "Expand by 0% does not change the range", "target": 0}
{"idx": 13935, "func": "polygon definitions", "target": 0}
{"idx": 13936, "func": "Headers", "target": 0}
{"idx": 13937, "func": "//Supply the user name. If you use anonymous you will be logged in and the pw will be ignored", "target": 0}
{"idx": 13938, "func": "Make sure the file doesn't exist so the user will get prompted to choose a new name", "target": 0}
{"idx": 13939, "func": "//TODO: this is kinda inconsistent with CollectionType", "target": 1}
{"idx": 13940, "func": "TODO: Only used by interface implementation; eliminate it", "target": 1}
{"idx": 13941, "func": "add all groups as folder to JTree", "target": 0}
{"idx": 13942, "func": "nothing is drawn for null...", "target": 0}
{"idx": 13943, "func": "Pushing this to the end of the AWT thread seems to be the only way to get this to update correctly", "target": 0}
{"idx": 13944, "func": "FIXME: In order for Thread to play well with the standard 'new' behavior, it must provide an allocator that can create empty object instances which initialize then fills with appropriate data.", "target": 1}
{"idx": 13945, "func": "internal file attributes", "target": 0}
{"idx": 13946, "func": "gcj doesn't support bootclasspath dir (-bootclasspath) so we'll emulate it for compatibility and convenience.", "target": 0}
{"idx": 13947, "func": "Just in case the existing selected element is from elsewhere make sure it is in the list", "target": 0}
{"idx": 13948, "func": "try unknown key", "target": 0}
{"idx": 13949, "func": "Detect functionName() so this does not generate empty string as the parameter", "target": 0}
{"idx": 13950, "func": "for performance reasons saveNil and saveElement are not used", "target": 0}
{"idx": 13951, "func": "draw optional guide lines", "target": 0}
{"idx": 13952, "func": "Block mouse moves to the underlaying component won't restore the Cursor", "target": 0}
{"idx": 13953, "func": "Do some basic validity checks.", "target": 0}
{"idx": 13954, "func": "specifies valid elements for an ObjectFlowState to contain", "target": 0}
{"idx": 13955, "func": "//{{{ setBorder() method", "target": 0}
{"idx": 13956, "func": "Was there an explicit select expression?", "target": 0}
{"idx": 13957, "func": "//{{{ saveUserProps() method", "target": 0}
{"idx": 13958, "func": "Use the table fromElement and the property name to get the array of column names.", "target": 0}
{"idx": 13959, "func": "Collection wrappers, by the CollectionKey //key=CollectionKey, value=PersistentCollection", "target": 0}
{"idx": 13960, "func": "retry handling in the rescue block", "target": 0}
{"idx": 13961, "func": "line 820", "target": 0}
{"idx": 13962, "func": "enable/disable cut/copy/paste/selectall actions FocusManager.getInstance().updateActions();", "target": 0}
{"idx": 13963, "func": "///////////////////////////////////////////////////////////////////////////////Checks if the former message should be highlighted in a 'history' color.", "target": 0}
{"idx": 13964, "func": "line 1898", "target": 0}
{"idx": 13965, "func": "Store ptr to newly open window in list of windows per session.", "target": 0}
{"idx": 13966, "func": "///////////////////////////////////////////////////////Setting the model initializes columns. We want to initialize the columns ourselves below.", "target": 0}
{"idx": 13967, "func": "Fully resolve the map reference, create implicit joins.", "target": 0}
{"idx": 13968, "func": "create a unique index on myuniquechar", "target": 0}
{"idx": 13969, "func": "newMenu.setText(Translator.localize(\"action.new\"));", "target": 0}
{"idx": 13970, "func": "Nested class whose instances act as thunks reacting to to_str method called from (Exception#to_str, Exception#message) MRI equivalent: rb_cNameErrorMesg, class name: \"message\", construction method: \"!\", to_str implementation: \"name_err_mesg_to_str\" TODO: this class should not be lookupable", "target": 0}
{"idx": 13971, "func": "Mutators hold write lock & will deadlock if use is not thread-safe", "target": 0}
{"idx": 13972, "func": "// private AliasesListInternalFrame _aliasesListWindow; // private DriversListInternalFrame _driversListWindow;", "target": 0}
{"idx": 13973, "func": "line 327", "target": 0}
{"idx": 13974, "func": "startup Columba", "target": 0}
{"idx": 13975, "func": "for NetWare and OS/2, piggy-back on Windows, since here and in the apply code, the same assumptions can be made as with windows - that \\\\ is an OK separator, and do comparisons case-insensitive.", "target": 0}
{"idx": 13976, "func": "TODO: This should be something else like a tCHAR", "target": 1}
{"idx": 13977, "func": "add attachment", "target": 0}
{"idx": 13978, "func": "hand file input stream to DataType object for import Also, handle File IO errors here so that DataType objects do not have to.", "target": 0}
{"idx": 13979, "func": "Old test left behind \"garbage files\" so this time it creates a directory that is guaranteed not to already exist (and deletes it afterward.)", "target": 0}
{"idx": 13980, "func": "//Set-up:", "target": 0}
{"idx": 13981, "func": "Legacy word characters", "target": 0}
{"idx": 13982, "func": "shapeVisible", "target": 0}
{"idx": 13983, "func": "foregroundPaint", "target": 0}
{"idx": 13984, "func": "condition is always true, just compile it and not body", "target": 0}
{"idx": 13985, "func": "//TODO: refactor to .sql package", "target": 1}
{"idx": 13986, "func": "make sure that elapsed time in ms works", "target": 0}
{"idx": 13987, "func": "Add search text extension", "target": 0}
{"idx": 13988, "func": "Something was added - nothing for us to worry about", "target": 0}
{"idx": 13989, "func": "$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$", "target": 0}
{"idx": 13990, "func": "We presume that the container equals this PropPanel.", "target": 0}
{"idx": 13991, "func": "If the scheme specific part is opaque, it can contain '[' and ']'. uric_no_slash wasn't modified by RFC 2732, which I've interpreted as an error in the spec, since the production should be equivalent to (uric - '/'), and uric contains '[' and ']'. - mrglavas", "target": 0}
{"idx": 13992, "func": "this is the regression style determination which matches the logic of the classic translator", "target": 0}
{"idx": 13993, "func": "Options passed to the iAS ejbc", "target": 0}
{"idx": 13994, "func": "Implement these here, to avoid re-implementing for sub-classes (previously these were implemented in all TestElements)", "target": 0}
{"idx": 13995, "func": "tell the underlying data model to stop forcing edit mode and return to the mode specified in the session parameters, which includes telling the GUI to rebuild itself", "target": 0}
{"idx": 13996, "func": "JRUBY-2435: Aliasing eval and other \"special\" methods should display a warning We warn because we treat certain method names as \"special\" for purposes of optimization. Hopefully this will be enough to convince people not to alias them.", "target": 0}
{"idx": 13997, "func": "//File are different see if its an object or an interface", "target": 0}
{"idx": 13998, "func": "Code Completion has been done within Code Completion. and relaunch completion popup.", "target": 0}
{"idx": 13999, "func": "start with illegal number of rows matching query", "target": 0}
{"idx": 14000, "func": "this doesn't work", "target": 0}
{"idx": 14001, "func": "FIXME Hacky workaround to JBCACHE-1202", "target": 1}
{"idx": 14002, "func": "//cat.debug(\"Added ToDoItem: \" + _headline);", "target": 0}
{"idx": 14003, "func": "i18n[laf.otmFiles=OTM files]", "target": 0}
{"idx": 14004, "func": "TODO: Implement this better", "target": 1}
{"idx": 14005, "func": "line 311", "target": 0}
{"idx": 14006, "func": "//?? Best guess: read object? //?? This is probably the wrong thing to do here, but //?? I don't know what else to try.", "target": 1}
{"idx": 14007, "func": "fireLabelProviderChanged();", "target": 0}
{"idx": 14008, "func": "i18n[DatabaseMetaData.searchableTypeSearchable=supports all WHERE]", "target": 0}
{"idx": 14009, "func": "i18n[SQLTab.hint=Execute SQL statements]", "target": 0}
{"idx": 14010, "func": "//{{{ runTemporaryMacro() method", "target": 0}
{"idx": 14011, "func": "Remove duplicates and take care of getOwner() and remove nulls:", "target": 0}
{"idx": 14012, "func": "custom sql", "target": 0}
{"idx": 14013, "func": "first arrange without constraints, and see if this fits within the required ranges...", "target": 0}
{"idx": 14014, "func": "new vis range = Start: Sep 23, 2007 12:00:00 AM (RAW:1.0, DST:-1.0) End: Nov 3, 2007 11:59:59 PM (RAW:1.0, DST:0.0) Time zone: null Locale: null new vis range = Start: Oct 1, 2007 12:00:00 AM (RAW:1.0, DST:-1.0) End: Nov 11, 2007 11:59:59 PM (RAW:1.0, DST:0.0) Time zone: null Locale: null should be new vis range = Start: Oct 1, 2007 12:00:00 AM (RAW:1.0, DST:-1.0) End: Nov 10, 2007 11:59:59 PM (RAW:1.0, DST:0.0) Time zone: null Locale: null", "target": 0}
{"idx": 14015, "func": "the intersect is at the next point for both the minuend and subtrahend", "target": 0}
{"idx": 14016, "func": "reflect these into the target", "target": 0}
{"idx": 14017, "func": "State of the parser", "target": 0}
{"idx": 14018, "func": "we call refresh ticks just to get the maximum width or height", "target": 0}
{"idx": 14019, "func": "@see junit.framework.TestCase#TestCase(String)", "target": 0}
{"idx": 14020, "func": "@see junit.framework.TestCase#runTest()", "target": 0}
{"idx": 14021, "func": "2190..21FF;", "target": 0}
{"idx": 14022, "func": "we don't expect to find this", "target": 0}
{"idx": 14023, "func": "Convert to bounding box Very screwy! GEF sometimes uses center and sometimes upper left TODO: GEF also positions text at the nominal baseline which is well inside the bounding box and gives the overall size incorrectly", "target": 1}
{"idx": 14024, "func": "initialize basic parameters that are different from Decision.UNSPEC", "target": 0}
{"idx": 14025, "func": "//need to do that here rather than in the save event listener to let //the post insert events to have a id-filled entity when IDENTITY is used (EJB3)", "target": 1}
{"idx": 14026, "func": "i18n[PostgresPlugin.showIndexSource=Show index source]", "target": 0}
{"idx": 14027, "func": "/we have rotation houston, please spin me", "target": 0}
{"idx": 14028, "func": "We only get here if we should do this. //", "target": 0}
{"idx": 14029, "func": "//i18n[syntax.errors=Errors]", "target": 0}
{"idx": 14030, "func": "If clic on the Graph tab, make the graph (without apply interval or filter)", "target": 0}
{"idx": 14031, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getTimeDateFunctions()", "target": 0}
{"idx": 14032, "func": "the signer certificate", "target": 0}
{"idx": 14033, "func": "create and add a new right side", "target": 0}
{"idx": 14034, "func": "//The SQL statement to be validated against the standard", "target": 0}
{"idx": 14035, "func": "Make the gradient ghostlike:", "target": 0}
{"idx": 14036, "func": "end class WizMEName", "target": 0}
{"idx": 14037, "func": "//{{{ updateList() method", "target": 0}
{"idx": 14038, "func": "equation for calculating the weight w = (int)(33 (used/max))", "target": 0}
{"idx": 14039, "func": "check for zero pivot element", "target": 0}
{"idx": 14040, "func": "try unknown row key", "target": 0}
{"idx": 14041, "func": "//i18n[ImportTableDataCommand.sqlErrorOccured=An error occured while reading database data.] //i18n[ImportTableDataCommand.error=Error]", "target": 0}
{"idx": 14042, "func": "//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$", "target": 0}
{"idx": 14043, "func": "<=> may return nil in many circumstances, e.g. 3 <=> NaN", "target": 0}
{"idx": 14044, "func": "N.B. Needs to implement Visualizer so that TestBeanGUI can find the correct GUI class", "target": 1}
{"idx": 14045, "func": "exit for-loop", "target": 0}
{"idx": 14046, "func": "SizeConstraint sConstr4 = new SizeConstraint(new AtFixed(0), new AtFraction(1), 0.0f);", "target": 0}
{"idx": 14047, "func": "message body", "target": 0}
{"idx": 14048, "func": "Stored Procedures can have comments embedded in them, so don't line-wrap them.", "target": 0}
{"idx": 14049, "func": "MRI behavior: just plain '//' or '\\\\\\\\' are considered illegal on Windows.", "target": 0}
{"idx": 14050, "func": "is_something?, contains_thing?", "target": 0}
{"idx": 14051, "func": "line 1533", "target": 0}
{"idx": 14052, "func": "FIXME: Determine if a real allocator is needed here. Do people want to extend JavaClass? Do we want them to do that? Can you Class.new(JavaClass)? Should you be able to? TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with this type and it can't be marshalled. Confirm. JRUBY-415", "target": 1}
{"idx": 14053, "func": "//DumpingInvocationCallbackFactory", "target": 0}
{"idx": 14054, "func": "Write multipart for file", "target": 0}
{"idx": 14055, "func": "Maximum data to put on a \"one liner\"", "target": 0}
{"idx": 14056, "func": "//OUTLINE STROKE ///////////////////////////////////////////////////////", "target": 0}
{"idx": 14057, "func": "//the user visible aliases, which are unknown to the superclass, //these are not the actual \"physical\" SQL aliases", "target": 0}
{"idx": 14058, "func": "Valid extension point, more derived than Map above, but after it!", "target": 0}
{"idx": 14059, "func": "TODO: NOT_ALLOCATABLE_ALLOCATOR may be ok here, but it's unclear how Structs work with marshalling. Confirm behavior and ensure we're doing this correctly. JRUBY-415", "target": 1}
{"idx": 14060, "func": "copy the data to minimise the synch time", "target": 0}
{"idx": 14061, "func": "Back up over the whitespace.", "target": 0}
{"idx": 14062, "func": "Create the SplitFile function and set its parameters.", "target": 0}
{"idx": 14063, "func": "try a null source", "target": 0}
{"idx": 14064, "func": "i18n[i18n.failedToParse=Failed to parse {0}\\n{1}]", "target": 0}
{"idx": 14065, "func": "we need to guard against this.zoomPoint being null", "target": 0}
{"idx": 14066, "func": "tt.length should always be >= length, but theoretically it can happen, if the compressor mixed small and large blocks. Normally only the last block will be smaller than others.", "target": 0}
{"idx": 14067, "func": "Non-empty set of rows to delete. Make sure user wants to delete", "target": 0}
{"idx": 14068, "func": "line 8143 \"-\"", "target": 0}
{"idx": 14069, "func": "All text was stored in name field in UML 1.3", "target": 0}
{"idx": 14070, "func": "setUseYInterval", "target": 0}
{"idx": 14071, "func": "@see org.argouml.model.ModelEventPump#addModelEventListener( java.beans.PropertyChangeListener, java.lang.Object)", "target": 0}
{"idx": 14072, "func": "radius", "target": 0}
{"idx": 14073, "func": "increase offset by increments until we're clear", "target": 0}
{"idx": 14074, "func": "Optimization against the first character.", "target": 0}
{"idx": 14075, "func": "set annotations contents", "target": 0}
{"idx": 14076, "func": "i18n[DatabaseMetaData.searchableTypePredChar=only supports 'WHERE...LIKE']", "target": 0}
{"idx": 14077, "func": "else [implicit here]", "target": 0}
{"idx": 14078, "func": "fixed legend items", "target": 0}
{"idx": 14079, "func": "Andreas: this is just temporary for the uml2 pre-alpha versions.", "target": 1}
{"idx": 14080, "func": "//i18n[syntax.dataTypes=Data Types]", "target": 0}
{"idx": 14081, "func": "map of existing DataType objects for each column. The key is the ColumnDisplayDefinition object, and the value is the DataTypeObject for that column's data type.", "target": 0}
{"idx": 14082, "func": "Marker for query string attribute", "target": 0}
{"idx": 14083, "func": "Someone called exit!, so we need to kill the main thread", "target": 0}
{"idx": 14084, "func": "holds file menu", "target": 0}
{"idx": 14085, "func": "open space at gridy = 2;", "target": 0}
{"idx": 14086, "func": "<!-- begin-user-doc --> The <b>Adapter Factory</b> for the model. It provides an adapter <code>createXXX</code> method for each class of the model. <!-- end-user-doc --> @see org.eclipse.emf.edit.tree.TreePackage @generated", "target": 0}
{"idx": 14087, "func": "Setup panes", "target": 0}
{"idx": 14088, "func": "//but for big operations, we save all the params to a temp file //and set @tmpfile as the command -then we remember to delete the tempfile //afterwards", "target": 0}
{"idx": 14089, "func": "we are at the last minute in the hour...", "target": 0}
{"idx": 14090, "func": "//rewrite it after change setExpression ?", "target": 0}
{"idx": 14091, "func": "Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:", "target": 0}
{"idx": 14092, "func": "In a character class, this.chardata has one character, that is to say, a pair of surrogates is composed and stored to this.chardata.", "target": 0}
{"idx": 14093, "func": "If this file is a directory", "target": 0}
{"idx": 14094, "func": "Accessor methods.", "target": 0}
{"idx": 14095, "func": "//log.warn(\"Constructor only intended for use in testing\");", "target": 0}
{"idx": 14096, "func": "if relative, fix up to bsh.cwd", "target": 0}
{"idx": 14097, "func": "//TreePackage", "target": 0}
{"idx": 14098, "func": "Yes, so the second argument is missing", "target": 0}
{"idx": 14099, "func": "Might be NullProperty", "target": 0}
{"idx": 14100, "func": "$NON-NSL-1$", "target": 0}
{"idx": 14101, "func": "Defaults to caller URL", "target": 0}
{"idx": 14102, "func": "//MappingPackage ePackage = ((MappingRoot)object).ePackageMapping();", "target": 0}
{"idx": 14103, "func": "Find the last controller in the target to store the sampler there:", "target": 0}
{"idx": 14104, "func": "update the wrapped object map", "target": 0}
{"idx": 14105, "func": "mark as read, mark as draft", "target": 0}
{"idx": 14106, "func": "//{{{ Remove constructor", "target": 0}
{"idx": 14107, "func": "Make sure the changed values of bidirectional reference lists are cached before we start to apply the change. //", "target": 0}
{"idx": 14108, "func": "(non-Javadoc) @see org.apache.jmeter.gui.JMeterGUIComponent#createTestElement()", "target": 0}
{"idx": 14109, "func": "Don't include sub-classes for implied collection joins or subquery joins.", "target": 0}
{"idx": 14110, "func": "see if prefix already exists in current context", "target": 0}
{"idx": 14111, "func": "// private void closeDialog(java.awt.event.WindowEvent evt) // { // _dlog.setVisible(false); // _dlog.dispose(); // }", "target": 0}
{"idx": 14112, "func": "the column doesnt exist at all.", "target": 0}
{"idx": 14113, "func": "This handles Rose 2003 format, e.g., Logical View::JavaException[40722F9D0294] //", "target": 0}
{"idx": 14114, "func": "CREATE TABLE tableName ( column1 int, column2 varchar(20) NOT NULL DEFAULT 'Hello World' CONSTRAINT tableName_pkey PRIMARY KEY(column1,column2) );", "target": 0}
{"idx": 14115, "func": "Replace the variables in the sampler", "target": 0}
{"idx": 14116, "func": "see if there was a problem during parsing", "target": 0}
{"idx": 14117, "func": "If a toolbar was requested, create an empty one.", "target": 0}
{"idx": 14118, "func": "/////////////////////////////////////////////////////////////////////////USED ONLY FOR REGRESSION TESTING!!!! todo : obviously get rid of all this junk ;) ///////////////////////////////////////////////////////////////////////////", "target": 1}
{"idx": 14119, "func": "we no longer have any dirs using this extended attribute", "target": 0}
{"idx": 14120, "func": "//{{{ isURL() method", "target": 0}
{"idx": 14121, "func": "No errors; first line", "target": 0}
{"idx": 14122, "func": "@see org.argouml.model.ModelEventPump#addModelEventListener( java.beans.PropertyChangeListener, java.lang.Object, java.lang.String[])", "target": 0}
{"idx": 14123, "func": "TODO: opt for 2 and 3 ?", "target": 1}
{"idx": 14124, "func": "i18n[DataSetUpdateableTableModelImpl.error.duringInsert=Exception seen during check on DB. Exception was:\\n{0}\\nInsert was probably not completed correctly. DB may be corrupted!]", "target": 0}
{"idx": 14125, "func": "Current Alias Schema properties dont want cache. so we don't cache.", "target": 0}
{"idx": 14126, "func": "first look to see if they are identical objects, e.g. both null", "target": 0}
{"idx": 14127, "func": "the clone contains a reference to a CLONE of the original object", "target": 0}
{"idx": 14128, "func": "make the session available to the session factory's \"current context\"", "target": 0}
{"idx": 14129, "func": "//legendBackgroundPaint;", "target": 0}
{"idx": 14130, "func": "---- okButton ----", "target": 0}
{"idx": 14131, "func": "XmlElement selectedBrowser = messageviewer.getElement(OptionsItem.SELECTED_BROWSER); selectedBrowser.addObserver(this);", "target": 0}
{"idx": 14132, "func": "Need some format checking here", "target": 1}
{"idx": 14133, "func": "Some known attribute names, just for convenience:", "target": 0}
{"idx": 14134, "func": "if previous node is not commented out, but all following are", "target": 0}
{"idx": 14135, "func": "//{{{ isOverwriteEnabled() method", "target": 0}
{"idx": 14136, "func": "note: segments.length > 0 -> hierarchical", "target": 0}
{"idx": 14137, "func": "i18n[AllBluesBoldMetalTheme.name=All Blues - Bold]", "target": 0}
{"idx": 14138, "func": "rangeCrosshairVisible", "target": 0}
{"idx": 14139, "func": "MRI behavior: in finished mode, we work as pass-through", "target": 0}
{"idx": 14140, "func": "this call is side-effecty", "target": 1}
{"idx": 14141, "func": "//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]", "target": 0}
{"idx": 14142, "func": "i18n[graph.graphSaved=Graph \"{0}\" saved to \"{1}\"]", "target": 0}
{"idx": 14143, "func": "Add column name to the list", "target": 0}
{"idx": 14144, "func": "update removed rows fks to null", "target": 0}
{"idx": 14145, "func": "paramTable.setCellSelectionEnabled(true); paramTable.setPreferredScrollableViewportSize(new Dimension(100, 70));", "target": 0}
{"idx": 14146, "func": "PR 11100", "target": 0}
{"idx": 14147, "func": "source method return type is array (getExceptions), target is not array (i.e. addException)", "target": 0}
{"idx": 14148, "func": "Big enough for a \\r\\n pair lookBehind[0] = most recent lookBehind[1] = second most recent", "target": 0}
{"idx": 14149, "func": "If we're on windows, then do the comparison ignoring case and treat the two directory characters the same", "target": 0}
{"idx": 14150, "func": "it would be nice (and logical!) if exponent form behaved like E/e, and decimal form behaved like f, but no such luck. hence:", "target": 1}
{"idx": 14151, "func": "//- JMX names", "target": 0}
{"idx": 14152, "func": "IN changed!", "target": 0}
{"idx": 14153, "func": "TODO is this really necessary?", "target": 1}
{"idx": 14154, "func": "work around a bug of GenIC 2.5", "target": 0}
{"idx": 14155, "func": "we need at least 3 points to spline. Draw simple line for two points", "target": 0}
{"idx": 14156, "func": "The singleton instance. TODO: Why is this a singleton? Wouldn't it be better to have exactly one for every Explorer?", "target": 1}
{"idx": 14157, "func": "return that.type.equals(type) && EqualsHelper.equals(that.value, value);", "target": 0}
{"idx": 14158, "func": "align submenu", "target": 0}
{"idx": 14159, "func": "//JASON: Remove?? //_session.getSessionSheet().getSQLPanel().executeSQL(sql);", "target": 1}
{"idx": 14160, "func": "All listeners in javax.swing.event as of Swing 1.1", "target": 0}
{"idx": 14161, "func": "Add any support classes specified in the build file", "target": 0}
{"idx": 14162, "func": "the user specifically supplied insert=\"true\", which constitutes an illegal combo", "target": 0}
{"idx": 14163, "func": "MailInterface.treeModel.nodeStructureChanged(parentFolder);", "target": 0}
{"idx": 14164, "func": "the user has restricted the set of columns to use. If this name is NOT in the list, then skip it; otherwise we fall through and use the column in the WHERE clause", "target": 0}
{"idx": 14165, "func": "create logging file in \"<users config-folder>/log\"", "target": 0}
{"idx": 14166, "func": "//{{{ isAntiAliasEnabled() method", "target": 0}
{"idx": 14167, "func": "cached already?", "target": 0}
{"idx": 14168, "func": "inner class?", "target": 0}
{"idx": 14169, "func": "not allowed for existing Java interface modules", "target": 0}
{"idx": 14170, "func": "empty implementation - we only handle mouseClicked", "target": 0}
{"idx": 14171, "func": "Cache for object-message, only used when parsing from a file because in text-area property replacement might have been used", "target": 0}
{"idx": 14172, "func": "execute the command", "target": 0}
{"idx": 14173, "func": "range to look for comments", "target": 0}
{"idx": 14174, "func": "line 970", "target": 0}
{"idx": 14175, "func": "fill hashmap with all available contacts and groups", "target": 0}
{"idx": 14176, "func": "now remove series 2 from collection 2", "target": 0}
{"idx": 14177, "func": "//{{{ addMode() method", "target": 0}
{"idx": 14178, "func": "sectionOutlinesVisible", "target": 0}
{"idx": 14179, "func": "we check to see if the proxy host and port are set", "target": 0}
{"idx": 14180, "func": "mutex that controls modifications of internal finalizers", "target": 0}
{"idx": 14181, "func": "we are going to scan everything anyway", "target": 0}
{"idx": 14182, "func": "Clean up the command if there is one. If we need it again in drop, we'll recreate it from dragAndDropCommandInformation. //", "target": 0}
{"idx": 14183, "func": "Does not appear to be used externally; called by #loadProjectFile()", "target": 0}
{"idx": 14184, "func": "todo : should this get moved to PersistentContext? logically, is PersistentContext the \"thing\" to which an interceptor gets attached?", "target": 1}
{"idx": 14185, "func": "If we're not storing subsequent samplers, we'll need the first sampler to do all the work...:", "target": 0}
{"idx": 14186, "func": "Add the type to the list of returned sqlResultTypes.", "target": 0}
{"idx": 14187, "func": "Compare against all earlier operations. If there's a match we've found the problem", "target": 0}
{"idx": 14188, "func": "//{{{ sendVFSUpdate() method", "target": 0}
{"idx": 14189, "func": "Found in java.home as given", "target": 0}
{"idx": 14190, "func": "check the new minimum date relative to the current maximum date", "target": 0}
{"idx": 14191, "func": "rest arg must be splatted", "target": 0}
{"idx": 14192, "func": "//{{{ firePreContentRemoved() method", "target": 0}
{"idx": 14193, "func": "user.home/.squirrel-sql/plugins", "target": 0}
{"idx": 14194, "func": "Creates a new OCL critic @param oclConstraint ocl expression @param headline headline @param description description @param moreInfoURL the info url @param knowledgeTypes the knowledge types @param supportedDecisions the decisions @param priority the priority @throws InvalidOclException if the ocl is not valid TODO: Do these need to be Lists or can they be simple Collections?", "target": 1}
{"idx": 14195, "func": "TODO: Do we want to <<friend>> stereotypes too? || Model.getExtensionMechanismsHelper().hasStereotype( permission, ModelManagementHelper.FRIEND_STEREOTYPE)", "target": 1}
{"idx": 14196, "func": "//{{{ getExtendedAttributes() method", "target": 0}
{"idx": 14197, "func": "Save the resources to the file system. //", "target": 0}
{"idx": 14198, "func": "Constructor for Serializable tests", "target": 0}
{"idx": 14199, "func": "Stop script kiddies from opening the edit server port and just leaving it open, as a DoS", "target": 0}
{"idx": 14200, "func": "//TestCase/getGenFeature.todo.override.javajetinc", "target": 0}
{"idx": 14201, "func": "type-mappings", "target": 0}
{"idx": 14202, "func": "calculate the bounds of the template value", "target": 0}
{"idx": 14203, "func": "directly execute search", "target": 0}
{"idx": 14204, "func": "//{{{ toggleMultipleSelectionEnabled() method", "target": 0}
{"idx": 14205, "func": "Don't clear the plan", "target": 0}
{"idx": 14206, "func": "specifies valid elements for a Region to contain", "target": 0}
{"idx": 14207, "func": "Write HTML header", "target": 0}
{"idx": 14208, "func": "And the end of the file multipart", "target": 0}
{"idx": 14209, "func": "starts at back, finishes at front (CLOCKWISE)", "target": 0}
{"idx": 14210, "func": "//different nullability rules for pk/fk", "target": 0}
{"idx": 14211, "func": "(non-Javadoc) @see org.columba.core.gui.frame.focus.FocusOwner#copy()", "target": 0}
{"idx": 14212, "func": "CASE 2 - object is mutable AND PublicCloneable", "target": 0}
{"idx": 14213, "func": "Only samplers have the thread context set up by JMeterThread at present, so suppress the warning for now", "target": 0}
{"idx": 14214, "func": "just the horizontal axis...", "target": 0}
{"idx": 14215, "func": "Don't hold a transactional lock for this", "target": 0}
{"idx": 14216, "func": "quadrant origin", "target": 0}
{"idx": 14217, "func": "Don't let a transient error kill the thread", "target": 0}
{"idx": 14218, "func": "Start the entity.", "target": 0}
{"idx": 14219, "func": "not allowed for original (non-generated) Java classes note: not allowing for any previously created class right now; this restriction might be loosened later for generated classes", "target": 0}
{"idx": 14220, "func": "')'", "target": 0}
{"idx": 14221, "func": "Make sure we exist", "target": 0}
{"idx": 14222, "func": "//i18n[FileEditorDropTargetListener.oneFileDropMessage=Only one file //may be dropped onto the editor at a time.]", "target": 0}
{"idx": 14223, "func": "//{{{ getStartOffset() method", "target": 0}
{"idx": 14224, "func": "DataBase-related functions", "target": 0}
{"idx": 14225, "func": "even though the axis is not visible, we need ticks for the gridlines...", "target": 0}
{"idx": 14226, "func": "Bsh scripted object", "target": 0}
{"idx": 14227, "func": "if v1 is defined and true, we are done!", "target": 0}
{"idx": 14228, "func": "Add all the child nodes of the node we are adding", "target": 0}
{"idx": 14229, "func": "Call the thread's code", "target": 0}
{"idx": 14230, "func": "message doesn't exist (this shouldn't happen here)", "target": 0}
{"idx": 14231, "func": "draw average - SPECIAL AIMS REQUIREMENT", "target": 0}
{"idx": 14232, "func": "private JPanel constraintsTab = new JPanel();", "target": 0}
{"idx": 14233, "func": "check that a legend item needs to be displayed...", "target": 0}
{"idx": 14234, "func": "fall back to system JCA providers", "target": 0}
{"idx": 14235, "func": "set display text", "target": 0}
{"idx": 14236, "func": "This class is not serialised The interpreter instance for this class", "target": 0}
{"idx": 14237, "func": "TODO: handle n-way Associations", "target": 1}
{"idx": 14238, "func": "At the moment, no default value", "target": 0}
{"idx": 14239, "func": "//{{{ BackspaceAction class", "target": 0}
{"idx": 14240, "func": "For a many-to-1, we use SetCommand.create() to create the command to remove the opposite reference; a RemoveCommand on its opposite will actually result. //", "target": 0}
{"idx": 14241, "func": "TODO: In MRI 1.9, an explicit check for negative length is added here. IndexError is raised when length is negative. See [ruby-core:12953] for more details. New note: This is actually under re-evaluation, see [ruby-core:17483].", "target": 1}
{"idx": 14242, "func": "We only handle the case where a region has been removed:", "target": 0}
{"idx": 14243, "func": "line 1190", "target": 0}
{"idx": 14244, "func": "Store the resource bundle as an attribute of the BeanDescriptor:", "target": 0}
{"idx": 14245, "func": "close composer", "target": 0}
{"idx": 14246, "func": "if a jar or file URL, return load service resource directly without further searching", "target": 0}
{"idx": 14247, "func": "For JRUBY-2759, when MET choose CET timezone to work around Joda", "target": 1}
{"idx": 14248, "func": "//return getDefaultValue(attribute.getEType());", "target": 0}
{"idx": 14249, "func": "Not true in general, but should be true for our test models", "target": 0}
{"idx": 14250, "func": "we guess an initial size for the array", "target": 0}
{"idx": 14251, "func": "try next segment", "target": 0}
{"idx": 14252, "func": "special handling for dates", "target": 0}
{"idx": 14253, "func": "TODO: Partly overlaps CrOppEndVsAttr.", "target": 0}
{"idx": 14254, "func": "the previous line helps, but we better check again:", "target": 0}
{"idx": 14255, "func": "No decimal digits strongly suggests an INTEGER of some type. Since it's not real easy to tell what kind of int (int2, int4, int8) just make it an int8 (i.e. BIGINT)", "target": 0}
{"idx": 14256, "func": "//ie no select clause in HQL", "target": 0}
{"idx": 14257, "func": "//load default headerfields, as defined in RFC822", "target": 0}
{"idx": 14258, "func": "//{{{ MemoryStatus constructor", "target": 0}
{"idx": 14259, "func": "//TODO: Comment by A. Rueckert <a_rueckert@gmx.net> : I think, the handle holding the collaboration implementation, should rather be a CollaborationUse in UML2. But as a workaround for now, I'll try to get a Collaboration representation (CollaborationUse) and then try to get the owning Classifier from there...", "target": 1}
{"idx": 14260, "func": "@see org.argouml.uml.ui.UMLUserInterfaceContainer#formatElement(java.lang.Object)", "target": 0}
{"idx": 14261, "func": "find any entities that are still transient after retry", "target": 0}
{"idx": 14262, "func": "//Close extra brackets we opened", "target": 0}
{"idx": 14263, "func": "it's OK to use an index equal to the size of the list", "target": 0}
{"idx": 14264, "func": "Save options selected for DataType-specific properties", "target": 0}
{"idx": 14265, "func": "// \"Permission\",", "target": 0}
{"idx": 14266, "func": "line 797", "target": 0}
{"idx": 14267, "func": "Note: In Ruby 1.9 all of this logic can go away since they will require explicit bindings for evals.", "target": 0}
{"idx": 14268, "func": "A Dom tree panel for to display response as tree view author <a href=\"mailto:d.maung@mdl.com\">Dave Maung</a> TODO implement to find any nodes in the tree using TreePath.", "target": 1}
{"idx": 14269, "func": "/////////////////////////////////////////////////////////////////////////Override the functions that need to be changed to tell the table mechanisms how to do editing. //////////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 14270, "func": "If the user selects an Action that is already selected in sticky mode (double clicked) then we turn off sticky mode and make sure no action is selected.", "target": 0}
{"idx": 14271, "func": "No flaten. We would turn statement parts to comment", "target": 0}
{"idx": 14272, "func": "Find target object or class identifier", "target": 0}
{"idx": 14273, "func": "Allow the user to set \"0\" for the fetch size to indicate that this should not be called. JDBC-ODBC bridge driver fails to execute SQL once you have set the fetch size to any value.", "target": 0}
{"idx": 14274, "func": "override action behaviour", "target": 0}
{"idx": 14275, "func": "appears that the next token is not used and it's zero.", "target": 0}
{"idx": 14276, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.mainpanel.IMainPanelTab#getHint()", "target": 0}
{"idx": 14277, "func": "another object with different values", "target": 0}
{"idx": 14278, "func": "displayStart > displayEnd, need to handle split", "target": 0}
{"idx": 14279, "func": "String srcFileDir=srcFile.getParent();", "target": 0}
{"idx": 14280, "func": "(NOT (GE a b) ) => (LT a b)", "target": 0}
{"idx": 14281, "func": "<!-- begin-user-doc --> The <b>Adapter Factory</b> for the model. It provides an adapter <code>createXXX</code> method for each class of the model. <!-- end-user-doc --> @see org.eclipse.emf.ecore.EcorePackage @generated", "target": 0}
{"idx": 14282, "func": "Gets the current threshold. TODO: Should this be protected? @return The current threshold.", "target": 1}
{"idx": 14283, "func": "if this is a feature get the owner of that feature TODO: Does anything actually make use of this? It can cause unexpected behaviour.", "target": 1}
{"idx": 14284, "func": "//{{{ Paint fold triangles", "target": 0}
{"idx": 14285, "func": "The Transition has a name text box. It contains: <ul> <li>The event-signature <li>The guard condition between [] <li>The action expression </ul><p> The content of the text box is generated by its own notationProvider. @see org.argouml.uml.diagram.ui.FigEdgeModelElement#getNotationProviderType()", "target": 0}
{"idx": 14286, "func": "//box.setBackground(new Color(248, 248, 248)); // JScrollPane pane = new JScrollPane(box); // pane.setBorder(null);", "target": 0}
{"idx": 14287, "func": "//{{{ collapseFold() method", "target": 0}
{"idx": 14288, "func": "Remove the document root's information from the top of the stacks. //", "target": 0}
{"idx": 14289, "func": "a > b", "target": 0}
{"idx": 14290, "func": "exception handling for monitor release", "target": 0}
{"idx": 14291, "func": "single-statement body, just compile it", "target": 0}
{"idx": 14292, "func": "I don't know if this should be run this deferred because we might have to give the editor a chance to process the viewer update events and hence to update the views first. //", "target": 1}
{"idx": 14293, "func": "Create an empty but initialized instance of a UML ElementResidence. @return an initialized UML ElementResidence instance. TODO: This needs an extra parameter to specify the model/extent where the new element should be created.", "target": 1}
{"idx": 14294, "func": "do not add a new line if there is one", "target": 0}
{"idx": 14295, "func": "What to match against. N.B. do not change the string value or test plans will break! $NON-NLS-1$", "target": 0}
{"idx": 14296, "func": "if this is the last token, check if the last element is the same than in the array", "target": 0}
{"idx": 14297, "func": "SS: now select/reorder columns", "target": 0}
{"idx": 14298, "func": "Send ItemEvent", "target": 0}
{"idx": 14299, "func": "TODO: what if batchUpdate is a callablestatement ? calls executeBatch()", "target": 1}
{"idx": 14300, "func": "some cols are not to be used", "target": 0}
{"idx": 14301, "func": "boolean isGenerateEditPlugin(); boolean isGenerateEditorPlugin();", "target": 0}
{"idx": 14302, "func": "The CipherOutputStream shoudln't close the underlying stream //", "target": 0}
{"idx": 14303, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider#setCopySourceSession(net.sourceforge.squirrel_sql.client.session.ISession)", "target": 0}
{"idx": 14304, "func": "Check that we have a content type", "target": 0}
{"idx": 14305, "func": "If we are substituting an EAttribute for an EReference... //", "target": 0}
{"idx": 14306, "func": "Check files see if same", "target": 0}
{"idx": 14307, "func": "OPTIONS MENU $NON-NLS-1$ $NON-NLS-1$", "target": 0}
{"idx": 14308, "func": "(is this really the character set?) e.g. ISO-8895-1, UTF-8", "target": 0}
{"idx": 14309, "func": "text = new Text(composite, SWT.SINGLE | SWT.BORDER); text.setLayoutData(new GridData(GridData.GRAB_HORIZONTAL | GridData.HORIZONTAL_ALIGN_FILL));", "target": 0}
{"idx": 14310, "func": "TODO: this should be more extensible... may be only \"findPanelFor(target)\" if there is a panel why not show it?", "target": 1}
{"idx": 14311, "func": "we insert new menus between the \"Edit\" and the \"Utilities, Help\" menu", "target": 0}
{"idx": 14312, "func": "No more we can do here on failure", "target": 0}
{"idx": 14313, "func": "HACK", "target": 1}
{"idx": 14314, "func": "FIXME: Obvious issue that not all platforms can display all attributes. Ugly hacks. Using generic posix library makes pushing inspect behavior into specific system impls rather painful.", "target": 1}
{"idx": 14315, "func": "This doesn't actually seem to work but it might work on some dbs. Also it doesn't work if there are multiple columns of results because it is not accounting for the suffix: return new String[] { getDiscriminatorColumnName() };", "target": 1}
{"idx": 14316, "func": "we put the targets 'backwards' in the history since the first target in the addedTargets array is the first one selected.", "target": 0}
{"idx": 14317, "func": "@see org.argouml.model.ConcurrencyKind#getConcurrent()", "target": 0}
{"idx": 14318, "func": "Reached end of input arguments - perform final processing", "target": 0}
{"idx": 14319, "func": "//order constants", "target": 0}
{"idx": 14320, "func": "Check for the occurrence indicator.", "target": 0}
{"idx": 14321, "func": "create a test view that we will get view def for then drop and re-create", "target": 0}
{"idx": 14322, "func": "Specific setup", "target": 0}
{"idx": 14323, "func": "check if a single entry is selected", "target": 0}
{"idx": 14324, "func": "this actually relies on the first manifest being found on the classpath (probably rt.jar's) being valid", "target": 0}
{"idx": 14325, "func": "If the Add menu already exists, remove it.", "target": 0}
{"idx": 14326, "func": "---- workPOBoxLabel ----", "target": 0}
{"idx": 14327, "func": "null not supported?", "target": 0}
{"idx": 14328, "func": "set features and properties", "target": 0}
{"idx": 14329, "func": "check that we did not just add a char to a <null>", "target": 0}
{"idx": 14330, "func": "populate deprecated fields", "target": 0}
{"idx": 14331, "func": "//i18n[DumpApplicationCommand.error.dumpingsystemprops=Error dumping metadata]", "target": 0}
{"idx": 14332, "func": "//{{{ doTypeSelect() method", "target": 0}
{"idx": 14333, "func": "Check for initial caret, negation", "target": 0}
{"idx": 14334, "func": "//{{{ saveGeometry() method", "target": 0}
{"idx": 14335, "func": "Create classes and their features", "target": 0}
{"idx": 14336, "func": "//The shared instance.", "target": 0}
{"idx": 14337, "func": "TODO: Move to GEF", "target": 1}
{"idx": 14338, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsSubqueriesInComparisons()", "target": 0}
{"idx": 14339, "func": "probably redundant - just in case", "target": 0}
{"idx": 14340, "func": "//Block b = (Block) blocks.get(i);", "target": 0}
{"idx": 14341, "func": "There's no reason they aren't equal, so they are. //", "target": 0}
{"idx": 14342, "func": "@see java.awt.dnd.DragSourceListener#dragEnter(java.awt.dnd.DragSourceDragEvent)", "target": 0}
{"idx": 14343, "func": "Store data into a byte[]", "target": 0}
{"idx": 14344, "func": "see note above re: return type", "target": 0}
{"idx": 14345, "func": "needle paint", "target": 0}
{"idx": 14346, "func": "//?? Is there any way to check for invalid input? Valid input includes //?? at least any printable character, but could it also include unprintable //?? characters?", "target": 1}
{"idx": 14347, "func": "We can callsite cache const_missing if we want", "target": 0}
{"idx": 14348, "func": "CREATE ENTITIES FIXME: these methods should be defined", "target": 1}
{"idx": 14349, "func": "// _table.requestFocus();", "target": 0}
{"idx": 14350, "func": "positiveItemLabelPositionFallback", "target": 0}
{"idx": 14351, "func": "QTRUE", "target": 0}
{"idx": 14352, "func": "set user-defined properties", "target": 0}
{"idx": 14353, "func": "And now aSize has the answer", "target": 0}
{"idx": 14354, "func": "Refresh the target for all our children which weren't getting while not visible", "target": 0}
{"idx": 14355, "func": "the number of nodes is defined by the length of r", "target": 0}
{"idx": 14356, "func": "//????? if desired, get fancy and use icons in buttons instead of text ?????????", "target": 1}
{"idx": 14357, "func": "//private CacheEntry cacheEntry;", "target": 0}
{"idx": 14358, "func": "rb_reg_initialize", "target": 0}
{"idx": 14359, "func": "line 1603", "target": 0}
{"idx": 14360, "func": "Get the fields we want", "target": 0}
{"idx": 14361, "func": "New Template Container Entryfield", "target": 0}
{"idx": 14362, "func": "//if no nested, natural order:", "target": 0}
{"idx": 14363, "func": "create dataset 2...", "target": 0}
{"idx": 14364, "func": "removed stereotype", "target": 0}
{"idx": 14365, "func": "// }", "target": 0}
{"idx": 14366, "func": "verbose", "target": 0}
{"idx": 14367, "func": "paramTypes", "target": 0}
{"idx": 14368, "func": "finally, lets execute the compiler!!", "target": 0}
{"idx": 14369, "func": "Extension Name must match", "target": 0}
{"idx": 14370, "func": "Include additional path separator (so that dirname of \"C:\\file.txt\" is \"C:\\\", not \"C:\")", "target": 0}
{"idx": 14371, "func": "Include each required plugin of the starting project and the exported ones of all the required projects. //", "target": 0}
{"idx": 14372, "func": "FIXME: If NativeException is expected to be used from Ruby code, it should provide a real allocator to be used. Otherwise Class.new will fail, as will marshalling. JRUBY-415", "target": 1}
{"idx": 14373, "func": "Fall Through", "target": 0}
{"idx": 14374, "func": "evaluate the static portion of the block in the static space", "target": 0}
{"idx": 14375, "func": "3 columns rows are added dynamically (no need to define them here)", "target": 0}
{"idx": 14376, "func": "relative path: merge with base and keep query (note: if the base has no path and this a non-empty relative path, there is an implied root in the resulting path)", "target": 0}
{"idx": 14377, "func": "we want at least some of the package body to be displayed", "target": 0}
{"idx": 14378, "func": "Check for file lists specifically", "target": 0}
{"idx": 14379, "func": "Append the stem to the proxool pool alias", "target": 0}
{"idx": 14380, "func": "register at shutdown manager -> this will save all configuration data, when closing Columba", "target": 0}
{"idx": 14381, "func": "find the java method", "target": 0}
{"idx": 14382, "func": "@mgs: using the method's return value was missing", "target": 0}
{"idx": 14383, "func": "end class ActionAutoCritique", "target": 0}
{"idx": 14384, "func": "Create empty properties", "target": 0}
{"idx": 14385, "func": "place in this column (truncated) anyway", "target": 0}
{"idx": 14386, "func": "//{{{ setReadOnly() method", "target": 0}
{"idx": 14387, "func": "the dialog is modal", "target": 0}
{"idx": 14388, "func": "Assuming the target is some model element.", "target": 0}
{"idx": 14389, "func": "enable lucene search index by default //$NON-NLS-1$ //$NON-NLS-2$", "target": 0}
{"idx": 14390, "func": "//mix element types", "target": 0}
{"idx": 14391, "func": "minus one more for IRubyObject[]", "target": 0}
{"idx": 14392, "func": "X? -> X|", "target": 0}
{"idx": 14393, "func": "intentional: if there is nonsense in the field, we return false", "target": 0}
{"idx": 14394, "func": "only true if the file size is known", "target": 0}
{"idx": 14395, "func": "Lock object must exist", "target": 0}
{"idx": 14396, "func": "Reset files", "target": 0}
{"idx": 14397, "func": "build \"quoted\" message", "target": 0}
{"idx": 14398, "func": "we have to check and make sure the constructor is accessible. if we didn't it would throw an exception and cause a NPE.", "target": 0}
{"idx": 14399, "func": "//{{{ fireCaretEvent() method", "target": 0}
{"idx": 14400, "func": "super(node, folderItem);", "target": 0}
{"idx": 14401, "func": "do we need to", "target": 0}
{"idx": 14402, "func": "(non-Javadoc) @see org.columba.chat.jabber.IBuddyStatus#setPresenceMode(org.jivesoftware.smack.packet.Presence.Mode)", "target": 0}
{"idx": 14403, "func": "value was not provided, and this is allowed", "target": 0}
{"idx": 14404, "func": "ensure contents is layed out properly", "target": 0}
{"idx": 14405, "func": "listeners = controller.getListeners();", "target": 0}
{"idx": 14406, "func": "initialize the ToDoList", "target": 0}
{"idx": 14407, "func": "Parser and handler used to process both EJB descriptor files", "target": 0}
{"idx": 14408, "func": "validate our setup", "target": 0}
{"idx": 14409, "func": "mandatory String-based attribute", "target": 0}
{"idx": 14410, "func": "this class is not very fast...", "target": 1}
{"idx": 14411, "func": "@see org.argouml.ui.explorer.PerspectiveManagerListener#removePerspective(java.lang.Object)", "target": 0}
{"idx": 14412, "func": "intentionally empty", "target": 0}
{"idx": 14413, "func": "data converted ok, so update the table", "target": 0}
{"idx": 14414, "func": "//i18n[LockDetailsTab.title=Locks]", "target": 0}
{"idx": 14415, "func": "Paint over the selected padding spaces with the background colour. On GTK, the whole item, not just the text, is selected, so we don't do this. //", "target": 0}
{"idx": 14416, "func": "calculate scaling and return it", "target": 0}
{"idx": 14417, "func": "System.setProperty(\"javax.net.debug\", \"ssl,handshake,data,trustmanager\"); init java.net.ssl debugging", "target": 0}
{"idx": 14418, "func": "has been seen in a redirect use header (if possible) if no message found", "target": 0}
{"idx": 14419, "func": "expected", "target": 0}
{"idx": 14420, "func": "Remove the dependent modelelements, such as the statemachine for a statechartdiagram:", "target": 0}
{"idx": 14421, "func": "no java task running -> start background tasks", "target": 0}
{"idx": 14422, "func": "$NON-NLS1$ $NON-NLS1$", "target": 0}
{"idx": 14423, "func": "script object", "target": 0}
{"idx": 14424, "func": "//{{{ loadClass() method", "target": 0}
{"idx": 14425, "func": "Add end", "target": 0}
{"idx": 14426, "func": "initialize B", "target": 0}
{"idx": 14427, "func": "field is not nullable //", "target": 0}
{"idx": 14428, "func": "register for internal transitions:", "target": 0}
{"idx": 14429, "func": "//at this point there is one trailing space to remove, if the list is not empty.", "target": 0}
{"idx": 14430, "func": "label for type combo - used to enable/disable text associated with the combo i18n[dataTypeBlob.read=Read]", "target": 0}
{"idx": 14431, "func": "$NON-NLS-1$ default: bottom //$NON-NLS-1$", "target": 0}
{"idx": 14432, "func": "i18n[TableExportCSVDlg.exportTitleNew=CSV / MS Excel export]", "target": 0}
{"idx": 14433, "func": "the scroll pane that holds the text area", "target": 0}
{"idx": 14434, "func": "Response headers column renderers", "target": 0}
{"idx": 14435, "func": "update the cached range values...", "target": 0}
{"idx": 14436, "func": "handle rendering separately for the two plot orientations...", "target": 0}
{"idx": 14437, "func": "FocusManager.getInstance().setDeleteAction(this);", "target": 0}
{"idx": 14438, "func": "Incomplete and error token-ids", "target": 0}
{"idx": 14439, "func": "check intermediate post-condition.", "target": 0}
{"idx": 14440, "func": "@see java.util.Collection#isEmpty()", "target": 0}
{"idx": 14441, "func": "Fill 2 of value (byte) 33", "target": 0}
{"idx": 14442, "func": "This populates the stereotypes area:", "target": 0}
{"idx": 14443, "func": "//by requiring <, we rely on lock timeout in the case of an unsuccessful update!", "target": 0}
{"idx": 14444, "func": "Ignore it if it isn't a class. Not being a class is diagnosed for the generic type itself. //", "target": 0}
{"idx": 14445, "func": "This production is to determine lookahead only.", "target": 0}
{"idx": 14446, "func": "needed to resize completion panle appropriately see initializationof _curCompletionPanelSize", "target": 0}
{"idx": 14447, "func": "TODO should level be more than debug ?", "target": 1}
{"idx": 14448, "func": "FIXME: add setSeriesItemLabelPaint(int, Paint, boolean) ?", "target": 0}
{"idx": 14449, "func": "need to delete the main class", "target": 0}
{"idx": 14450, "func": "DataType 4.5.3.12 [1]", "target": 0}
{"idx": 14451, "func": "//{{{ Move the caret down a line", "target": 0}
{"idx": 14452, "func": "//{{{ getFontMetrics() method", "target": 0}
{"idx": 14453, "func": "...", "target": 0}
{"idx": 14454, "func": "AbstractSelectingDelegate impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 14455, "func": "@see org.argouml.uml.diagram.state.ui.FigHistoryState#getH()", "target": 0}
{"idx": 14456, "func": "//{{{ BufferUpdate constructor", "target": 0}
{"idx": 14457, "func": "pick up the last round of dependencies that were determined", "target": 0}
{"idx": 14458, "func": "If none of the arguments have a name specified, we just send all the values as the put body", "target": 0}
{"idx": 14459, "func": "get first one", "target": 0}
{"idx": 14460, "func": "Check that this segment is not greater than 255.", "target": 0}
{"idx": 14461, "func": "//Log.log(Log.DEBUG,Registers.class,fnf);", "target": 0}
{"idx": 14462, "func": "Determine the number of lines to draw in the foreground.", "target": 0}
{"idx": 14463, "func": "Reload the project", "target": 0}
{"idx": 14464, "func": "//String[] keyCols = collPersister.getKeyColumnNames();", "target": 0}
{"idx": 14465, "func": "//{{{ ResizeMouseHandler class", "target": 0}
{"idx": 14466, "func": "i18n[exportconfig.errorWritingPrefs=Error occured writing to preferences file: {0}]", "target": 0}
{"idx": 14467, "func": "for next time", "target": 0}
{"idx": 14468, "func": "if we're not attempting to invoke method_missing and method is not visible, branch to method_missing", "target": 0}
{"idx": 14469, "func": "i starts at 1", "target": 0}
{"idx": 14470, "func": "Build the full file names", "target": 0}
{"idx": 14471, "func": "//{{{ loadMenu() method", "target": 0}
{"idx": 14472, "func": "Color selectedTitlePaint = new Color(200, 100, 100);", "target": 0}
{"idx": 14473, "func": "Header", "target": 0}
{"idx": 14474, "func": "return original string if no replacements made", "target": 0}
{"idx": 14475, "func": "and add it to the buddylist", "target": 0}
{"idx": 14476, "func": "//reopen", "target": 0}
{"idx": 14477, "func": "(non-Javadoc) @see org.columba.api.command.ICommand#execute(org.columba.api.command.IWorkerStatusController)", "target": 0}
{"idx": 14478, "func": "int", "target": 0}
{"idx": 14479, "func": "FIXME: I don't like the null checks here", "target": 1}
{"idx": 14480, "func": "unsafe caching of type here", "target": 0}
{"idx": 14481, "func": "i18n[UpdatePreferencesPanel.enableAutoUpdate=Enable Automatic Updates]", "target": 0}
{"idx": 14482, "func": "invokespecial BulkAccessorException.<init>", "target": 0}
{"idx": 14483, "func": "If this is an implied join in a from element, then use the impled join type which is part of the tree parser's state (set by the gramamar actions).", "target": 0}
{"idx": 14484, "func": "this might be a bit slow if __char__ occurs a lot", "target": 0}
{"idx": 14485, "func": "We don't need to issue a additional NOOP here since the ensureLogin() call above ensures also the correct Status in a MIN_IDLE interval timeframe.", "target": 0}
{"idx": 14486, "func": "FIXME moved this here to get what's obviously a utility method out of IRubyObject. perhaps security methods should find their own centralized home at some point.", "target": 1}
{"idx": 14487, "func": "MenuBar related methods TODO: Do we really need to have all these menubar methods duplicated here? Perhaps we can make the menu bar accessible through GuiPackage?", "target": 1}
{"idx": 14488, "func": "i18n[dataTypeDate.typeDate=Date (SQL type 91)]", "target": 0}
{"idx": 14489, "func": "//{{{ paintSelection() method", "target": 0}
{"idx": 14490, "func": "//EStringToStringMapEntryImpl", "target": 0}
{"idx": 14491, "func": "Implementation notes: All of the methods in this class are currently read-only. If update methods are included in the future, they should be defined so that a single instance of JavaSamplerContext can be associated with each thread. Therefore, no synchronization should be needed. The same instance should be used for the call to setupTest, all calls to runTest, and the call to teardownTest.", "target": 0}
{"idx": 14492, "func": "ignore self", "target": 0}
{"idx": 14493, "func": "search the src folder with the src uid array", "target": 0}
{"idx": 14494, "func": "SSS FIXME: Should this be Operand or CompoundString? Can it happen that symbols are built out of other than compound strings? Or can it happen during optimizations that this becomes a generic operand?", "target": 1}
{"idx": 14495, "func": "eReference.setNavigable(roseNode.isNavigable());", "target": 0}
{"idx": 14496, "func": "JComponent.setBorder(Border) is overridden here to cache the left inset of the border (if any) to avoid having to fetch it during every repaint.", "target": 0}
{"idx": 14497, "func": "TODO: Check if this is ok (this is literally adapted from NSUML)", "target": 1}
{"idx": 14498, "func": "end class AboutBox", "target": 0}
{"idx": 14499, "func": "determine spacing", "target": 0}
{"idx": 14500, "func": "//{{{ readUnlock() method", "target": 0}
{"idx": 14501, "func": "computes relative auto-scaled plots to fit in the specified area", "target": 0}
{"idx": 14502, "func": "line 1008", "target": 0}
{"idx": 14503, "func": "one word type name that starts lower-case...it may be a primitive type", "target": 0}
{"idx": 14504, "func": "TODO: not in UML 2", "target": 1}
{"idx": 14505, "func": "Extract titles from functions.xml", "target": 0}
{"idx": 14506, "func": "(non-Javadoc) @see javax.swing.table.TableModel#getRowCount()", "target": 0}
{"idx": 14507, "func": "no check for ''", "target": 0}
{"idx": 14508, "func": "MUST NOT be used across threads", "target": 0}
{"idx": 14509, "func": "there's just one ProfileConfiguration in a project and there's no other way to add another one", "target": 0}
{"idx": 14510, "func": "count >= limit", "target": 0}
{"idx": 14511, "func": "TODO: this code should really check if a Ruby equals method is implemented or not.", "target": 1}
{"idx": 14512, "func": "MS-DOS directory flag", "target": 0}
{"idx": 14513, "func": "The following used to be jacks_password, but the Arguments class uses HashMap for which the order is not defined.", "target": 0}
{"idx": 14514, "func": "binary association", "target": 0}
{"idx": 14515, "func": "Setup preferences to make jGoodies LAF look better. // UIManager.put(Options.USE_SYSTEM_FONTS_APP_KEY, Boolean.TRUE); // UIManager.put(Options.USE_NARROW_BUTTONS_KEY, Boolean.TRUE);", "target": 0}
{"idx": 14516, "func": "First we need to suspend any current JTA transaction and obtain a JDBC connection", "target": 0}
{"idx": 14517, "func": "errors only", "target": 0}
{"idx": 14518, "func": "null list throws IllegalArgumentException", "target": 0}
{"idx": 14519, "func": "set up for integers", "target": 0}
{"idx": 14520, "func": "The Machine State has been deleted from model", "target": 0}
{"idx": 14521, "func": "//must have same validity; then if they are valid they must also be the same:", "target": 0}
{"idx": 14522, "func": "We only define one special dynamic scope per 'logical' binding. So all bindings for the same scope should share the same dynamic scope. This allows multiple evals with different different bindings in the same scope to see the same stuff.", "target": 0}
{"idx": 14523, "func": "//TreeFactoryImpl", "target": 0}
{"idx": 14524, "func": "(non-Javadoc) @see org.columba.mail.message.HeaderInterface#set(java.lang.String, java.lang.Object)", "target": 0}
{"idx": 14525, "func": "encryptMenuItem.setSelected(model.isEncryptMessage()); signMenuItem.setSelected(model.isSignMessage());", "target": 0}
{"idx": 14526, "func": "Test for toURL when the file is a directory.", "target": 0}
{"idx": 14527, "func": "Use a stream so that you can close it yourself quickly and avoid keeping the handle until the object is garbaged. (always keep control), otherwise you won't be able to delete the file quickly on windows.", "target": 0}
{"idx": 14528, "func": "else keep authority, device, path, and query", "target": 0}
{"idx": 14529, "func": "for inner classes", "target": 0}
{"idx": 14530, "func": "ldc field name", "target": 0}
{"idx": 14531, "func": "Try adding the extension from the chosen filter.", "target": 0}
{"idx": 14532, "func": "Private constructor - stops checkstyle from complaining.", "target": 0}
{"idx": 14533, "func": "@bgen(jjtree) MethodDeclaration", "target": 0}
{"idx": 14534, "func": "might happen with a managed connection", "target": 0}
{"idx": 14535, "func": "add all prefixes", "target": 0}
{"idx": 14536, "func": "For operator-assign operations save the lhs value before evaluating the rhs. This is correct Java behavior for postfix operations e.g. i=1; i+=i++; should be 2 not 3", "target": 0}
{"idx": 14537, "func": "add all existing tags to the menu", "target": 0}
{"idx": 14538, "func": "now add a second value to the series...", "target": 0}
{"idx": 14539, "func": "Of course this isn't particularly useful.", "target": 0}
{"idx": 14540, "func": "i18n[SchemaPropertiesController.title=Schemas]", "target": 0}
{"idx": 14541, "func": "Convert each byte and put into string buffer", "target": 0}
{"idx": 14542, "func": "TODO: This should become private and only called from constructor @see org.argouml.uml.diagram.ui.FigCompartment#populate()", "target": 1}
{"idx": 14543, "func": "Allow test code to change the default useNanoTime and nanoThreadSleep settings", "target": 0}
{"idx": 14544, "func": "modules are included with a shim class; we must find that shim to handle super() appropriately", "target": 1}
{"idx": 14545, "func": "//means no restriction", "target": 0}
{"idx": 14546, "func": "inside a loop, jump to conditional", "target": 0}
{"idx": 14547, "func": "We've finished with the request, so we can add the LocalAddress to it for display", "target": 0}
{"idx": 14548, "func": "Force the LAF to be set even if Skin is the current one. This allows a change in theme to take affect.", "target": 0}
{"idx": 14549, "func": "A window that shows the progress bar and a cancel button. As a convenience to callers which may be executing on a thread other than the Swing event thread, all methods use SwingUtilities.invokeLater() or SwingUtilities.invokeAndWait() to make sure that Swing calls happen on the appropriate thread. <p> TODO: React on the close button as if the Cancel button was pressed.", "target": 1}
{"idx": 14550, "func": "set initializer", "target": 0}
{"idx": 14551, "func": "//private static final String PERF_KEY_HQL_TAB_DIVIDER_LOCATION = \"Squirrel.hibernateplugin.hqlTabDivLoc\";", "target": 0}
{"idx": 14552, "func": "Delete Extends which have this as their only ExtensionPoint", "target": 0}
{"idx": 14553, "func": "todo : modify the class definition if not already transformed...", "target": 1}
{"idx": 14554, "func": "Can't have both a classifier and a type parameter. //", "target": 0}
{"idx": 14555, "func": "//{{{ startRequest() method", "target": 0}
{"idx": 14556, "func": "Is it an inner class?", "target": 0}
{"idx": 14557, "func": "i18n[SchemaInfoCacheSerializer.beginStore=Starting to write schema cache for Alias {0}. file: {1}]", "target": 0}
{"idx": 14558, "func": "Delete any properties whose name converts to the empty string", "target": 0}
{"idx": 14559, "func": "Method created to increase the performance of regular expressions by reducing the length of the string that is matched. //", "target": 0}
{"idx": 14560, "func": "add temp entry so that the next step is circular-reference safe - only needed because some types don't take proper advantage of two-phase-load (esp. components)", "target": 0}
{"idx": 14561, "func": "TODO: Move magic number 10 to descriptive constant", "target": 1}
{"idx": 14562, "func": "Using javax.activation.DataSource paradigm", "target": 0}
{"idx": 14563, "func": "label location...", "target": 0}
{"idx": 14564, "func": "visitInsn - - - - - - - - - - - - - - - visitIntInsn - visitLdcInsn //int LDC_W = 19; - //int LDC2_W = 20; - visitVarInsn - - - - //int ILOAD_0 = 26; - //int ILOAD_1 = 27; - //int ILOAD_2 = 28; - //int ILOAD_3 = 29; - //int LLOAD_0 = 30; - //int LLOAD_1 = 31; - //int LLOAD_2 = 32; - //int LLOAD_3 = 33; - //int FLOAD_0 = 34; - //int FLOAD_1 = 35; - //int FLOAD_2 = 36; - //int FLOAD_3 = 37; - //int DLOAD_0 = 38; - //int DLOAD_1 = 39; - //int DLOAD_2 = 40; - //int DLOAD_3 = 41; - //int ALOAD_0 = 42; - //int ALOAD_1 = 43; - //int ALOAD_2 = 44; - //int ALOAD_3 = 45; - visitInsn - - - - - - - visitVarInsn - - - - //int ISTORE_0 = 59; - //int ISTORE_1 = 60; - //int ISTORE_2 = 61; - //int ISTORE_3 = 62; - //int LSTORE_0 = 63; - //int LSTORE_1 = 64; - //int LSTORE_2 = 65; - //int LSTORE_3 = 66; - //int FSTORE_0 = 67; - //int FSTORE_1 = 68; - //int FSTORE_2 = 69; - //int FSTORE_3 = 70; - //int DSTORE_0 = 71; - //int DSTORE_1 = 72; - //int DSTORE_2 = 73; - //int DSTORE_3 = 74; - //int ASTORE_0 = 75; - //int ASTORE_1 = 76; - //int ASTORE_2 = 77; - //int ASTORE_3 = 78; - visitInsn - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - visitIincInsn visitInsn - - - - - - - - - - - - - - - - - - - visitJumpInsn - - - - - - - - - - - - - - - visitVarInsn visiTableSwitchInsn visitLookupSwitch visitInsn - - - - - visitFieldInsn - - - visitMethodInsn - - - //int UNUSED = 186; NOT VISITED visitTypeInsn visitIntInsn visitTypeInsn visitInsn - visitTypeInsn - visitInsn - //int WIDE = 196; NOT VISITED visitMultiANewArrayInsn visitJumpInsn - //int GOTO_W = 200; - //int JSR_W = 201; -", "target": 0}
{"idx": 14565, "func": "domainAxis - no longer a separate field but test anyway...", "target": 0}
{"idx": 14566, "func": "5. Is it the same as the local copy, which was placed either by the installer or the last update?", "target": 0}
{"idx": 14567, "func": "collapse all nodes, as suggested on user mailing list...", "target": 0}
{"idx": 14568, "func": "Last Value", "target": 0}
{"idx": 14569, "func": "first time through this method in program, so go cleanup old log files", "target": 0}
{"idx": 14570, "func": "------ all rules ----------", "target": 0}
{"idx": 14571, "func": "init profiles defined in jar files", "target": 0}
{"idx": 14572, "func": "line 1918", "target": 0}
{"idx": 14573, "func": "First, collect all of the select expressions. NOTE: This must be done before invoking setScalarColumnText() because setScalarColumnText() changes the AST!!!", "target": 0}
{"idx": 14574, "func": "OnlyOnce samples", "target": 0}
{"idx": 14575, "func": "Process escaped characters Store the \\", "target": 0}
{"idx": 14576, "func": "We don't want to use CacheManager clone but the parent one, and CacheManager is Thread Safe", "target": 0}
{"idx": 14577, "func": "Subtracting 100 000 milliseconds from the orgTime of File f1", "target": 0}
{"idx": 14578, "func": "//{{{ Animator class", "target": 0}
{"idx": 14579, "func": "Set up the 3rd table", "target": 0}
{"idx": 14580, "func": "find path endIndex", "target": 0}
{"idx": 14581, "func": "search for mnemonic", "target": 0}
{"idx": 14582, "func": "this does the \"trick\" to eliminate blank space at the end", "target": 0}
{"idx": 14583, "func": "//app.setServicesProvider(delegate);", "target": 0}
{"idx": 14584, "func": "subLabelPaint", "target": 0}
{"idx": 14585, "func": "Add a class with no package 'Class'", "target": 0}
{"idx": 14586, "func": "i18n[ProgressBarDialog.cancelButtonLabel=Cancel]", "target": 0}
{"idx": 14587, "func": "number of milliseconds in a day", "target": 0}
{"idx": 14588, "func": "also register interest in tree seleciton events for updating the title", "target": 0}
{"idx": 14589, "func": "//{{{ invokeAction() method", "target": 0}
{"idx": 14590, "func": "re-register", "target": 0}
{"idx": 14591, "func": "Make sure our popups work. //", "target": 0}
{"idx": 14592, "func": "Checks for LAST or LASTsuffix. Returns the LAST name with .JMX replaced by suffix.", "target": 0}
{"idx": 14593, "func": "up to last ''", "target": 0}
{"idx": 14594, "func": "buffers retain a reference to the fold handler in question... and the easiest way to handle fold handler loading is this...", "target": 0}
{"idx": 14595, "func": "fill in all vars with nil so compiler is happy about future accesses", "target": 0}
{"idx": 14596, "func": "i18n[HibernateSQLPanel.Execute=Execute SQL]", "target": 0}
{"idx": 14597, "func": "codes 521, 550 and 553 can be produced by FTP Servers to indicate that an attempt to create a directory has failed because the directory already exists.", "target": 0}
{"idx": 14598, "func": "Create an adapter factory that yields item providers. //", "target": 0}
{"idx": 14599, "func": "@see org.argouml.uml.ui.UMLUserInterfaceContainer#formatCollection(java.util.Iterator)", "target": 0}
{"idx": 14600, "func": "Some arbitrary bounds and settings - unused in test", "target": 0}
{"idx": 14601, "func": "Thread.dumpStack();", "target": 0}
{"idx": 14602, "func": "(non-Javadoc) @see org.columba.core.profiles.IProfileManager#getProfiles()", "target": 0}
{"idx": 14603, "func": "ensure consistent history; eg we don't want both foo/ and foo", "target": 0}
{"idx": 14604, "func": "The property is an id's thing -- either a property or a path. We need to make sure that the object was created with the given id. We don't have an adequate way of testing the actual value of the Path object, though...", "target": 1}
{"idx": 14605, "func": "remove contacts/group cards from folder", "target": 0}
{"idx": 14606, "func": "//Object createStereotype();", "target": 0}
{"idx": 14607, "func": "ignore this if the class being used as a task does not have a set location method.", "target": 0}
{"idx": 14608, "func": "//Use the session key you got from the openSession call here", "target": 0}
{"idx": 14609, "func": "Transitions can have multiple Triggers now", "target": 0}
{"idx": 14610, "func": "-f", "target": 0}
{"idx": 14611, "func": "Mode to create a link between two FigClassifierRoles. TODO: Provide a ModeFactory and then this class can become package scope. @author penyaskito", "target": 1}
{"idx": 14612, "func": "//setBlinkPorts(false); //make port invisble unless mouse enters", "target": 0}
{"idx": 14613, "func": "reference type", "target": 0}
{"idx": 14614, "func": "adjust the drawing area for the plot insets (if any)...", "target": 0}
{"idx": 14615, "func": "Create a resource for this file. //", "target": 0}
{"idx": 14616, "func": "(non-Javadoc) @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)", "target": 0}
{"idx": 14617, "func": "In the rather unlikely case that we have no name, we give up.", "target": 0}
{"idx": 14618, "func": "If we displayed the project, view, item type, or folder, then show the list of relevant item properties.", "target": 0}
{"idx": 14619, "func": "persist() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 14620, "func": "Result column renderers", "target": 0}
{"idx": 14621, "func": "Check that that there are no more than three digits in this segment.", "target": 0}
{"idx": 14622, "func": "N.B. Requires ApacheJMeter_functions.jar to be on the classpath, otherwise the function cannot be resolved.", "target": 0}
{"idx": 14623, "func": "The default is false, so we can remove the property to simplify JMX files This also allows HTTPDefaults to work for this checkbox", "target": 0}
{"idx": 14624, "func": "Owner related todo items:", "target": 0}
{"idx": 14625, "func": "//{{{ getFoldHandlers() method", "target": 0}
{"idx": 14626, "func": "Helper Code", "target": 0}
{"idx": 14627, "func": "if the string contains atleast one double quote and checkMethod is true, go ahead and tokenize the string.", "target": 0}
{"idx": 14628, "func": "permissible values for compression attribute", "target": 0}
{"idx": 14629, "func": "//opening paren in new Foo ( ... )", "target": 0}
{"idx": 14630, "func": "Fill 8 of value (byte) 33 Fill 2 of value (byte) -19 Fill 4 of value (byte) 33 Fill 10 of value (byte) -87 Fill 145 of value (byte) 33 Fill 46 of value (byte) -19", "target": 0}
{"idx": 14631, "func": "line 1794", "target": 0}
{"idx": 14632, "func": "line 1776", "target": 0}
{"idx": 14633, "func": "populate commandline with NG-provided stuff", "target": 0}
{"idx": 14634, "func": "todo : for 4.0 // private static final Logger log = LoggerFactory.getLogger( SQLStatementLogger.class ); this is the legacy logging 'category'...", "target": 0}
{"idx": 14635, "func": "N.B. Backslashes are removed before dollar, comma and backslash", "target": 0}
{"idx": 14636, "func": "Has child, but child is empty", "target": 0}
{"idx": 14637, "func": "Label count Mean Min Max Std Dev. Error %age Throughput kB/sec avg. pageSize", "target": 0}
{"idx": 14638, "func": "don't add the timer", "target": 0}
{"idx": 14639, "func": "TODO should this be deprecated ? (to be efficient, internals should deal with RubyHash directly)", "target": 1}
{"idx": 14640, "func": "line feed", "target": 0}
{"idx": 14641, "func": "//i18n[ScriptWriter.error.nouserhome=The System property <user.home> is null. Cannot determine where to write DBCopy SQL scripts. Disabling writing SQL scripts for DBCopy operations.]", "target": 0}
{"idx": 14642, "func": "check null key", "target": 0}
{"idx": 14643, "func": "list of attachments", "target": 0}
{"idx": 14644, "func": "line separators in values and tokens are \"\\n\" in order to compare with the file contents, replace them as needed", "target": 0}
{"idx": 14645, "func": "@see org.argouml.model.ModelImplementation#getModelManagementFactory()", "target": 0}
{"idx": 14646, "func": "in method body with no containing loop, issue jump error load runtime and value, issue jump error", "target": 0}
{"idx": 14647, "func": "Captured dynamic scopes", "target": 0}
{"idx": 14648, "func": "Fill 3 of value (byte) 33 Fill 2 of value (byte) -19 Fill 3 of value (byte) 33 Fill 2 of value (byte) -19", "target": 0}
{"idx": 14649, "func": "The testStarted/testEnded methods are called at the start and end of a test. However, when a test is run on multiple nodes, there is no guarantee that all the testStarted() methods will be called before all the threadStart() or sampleOccurred() methods for other threads - nor that testEnded() will only be called after all sampleOccurred() calls. The ordering is only guaranteed within a single test.", "target": 0}
{"idx": 14650, "func": "if the relative path is empty or ends in an empty segment, a parent reference, or a self reference, add a trailing separator to a non-empty path", "target": 0}
{"idx": 14651, "func": "create profile", "target": 0}
{"idx": 14652, "func": "[7] Nmtoken ::= (NameChar)+", "target": 0}
{"idx": 14653, "func": "WHITESPACE OPERATOR \\s if RE_CHAR_CLASS_ESCAPES is set", "target": 0}
{"idx": 14654, "func": "The content sent", "target": 0}
{"idx": 14655, "func": "get headerfields", "target": 0}
{"idx": 14656, "func": "create default element if not available", "target": 0}
{"idx": 14657, "func": "MySQL disallows quoted constraint names", "target": 0}
{"idx": 14658, "func": "//{{{ getDefaultGroup() method", "target": 0}
{"idx": 14659, "func": "DO NOTHING", "target": 0}
{"idx": 14660, "func": "File content is sent as binary, so the content encoding should not change the file data", "target": 0}
{"idx": 14661, "func": "There is a constructor.", "target": 0}
{"idx": 14662, "func": "Store MD5 hash instead of storing response $NON-NLS-1$", "target": 0}
{"idx": 14663, "func": "Return the metatype proxy", "target": 0}
{"idx": 14664, "func": "------- Abstract methods without a default implementation -------", "target": 0}
{"idx": 14665, "func": "TODO: Performance critical method", "target": 1}
{"idx": 14666, "func": "a dataset with a single value", "target": 0}
{"idx": 14667, "func": "Is it the start of a source URI of an annotation? //", "target": 0}
{"idx": 14668, "func": "//i18n[InformixExceptionFormatter.notAvailableMsg=Not Available]", "target": 0}
{"idx": 14669, "func": "Clear the source data. We won't need this again, since, if it was available, it's already in the command. //", "target": 0}
{"idx": 14670, "func": "@see org.argouml.persistence.XMLTokenTableBase#setupTokens()", "target": 0}
{"idx": 14671, "func": "end class ClassGenerationDialog", "target": 0}
{"idx": 14672, "func": "TBLRC 10010 - right and top only", "target": 0}
{"idx": 14673, "func": "i18n[HibernateConfigPanel.toObtainSessionFactJPA=Call \"javax.persistence.Persistence.createEntityManagerFactory(\"<persitence-unit name>\");\"]", "target": 0}
{"idx": 14674, "func": "calculate the average time / item", "target": 0}
{"idx": 14675, "func": "Build closure body and return the result of the closure", "target": 0}
{"idx": 14676, "func": "If style dir is not specified we have to retrieve the stylesheet from the classloader", "target": 0}
{"idx": 14677, "func": "i18n[graph.selGraph=Select graph]", "target": 0}
{"idx": 14678, "func": "//{{{ RegistersHandler class", "target": 0}
{"idx": 14679, "func": "dial outline paint", "target": 0}
{"idx": 14680, "func": "//optimization", "target": 0}
{"idx": 14681, "func": "Avoid NPE in resetPage()", "target": 0}
{"idx": 14682, "func": "i18n[sqlval.dbmsName=DBMS Name:]", "target": 0}
{"idx": 14683, "func": "@see org.argouml.notation.providers.NotationProvider#updateListener(java.beans.PropertyChangeListener, java.lang.Object, java.beans.PropertyChangeEvent)", "target": 0}
{"idx": 14684, "func": "draw the background if there is one...", "target": 0}
{"idx": 14685, "func": "End is a shared aggregation of start", "target": 0}
{"idx": 14686, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getColumnInfo(java.lang.String, java.lang.String, java.lang.String)", "target": 0}
{"idx": 14687, "func": "private static final int ATTR_NORMAL = 0; private static final int ATTR_BRIGHT = 1;", "target": 0}
{"idx": 14688, "func": "Should we run this pass on the current scope before running it on nested scopes?", "target": 0}
{"idx": 14689, "func": "lenient checkbox", "target": 0}
{"idx": 14690, "func": "the method called to set the attribute", "target": 0}
{"idx": 14691, "func": "//{{{ goToStartOfLine() method", "target": 0}
{"idx": 14692, "func": "//A hack to make user-defined variables in the testplan element more dynamic", "target": 1}
{"idx": 14693, "func": "Check for bsf first then javax This version does not check if the scriptManager supports the language.", "target": 0}
{"idx": 14694, "func": "Supply the user name. If you use anonymous you will be logged in and the pw will be ignored", "target": 0}
{"idx": 14695, "func": "don't need to check laziness (dirty checking algorithm handles that)", "target": 0}
{"idx": 14696, "func": "create reference", "target": 0}
{"idx": 14697, "func": "i18n[MappedObjectPanel.QualifiedNames=Show qualified names]", "target": 0}
{"idx": 14698, "func": "West Asian # 30", "target": 0}
{"idx": 14699, "func": "we don't know anything about the ordering of the x-values, but we can still skip any initial values that fall outside the range...", "target": 0}
{"idx": 14700, "func": "Require in all libraries specified on command line", "target": 0}
{"idx": 14701, "func": "TODO: Use it notify Set to true to forward events to model. Only one of Language and Body fields should have this set to true.", "target": 1}
{"idx": 14702, "func": "mark message", "target": 0}
{"idx": 14703, "func": "bottom.setBorder(new SingleSideEtchedBorder(SwingConstants.TOP)); bottom.setLayout( new BoxLayout( bottom, BoxLayout.X_AXIS ) ); bottom.add( Box.createHorizontalStrut());", "target": 0}
{"idx": 14704, "func": "Allow headless testing", "target": 0}
{"idx": 14705, "func": "There is no match if the types are different and they don't each specify the same non-null instance class name. //", "target": 0}
{"idx": 14706, "func": "variables maintained by server code @GuardedBy(\"sampleStore\") maintain separate count of samples for speed", "target": 0}
{"idx": 14707, "func": "Action to be taken when a Sampler error occurs", "target": 0}
{"idx": 14708, "func": "//System.err.println(\"foldLevelChanged \" + (start-1) + \" to \" + textArea.getLastPhysicalLine() + \",\" + end);", "target": 0}
{"idx": 14709, "func": "String construction routines by NOT byte[] buffer and NOT making the target String shared", "target": 0}
{"idx": 14710, "func": "//trim the META_INF\\ off of the file name", "target": 0}
{"idx": 14711, "func": "return getPrefixedName(\"EditorPlugin\");", "target": 0}
{"idx": 14712, "func": "bench fully-boxed fib", "target": 0}
{"idx": 14713, "func": "if not shorthands... Here is no '-'.", "target": 0}
{"idx": 14714, "func": "delete the directory", "target": 0}
{"idx": 14715, "func": "FIXME: I don't like this", "target": 1}
{"idx": 14716, "func": "BeanInfo objects also contain locale-sensitive data -- flush them away:", "target": 0}
{"idx": 14717, "func": "notify observers (sorting state submenu)", "target": 0}
{"idx": 14718, "func": "TODO: This could just work off the names in the UML profile TODO: It doesn't look like it matches what's in the UML 1.4 spec", "target": 0}
{"idx": 14719, "func": "Also used by org.apache.jmeter.resources.PackageTest", "target": 0}
{"idx": 14720, "func": "Not present", "target": 0}
{"idx": 14721, "func": "End unit of work", "target": 0}
{"idx": 14722, "func": "this is an internal error of some sort...", "target": 0}
{"idx": 14723, "func": "Used by itemListener $NON-NLS-1$", "target": 0}
{"idx": 14724, "func": "//{{{ Handler class", "target": 0}
{"idx": 14725, "func": "TODO - fix so that this is only called once per test, instead of at every clone Perhaps save previous filename, and only load if it has changed?", "target": 1}
{"idx": 14726, "func": "Create a parameter specification for the collection filter...", "target": 0}
{"idx": 14727, "func": "all the others could be private too?", "target": 1}
{"idx": 14728, "func": "read succeeded, so reset the ClobDescriptor to match", "target": 0}
{"idx": 14729, "func": "We now have the value of the property-ref we reference. However, we need to dig a little deeper, as that property might also be an entity type, in which case we need to resolve its identitifier", "target": 0}
{"idx": 14730, "func": "Make sure we do not recurse forever", "target": 0}
{"idx": 14731, "func": "In contrast to {@link #getZipName()} returns the member's name without the prepended name of the project (but with the extension). <p> TODO: This is not used anywhere - shall we remove it? @author Steffen Zschaler @return the member's name without any prefix or suffix", "target": 1}
{"idx": 14732, "func": "setup the Project due to its use in SourcePathTableModel ctor", "target": 0}
{"idx": 14733, "func": "first time user has run pgm.", "target": 0}
{"idx": 14734, "func": "no-arg constructor using static references to Ruby and RubyClass", "target": 0}
{"idx": 14735, "func": "//by default", "target": 0}
{"idx": 14736, "func": "-------------------- Access to property tables -------------------- This is used to support ant call and similar tasks. It should be deprecated, it is possible to use a better (more efficient) mechanism to preserve the context.", "target": 1}
{"idx": 14737, "func": "The HTTPClient always urlencodes both name and value, so if the argument is already encoded, we have to decode it before adding it to the post request", "target": 0}
{"idx": 14738, "func": "line 313", "target": 0}
{"idx": 14739, "func": "no axis, no gridlines...", "target": 0}
{"idx": 14740, "func": "i18n[MysqlPlugin.showProcedureSource=Show procedure source]", "target": 0}
{"idx": 14741, "func": "in case someone turns it on", "target": 0}
{"idx": 14742, "func": "Render the SQL query", "target": 0}
{"idx": 14743, "func": "//i18n[PrimaryKeyTab.hint=Show primary key for the selected table]", "target": 0}
{"idx": 14744, "func": "Look for a default invoke() handler method in the namespace Note: this code duplicates that in NameSpace getCommand() is that ok?", "target": 1}
{"idx": 14745, "func": "//first look for a reference to a projection alias", "target": 0}
{"idx": 14746, "func": "Beep on search auto wrap", "target": 0}
{"idx": 14747, "func": "are all threads finished", "target": 0}
{"idx": 14748, "func": "@see org.tigris.gef.presentation.Fig#propertyChange(java.beans.PropertyChangeEvent)", "target": 0}
{"idx": 14749, "func": "//protected RemoteSearchEngine searchEngine;", "target": 0}
{"idx": 14750, "func": "Test multipe items registered for single key set", "target": 0}
{"idx": 14751, "func": "wait, if there is an active transaction TODO @author hubms retrycount!", "target": 1}
{"idx": 14752, "func": "Make sure this is a defined parameter and check the incoming value type", "target": 0}
{"idx": 14753, "func": "Deactivate this vFolder because changes are about to happen and the search needs to be redone.", "target": 0}
{"idx": 14754, "func": "Begin BeanShell Modification - constructor", "target": 0}
{"idx": 14755, "func": "do nothing, fall back on default compiler below", "target": 0}
{"idx": 14756, "func": "TODO - yet another ambiguous name - does it need changing? See also: Clearable, JMeterGUIComponent", "target": 1}
{"idx": 14757, "func": "TODO: draw the interval marker with a 3D effect", "target": 1}
{"idx": 14758, "func": "//keep the behavior consistent even for boundary usages", "target": 0}
{"idx": 14759, "func": "if securest write DEFAULT", "target": 0}
{"idx": 14760, "func": "trash folder is selected -> delete message", "target": 0}
{"idx": 14761, "func": "add main impl, used for detached or command-line execution of this script with a new runtime root method of a script is always in stub0, method0", "target": 0}
{"idx": 14762, "func": "found a file", "target": 0}
{"idx": 14763, "func": "remember selected node", "target": 0}
{"idx": 14764, "func": "and a change event for that end", "target": 0}
{"idx": 14765, "func": "Map to an EClass. //", "target": 0}
{"idx": 14766, "func": "Should Tidy be quiet?", "target": 0}
{"idx": 14767, "func": "Test sending simple HTTP get Test sending data with default encoding", "target": 0}
{"idx": 14768, "func": "The Loop Controller panel can be displayed standalone or inside another panel. For standalone, we want to display the TITLE, NAME, etc. (everything). However, if we want to display it within another panel, we just display the Loop Count fields (not the TITLE and NAME).", "target": 0}
{"idx": 14769, "func": "check if web start", "target": 0}
{"idx": 14770, "func": "limit the length of negatives if possible (also faster)", "target": 0}
{"idx": 14771, "func": "//look up the name", "target": 0}
{"idx": 14772, "func": "end class CrDisambigStateName", "target": 0}
{"idx": 14773, "func": "By default, return instructions cannot be deleted", "target": 0}
{"idx": 14774, "func": "type", "target": 0}
{"idx": 14775, "func": "-------------------------------------------------------------------------- Accessors --------------------------------------------------------------------------", "target": 0}
{"idx": 14776, "func": "i18n[SQLHistoryDlg.filterCboEndsWith=ends with]", "target": 0}
{"idx": 14777, "func": "//{{{ _notifyScreenLineChanges() method", "target": 0}
{"idx": 14778, "func": "If an iAS home directory is specified, prepend it to the commmand", "target": 0}
{"idx": 14779, "func": "This should always be true, but just in case...", "target": 0}
{"idx": 14780, "func": "step past spaces find position of '>', '\"'. or ' ' which is = end of charset name", "target": 0}
{"idx": 14781, "func": "Check to see if a container is being put into a contained object. //", "target": 0}
{"idx": 14782, "func": "//{{{ MyFocusManager class", "target": 0}
{"idx": 14783, "func": "//{{{ PerspectiveHandler class", "target": 0}
{"idx": 14784, "func": "//Validate mandatory attributes", "target": 0}
{"idx": 14785, "func": "see VFSBrowser.browseDirectory()", "target": 0}
{"idx": 14786, "func": "lowerBound", "target": 0}
{"idx": 14787, "func": "//{{{ getBeforeCaretTextArea() method", "target": 0}
{"idx": 14788, "func": "singleton, no instantiation", "target": 0}
{"idx": 14789, "func": "parse for urls and substite with HTML-code", "target": 0}
{"idx": 14790, "func": "Elements are collated first by name hoping for a quick solution", "target": 0}
{"idx": 14791, "func": "setDoubleBuffered(true);", "target": 0}
{"idx": 14792, "func": "for each row in table, do delete and add to number of rows deleted from DB", "target": 0}
{"idx": 14793, "func": "stub is derived from implementation, tie from interface name.", "target": 0}
{"idx": 14794, "func": "only build a namepace if needed, with", "target": 0}
{"idx": 14795, "func": "If element has been deleted, it's no longer valid", "target": 0}
{"idx": 14796, "func": "root.addSubShape(textShape);", "target": 0}
{"idx": 14797, "func": "Hack to get full modifier value", "target": 1}
{"idx": 14798, "func": "Similar to a fileset, but doesn't allow dir attribute to be set", "target": 0}
{"idx": 14799, "func": "result = mergeFilterResult(v, uids, match); only for debugging purpose printList( result );", "target": 0}
{"idx": 14800, "func": "let the width (if any), get processed in the next loop, so any leading 0 gets treated correctly", "target": 0}
{"idx": 14801, "func": "ALTER TABLE <tablename> ADD [CONSTRAINT <constraintname>] UNIQUE (<column list>);", "target": 0}
{"idx": 14802, "func": "NOTE: These must stay in this order to match rendering styles", "target": 0}
{"idx": 14803, "func": "This sets the parent so that the nodes can traverse to the root to find default eCore settings. //", "target": 0}
{"idx": 14804, "func": "mark message as read", "target": 0}
{"idx": 14805, "func": "right represents a joins originating from left...", "target": 0}
{"idx": 14806, "func": "This can overflow", "target": 0}
{"idx": 14807, "func": "This is not the correct location to set the cursor. The commented out code illustrates the calculation of coordinates. @see java.awt.dnd.DragSourceListener#dragOver(java.awt.dnd.DragSourceDragEvent)", "target": 0}
{"idx": 14808, "func": "build successfull!", "target": 0}
{"idx": 14809, "func": "N.B. setParameters is called before the test proper is started, and thus variables are not interpreted at this point So defer the file open until later to allow variable file names to be used.", "target": 0}
{"idx": 14810, "func": "//{{{ flushStream() method", "target": 0}
{"idx": 14811, "func": "These strings match the XML element names in the argo.tee exactly.", "target": 0}
{"idx": 14812, "func": "Parent folder (or single message file)", "target": 0}
{"idx": 14813, "func": "Insets text field. private InsetsTextField tickLabelInsetsTextField; Label insets text field. private InsetsTextField labelInsetsTextField;", "target": 0}
{"idx": 14814, "func": "//Add the parameter names and types //Use the session Id you got from the openSession call here", "target": 0}
{"idx": 14815, "func": "Try to save the project. @param overwrite if true, then we overwrite without asking @param file the File to save to @param pmw the ProgressMonitor to be updated; @return true if successful TODO: Separate this into a Swing specific class - tfm @deprecated in 0.29.1 by Bob Tarling use trySaveWithProgressMonitor", "target": 1}
{"idx": 14816, "func": "Copy the previous value in the current", "target": 0}
{"idx": 14817, "func": "try a netware-volume length path, see how it is handled", "target": 0}
{"idx": 14818, "func": "put this into the data array", "target": 0}
{"idx": 14819, "func": "//i18n[ReconnectAction.confirmReconnect=Close the current connection //to the database and open a new one?]", "target": 0}
{"idx": 14820, "func": "Hashtables for DTD information on elements, entities, and notations. //", "target": 0}
{"idx": 14821, "func": "line 827", "target": 0}
{"idx": 14822, "func": "Not clear what can cause this ? conflicting versions perhaps", "target": 1}
{"idx": 14823, "func": "i18n[exportconfig.fileExistsButReadOnly={0}\\nexists and you cannot write to it.\\nPlease use a different name.]", "target": 0}
{"idx": 14824, "func": "@see org.argouml.ui.GUISettingsTabInterface#getTabKey()", "target": 0}
{"idx": 14825, "func": "Component.getPreferredSize() is overridden here to support the collapsing behavior.", "target": 0}
{"idx": 14826, "func": "//ISession[] activeSessions = _plugin.getApplication().getSessionManager().getActiveSessions();", "target": 0}
{"idx": 14827, "func": "Anti-aliasing", "target": 0}
{"idx": 14828, "func": "special case, traverse cat file or mdl file //", "target": 0}
{"idx": 14829, "func": "border", "target": 0}
{"idx": 14830, "func": "//{{{ LinkHandler class", "target": 0}
{"idx": 14831, "func": "Delete CollaborationInstanceSets where this is the last participatingInstance", "target": 0}
{"idx": 14832, "func": "we should be able to give a renderer an arbitrary index", "target": 0}
{"idx": 14833, "func": "Sunny day", "target": 0}
{"idx": 14834, "func": "Add packages.", "target": 0}
{"idx": 14835, "func": "When we attached we have to recompute the erasure of the type parameter. //", "target": 0}
{"idx": 14836, "func": "FIXME: add setBaseToolTipGenerator(CategoryToolTipGenerator, boolean) ?", "target": 0}
{"idx": 14837, "func": "//{{{ close() method", "target": 0}
{"idx": 14838, "func": "if at EOF with no characters in the buffer, return EOF", "target": 0}
{"idx": 14839, "func": "Helper method to simplify code", "target": 0}
{"idx": 14840, "func": "ROLENAME", "target": 0}
{"idx": 14841, "func": "five additional bytes will be required to replace this IFxxx <l> instruction with IFNOTxxx <l'> GOTO_W <l>, where IFNOTxxx is the \"opposite\" opcode of IFxxx (i.e., IFNE for IFEQ) and where <l'> designates the instruction just after the GOTO_W.", "target": 0}
{"idx": 14842, "func": "create the year...", "target": 0}
{"idx": 14843, "func": "Entries", "target": 0}
{"idx": 14844, "func": "//for Httpclient //for Httpclient", "target": 0}
{"idx": 14845, "func": "if there are duplicate header names, we will save the last one", "target": 0}
{"idx": 14846, "func": "i18n[userscript.dlgTabScriptsExecute=Execute]", "target": 0}
{"idx": 14847, "func": "TODO: All super constructors should take a GraphModel", "target": 1}
{"idx": 14848, "func": "Test for when long directory/file names in Windows", "target": 0}
{"idx": 14849, "func": "read the next character unit (including backslash escapes)", "target": 0}
{"idx": 14850, "func": "Check for leading right bracket literal", "target": 0}
{"idx": 14851, "func": "Boyer-Moore helper methods", "target": 0}
{"idx": 14852, "func": "N.B. Originally there was only one filename, and only get(RETR) was supported To maintain backwards compatibility, the property name needs to remain the same $NON-NLS-1$", "target": 0}
{"idx": 14853, "func": "write 8-bit", "target": 0}
{"idx": 14854, "func": "-noverwrite", "target": 0}
{"idx": 14855, "func": "Add the parameter, httpclient will urlencode it", "target": 0}
{"idx": 14856, "func": "enable/disable search bar during search", "target": 0}
{"idx": 14857, "func": "TODO: All super constrcutors should take a GraphModel", "target": 1}
{"idx": 14858, "func": "Postgres pg_proc table doesn't appear to have schema. I couldn't locate another table to join with to get this info either.", "target": 0}
{"idx": 14859, "func": "//{{{ loadIcon() method", "target": 0}
{"idx": 14860, "func": "//{{{ deactivatePlugin() method", "target": 0}
{"idx": 14861, "func": "too big for surrogate", "target": 0}
{"idx": 14862, "func": "// create MH folder -> use homeDirectory as top-level folder -> this has to be an absolute path", "target": 0}
{"idx": 14863, "func": "//Cycle Through generic and make sure its in websphere", "target": 0}
{"idx": 14864, "func": "//{{{ WindowHandler class", "target": 0}
{"idx": 14865, "func": "//{{{ runScript() method", "target": 0}
{"idx": 14866, "func": "if started with java -jar jedit.jar", "target": 0}
{"idx": 14867, "func": "Initialize the GenModel with all the computed data. //", "target": 0}
{"idx": 14868, "func": "do the actions", "target": 0}
{"idx": 14869, "func": "//TODO: we could just return all false...", "target": 0}
{"idx": 14870, "func": "//plotBackgroundPaint;", "target": 0}
{"idx": 14871, "func": "substitute the filtered URL list", "target": 0}
{"idx": 14872, "func": "also parse 1_ or 0_N etc.", "target": 0}
{"idx": 14873, "func": "Massage PCLI lvf output transforming '\\' to '/' so get command works appropriately", "target": 0}
{"idx": 14874, "func": "modified", "target": 0}
{"idx": 14875, "func": "Copy what is in the buffer, if there is some buffered data //", "target": 0}
{"idx": 14876, "func": "use Algorithm defined via name", "target": 0}
{"idx": 14877, "func": "Builds a command launcher for the OS and JVM we are running under.", "target": 0}
{"idx": 14878, "func": "line 1806", "target": 0}
{"idx": 14879, "func": "i18n[MysqlTriggerDetailsTab.title=Details]", "target": 0}
{"idx": 14880, "func": "Used by the copy functions. Do not call this function directly. TODO: generalizations, specializations? @param source the source generalizable element @param target the target generalizable element", "target": 0}
{"idx": 14881, "func": "`clustered, unique, primary key located on PRIMARY'", "target": 0}
{"idx": 14882, "func": "parse the text that was edited", "target": 0}
{"idx": 14883, "func": "Using a thread for this gets rid of most of the \"white flash\".", "target": 0}
{"idx": 14884, "func": "size + 1;", "target": 0}
{"idx": 14885, "func": "Tabs to add to the user nodes.", "target": 0}
{"idx": 14886, "func": "//ProcessingInstructionTypeImpl", "target": 0}
{"idx": 14887, "func": "//null clientLock is remotely possible but will never happen in practice", "target": 0}
{"idx": 14888, "func": "//This method can be called only if //there's a valid selection //so go ahead and remove whatever's selected.", "target": 0}
{"idx": 14889, "func": "Two-stage save", "target": 0}
{"idx": 14890, "func": "//clientname = ejbjarfile+client.jar", "target": 0}
{"idx": 14891, "func": "Instance under test", "target": 0}
{"idx": 14892, "func": "Not required.", "target": 0}
{"idx": 14893, "func": "1 = interactive, 0 = batch", "target": 0}
{"idx": 14894, "func": "<!-- begin-user-doc --> The <b>Switch</b> for the model's inheritance hierarchy. It supports the call {@link #doSwitch(EObject) doSwitch(object)} to invoke the <code>caseXXX</code> method for each class of the model, starting with the actual class of the object and proceeding up the inheritance hierarchy until a non-null result is returned, which is the result of the switch. <!-- end-user-doc --> @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage @generated", "target": 0}
{"idx": 14895, "func": "start HSQLDB", "target": 0}
{"idx": 14896, "func": "apply model", "target": 0}
{"idx": 14897, "func": "Some characters that we like to use in action names ('.', '-') are not allowed in BeanShell identifiers.", "target": 0}
{"idx": 14898, "func": "Execute the test pan", "target": 0}
{"idx": 14899, "func": "addConfigured(Hashtable) should come before addConfigured(Map)", "target": 0}
{"idx": 14900, "func": "i18n[mssql.unicode=International text (Unicode)]", "target": 0}
{"idx": 14901, "func": "open composer", "target": 0}
{"idx": 14902, "func": "Sent later", "target": 0}
{"idx": 14903, "func": "this constructor keys the hash table", "target": 0}
{"idx": 14904, "func": "Unfortunately AbstractTestElement does not call super.clone()", "target": 0}
{"idx": 14905, "func": "//checkAssignIDToObject(figstate, true, true);", "target": 0}
{"idx": 14906, "func": "Random match", "target": 0}
{"idx": 14907, "func": "reset points vector", "target": 0}
{"idx": 14908, "func": "//need to hydrate it.", "target": 0}
{"idx": 14909, "func": "//{{{ Operation interface", "target": 0}
{"idx": 14910, "func": "//i18n[ImportFileDialog.column=Column]", "target": 0}
{"idx": 14911, "func": "null elements represent new constraints, which will be added to the target the first time any actual editing takes place. This is done to ensure syntactical correctness of constraints stored with the target.", "target": 0}
{"idx": 14912, "func": "it must be a proxied HTTPS request $NON-NLS-1$", "target": 0}
{"idx": 14913, "func": "Row 1", "target": 0}
{"idx": 14914, "func": "isStatic", "target": 0}
{"idx": 14915, "func": "Insert the content model, if any.", "target": 0}
{"idx": 14916, "func": "//UIManager.getFont(\"Label.font\");", "target": 0}
{"idx": 14917, "func": "//{{{ getFoldModes() method", "target": 0}
{"idx": 14918, "func": "make sure that modifying the returned array doesn't change the function", "target": 0}
{"idx": 14919, "func": "not implemented", "target": 1}
{"idx": 14920, "func": "Object is ready, create top self", "target": 0}
{"idx": 14921, "func": "We know the first object isn't null, so if the second one is, it can't be equal. //", "target": 0}
{"idx": 14922, "func": "The following from the original NSUML implemenetation was attempting to implement WFR #1 from section 2.5.3.32 of the UML 1.4 spec, but if there is an owner set, no namespace is valid. The checks for this WFR, if desired, need to go in setOwner() and setType() - tfm", "target": 0}
{"idx": 14923, "func": "//{{{ Folding methods", "target": 0}
{"idx": 14924, "func": "GridBagConstraints gridBagConstraints3 = new GridBagConstraints(); gridBagConstraints3.gridx = 2; gridBagConstraints3.anchor = GridBagConstraints.NORTHWEST; gridBagConstraints3.insets = new Insets(5, 5, 0, 0); gridBagConstraints3.gridy = 3; GridBagConstraints gridBagConstraints2 = new GridBagConstraints(); gridBagConstraints2.gridx = 0; gridBagConstraints2.anchor = GridBagConstraints.NORTHWEST; gridBagConstraints2.insets = new Insets(5, 5, 0, 0); gridBagConstraints2.gridy = 3;", "target": 0}
{"idx": 14925, "func": "//{{{ unloadDockableWindows() method", "target": 0}
{"idx": 14926, "func": "Guard against error conditions if climb search wasn't successful", "target": 0}
{"idx": 14927, "func": "rb_exc_new3", "target": 0}
{"idx": 14928, "func": "#8031: first try Java 1.4.", "target": 0}
{"idx": 14929, "func": "//the class discriminator value", "target": 0}
{"idx": 14930, "func": "Let's save this project in the mru list", "target": 0}
{"idx": 14931, "func": "x date format", "target": 0}
{"idx": 14932, "func": "now create a new title and replace the existing title, several things should happen: (1) Adding the new title should trigger an immediate ChartChangeEvent; (2) Modifying the new title should trigger a ChartChangeEvent; (3) Modifying the old title should NOT trigger a ChartChangeEvent", "target": 0}
{"idx": 14933, "func": "The current_timestamp is more accurate, but only known to be supported in SQL Server 7.0 and later (i.e., Sybase not known to support it at all)", "target": 0}
{"idx": 14934, "func": "//{{{ getRegisteredDockableWindows() method", "target": 0}
{"idx": 14935, "func": "odd...but it is odd in ruby too.", "target": 0}
{"idx": 14936, "func": "now, create a method_added that can replace the DynamicMethod fields as they're redefined", "target": 0}
{"idx": 14937, "func": "tick paint", "target": 0}
{"idx": 14938, "func": "remove white spaces", "target": 0}
{"idx": 14939, "func": "Found \"</\"", "target": 0}
{"idx": 14940, "func": "TODO can this happen?", "target": 1}
{"idx": 14941, "func": "Check for local contentEncoding (charset) override; fall back to default for content body we do this here rather so we can use the same charset to retrieve the data", "target": 0}
{"idx": 14942, "func": "i18n[ImportFileDialog.suggestColumnsIgnoreCase=ignore case]", "target": 0}
{"idx": 14943, "func": "check that the URL generator has been cloned", "target": 0}
{"idx": 14944, "func": "If logging has changed.", "target": 0}
{"idx": 14945, "func": "checkcast the value; if match, fast path; otherwise proceed to slow logic", "target": 0}
{"idx": 14946, "func": "see if theirs a match", "target": 0}
{"idx": 14947, "func": "set enabled to false and check the opposite condition", "target": 0}
{"idx": 14948, "func": "TODO: Better if we wrap in a ProfileException and throw that", "target": 1}
{"idx": 14949, "func": "Hack to allow entire URL to be provided in host field", "target": 1}
{"idx": 14950, "func": "//{{{ goToPrevFold() method", "target": 0}
{"idx": 14951, "func": "Start loading table/column info about the current database.", "target": 0}
{"idx": 14952, "func": "Shortcut key //putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_BRACELEFT,0));", "target": 0}
{"idx": 14953, "func": "in this case we want to find how much time span there is between local and remote", "target": 0}
{"idx": 14954, "func": "Since we \"look ahead\" before adding, there's one last env var.", "target": 0}
{"idx": 14955, "func": "hide grid, otherwise can't see anything", "target": 0}
{"idx": 14956, "func": "//TODO: is there a better way?", "target": 1}
{"idx": 14957, "func": "Don't know what to do otherwise", "target": 1}
{"idx": 14958, "func": "Add NOT if it's negated.", "target": 0}
{"idx": 14959, "func": "can't happen", "target": 0}
{"idx": 14960, "func": "check for user deletes last thing in field", "target": 0}
{"idx": 14961, "func": "check if there are columns which need to be saved", "target": 0}
{"idx": 14962, "func": "The fields on this object is in fact represented in the xml structure found as getRoot(). Therefore super.hashCode() should do the job.", "target": 0}
{"idx": 14963, "func": "Properties to be sent to remote servers", "target": 0}
{"idx": 14964, "func": "check the possibility that this is a promiscuous event", "target": 0}
{"idx": 14965, "func": "//SHAPE ////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 14966, "func": "Test remaining form of removeBaseClass", "target": 0}
{"idx": 14967, "func": "differnt outline color is selected", "target": 0}
{"idx": 14968, "func": "TODO: Test this.", "target": 1}
{"idx": 14969, "func": "4.5.2.6 Attribute", "target": 0}
{"idx": 14970, "func": "If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs", "target": 0}
{"idx": 14971, "func": "i18n[generalPropertiesPanel.top=Top]", "target": 0}
{"idx": 14972, "func": "-8 is ROWID in Oracle. It's a string, but it's auto-assigned", "target": 0}
{"idx": 14973, "func": "removes and returns the stored value without processing undefs (autoloads)", "target": 0}
{"idx": 14974, "func": "notify configuration changes listeners @see org.columba.mail.gui.table.util.MarkAsReadTimer", "target": 0}
{"idx": 14975, "func": "we are using \"all\" or \"dirty\" property-based optimistic locking", "target": 0}
{"idx": 14976, "func": "AXIS 2", "target": 0}
{"idx": 14977, "func": "LFH offset,", "target": 0}
{"idx": 14978, "func": "//if-isFile //for", "target": 0}
{"idx": 14979, "func": "try to create the classpath for the correct ORB", "target": 0}
{"idx": 14980, "func": "UnsupportedFlavorException, IOException", "target": 0}
{"idx": 14981, "func": "//swallow", "target": 0}
{"idx": 14982, "func": "@see TestCase#setUp()", "target": 0}
{"idx": 14983, "func": "Collect iteration precisions beforehand", "target": 0}
{"idx": 14984, "func": "Can be done as follows in Postgres INSERT INTO mytable(id,name) SELECT 1, 'pizza' UNION SELECT 2, 'donuts' UNION SELECT 3, 'milk';", "target": 0}
{"idx": 14985, "func": "//{{{ focusGained() method", "target": 0}
{"idx": 14986, "func": "//+ JMX attributes - do not change", "target": 0}
{"idx": 14987, "func": "TODO: move(x) shouldn't rely on calling next() x times", "target": 1}
{"idx": 14988, "func": "draw the arrow...", "target": 0}
{"idx": 14989, "func": "delete marks", "target": 0}
{"idx": 14990, "func": "no field, try property acces", "target": 0}
{"idx": 14991, "func": "@see org.argouml.cognitive.Critic#getCriticizedDesignMaterials()", "target": 0}
{"idx": 14992, "func": "deal with the resource collections", "target": 0}
{"idx": 14993, "func": "line 1133", "target": 0}
{"idx": 14994, "func": "iterate over remainder of buffer until we find a match", "target": 0}
{"idx": 14995, "func": "Give the parser a map of model elements keyed by their UUID. This is used to allocate figs to their owner using the \"href\" attribute in PGML.", "target": 0}
{"idx": 14996, "func": "version 4", "target": 0}
{"idx": 14997, "func": "//cursor = midX - COLUMN_RADIUS - AXIS_GAP;", "target": 0}
{"idx": 14998, "func": "OUTLINE PAINT //////////////////////////////////////////////////////////", "target": 0}
{"idx": 14999, "func": "Delete the tempfile immedietly", "target": 0}
{"idx": 15000, "func": "generate contents file.", "target": 0}
{"idx": 15001, "func": "If a UML 1.3 file, attempt to upgrade it to UML 1.4", "target": 0}
{"idx": 15002, "func": "Must be the default resource file", "target": 0}
{"idx": 15003, "func": "//{{{ TOCTree constructor", "target": 0}
{"idx": 15004, "func": "we remember which classes we don't exist because BeanShell tries loading all possible <imported prefix>.<class name> combinations", "target": 0}
{"idx": 15005, "func": "three args, no block; do nothing", "target": 0}
{"idx": 15006, "func": "Do nothing. FD_CLOEXEC has no meaning in JVM since we cannot really exec. And why the hell does webrick pass this in as a first argument!!!!!", "target": 0}
{"idx": 15007, "func": "double (pressed) click", "target": 0}
{"idx": 15008, "func": "TRY GUARD/ITERATOR SYNTAX", "target": 0}
{"idx": 15009, "func": "//{{{ updateEveryTime() method", "target": 0}
{"idx": 15010, "func": "//data type", "target": 0}
{"idx": 15011, "func": "new Dimension( suggestionsJScrollPane.getPreferredSize().width, 75 ) );", "target": 0}
{"idx": 15012, "func": "TODO: Signal -> Receptions association not navigable in this direction", "target": 0}
{"idx": 15013, "func": "If the component is a JLabel which has another component assigned then position/size the label and calculate the size of the registered component", "target": 0}
{"idx": 15014, "func": "//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$", "target": 0}
{"idx": 15015, "func": "needed to prevent an infinite loop", "target": 0}
{"idx": 15016, "func": "We need to set the namespace/owner of the new attribute before parsing:", "target": 0}
{"idx": 15017, "func": "Sequence tabs", "target": 0}
{"idx": 15018, "func": "args should be at end", "target": 0}
{"idx": 15019, "func": "Ensure that cached ePackage is forgotten.", "target": 0}
{"idx": 15020, "func": "This could (perhaps more elegantly) be done by recursion", "target": 1}
{"idx": 15021, "func": "//{{{ getSplitPane() method", "target": 0}
{"idx": 15022, "func": "Property change control panel", "target": 0}
{"idx": 15023, "func": "default value //", "target": 0}
{"idx": 15024, "func": "StylePanelFigClass relies on getPanelTarget() to return a FigCompartmentBox", "target": 0}
{"idx": 15025, "func": "isRelevant should still be true", "target": 0}
{"idx": 15026, "func": "Test for boolean not equals(Object)", "target": 0}
{"idx": 15027, "func": "Have we reached the reporting boundary? Need to allow for a margin of error, otherwise can miss the slot. Also need to check we've not hit the window already", "target": 1}
{"idx": 15028, "func": "y date format", "target": 0}
{"idx": 15029, "func": "SAXXMLHandler", "target": 0}
{"idx": 15030, "func": "----- internal member variables -----", "target": 0}
{"idx": 15031, "func": "//{{{ dispose() method", "target": 0}
{"idx": 15032, "func": "no component has the focus -> disable all actions", "target": 0}
{"idx": 15033, "func": "Strip off the trailing delimiter", "target": 0}
{"idx": 15034, "func": "when field is not null delete means set to null, so do it", "target": 0}
{"idx": 15035, "func": "handle header", "target": 0}
{"idx": 15036, "func": "Test both forms of addBaseClass", "target": 0}
{"idx": 15037, "func": "line 1273", "target": 0}
{"idx": 15038, "func": "NOTE: GEF's GIF writer uses Jeff Poskanzer's GIF encoder, but that saves a copy of the entire image in an internal buffer before starting work, defeating the whole purpose of our incremental rendering.", "target": 0}
{"idx": 15039, "func": "note that we don't define taskB1", "target": 0}
{"idx": 15040, "func": "iterate through all foldertypes to find suitable ones", "target": 0}
{"idx": 15041, "func": "//file time checks for java1.2+", "target": 0}
{"idx": 15042, "func": "//not a known type", "target": 0}
{"idx": 15043, "func": "pass the click on to the plot... rely on the plot to post a plot change event and redraw the chart...", "target": 0}
{"idx": 15044, "func": "Append body if it is a post or put", "target": 0}
{"idx": 15045, "func": "@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)", "target": 0}
{"idx": 15046, "func": "1-ms test timeline (with a baseTimeline) using 2 included and 2 excluded segments centered inside each base segment The ms2Timeline without a base would look like this: timeline start time = 1 | v 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 ... +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... |EE| | |EE|EE| | |EE|EE| | |EE|EE| | |EE|EE| | |EE| <-- ms2Timeline +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... \\____ _____/ \\_/ \\/ | segment group segment size = 1 ms With the base timeline some originally included segments are now removed (see \"xx\" below): 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 ... +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... |EE| | |EE|EE|xx|xx|EE|EE| | |EE|EE|xx|xx|EE|EE| | |EE| <-- ms2Timeline +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... | | | | |EE|EE|EE|EE| | | | |EE|EE|EE|EE| | | | | <-- ms2BaseTimeline +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //", "target": 0}
{"idx": 15047, "func": "ResourceSet resourceSet = (ResourceSet)object; childrenFeatures.add(ResourcePackage.eINSTANCE.getResourceSet_Resources());", "target": 0}
{"idx": 15048, "func": "Get the ends from the association (we know there are two), and the types associated with them.", "target": 0}
{"idx": 15049, "func": "//iri = iri || containsNonASCII(device);", "target": 0}
{"idx": 15050, "func": "MRI accepts additional wday argument which appears to be ignored.", "target": 0}
{"idx": 15051, "func": "//TODO: tabs for class, state, usecase, help", "target": 0}
{"idx": 15052, "func": "Set the arguments again. //", "target": 0}
{"idx": 15053, "func": "baseOutlineStroke", "target": 0}
{"idx": 15054, "func": "TODO: is this right???", "target": 1}
{"idx": 15055, "func": "line 1313", "target": 0}
{"idx": 15056, "func": "Collect the set of model elements that we want to listen to", "target": 0}
{"idx": 15057, "func": "//yyDgoto 152", "target": 0}
{"idx": 15058, "func": "if we have no info about the class - it may have been deleted already and we are using cached info.", "target": 0}
{"idx": 15059, "func": "check list containing null", "target": 0}
{"idx": 15060, "func": "Stream to read and redirect to standard output", "target": 0}
{"idx": 15061, "func": "collections of values", "target": 0}
{"idx": 15062, "func": "implement your own search-engine here", "target": 0}
{"idx": 15063, "func": "check whether the user has specified an absolute path", "target": 0}
{"idx": 15064, "func": "Needs to be greater than the minimum to allow for boundary errors", "target": 0}
{"idx": 15065, "func": "Check if index is consitent with mailbox", "target": 0}
{"idx": 15066, "func": "Otherwise, the 8th bit may not be set in UTF-8", "target": 0}
{"idx": 15067, "func": "we are recreating the archive, need all resources", "target": 0}
{"idx": 15068, "func": "unchanged", "target": 0}
{"idx": 15069, "func": "TODO: Offenders need to be more strongly typed. - tfm 20070630", "target": 1}
{"idx": 15070, "func": "i18n[MysqlTriggerDetailsTab.hint=Display trigger details]", "target": 0}
{"idx": 15071, "func": "does this get all?", "target": 0}
{"idx": 15072, "func": "finally, add all external extension menu additions for example: Hello World Plugin", "target": 0}
{"idx": 15073, "func": "//{{{ setEnterAddsToHistory() method", "target": 0}
{"idx": 15074, "func": "Try adding the default extension.", "target": 0}
{"idx": 15075, "func": "The password can be defined as a property; this dialogue is provided to allow it to be entered at run-time. However, this does not gain much, as the dialogue does not (yet) support hidden input ...", "target": 0}
{"idx": 15076, "func": "file is on wrong format, swallow", "target": 0}
{"idx": 15077, "func": "$blah", "target": 0}
{"idx": 15078, "func": "For In build test case using this counter create the new entry in the server", "target": 0}
{"idx": 15079, "func": "Can't have type arguments unless there is a classifier //", "target": 0}
{"idx": 15080, "func": "keep track of total events fired", "target": 0}
{"idx": 15081, "func": "//underscores go in front of invalid start chars", "target": 0}
{"idx": 15082, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ProgressCallBack#currentlyLoading(java.lang.String)", "target": 0}
{"idx": 15083, "func": "if the original object is not null, then it contains a Blob object that we need to re-use, since that is the DBs reference to the blob data area. Otherwise, we set the original Blob to null, and the write method needs to know to set the field to null.", "target": 0}
{"idx": 15084, "func": "NOTE: a procedure may also be a UDF!", "target": 0}
{"idx": 15085, "func": "Lookup primary key, creating new entry if needed", "target": 0}
{"idx": 15086, "func": "//property-refs for associations defined on a //component are not supported, so no need to slice", "target": 0}
{"idx": 15087, "func": "check that there aren't any extra entries", "target": 0}
{"idx": 15088, "func": "//{{{ getShortURL() method", "target": 0}
{"idx": 15089, "func": "rethrow other errors", "target": 0}
{"idx": 15090, "func": "Sampler error action buttons", "target": 0}
{"idx": 15091, "func": "Only concerned about order when more than one table.", "target": 0}
{"idx": 15092, "func": "The list of rows may be empty, in which case we tell user they should select something first", "target": 0}
{"idx": 15093, "func": "this one does not, so they are not equal", "target": 0}
{"idx": 15094, "func": "Fix the case according to what the database tells us.", "target": 0}
{"idx": 15095, "func": "@deprecated", "target": 0}
{"idx": 15096, "func": "TODO: Should throw if the string is not good?", "target": 1}
{"idx": 15097, "func": "get the classifier", "target": 0}
{"idx": 15098, "func": "//retrieve new bundle use ResourceBundle's internal classloader", "target": 0}
{"idx": 15099, "func": "//Class/isSetGenFeature.todo.override.javajetinc", "target": 0}
{"idx": 15100, "func": "//{{{ getMarkPosition() method", "target": 0}
{"idx": 15101, "func": "The first time that catalogs are asked for, return just one", "target": 0}
{"idx": 15102, "func": "calls executeBatch()", "target": 0}
{"idx": 15103, "func": "i18n[laf.themePack=Theme Pack:]", "target": 0}
{"idx": 15104, "func": "Get the caller", "target": 0}
{"idx": 15105, "func": "Arguments", "target": 0}
{"idx": 15106, "func": "Tricky alias and chaining completion examples au to auftr in from Kv auftr where au au to auftr in from Kv.positionen.kv auftr where au positionen. to fields of Kv aggregate positionen in from Kv auftr where auftr.positionen. positionen. to fields of Kv aggregate positionen in from Kv where positionen.", "target": 0}
{"idx": 15107, "func": "the ActionExpression", "target": 0}
{"idx": 15108, "func": "Method expressions in a SELECT should always be considered scalar.", "target": 0}
{"idx": 15109, "func": "pre-3.4", "target": 0}
{"idx": 15110, "func": "FE50..FE6F;", "target": 0}
{"idx": 15111, "func": "remember the fig for later", "target": 0}
{"idx": 15112, "func": "JASON: Mow that multiple object trees exist storing the edit where by objectInfo within session won't work. It needs to be objectinfo within something else. // private final Map _editWhereColsSheets = new HashMap();", "target": 1}
{"idx": 15113, "func": "When used as a generic super type, there must be a classifier that refers to a class. //", "target": 0}
{"idx": 15114, "func": "//TODO: we should provide some way to get keys of collection of statistics to make it easier to retrieve from a GUI perspective", "target": 1}
{"idx": 15115, "func": "TODO: add stereotype application (eCore AnyType?)", "target": 1}
{"idx": 15116, "func": "//{{{ EnhancedMenu constructor", "target": 0}
{"idx": 15117, "func": "Check if we have any content to send for body", "target": 0}
{"idx": 15118, "func": "Overridden to set Argo-specific RenderingHints to determine whether or not antialiasing should be turned on. @see org.tigris.gef.base.Editor#paint(java.awt.Graphics)", "target": 0}
{"idx": 15119, "func": "all messages are new", "target": 0}
{"idx": 15120, "func": "//i18n[CopyDriverAction.error.selectingwindow=Error selecting window]", "target": 0}
{"idx": 15121, "func": "the link area defines the dog leg points for the linking lines to the labels", "target": 0}
{"idx": 15122, "func": "//titleLabel.setBackground(null, null); titleLabel.setForeground(null);", "target": 0}
{"idx": 15123, "func": "\"-Dstupid=idiot\",\"are\",\"--all\",\"--all\",\"here\"", "target": 0}
{"idx": 15124, "func": "if endPath is shorter than startPath, the last segment of endPath may not be compared: because startPath has been collapsed and had its last segment removed, all preceding segments can be considered non- empty and followed by a separator, while the last segment of endPath will either be non-empty and not followed by a separator, or just empty", "target": 0}
{"idx": 15125, "func": "create temporary file and save validated body", "target": 0}
{"idx": 15126, "func": "invalidate the old selection", "target": 0}
{"idx": 15127, "func": "FEFF..FEFF;", "target": 0}
{"idx": 15128, "func": "use \"mark as read\" as default fallback mechanism", "target": 0}
{"idx": 15129, "func": "//yyLen 542", "target": 0}
{"idx": 15130, "func": "putfield put field \"$JAVASSIST_CALLBACK\" defined already", "target": 0}
{"idx": 15131, "func": "//{{{ clearExpansionState() method", "target": 0}
{"idx": 15132, "func": "Fill 44 of value (byte) -19", "target": 0}
{"idx": 15133, "func": "Could be SampleResult or AssertionResult", "target": 0}
{"idx": 15134, "func": "type is either a class name or a primitive type", "target": 0}
{"idx": 15135, "func": "not in settings directory or jEdit home directory. no need to reload anything.", "target": 0}
{"idx": 15136, "func": "allow user to change name case", "target": 0}
{"idx": 15137, "func": "If we could do a drop insert operation... //", "target": 0}
{"idx": 15138, "func": "Compute the expected sample names", "target": 0}
{"idx": 15139, "func": "private JPanel modifiedTab = new JPanel();", "target": 0}
{"idx": 15140, "func": "2 Pixel padding after compartment", "target": 0}
{"idx": 15141, "func": "Check that all keys in the bundle are also in the default bundle:", "target": 0}
{"idx": 15142, "func": "ActionAddAllClassesFromModel", "target": 0}
{"idx": 15143, "func": "Already contains a prefix", "target": 0}
{"idx": 15144, "func": "Here we render the select column list based on the properties defined as being generated. For partial component generation, we currently just re-select the whole component rather than trying to handle the individual generated portions.", "target": 0}
{"idx": 15145, "func": "// OptionsItem optionsItem = MailConfig.getInstance().getOptionsItem(); // String selectedBrowser = optionsItem.getStringWithDefault( // OptionsItem.MESSAGEVIEWER, OptionsItem.SELECTED_BROWSER, // \"Default\");", "target": 0}
{"idx": 15146, "func": "Some drivers for DB2 don't return SYSFUN as a schema name. A number of system stored procs are kept in this schema.", "target": 0}
{"idx": 15147, "func": "Created by SampleSenderFactory", "target": 0}
{"idx": 15148, "func": "//{{{ collapse() method", "target": 0}
{"idx": 15149, "func": "if we are already in the AWT thread, take a shortcut", "target": 0}
{"idx": 15150, "func": "\" WITH ADMIN OPTION\"", "target": 0}
{"idx": 15151, "func": "If it's a proxy, use that. //", "target": 0}
{"idx": 15152, "func": "Both of these throw an exception claiming that it got a clob and expected a number (inconsistent data types): pstmt.setClob(position, null); pstmt.setNull(position, java.sql.Types.CLOB); //", "target": 0}
{"idx": 15153, "func": "Primitive to arbitrary object type. Allow Primitive.castToType() to handle it as well as cases of Primitive.NULL and Primitive.VOID", "target": 0}
{"idx": 15154, "func": "not absolutely necessary, but does help with aggressive release", "target": 1}
{"idx": 15155, "func": "i18n[UpdatePreferencesPanel.port=Port:]", "target": 0}
{"idx": 15156, "func": "i18n[popupeditableIoPanel.errorWritingFile=There was an error while writing file {0}.\\nThe error was:\\n{1}]", "target": 0}
{"idx": 15157, "func": "cannot be instantiated", "target": 0}
{"idx": 15158, "func": "Use reply-to field if given, else use from", "target": 0}
{"idx": 15159, "func": "init view", "target": 0}
{"idx": 15160, "func": "squeltch", "target": 0}
{"idx": 15161, "func": "Print an exception trace to a string buffer", "target": 0}
{"idx": 15162, "func": "start command which adds message to folder and calls apply-filter on this specific message", "target": 0}
{"idx": 15163, "func": "add trailing comments if necessary", "target": 0}
{"idx": 15164, "func": "if a not-default current shortcut was added, then we have to save it", "target": 0}
{"idx": 15165, "func": "(non-Javadoc) @see javax.swing.table.DefaultTableModel#isCellEditable(int, int)", "target": 0}
{"idx": 15166, "func": "we use the assumed value, if there is one, to avoid hitting the database", "target": 0}
{"idx": 15167, "func": "TODO this is not populated currently", "target": 1}
{"idx": 15168, "func": "i18n[mapdataset.value=Value]", "target": 0}
{"idx": 15169, "func": "not known!", "target": 0}
{"idx": 15170, "func": "i18n[generalSessionPropertiesPanel.showToolbar=Show toolbar]", "target": 0}
{"idx": 15171, "func": "not primitive or lc class", "target": 0}
{"idx": 15172, "func": "Change the line colour", "target": 0}
{"idx": 15173, "func": "i18n[HelpViewerWindow.error.loadpluginsettings=Error retrieving app settings folder for plugin {0}]", "target": 0}
{"idx": 15174, "func": "add an extra slash for filesystems with drive-specifiers", "target": 0}
{"idx": 15175, "func": "XXX Unfortunately JDK1.2 adds entrySet(), keySet(), values() - implementing this requires a small hack, we can add it later.", "target": 1}
{"idx": 15176, "func": "i18n[SQLHistoryDlg.filterCboRegEx=regular exp]", "target": 0}
{"idx": 15177, "func": "check soap12", "target": 0}
{"idx": 15178, "func": "Used by Request Panel //$NON-NLS-1$", "target": 0}
{"idx": 15179, "func": "String in the panel Do not make these static, otherwise language changes don't work $NON-NLS-1$", "target": 0}
{"idx": 15180, "func": "only wrap if we're at the end of a line, or the rest of the line text is whitespace", "target": 0}
{"idx": 15181, "func": "define activity layout", "target": 0}
{"idx": 15182, "func": "//use a combination of foreign key columns and pk columns, since //the ordering of removal and addition is not guaranteed when //a child moves from one parent to another", "target": 0}
{"idx": 15183, "func": "//{{{ size() method", "target": 0}
{"idx": 15184, "func": "Returns the upper half bitmask for all the ASCII characters in the given string.", "target": 0}
{"idx": 15185, "func": "The groups have all completed now", "target": 0}
{"idx": 15186, "func": "(value != null) && (oldValue == null) Add owner to new value. //", "target": 0}
{"idx": 15187, "func": "This ensures tha HttpClient knows about the protocol", "target": 0}
{"idx": 15188, "func": "remove the function name", "target": 0}
{"idx": 15189, "func": "Convert JUnit4 AssertionError failures to JUnit3 style so will be treated as failure rather than error.", "target": 0}
{"idx": 15190, "func": "TODO: Rework to use UML 1.4 TagDefinitions - tfm", "target": 1}
{"idx": 15191, "func": "//{{{ ActionListeners", "target": 0}
{"idx": 15192, "func": "// private boolean _blinkCaret = true;", "target": 0}
{"idx": 15193, "func": "MRI behavior: Week values are monotonous. So, weeks that effectively belong to previous year, will get the value of 0, not 52 or 53, as in Java.", "target": 0}
{"idx": 15194, "func": "getParentFile() may not work on relative paths", "target": 0}
{"idx": 15195, "func": "Set the index of the object value in the list via this call to super. //", "target": 0}
{"idx": 15196, "func": "don't want getFileName(\"roots:\") to return \"\"", "target": 0}
{"idx": 15197, "func": "now find the text anchor point", "target": 0}
{"idx": 15198, "func": "We are creating a new IO object that shares the same IOHandler (and fileno).", "target": 0}
{"idx": 15199, "func": "TODO: Once the default constructor is deleted we only set dirty flag", "target": 1}
{"idx": 15200, "func": "translate \\1 to $1 so that the Perl5Substitution will work", "target": 0}
{"idx": 15201, "func": "deletes the last \", \"", "target": 0}
{"idx": 15202, "func": "set up the category names...", "target": 0}
{"idx": 15203, "func": "This could perhaps be a variable name", "target": 1}
{"idx": 15204, "func": "Make sure same hierarchy is used", "target": 0}
{"idx": 15205, "func": "Generate code to push the BSHTHIS or BSHSTATIC field", "target": 0}
{"idx": 15206, "func": "//{{{ getLineStartOffset() method", "target": 0}
{"idx": 15207, "func": "note that we'll potentially see the refs for both the java object and proxy -- whichever we see first will cause the entry to be removed; the other will not match an entry and will be ignored.", "target": 0}
{"idx": 15208, "func": "Note UserParameterXML accesses this variable to obtain the Set data via method getParsedParameters()", "target": 0}
{"idx": 15209, "func": "line 1722", "target": 0}
{"idx": 15210, "func": "Check that the graph being served was created by the current user or that it begins with \"public\"", "target": 0}
{"idx": 15211, "func": "'+', remember value is negative", "target": 0}
{"idx": 15212, "func": "assume text output - script can override if necessary", "target": 0}
{"idx": 15213, "func": "allow it to bubble up", "target": 0}
{"idx": 15214, "func": "unused but must return something, so while we are at it...", "target": 1}
{"idx": 15215, "func": "//{{{ Encoding", "target": 0}
{"idx": 15216, "func": "//{{{ ModeProperties class", "target": 0}
{"idx": 15217, "func": "render data items...", "target": 0}
{"idx": 15218, "func": "ALTER VIEW oldTableName RENAME TO newTableName; RENAME oldTableName TO newTableName;", "target": 0}
{"idx": 15219, "func": "// private boolean _showHeadings;", "target": 0}
{"idx": 15220, "func": "the search works by starting the anchor (first character of the pattern) at the initial offset. as long as the anchor is far enough from the enough of the text for the pattern to match, and until the pattern matches, we compare the pattern to the text from the last character to the first character in reverse order. where a character in the pattern mismatches, we use the two heuristics based on the mismatch character and its position in the pattern to determine the furthest we can move the anchor without missing any potential pattern matches.", "target": 0}
{"idx": 15221, "func": "update the data...", "target": 0}
{"idx": 15222, "func": "this constructor is needed for PGMLStackParser to load saved diagrams. It does nothing, because PGMLStackParser will call setPoints later.", "target": 0}
{"idx": 15223, "func": "Otherwise, the response is scanned for these strings //$NON-NLS-1$", "target": 0}
{"idx": 15224, "func": "parameter bind values...", "target": 0}
{"idx": 15225, "func": "autoinit's to null.", "target": 0}
{"idx": 15226, "func": "//{{{ Colors and styles", "target": 0}
{"idx": 15227, "func": "place the edge on the layer and update the diagram", "target": 0}
{"idx": 15228, "func": "add any dependent files", "target": 0}
{"idx": 15229, "func": "otherwise, perform a \"deep equivalence\" check...", "target": 0}
{"idx": 15230, "func": "Position within source must reflect the actual offset and column. Since we ate an extra character here (this accounting is normally done in read ), we should update position info.", "target": 0}
{"idx": 15231, "func": "assertEquals(DefaultOclEvaluator.getInstance().evaluate(vt, mi, \"x.oclIsKindOf(Classifier)\"), true);", "target": 0}
{"idx": 15232, "func": "query - starts with ? and up to fragment or end", "target": 0}
{"idx": 15233, "func": "TODO: make setBounds, calcBounds and updateBounds consistent", "target": 1}
{"idx": 15234, "func": "successfully connected and autenthenticated to SMTP server", "target": 0}
{"idx": 15235, "func": "//{{{ HistoryTextField constructor", "target": 0}
{"idx": 15236, "func": "note: query != null -> hierarchical", "target": 0}
{"idx": 15237, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getPanelComponent()", "target": 0}
{"idx": 15238, "func": "//{{{ loadProps() method", "target": 0}
{"idx": 15239, "func": "drawOpenTicks", "target": 0}
{"idx": 15240, "func": "if there are no owned elements then return empty list", "target": 0}
{"idx": 15241, "func": "//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ removed expiration because it's just an annoyance for static cookies", "target": 0}
{"idx": 15242, "func": "Do decoding stuff", "target": 0}
{"idx": 15243, "func": "//{{{ Getters/setter methods for various buffer meta-data", "target": 0}
{"idx": 15244, "func": "hmmmm", "target": 0}
{"idx": 15245, "func": "line 1137", "target": 0}
{"idx": 15246, "func": "must be CLOSE or SAVE_CLOSE COMMANDS", "target": 0}
{"idx": 15247, "func": "main iteration", "target": 0}
{"idx": 15248, "func": "//}}} //{{{ Clockwise rotation", "target": 0}
{"idx": 15249, "func": "This sequence is borrowed from: org.apache.commons.httpclient.protocol.ReflectionSocketFactory.createSocket", "target": 0}
{"idx": 15250, "func": "FIXME", "target": 0}
{"idx": 15251, "func": "LF blank line found", "target": 0}
{"idx": 15252, "func": "short scale", "target": 0}
{"idx": 15253, "func": "//{{{ scrollUp() method scroll up by screen line amount", "target": 0}
{"idx": 15254, "func": "TODO: place comments near connected classes TODO: place from middle towards outer edges? (or place largest groups first)", "target": 0}
{"idx": 15255, "func": "Logging.log.severe( \"Not enough tokens in \\\"\" + dateStr + \"\\\" to create Date: header. Returning null\", e);", "target": 0}
{"idx": 15256, "func": "-------------------------------------------------------------------------- Other public methods --------------------------------------------------------------------------", "target": 0}
{"idx": 15257, "func": "There is no reason they aren't equals. //", "target": 0}
{"idx": 15258, "func": "ask the user", "target": 0}
{"idx": 15259, "func": "Different lengths:", "target": 0}
{"idx": 15260, "func": "Subraction", "target": 0}
{"idx": 15261, "func": "c.gridx = 1; c.gridy = 3; c.gridheight = GridBagConstraints.REMAINDER; SpacerPanel spacer2 = new SpacerPanel(); gb.setConstraints(spacer2, c); _mainPanel.add(spacer2);", "target": 0}
{"idx": 15262, "func": "enable, if more than zero treenodes selected", "target": 0}
{"idx": 15263, "func": "//{{{ checkBufferStatus() method", "target": 0}
{"idx": 15264, "func": "register a cleanup synch", "target": 0}
{"idx": 15265, "func": "get the ordered list of immediate successors:", "target": 0}
{"idx": 15266, "func": "If we are enabling the Edit-->Add menu item, then we also need to enable the Edit menu. The Edit menu may already be enabled, but there's no harm it trying to enable it again.", "target": 0}
{"idx": 15267, "func": "same as above", "target": 0}
{"idx": 15268, "func": "push super class name use superClassName var?", "target": 0}
{"idx": 15269, "func": "break out of the inner loop", "target": 0}
{"idx": 15270, "func": "//////////////////////////////////////////////////////////////TreeCellRenderer implementation", "target": 0}
{"idx": 15271, "func": "limit our retries in case its too hard to get free", "target": 0}
{"idx": 15272, "func": "If there is no dot then this must be a top level Fig and can be assumed to be a FigNode.", "target": 0}
{"idx": 15273, "func": "remove all items", "target": 0}
{"idx": 15274, "func": "Test data used in a few places below", "target": 0}
{"idx": 15275, "func": "If types not provided, default to argument types, else null", "target": 0}
{"idx": 15276, "func": "TODO: We should be able to just call renderingChanged on the child figs here instead of doing an updateOperations...", "target": 0}
{"idx": 15277, "func": "TODO: Why is this code even getting called for a FigGeneralization?", "target": 1}
{"idx": 15278, "func": "Not null if the Isolation level has been specified in the configuration file. Otherwise, it is left to the Driver's default value.", "target": 0}
{"idx": 15279, "func": "Create a new version of the relevant fig", "target": 0}
{"idx": 15280, "func": "Frame matches one of our markers for \"interpreted\" calls", "target": 0}
{"idx": 15281, "func": "private JMenu menu;", "target": 0}
{"idx": 15282, "func": "on startup, there's shouldn't be any recent messages -> we simply remember 0 recent messages here property.addAttribute(\"recent\", \"0\");", "target": 0}
{"idx": 15283, "func": "Anything not found is newly created, so return a null SystemID indicating that it is in the parent document. TODO: This assumption will be invalid if/when we allow editing of linked sub-models", "target": 1}
{"idx": 15284, "func": "Also forward all the Socket methods.", "target": 0}
{"idx": 15285, "func": "get stream", "target": 0}
{"idx": 15286, "func": "no renderer 1", "target": 0}
{"idx": 15287, "func": "TODO: We may return something useful when the relocate() has been implemented, like all StateMachines that are not ActivityGraphs.", "target": 1}
{"idx": 15288, "func": "//{{{ getScreenLineOfOffset() method", "target": 0}
{"idx": 15289, "func": "find the starteam folder specified to be the root of the operation. Throw if it can't be found.", "target": 0}
{"idx": 15290, "func": "No i18n, developers should write English props.", "target": 0}
{"idx": 15291, "func": "todo : move this to SF per HHH-3517; also see HHH-1907 and ComponentMetamodel", "target": 0}
{"idx": 15292, "func": "//{{{ PasteFromListDialog constructor", "target": 0}
{"idx": 15293, "func": "Should we return fragment as text, rather than text of fragment?", "target": 1}
{"idx": 15294, "func": "TODO: All the ToDos in the doCopyFoo methods below are inherited from the NSUML implementation and do not reflect new issues. One additional thing which does need to be dealt with is the copying of any attributes which have been added since this code was implemented for UML 1.3.", "target": 0}
{"idx": 15295, "func": "allow these to go through the the real session no matter what", "target": 0}
{"idx": 15296, "func": "down arrow", "target": 0}
{"idx": 15297, "func": "i18n[HQLEntryPanelManager.quoteHQLsb=Quote HQL as StingBuffer]", "target": 0}
{"idx": 15298, "func": "callback", "target": 0}
{"idx": 15299, "func": "add smilies", "target": 0}
{"idx": 15300, "func": "Abstract class that is the parent of all actions adding diagrams to ArgoUML. The children of this class should implement createDiagram to do any specific actions for creating a diagram and isValidNamespace that checks if some namespace is valid to add the diagram to. <p> ArgoUML shall never create a diagram for a read-only modelelement.<p> TODO: This class should be merged with ActionNewDiagram. @author jaap.branderhorst@xs4all.nl", "target": 1}
{"idx": 15301, "func": "//{{{ setMessageAndClear() method", "target": 0}
{"idx": 15302, "func": "TODO this assumes that the redirected response will always immediately follow the original response. This may not always be true. Is there a better way to do this?", "target": 1}
{"idx": 15303, "func": "NextCh already done", "target": 0}
{"idx": 15304, "func": "contentPanel.setBorder(new LineBorder(ACTIVE_BORDER_COLOR, 1));", "target": 0}
{"idx": 15305, "func": "//{{{ addLayoutComponent() method //}}}", "target": 0}
{"idx": 15306, "func": "//////////////TableModel implementation", "target": 0}
{"idx": 15307, "func": "//TODO: passing null here, because this method is not really used for DOM4J at the moment but it is still a bug, if we don't get rid of this!", "target": 1}
{"idx": 15308, "func": "Access methods for program infrastructure.", "target": 0}
{"idx": 15309, "func": "If this is not a hibernate error we write a log entry", "target": 0}
{"idx": 15310, "func": "//{{{ removeMarker() method", "target": 0}
{"idx": 15311, "func": "This is the legacy behaviour for HQL queries...", "target": 0}
{"idx": 15312, "func": "create a parser:", "target": 0}
{"idx": 15313, "func": "On uniprocessors wait until we're sure the splash screen has been painted so that we aren't competing for resources", "target": 0}
{"idx": 15314, "func": "Oracle declares the column size to be 4000, regardless of the maximum length of the CLOB field. So if the Oracle BLOB/CLOB column contains values that exceed 4000 chars and we use colInfo.getColumnSize() we might create a destination column that is too small for the data that will be copied from Oracle. We specify a default value of 4000 in case the table has no records or if the BLOB/CLOB column contains only null values.", "target": 0}
{"idx": 15315, "func": "//{{{ getDigitRegexp() method", "target": 0}
{"idx": 15316, "func": "copy all attributes", "target": 0}
{"idx": 15317, "func": "centerPanel.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 5));", "target": 0}
{"idx": 15318, "func": "end class CrSingletonViolatedOnlyPrivateConstructors", "target": 0}
{"idx": 15319, "func": "//{{{ setAutoWrap() method", "target": 0}
{"idx": 15320, "func": "//////////////////////////////////////////////////////////////constructor and singeton methods", "target": 0}
{"idx": 15321, "func": "last character before wrap length with tabs expanded", "target": 0}
{"idx": 15322, "func": "Outer sample", "target": 0}
{"idx": 15323, "func": "i18n[userscript1.scriptClass=Script class]", "target": 0}
{"idx": 15324, "func": "Add the condition to the join sequence that qualifies the indexed element.", "target": 0}
{"idx": 15325, "func": "Bug 124306: we should rely on XMLCalendar to normalize Dave value, to ensure that all Date value fields are taken into account.", "target": 1}
{"idx": 15326, "func": "i.e. no disabled icon found", "target": 0}
{"idx": 15327, "func": "//{{{ clearRegister() method", "target": 0}
{"idx": 15328, "func": "save message", "target": 0}
{"idx": 15329, "func": "early exit...", "target": 0}
{"idx": 15330, "func": "get the type of artifact", "target": 0}
{"idx": 15331, "func": "Sort buffers by names", "target": 0}
{"idx": 15332, "func": "line 1342", "target": 0}
{"idx": 15333, "func": "XXXX re-evaluate this can getSuper work by itself now? If we're a class instance and the parent is also a class instance then super means our parent.", "target": 1}
{"idx": 15334, "func": "//GenTypedElementImpl", "target": 0}
{"idx": 15335, "func": "this vfs has an extended attribute which is not in the list. add it to the end with a ref count of 1", "target": 0}
{"idx": 15336, "func": "variable, or function with no parameter list", "target": 0}
{"idx": 15337, "func": "Avoid double-copying for reads that are larger than the buffer size, or the destination is a direct buffer. //", "target": 0}
{"idx": 15338, "func": "Internal class for handling key events during editing of both JTextField and JTextArea. Since neither cell nor popup are allowed to edit, just ignore anything seen here.", "target": 0}
{"idx": 15339, "func": "line 556", "target": 0}
{"idx": 15340, "func": "//{{{ synchronizeMultiFileSettings() method", "target": 0}
{"idx": 15341, "func": "(value == null) && (oldValue == null) A simple set/unset will suffice. //", "target": 0}
{"idx": 15342, "func": "count how many rows this WHERE matches", "target": 0}
{"idx": 15343, "func": "value is a List of Strings", "target": 0}
{"idx": 15344, "func": "Column 0 Row 1", "target": 0}
{"idx": 15345, "func": "//{{{ updateCaption() method", "target": 0}
{"idx": 15346, "func": "create transient item", "target": 0}
{"idx": 15347, "func": "//do replacements", "target": 0}
{"idx": 15348, "func": "so we break the loops in SampleWithListener and SampleWithReceive", "target": 0}
{"idx": 15349, "func": "Not needed currently for UML 2", "target": 0}
{"idx": 15350, "func": "The byte is automatically widened into an int, with sign extension, for shifting. This can introduce 1's to the left of the byte, which must be cleared by masking before looking up the hex digit. //", "target": 0}
{"idx": 15351, "func": "call the function in the app code that checks for unexpected conditions in the current DB", "target": 0}
{"idx": 15352, "func": "sleep 5 minutes", "target": 0}
{"idx": 15353, "func": "TODO verify this is correct", "target": 1}
{"idx": 15354, "func": "clone should never return null", "target": 0}
{"idx": 15355, "func": "Set the name:", "target": 0}
{"idx": 15356, "func": "computes the true (non relative) max stack size of this block", "target": 0}
{"idx": 15357, "func": "Fill 26 of value (byte) -3 Fill 60 of value (byte) 33", "target": 0}
{"idx": 15358, "func": "the clone and the original share a reference to the SAME dataset", "target": 0}
{"idx": 15359, "func": "getting last selection", "target": 0}
{"idx": 15360, "func": "Check for old id behaviour", "target": 0}
{"idx": 15361, "func": "Only interrupt for one todoitem", "target": 0}
{"idx": 15362, "func": "Have to catch this because of the semantics of calling main()", "target": 0}
{"idx": 15363, "func": "// public List getCollectionAliases() { // return collectionAliases; // } // public List getCollectionOwners() { // return collectionOwners; // } // public List getCollectionOwnerAliases() { // return collectionOwnerAliases; // } // public List getCollectionPersisters() { // return collectionPersisters; // } // public Map getAlias2Persister() { // return alias2Persister; // } // public boolean isCollectionInitializer() { // return isCollectionInitializer; // } //// public List getPersisters() { //// return persisters; //// } // public Map getAlias2OwnerAlias() { // return alias2OwnerAlias; // } // public List getScalarTypes() { // return scalarTypes; // } // public List getScalarColumnAliases() { // return scalarColumnAliases; // } // public List getPropertyResults() { // return propertyResults; // } // public List getCollectionPropertyResults() { // return collectionResults; // } // public Map getAlias2Return() { // return alias2Return; // }", "target": 0}
{"idx": 15364, "func": "old command-specific selection", "target": 0}
{"idx": 15365, "func": "get charset from message", "target": 0}
{"idx": 15366, "func": "through reflection", "target": 0}
{"idx": 15367, "func": "Parse to extract the archives that will be delegated to the nested URL based on the number of schemes at the start. //", "target": 0}
{"idx": 15368, "func": "Class under test for HeaderItemList getHeaderItemList()", "target": 0}
{"idx": 15369, "func": "make some files dirty //", "target": 0}
{"idx": 15370, "func": "three args, no block; load NULL_BLOCK", "target": 0}
{"idx": 15371, "func": "wait for command to complete", "target": 0}
{"idx": 15372, "func": "comboBox.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));", "target": 0}
{"idx": 15373, "func": "@see org.argouml.ui.explorer.TreeModelUMLEventListener#modelElementChanged(java.lang.Object)", "target": 0}
{"idx": 15374, "func": "Check if all local uids have been deleted", "target": 0}
{"idx": 15375, "func": "physically consecutive", "target": 0}
{"idx": 15376, "func": "must be called under lock", "target": 0}
{"idx": 15377, "func": "Parse to count the archive paths that must will be delegated to the nested URL based on the number of schemes at the start. //", "target": 0}
{"idx": 15378, "func": "//TODO: this needn't exclude subclasses...", "target": 1}
{"idx": 15379, "func": "TODO: Ignore and report exception until getTop implemented.", "target": 1}
{"idx": 15380, "func": "Now we are sure dm is a Composite State.", "target": 0}
{"idx": 15381, "func": "// return method.getParameterTypes().length == 1 // && method.getParameterTypes()[0] == int.class // && method.getReturnType() != Void.TYPE;", "target": 0}
{"idx": 15382, "func": "@see org.argouml.ui.TabTarget#refresh()", "target": 0}
{"idx": 15383, "func": "//Add all the dependency data to manifest for \"optional\" //dependencies", "target": 0}
{"idx": 15384, "func": "now check that the chart is usable...", "target": 0}
{"idx": 15385, "func": "//{{{ initResources() method", "target": 0}
{"idx": 15386, "func": "//negative values are allowed //parameter value is > 10 The Math.log() function is based on e not 10.", "target": 0}
{"idx": 15387, "func": "Walk the project looking for .java files to analyze. //", "target": 0}
{"idx": 15388, "func": "set contents of mymatch equal to newMatch", "target": 0}
{"idx": 15389, "func": "^D", "target": 0}
{"idx": 15390, "func": "in case we have to add another \"0\"", "target": 0}
{"idx": 15391, "func": "this is necessary to do!", "target": 0}
{"idx": 15392, "func": "This is GROSS, but Java API's aren't ISO 8601 compliant at all", "target": 1}
{"idx": 15393, "func": "in the rendering process, there is special handling for item zero, so we can't support processing of visible data items only", "target": 0}
{"idx": 15394, "func": "Expand variables, Indentation of final marker", "target": 0}
{"idx": 15395, "func": "Ctor. @param msg Message describing the error.", "target": 0}
{"idx": 15396, "func": "// private static ILogger s_log = // LoggerController.createLogger(SessionExpander.class);", "target": 0}
{"idx": 15397, "func": "we found a starttoken, is there an endtoken following? start at token+tokenlength because start and end token may be indentical", "target": 0}
{"idx": 15398, "func": "they're too troublesome", "target": 0}
{"idx": 15399, "func": "if we're not the \"argument scope\" for zsuper, try our parent", "target": 0}
{"idx": 15400, "func": "delete the row from the table", "target": 0}
{"idx": 15401, "func": "this frame should really go away when done", "target": 0}
{"idx": 15402, "func": "(non-Javadoc) @see org.columba.mail.folder.IMailbox#addMessage(java.io.InputStream, org.columba.ristretto.message.Attributes)", "target": 0}
{"idx": 15403, "func": "Primary Key name", "target": 0}
{"idx": 15404, "func": "left", "target": 0}
{"idx": 15405, "func": "get WHERE clause using original value", "target": 0}
{"idx": 15406, "func": "done done done done", "target": 0}
{"idx": 15407, "func": "first and second run", "target": 0}
{"idx": 15408, "func": "Track the time in aggregate for the script.", "target": 0}
{"idx": 15409, "func": "calculate the sum and count", "target": 0}
{"idx": 15410, "func": "//MappingPackage", "target": 0}
{"idx": 15411, "func": "Look for slash, starting from 'start' position, until 'end'.", "target": 0}
{"idx": 15412, "func": "Should check for strict java here and use isJavaAssignable() instead", "target": 1}
{"idx": 15413, "func": "just check whether this throws an exception", "target": 0}
{"idx": 15414, "func": "@see GUISettingsTabInterface#getTabPanel()", "target": 0}
{"idx": 15415, "func": "Process the annotations. //", "target": 0}
{"idx": 15416, "func": "//i18n[syntax.tables=Tables]", "target": 0}
{"idx": 15417, "func": "Parse mixed content.", "target": 0}
{"idx": 15418, "func": "If there is an lower bound, the type argument must bound it. //", "target": 0}
{"idx": 15419, "func": "compile first node as non-expr and compile second node", "target": 0}
{"idx": 15420, "func": "Roles", "target": 0}
{"idx": 15421, "func": "//{{{ getHandler() method", "target": 0}
{"idx": 15422, "func": "get values from components", "target": 0}
{"idx": 15423, "func": "retrieve list of all group members", "target": 0}
{"idx": 15424, "func": "lenient is set next", "target": 0}
{"idx": 15425, "func": "PostgreSQL 8.0 reports length as -1 sometimes. Why??", "target": 0}
{"idx": 15426, "func": "//handle panning if we have a start point else unregister", "target": 0}
{"idx": 15427, "func": "We tested this above - do we need to test again?", "target": 1}
{"idx": 15428, "func": "@see org.argouml.cognitive.ui.Wizard#getNumSteps()", "target": 0}
{"idx": 15429, "func": "notify listeners @see org.columba.mail.gui.composer.SubjectController", "target": 0}
{"idx": 15430, "func": "-ndata", "target": 0}
{"idx": 15431, "func": "//_prefs = plugin.getLAFPreferences();", "target": 0}
{"idx": 15432, "func": "original exception is on stack", "target": 0}
{"idx": 15433, "func": "This assumes the header names are all single words with no spaces word followed by 0 or more repeats of (non-word char + word) where the non-word char (\\2) is the same e.g. abc|def|ghi but not abd|def~ghi $NON-NLS-1$ last entries may be quoted strings", "target": 0}
{"idx": 15434, "func": "line 1247", "target": 0}
{"idx": 15435, "func": "//{{{ EnhancedButton constructor", "target": 0}
{"idx": 15436, "func": "set proxy port", "target": 0}
{"idx": 15437, "func": "only match against regexp if its not all digits; if all digits, no point matching", "target": 0}
{"idx": 15438, "func": "DIGIT OPERATOR \\d if RE_CHAR_CLASS_ESCAPES is set", "target": 0}
{"idx": 15439, "func": "CREATE UNIQUE INDEX indexName ON tableName USING btree (column1, column2) TABLESPACE WHERE constraints;", "target": 0}
{"idx": 15440, "func": "@see org.argouml.uml.ui.UMLComboBoxModel2#setSelectedItem(java.lang.Object)", "target": 0}
{"idx": 15441, "func": "this may be negative", "target": 1}
{"idx": 15442, "func": "i18n [MemoryPanel.gcStatus={0}\\n\\n //Sessions waiting for garbage collection:\\n //==================================================\\n //{1}\\n //Sessions open:\\n //==================================================\\n //{2}\\n //Sessions garbage collected:\\n //==================================================\\n //{3}\\n]", "target": 0}
{"idx": 15443, "func": "prepend ./ if . is not already there, since we're loading based on CWD", "target": 0}
{"idx": 15444, "func": "Indicate that we are done processing the loop", "target": 0}
{"idx": 15445, "func": "create MessageNode", "target": 0}
{"idx": 15446, "func": "set the line style to solid by default", "target": 0}
{"idx": 15447, "func": "The owner should always have already been set in the constructor", "target": 0}
{"idx": 15448, "func": "this is a collection initializer, so we must create a collection for each of the passed-in keys, to account for the possibility that the collection is empty and has no rows in the result set", "target": 0}
{"idx": 15449, "func": "No need to check it again", "target": 0}
{"idx": 15450, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#supportsSchemas()", "target": 0}
{"idx": 15451, "func": "line 1681", "target": 0}
{"idx": 15452, "func": "the parse did not find XML, or it was mal-formed", "target": 0}
{"idx": 15453, "func": "while its broken to have a null symlinkPath, some older plugins might...", "target": 1}
{"idx": 15454, "func": "TODO: This should really be coded the other way round, to only act on associations which are important for representing the current perspective (and to only act on a single end of the association) - tfm", "target": 1}
{"idx": 15455, "func": "then check it implements XMLReader", "target": 0}
{"idx": 15456, "func": "We could make this expectation more restrictive currently. However, we might have impls that have wildly different queries in the future. We don't want to sacrifice flexibility to use this test for a \"perceived\" benefit of mirroring the current implementations.", "target": 0}
{"idx": 15457, "func": "try null zone", "target": 0}
{"idx": 15458, "func": "get position of the pattern in the text", "target": 0}
{"idx": 15459, "func": "Create the panel and add the GUI items to it", "target": 0}
{"idx": 15460, "func": "//TODO check there is no actual definition elemnents when a ref is defined", "target": 1}
{"idx": 15461, "func": "if there is only one package in the model, we should suppose it's the profile model, if there is more than one, we take the ones marked as <<profile>>", "target": 0}
{"idx": 15462, "func": "$NON-NLS-1$ maintain original default", "target": 0}
{"idx": 15463, "func": "if the release version doesn't change, we won't be pulling down core artifacts. So, we just need to make sure that all core files have been copied from their installed locations into the corresponding directory in download, which is in the CLASSPATH of the updater. This covers the case where the update is being run for the first time after install, and no new version is available, but the user wants to install/remove plugins and/or translations.", "target": 0}
{"idx": 15464, "func": "//a newly instantiated collection can't have orphans", "target": 0}
{"idx": 15465, "func": "SCCS", "target": 0}
{"idx": 15466, "func": "//con.getProperties().put(\"USERID\", pgpItem.get(\"id\"));", "target": 0}
{"idx": 15467, "func": "//{{{ BufferOptions constructor", "target": 0}
{"idx": 15468, "func": "//proxy setup if enabled", "target": 0}
{"idx": 15469, "func": "//reverse order", "target": 0}
{"idx": 15470, "func": "append URLs to global classloader", "target": 0}
{"idx": 15471, "func": "If the property is a special collection property name, return a CollectionPropertyMapping.", "target": 0}
{"idx": 15472, "func": "Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq) it doesn't initialize ifNone field", "target": 0}
{"idx": 15473, "func": "Needed to make the panel set the divider location from preferences", "target": 0}
{"idx": 15474, "func": "note that string place holder adjusts indentation to correct this trackAndReplace method is used below", "target": 0}
{"idx": 15475, "func": "create an array of strings for input to the compiler: one array comes from the compile options, the other from the compileList", "target": 0}
{"idx": 15476, "func": "the next one up must also be", "target": 0}
{"idx": 15477, "func": "FIXME: Consider fixing node_assign itself rather than single case", "target": 1}
{"idx": 15478, "func": "are we at ''", "target": 0}
{"idx": 15479, "func": "write the remaining characters", "target": 0}
{"idx": 15480, "func": "//get upper bound value", "target": 0}
{"idx": 15481, "func": "cleanup: remove port number file", "target": 1}
{"idx": 15482, "func": "Create the options model. //", "target": 0}
{"idx": 15483, "func": "create the IV for the password generation algorithm", "target": 0}
{"idx": 15484, "func": "figure out what type of axis we have and instantiate the appropriate panel", "target": 0}
{"idx": 15485, "func": "reverse regexp search not supported yet, so 'simulate' with restart", "target": 0}
{"idx": 15486, "func": "//{{{ CommandsMenuButton constructor", "target": 0}
{"idx": 15487, "func": "re-open composer view", "target": 0}
{"idx": 15488, "func": "//{{{ updateEnabled() method", "target": 0}
{"idx": 15489, "func": "//{{{ Load user catalog", "target": 0}
{"idx": 15490, "func": "--------------------------------------------------------", "target": 0}
{"idx": 15491, "func": "sql server just returns automatically", "target": 0}
{"idx": 15492, "func": "At development time, the real factory may not be available. Just return null. //", "target": 0}
{"idx": 15493, "func": "One may ask why we don't register the key strokes permanently. When we did so with two internal frames open, the key stroke event sometimes went to the wrong frame. This doesn't happen if we procede like we do. The question is, why?", "target": 0}
{"idx": 15494, "func": "otherwise, we only need to flush if there are in-memory changes to the queried tables", "target": 0}
{"idx": 15495, "func": "global option", "target": 0}
{"idx": 15496, "func": "Object[] args = { typeName, elemName }; misc.name.element-import = Imported {0}: {1} return Translator .localize(\"misc.name.element-import\", args);", "target": 0}
{"idx": 15497, "func": "Create the Huffman decoding tables", "target": 0}
{"idx": 15498, "func": "//{{{ VFS constructor", "target": 0}
{"idx": 15499, "func": "If there are no arguments, we can send a file as the body of the request", "target": 0}
{"idx": 15500, "func": "Change visibility so others can see it", "target": 0}
{"idx": 15501, "func": "the root of the incoming property path matched one of the embedded composite identifier properties", "target": 0}
{"idx": 15502, "func": "if IMAP selectable folder -> lightgray font color and italic", "target": 0}
{"idx": 15503, "func": "shape filled =", "target": 0}
{"idx": 15504, "func": "todo : we can actually just determine this from the incoming EntityEntry-s", "target": 1}
{"idx": 15505, "func": "get unique id", "target": 0}
{"idx": 15506, "func": "Skip all whitespace in pack format string", "target": 0}
{"idx": 15507, "func": "Finds a type in a model by name FIXME: duplicated from the method with the same name in org.argouml.profile.internal.ModelUtils. @param s the type name @param model the model @return the type or <code>null</code> if the type has not been found.", "target": 1}
{"idx": 15508, "func": "line 832", "target": 0}
{"idx": 15509, "func": "roll correctly over years", "target": 0}
{"idx": 15510, "func": "For some reason ListSet.equals() allocates a lot of memory, well some memory at least. Lets try to avoid that when not needed by invoking this test only when the two previous tests are not decisive.", "target": 1}
{"idx": 15511, "func": "if there's a non-null superclass, we're including into a normal class hierarchy; update subclass relationships to avoid stale parent/child relationships", "target": 0}
{"idx": 15512, "func": "@see org.tigris.gef.presentation.Fig#makeSelection()", "target": 0}
{"idx": 15513, "func": "unwrap the target error", "target": 0}
{"idx": 15514, "func": "//{{{ openTemporary() method", "target": 0}
{"idx": 15515, "func": "we may be screwed here since the collection action is about to execute and we do not know the final owner key value", "target": 1}
{"idx": 15516, "func": "The one object in the resource's extent should be the root object. //", "target": 0}
{"idx": 15517, "func": "start command", "target": 0}
{"idx": 15518, "func": "this is the exception returned by ReflectHelper.getConstructor() if it cannot locate an appropriate constructor", "target": 0}
{"idx": 15519, "func": "i18n[laf.warning=Note: Changes may not take effect until the application is restarted.]", "target": 0}
{"idx": 15520, "func": "Open the output file", "target": 0}
{"idx": 15521, "func": "Hashtable implements Map", "target": 0}
{"idx": 15522, "func": "If selected, then generate parent sample, otherwise as per original controller", "target": 0}
{"idx": 15523, "func": "Work around some UTC and Daylight saving offsets", "target": 1}
{"idx": 15524, "func": "//Get all fields in java.sql.Types and store the corresponding int values", "target": 0}
{"idx": 15525, "func": "There's a few properties which are excluded from this processing:", "target": 0}
{"idx": 15526, "func": "//sort the updates by fk", "target": 0}
{"idx": 15527, "func": "This may not actually make any difference at present (the code behind addTrigger needs more work).", "target": 1}
{"idx": 15528, "func": "get headers", "target": 0}
{"idx": 15529, "func": "no wrap-round check", "target": 0}
{"idx": 15530, "func": "<!-- begin-user-doc --> The <b>Switch</b> for the model's inheritance hierarchy. It supports the call {@link #doSwitch(EObject) doSwitch(object)} to invoke the <code>caseXXX</code> method for each class of the model, starting with the actual class of the object and proceeding up the inheritance hierarchy until a non-null result is returned, which is the result of the switch. <!-- end-user-doc --> @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage @generated", "target": 0}
{"idx": 15531, "func": "//-- XSLTLiaison", "target": 0}
{"idx": 15532, "func": "Wait for all AWT events to be dispatched and processed", "target": 0}
{"idx": 15533, "func": "scroll ahead", "target": 0}
{"idx": 15534, "func": "cache the actual id of the object, not the value of the property-ref, which might not be initialized", "target": 0}
{"idx": 15535, "func": "finally, set JavaSupport.isEnabled to true", "target": 0}
{"idx": 15536, "func": "local scopes are argument scopes by default", "target": 0}
{"idx": 15537, "func": "//notice that we skip the first table; it is the driving table!", "target": 0}
{"idx": 15538, "func": "throw", "target": 0}
{"idx": 15539, "func": "////////////////////////////////////////////////////////////////////////test exception segments //////////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 15540, "func": "//for each tick to be displayed", "target": 0}
{"idx": 15541, "func": "could be null if it has been deleted via NameUpdater", "target": 0}
{"idx": 15542, "func": "paint inner border g2d.setPaint(INNER);", "target": 0}
{"idx": 15543, "func": "actual call that executes everything", "target": 0}
{"idx": 15544, "func": "...nothing", "target": 0}
{"idx": 15545, "func": "//System.exit(0);", "target": 0}
{"idx": 15546, "func": "these are all more or less global loop variables to keep from needing to pass them all into various methods during parsing", "target": 0}
{"idx": 15547, "func": "add duplicates as per bug", "target": 0}
{"idx": 15548, "func": "If this is windows, check the default installation location for the aspell.exe binary.", "target": 0}
{"idx": 15549, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#handleError(net.sourceforge.squirrel_sql.plugins.dbcopy.event.ErrorEvent)", "target": 0}
{"idx": 15550, "func": "line contains \"-\" (mozilla mbox style) -> import message in Columba", "target": 0}
{"idx": 15551, "func": "i18n[popupeditableIoPanel.commandReturnNot0=The convention for command returns is that 0 means success, but this command returned {0}.\\nDo you wish to import the file contents anyway?]", "target": 0}
{"idx": 15552, "func": "60s a further 30s", "target": 0}
{"idx": 15553, "func": "Agency manages Critics. Since classes are not really first class objects in java, a singleton instance of Agency is made and passed around as needed. The Agency keeps a registry of all Critics that should be applied to each type of design material. When a design material instance is critiqued it asks Agency to apply all registered Critic's. In the current scheme there is a thread that proactively, continuously critiques the Design at hand, even if the user is idle! This is simple and it works. The disadvantage is that _all_ active critics related to a given design material are applied, regardless of the reason for the critiquing and a lot of CPU time is basically wasted. <p> TODO: I am moving toward a more reactionary scheme in which specific design manipulations in the editor cause critics relevant to those manipulations to be applied. This transition is still half done. Triggers are the critiquing requests. The code for triggers is currently dormant (latent?).<p> TODO: There is a strong dependency cycle between Agency and Designer. They either need to be merged into a single class or partitioned differently, perhaps using an interface to break the cycle. The Designer singleton gets passed to almost every single part of the Critic subsystem, creating strong coupling throughout. - tfm 20070620 @author Jason Robbins", "target": 1}
{"idx": 15554, "func": "Directories and unavailable resources are not able to open a stream.", "target": 0}
{"idx": 15555, "func": "progress bar", "target": 0}
{"idx": 15556, "func": "//////////////////////////////////////////////////////////////////////Split the first two matching toplevel brakets here", "target": 0}
{"idx": 15557, "func": "adds the instruction to the bytecode of the method", "target": 0}
{"idx": 15558, "func": "handle special case of BoxAndWhiskerDataset", "target": 0}
{"idx": 15559, "func": "schedule the update note that we intentionally do _not_ pass in currentPersistentState!", "target": 0}
{"idx": 15560, "func": "You cannot add any children for a type parameter. //", "target": 0}
{"idx": 15561, "func": "Generate and register the OSXAdapter, passing the methods we wish to use as delegates for various com.apple.eawt.ApplicationListener methods", "target": 0}
{"idx": 15562, "func": "//TODO: need to make the majority of this functionality into a top-level support class for custom impl support", "target": 1}
{"idx": 15563, "func": "i18n[SchemasTab.title=Schemas]", "target": 0}
{"idx": 15564, "func": "Loads", "target": 0}
{"idx": 15565, "func": "//{{{ ColorRenderer constructor", "target": 0}
{"idx": 15566, "func": "If there are no collection fetches, then no further checks are needed", "target": 0}
{"idx": 15567, "func": "@see org.argouml.uml.ui.UMLUserInterfaceContainer#formatNamespace(java.lang.Object)", "target": 0}
{"idx": 15568, "func": "the proxy (wrapper) type hierarchy", "target": 0}
{"idx": 15569, "func": "no match with link tags", "target": 0}
{"idx": 15570, "func": "If truncate was attempted and not supported, then try delete. If on the other hand delete was attempted, just throw the SQLException that resulted from the delete.", "target": 0}
{"idx": 15571, "func": "This cannot be a JMeter class variable, because properties are not initialised until later.", "target": 0}
{"idx": 15572, "func": "removedLocalUids = localUids.size() - 1 - position;", "target": 0}
{"idx": 15573, "func": "//readers.removeElement(Thread.currentThread());", "target": 0}
{"idx": 15574, "func": "i18n[popupeditableIoPanel.replaceFile=(In command, the string {0} is replaced by the file name when Executed.)]", "target": 0}
{"idx": 15575, "func": "check the new maximum date relative to the current minimum date", "target": 0}
{"idx": 15576, "func": "end class CrNonAggDataType", "target": 0}
{"idx": 15577, "func": "Ignore any nested exceptions. We don't want infinite loop.", "target": 0}
{"idx": 15578, "func": "//myWriter,", "target": 0}
{"idx": 15579, "func": "@see javax.swing.JTree#fireTreeCollapsed(javax.swing.tree.TreePath)", "target": 0}
{"idx": 15580, "func": "Delete old message from server if the feature is enabled", "target": 0}
{"idx": 15581, "func": "not really a many-to-one association necessarily", "target": 0}
{"idx": 15582, "func": "register custom DataTypeComponent factory for DB2 XML", "target": 0}
{"idx": 15583, "func": "mutation depends on the types of nodes invloved...", "target": 0}
{"idx": 15584, "func": "//IProcedureInfo[] procs = metaData.getProcedures(catalog,null,null);", "target": 0}
{"idx": 15585, "func": "If the element starts with the configured prefix, then convert the prefix to the configured 'to' value.", "target": 0}
{"idx": 15586, "func": "Many system have been reported to get into trouble with long command lines - no, not only Windows ;-). POSIX seems to define a lower limit of 4k, so use a temporary file if the total length of the command line exceeds this limit.", "target": 0}
{"idx": 15587, "func": "end class ToDoByOffender", "target": 0}
{"idx": 15588, "func": "should invoke seek on realIo", "target": 0}
{"idx": 15589, "func": "icon // putValue(SMALL_ICON, ImageLoader // .getSmallImageIcon(\"apply-filters-16.png\"));", "target": 0}
{"idx": 15590, "func": "end class ActionOpenDecisions", "target": 0}
{"idx": 15591, "func": "//its already loaded so don't need to hydrate it", "target": 0}
{"idx": 15592, "func": "for hasMoreData to ever be false, all data would have had to have been copied to the raw buffer", "target": 0}
{"idx": 15593, "func": "//{{{ scrollTo() method", "target": 0}
{"idx": 15594, "func": "TODO support other name kinds", "target": 1}
{"idx": 15595, "func": "i18n[ViewLogsSheet.info.nulllogfile=Null log file name]", "target": 0}
{"idx": 15596, "func": "insert header for attachment list", "target": 0}
{"idx": 15597, "func": "add array to vector", "target": 0}
{"idx": 15598, "func": "If it is concurrent and contains concurrent regions, the regions are resized", "target": 0}
{"idx": 15599, "func": "Returns the upper half bitmask for all AsCII characters between the two given characters, inclusive.", "target": 0}
{"idx": 15600, "func": "@see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()", "target": 0}
{"idx": 15601, "func": "Ensure we use default bundle", "target": 0}
{"idx": 15602, "func": "Tree is created depth first, so this should be at the bottom", "target": 0}
{"idx": 15603, "func": "oops, something went wrong", "target": 0}
{"idx": 15604, "func": "i18n[codecompletion.prefs.table.spWithoutParams=SP without params]", "target": 0}
{"idx": 15605, "func": "seem to be the same...", "target": 0}
{"idx": 15606, "func": "Scrollbars are \"shown always\" to stop sheet resizing when they are shown/hidden.", "target": 0}
{"idx": 15607, "func": "// private SQLDriverPropertyCollection _sqlDriverProps;", "target": 0}
{"idx": 15608, "func": "calculate the bar width", "target": 0}
{"idx": 15609, "func": "apply transparent icon", "target": 0}
{"idx": 15610, "func": "@see org.argouml.uml.diagram.ui.UMLDiagram#propertyChange(java.beans.PropertyChangeEvent)", "target": 0}
{"idx": 15611, "func": "add another value", "target": 0}
{"idx": 15612, "func": "Now try buffer.<property>", "target": 0}
{"idx": 15613, "func": "return the resource to its original name:", "target": 0}
{"idx": 15614, "func": "Index is also used for accessing editors array", "target": 0}
{"idx": 15615, "func": "//labelLinkStyle;", "target": 0}
{"idx": 15616, "func": "No actual test, so do 'when' if when expression is not nil", "target": 0}
{"idx": 15617, "func": "TODO is sync really needed?", "target": 1}
{"idx": 15618, "func": "load instance of service", "target": 0}
{"idx": 15619, "func": "Can't instantiate", "target": 0}
{"idx": 15620, "func": "ruby constants for strings (should this be moved somewhere else?)", "target": 1}
{"idx": 15621, "func": "lets concatenate it to the resulting string (genStr)", "target": 0}
{"idx": 15622, "func": "create search criteria", "target": 0}
{"idx": 15623, "func": "//Mainly for OSCache", "target": 0}
{"idx": 15624, "func": "Enebo: c can never be antrhign but '.' Why did I put this here?", "target": 0}
{"idx": 15625, "func": "get UTF-8 bytes for the remaining sub-string", "target": 0}
{"idx": 15626, "func": "since xmlns=\"\" is default declaration, remove \"\"->empty_URI mapping", "target": 0}
{"idx": 15627, "func": "i18n[TriggerDetailsTab.title=Details]", "target": 0}
{"idx": 15628, "func": "Prepare for CreateSibling item addition or removal. //$NON-NLS-1$ //$NON-NLS-1$", "target": 0}
{"idx": 15629, "func": "Generate the constructors", "target": 0}
{"idx": 15630, "func": "//{{{ isDownloadingList() method", "target": 0}
{"idx": 15631, "func": "ANALYZE Checkbox", "target": 0}
{"idx": 15632, "func": "urlGenerator", "target": 0}
{"idx": 15633, "func": "TODO: Add filename ?", "target": 0}
{"idx": 15634, "func": "i18n[graph.selGraphToAdd=Select the graph to add the selected tables to]", "target": 0}
{"idx": 15635, "func": "an official rule, clarified: if the exponent <clarif>after adjusting for exponent form</clarif> is < -4, or the exponent <clarif>after adjusting for exponent form</clarif> is greater than the precision, use exponent form", "target": 0}
{"idx": 15636, "func": "@see org.argouml.uml.reveng.ImportCommon#isChangedOnlySelected()", "target": 0}
{"idx": 15637, "func": "serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 15638, "func": "create empty structure value", "target": 0}
{"idx": 15639, "func": "end AbstractOptionPane implementation", "target": 0}
{"idx": 15640, "func": "else if the y coordinate is outside of the classifier role, we fix the y in the max y of the classifier role. FIXME: We should increase the height of the classifier role, don't???", "target": 1}
{"idx": 15641, "func": "Identity map of array holder ArrayHolder instances, by the array instance", "target": 0}
{"idx": 15642, "func": "(with blockSize 900k) 256 byte", "target": 0}
{"idx": 15643, "func": "//_tableModel.setTarget(_target); //_table.setModel(_tableModel);", "target": 0}
{"idx": 15644, "func": "If there was no Action yet, create a CallAction:", "target": 0}
{"idx": 15645, "func": "root.setAttribute(AShape.A_REPORT_HIT_SHAPE, Boolean.TRUE);", "target": 0}
{"idx": 15646, "func": "sourceSeparator == LABEL_NO_SEPARATOR", "target": 0}
{"idx": 15647, "func": "(non-Javadoc) Method declared on Dialog.", "target": 0}
{"idx": 15648, "func": "//Add all the dependency data to manifest for dependencies", "target": 0}
{"idx": 15649, "func": "TODO: Bob says - This is a really nasty horrible hack. ShadowFig should not extend FigNodeModelElement. Instead we require a base class FigNode with common behaviour of ALL nodes in ArgoUML. ShadowFig should extend that and FigNodeModelElement should extend that same base class adding common functionality for FigNode that represent model element. @see org.argouml.uml.diagram.ui.FigNodeModelElement#setShadowSize(int)", "target": 1}
{"idx": 15650, "func": "get selected stuff", "target": 0}
{"idx": 15651, "func": "TODO should this throw an error?", "target": 1}
{"idx": 15652, "func": "Buffer a token so we can create a TokenRepeated, etc.", "target": 0}
{"idx": 15653, "func": "copy a range that includes only the first item in the series...", "target": 0}
{"idx": 15654, "func": "After the lexer has been set up, scroll the reader so that it is in the correct spot as well.", "target": 0}
{"idx": 15655, "func": "TODO: BooleanExpresion is removed from UML2.x, is it OK to use ValueSpecification?", "target": 1}
{"idx": 15656, "func": "Log that we are going to build...", "target": 0}
{"idx": 15657, "func": "now check to see if the original contents were <null> and we have actually added the input char to the end of it", "target": 0}
{"idx": 15658, "func": "end class ActionAddExistingRelatedNode", "target": 0}
{"idx": 15659, "func": "//value is the entity name", "target": 0}
{"idx": 15660, "func": "i18n[SchemaPropertiesPanel.CacheSchemaIndependentMetaData=Cache Schema independent meta data (Catalogs, Keywords, Data types, Global functions)]", "target": 0}
{"idx": 15661, "func": "//String envfonts[] = gEnv.getAvailableFontFamilyNames();", "target": 0}
{"idx": 15662, "func": "If the last object was deleted and the selection was in the property sheet view, the obsolete wrapper will reference past the end of the list. //", "target": 0}
{"idx": 15663, "func": "FIXME: This is temporary since the variable compilers assume we want args already on stack for assignment. We just pop and continue with 1.9 args logic.", "target": 1}
{"idx": 15664, "func": "@see javax.swing.ComboBoxEditor#setItem(java.lang.Object)", "target": 0}
{"idx": 15665, "func": "... and the expected token type was an identifier, then:", "target": 0}
{"idx": 15666, "func": "All form parameter always have text/plain as mime type //TODO make this a parameter?", "target": 1}
{"idx": 15667, "func": "line 417", "target": 0}
{"idx": 15668, "func": "store the new statistical result collector", "target": 0}
{"idx": 15669, "func": "The name of the meta type is the class name (after the last .) and before the \"Impl\" or end of class name.", "target": 0}
{"idx": 15670, "func": "//calculate our destination directory; it is either the destDir //attribute, or the base dir of the fileset (for in situ updates)", "target": 0}
{"idx": 15671, "func": "Configuration items, set up by readResolve", "target": 0}
{"idx": 15672, "func": "needed later for many-to-many/filter application", "target": 0}
{"idx": 15673, "func": "i18n[exportconfig.errorSavingAliases=Error saving aliases]", "target": 0}
{"idx": 15674, "func": "Supports Session main window only", "target": 0}
{"idx": 15675, "func": "Utility function to localize the given string with help text, and show it in the status bar of the ArgoUML window. This function is used in favour of the inline call to enable later improvements; e.g. it would be possible to show a help-balloon. <p> TODO: Work this out. One matter to possibly improve: show multiple lines. @param s the given string to be localized and shown", "target": 1}
{"idx": 15676, "func": "4.5.2.20 EnumerationLiteral", "target": 0}
{"idx": 15677, "func": "//{{{ hideDockableWindow() method", "target": 0}
{"idx": 15678, "func": "Add a listener to focus changes. Rationale: reset the undo manager to start a new chain.", "target": 0}
{"idx": 15679, "func": "//System.err.println(\"DEBUG: fixed-only: \"+this.fixedString);", "target": 0}
{"idx": 15680, "func": "//XXX this array stuff is a remnant of prev trials.. gotta remove.", "target": 1}
{"idx": 15681, "func": "May be replaced by RandomOrderController", "target": 0}
{"idx": 15682, "func": "//JNDI + Serialization:", "target": 0}
{"idx": 15683, "func": "Can't delete last top level model", "target": 0}
{"idx": 15684, "func": "Create a map of partitions keyed by x coordinate", "target": 0}
{"idx": 15685, "func": "accumulate the contents into a buffer.", "target": 0}
{"idx": 15686, "func": "\"CREATE VIEW $viewName$ \" + \"AS $selectStatement$ $with$ $checkOptionType$ $checkOption$\";", "target": 0}
{"idx": 15687, "func": "This method is called whenever the month or year changes. It's job is to repaint the labels and determine whether any selection range limits have been reached.", "target": 0}
{"idx": 15688, "func": "try loading from classloader resources", "target": 0}
{"idx": 15689, "func": "//identifier collections not supported for 1-to-many", "target": 0}
{"idx": 15690, "func": "i18n[TableExportCsvDlg.executeCommand=Execute command (%file will be replaced by export file name)]", "target": 0}
{"idx": 15691, "func": "Update the domain limits: //(time is kept in msec)", "target": 0}
{"idx": 15692, "func": "line 1430", "target": 0}
{"idx": 15693, "func": "so we \"clock over\" on the first invocation", "target": 0}
{"idx": 15694, "func": "Defer all work until we're actually needed", "target": 0}
{"idx": 15695, "func": "//{{{ eval() method", "target": 0}
{"idx": 15696, "func": "i18n[sqlbookmark.noEditSelection=Please select the bookmark to edit]", "target": 0}
{"idx": 15697, "func": "//{{{ Rect class", "target": 0}
{"idx": 15698, "func": "start setup method", "target": 0}
{"idx": 15699, "func": "iss.setValue(countFiles + (i + 1) / 10);", "target": 0}
{"idx": 15700, "func": "line 1398", "target": 0}
{"idx": 15701, "func": "Through down", "target": 0}
{"idx": 15702, "func": "Test method for 'org.columba.core.tagging.TagManager.getTag(String)'", "target": 0}
{"idx": 15703, "func": "TODO: Prove that this works. The TestUMLAssociationRoleBaseComboBoxModel does not cut it. @see org.argouml.uml.ui.UMLComboBoxModel#addOtherModelEventListeners(java.lang.Object)", "target": 1}
{"idx": 15704, "func": "Restore state display", "target": 0}
{"idx": 15705, "func": "CASE 1 : Comparing to another TimeSeriesDataPair object -------------------------------------------------------", "target": 0}
{"idx": 15706, "func": "This available optional package satisfies the requirements", "target": 0}
{"idx": 15707, "func": "Need to scrape a value from the last line?", "target": 0}
{"idx": 15708, "func": "TODO @author hubms: bad: if there is a icon it is tagged or not", "target": 1}
{"idx": 15709, "func": "Create an DotNode AST for the path and resolve it.", "target": 0}
{"idx": 15710, "func": "Reroutes the connection to the old node to be connected to the new node. delegates to rerouteXXX(,,,) for each of the 4 possible edges in a class diagram: Association, Dependency, Generalization, Link. TODO: This should probably be in superclass. Many Figs can be on several diagram types. @param newNode this is the new node that one of the ends is dragged to. @param oldNode this is the existing node that is already connected. @param edge this is the edge that is being dragged/rerouted @param isSource tells us which end is being rerouted.", "target": 1}
{"idx": 15711, "func": "object is a non-null and non-void Primitive type", "target": 0}
{"idx": 15712, "func": "the starting disk number", "target": 0}
{"idx": 15713, "func": "TODO: This brute force approach of updating listeners on each and every event, without checking the event type or any other information is going to cause lots of InvalidElementExceptions in subclasses implementations of updateListeners (and they won't have the event information to make their own decisions)", "target": 1}
{"idx": 15714, "func": "add columns", "target": 0}
{"idx": 15715, "func": "some other version of the constructor", "target": 0}
{"idx": 15716, "func": "logging mechanism for errors", "target": 0}
{"idx": 15717, "func": "i18n[TableExportCsvDlg.charset=Charset:]", "target": 0}
{"idx": 15718, "func": "only show view if message is marked as spam", "target": 0}
{"idx": 15719, "func": "expect the worst", "target": 0}
{"idx": 15720, "func": "TODO: This shouldn't require two passes through the list - tfm", "target": 1}
{"idx": 15721, "func": "The loop of \"Square Root by Coupled Newton Iteration\"", "target": 0}
{"idx": 15722, "func": "//{{{ fvmget() method", "target": 0}
{"idx": 15723, "func": "cancel, if source equals destination folder", "target": 0}
{"idx": 15724, "func": "this can throw a ChangedCharsetException", "target": 0}
{"idx": 15725, "func": "This class represents all Diagrams within ArgoUML. It is based upon the GEF Diagram.<p> It adds a namespace, and the capability to delete itself when its namespace is deleted. <p> TODO: MVW: I am not sure of the following:<p> The \"namespace\" of the diagram is e.g. used when creating new elements that are shown on the diagram; they will have their namespace set according this. It is NOT necessarily equal to the \"owner\". <p> MVW: I doubt all following: The \"namespace\" of the diagram is e.g. used to register a listener to the UML model, to be notified if this element is removed; which will imply that this diagram has to be deleted, too. <p> Hence the namespace of e.g. a collaboration diagram should be the represented classifier or, in case of a represented operation, the classifier that owns this operation. And the namespace of the statechart diagram should be the namespace of its statemachine.", "target": 0}
{"idx": 15726, "func": "commented out next piece to remove failure of testcase. The testcase is probably correct but the implementation of DetailsPane is not pane.getTabs().setSelectedComponent(docPane); pane.targetSet(e); assertEquals(docPane, pane.getTabs().getSelectedComponent());", "target": 0}
{"idx": 15727, "func": "value equality //result = eval(\"key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]\"); //assertEquals(\"two\", result);", "target": 0}
{"idx": 15728, "func": "//return memberPersister.getType();", "target": 0}
{"idx": 15729, "func": "On first pass render the areas, line and outlines", "target": 0}
{"idx": 15730, "func": "years", "target": 0}
{"idx": 15731, "func": "Don't read encoding - rely on XML parser to provide one via Locator2", "target": 0}
{"idx": 15732, "func": "try lookup again under lock", "target": 0}
{"idx": 15733, "func": "line 1084", "target": 0}
{"idx": 15734, "func": "CheckStyle:MethodNameCheck OFF - bc", "target": 0}
{"idx": 15735, "func": "Lazily create the event:", "target": 0}
{"idx": 15736, "func": "build the command line from what we got the format is cleartool lock [options...] as specified in the CLEARTOOL.EXE help", "target": 0}
{"idx": 15737, "func": "line 1140", "target": 0}
{"idx": 15738, "func": "ClassifierRole ClassifierRole", "target": 0}
{"idx": 15739, "func": "checkbox for Java default/non-default format", "target": 0}
{"idx": 15740, "func": "utility is a namespace collection - also not strictly required to have operations.", "target": 0}
{"idx": 15741, "func": "3. Make sure all FigEdges are attached to a valid FigNode The report", "target": 0}
{"idx": 15742, "func": "FIXME: Clone the attributed string if it is not null", "target": 1}
{"idx": 15743, "func": "if there are entries in the table", "target": 0}
{"idx": 15744, "func": "add extra dot", "target": 0}
{"idx": 15745, "func": "line 324", "target": 0}
{"idx": 15746, "func": "// ps.close(); //just close it; do NOT try to return it to the pool! //NOTE: early exit!", "target": 0}
{"idx": 15747, "func": "//DMS should we let this exception out?", "target": 1}
{"idx": 15748, "func": "i18n[graph.width=Width]", "target": 0}
{"idx": 15749, "func": "report this?", "target": 1}
{"idx": 15750, "func": "Try to get Password from Configuration", "target": 0}
{"idx": 15751, "func": "//i18n[UpdateSummaryTable.allTranslationsLabel=All translations]", "target": 0}
{"idx": 15752, "func": "cannot be null", "target": 0}
{"idx": 15753, "func": "get meta's from <joined-subclass>", "target": 0}
{"idx": 15754, "func": "only try to load the JMX test plan if there is one", "target": 0}
{"idx": 15755, "func": "TODO not used by GUI", "target": 1}
{"idx": 15756, "func": "//ELEMENT", "target": 0}
{"idx": 15757, "func": "ignored - will never be called", "target": 0}
{"idx": 15758, "func": "Only backup once per session", "target": 0}
{"idx": 15759, "func": "Add the signature", "target": 0}
{"idx": 15760, "func": "(non-Javadoc) @see javax.swing.ListCellRenderer#getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)", "target": 0}
{"idx": 15761, "func": "//{{{ PosTopHalf constructor", "target": 0}
{"idx": 15762, "func": "Get rid of the query and the ?", "target": 0}
{"idx": 15763, "func": "Commented as per sebb http://mail-archives.apache.org/mod_mbox/jmeter-dev/201307.mbox/%3CCAOGo0VZ0z3GMbfsq_gSB%2Bp7nTUqLng6Gy2ecvYbD8_AKb-Dt5w%40mail.gmail.com%3E", "target": 0}
{"idx": 15764, "func": "Fill 7 of value (byte) -19 Fill 40 of value (byte) 33", "target": 0}
{"idx": 15765, "func": "Mac-style linebreak or EOF (or both)", "target": 0}
{"idx": 15766, "func": "//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), substituteOldValue, substituteNewValue, msg.getPosition());", "target": 0}
{"idx": 15767, "func": "don't even bother trying to read further", "target": 0}
{"idx": 15768, "func": "bottom.add( Box.createHorizontalGlue() );", "target": 0}
{"idx": 15769, "func": "//TODO: shift block right by half", "target": 1}
{"idx": 15770, "func": "EOL was \"\\r\\r\" - handle as two consecutive \"\\r\" and \"\\r\"", "target": 0}
{"idx": 15771, "func": "{min,max}", "target": 0}
{"idx": 15772, "func": "Check to see if it's an inner class 'com.company.Class$Inner'", "target": 0}
{"idx": 15773, "func": "create one", "target": 0}
{"idx": 15774, "func": "Make sure the owner alias is known...", "target": 0}
{"idx": 15775, "func": "//TableView getView();", "target": 0}
{"idx": 15776, "func": "TODO: Look up class in truth table", "target": 0}
{"idx": 15777, "func": "(non-Javadoc) @see org.columba.core.gui.frame.IFrameManager#openView(java.lang.String)", "target": 0}
{"idx": 15778, "func": "i18n[SQLFilterSheet.clearButtonLabel=Clear {0}]", "target": 0}
{"idx": 15779, "func": "Note: tabs and newlines are allowed in string fields, even though they are unusual.", "target": 0}
{"idx": 15780, "func": "@see MouseMotionListener#mouseMoved(MouseEvent)", "target": 0}
{"idx": 15781, "func": "Send different event wether we are merging a test plan into another test plan, or loading a testplan from scratch", "target": 0}
{"idx": 15782, "func": "//NOT USED protected double[][] data = null;", "target": 1}
{"idx": 15783, "func": "TODO: temporary - let tree expand implicitly - tfm", "target": 1}
{"idx": 15784, "func": "paramTable.setRowSelectionAllowed(true); paramTable.setColumnSelectionAllowed(true);", "target": 0}
{"idx": 15785, "func": "NativeSQLQueryReturn", "target": 0}
{"idx": 15786, "func": "import the package we're in by default...", "target": 0}
{"idx": 15787, "func": "Most likely cause of this is that someone deleted our target with the event pump turned off so we didn't get notification. Nothing we can do about it now and we are changing targets anyway, so just log it.", "target": 0}
{"idx": 15788, "func": "taskcontainer nested element can contain other tasks - no other nested elements possible", "target": 0}
{"idx": 15789, "func": "actual required is greater than 3, raise error (we don't support actual required > 3)", "target": 0}
{"idx": 15790, "func": "No need to log normally, as we set the status $NON-NLS-1$ $NON-NLS-1$", "target": 0}
{"idx": 15791, "func": "the entire save operation can be aborted...", "target": 0}
{"idx": 15792, "func": "A temporary cache for the focus listener", "target": 0}
{"idx": 15793, "func": "I tried the following for values under 8000 but I get Encountered unexpected exception - line 1, You cannot assign a value of type 'long byte' to a column of type 'byte varying'. Explicitly convert the value to the required type. registerColumnType(Types.VARBINARY, 8000, \"byte varying($l)\");", "target": 0}
{"idx": 15794, "func": "no attachments found", "target": 0}
{"idx": 15795, "func": "how to handle empty target lists? probably the TabText should only show an empty pane in that case", "target": 1}
{"idx": 15796, "func": "If characters don't match but case may be ignored, try converting both characters to uppercase. If the results match, then the comparison scan should continue.", "target": 0}
{"idx": 15797, "func": "//{{{ getToolBar() method", "target": 0}
{"idx": 15798, "func": "//centerPanel.add( Box.createRigidArea( new java.awt.Dimension(0,5) ) ); //centerPanel.add( Box.createRigidArea( new java.awt.Dimension(0,5) ) );", "target": 0}
{"idx": 15799, "func": "-------------------------------------------------------------------------- Corresponding size and opcodes --------------------------------------------------------------------------", "target": 0}
{"idx": 15800, "func": "We'll always be wrong for these arguments, so don't bother re-checking. //", "target": 0}
{"idx": 15801, "func": "//iri = iri || containsNonASCII(segments[i]);", "target": 0}
{"idx": 15802, "func": "Scheme used for slow HTTP sockets. Cannot be set as a default, because must be set on an HttpClient instance.", "target": 0}
{"idx": 15803, "func": "//if either of them is missing, they are different", "target": 0}
{"idx": 15804, "func": "If the region is changed to another region then we make sure that a delete event is not fired as a result. //$NON-NLS-1$", "target": 0}
{"idx": 15805, "func": "background range markers...", "target": 0}
{"idx": 15806, "func": "MBCLEN_INVALID_P", "target": 0}
{"idx": 15807, "func": "These will be the children belonging to this feature. //", "target": 0}
{"idx": 15808, "func": "//TODO: What can we do with other kind of actions?", "target": 1}
{"idx": 15809, "func": "(non-Javadoc) @see org.eclipse.jface.dialogs.Dialog#createButtonsForButtonBar(org.eclipse.swt.widgets.Composite)", "target": 0}
{"idx": 15810, "func": "TODO: For large lists, this is doing a linear search of literally thousands of elements", "target": 0}
{"idx": 15811, "func": "All errors to sysread should be SystemCallErrors, but on a closed stream Ruby returns an IOError. Java throws same exception for all errors so we resort to this hack...", "target": 0}
{"idx": 15812, "func": "Have we yet tried to load the truststore?", "target": 0}
{"idx": 15813, "func": "copy a range before the start of the series data...", "target": 0}
{"idx": 15814, "func": "i18n[PreferencesPanel.lineCommentToolTip=Sequence of characters at the beginning of a line to indicate that whole line is a comment]", "target": 0}
{"idx": 15815, "func": "end class ToDoByDecision", "target": 0}
{"idx": 15816, "func": "If we're setting a handler, enable the About menu item by calling com.apple.eawt.Application reflectively", "target": 0}
{"idx": 15817, "func": "TODO: Test if the generated string is correct.", "target": 1}
{"idx": 15818, "func": "Only contains LDAPArgument entries", "target": 0}
{"idx": 15819, "func": "Now the selectors.", "target": 0}
{"idx": 15820, "func": "xalan 2", "target": 0}
{"idx": 15821, "func": "draw vertical lines", "target": 0}
{"idx": 15822, "func": "Add to an EClass //", "target": 0}
{"idx": 15823, "func": "If there is an iterator to prune. //", "target": 0}
{"idx": 15824, "func": "sample all resources with threadpool", "target": 0}
{"idx": 15825, "func": "hopefully another caret update will come?", "target": 0}
{"idx": 15826, "func": "Add context menu items to the object tree's session node. as popup menu", "target": 0}
{"idx": 15827, "func": "Set XOR mode to draw the zoom rectangle", "target": 0}
{"idx": 15828, "func": "Create a new expression:", "target": 0}
{"idx": 15829, "func": "Example for this code: Completion should from Kv k inner join fetch k.positionen as posses where posses.artNr = 'sdfsdf'", "target": 0}
{"idx": 15830, "func": "//private final Map propertyTableNumbersByName = new HashMap();", "target": 0}
{"idx": 15831, "func": "add note to user about including file name in command", "target": 0}
{"idx": 15832, "func": "TODO Should this be OK ? //assertEquals(contentEncoding, s.getContentEncoding()); Check arguments We should have one argument, with the value equal to the post body", "target": 1}
{"idx": 15833, "func": "Since there are no buttons on this panel, we have to set the size of the buttonpanel, otherwise the title would not be aligned right.", "target": 0}
{"idx": 15834, "func": "@see org.argouml.model.ModelImplementation#getActivityGraphsHelper()", "target": 0}
{"idx": 15835, "func": "SSS FIXME: Incorect!", "target": 1}
{"idx": 15836, "func": "this _is_ legal (when removing an undef)", "target": 0}
{"idx": 15837, "func": "line 902", "target": 0}
{"idx": 15838, "func": "Collect the current set of objects that should be children to this node", "target": 0}
{"idx": 15839, "func": "create stream from string", "target": 0}
{"idx": 15840, "func": "line 459", "target": 0}
{"idx": 15841, "func": "The Java method doesn't care what class it is, but we need to know what to convert it to, so we use the object's own class. If that doesn't help, we use String to force a call to the object's \"to_s\" method.", "target": 0}
{"idx": 15842, "func": "//{{{ GutterOptionPane constructor", "target": 0}
{"idx": 15843, "func": "//Has key already been loaded into resourceMap?", "target": 0}
{"idx": 15844, "func": "frameAnchor", "target": 0}
{"idx": 15845, "func": "Use the name of the test element, otherwise cannot enable/disable debug from the GUI", "target": 0}
{"idx": 15846, "func": "If this is a unix-based system, check the 2 best-known areas for the aspell binary.", "target": 0}
{"idx": 15847, "func": "can't be null - this is checked by canAddTo", "target": 0}
{"idx": 15848, "func": "If the killee thread is the same as the killer thread, just die", "target": 0}
{"idx": 15849, "func": "This comment was included in a previous version (before 1/2005) of the test which had this assertion commented out: ------ Interaction should not be removed when removing ClassifierRole... maybe if the last message is removed from the interaction but even then it's doubtfull since it will probably lead to backward compatibility problems in save formats. ------ but my reading of the UML 1.4 specification is that an Interaction without at least one message is definitely illegal, so MDR is doing the right thing by removing it in this case where we only have a single message, which then gets deleted. - tfm", "target": 0}
{"idx": 15850, "func": "i18n[editWhereColsPanel.noPK=The table ''{0}'' doesn't have a primary key.]", "target": 0}
{"idx": 15851, "func": "wrap in try/catch for security exceptions in an applet", "target": 0}
{"idx": 15852, "func": "//convert a class name into a resource", "target": 0}
{"idx": 15853, "func": "get all positions from offset to the end, inclusive", "target": 0}
{"idx": 15854, "func": "Ignore the token class name parameter, and use a specific token class.", "target": 0}
{"idx": 15855, "func": "//get the base association name", "target": 0}
{"idx": 15856, "func": "size of the central directory", "target": 0}
{"idx": 15857, "func": "now add another series", "target": 0}
{"idx": 15858, "func": "TODO: The following is carried over from setOwner, but probably isn't needed renderingChanged(); It does the following (add as needed): updateNameText(); updateStereotypeText(); updateStereotypeIcon(); updateBounds(); damage();", "target": 0}
{"idx": 15859, "func": "deal with the jmx files", "target": 0}
{"idx": 15860, "func": "advance to first entry", "target": 0}
{"idx": 15861, "func": "Add all other create child features that this item provider is responsible for. //", "target": 0}
{"idx": 15862, "func": "Only allow binary associations", "target": 0}
{"idx": 15863, "func": "draw the item shapes", "target": 0}
{"idx": 15864, "func": "the part after the || is for when there's nothing between the ()", "target": 0}
{"idx": 15865, "func": "draw the domain grid lines, if any...", "target": 0}
{"idx": 15866, "func": "Copied from Java Doc Matcher.replaceAll: Note that backslashes (\\) and dollar signs ($) in the replacement string may cause the results to be different than if it were being treated as a literal replacement string. Dollar signs may be treated as references to captured subsequences as described above, and backslashes are used to escape literal characters in the replacement string.", "target": 1}
{"idx": 15867, "func": "??? this should only be called with fully loaded action set", "target": 1}
{"idx": 15868, "func": "get the certificate request", "target": 0}
{"idx": 15869, "func": "add all of the test items from the first list", "target": 0}
{"idx": 15870, "func": "//{{{ loop through all lines of current buffer", "target": 0}
{"idx": 15871, "func": "do not scale up, i.e. no scale factor above 1.0", "target": 0}
{"idx": 15872, "func": "wow, the only time we can use the java protocol ;)", "target": 0}
{"idx": 15873, "func": "Figure out which row we're on.", "target": 0}
{"idx": 15874, "func": "Read the first character.", "target": 0}
{"idx": 15875, "func": "Record sample start time.", "target": 0}
{"idx": 15876, "func": "@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAPostfixExpressionTail(tudresden.ocl.parser.node.APostfixExpressionTail)", "target": 0}
{"idx": 15877, "func": "Try-catch only the JarFile instantiation so we don't accidentally mask anything in ArgoJarClassLoader or processJarFile.", "target": 0}
{"idx": 15878, "func": "d.supplier.oclAsType(GeneralizableElement). allParents.oclAsType(Namespace).ownedElement->select (e | e. elementOwnership.visibility = #public)->includes (r.participant) or", "target": 0}
{"idx": 15879, "func": "//Careful: these methods do not initialize the collection.", "target": 0}
{"idx": 15880, "func": "ALTER TABLE oldTableName RENAME TO newTableName;", "target": 0}
{"idx": 15881, "func": "Using index 0 is voluntary as child is removed in next step and added to new parent", "target": 0}
{"idx": 15882, "func": "//? inform()", "target": 0}
{"idx": 15883, "func": "this is the column on which the constraint to be dropped is defined", "target": 0}
{"idx": 15884, "func": "TODO: This catch block needs to be narrower and do something with the caught exception - tfm 20071120 Ignore", "target": 0}
{"idx": 15885, "func": "get list of all filter actions", "target": 0}
{"idx": 15886, "func": "//{{{ addDockableWindow() method", "target": 0}
{"idx": 15887, "func": "TODO: Check the name for validity.", "target": 0}
{"idx": 15888, "func": "clear exception when handled or retried", "target": 0}
{"idx": 15889, "func": "try the parent plot", "target": 0}
{"idx": 15890, "func": "Constructor for Function tests", "target": 0}
{"idx": 15891, "func": "//ick!", "target": 1}
{"idx": 15892, "func": "Flag the command as to whether it is first in a chain", "target": 0}
{"idx": 15893, "func": "no comparison possible", "target": 0}
{"idx": 15894, "func": "paintList", "target": 0}
{"idx": 15895, "func": "end of column", "target": 0}
{"idx": 15896, "func": "Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])", "target": 0}
{"idx": 15897, "func": "Bunch of methods still not implemented", "target": 1}
{"idx": 15898, "func": "================ testcases for the cache implementations ================", "target": 0}
{"idx": 15899, "func": "Compute the final center position of the CR", "target": 0}
{"idx": 15900, "func": "Throwable wanted", "target": 0}
{"idx": 15901, "func": "Set up the defaults (may be overridden below)", "target": 0}
{"idx": 15902, "func": "will cause trouble in JDK 1.1 if omitted", "target": 0}
{"idx": 15903, "func": "create profile model", "target": 0}
{"idx": 15904, "func": "NEWOBJ and OBJSETUP equivalent fastest one, for shared arrays, optional objectspace", "target": 0}
{"idx": 15905, "func": "The following strings are used in the test plan, and the values must not be changed if test plans are to be upwardly compatible.", "target": 0}
{"idx": 15906, "func": "Color bulletPaint = new Color(100, 100, 100);", "target": 0}
{"idx": 15907, "func": "not sure what could be the need of this...", "target": 1}
{"idx": 15908, "func": "try an array containing a single Number", "target": 0}
{"idx": 15909, "func": "(non-Javadoc) @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)", "target": 0}
{"idx": 15910, "func": "likely a wrapped exception from a LiveConnect call. Display its stack trace as a diagnostic", "target": 0}
{"idx": 15911, "func": "Now create the scriptRunner", "target": 0}
{"idx": 15912, "func": "make selected row visible again", "target": 0}
{"idx": 15913, "func": "set stop flag interrupt sampler if possible", "target": 0}
{"idx": 15914, "func": "Use jEdit colors in all text components", "target": 0}
{"idx": 15915, "func": "@see java.awt.datatransfer.Transferable#isDataFlavorSupported(java.awt.datatransfer.DataFlavor)", "target": 0}
{"idx": 15916, "func": "---- imTextField1 ----", "target": 0}
{"idx": 15917, "func": "In Oracle, ON UPDATE actions are not supported", "target": 0}
{"idx": 15918, "func": "important for cancel", "target": 0}
{"idx": 15919, "func": "Apparently it had a setItemUID, but we're not allowed to call it", "target": 0}
{"idx": 15920, "func": "Is any node an instance of one of the classes, but not an exception?", "target": 0}
{"idx": 15921, "func": "//TODO: We probably should have a StatisticsNotPublishedException, to make it clean", "target": 1}
{"idx": 15922, "func": "TODO: note lack of command.com support for Win 9x...", "target": 1}
{"idx": 15923, "func": "We MUST have a project open before continuing. Create if necessary", "target": 0}
{"idx": 15924, "func": "button.addMouseListener(new LabelMouseListener());", "target": 0}
{"idx": 15925, "func": "might throw an exception, assume this is ignorable", "target": 0}
{"idx": 15926, "func": "line 335", "target": 0}
{"idx": 15927, "func": "Only creates the other pages if there is something that can be edited //", "target": 0}
{"idx": 15928, "func": "SSS FIXME: Maybe this is not really a concern after all ... Nesting level of this scope in the lexical nesting of scopes in the current file -- this is not to be confused with semantic nesting of scopes across files. Consider this code in a file f class M1::M2::M3::C ... end So, C is at lexical nesting level of 1 (the file script is at 0) in the file 'f' Semantically it is at level 3 (M1, M2, M3 are at 0,1,2). This is primarily used to ensure that variable names don't clash! i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! private int _lexicalNestingLevel;", "target": 1}
{"idx": 15929, "func": "Use a little trick to find out where Argo is being loaded from. TODO: Use a different resource here. ARGOINI is unused and deprecated", "target": 1}
{"idx": 15930, "func": "Try explicitly imported class, e.g. import foo.Bar;", "target": 0}
{"idx": 15931, "func": "--- Begin static members ---", "target": 0}
{"idx": 15932, "func": "Start listening to the new one. //", "target": 0}
{"idx": 15933, "func": "next line coming from projectbrowser", "target": 0}
{"idx": 15934, "func": "button.setBorder(BorderFactory.createEmptyBorder(2, 0, 2, 0));", "target": 0}
{"idx": 15935, "func": "FIXME: Total hack to get flash in Rails marshalling/unmarshalling in session ok...We need to totally change marshalling to work with overridden core classes.", "target": 1}
{"idx": 15936, "func": "//The source was one of the referenced state's path which has got a new name.", "target": 0}
{"idx": 15937, "func": "mandatory constructor", "target": 0}
{"idx": 15938, "func": "End of code to allow engine to be controlled remotely", "target": 0}
{"idx": 15939, "func": "return false;", "target": 0}
{"idx": 15940, "func": "If there are no arguments, we can send a file as the body of the request TODO: needs a multiple file upload scenerio", "target": 0}
{"idx": 15941, "func": "check if previously colinear", "target": 0}
{"idx": 15942, "func": "//may be final", "target": 0}
{"idx": 15943, "func": "CmdPaste cmd = new CmdPaste(); cmd.doIt();", "target": 0}
{"idx": 15944, "func": "i18n[xmlRefomatter.unexpectedProblem=Unexpected problem during formatting.]", "target": 0}
{"idx": 15945, "func": "make sure it's not a directory (this falls into the ultra paranoid lets check everything category", "target": 0}
{"idx": 15946, "func": "EOL was \"\\r\"", "target": 0}
{"idx": 15947, "func": "use lenient input or force user to enter exact format set to allow less stringent input", "target": 0}
{"idx": 15948, "func": "DataTypes may limit the initial data read from the DB, e.g. to minimize the time needed for the initial load of the table. To edit the contents of a cell, we require that the entire contents of the data element be present in the cell before editing. Therefore we ask the DataType if we need to re-read the data contents without limiting it, and do that read if needed. If there is a problem during the read (e.g. we cannot identify exactly one row in the DB matching the current row in the table), then the cell is not editable. The reverse is not true - if we succeed in reading the data, there may still be other reasons why we cannot edit it, so we need to check for it being editable after the read", "target": 0}
{"idx": 15949, "func": "The problem with this is data is LONGVARBINARY and there are no McKoi SQL functions to convert it to a character string which is executing the SQL produced by this method is supposed to return. //return \"SELECT data FROM SYS_INFO.sUSRView where name = '\" + viewName + \"'\";", "target": 0}
{"idx": 15950, "func": "Fixme: Do we need the check or does Main.java not call this...they should consolidate", "target": 1}
{"idx": 15951, "func": "//{{{ Expansion class", "target": 0}
{"idx": 15952, "func": "use left and right, up and down", "target": 0}
{"idx": 15953, "func": "we must call the correct method on targetmanager for each added or removed target", "target": 0}
{"idx": 15954, "func": "No methods added.", "target": 0}
{"idx": 15955, "func": "send the email", "target": 0}
{"idx": 15956, "func": "isMarkup(int):boolean", "target": 0}
{"idx": 15957, "func": "//TODO", "target": 0}
{"idx": 15958, "func": "//{{{ SelectLineRange constructor", "target": 0}
{"idx": 15959, "func": "NB: this makes use of Project#setProperty rather than Project#setNewProperty due to backwards compatiblity reasons", "target": 0}
{"idx": 15960, "func": "We got passed an unmodifiable List. Copy it and sort the result", "target": 0}
{"idx": 15961, "func": "@see org.argouml.uml.util.namespace.Namespace#peekNamespaceElement()", "target": 0}
{"idx": 15962, "func": "Sticky is turned off. Just remove sticky and return.", "target": 0}
{"idx": 15963, "func": "Listen to test and handle tidyup after non-GUI test completes. If running a remote test, then after waiting a few seconds for listeners to finish files, it calls ClientJMeterEngine.tidyRMI() to deal with the Naming Timer Thread.", "target": 0}
{"idx": 15964, "func": "we set all Java methods to optional, since many/most have overloads", "target": 0}
{"idx": 15965, "func": "//////////////actions for toolbar", "target": 0}
{"idx": 15966, "func": "Test method for 'org.apache.jmeter.protocol.http.sampler.postWriter.sendPostData(URLConnection, HTTPSampler)' This method test sending file content as the only content of the post body", "target": 0}
{"idx": 15967, "func": "Called when the user selects a tab, by clicking or otherwise. @see javax.swing.event.ChangeListener#stateChanged(javax.swing.event.ChangeEvent)", "target": 0}
{"idx": 15968, "func": "else keep waiting", "target": 0}
{"idx": 15969, "func": "//private Shape upArrow;", "target": 0}
{"idx": 15970, "func": "line 1775", "target": 0}
{"idx": 15971, "func": "Test plan with OnlyOnceController inside inner loop Set up the test plan", "target": 0}
{"idx": 15972, "func": "//anything else is a classname", "target": 0}
{"idx": 15973, "func": "//{{{ setSelectionColor() method", "target": 0}
{"idx": 15974, "func": "HELPERS", "target": 0}
{"idx": 15975, "func": "update the cache", "target": 0}
{"idx": 15976, "func": "_compileCheckBox = new JCheckBox(); nameButton(_compileCheckBox, \"checkbox.compile-generated-source\"); TODO: Implement the compile feature. For now, disable the checkbox. _compileCheckBox.setEnabled(false); southPanel.add(_compileCheckBox, BorderLayout.SOUTH);", "target": 1}
{"idx": 15977, "func": "BACKREFERENCE OPERATOR \\1 \\2 ... \\9 not available if RE_NO_BK_REFS is set", "target": 0}
{"idx": 15978, "func": "//these are pathological cases, but retained in case somebody //subclassed us.", "target": 1}
{"idx": 15979, "func": "Snapshot of the system properties", "target": 0}
{"idx": 15980, "func": "Compute available height above the cursor", "target": 0}
{"idx": 15981, "func": "BSHFormalParameters will cache the type for us", "target": 0}
{"idx": 15982, "func": "----------- Private Interface ------------", "target": 0}
{"idx": 15983, "func": "return if selection change is in flux", "target": 0}
{"idx": 15984, "func": "////////////////////////////////////////////////////////////////////CONSTRUCTORS / INITIALIZERS", "target": 0}
{"idx": 15985, "func": "line 1622", "target": 0}
{"idx": 15986, "func": "get access to buffer", "target": 0}
{"idx": 15987, "func": "//++ JMX tag values $NON-NLS-1$", "target": 0}
{"idx": 15988, "func": "//60 seconds", "target": 0}
{"idx": 15989, "func": "return the text from the file since it does represent a valid value of this data type", "target": 0}
{"idx": 15990, "func": "path to account templates for POP3/IMAP", "target": 0}
{"idx": 15991, "func": "The netbeans SAXParser sets line number and column number to -1.", "target": 0}
{"idx": 15992, "func": "//TABLENAME", "target": 0}
{"idx": 15993, "func": "(non-Javadoc) @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode)", "target": 0}
{"idx": 15994, "func": "i18n[graph.showQualifiedTableNames=Show qualified table names]", "target": 0}
{"idx": 15995, "func": "//{{{ charData() method", "target": 0}
{"idx": 15996, "func": "@see org.argouml.ui.TabTarget#shouldBeEnabled(java.lang.Object)", "target": 0}
{"idx": 15997, "func": "// void setShowSqlEnabled(boolean b) { // showSql = b; // } // void setFormatSqlEnabled(boolean b) { // formatSql = b; // }", "target": 0}
{"idx": 15998, "func": "//This instead of the label ??? //displayPane.setBorder(new TitledBorder( Translator.localize(\"Display: \")));", "target": 0}
{"idx": 15999, "func": "Testing two files, one with suffix \".tmp\" and one with null", "target": 0}
{"idx": 16000, "func": "//{{{ saveSettings() method", "target": 0}
{"idx": 16001, "func": "catches null also", "target": 0}
{"idx": 16002, "func": "same as argument_types, but matches name in java.lang.reflect.Constructor/Method", "target": 0}
{"idx": 16003, "func": "4.5.2.29 Node", "target": 0}
{"idx": 16004, "func": "resolves previous forward references to label, if any", "target": 0}
{"idx": 16005, "func": "setting value", "target": 0}
{"idx": 16006, "func": "Create a Body that reacts to double-clicks and jumps to a diagram.", "target": 0}
{"idx": 16007, "func": "Make sure the collections aren't identical... //", "target": 0}
{"idx": 16008, "func": "@see javax.swing.filechooser.FileFilter#getDescription()", "target": 0}
{"idx": 16009, "func": "getSimplifiedOperand returns the value of this operand, fully simplified getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away The value is used during optimizations and propagated through the IR. But, it is thrown away after that. But, the operand form is used for constructing the compound objects represented by the operand. Example: a = [1], b = [3,4], c = [a,b], d = [2,c] -- getValue(c) = [1,[3,4]]; getSimplifiedOperand(c) = [1, b] -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. So, if contents of a or b is modified, the \"simplified value\"s of c and d also change! This difference is captured by these two methods.", "target": 0}
{"idx": 16010, "func": "add the subplots...", "target": 0}
{"idx": 16011, "func": "since we're not actually duping the incoming channel into our handler, we need to copy the original sync behavior from the other handler", "target": 0}
{"idx": 16012, "func": "(AS is always optional, for consistency with SQL/OQL)", "target": 0}
{"idx": 16013, "func": "//{{{ loadModeCatalog() method", "target": 0}
{"idx": 16014, "func": "4000 byte 4000 byte 4000 byte", "target": 0}
{"idx": 16015, "func": "TargetManager.getInstance().addTargetListener(this);", "target": 0}
{"idx": 16016, "func": "space between borders and text", "target": 0}
{"idx": 16017, "func": "create a composite with standard margins and spacing", "target": 0}
{"idx": 16018, "func": "get source folder reference", "target": 0}
{"idx": 16019, "func": "@bgen(jjtree) FormalParameters", "target": 0}
{"idx": 16020, "func": "start parsing line", "target": 0}
{"idx": 16021, "func": "filter out any Java primitive names TODO: should check against all Java reserved names here, not just primitives", "target": 1}
{"idx": 16022, "func": "aload_0 load this", "target": 0}
{"idx": 16023, "func": "//first the easy way, if all children are filesystem-only, return true:", "target": 0}
{"idx": 16024, "func": "Recompute the tables based on the accumulated frequencies.", "target": 0}
{"idx": 16025, "func": "@see javax.swing.ComboBoxEditor#addActionListener(java.awt.event.ActionListener)", "target": 0}
{"idx": 16026, "func": "@bgen(jjtree) ArrayInitializer", "target": 0}
{"idx": 16027, "func": "reset buffer", "target": 0}
{"idx": 16028, "func": "get presence", "target": 0}
{"idx": 16029, "func": "}}", "target": 0}
{"idx": 16030, "func": "pass to the super-class for handling", "target": 0}
{"idx": 16031, "func": "I/O error", "target": 0}
{"idx": 16032, "func": "appends the [head ... tail] list at the beginning of the pool list", "target": 0}
{"idx": 16033, "func": "fire event", "target": 0}
{"idx": 16034, "func": "@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAExpressionListOrRange(tudresden.ocl.parser.node.AExpressionListOrRange)", "target": 0}
{"idx": 16035, "func": "i18n[SequenceDetailsTab.title=Details]", "target": 0}
{"idx": 16036, "func": "scan base dirs to build up compile lists only if a specific classname is not given", "target": 0}
{"idx": 16037, "func": "note all fields are final -- rehash creates new entries when necessary. as documented in java.util.concurrent.ConcurrentHashMap.java, that will statistically affect only a small percentage (< 20%) of entries for a given rehash.", "target": 0}
{"idx": 16038, "func": "if all cols are in the \"to use\" side, delete from EditWhereCols", "target": 0}
{"idx": 16039, "func": "sanity check during development", "target": 0}
{"idx": 16040, "func": "We either remove the root mapping or we use the iterator that returned the most recent next mapping. //", "target": 0}
{"idx": 16041, "func": "Write a signature that will be obviously corrupt if the binary contents end up being UTF-8 encoded or altered by line feed or carriage return changes. //", "target": 0}
{"idx": 16042, "func": "FILE MENU $NON-NLS-1$", "target": 0}
{"idx": 16043, "func": "innerSeparatorExtension", "target": 0}
{"idx": 16044, "func": "//On VMS platform, we need to create a special java options file //containing the arguments and classpath for the javac command. //The special file is supported by the \"-V\" switch on the VMS JVM.", "target": 0}
{"idx": 16045, "func": "(non-Javadoc) @see org.columba.core.gui.frame.focus.FocusOwner#isPasteActionEnabled()", "target": 0}
{"idx": 16046, "func": "legacy behavior, apply the bridge...", "target": 0}
{"idx": 16047, "func": "isPubid(int):boolean", "target": 0}
{"idx": 16048, "func": "It is not a bug.", "target": 0}
{"idx": 16049, "func": "add all startup load paths to the list first", "target": 0}
{"idx": 16050, "func": "TODO: ruby locks the string here", "target": 1}
{"idx": 16051, "func": "Wrap guide", "target": 0}
{"idx": 16052, "func": "Copy all the necessary out-of-date files", "target": 0}
{"idx": 16053, "func": "//{{{ getDirectory() method", "target": 0}
{"idx": 16054, "func": "//{{{ Deprecated functions", "target": 0}
{"idx": 16055, "func": "collection deletions are a special case since update() can add deletions of collections not loaded by the session.", "target": 0}
{"idx": 16056, "func": "3-byte sequence: zzzzyyyyyyxxxxxx = 1110zzzz 10yyyyyy 10xxxxxx", "target": 0}
{"idx": 16057, "func": "line 607", "target": 0}
{"idx": 16058, "func": "Translator.localize(\"button.move-up\")", "target": 0}
{"idx": 16059, "func": "//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]", "target": 0}
{"idx": 16060, "func": "shapeList baseShape", "target": 0}
{"idx": 16061, "func": "w_symbol", "target": 0}
{"idx": 16062, "func": "(non-Javadoc) @see javax.swing.event.UndoableEditListener#undoableEditHappened(javax.swing.event.UndoableEditEvent)", "target": 0}
{"idx": 16063, "func": "Set the User-Agent string used by the java.net HTTP handler", "target": 0}
{"idx": 16064, "func": "this guard is for extra security, but should not be necessary", "target": 0}
{"idx": 16065, "func": "column IDs are all lower case", "target": 0}
{"idx": 16066, "func": "@see org.argouml.uml.ui.UMLCheckBox2#buildModel()", "target": 0}
{"idx": 16067, "func": "Only adjust the stereotype height if we are not newly created. This gets round the problem of loading classes with stereotypes defined, which have the height already including the stereotype.", "target": 0}
{"idx": 16068, "func": "If the feature is a bidirectional reference with a multiplicity-many reverse, a composite reverse, or a multiplicity-1 reverse that is already set (on value), then we'll switch things around and execute this command a little differently, because otherwise it's not undoable. //", "target": 0}
{"idx": 16069, "func": "todo : move to StringHelper?", "target": 1}
{"idx": 16070, "func": "End of RedirectOutput inner class", "target": 0}
{"idx": 16071, "func": "@see javax.swing.AbstractListModel#fireIntervalRemoved( Object, int, int)", "target": 0}
{"idx": 16072, "func": "child == parent.getFirstChild()", "target": 0}
{"idx": 16073, "func": "Locate method Runtime.exec(String[] cmdarray, String[] envp, File dir)", "target": 0}
{"idx": 16074, "func": "for each account", "target": 0}
{"idx": 16075, "func": "do the parsing", "target": 0}
{"idx": 16076, "func": "This action performs the layout and triggers a redraw of the editor pane. @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)", "target": 0}
{"idx": 16077, "func": "see note below re: 2-field kludge", "target": 1}
{"idx": 16078, "func": "@see org.tigris.gef.graph.GraphModel#getOutEdges(java.lang.Object)", "target": 0}
{"idx": 16079, "func": "skip anything not related to jruby", "target": 0}
{"idx": 16080, "func": "No ''s, so we make a shortcut", "target": 0}
{"idx": 16081, "func": "//{{{ Sort buffer list", "target": 0}
{"idx": 16082, "func": "i18n[MysqlPlugin.showTriggerSource=Show trigger source]", "target": 0}
{"idx": 16083, "func": "Status Bar", "target": 0}
{"idx": 16084, "func": "//{{{ StyleRenderer constructor", "target": 0}
{"idx": 16085, "func": "This method checks the timestamp on each file listed in the <code> ejbFiles</code> and compares them to the timestamp on the <code>jarFile </code>. If the <code>jarFile</code>'s timestamp is more recent than each EJB file, <code>true</code> is returned. Otherwise, <code>false </code> is returned. TODO: find a way to check the manifest-file, that is found by naming convention @param ejbFiles Hashtable of EJB classes (and other) files that will be added to the completed JAR file @param jarFile JAR file which will contain all of the EJB classes (and other) files @return boolean indicating whether or not the <code>jarFile</code> is up to date", "target": 1}
{"idx": 16086, "func": "theme selection changed", "target": 0}
{"idx": 16087, "func": "Connect the message at a new spot", "target": 0}
{"idx": 16088, "func": "We can assign if we already have variable of that name here or we are the only scope in the chain (which Local scopes always are).", "target": 0}
{"idx": 16089, "func": "Skip report packages as implementation is incomplete Skip report GUI as implementation is incomplete No, not a work in progress ...", "target": 0}
{"idx": 16090, "func": "@see org.tigris.gef.base.SelectionButtons#paintButtons(Graphics)", "target": 0}
{"idx": 16091, "func": "and store configuration props", "target": 0}
{"idx": 16092, "func": "if either its role changed,", "target": 0}
{"idx": 16093, "func": "Determine the cell size", "target": 0}
{"idx": 16094, "func": "delete old contents", "target": 0}
{"idx": 16095, "func": "//{{{ Set up some instance variables this is to avoid having to pass around lots and lots of parameters.", "target": 0}
{"idx": 16096, "func": "generate the IV for encryption", "target": 0}
{"idx": 16097, "func": "3 columns table", "target": 0}
{"idx": 16098, "func": "now evaluate the condition using JavaScript", "target": 0}
{"idx": 16099, "func": "TODO: In this case, the properties panel is not updated with the changed expression!", "target": 1}
{"idx": 16100, "func": "direction", "target": 0}
{"idx": 16101, "func": "The replacement \"new\" allocates and inits the Ruby object as before, but also instantiates our proxified Java object by calling __jcreate!", "target": 0}
{"idx": 16102, "func": "Number n =", "target": 0}
{"idx": 16103, "func": "//{{{ read() method", "target": 0}
{"idx": 16104, "func": "A collection of scalar elements...", "target": 0}
{"idx": 16105, "func": "If there is a new one... //", "target": 0}
{"idx": 16106, "func": "should header be saved with the data? //$NON-NLS-1$", "target": 1}
{"idx": 16107, "func": "Loop round loading the diagrams", "target": 0}
{"idx": 16108, "func": "to allow empty messages", "target": 0}
{"idx": 16109, "func": "Transaction settings:", "target": 0}
{"idx": 16110, "func": "i18n[HelpViewerWindow.faq=FAQ]", "target": 0}
{"idx": 16111, "func": "i18n[SystemFunctionsTab.hint=Show all the system functions available in DBMS]", "target": 0}
{"idx": 16112, "func": "we use SwingUtilities.invokeLater() so that the action is executed before the popup is hidden.", "target": 0}
{"idx": 16113, "func": "if a blank HeaderManager exists, try to get the SOAPHTTPConnection. After the first request, there should be a connection object stored with the cookie header info.", "target": 0}
{"idx": 16114, "func": "in case already initialized; un-initialize it", "target": 0}
{"idx": 16115, "func": "now look up the object we are really interested in! (this lets us correctly handle proxies and multi-row or multi-column queries)", "target": 0}
{"idx": 16116, "func": "No variable or class found in 'this' type ref. if autoAllocateThis then create one; a child 'this'.", "target": 0}
{"idx": 16117, "func": "//{{{ 1. Check whether tools.jar is in the system classpath:", "target": 0}
{"idx": 16118, "func": "//drawingSupplier;", "target": 0}
{"idx": 16119, "func": "@see org.argouml.cognitive.ToDoListListener#toDoItemsAdded(org.argouml.cognitive.ToDoListEvent)", "target": 0}
{"idx": 16120, "func": "// private List _availableTabs = new ArrayList();", "target": 0}
{"idx": 16121, "func": "set the window visible immediately", "target": 0}
{"idx": 16122, "func": "Embedded URL match regex", "target": 0}
{"idx": 16123, "func": "for a RadialGradientPaint we adjust the center and radius to match the current pie segment...", "target": 0}
{"idx": 16124, "func": "Does this dialect support the ALTER TABLE syntax?", "target": 1}
{"idx": 16125, "func": "line 1623", "target": 0}
{"idx": 16126, "func": "@see getStaticLabel", "target": 0}
{"idx": 16127, "func": "MDR has a hardcoded printStackTrace on all exceptions, even if they're caught, which is unsightly, so we handle unknown elements ourselves rather than letting MDR throw an exception for us to catch. org/netbeans/lib/jmi/util/Logger.java This can be uses to disable logging. Default output is System.err setProperty(\"org.netbeans.lib.jmi.Logger.fileName\", \"\") org.netbeans.mdr.Logger The property org.netbeans.lib.jmi.Logger controls the minimum severity level for logging", "target": 0}
{"idx": 16128, "func": "If the data type is not an association type, it could not have been in the FROM clause.", "target": 0}
{"idx": 16129, "func": "Request sent. Now get the response:", "target": 0}
{"idx": 16130, "func": "depends on IO, FileTest", "target": 0}
{"idx": 16131, "func": "//TestCase/getGenFeature.override.javajetinc", "target": 0}
{"idx": 16132, "func": "// check for \"malformed\" XML, or text that happens to contain // a \"<\" with no corresponding \">\"", "target": 0}
{"idx": 16133, "func": "Create an instance of org.w3c.dom.Document", "target": 0}
{"idx": 16134, "func": "end of writeJar", "target": 0}
{"idx": 16135, "func": "check if contact with given email address exists already", "target": 0}
{"idx": 16136, "func": "Only print final delta if there were some samples in the delta and there has been at least one sample reported previously", "target": 0}
{"idx": 16137, "func": "Try to select the items in the current content viewer of the editor. //", "target": 0}
{"idx": 16138, "func": "Allow for old format file without mechanism support", "target": 0}
{"idx": 16139, "func": "//{{{ paintLine() method", "target": 0}
{"idx": 16140, "func": "We need character encoding aware printing here. So, using PrintWriter over OutputStreamWriter instead of PrintStream", "target": 0}
{"idx": 16141, "func": "If this owned object is equal to one from the collection... //", "target": 0}
{"idx": 16142, "func": "TODO -> settings", "target": 0}
{"idx": 16143, "func": "new folder, fire to the old folder", "target": 0}
{"idx": 16144, "func": "Generate a random-ish offset value using the current time.", "target": 0}
{"idx": 16145, "func": "third item, a bit different from the first", "target": 0}
{"idx": 16146, "func": "(non-Javadoc) @see org.apache.jmeter.report.engine.ReportEngine#runReport()", "target": 0}
{"idx": 16147, "func": "TODO move to new standard location and rewrite test to be less static", "target": 0}
{"idx": 16148, "func": "Sort the x coordinates into order", "target": 0}
{"idx": 16149, "func": "assertNotNull(actionClient.getValue(Action.SMALL_ICON));", "target": 0}
{"idx": 16150, "func": "Prepare LoadService and load path", "target": 0}
{"idx": 16151, "func": "prefill ?", "target": 0}
{"idx": 16152, "func": "line 800", "target": 0}
{"idx": 16153, "func": "block", "target": 0}
{"idx": 16154, "func": "//{{{ getSegmentMapKey() method", "target": 0}
{"idx": 16155, "func": "Don't generate private or loosely return typed methods", "target": 0}
{"idx": 16156, "func": "invoke the constructor for this branch", "target": 0}
{"idx": 16157, "func": "eg, trying to bind C+e if C+e is a prefix", "target": 0}
{"idx": 16158, "func": "stream closed in the finally", "target": 0}
{"idx": 16159, "func": "blockHeight", "target": 0}
{"idx": 16160, "func": "For use by Unit Tests", "target": 0}
{"idx": 16161, "func": "no translation needed", "target": 0}
{"idx": 16162, "func": "Add ASCII Letters", "target": 0}
{"idx": 16163, "func": "TODO: Send an event instead of calling Explorer directly", "target": 1}
{"idx": 16164, "func": "edge values", "target": 0}
{"idx": 16165, "func": "--------------------------------------------------------------------- PROPERTY FILE CONSTANTS ---------------------------------------------------------------------", "target": 0}
{"idx": 16166, "func": "Return copy so that the call must call setEol() to change the state of fixCRLF", "target": 0}
{"idx": 16167, "func": "compartments", "target": 0}
{"idx": 16168, "func": "These constants are used in the JMX files, and so must not be changed", "target": 0}
{"idx": 16169, "func": "If this isn't instanceof org.hibernate.type.CollectionType a NoSuchMethodException will be thrown", "target": 0}
{"idx": 16170, "func": "dark gray line every hour", "target": 0}
{"idx": 16171, "func": "//st.setTimestamp( index, new Timestamp( cal.getTimeInMillis() ), cal ); //JDK 1.5 only", "target": 0}
{"idx": 16172, "func": "If we're in this finally clause because of an exception, we don't really care if there's an exception when closing the stream. E.g. if it throws \"ZIP file must have at least one entry\", because an exception happened before we added any files, then we must swallow this exception. Otherwise, the error that's reported will be the close() error, which is not the real cause of the problem.", "target": 0}
{"idx": 16173, "func": "@see java.awt.event.MouseMotionListener#mouseDragged(java.awt.event.MouseEvent)", "target": 0}
{"idx": 16174, "func": "if the first child is soap:operation we add it to the array", "target": 0}
{"idx": 16175, "func": "Additional member names which are currently not written out $NON-NLS-1$ $NON-NLS-1$", "target": 0}
{"idx": 16176, "func": "if size > than 1000 KB, transform to MB", "target": 0}
{"idx": 16177, "func": "register the Options dialog as a TreeSelectionListener. this is done before the initial selection to ensure that the first selected OptionPane is displayed on startup.", "target": 0}
{"idx": 16178, "func": "TODO replace repeated substr() above and below with more efficient method.", "target": 1}
{"idx": 16179, "func": "suggestionsJScrollPane.setMinimumSize( new Dimension( 200, 300 ) );", "target": 0}
{"idx": 16180, "func": "rb_ary_new2 just allocates the internal array", "target": 0}
{"idx": 16181, "func": "TODO: The code implementing this method is from 2003 (see issue 2171) - mechanically integrated by tfmorris in May 2007. Needs to be reviewed/updated. @author Decki,Endi,Yayan, Politechnic of Bandung. Computer Departement method for changing text of Message @param newOwner model element which should now be listened to", "target": 1}
{"idx": 16182, "func": "Static fields are set by the server when the class is constructed", "target": 0}
{"idx": 16183, "func": ", new String[] {\"name\", \"visibility\", \"stereotype\"}", "target": 0}
{"idx": 16184, "func": "&& !('_'==character)", "target": 0}
{"idx": 16185, "func": "We always get the CLOB, even when we are not reading the contents. Since the CLOB is just a pointer to the CLOB data rather than the data itself, this operation should not take much time (as opposed to getting all of the data in the clob).", "target": 0}
{"idx": 16186, "func": "setup drawing area", "target": 0}
{"idx": 16187, "func": "//{{{ determine line number width", "target": 0}
{"idx": 16188, "func": "Note that there is some debate over whether '_' should be included", "target": 0}
{"idx": 16189, "func": "i18n[popupEditableIoPanel.reformatXml=Reformat XML]", "target": 0}
{"idx": 16190, "func": "for zsupers in define_method (blech!) we tell the proc scope to act as the \"argument\" scope", "target": 0}
{"idx": 16191, "func": "We use the encoding which should be used according to the HTTP spec, which is UTF-8", "target": 0}
{"idx": 16192, "func": "TODO: this doesn't need a full ProfileReference since it uses the reader handed in the constructor. It doesn't make much sense to make its callers init the path to some name which it doesn't need... @author Luis Sergio Oliveira (euluis)", "target": 1}
{"idx": 16193, "func": "2000..206F;", "target": 0}
{"idx": 16194, "func": "//}}} //{{{ IMPORT", "target": 0}
{"idx": 16195, "func": "private JCheckBox jchbItalic = null;", "target": 0}
{"idx": 16196, "func": "could be either an ordinal or JPA-positional parameter", "target": 0}
{"idx": 16197, "func": "if only one task left", "target": 0}
{"idx": 16198, "func": "create referenc", "target": 0}
{"idx": 16199, "func": "the CascadingAction implementations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 16200, "func": "this method is a nightmare", "target": 1}
{"idx": 16201, "func": "Setting one target should generate one event:", "target": 0}
{"idx": 16202, "func": "Case 1: Multi token keywords GROUP BY and ORDER BY The next token ( LT(2) ) should be 'by'... otherwise, this is just an ident.", "target": 0}
{"idx": 16203, "func": "@see org.argouml.model.AbstractModelEventPump#removeModelEventListener(java.beans.PropertyChangeListener, java.lang.Object)", "target": 0}
{"idx": 16204, "func": "OK, this is a hack. Currently, when precision == scale, I have no way to determine if this is valid for the actual data. The problem comes when the source db's precision/scale are greater - or reported to be greater - than the precision/scale of the destination db. In this case, it maximimizes both for the destination, causing a definition that allows 0 digits to the left of the decimal. Trouble is, without looking at the actual data, there is no way to tell if this is valid - in some cases it will be ok (0.0000000789) in others it will not be ok (100.123). So for now, make the scale be approx. one-half of the precision to accomodate the most digits to the left and right of the decimal and hopefully that covers the majority of cases.", "target": 1}
{"idx": 16205, "func": "Initialize classes and features; add operations and parameters", "target": 0}
{"idx": 16206, "func": "//{{{ Highlight class", "target": 0}
{"idx": 16207, "func": "We clone to avoid enabling existing node", "target": 0}
{"idx": 16208, "func": "line 826", "target": 0}
{"idx": 16209, "func": "trailing space", "target": 0}
{"idx": 16210, "func": "@see org.tigris.gef.graph.GraphNodeRenderer#getFigNodeFor( org.tigris.gef.graph.GraphModel, org.tigris.gef.base.Layer, java.lang.Object, java.util.Map)", "target": 0}
{"idx": 16211, "func": "start of algorithm", "target": 0}
{"idx": 16212, "func": "Methods needed by subclasses to get access to the implementation", "target": 0}
{"idx": 16213, "func": "Make adjustments for some OS's", "target": 0}
{"idx": 16214, "func": "setText(body);", "target": 0}
{"idx": 16215, "func": "Needs to happen after initialization is done & modules loaded", "target": 0}
{"idx": 16216, "func": "all headerfields are lowercase in property file", "target": 0}
{"idx": 16217, "func": "i18n[SybaseASEPlugin.hint=Preferences for SybaseASE]", "target": 0}
{"idx": 16218, "func": "|| !targets.contains(target)", "target": 0}
{"idx": 16219, "func": "for convenience, cast the existing object", "target": 0}
{"idx": 16220, "func": "262148 byte ------------ 333408 byte", "target": 0}
{"idx": 16221, "func": "i18n[editWhereColsSheet.shouldIncludePKs=The 'use' window should include at least the primary keys for the table.]", "target": 0}
{"idx": 16222, "func": "//{{{ isWindows() method", "target": 0}
{"idx": 16223, "func": "@see org.argouml.cognitive.ToDoListListener#toDoItemsRemoved(org.argouml.cognitive.ToDoListEvent)", "target": 0}
{"idx": 16224, "func": "//list.add(\"InstanceValue\");", "target": 0}
{"idx": 16225, "func": "//-- JMX file attributes - do not change", "target": 0}
{"idx": 16226, "func": "Don't match at all if REG_NOTBOL is set.", "target": 0}
{"idx": 16227, "func": "in case one of the above fails, we still want to clear these flags.", "target": 0}
{"idx": 16228, "func": "original: \"^[a-zA-Z0-9]+@[a-zA-Z0-9\\\\.\\\\-]+\\\\.[a-zA-Z]{2,4}+$\";", "target": 0}
{"idx": 16229, "func": "//TypeConverterImpl", "target": 0}
{"idx": 16230, "func": "Check if maybe no message at all got copied In this case we are finished here", "target": 0}
{"idx": 16231, "func": "non-null return tells caller there was a problem", "target": 0}
{"idx": 16232, "func": "start inline mainGTU", "target": 0}
{"idx": 16233, "func": "//{{{ Completion class", "target": 0}
{"idx": 16234, "func": "removes all entries", "target": 0}
{"idx": 16235, "func": "@see org.argouml.model.OrderingKind#getOrdered()", "target": 0}
{"idx": 16236, "func": "should implement getMinimumLength() -- any ideas?", "target": 1}
{"idx": 16237, "func": "//{{{ ActionHandler class", "target": 0}
{"idx": 16238, "func": "draw grid", "target": 0}
{"idx": 16239, "func": "This is OK", "target": 0}
{"idx": 16240, "func": "a list to store the series index and bar region, so we can draw all the labels at the end...", "target": 0}
{"idx": 16241, "func": "make sure that JFrame is not closed automatically -> we want to prompt the user to save his work", "target": 0}
{"idx": 16242, "func": "The JTextComponent that is being used for editing", "target": 0}
{"idx": 16243, "func": "unwrap primitive to the wrapper type", "target": 0}
{"idx": 16244, "func": "Sets the mouse cursor back to the regular pointer", "target": 0}
{"idx": 16245, "func": "i18n[ColorPropertiesPanel.syncComponentBackgroundColorChkLabel=Use toolbar background color for all components]", "target": 0}
{"idx": 16246, "func": "this method might get called at startup", "target": 0}
{"idx": 16247, "func": "$!: error string", "target": 0}
{"idx": 16248, "func": "We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)", "target": 0}
{"idx": 16249, "func": "Alphabetic order!", "target": 0}
{"idx": 16250, "func": "Create the body and language Field", "target": 0}
{"idx": 16251, "func": "A section is not allowed without a preceding include with alternative. //", "target": 0}
{"idx": 16252, "func": "Translator.localize(\"button.delete\")", "target": 0}
{"idx": 16253, "func": "line 1151", "target": 0}
{"idx": 16254, "func": "The Activity diagram.<p> TODO: Finish the work on subactivity states.", "target": 1}
{"idx": 16255, "func": "these are used to eliminate code duplication. i don't normally use the visitor or \"template method\" pattern, but this code was contributed by Peter Cox and i don't feel like changing it around too much.", "target": 1}
{"idx": 16256, "func": "set the full name", "target": 0}
{"idx": 16257, "func": "NOTE : addDuplicateAlias() already performs nullness checks on the alias.", "target": 0}
{"idx": 16258, "func": "height is OK, but width must be constrained", "target": 0}
{"idx": 16259, "func": "FIXME: process options", "target": 0}
{"idx": 16260, "func": "RUN MENU $NON-NLS-1$", "target": 0}
{"idx": 16261, "func": "Common layers", "target": 0}
{"idx": 16262, "func": "load block if it accepts block", "target": 0}
{"idx": 16263, "func": "i18n[generalSessionPropertiesPanel.sqlExecTabs=SQL Execution Tabs:]", "target": 0}
{"idx": 16264, "func": "Ensure that this race condition is thread safe; it doesn't matter who wins the race. //", "target": 1}
{"idx": 16265, "func": "i18n[LogPanel.openLogs=Press to open logs]", "target": 0}
{"idx": 16266, "func": "line 1289", "target": 0}
{"idx": 16267, "func": "empty list", "target": 0}
{"idx": 16268, "func": "end of text was reached -> begin at the start", "target": 0}
{"idx": 16269, "func": "this is retarded. excuse me while I drool and make stupid noises", "target": 1}
{"idx": 16270, "func": "//root entity comes last", "target": 0}
{"idx": 16271, "func": "Adding 100 000 milliseconds to the orgTime of File f1", "target": 0}
{"idx": 16272, "func": "Outer only once + (\"three\" + (\"four\" + \"five\" + \"six\" + \"seven\") innerLoopCount) outerLoopCount;", "target": 0}
{"idx": 16273, "func": "disabled IMAP folder tests as they require connection to remote IMAP server setup(suite, new IMAPTstFactory());", "target": 0}
{"idx": 16274, "func": "TODO: deal with varargs", "target": 1}
{"idx": 16275, "func": "If the update dir, is actually a file, log an error.", "target": 0}
{"idx": 16276, "func": "---- workStateProvinceCountyLabel ----", "target": 0}
{"idx": 16277, "func": "i18n[OraclePluginPreferencesPanel.showErrorOffsetLabel=Show Syntax Error Offset in SQL Editor]", "target": 0}
{"idx": 16278, "func": "if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object", "target": 0}
{"idx": 16279, "func": "The following should fail", "target": 0}
{"idx": 16280, "func": "The following types are not supported in RDMS/JDBC and therefore commented out. However, in some cases, mapping them to CHARACTER columns works for many applications, but does not work for all cases.", "target": 1}
{"idx": 16281, "func": "make sure there is an instance", "target": 0}
{"idx": 16282, "func": "align everything to paragraph's leading indent", "target": 0}
{"idx": 16283, "func": "//////////////////////////////////////////////////////////////Event handlers", "target": 0}
{"idx": 16284, "func": "4.5.2.13 Constraint", "target": 0}
{"idx": 16285, "func": "search request isn't covered by query engine -> fall back to default search engine", "target": 0}
{"idx": 16286, "func": "next statement gives us a clone JGraph but not a cloned Toolbar", "target": 0}
{"idx": 16287, "func": "database type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 16288, "func": "The cache is full. Abandon JIT for this method and bail out.", "target": 0}
{"idx": 16289, "func": "Check if the user wants to revert", "target": 0}
{"idx": 16290, "func": "work out the anchor point", "target": 0}
{"idx": 16291, "func": "//i18n[HibernatePrefsTab.hint=Hibernate configurations]", "target": 0}
{"idx": 16292, "func": "both ends must be navigable, otherwise there is nothing to merge", "target": 0}
{"idx": 16293, "func": "Focused border color", "target": 0}
{"idx": 16294, "func": "----------------- --- Constants --- -----------------", "target": 0}
{"idx": 16295, "func": "public abstract IHeaderListStorage getHeaderListStorage();", "target": 0}
{"idx": 16296, "func": "i18n[DatabaseMetaData.searchableTypePredBasic=supports all except 'WHERE...LIKE']", "target": 0}
{"idx": 16297, "func": "---- emailTextField2 ----", "target": 0}
{"idx": 16298, "func": "last \\r\\n before response data", "target": 0}
{"idx": 16299, "func": "verify all timeline segments included in the baseTimeline.segment are now exceptions", "target": 0}
{"idx": 16300, "func": "line 1480", "target": 0}
{"idx": 16301, "func": "static only", "target": 0}
{"idx": 16302, "func": "get list of all folders", "target": 0}
{"idx": 16303, "func": "Extract the icon that is used by the tree control for the current look and feel", "target": 0}
{"idx": 16304, "func": "treat the same as EOF", "target": 0}
{"idx": 16305, "func": "//EcoreSwitch", "target": 0}
{"idx": 16306, "func": "//{{{ BeanShellAction constructor", "target": 0}
{"idx": 16307, "func": "add an empty series", "target": 0}
{"idx": 16308, "func": "Just append all the parameter values, and use that as the put body", "target": 0}
{"idx": 16309, "func": "Generate test error", "target": 0}
{"idx": 16310, "func": "The tree structure has changed significantly. Inform the associated tree model. TODO: This shouldn't be public. Components desiring to inform the Explorer of changes should send events. @deprecated by mvw in V0.25.4. Use events instead.", "target": 1}
{"idx": 16311, "func": "//{{{ ColorPickerDialog class", "target": 0}
{"idx": 16312, "func": "Nimbus works - after a fashion - with this", "target": 0}
{"idx": 16313, "func": "We can't do it ourselves as jCVS is GPLed, a third party task outside of jakarta repositories would be possible though (SB).", "target": 0}
{"idx": 16314, "func": "has body, else just for side effects", "target": 0}
{"idx": 16315, "func": "Arbitrary settings - not used used for testing", "target": 0}
{"idx": 16316, "func": "Move the generated source file to the base directory. If base directory and sourcebase are the same, the generated sources are already in place.", "target": 0}
{"idx": 16317, "func": "0300..036F;", "target": 0}
{"idx": 16318, "func": "how far ahead we are when reading", "target": 0}
{"idx": 16319, "func": "The main sorting loop.", "target": 0}
{"idx": 16320, "func": "//TODO: always true for now, but not if we later decide to support elements() in the from clause", "target": 1}
{"idx": 16321, "func": "for entries past the first one, use the default renderer", "target": 0}
{"idx": 16322, "func": "TODO: better algorithm to set precision needed", "target": 1}
{"idx": 16323, "func": "//{{{ Forward search", "target": 0}
{"idx": 16324, "func": "//{{{ getLayoutAlignmentY() method", "target": 0}
{"idx": 16325, "func": "TODO: fix testcase //assertEquals(\"filter result\", true, result);", "target": 1}
{"idx": 16326, "func": "(non-Javadoc) @see org.columba.core.filter.IFilterList#remove(org.columba.core.filter.Filter)", "target": 0}
{"idx": 16327, "func": "Tell the listeners a new table has arrived.", "target": 0}
{"idx": 16328, "func": "draw the axis...", "target": 0}
{"idx": 16329, "func": "handle empty collection", "target": 0}
{"idx": 16330, "func": "If variables were added then we may need to grow the dynamic scope to match the static one. FIXME: Make this so we only need to check this for blockScope != null. We cannot currently since we create the DynamicScope for a LocalStaticScope before parse begins. Refactoring should make this fixable.", "target": 1}
{"idx": 16331, "func": "Provide a description of this timer class. TODO: Is this ever used? I can't remember where. Remove if it isn't -- TODO: or obtain text from bean's displayName or shortDescription. @return the description of this timer class.", "target": 1}
{"idx": 16332, "func": "MySQL requires MyISAM storage engine for spatial and fulltext indexes. Don't test them for now. See the TODO in the MySQLDialect for getCreateIndexSQL.", "target": 0}
{"idx": 16333, "func": "//this.maximumRangeValue.addModifyListener(this); //this.maximumRangeValue.addVerifyListener(this);", "target": 0}
{"idx": 16334, "func": "Tidy options", "target": 0}
{"idx": 16335, "func": "chooser.setSelectedFile(new File(fileName));", "target": 0}
{"idx": 16336, "func": "Handle marker", "target": 0}
{"idx": 16337, "func": "equal to last visible line", "target": 0}
{"idx": 16338, "func": "//TODO: inefficient if that cache is just going to ignore the updated state!", "target": 1}
{"idx": 16339, "func": "plot is registered as a listener with the existing axis...", "target": 0}
{"idx": 16340, "func": "sectionDepth", "target": 0}
{"idx": 16341, "func": "TODO: All of the following can be broken if we have multiple targets selected", "target": 0}
{"idx": 16342, "func": "test a default instance", "target": 0}
{"idx": 16343, "func": "verify that the plot is listening to the cloned renderer", "target": 0}
{"idx": 16344, "func": "Get the list of valid model item pairs for the given connection type", "target": 0}
{"idx": 16345, "func": "null callstack, one will be created for us", "target": 0}
{"idx": 16346, "func": "Now we could check that the adapter implements interface ITableItemFontProvider. //", "target": 0}
{"idx": 16347, "func": "Object Tree Color checkbox", "target": 0}
{"idx": 16348, "func": "These are the names of properties used to define the labels $NON-NLS-1$", "target": 0}
{"idx": 16349, "func": "Found match, execute catch block", "target": 0}
{"idx": 16350, "func": "This guard is needed to ensure that clear doesn't make the resource become loaded. //", "target": 0}
{"idx": 16351, "func": "Args will be provided later", "target": 0}
{"idx": 16352, "func": "Allow concatenation order and separator to be localized", "target": 0}
{"idx": 16353, "func": "@see javax.swing.event.TreeSelectionListener#valueChanged(javax.swing.event.TreeSelectionEvent)", "target": 0}
{"idx": 16354, "func": "End of method getDateHeader", "target": 0}
{"idx": 16355, "func": "X X", "target": 0}
{"idx": 16356, "func": "popup does not fit with the orig placement", "target": 0}
{"idx": 16357, "func": "Default file encoding", "target": 0}
{"idx": 16358, "func": "//{{{ DropHandler class", "target": 0}
{"idx": 16359, "func": "Constructor for use during startup (intended for non-GUI use) @param name of summariser", "target": 0}
{"idx": 16360, "func": "backgroundPaint", "target": 0}
{"idx": 16361, "func": "For the control case, we need a dialog to ask for the URI and obtain the resource, then we create the command. //", "target": 0}
{"idx": 16362, "func": "//Custom SQL", "target": 0}
{"idx": 16363, "func": "Stick with the default charset", "target": 0}
{"idx": 16364, "func": "extract column names from text area", "target": 0}
{"idx": 16365, "func": "this is our first sample, set the start time to current timestamp", "target": 0}
{"idx": 16366, "func": "//LOG.debug(result + \" node1: \" + this + \", node2 \" + node);", "target": 0}
{"idx": 16367, "func": "jcreate instantiates the proxy object which implements all interfaces and which is wrapped and implemented by this object", "target": 0}
{"idx": 16368, "func": "Execute validator and return results.", "target": 0}
{"idx": 16369, "func": "if we know there is exactly 1 row, we can skip. it would be great if we could _always_ skip this; it is a problem for <key-many-to-one>", "target": 0}
{"idx": 16370, "func": "Test-case for the above code: Draw a class. Create a stereotype for it by clicking on the prop-panel tool, and name it. Remove the class from the diagram. Drag the class from the explorer on the diagram. Select the stereotype in the explorer, and change its name in the prop-panel to something longer. The longer name does not make the class Fig wider unless the above code is added.", "target": 0}
{"idx": 16371, "func": "are there any here that we forgot? fall through", "target": 0}
{"idx": 16372, "func": "//{{{ SingleSelectionModel class", "target": 0}
{"idx": 16373, "func": "//{{{ resolveEntity() method", "target": 0}
{"idx": 16374, "func": "i18n[DriversList.tooltiptext=List of database drivers that can be used to configure an alias]", "target": 0}
{"idx": 16375, "func": "mainly for TestElementConverter", "target": 0}
{"idx": 16376, "func": "anti-aliasing", "target": 0}
{"idx": 16377, "func": "this will include the case where the underlying dataset is null", "target": 0}
{"idx": 16378, "func": "the constructor above sets this from resources, but we'll override it with the name of the database file and its size.", "target": 0}
{"idx": 16379, "func": "get folder item configuration", "target": 0}
{"idx": 16380, "func": "This code exploits the fact that all .jar files will be found for the JarredScript feature. This is where the basic extension mechanism gets fixed", "target": 0}
{"idx": 16381, "func": "we need to search the components of the path to see if we can find the class we want.", "target": 0}
{"idx": 16382, "func": "if buildFile was not specified on the command line,", "target": 0}
{"idx": 16383, "func": "Now the coding tables", "target": 0}
{"idx": 16384, "func": "//make new column with LabelledLayout", "target": 0}
{"idx": 16385, "func": "We use the default character set encoding of the JRE", "target": 0}
{"idx": 16386, "func": "Stylepanel which adds a checkbox to show or hide the stereotype.<p> TODO: i18n. @author mvw@tigris.org", "target": 1}
{"idx": 16387, "func": "'|' '' '+' '?' '(' ')' '.' '[' '\\' '^' '$' '(?:' '(?=' '(?!' '(?<=' '(?<!' '(?>' '(?[' '[:' in a character class '(?#' '(?' [\\-,a-z,A-Z] '(?(' '-[' in a character class", "target": 0}
{"idx": 16388, "func": "(array==null) ? tempList.size() :", "target": 0}
{"idx": 16389, "func": "after setting up all the subplots, the shared domain axis may need reconfiguring", "target": 0}
{"idx": 16390, "func": "view the message under the new node", "target": 0}
{"idx": 16391, "func": "@see org.argouml.model.ModelEventPump#addClassModelEventListener( java.beans.PropertyChangeListener, java.lang.Object, java.lang.String)", "target": 0}
{"idx": 16392, "func": "line 1333", "target": 0}
{"idx": 16393, "func": "line 1968", "target": 0}
{"idx": 16394, "func": "shouldn't be possible", "target": 0}
{"idx": 16395, "func": "Use expression instead of Javascript $NON-NLS-1$", "target": 0}
{"idx": 16396, "func": "check arity checkArity(mv, scope);", "target": 0}
{"idx": 16397, "func": "Fill 22 of value (byte) -19", "target": 0}
{"idx": 16398, "func": "//{{{ paintIcon() method", "target": 0}
{"idx": 16399, "func": "kjc-1.5A doesn't support -encoding option now. but it will be supported near the feature.", "target": 0}
{"idx": 16400, "func": "Register tabs to display in the details panel for database nodes.", "target": 0}
{"idx": 16401, "func": "hack...", "target": 1}
{"idx": 16402, "func": "Shutdown the http server", "target": 0}
{"idx": 16403, "func": "private static final String PCLI_LVF_ARGS = \"lvf -z -aw\";", "target": 0}
{"idx": 16404, "func": "clear message list", "target": 0}
{"idx": 16405, "func": "to report sax parsing errors CheckStyle:VisibilityModifier ON", "target": 0}
{"idx": 16406, "func": "Validates all of the URI components. Factory methods should call this before using the constructor, though they must ensure that the inter-component requirements described in their own Javadocs are all satisfied, themselves. If a new URI is being constructed out of an existing URI, this need not be called. Instead, just the new components may be validated individually.", "target": 0}
{"idx": 16407, "func": "Because the notation events get dispatched on the Swing event thread, we need to use invokeAndWait to make sure that we don't return until they've been delivered", "target": 0}
{"idx": 16408, "func": "//////////////////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 16409, "func": "create the new document.", "target": 0}
{"idx": 16410, "func": "FIXME missing full tests for leap year", "target": 1}
{"idx": 16411, "func": "if we've found the module model, log it and place it in the map so we don't have to find it if we need it again.", "target": 0}
{"idx": 16412, "func": "TODO: Replace the functioncall in the next line by .requestFocusInWindow() once we do not support Java 1.3 any more.", "target": 1}
{"idx": 16413, "func": "end source and eval", "target": 0}
{"idx": 16414, "func": "we can't batch joined inserts, especially not if it is an identity insert; nor can we batch statements where the expectation is based on an output param", "target": 0}
{"idx": 16415, "func": "create OK and Cancel buttons by default", "target": 0}
{"idx": 16416, "func": "divide message into headers and body", "target": 0}
{"idx": 16417, "func": "Double.NaN DOESN'T mess things up", "target": 0}
{"idx": 16418, "func": "Object iterators. //", "target": 0}
{"idx": 16419, "func": "Use the original to do the add, but only if it's of the same type as the copy. This ensures that if there is conversion being done as part of the copy, as would be the case for a cross domain copy in the mapping framework, that we do actually use the converted instance. //", "target": 0}
{"idx": 16420, "func": "\"in\"", "target": 0}
{"idx": 16421, "func": "cycle through all the segments contained in the base exclusion area", "target": 0}
{"idx": 16422, "func": "add the current fragment to the FILTERS node", "target": 0}
{"idx": 16423, "func": "method matches name", "target": 0}
{"idx": 16424, "func": "TODO: Remove the casting to DiagramFactoryInterface2 as soon as DiagramFactoryInterface is removed.", "target": 1}
{"idx": 16425, "func": "may be null if a system property has been added after the project instance has been initialized", "target": 0}
{"idx": 16426, "func": "doesn't work: Depending on the compression engine used, compressed bytes may differ. False errors would be reported. assertTrue(\"File content mismatch\", FILE_UTILS.contentEquals(project.resolveFile(\"expected/asf-logo-huge.tar.bz2\"), project.resolveFile(\"asf-logo-huge.tar.bz2\")));", "target": 1}
{"idx": 16427, "func": "add series to collection 1, should be not equal", "target": 0}
{"idx": 16428, "func": "set the Y Axis to round", "target": 0}
{"idx": 16429, "func": "Only for Unit tests", "target": 0}
{"idx": 16430, "func": "TODO: Do we need to worry about UmlClass, UmlPackage, etc?", "target": 1}
{"idx": 16431, "func": "retrieve the actual search result data", "target": 0}
{"idx": 16432, "func": "//on java<=1.3 the modern falls back to classic if it is not found //but on java>=1.4 we just bail out early", "target": 0}
{"idx": 16433, "func": "only classes with name need a constructor", "target": 0}
{"idx": 16434, "func": "line 1869", "target": 0}
{"idx": 16435, "func": "associate with JavaHelp", "target": 0}
{"idx": 16436, "func": "(non-Javadoc) @see org.columba.mail.imap.IImapServer#getAllHeaders(java.lang.Object, org.columba.mail.folder.imap.IMAPFolder)", "target": 0}
{"idx": 16437, "func": "//treat it just like a new collection", "target": 0}
{"idx": 16438, "func": "shift", "target": 0}
{"idx": 16439, "func": "synchronized", "target": 0}
{"idx": 16440, "func": "Allocate the new collection, and populate it up to this point. //", "target": 0}
{"idx": 16441, "func": "Two slashes means we may have authority, but definitely means we're either matching net_path or abs_path. These two productions are ambiguous in that every net_path (except those containing an IPv6Reference) is an abs_path. RFC 2396 resolves this ambiguity by applying a greedy left most matching rule. Try matching net_path first, and if that fails we don't have authority so then attempt to match abs_path. net_path = \"//\" authority [ abs_path ] abs_path = \"/\" path_segments", "target": 0}
{"idx": 16442, "func": "draw the wafer", "target": 0}
{"idx": 16443, "func": "apply filter on message", "target": 0}
{"idx": 16444, "func": "Default diagram settings", "target": 0}
{"idx": 16445, "func": "@author: fdietz Disabled this testcase, as it doesn't really fit into this category of message operations It fails because we would have to create a folder-hierarchy including parent folders to execute the move", "target": 0}
{"idx": 16446, "func": "FIXME: We should really not be creating the dynamic scope for the root of the AST before parsing. This makes us end up needing to readjust this dynamic scope coming out of parse (and for local static scopes it will always happen because of $~ and $_). FIXME: Because we end up adjusting this after-the-fact, we can't use any of the specific-size scopes.", "target": 1}
{"idx": 16447, "func": "If the child feature follows the sibling feature, the child should be first in its feature. //", "target": 0}
{"idx": 16448, "func": "1-byte sequence: 000000000xxxxxxx = 0xxxxxxx", "target": 0}
{"idx": 16449, "func": "bind prefix to uri in current context", "target": 0}
{"idx": 16450, "func": "LOG.debug(\"is a Base or Multiplicity\");", "target": 0}
{"idx": 16451, "func": "TODO: Make another pass to deal with overlaps?", "target": 1}
{"idx": 16452, "func": "why are we here?", "target": 0}
{"idx": 16453, "func": "The regular expression factory", "target": 0}
{"idx": 16454, "func": "To simplify implementation, we list all associations found with any of the Classifiers represented by the linked Instances. <p> TODO: Make a foolproof algorithm that only allows selecting associations that create a correct model. Also take into account n-ary associations and associationclasses. This algo best goes in the model subsystem, e.g. in a method getAllPossibleAssociationsForALink(). @see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()", "target": 1}
{"idx": 16455, "func": "@see org.argouml.ui.Clarifier#hit(int, int)", "target": 0}
{"idx": 16456, "func": "TODO: Why is this not executed? Remove if not needed - tfm", "target": 1}
{"idx": 16457, "func": "NIF: runTruthTest(Model.getFacade().isAStructuralFeature(o), Model.getMetaTypes().getStructuralFeature()); NIF: runTruthTest(Model.getFacade().isATaggedValue(o), Model.getMetaTypes().getTaggedValue());", "target": 0}
{"idx": 16458, "func": "properly decoded subject", "target": 0}
{"idx": 16459, "func": "checkonly", "target": 0}
{"idx": 16460, "func": "this line is the start of a fold", "target": 0}
{"idx": 16461, "func": "this method is called from the super class's constructor therfore _titleLbl is null for that call.", "target": 0}
{"idx": 16462, "func": "//{{{ BrowserColorsModel constructor", "target": 0}
{"idx": 16463, "func": "TODO else => Exception !", "target": 0}
{"idx": 16464, "func": "there were no queued additions and the role has a cache", "target": 0}
{"idx": 16465, "func": "//private JTable logTable;", "target": 0}
{"idx": 16466, "func": "Implements JavaSamplerClient.teardownTest(JavaSamplerContext)", "target": 0}
{"idx": 16467, "func": "Check blank lines are treated as EOF", "target": 0}
{"idx": 16468, "func": "domainGridlineStroke", "target": 0}
{"idx": 16469, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsCatalogsInDataManipulation()", "target": 0}
{"idx": 16470, "func": "and the stereotypes of its features", "target": 0}
{"idx": 16471, "func": "TODO: What if used elsewhere?", "target": 1}
{"idx": 16472, "func": "The reason for this is SQL doesn't let you sort by an expression you are not returning in the result set.", "target": 0}
{"idx": 16473, "func": "set axis bounds to be both greater than 1", "target": 0}
{"idx": 16474, "func": "just rethrow", "target": 0}
{"idx": 16475, "func": "we call parse with 1 to get only one. this also means if we change the implementation to use 2, it would use every other entry and so on. Not that it is really useful, but a person could use it that way if they have a huge gigabyte log file and they only want to use a quarter of the entries.", "target": 0}
{"idx": 16476, "func": "//there is no need to expand properties here as that happens when Transaction.addText is //called; to do so here would be an error.", "target": 0}
{"idx": 16477, "func": ", CallStack callstack", "target": 0}
{"idx": 16478, "func": "//{{{ activate() method", "target": 0}
{"idx": 16479, "func": "i18n[rowInputDataFrame.conversionToInternErr=The given text cannot be converted into the internal object.\\nThe database has not been changed.\\nThe conversion error was:\\n{0}]", "target": 0}
{"idx": 16480, "func": "//{{{ StringRegister class", "target": 0}
{"idx": 16481, "func": "no background mode, and reusing existing view", "target": 0}
{"idx": 16482, "func": "if the check gets till here we have all the needed information", "target": 0}
{"idx": 16483, "func": "//TODO: Rename to IObjectTreeNodeExpander", "target": 1}
{"idx": 16484, "func": "//TODO replace with proper Exception return with an error", "target": 1}
{"idx": 16485, "func": "update list view", "target": 0}
{"idx": 16486, "func": "Replace \"-16\" with Types.LONGNVARCHAR when Java6 is the minimum supported version", "target": 0}
{"idx": 16487, "func": "////////////////INTERNAL MODULE VARIABLE API METHODS ////////////////", "target": 0}
{"idx": 16488, "func": "The creation of the actual GUI elements is deferred until they are actually needed. Otherwize we have problems with the initialization.", "target": 0}
{"idx": 16489, "func": "@see org.argouml.uml.diagram.ui.FigEdgeModelElement#textEdited(org.tigris.gef.presentation.FigText)", "target": 0}
{"idx": 16490, "func": "EQ == 0 (i.e. false)", "target": 0}
{"idx": 16491, "func": "Walk the methods. //", "target": 0}
{"idx": 16492, "func": "legendBar", "target": 0}
{"idx": 16493, "func": "//method.invokeinterface(p(IRubyObject.class), \"getInstanceVariable\", sig(IRubyObject.class, params(String.class)));", "target": 0}
{"idx": 16494, "func": "A HTTP POST request, with unknown encoding", "target": 0}
{"idx": 16495, "func": "This will call initialize(tok)!", "target": 0}
{"idx": 16496, "func": "misc functions - based on oracle dialect", "target": 0}
{"idx": 16497, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.dialects.HibernateDialect#getLengthFunction()", "target": 0}
{"idx": 16498, "func": "Make a internal list of all results to allow reload data with filter or interval", "target": 0}
{"idx": 16499, "func": "@GuardedBy(\"this\")", "target": 0}
{"idx": 16500, "func": "Return the default type for a parameter. @return a Classifier to use as the default type TODO: This belongs in ProjectSettings. - tfm", "target": 1}
{"idx": 16501, "func": "Flag to indicate we are creating a new current project. TODO: This isn't a thread-safe way of doing mutual exclusion.", "target": 1}
{"idx": 16502, "func": "This should be the manifest version", "target": 0}
{"idx": 16503, "func": "otherwise look up the paint table", "target": 0}
{"idx": 16504, "func": "if the initial averaging period is to be excluded, then calculate the lowest x-value to have an average calculated...", "target": 0}
{"idx": 16505, "func": "line 1443", "target": 0}
{"idx": 16506, "func": "correct for starting position if printing should not start at the top", "target": 0}
{"idx": 16507, "func": "close send message dialog", "target": 0}
{"idx": 16508, "func": "userinfo is everything up to @", "target": 0}
{"idx": 16509, "func": "FIXME This function needs documentation @return XmlElement @param String Path", "target": 1}
{"idx": 16510, "func": "try null array", "target": 0}
{"idx": 16511, "func": "Retrieves a message from the ResourceBundle", "target": 0}
{"idx": 16512, "func": "Actor 4.11.3.1 [2]", "target": 0}
{"idx": 16513, "func": "Second (right) tab", "target": 0}
{"idx": 16514, "func": "attachments found", "target": 0}
{"idx": 16515, "func": "//{{{ RosterThread class", "target": 0}
{"idx": 16516, "func": "PersistentIdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 16517, "func": "builder.append(sslLabel, 3); builder.nextLine(); builder.append(disableSSLConnectionRadioButton, 2); builder.nextLine(); builder.append(enableSSLConnectionRadioButton, 2); builder.nextLine(); builder.append(enableSTARTTLSExtensionRadioButton, 2); builder.nextLine();", "target": 0}
{"idx": 16518, "func": "Default to overall format, and then to version 2.2", "target": 0}
{"idx": 16519, "func": "This is needed in order to set up the cookie policy", "target": 0}
{"idx": 16520, "func": "todo : would love to have this work on a notification basis where the successful binding of an entity/subclass would emit a notification which the extendsQueue entries could react to...", "target": 1}
{"idx": 16521, "func": "something is very wrong here", "target": 1}
{"idx": 16522, "func": "-graphical", "target": 0}
{"idx": 16523, "func": "TODO: Are the 3 methods uses ?", "target": 1}
{"idx": 16524, "func": "//i18n[SQLResultExecuterPanel.scriptStmtCounts=Row update //counts: {0} Inserts, {1} Selects, {2} Updates, {3} Deletes", "target": 0}
{"idx": 16525, "func": "only accept jar files $NON-NLS-1$", "target": 0}
{"idx": 16526, "func": "Index tab", "target": 0}
{"idx": 16527, "func": "Fall back to today", "target": 0}
{"idx": 16528, "func": "transparent", "target": 0}
{"idx": 16529, "func": "Marker highlight", "target": 0}
{"idx": 16530, "func": "verify attributes set during object construction", "target": 0}
{"idx": 16531, "func": "/////////////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 16532, "func": "line 582", "target": 0}
{"idx": 16533, "func": "//{{{ escapesToChars() method", "target": 0}
{"idx": 16534, "func": "Surrogates", "target": 0}
{"idx": 16535, "func": "Column_name Type Computed Length Prec Scale Nullable TrimTrailingBlanks FixedLenNullInSource Collation ------------------------------------------------------------------------------------------------------------------------------------------------------- Location char no 2 yes no yes Latin1_General_CI_AS TotalBilledAmnt money no 8 19 4 yes (n/a) (n/a) NULL", "target": 0}
{"idx": 16536, "func": "d.supplier.oclAsType(Namespace).ownedElement->select (e | e.elementOwnership.visibility = #public)->includes (r.participant) or", "target": 0}
{"idx": 16537, "func": "read", "target": 0}
{"idx": 16538, "func": "Setting the starting position is ugly. I just picked a point.", "target": 0}
{"idx": 16539, "func": "Get the type by constructing a prototype array with arbitrary (zero) length in each dimension. int array default zeros", "target": 0}
{"idx": 16540, "func": "Strips an escaped white space.", "target": 0}
{"idx": 16541, "func": "-R", "target": 0}
{"idx": 16542, "func": "encoding must be UTF8 as specified in the specs.", "target": 0}
{"idx": 16543, "func": "Set the number of milliseconds leeway to give before deciding a target is out of date. TODO: This is not yet used. @param granularity the granularity used to decide if a target is out of date.", "target": 1}
{"idx": 16544, "func": "Avoid IndexOutOfBoundsException:", "target": 0}
{"idx": 16545, "func": "cannot execute a null command", "target": 0}
{"idx": 16546, "func": "//??", "target": 0}
{"idx": 16547, "func": "$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$", "target": 0}
{"idx": 16548, "func": "Pass everything else to superclass", "target": 0}
{"idx": 16549, "func": "milliseconds", "target": 0}
{"idx": 16550, "func": "//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc", "target": 0}
{"idx": 16551, "func": "//{{{ selectFold() method", "target": 0}
{"idx": 16552, "func": "//reset the version", "target": 0}
{"idx": 16553, "func": "Create a generalizable element with an element without children.", "target": 0}
{"idx": 16554, "func": "//format.setOrientation(PageFormat.PORTRAIT);", "target": 0}
{"idx": 16555, "func": "SEQUENCE", "target": 0}
{"idx": 16556, "func": "//TODO: should fire its own event and ProjectBrowser //should register a listener", "target": 1}
{"idx": 16557, "func": "//{{{ loadIfNecessary() method", "target": 0}
{"idx": 16558, "func": "//update all the modified entries", "target": 0}
{"idx": 16559, "func": "axis line stroke...", "target": 0}
{"idx": 16560, "func": "//while", "target": 0}
{"idx": 16561, "func": "//initial state is false.", "target": 0}
{"idx": 16562, "func": "line 1757", "target": 0}
{"idx": 16563, "func": "Make sure that the counts are the same", "target": 0}
{"idx": 16564, "func": "update connection state", "target": 0}
{"idx": 16565, "func": "if the renderer isn't assigned to a plot, then we don't have a dataset...", "target": 0}
{"idx": 16566, "func": "Now for the rest", "target": 0}
{"idx": 16567, "func": "//TODO Test on other versions of weblogic //TODO add more attributes to the task, to take care of all jspc options //TODO Test on Unix", "target": 0}
{"idx": 16568, "func": "For b.foo", "target": 0}
{"idx": 16569, "func": "line 1124", "target": 0}
{"idx": 16570, "func": "public final Currency getCurrency(int col) throws HibernateException { return (Currency) get(col); }", "target": 0}
{"idx": 16571, "func": "Get the filename", "target": 0}
{"idx": 16572, "func": "isNameStart(int):boolean", "target": 0}
{"idx": 16573, "func": "row 1: stroke", "target": 0}
{"idx": 16574, "func": "i18n[sessionObjectTreePropetiesPanel.filters=Filters]", "target": 0}
{"idx": 16575, "func": "No text, but using fragment mode", "target": 0}
{"idx": 16576, "func": "TODO: The copy function is not yet completely implemented - so we will have some exceptions here and there.", "target": 1}
{"idx": 16577, "func": "top.setBackground(UIManager.getColor(\"TextField.background\"));", "target": 0}
{"idx": 16578, "func": "otherwise it will be delivered later", "target": 0}
{"idx": 16579, "func": "Boolean, String, Integer, Long, Float, Double, etc", "target": 0}
{"idx": 16580, "func": "add variable fragment to new declaration", "target": 0}
{"idx": 16581, "func": "If we're using a fixed offset, just add it and return No collision detection is done in this case", "target": 0}
{"idx": 16582, "func": "If we can't find it, try the simple name in the package... //", "target": 0}
{"idx": 16583, "func": "Set the most significant bit of the first octet to 1 so as to distinguish it from IEEE node addresses //", "target": 0}
{"idx": 16584, "func": "//Convert 4 WS in a row to a tab", "target": 0}
{"idx": 16585, "func": "Total number of threads", "target": 0}
{"idx": 16586, "func": "promise to implement two to three with block", "target": 0}
{"idx": 16587, "func": "open connection", "target": 0}
{"idx": 16588, "func": "If there is a FROM fragment and the FROM element is an explicit, then add the from part.", "target": 0}
{"idx": 16589, "func": "Don't overwrite exising file", "target": 0}
{"idx": 16590, "func": "//get a time", "target": 0}
{"idx": 16591, "func": "i18n[SchemaPropertiesPanel.hint=Here you may pecify which Schemas to be loaded and displayed in a Session's Object tree. Code completion and Syntax highlighting will work only for loaded schemas. If Schemas take a long time to load you may cache them on your hard disk. Then loading will take long only when you open a Session for the first time. You can always refesh the cache either by using the Session's 'Refresh all' toolbar button or by using the 'Refresh Item' right mouse menu on an Object tree node.]", "target": 0}
{"idx": 16592, "func": "Property panels for SQuirreL.", "target": 0}
{"idx": 16593, "func": "avoid to draw overlapping tick labels", "target": 0}
{"idx": 16594, "func": "we look through the classpath elements. If the element is a dir we look for the file. IF it is a zip, we look for the zip entry", "target": 0}
{"idx": 16595, "func": "TODO - could this be return?", "target": 1}
{"idx": 16596, "func": "The following is specifically for Realizations TODO: correction in GEF, it should use InterfaceRealization, not Abstraction", "target": 1}
{"idx": 16597, "func": "i18n[FactoryProviderDialog.desc=Please enter the fully qualified class name of a SessionFactorImpl provider class. The compiled class file must be in one of your additional classpath entries.]", "target": 0}
{"idx": 16598, "func": "//Ecore2XMLFactory", "target": 0}
{"idx": 16599, "func": "give all Swing components our colors", "target": 0}
{"idx": 16600, "func": "i18n[SQLPreferencesPanel.largeScriptStmtCount=Large Script Statement Count: ]", "target": 0}
{"idx": 16601, "func": "Sort the rows by the property name. // Collections.sort(_data, new DataSorter());", "target": 0}
{"idx": 16602, "func": "/////////////////////////////////////////////////////////////////////////We try to find a completely free space for the new table frame.", "target": 0}
{"idx": 16603, "func": "See catch clause below", "target": 0}
{"idx": 16604, "func": "//{{{ getThreadCount() method", "target": 0}
{"idx": 16605, "func": "encountered a node we don't recognize, set everything to true to disable optz", "target": 0}
{"idx": 16606, "func": "//[i18n[OrderByClausePanel.orderDirectionLabel=Order Direction]", "target": 0}
{"idx": 16607, "func": "draw median...", "target": 0}
{"idx": 16608, "func": "field is not nullable, so create a reasonable default value cannot create default value for unknown data type", "target": 0}
{"idx": 16609, "func": "TODO: Make callCoerced work in block context...then fix downto, step, and upto.", "target": 1}
{"idx": 16610, "func": "line 1496", "target": 0}
{"idx": 16611, "func": "i18n[mysql.structureAndData=Structure and Data]", "target": 0}
{"idx": 16612, "func": "TODO is it the best way ? https://issues.apache.org/bugzilla/show_bug.cgi?id=55634", "target": 1}
{"idx": 16613, "func": "swap rows and columns to match plotArea shape", "target": 0}
{"idx": 16614, "func": "white spaces", "target": 0}
{"idx": 16615, "func": "20040510, karlpeder columns may be null (first time we visit a folder!?)", "target": 0}
{"idx": 16616, "func": "Snapshots of current database state for entities that have not been loaded", "target": 0}
{"idx": 16617, "func": "//now we might need to recalculate the dirtyProperties array", "target": 0}
{"idx": 16618, "func": "TODO: CLONE_SETUP here", "target": 1}
{"idx": 16619, "func": "wait for TIME_OUT/2, there should be about TIME_OUT/2 ms remaining before timeout", "target": 0}
{"idx": 16620, "func": "if necessary decrypt/verify message", "target": 0}
{"idx": 16621, "func": "carriage return", "target": 0}
{"idx": 16622, "func": "remove the bodypart from the mimeparts that are added to the attachment viewer", "target": 0}
{"idx": 16623, "func": "invalid file URIs not hierarchical not file scheme not absolute non empty authority non empty query non empty fragment", "target": 0}
{"idx": 16624, "func": "Since we're invoking plugged-in code, we must be defensive against cycles. //", "target": 0}
{"idx": 16625, "func": "//{{{ ColorEntry class", "target": 0}
{"idx": 16626, "func": "Fill 15 of value (byte) 33 Fill 9 of value (byte) -87 Fill 17 of value (byte) 33 Fill 3 of value (byte) -87", "target": 0}
{"idx": 16627, "func": "TODO", "target": 0}
{"idx": 16628, "func": "nothing defined - do we autoPopulate?", "target": 0}
{"idx": 16629, "func": "cycle bound mapping", "target": 0}
{"idx": 16630, "func": "Assemble a [ :name, offset ] array", "target": 0}
{"idx": 16631, "func": "@see org.argouml.uml.cognitive.critics.WizMEName#doAction(int)", "target": 0}
{"idx": 16632, "func": "This is needed to stop XStream keeping copies of each class", "target": 0}
{"idx": 16633, "func": "otherwise add the diagram at the start", "target": 0}
{"idx": 16634, "func": "data is a String, so we need to convert to real object", "target": 0}
{"idx": 16635, "func": "updating the table data", "target": 0}
{"idx": 16636, "func": "JPanel p = new JPanel(); p.setLayout(new FlowLayout());", "target": 0}
{"idx": 16637, "func": "//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte", "target": 0}
{"idx": 16638, "func": "TODO: handle TypeDefs", "target": 1}
{"idx": 16639, "func": "Just a note: StarTeam has a status for NEW which implies that there is an item on your local machine that is not in the repository. These are the items that show up as NOT IN VIEW in the Starteam GUI. One would think that we would want to perhaps checkin the NEW items (not in all cases! - Steve Cohen 15 Dec 2001) Unfortunately, the sdk doesn't really work, and we can't actually see anything with a status of NEW. That is why we can just check out everything here without worrying about losing anything.", "target": 1}
{"idx": 16640, "func": "lowerMargin", "target": 0}
{"idx": 16641, "func": "astore 4 store the raw bean", "target": 0}
{"idx": 16642, "func": "initialize platform-dependant services", "target": 0}
{"idx": 16643, "func": "Try to get a general-content feature. Use a pattern that's not possible any other way. //", "target": 0}
{"idx": 16644, "func": "This module will still register as enabled for UML1.4 but it won't actually do anything.", "target": 0}
{"idx": 16645, "func": "//special case single jar handling with signedjar attribute set", "target": 0}
{"idx": 16646, "func": "//i18n[ColumnListDialog.tableNameLabel=Table Name: ]", "target": 0}
{"idx": 16647, "func": "//removing base from path yields no change; path not child of base", "target": 0}
{"idx": 16648, "func": "Fill 8 of value (byte) 33 Fill 23 of value (byte) -19", "target": 0}
{"idx": 16649, "func": "Always select properties panel if defaultToProperties is true, and if properties panel is appropriate for selected perspective", "target": 0}
{"idx": 16650, "func": "//class-MockCache", "target": 0}
{"idx": 16651, "func": "i18n[popupeditableIoPanel.cannotExec=Cannot execute a null command.\\nPlease enter a command in the Command field before clicking on Execute.]", "target": 0}
{"idx": 16652, "func": "2nd step: copies the bytecode of the method into a new bytevector, updates the offsets, and inserts (or removes) bytes as requested.", "target": 0}
{"idx": 16653, "func": "//{{{ getFiles() method", "target": 0}
{"idx": 16654, "func": "must match the default value of Ant#inheritRefs", "target": 0}
{"idx": 16655, "func": "SimpleSampler", "target": 0}
{"idx": 16656, "func": "clear the tooltip message previously displayed in the status bar", "target": 0}
{"idx": 16657, "func": "to prohibit dropping onto the drag source:", "target": 0}
{"idx": 16658, "func": "new search?", "target": 0}
{"idx": 16659, "func": "not sure if null is passed in but no harm in setting it", "target": 0}
{"idx": 16660, "func": "PlaceRect bgAbsRect = new AbsRect(new AtStart(0), new AtStart(0), new AtEnd(0), new AtEnd(0), null, null, shadowInsets);", "target": 0}
{"idx": 16661, "func": "Column is in table 1, but not table 2", "target": 0}
{"idx": 16662, "func": "FIXME: Can get optimized for IEqlNode", "target": 1}
{"idx": 16663, "func": "we can't just load the first constructor -> go find the correct constructor based -> based on the arguments //", "target": 0}
{"idx": 16664, "func": "try to save the selection. do not dispose of this panel if there is a problem", "target": 0}
{"idx": 16665, "func": "we reuse the 'pp' vector to save time", "target": 0}
{"idx": 16666, "func": "If the object is an input or output object, then use it. //", "target": 0}
{"idx": 16667, "func": "first non_underscore char must be digit", "target": 0}
{"idx": 16668, "func": "//////////////////////////////////////////////////////////////TreeModel implementation", "target": 0}
{"idx": 16669, "func": "the noCodeBaseClassLoader is configured by a call to the removeCodeBase() method, typically in the init() method of an applet...", "target": 0}
{"idx": 16670, "func": "Interpret it as part of the name. //", "target": 0}
{"idx": 16671, "func": "num2int is also implemented", "target": 0}
{"idx": 16672, "func": "---------------------------------------------------------- somewhat arbitrary choices that are quite common for shared installations -----------------------------------------------------------", "target": 0}
{"idx": 16673, "func": "valueLocation", "target": 0}
{"idx": 16674, "func": "i18n[generalSessionPropertiesPanel.dataTYpe2='General Preferences' window under the 'Data Type Controls' tab.]", "target": 0}
{"idx": 16675, "func": "//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());", "target": 0}
{"idx": 16676, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#storesMixedCaseIdentifiers()", "target": 0}
{"idx": 16677, "func": "We only show row counts for tables and views. Other objects won't be affected by changing row counts.", "target": 0}
{"idx": 16678, "func": "i18n[OraclePluginPreferencesPanel.hideRecycleBinCheckBoxToolTip=Recycle Bin tables are a Flashback Database Option in Oracle 10g]", "target": 0}
{"idx": 16679, "func": "Ease debugging... XThis.this refers to the enclosing class instance", "target": 0}
{"idx": 16680, "func": "general", "target": 0}
{"idx": 16681, "func": "mkdir() returns false if the directory was not created; could be because it exists", "target": 0}
{"idx": 16682, "func": "Whether to use dymanic key generation (if supported) $NON-NLS-1$;", "target": 0}
{"idx": 16683, "func": "Schedule updates to collections:", "target": 0}
{"idx": 16684, "func": "//TODO: RENAME to DataSetViewerPropertyDestination", "target": 1}
{"idx": 16685, "func": "save our local copy", "target": 0}
{"idx": 16686, "func": "end class PostLoad", "target": 0}
{"idx": 16687, "func": "successOnly and errorOnly cannot both be set", "target": 0}
{"idx": 16688, "func": "This functionality should eventually go away, as it is replaced by model exporters. We'll just delegate to the deprecated GenPackage method. The monitor isn't used, so we won't pass it. //", "target": 1}
{"idx": 16689, "func": "ZERO-OR-MORE REPEAT OPERATOR", "target": 0}
{"idx": 16690, "func": "MinMaxCategoryRenderer", "target": 0}
{"idx": 16691, "func": "-- EJBQL tokens --", "target": 0}
{"idx": 16692, "func": "get all the files in the sourceDirectory", "target": 0}
{"idx": 16693, "func": "update tree-node (for renaming the new folder)", "target": 0}
{"idx": 16694, "func": "Yes to all", "target": 0}
{"idx": 16695, "func": "line 1415", "target": 0}
{"idx": 16696, "func": "?A | Time | Last access time for file1", "target": 0}
{"idx": 16697, "func": "String Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 16698, "func": "if we just finish, we can't go to sleep until we ensure there is nothing else for us to do. use try again to keep track of this.", "target": 0}
{"idx": 16699, "func": "Unregister deleted instances after all events have been delivered", "target": 0}
{"idx": 16700, "func": "Provide access to HTTPSamplerBase methods", "target": 0}
{"idx": 16701, "func": "Do this if you want to prohibit dropping onto the drag source...", "target": 0}
{"idx": 16702, "func": "single precision, big-endian", "target": 0}
{"idx": 16703, "func": "skip expensive processing if it cannot apply $NON-NLS-1$", "target": 0}
{"idx": 16704, "func": "Hack!!! hopefully the FK name will always be the last token!", "target": 1}
{"idx": 16705, "func": "horizontal tab", "target": 0}
{"idx": 16706, "func": "Memory foreground color", "target": 0}
{"idx": 16707, "func": "i18n[I18n.CouldNotCreateWorkDir=Could not create Working directory {0}]", "target": 0}
{"idx": 16708, "func": "If the notification is an IViewerNotification, it specifies how ViewerRefresh should behave. Otherwise fall back to NotifyChangedToViewerRefresh, which determines how to refresh the viewer directly from the model notification. //", "target": 0}
{"idx": 16709, "func": "PreProcessors are cloned per-thread, so this will be saved per-thread $NON-NLS-1$", "target": 0}
{"idx": 16710, "func": "else the empty s will do", "target": 0}
{"idx": 16711, "func": "//{{{ Extended attributes", "target": 0}
{"idx": 16712, "func": "found category", "target": 0}
{"idx": 16713, "func": "retrieve subject", "target": 0}
{"idx": 16714, "func": "i18n[HibernateTabController.noConfigSelected=Please select a Hibernate configuration to connect to.\\nHibernate configurations can be defined in the global preferences window.\\nWould you like to open the window now?]", "target": 0}
{"idx": 16715, "func": "run garbage collector", "target": 0}
{"idx": 16716, "func": "If the destination is a DataType, then reject:", "target": 0}
{"idx": 16717, "func": "TODO: Rename this to getTableType.", "target": 1}
{"idx": 16718, "func": "rest of the argument array!", "target": 0}
{"idx": 16719, "func": "now used as an interpreter event", "target": 0}
{"idx": 16720, "func": "Search text in response data", "target": 0}
{"idx": 16721, "func": "father and child pattern test", "target": 0}
{"idx": 16722, "func": "Ensure that an external entity resolves as expected with NO XMLCatalog involvement: Transform an XML file that refers to the entity into a text file, stuff result into property: val1 //", "target": 0}
{"idx": 16723, "func": "createSubMenu();", "target": 0}
{"idx": 16724, "func": "//{{{ prettifyMenuLabel() method", "target": 0}
{"idx": 16725, "func": "1000 = millisecs/sec", "target": 0}
{"idx": 16726, "func": "line 657", "target": 0}
{"idx": 16727, "func": "The template for interface modules", "target": 0}
{"idx": 16728, "func": "Destroy it", "target": 0}
{"idx": 16729, "func": "w_unique", "target": 0}
{"idx": 16730, "func": "depending on size of original args, call appropriate utility method", "target": 0}
{"idx": 16731, "func": "up to first ''", "target": 0}
{"idx": 16732, "func": "if message-size is bigger skip download of this message", "target": 0}
{"idx": 16733, "func": "NOTE : evict() operates locally only (i.e., does not propogate to any other nodes in the potential cluster). This is exactly what is needed when we destroy() here; destroy() is used as part of the process of shutting down a SessionFactory; thus these removals should not be propogated", "target": 0}
{"idx": 16734, "func": "call site", "target": 0}
{"idx": 16735, "func": "Transferable", "target": 0}
{"idx": 16736, "func": "first search for appropriate attributes", "target": 0}
{"idx": 16737, "func": "//{{{ setMacroRecorder() method", "target": 0}
{"idx": 16738, "func": "//}}} //{{{ Insert the expansion", "target": 0}
{"idx": 16739, "func": "The class address was not equal, so we don't want this class loader, but instead want the last result that was able to load the class. //", "target": 0}
{"idx": 16740, "func": "Can't do anything if we don't have a fig.", "target": 0}
{"idx": 16741, "func": "@see java.awt.event.WindowListener#windowDeactivated(java.awt.event.WindowEvent)", "target": 0}
{"idx": 16742, "func": "TODO: review the tool tips ? stringField.setToolTipText(Translator.localize(\"label.body.tooltip\"));", "target": 1}
{"idx": 16743, "func": "----------------------- --- Private Methods --- -----------------------", "target": 0}
{"idx": 16744, "func": "Use helper method to write the jarfile", "target": 0}
{"idx": 16745, "func": "@see org.argouml.ui.explorer.Relocatable#isRelocationAllowed(java.lang.Object)", "target": 0}
{"idx": 16746, "func": "line 296", "target": 0}
{"idx": 16747, "func": "TODO: Is this really needed?", "target": 1}
{"idx": 16748, "func": "I need revalidate if node is root. but why?", "target": 0}
{"idx": 16749, "func": "shadowXOffset", "target": 0}
{"idx": 16750, "func": "summary", "target": 0}
{"idx": 16751, "func": "Sockaddr_un has different structure on different platforms. See JRUBY-2213 for more details.", "target": 0}
{"idx": 16752, "func": "private Filter filter; private JDialog dialog;", "target": 0}
{"idx": 16753, "func": "ROW ID", "target": 0}
{"idx": 16754, "func": "since the indices on the pop server start with 1 we add a dummy null for the 0 element in the list", "target": 0}
{"idx": 16755, "func": "Copy data that is shared between samples (i.e. the key items):", "target": 0}
{"idx": 16756, "func": "// ((IMainFrame)comp).addInternalFrame(rdif, false); // rdif.setLayer(JLayeredPane.POPUP_LAYER);", "target": 0}
{"idx": 16757, "func": "FIXME: wtf is this? Why would these use the class?", "target": 1}
{"idx": 16758, "func": "UseCase 4.11.3.5 [4]", "target": 0}
{"idx": 16759, "func": "Cannot return a null source, because we have to call setEntityResolver (see setEntityResolver javadoc comment) //", "target": 0}
{"idx": 16760, "func": "like TABL_INSN", "target": 0}
{"idx": 16761, "func": "(non-Javadoc) @see org.columba.calendar.store.api.IStoreListener#itemAdded(org.columba.calendar.store.api.StoreEvent)", "target": 0}
{"idx": 16762, "func": "do not only update the tag search result when click on a different tag, also do a refresh of the same tag when double click on it", "target": 0}
{"idx": 16763, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#close()", "target": 0}
{"idx": 16764, "func": "This could be '::'.", "target": 0}
{"idx": 16765, "func": "@see org.argouml.uml.diagram.ui.UMLDiagram#setNamespace(java.lang.Object)", "target": 0}
{"idx": 16766, "func": "do nothing!", "target": 0}
{"idx": 16767, "func": "If an initial command was configured then send it. Some FTP servers offer different modes of operation, E.G. switching between a UNIX file system mode and a legacy file system.", "target": 0}
{"idx": 16768, "func": "Has to be done here e.g. when \"Close All Sessions\" menu was used.", "target": 0}
{"idx": 16769, "func": "//{{{ goToNextLine() method", "target": 0}
{"idx": 16770, "func": "@see org.argouml.uml.reveng.ImportSettingTypes.UniqueSelection#setSelection(int)", "target": 0}
{"idx": 16771, "func": "now done in NameSpace automatically when root The classes which are imported by default //globalNameSpace.loadDefaultImports();", "target": 0}
{"idx": 16772, "func": "if the model URL has a suffix of '.zip' or '.jar', get the suffix without it and store it in the urlMap", "target": 0}
{"idx": 16773, "func": "wipe the next (about to be used) set of data slots", "target": 0}
{"idx": 16774, "func": "the second hex character if a character needs to be escaped", "target": 0}
{"idx": 16775, "func": "hack in order to be able to compile in java1.3", "target": 1}
{"idx": 16776, "func": "---- otherStateProvinceCountyLabel ----", "target": 0}
{"idx": 16777, "func": "verify the name property was correctly updated", "target": 0}
{"idx": 16778, "func": "for NetWare and OS/2, piggy-back on Windows, since in the validateSetup code, the same assumptions can be made as with windows - that ; is the path separator", "target": 0}
{"idx": 16779, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#statementExecuted(net.sourceforge.squirrel_sql.plugins.dbcopy.event.StatementEvent)", "target": 0}
{"idx": 16780, "func": "if the user has said to not use this column, then skip it", "target": 0}
{"idx": 16781, "func": "changed the logic for BEA Weblogic in the case a user uses Tomcat's status servlet without any modifications. Weblogic will return nothing for the connector, therefore we need to check the size of the list. Peter 12.22.04", "target": 0}
{"idx": 16782, "func": "_knownTables is just a cache to prevent creating a new String each time", "target": 0}
{"idx": 16783, "func": "if autoRange is true, then the current range is irrelevant", "target": 0}
{"idx": 16784, "func": "Allow read-only access from test code", "target": 0}
{"idx": 16785, "func": "can't cast void to anything", "target": 0}
{"idx": 16786, "func": "//{{{ handleOpenFile() method", "target": 0}
{"idx": 16787, "func": "create pattern", "target": 0}
{"idx": 16788, "func": "//TODO (@author fdietz): keep track of progress here", "target": 1}
{"idx": 16789, "func": "This is needed when the enclosing class or module is a singleton. In that case, we generated a name such as null::Foo, which broke Marshalling, among others. The correct thing to do in this situation is to insert the generate the name of form #<Class:01xasdfasd> if it's a singleton module/class, which this code accomplishes.", "target": 0}
{"idx": 16790, "func": "jetNature.setJavaSourceContainer(newJavaSourceContainer);", "target": 0}
{"idx": 16791, "func": "print the print document (i.e. the message)", "target": 0}
{"idx": 16792, "func": "Remote exit Called by RemoteJMeterEngineImpl.rexit() and by notifyTestListenersOfEnd() iff exitAfterTest is true; in turn that is called by the run() method and the StopTest class also called", "target": 0}
{"idx": 16793, "func": "Allow listeners to close files", "target": 0}
{"idx": 16794, "func": "Returns null if the specified value is null or would be a valid path segment array of a URI; otherwise, the value of the first invalid segment.", "target": 0}
{"idx": 16795, "func": "i18n[syntax.hasBeenAutocorr={0} has been auto corrected / extended to {1}. To configure auto correct / abreviations see Menu Session --> Syntax --> Configure auto correct / abreviation]", "target": 0}
{"idx": 16796, "func": "Length", "target": 0}
{"idx": 16797, "func": "@see org.argouml.model.ModelImplementation#getExtensionMechanismsHelper()", "target": 0}
{"idx": 16798, "func": "args should be before block", "target": 0}
{"idx": 16799, "func": "make next blocks readable without error (repair feature, not yet documented, not tested)", "target": 0}
{"idx": 16800, "func": "//showing \"1e#\"-style ticks or negative exponent generating tick value between 0 & 1; show fewer", "target": 0}
{"idx": 16801, "func": "rightmost domain label starting with digit indicates IP address since top level domain label can only start with an alpha see RFC 2396 Section 3.2.2", "target": 0}
{"idx": 16802, "func": "//{{{ Macro constructor", "target": 0}
{"idx": 16803, "func": "currently only the Hibernate-supplied DbTimestampType is supported here", "target": 0}
{"idx": 16804, "func": "Fill 2 of value (byte) -19 Fill 2 of value (byte) 33 Fill 4 of value (byte) -19 Fill 2 of value (byte) 33", "target": 0}
{"idx": 16805, "func": "DB2 requires that columns be not-null before applying a unique constraint", "target": 0}
{"idx": 16806, "func": "notify all observers", "target": 0}
{"idx": 16807, "func": "State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 16808, "func": "in UML2, some elements are not to be shown", "target": 0}
{"idx": 16809, "func": "TODO: The javadoc specifies that null should be returned if 'from' or 'to' are null or if there are no associations between them. We should return an empty collection instead and the javadoc should be changed.", "target": 1}
{"idx": 16810, "func": "TODO: Make this more efficient for large I/Os", "target": 1}
{"idx": 16811, "func": "end class CrComponentInstanceWithoutClassifier", "target": 0}
{"idx": 16812, "func": "i18n[sqlbookmark.nodeSquirrelMarks=SQuirreL bookmarks]", "target": 0}
{"idx": 16813, "func": "nothing to clear", "target": 0}
{"idx": 16814, "func": "Run the passed in compiler pass on this scope!", "target": 0}
{"idx": 16815, "func": "We just set the prefix for this fileset, and pass it up.", "target": 0}
{"idx": 16816, "func": "@see org.argouml.model.ModelImplementation#getAggregationKind()", "target": 0}
{"idx": 16817, "func": "note that addMethod now does its own put, so any change made to functionality here should be made there as well", "target": 0}
{"idx": 16818, "func": "//MappingFactory", "target": 0}
{"idx": 16819, "func": "super.variables.containsKey( name ) not any faster, I checked", "target": 0}
{"idx": 16820, "func": "wait for Post threads to stop", "target": 0}
{"idx": 16821, "func": "If the first value is null, the second value must be null. //", "target": 0}
{"idx": 16822, "func": "If the line is not wrapping, then parent is OK", "target": 0}
{"idx": 16823, "func": "Ignore any error. The transaction may already have been unwound as part of exception processing by MDR", "target": 0}
{"idx": 16824, "func": "Compare inner loop", "target": 0}
{"idx": 16825, "func": "@see org.argouml.model.CoreHelper#clearStereotypes(java.lang.Object)", "target": 0}
{"idx": 16826, "func": "TODO should this be indeterminate? TODO should this be indeterminate? //$NON-NLS-1$ //$NON-NLS-1$", "target": 1}
{"idx": 16827, "func": "process the \"new\" HQL style where aliases are assigned _after_ the class name or path expression ie. using the AS construction", "target": 0}
{"idx": 16828, "func": "if we're still in this function, just add it at the end.", "target": 0}
{"idx": 16829, "func": "We won't need to process this again later. //", "target": 0}
{"idx": 16830, "func": "line 1746", "target": 0}
{"idx": 16831, "func": "//NOTE: unlike all other Loaders, this one is NOT multithreaded, or cacheable!!", "target": 0}
{"idx": 16832, "func": "null will be returned", "target": 0}
{"idx": 16833, "func": "add this node to cache", "target": 0}
{"idx": 16834, "func": "i18n[InformixPlugin.showViewSource=Show view source]", "target": 0}
{"idx": 16835, "func": "name = textField.getText();", "target": 0}
{"idx": 16836, "func": "cast to Local AbstractMessageFolder is safe here", "target": 0}
{"idx": 16837, "func": "not a comment create RE subexpression as token.", "target": 0}
{"idx": 16838, "func": "add added super interfaces to the array", "target": 0}
{"idx": 16839, "func": "ignored.", "target": 0}
{"idx": 16840, "func": "The object instance has already been initialzed by another constructor. Fall through to invoke the constructor body below.", "target": 0}
{"idx": 16841, "func": "check arguments...delegated", "target": 0}
{"idx": 16842, "func": "domain description", "target": 0}
{"idx": 16843, "func": "public ParseException(String mes) { this(mes, -1); }", "target": 0}
{"idx": 16844, "func": "add a listener to activate or not concurrent dwn.", "target": 0}
{"idx": 16845, "func": "Make array names legal. //", "target": 0}
{"idx": 16846, "func": "//{{{ Instance variables", "target": 0}
{"idx": 16847, "func": "Determine if there is a bounding generic super type. //", "target": 0}
{"idx": 16848, "func": "@see org.argouml.persistence.MemberFilePersister#save(org.argouml.kernel.ProjectMember, java.io.OutputStream)", "target": 0}
{"idx": 16849, "func": "If we are loading a new test plan, initialize the tree with the testplan node we are loading", "target": 0}
{"idx": 16850, "func": "we don't do this in Buffer.insert() so that we can insert multiple files at once", "target": 0}
{"idx": 16851, "func": "first convert internal data into the string array", "target": 0}
{"idx": 16852, "func": "//XmlElement.printNode(e,\"\");", "target": 0}
{"idx": 16853, "func": "3", "target": 0}
{"idx": 16854, "func": "Execute the SQL:", "target": 0}
{"idx": 16855, "func": "Check for the odd case where the terminator and/or filename extension aren't found. These will ensure \"ias-\" appears at the end of the name and before the '.' (if present).", "target": 0}
{"idx": 16856, "func": "fetch the series, remove the change listener, then remove the series.", "target": 0}
{"idx": 16857, "func": "Unwrap collection. //", "target": 0}
{"idx": 16858, "func": "//SwingUtilities.invokeLater(new ScriptRunner(path)); //}}}", "target": 0}
{"idx": 16859, "func": "i18n[DB2Plugin.showTriggerSource=Show trigger source]", "target": 0}
{"idx": 16860, "func": "get the label position..", "target": 0}
{"idx": 16861, "func": "@see org.argouml.uml.ui. AbstractTestActionAddDiagram#getValidNamespaceClasses()", "target": 0}
{"idx": 16862, "func": "Overridden to make it possible to include a stateVertex in a composite state. @see org.tigris.gef.presentation.Fig#setEnclosingFig(org.tigris.gef.presentation.Fig)", "target": 0}
{"idx": 16863, "func": "//iconLabel.setOpaque(true);", "target": 0}
{"idx": 16864, "func": "fireTreeNodesChanged(this, path, childIndices, children);", "target": 0}
{"idx": 16865, "func": "recursive call", "target": 0}
{"idx": 16866, "func": "IF for download concurrent embedded resources", "target": 0}
{"idx": 16867, "func": "Copy the todo items after the model and diagrams so that any model elements or figs that the todo items refer to will exist before creating critics.", "target": 0}
{"idx": 16868, "func": "@see java.awt.event.MouseListener#mouseReleased( java.awt.event.MouseEvent)", "target": 0}
{"idx": 16869, "func": "the entry will be removed after the flush, and will no longer override the stale snapshot This is now handled by removeEntity() in EntityDeleteAction //persistenceContext.removeDatabaseSnapshot(key);", "target": 0}
{"idx": 16870, "func": "Its the listener instance (or better be)", "target": 0}
{"idx": 16871, "func": "Show the password dialog", "target": 0}
{"idx": 16872, "func": "//1i8n[MetaDataDecoratorDataSet.classPathLabel=JDBC Driver CLASSPATH]", "target": 0}
{"idx": 16873, "func": "@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedMetatypes()", "target": 0}
{"idx": 16874, "func": "//////////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 16875, "func": "gotta have at least a zero...", "target": 0}
{"idx": 16876, "func": "//{{{ getTokens() method", "target": 0}
{"idx": 16877, "func": "TODO: Temporary until we sort out a better way to do guido's fix IQueryTokenizer qt2 = sessionUnderTest.getQueryTokenizer();", "target": 1}
{"idx": 16878, "func": "//shadowPaint;", "target": 0}
{"idx": 16879, "func": "verify the copied attribute", "target": 0}
{"idx": 16880, "func": "//{{{ Marker methods", "target": 0}
{"idx": 16881, "func": "then, print out some version info for debuggers...", "target": 0}
{"idx": 16882, "func": "only contains HTTPFileArg elements", "target": 0}
{"idx": 16883, "func": "namespaceAware = false", "target": 0}
{"idx": 16884, "func": "// private int _caretRGB = Color.red.getRGB(); // private int _selectionRGB = 0xccccff; // private int _lineHighlightRGB = Color.lightGray.getRGB(); // private int _eolMarkerRGB = 0x009999; // private int _bracketHighlightRGB = Color.black.getRGB(); // private int _lineNumberRGB = Color.black.getRGB();", "target": 0}
{"idx": 16885, "func": "//do the test", "target": 0}
{"idx": 16886, "func": "clear text with delay", "target": 0}
{"idx": 16887, "func": "Fill 8 of value (byte) 33", "target": 0}
{"idx": 16888, "func": "//{{{ Renderer class", "target": 0}
{"idx": 16889, "func": "The namespace of the activitygraph is changed!", "target": 0}
{"idx": 16890, "func": "//property found, extract its name or bail on a typo", "target": 0}
{"idx": 16891, "func": "get parameters previously set by user, or set default values set to use the Java default", "target": 0}
{"idx": 16892, "func": "i18n[dateTypeTimestamp.timestampInWhere=Do not use Timestamp in WHERE clause]", "target": 0}
{"idx": 16893, "func": "TODO: Ruby logic is somewhat more complicated here, see comments after", "target": 0}
{"idx": 16894, "func": "Needs to be accessible from Test code", "target": 0}
{"idx": 16895, "func": "in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)", "target": 0}
{"idx": 16896, "func": "load static empty array", "target": 0}
{"idx": 16897, "func": "NOTUSED private Class PARSERCLASS = null;", "target": 0}
{"idx": 16898, "func": "next position in the local uid list", "target": 0}
{"idx": 16899, "func": "an error here may mean that the file cannot be reached or has moved or some such. In any case, the file cannot be used for export.", "target": 0}
{"idx": 16900, "func": "Cannot use getThreadContext() as not cloned per thread", "target": 0}
{"idx": 16901, "func": "add -command CheckInFile to the commandline", "target": 0}
{"idx": 16902, "func": "//reserve variables to store the coordinates of the resulting GradientPaint", "target": 0}
{"idx": 16903, "func": "//private boolean autoTickUnitSelection;", "target": 0}
{"idx": 16904, "func": "//{{{ Update this buffer for the new path", "target": 0}
{"idx": 16905, "func": "make it grow when added", "target": 0}
{"idx": 16906, "func": "calculate a new break height according to the contents, possibly smaller to break before some content (i.e. not to break in the middle of something", "target": 0}
{"idx": 16907, "func": "Don't bother if there is no input.", "target": 0}
{"idx": 16908, "func": "You can only value-replace atomic values", "target": 0}
{"idx": 16909, "func": "top, left, bottom, right", "target": 0}
{"idx": 16910, "func": "Start with a little cheat -- in most cases, the entire sequence of character data will already be in the readBuffer; if not, fall through to the normal approach.", "target": 0}
{"idx": 16911, "func": "marsaling dumps usec, not msec", "target": 0}
{"idx": 16912, "func": "when zooming to sub-millisecond ranges, it can be the case that adjEnd == adjStart...and we can't have an axis with zero length so we apply this instead:", "target": 0}
{"idx": 16913, "func": "Just in case", "target": 0}
{"idx": 16914, "func": "Minimum", "target": 0}
{"idx": 16915, "func": "//{{{ initProxy() method", "target": 0}
{"idx": 16916, "func": "line 1625", "target": 0}
{"idx": 16917, "func": "i18n[syntax.osterWarning=You are using the Oster editor. Please consider using the Netbeans editor. See menu File --> New Session Properties --> Syntax]", "target": 0}
{"idx": 16918, "func": "it is handy to have the cannonical path name to show user in error messages. Since getting that name might involve an IOException, we need to put it inside a try statement. However, since the file does exist there is no good reason for getting an IOException at this point, but if we get one there is something seriously wrong and we want to abort. Therefore it make sense to get that name here and save it for later use.", "target": 0}
{"idx": 16919, "func": "Helper interfaces and methods.", "target": 0}
{"idx": 16920, "func": "//Log.log(Log.DEBUG,jEdit.class,fnf);", "target": 0}
{"idx": 16921, "func": "Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern Example: foo{a{c},b}bar -> fooa{c}bar, foobbar", "target": 0}
{"idx": 16922, "func": "hashcode is a combination of the interfaces and the Ruby class we're using to implement them", "target": 0}
{"idx": 16923, "func": "/we have rotation huston, please spin me", "target": 0}
{"idx": 16924, "func": "recoverable inputs", "target": 0}
{"idx": 16925, "func": "//umlReserved.add(\"copy\"); //umlReserved.add(\"create\");", "target": 0}
{"idx": 16926, "func": "setting the message to 'null' causes the status bar to check if a recording is in progress", "target": 0}
{"idx": 16927, "func": "if the user selected Editable Table in the Session Properties, then the display will be an editable table; otherwise the display is read-only", "target": 0}
{"idx": 16928, "func": "@see org.argouml.uml.diagram.layout.Layouter#getMinimumDiagramSize()", "target": 0}
{"idx": 16929, "func": "return last value from execution", "target": 0}
{"idx": 16930, "func": "seriesOutlineStroke", "target": 0}
{"idx": 16931, "func": "There is no default description.", "target": 0}
{"idx": 16932, "func": "this happends if there's nothing left for the next page", "target": 0}
{"idx": 16933, "func": "i18n[ResultTab.limitMessage=Limited to <font color='red'> {0} </font> rows]", "target": 0}
{"idx": 16934, "func": "Do we need to drop constraints before dropping tables in this dialect?", "target": 1}
{"idx": 16935, "func": "?X | boolean | True if file1 exists and is executable by the real uid/gid", "target": 0}
{"idx": 16936, "func": "//{{{ Check for Java 1.3 or later", "target": 0}
{"idx": 16937, "func": "Updates the modelelement container if the fig is moved in or out another fig. If this fig doesn't have an enclosing fig anymore, the namespace of the diagram will be the owning modelelement. If this fig is moved inside another FigNodeModelElement the owner of that fignodemodelelement will be the owning modelelement. @see org.tigris.gef.presentation.FigNode#setEnclosingFig(org.tigris.gef.presentation.Fig)", "target": 0}
{"idx": 16938, "func": "Our superclass no longer has this method, so perhaps this whole thing should be removed? - tfm super.updateListeners(newOwner);", "target": 1}
{"idx": 16939, "func": "Need to account for allowable '_' within the variant", "target": 0}
{"idx": 16940, "func": "add row headers to help user understand what the second row is", "target": 0}
{"idx": 16941, "func": "@see GUISettingsTabInterface#handleSettingsTabRefresh()", "target": 0}
{"idx": 16942, "func": "TODO: Must we calculate the whole list?", "target": 1}
{"idx": 16943, "func": "otherwise, determine the next visible line", "target": 0}
{"idx": 16944, "func": "model -> view", "target": 0}
{"idx": 16945, "func": "( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() ).setNullable(false);", "target": 0}
{"idx": 16946, "func": "update popup menu with search term before its made visible textField.addPopupMenuListener(this);", "target": 0}
{"idx": 16947, "func": "i18n[mssql.delay={0}s delay]", "target": 0}
{"idx": 16948, "func": "---------- Public fields, methods ---------", "target": 0}
{"idx": 16949, "func": "collapsible.getContentPane().setBackground(Color.WHITE);", "target": 0}
{"idx": 16950, "func": "JMeter.fail(\"Could not read internal resource. \" + \"Archive is broken.\");", "target": 0}
{"idx": 16951, "func": "Precondition: pattern[index-1] == ':' we will return pos of closing ']'.", "target": 0}
{"idx": 16952, "func": "(non-Javadoc) @see org.columba.ristretto.composer.MimePartRenderer#render(org.columba.ristretto.message.StreamableMimePart)", "target": 0}
{"idx": 16953, "func": "TODO: Add double click listener", "target": 0}
{"idx": 16954, "func": "need to extract the component values and check for subtype replacements...", "target": 0}
{"idx": 16955, "func": "If the values aren't Java equal, the feature maps aren't equal. //", "target": 0}
{"idx": 16956, "func": "if user did anything other than default, then save their options", "target": 0}
{"idx": 16957, "func": "//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$", "target": 0}
{"idx": 16958, "func": "Initialize font sizes list", "target": 0}
{"idx": 16959, "func": "Parsed request headers", "target": 0}
{"idx": 16960, "func": "just the vertical axis...", "target": 0}
{"idx": 16961, "func": "i18n[codeCompletion.prefsExplain=When completing functions SQuirreL doesn't know if a function is a stored procedure or a user defined function. To make code completion of these two kinds of functions convenient SQuirreL offers to configure which way completion should work.]", "target": 0}
{"idx": 16962, "func": "If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //", "target": 0}
{"idx": 16963, "func": "Continue with the established base URL.", "target": 0}
{"idx": 16964, "func": "will always be null", "target": 0}
{"idx": 16965, "func": "Only change the background colour if it is supplied by the LAF. Otherwise leave look and feel to handle this itself.", "target": 0}
{"idx": 16966, "func": "Dump table types.", "target": 0}
{"idx": 16967, "func": "?u | boolean | True if file1 has the setuid bit set", "target": 0}
{"idx": 16968, "func": "Only close the statement if SQLException - otherwise it has to remain open until the ResultSet is read through by the caller.", "target": 0}
{"idx": 16969, "func": "If the operation has changed significantly... //", "target": 0}
{"idx": 16970, "func": "TODO - should the encoding be configurable? $NON-NLS-1$", "target": 1}
{"idx": 16971, "func": "/////////////////////////////////////////////////////////////////////////From XYDataset ///////////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 16972, "func": "i18n[SchemaTableUpdateWhatItem.procedures=Procedures]", "target": 0}
{"idx": 16973, "func": "by default, the renderer with index 0 is used", "target": 0}
{"idx": 16974, "func": "return the connection", "target": 0}
{"idx": 16975, "func": "//{{{ addRuleSet() method", "target": 0}
{"idx": 16976, "func": "Non empty filters", "target": 0}
{"idx": 16977, "func": "We can just use dt, since it is immutable", "target": 0}
{"idx": 16978, "func": "line 345", "target": 0}
{"idx": 16979, "func": "Make sure the component width isn't any greater than its maximum allowed width", "target": 0}
{"idx": 16980, "func": "//weblogic.ejbc.main(args);", "target": 0}
{"idx": 16981, "func": "just do the regular thing if you can't find the ctor Your AST must have default ctor to use this.", "target": 0}
{"idx": 16982, "func": "For those things which we've already migrated to UML 2.x syntax we need to map them back to their UML 1.4 equivalents during the migration period.", "target": 0}
{"idx": 16983, "func": "//{{{ registerVFS() method", "target": 0}
{"idx": 16984, "func": "go on to the next item", "target": 0}
{"idx": 16985, "func": "we didn't get an exception so all is good", "target": 0}
{"idx": 16986, "func": "Save project at slightly lower priority to keep UI responsive", "target": 0}
{"idx": 16987, "func": "Fill 4 of value (byte) -87 Fill 7 of value (byte) 33 Fill 2 of value (byte) -87 Fill 7 of value (byte) 33", "target": 0}
{"idx": 16988, "func": "make sure not print empty pages", "target": 0}
{"idx": 16989, "func": "moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 16990, "func": "Is this a work in progress ? No, not a work in progress ...", "target": 0}
{"idx": 16991, "func": "Add each stub/skeleton class to the list of EJB files. Note that each class is added even if it doesn't exist now.", "target": 0}
{"idx": 16992, "func": "If any subexpressions didn't terminate, they don't count TODO check if this code ever gets hit", "target": 1}
{"idx": 16993, "func": "//{{{ createToken() method", "target": 0}
{"idx": 16994, "func": "//checkVariableModifiers( name, modifiers );", "target": 0}
{"idx": 16995, "func": "//{{{ getRuleSets() method", "target": 0}
{"idx": 16996, "func": "\"backup file\"", "target": 0}
{"idx": 16997, "func": "@bgen(jjtree) EnhancedForStatement", "target": 0}
{"idx": 16998, "func": "//{{{ showVFSFileDialog() method", "target": 0}
{"idx": 16999, "func": "followLinks should be true by default, but if this ever changes we will need this line.", "target": 0}
{"idx": 17000, "func": "@see org.argouml.application.api.ProgressMonitor#notifyNullAction()", "target": 0}
{"idx": 17001, "func": "else No object in Map, ctx is the one", "target": 0}
{"idx": 17002, "func": "//Class/setGenFeature.annotations.insert.javajetinc", "target": 0}
{"idx": 17003, "func": "//{{{ setIntegerProperty() method", "target": 0}
{"idx": 17004, "func": "It is safe to give a null to the next function, since a statemachine is always composed by a model anyhow.", "target": 0}
{"idx": 17005, "func": "now replacing the dataset should update the axis range...", "target": 0}
{"idx": 17006, "func": "If a table cell is being edited, we must cancel the editing before deleting the row.", "target": 0}
{"idx": 17007, "func": "//{{{ HelpNode class", "target": 0}
{"idx": 17008, "func": "Only instantiate when we need it.", "target": 0}
{"idx": 17009, "func": "Add exception in included segments", "target": 0}
{"idx": 17010, "func": "if we've been panning, we need to reset now that the mouse is released...", "target": 0}
{"idx": 17011, "func": "line 1270", "target": 0}
{"idx": 17012, "func": "Can't add a TestPlan anywhere", "target": 0}
{"idx": 17013, "func": "line 1745", "target": 0}
{"idx": 17014, "func": "i18n[firebird.trigDetails=Details]", "target": 0}
{"idx": 17015, "func": "-- Path operations --", "target": 0}
{"idx": 17016, "func": "classpath", "target": 0}
{"idx": 17017, "func": "This is used to keep track of local (non-remote) tests The name is chosen to be an unlikely host-name $NON-NLS-1$", "target": 0}
{"idx": 17018, "func": "we're in a modal dialog", "target": 0}
{"idx": 17019, "func": "value copy and type conversion operations", "target": 0}
{"idx": 17020, "func": "@see org.argouml.model.PseudostateKind#getJunction()", "target": 0}
{"idx": 17021, "func": "//{{{ expandFold() method", "target": 0}
{"idx": 17022, "func": "the name of this type of diagram", "target": 0}
{"idx": 17023, "func": "cleanup, raising errors if any", "target": 0}
{"idx": 17024, "func": "An array of valid connections, the combination of connecting class and node classes must exist as a row in this list to be considered valid. <ul> <li>The 1st column is the connecting element. <li>The 2nd column is the \"from\" element type. <li>The 3rd column is the \"to\" element type. The 3rd column is optional, if not given then it is assumed to be the same as the \"from\" element. <li>The existence of a 4th column indicates that the connection is valid in one direction only. </ul> TODO: This encodes not only what is legal in UML, but also what ArgoUML knows how to create, so not all legal connections are included. Probably should be split into two pieces: 1) legal UML (here) and 2) supported (in ArgoUML application someplace) - tfm - 20060325<p> See also issue 3863.<p> Most of these are subtypes of Relationship which includes Association, Dependency, Flow, Generalization, Extend, and Include. Dependency includes Binding, Abstraction, Usage, and Permission. AssociationRole and AssociationClass are Associations. The remaining items (Link, Transition, AssociationEnd, Message) are non-Relationship types which ArgoUML treats as connections/edges.", "target": 1}
{"idx": 17025, "func": "+ 6;", "target": 0}
{"idx": 17026, "func": "if this series belongs to a dataset, the dataset might veto the change if it results in two series within the dataset having the same key", "target": 0}
{"idx": 17027, "func": "{", "target": 0}
{"idx": 17028, "func": "clone share data sets => add the clone as listener to the dataset", "target": 0}
{"idx": 17029, "func": "//TODO: switch statements are always evil! We already had bugs because of forgotten token types. Use polymorphism for this!", "target": 1}
{"idx": 17030, "func": "If there is a base XML or Ecore type, use one of the two corresponding built-in factories to create a value from the literal string. //", "target": 0}
{"idx": 17031, "func": "Use a suite to allow the tests to be generated at run-time", "target": 0}
{"idx": 17032, "func": "calculate mailbox size in background worker", "target": 0}
{"idx": 17033, "func": "@see javax.management.NotificationEmitter#removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)", "target": 0}
{"idx": 17034, "func": "process special keys $NON-NLS-1$", "target": 0}
{"idx": 17035, "func": "close composer view", "target": 0}
{"idx": 17036, "func": "just the animation, if there are more than zero workers running", "target": 0}
{"idx": 17037, "func": "//}}} //{{{ EOL_SPAN_REGEXP", "target": 0}
{"idx": 17038, "func": "TODO - belongs elsewhere", "target": 1}
{"idx": 17039, "func": "//we must clone embedded composite identifiers, or //we will get back the same instance that we pass in", "target": 0}
{"idx": 17040, "func": "autoRedirects and followRedirects cannot both be selected", "target": 0}
{"idx": 17041, "func": "Now eliminate any classpath entries that do not \"match\" the search", "target": 0}
{"idx": 17042, "func": "//SwingUtilities.updateComponentTreeUI(getRootPane()); //}}}", "target": 0}
{"idx": 17043, "func": "Virtual memory (heap) stats", "target": 0}
{"idx": 17044, "func": "line 1950", "target": 0}
{"idx": 17045, "func": "Convert to URL for manifest", "target": 0}
{"idx": 17046, "func": "//XMLInfoImpl", "target": 0}
{"idx": 17047, "func": "register for configuration changes for the html(enabled/disabled) state", "target": 0}
{"idx": 17048, "func": "TODO (@author karlpeder): Extend handling of special entities as in restoreSpecialCharacters", "target": 1}
{"idx": 17049, "func": "rb_str_hash_cmp", "target": 0}
{"idx": 17050, "func": "checkbox for read/not-read on table load", "target": 0}
{"idx": 17051, "func": "i18n[UpdateSummaryDialog.title=Update Summary]", "target": 0}
{"idx": 17052, "func": "Vector", "target": 0}
{"idx": 17053, "func": "TODO do tests for allInstances (8.5.11), even though it is not yet supported", "target": 1}
{"idx": 17054, "func": "gota go now", "target": 0}
{"idx": 17055, "func": "Trigger tabs", "target": 0}
{"idx": 17056, "func": "/ / class RoseToken /", "target": 0}
{"idx": 17057, "func": "Find or create the WHERE clause", "target": 0}
{"idx": 17058, "func": "PERTHREAD FIELD", "target": 0}
{"idx": 17059, "func": "The types represented in the SQL result set. @return The types represented in the SQL result set.", "target": 0}
{"idx": 17060, "func": "Postgres has some special indexes that only work on certain columns. Skip tests for those", "target": 0}
{"idx": 17061, "func": "Create the test file content", "target": 0}
{"idx": 17062, "func": "ISessionListener interface methods", "target": 0}
{"idx": 17063, "func": "this set is only for darwin", "target": 0}
{"idx": 17064, "func": "plugin wasn't correctly loaded", "target": 0}
{"idx": 17065, "func": "create a local temporary file", "target": 0}
{"idx": 17066, "func": "Start handling SAX events", "target": 0}
{"idx": 17067, "func": "deal with the single file", "target": 0}
{"idx": 17068, "func": "the converters handle not only primitive types but also their boxed versions, so we should check if we have a converter before checking for isPrimitive()", "target": 0}
{"idx": 17069, "func": "exclusion filter assumes most of the files are used, therefore usefile is set to true, unless it matches.", "target": 0}
{"idx": 17070, "func": "COMPOSITE-ID", "target": 0}
{"idx": 17071, "func": "prevent no changes...", "target": 0}
{"idx": 17072, "func": "create config-folder // File file = new File(\"test_config\"); // file.mkdir(); // new Config(file); // Logging.DEBUG = true; // Logging.createDefaultHandler(); // init mail component // new MailMain().init(); // new AddressbookMain().init(); // now load all available plugins // PluginManager.getInstance().initExternalPlugins();", "target": 0}
{"idx": 17073, "func": "Some error in the client/server communication --> fall back to default login process", "target": 0}
{"idx": 17074, "func": "Use a suite to ensure that the default is done first", "target": 0}
{"idx": 17075, "func": "Java and MRI definitions of divmod are different.", "target": 0}
{"idx": 17076, "func": "use the default settings for the conversion", "target": 0}
{"idx": 17077, "func": "//i18n[DropTableDialog.title=Drop Table(s)]", "target": 0}
{"idx": 17078, "func": "TODO: This shouldn't be public. Its only been done for the JComplete plugin. At some stage this method will be returned to package visibility.", "target": 1}
{"idx": 17079, "func": "Start with simple absolute file names.", "target": 0}
{"idx": 17080, "func": "TODO how to implement this method properly?", "target": 1}
{"idx": 17081, "func": "Empty implementation.", "target": 1}
{"idx": 17082, "func": "\"CREATE VIEW $viewName$ \" + \"AS $selectStatement$ $withCheckOption$\";", "target": 0}
{"idx": 17083, "func": "Remember to change this when the class changes ...", "target": 1}
{"idx": 17084, "func": "//{{{ Main parser loop", "target": 0}
{"idx": 17085, "func": "AWT thread magic", "target": 0}
{"idx": 17086, "func": "table of which we are part (needed for creating popup dialog)", "target": 0}
{"idx": 17087, "func": "no background mode, and opening a new view", "target": 0}
{"idx": 17088, "func": "//{{{ shiftIndentLeft() method", "target": 0}
{"idx": 17089, "func": "Empty value $NON-NLS-1$", "target": 0}
{"idx": 17090, "func": "invokeinterface callback.write(..)", "target": 0}
{"idx": 17091, "func": "Cast to int required as Dimension::setSize(double,double) doesn't appear to do anything in JDK1.2.2.", "target": 1}
{"idx": 17092, "func": "Add the main panel and the graph", "target": 0}
{"idx": 17093, "func": "The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //", "target": 0}
{"idx": 17094, "func": "//To get the TableInfo for the selected object in the tree", "target": 0}
{"idx": 17095, "func": "a == b", "target": 0}
{"idx": 17096, "func": "create menu", "target": 0}
{"idx": 17097, "func": "//////////////////////////////////////////////////////////////static accessors", "target": 0}
{"idx": 17098, "func": "and its features", "target": 0}
{"idx": 17099, "func": "Set the child components to the heights in the array list calculating the height of any proportional component on the fly. FIXME - This assumes that the JLabel and the component it labels have been added to the parent component consecutively.", "target": 1}
{"idx": 17100, "func": "Add missing EOF character", "target": 0}
{"idx": 17101, "func": "//timer.start();", "target": 0}
{"idx": 17102, "func": "Not used, as the <testResult> element is generated by the ResultCollector class", "target": 1}
{"idx": 17103, "func": "Set the content type", "target": 0}
{"idx": 17104, "func": "it is unlikely that 'state' will be null, but check anyway...", "target": 0}
{"idx": 17105, "func": "write the header to the output stream. this has the format (delimeters are not written): PBE IV|ENCRYPTION IV|ENCRYPTED KEY LENGTH|ENCRYPTED KEY", "target": 0}
{"idx": 17106, "func": "//i18n[explainplanexecuter.planTableUnavailable=Explain plans //will be unavailable for this session]", "target": 0}
{"idx": 17107, "func": "period", "target": 0}
{"idx": 17108, "func": "Indicate that the test was validated", "target": 0}
{"idx": 17109, "func": "//{{{ cacheBlock() method", "target": 0}
{"idx": 17110, "func": "'stroke' : immutable, no need to clone reference", "target": 0}
{"idx": 17111, "func": "strip c: away from relative-pathed name", "target": 0}
{"idx": 17112, "func": "redundant with constructor", "target": 1}
{"idx": 17113, "func": "Temporary fix to allow default protocol to be changed", "target": 1}
{"idx": 17114, "func": "Compute the URL for where the classes for this project will be located. //", "target": 0}
{"idx": 17115, "func": "get the incoming case value", "target": 0}
{"idx": 17116, "func": "try an index out of bounds", "target": 0}
{"idx": 17117, "func": "//{{{ createMarkFollowingRule() method", "target": 0}
{"idx": 17118, "func": "ignored this event", "target": 0}
{"idx": 17119, "func": "i18n[sqlscript.enterNameOfTable=Enter name of table:]", "target": 0}
{"idx": 17120, "func": "otherwise we use \"text/xml\" as the default //$NON-NLS-1$", "target": 0}
{"idx": 17121, "func": "(NOT (LIKE a b) ) => (NOT_LIKE a b)", "target": 0}
{"idx": 17122, "func": "first off, make sure that we've got a command and a vssdir...", "target": 0}
{"idx": 17123, "func": "skip the greater of the two distances provided by the heuristics", "target": 0}
{"idx": 17124, "func": "remove from old mediator's listener list", "target": 0}
{"idx": 17125, "func": "Return a JTextArea usable in the CellPopupDialog.", "target": 0}
{"idx": 17126, "func": "//{{{ Broken class", "target": 1}
{"idx": 17127, "func": "i18n[graph.showddl=show DDL]", "target": 0}
{"idx": 17128, "func": "@see javax.swing.ListModel#getElementAt(int)", "target": 0}
{"idx": 17129, "func": "show 'close' item if at least one selected file is currently open", "target": 0}
{"idx": 17130, "func": "//////////////////////////////////////////////////////////////accessor methods", "target": 0}
{"idx": 17131, "func": "FIXME: MRI has special case for constants here", "target": 1}
{"idx": 17132, "func": "line 983", "target": 0}
{"idx": 17133, "func": "should be safe to only ever expect EntityPersister references here", "target": 0}
{"idx": 17134, "func": "Helper method to find a test path", "target": 0}
{"idx": 17135, "func": "Handle firing a diagram appearance event. <p> TODO: This needs to be managed on a per-diagram or per-project basis. @param event The event to be fired. @param listener The listener.", "target": 1}
{"idx": 17136, "func": "//{{{ finishLoading() method", "target": 0}
{"idx": 17137, "func": "add entries for insert and delete rows only if table is updateable and already editable (ie. allowEditing is false)", "target": 0}
{"idx": 17138, "func": "no attachments found - just insert a Content-Type header extra header necessary X-Attachments header is replaced", "target": 0}
{"idx": 17139, "func": "//i18n[syntax.literals=Literals]", "target": 0}
{"idx": 17140, "func": "Rows", "target": 0}
{"idx": 17141, "func": "iso-2022-jp", "target": 0}
{"idx": 17142, "func": "//{{{ Deep indenting", "target": 0}
{"idx": 17143, "func": "Help with garbage control", "target": 0}
{"idx": 17144, "func": "TODO: finish i18n", "target": 1}
{"idx": 17145, "func": "0B00..0B7F;", "target": 0}
{"idx": 17146, "func": "INSTANCE VARIABLE API METHODS //", "target": 0}
{"idx": 17147, "func": "not found. start from beginning", "target": 0}
{"idx": 17148, "func": "Most browsers use ISO-8859-1 as default encoding, even if spec says UTF-8 TODO - charset?", "target": 0}
{"idx": 17149, "func": "If invokee was provided, then clazz has been set up", "target": 0}
{"idx": 17150, "func": "The serialVersionUID (generated by Eclipse)", "target": 0}
{"idx": 17151, "func": "I18n[DriverPropertiesController.gettingDriverPropetiesFailed=Loading the properties from the JDBC driver failed.\\nCan not load driver properties tab.]", "target": 0}
{"idx": 17152, "func": "i18n[i18n.executingCommandFailed=Execution failed with error: {0}]", "target": 0}
{"idx": 17153, "func": "check number of tree nodes", "target": 0}
{"idx": 17154, "func": "i18n[ResultTab.resultsTabTitle=Results]", "target": 0}
{"idx": 17155, "func": "////////////TableModel implementation", "target": 0}
{"idx": 17156, "func": "----- Helper Methods --------------------------------------------------------", "target": 0}
{"idx": 17157, "func": "i18n[MemoryPanel.memSize={0} of {1} MB];", "target": 0}
{"idx": 17158, "func": "private static final Logger log = LoggingManager.getLoggerForClass();", "target": 0}
{"idx": 17159, "func": "if 1/3 of all characters are digits", "target": 0}
{"idx": 17160, "func": "visible (gui) ------------------------------------------------------------------------ -- misc", "target": 0}
{"idx": 17161, "func": "i18n[mysql.createTableBtn=Create table]", "target": 0}
{"idx": 17162, "func": "for Object, default to natural wrapper type", "target": 0}
{"idx": 17163, "func": "See if we should place this toolbar before any others", "target": 0}
{"idx": 17164, "func": "same name, different classes, everything ok", "target": 0}
{"idx": 17165, "func": "REVISIT: Remove this code. Store port value as string instead of integer.", "target": 1}
{"idx": 17166, "func": "i18n[ActionCollection.createActionInfo=Attempting to load action class - {0}]", "target": 0}
{"idx": 17167, "func": "Class to test", "target": 0}
{"idx": 17168, "func": "Translate \"x || y\" --> \"x = (is_true(x) ? x : y)\" --> x = -- build(x) should return a variable! -- f = is_true(x) beq(f, true, L) x = -- build(y) -- L: //", "target": 0}
{"idx": 17169, "func": "Perform the sampling", "target": 0}
{"idx": 17170, "func": "Delegate the action for this object to the editing domain. //", "target": 0}
{"idx": 17171, "func": "TODO: SPATIAL and FULLTEXT indexes require a MyISAM engine for the table. Is there a way to tell what engine is being used for a table? It may not be necessary, since the following doens't hurt if already a MyISAM engine: ALTER TABLE my_table ENGINE = MYISAM; Still, this is not the kind of thing we would want to do automatically, since MyISAM engine is non-transactional. We will probably need to tell the user - somehow - that they need this otherwise the create index statement will fail. Maybe a comment in the script and if they happen to read it they could uncomment the conversion of the engine? Maybe a custom dialog?", "target": 1}
{"idx": 17172, "func": "Begin constructors", "target": 0}
{"idx": 17173, "func": "line 1173", "target": 0}
{"idx": 17174, "func": "front pad with zeros and add to output", "target": 0}
{"idx": 17175, "func": "message doesn't contain this headerfield", "target": 0}
{"idx": 17176, "func": "//props.forceTableContentsOutputClassNameChange();", "target": 0}
{"idx": 17177, "func": "Get the parent object. //", "target": 0}
{"idx": 17178, "func": "(non-Javadoc) @see org.columba.api.gui.frame.IFrameMediator#savePositions()", "target": 0}
{"idx": 17179, "func": "re-add all top components like recipient editor/subject editor", "target": 0}
{"idx": 17180, "func": "try negative row index", "target": 0}
{"idx": 17181, "func": "EntryRefs include hash with key to facilitate lookup by Segment#expunge after ref is removed from ReferenceQueue", "target": 0}
{"idx": 17182, "func": "optimization guards", "target": 0}
{"idx": 17183, "func": "no matching method found", "target": 0}
{"idx": 17184, "func": "line 1392", "target": 0}
{"idx": 17185, "func": "//{{{ getSelectAllOnFocus() method", "target": 0}
{"idx": 17186, "func": "This should NOT be looking for a NamedElement, since this is not always about the name of this modelelement alone.", "target": 1}
{"idx": 17187, "func": "Create a new FROM node for the referenced class.", "target": 0}
{"idx": 17188, "func": "evaluate the expression", "target": 0}
{"idx": 17189, "func": "We have found a non-static one that is not initialized.", "target": 0}
{"idx": 17190, "func": "can't create new instances", "target": 0}
{"idx": 17191, "func": "cause a syntax error", "target": 0}
{"idx": 17192, "func": "Layers for top group", "target": 0}
{"idx": 17193, "func": "use the DateFormat to parse", "target": 0}
{"idx": 17194, "func": "stripOutlinePaint", "target": 0}
{"idx": 17195, "func": "Skip certain actions this way", "target": 0}
{"idx": 17196, "func": "If the are the same then it is bounded properly... //", "target": 0}
{"idx": 17197, "func": "Parameter handling code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 17198, "func": "NOTE: For historical reasons true == hide, so we need to invert the sense of this", "target": 0}
{"idx": 17199, "func": "Cc", "target": 0}
{"idx": 17200, "func": "todo : is there really any reason to kkeep trying if this fails once?", "target": 1}
{"idx": 17201, "func": "If there are delegated features, add only those that aren't already in this package to the end of the list. //", "target": 0}
{"idx": 17202, "func": "silent ?", "target": 0}
{"idx": 17203, "func": "//{{{ MenuMouseHandler class", "target": 0}
{"idx": 17204, "func": "i18n[DataSetUpdateableTableModelImpl.confirmupdateallrows=The table has no columns that can be SELECTed on.\\nAll rows will be updated.\\nDo you wish to proceed?]", "target": 0}
{"idx": 17205, "func": "If there is one file with no parameter name, the file will be sent as post body.", "target": 0}
{"idx": 17206, "func": "the condition or iteration expression (recurrence):", "target": 0}
{"idx": 17207, "func": "want to keep toDir itself", "target": 0}
{"idx": 17208, "func": "mail folder tree", "target": 0}
{"idx": 17209, "func": "Parse arguments all at once", "target": 0}
{"idx": 17210, "func": "rely on PATH", "target": 0}
{"idx": 17211, "func": "//_driversListWindow.nowVisible(false);", "target": 0}
{"idx": 17212, "func": "copy pre-match substr", "target": 0}
{"idx": 17213, "func": "line 1782", "target": 0}
{"idx": 17214, "func": "Write any left over bytes in the input buffer (perhaps from a partially decoded character)", "target": 0}
{"idx": 17215, "func": "//not absolutely necessary, but helps for some //equals()/hashCode() implementations", "target": 0}
{"idx": 17216, "func": "create a copy of this dockable window and float it", "target": 0}
{"idx": 17217, "func": "normal case, create a new label", "target": 0}
{"idx": 17218, "func": "package access for test code only", "target": 0}
{"idx": 17219, "func": "documentation nodes", "target": 0}
{"idx": 17220, "func": "don't call isHeadless() here, as it has a side effect. --", "target": 0}
{"idx": 17221, "func": "Essentially: 1) If we have a local (Hibernate) transaction in progress and it already has the UserTransaction cached, use that UserTransaction to determine the status. 2) If a transaction manager has been located, use that transaction manager to determine the status. 3) Finally, as the last resort, try to lookup the UserTransaction via JNDI and use that to determine the status.", "target": 0}
{"idx": 17222, "func": "//{{{ MouseOptionPane constructor", "target": 0}
{"idx": 17223, "func": "Cache of parsers - parsers must be re-usable", "target": 0}
{"idx": 17224, "func": "// @author: fdietz never request focus //requestFocus();", "target": 0}
{"idx": 17225, "func": "replaceBtn,", "target": 0}
{"idx": 17226, "func": "if we failed to bind the blob in a file, try memory.", "target": 0}
{"idx": 17227, "func": "null -> relative URI reference", "target": 0}
{"idx": 17228, "func": "i18n[TableExportCsvDlg.exportCsvFile=Export to file:]", "target": 0}
{"idx": 17229, "func": "The new height can not be less than the name height:", "target": 0}
{"idx": 17230, "func": "//-- XMLCatalog", "target": 0}
{"idx": 17231, "func": "create the plot...", "target": 0}
{"idx": 17232, "func": "Just call the getExecuteStreamHandler() and let it handle the semantics of instantiation or retrieval. //", "target": 0}
{"idx": 17233, "func": "TODO should this be JTLSAVER? Only seems to be called by MonitorHealthVisualzer", "target": 1}
{"idx": 17234, "func": "FIXME: missing arity check", "target": 1}
{"idx": 17235, "func": "//private double angle;", "target": 0}
{"idx": 17236, "func": "CR without LF - send buffer then add char", "target": 0}
{"idx": 17237, "func": "try to sync up the console", "target": 0}
{"idx": 17238, "func": "date range", "target": 0}
{"idx": 17239, "func": "Only show actions for associations not already on diagram", "target": 0}
{"idx": 17240, "func": "//{{{ getFocusTraversalKeysEnabled() method", "target": 0}
{"idx": 17241, "func": "TODO: Try reusing the same set on every recursion", "target": 1}
{"idx": 17242, "func": "//{{{ getVFS() method", "target": 0}
{"idx": 17243, "func": "Get the first existing FigNode and if it exists set the y position and height of _pers to be the same as it.", "target": 0}
{"idx": 17244, "func": "//shadow size", "target": 0}
{"idx": 17245, "func": "The method doesn't need a scope, but has static scope needs; use a dummy scope", "target": 0}
{"idx": 17246, "func": "@see tudresden.ocl.check.types.ModelFacade#getClassifier(java.lang.String)", "target": 0}
{"idx": 17247, "func": "assume that the node is being moved (to allow insertion after)", "target": 0}
{"idx": 17248, "func": "The redirect URL we got was not a valid URL", "target": 0}
{"idx": 17249, "func": "(non-Javadoc) @see org.columba.calendar.ui.calendar.api.ICalendarView#getSelectedActivity()", "target": 0}
{"idx": 17250, "func": "//do this here because setting the text will set enablement on the OK button", "target": 0}
{"idx": 17251, "func": "fall through", "target": 0}
{"idx": 17252, "func": "adjust text bounds to match string position", "target": 0}
{"idx": 17253, "func": "text is short, tooltip is long", "target": 0}
{"idx": 17254, "func": "TODO same zero-length checks as file above", "target": 1}
{"idx": 17255, "func": "Complete using a Proc object", "target": 0}
{"idx": 17256, "func": "//{{{ getSelectionEnd() method", "target": 0}
{"idx": 17257, "func": "Note: incorrect here - we are using the hack in bsh class manager that allows lookup by base name. We need to eliminate this limitation by working through imports. See notes in class manager.", "target": 1}
{"idx": 17258, "func": "//{{{ dragAndDropCallback() method", "target": 0}
{"idx": 17259, "func": "//WARNING: We trim the values of all the attributes because //Some extension declarations are badly defined (ie have spaces //after version or vendor)", "target": 0}
{"idx": 17260, "func": "other hash does not contain key", "target": 0}
{"idx": 17261, "func": "TODO: This is a temporary crutch to use until all Figs are updated to use the constructor that accepts a DiagramSettings object", "target": 1}
{"idx": 17262, "func": "Check for required attributes", "target": 0}
{"idx": 17263, "func": "method still not available, call method_missing", "target": 0}
{"idx": 17264, "func": "// Point pt = JFCUtilities.computePopupLocation(evt, evt.getComponent(), this);", "target": 0}
{"idx": 17265, "func": "//{{{ prevBuffer() method", "target": 0}
{"idx": 17266, "func": "//must add to JNDI _after_ adding to HashMaps, because some JNDI servers use serialization", "target": 0}
{"idx": 17267, "func": "Directory where \"source\" EJB files are stored and where stubs and skeletons will also be written.", "target": 0}
{"idx": 17268, "func": "If we are merging in another test plan, we know the test plan is dirty now", "target": 0}
{"idx": 17269, "func": "for prec 15 root x0 must surely be OK return small prec roots without iterations", "target": 0}
{"idx": 17270, "func": "i18n[DatabaseMetaData.nullableTypeNullableUnknown=unknown]", "target": 0}
{"idx": 17271, "func": "i18n[graph.orderPksConstr=order PKs/constraints on top]", "target": 0}
{"idx": 17272, "func": "Add to package. //", "target": 0}
{"idx": 17273, "func": "//{{{ getVFSByName() method", "target": 0}
{"idx": 17274, "func": "Satisfy java.util.Set interface (for Java integration)", "target": 0}
{"idx": 17275, "func": "(non-Javadoc) @see org.apache.http.conn.ssl.SSLSocketFactory#createSocket()", "target": 0}
{"idx": 17276, "func": "ignore, we're on the way out", "target": 0}
{"idx": 17277, "func": "remove message", "target": 0}
{"idx": 17278, "func": "When running from maven", "target": 0}
{"idx": 17279, "func": "it will not be done correctly, if the first statement is omitted", "target": 0}
{"idx": 17280, "func": "//{{{ getIdealIndentForLine() method", "target": 0}
{"idx": 17281, "func": "We know that it's not interesting to show any code above where we get involved in event dispatch, so we stop printing the stack trace when we get as far back as our code.", "target": 0}
{"idx": 17282, "func": "read in the name", "target": 0}
{"idx": 17283, "func": "rb_reg_raise", "target": 0}
{"idx": 17284, "func": "thermometerPaint", "target": 0}
{"idx": 17285, "func": "Map of JAR file URLs containing LAFs keyed by the LAF class name.", "target": 0}
{"idx": 17286, "func": "only want to do this the first time", "target": 0}
{"idx": 17287, "func": "Build up an array list of the heights of each label/component pair. Heights of zero indicate a proportional height.", "target": 0}
{"idx": 17288, "func": "Must go backwards or else the filters will swap places with each other.", "target": 0}
{"idx": 17289, "func": "Tell server that we are done", "target": 0}
{"idx": 17290, "func": "Can this call lead to ruby code getting modified? If we don't know what method we are calling, we assume it can (pessimistic, but safe!) If we do know the target method, we ask the method itself whether it modifies ruby code", "target": 0}
{"idx": 17291, "func": "TODO: concatenate? - tfm overwrite for now", "target": 0}
{"idx": 17292, "func": "TODO: We need some way of driving this from panel xml rather than hard coded test", "target": 1}
{"idx": 17293, "func": "Allow test code to check for spurious class references", "target": 0}
{"idx": 17294, "func": "//gets the outline stroke width of the plot", "target": 0}
{"idx": 17295, "func": "//faster?", "target": 0}
{"idx": 17296, "func": "get theme plugin-handler", "target": 0}
{"idx": 17297, "func": "Reply a Set of design material's that are the subject of this ToDoItem. @return the offenders TODO: Offenders need to be more strongly typed. - tfm 20070630", "target": 1}
{"idx": 17298, "func": "Delete the change information because it is invalid now that the objects have been changed. //", "target": 0}
{"idx": 17299, "func": "//allow any identifier quoted with backtick //only recognizes identifiers beginning with a letter", "target": 0}
{"idx": 17300, "func": "this.x is not allowed to be null...", "target": 0}
{"idx": 17301, "func": "10A0..10FF;", "target": 0}
{"idx": 17302, "func": "FunctionPair", "target": 0}
{"idx": 17303, "func": "create the node initially with the param name so that it shows appropriately in the \"original text\" attribute", "target": 0}
{"idx": 17304, "func": "END OF STRING OPERATOR \\Z", "target": 0}
{"idx": 17305, "func": "There's little point saving the manager between invocations as we need to reset most of the beans anyway", "target": 0}
{"idx": 17306, "func": "Create the closing boundary", "target": 0}
{"idx": 17307, "func": "definition of a second", "target": 0}
{"idx": 17308, "func": "Exact match", "target": 0}
{"idx": 17309, "func": "translate graphics object back to original position and reset clip and scaling", "target": 0}
{"idx": 17310, "func": "target may appear multiple places in the tree, so we don't stop here (but it's expensive to search the whole tree) - tfm - 20070904 targets.remove(t); break;", "target": 0}
{"idx": 17311, "func": "select Locale in ComboBox", "target": 0}
{"idx": 17312, "func": "Just use null.", "target": 0}
{"idx": 17313, "func": "i18n[SQLResultExecuterPanel.closeAllButThis=Close all but this]", "target": 0}
{"idx": 17314, "func": "line 821", "target": 0}
{"idx": 17315, "func": "load_1 each type", "target": 0}
{"idx": 17316, "func": "Note: the bsh command code should probably not be here... we need to scope it by the namespace that imported the command... so it probably needs to be integrated into NameSpace.", "target": 1}
{"idx": 17317, "func": "arg and receiver already present on the stack", "target": 0}
{"idx": 17318, "func": "two additional bytes will be required to replace this GOTO or JSR instruction with a GOTO_W or a JSR_W", "target": 0}
{"idx": 17319, "func": "Zlib::NO_FLUSH", "target": 0}
{"idx": 17320, "func": "Identifies a file-type absolute URI.", "target": 0}
{"idx": 17321, "func": "We can't change the TM on a running cache; just check if the cache has no TM and we're OK with that", "target": 0}
{"idx": 17322, "func": "Stop if there are no more tuples.", "target": 0}
{"idx": 17323, "func": "Diagram appearance settings with project scope:", "target": 0}
{"idx": 17324, "func": "beep if beep property set", "target": 0}
{"idx": 17325, "func": "//i18n[MappingRoot.cfgName=Configuration]", "target": 0}
{"idx": 17326, "func": "The empty string. Return null", "target": 0}
{"idx": 17327, "func": "MRI does similar thing on MacOS X with 'EditLine wrapper'.", "target": 0}
{"idx": 17328, "func": "Ignore leading whitespace", "target": 0}
{"idx": 17329, "func": "@see org.argouml.application.events.ArgoGeneratorEventListener#generatorChanged(org.argouml.application.events.ArgoGeneratorEvent)", "target": 0}
{"idx": 17330, "func": "//{{{ DirectoryEntry constructor", "target": 0}
{"idx": 17331, "func": "//this.frame = frame;", "target": 0}
{"idx": 17332, "func": "getJava2IANAMapping(String):String", "target": 0}
{"idx": 17333, "func": "--- End static members ---", "target": 0}
{"idx": 17334, "func": "get the first label", "target": 0}
{"idx": 17335, "func": "Set the checkbox on or off according to the SELECTED value of the action. If no SELECTED value is found then this defaults to true.", "target": 0}
{"idx": 17336, "func": "example: \"columba://org.columba.mail/<folder-id>/<message-id>\"", "target": 0}
{"idx": 17337, "func": "skip, if UID, dtStart or dtEnd is not defined", "target": 0}
{"idx": 17338, "func": "i18n[oracle.bufferPerExec=Buffer Gets per Exec]", "target": 0}
{"idx": 17339, "func": "SSS FIXME: Move this code to some utils area .. or probably there is already a method for this in some jruby utils class Holy cow! Just to append two darned arrays!", "target": 1}
{"idx": 17340, "func": "If no columns are selected, and we're not dropping the PK, then there is nothing to do.", "target": 0}
{"idx": 17341, "func": "@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()", "target": 0}
{"idx": 17342, "func": "//Ecore2EcoreAdapterFactory", "target": 0}
{"idx": 17343, "func": "Convert the data into an ascii representation using the standard convention", "target": 0}
{"idx": 17344, "func": "//{{{ getKeywordMapAtOffset() method", "target": 0}
{"idx": 17345, "func": "If the user wants to select for Right mouse clicks then change the selection before popup appears", "target": 0}
{"idx": 17346, "func": "Throws EjbcException", "target": 0}
{"idx": 17347, "func": "store the octets", "target": 0}
{"idx": 17348, "func": "Normalise whitespace if necessary.", "target": 0}
{"idx": 17349, "func": "Load the rest", "target": 0}
{"idx": 17350, "func": "Link the new dependency in to the ends", "target": 0}
{"idx": 17351, "func": "Save the element info.", "target": 0}
{"idx": 17352, "func": "i18n[mssql.generateSqlScript=Generate SQL Script]", "target": 0}
{"idx": 17353, "func": "The TestCase to run", "target": 0}
{"idx": 17354, "func": "Does the user prefer html or plain text?", "target": 0}
{"idx": 17355, "func": "//{{{ ListUpdater class", "target": 0}
{"idx": 17356, "func": "Builds a default implementation for an interface. The interface is not owned by any model element by default. Users should not forget to add ownership. @return Interface TODO: This needs an extra parameter to specify the model/extent where the new element should be created.", "target": 1}
{"idx": 17357, "func": "Need both sample and error count to be any use", "target": 0}
{"idx": 17358, "func": "forcclass", "target": 0}
{"idx": 17359, "func": "//i18n[AbstractRefactoringDialog.executeButtonLabel=Execute]", "target": 0}
{"idx": 17360, "func": "these settings are needed to make the ProgressMonitor pop up early", "target": 0}
{"idx": 17361, "func": "Resource names for column headers $NON-NLS-1$", "target": 0}
{"idx": 17362, "func": "//swaldman 2006-08-28: define c3p0-style configuration parameters for initialPoolSize, which hibernate sensibly lets default to minPoolSize, but we'll let users override it with the c3p0-style property if they want.", "target": 0}
{"idx": 17363, "func": "Oracle's 'TIMESTAMP WITH TIME ZONE' == -101 Oracle's 'TIMESTAMP WITH LOCAL TIME ZONE' == -102", "target": 0}
{"idx": 17364, "func": "//{{{ addEdit() method", "target": 0}
{"idx": 17365, "func": "get \"Drafts\" folder of account", "target": 0}
{"idx": 17366, "func": "get origin & size information (height as \"total\" height minus current pos.)", "target": 0}
{"idx": 17367, "func": "line 596", "target": 0}
{"idx": 17368, "func": "If the result is a Node eval() it to an object or LHS (as determined by toLHS)", "target": 0}
{"idx": 17369, "func": "abort the export", "target": 0}
{"idx": 17370, "func": "2. When the user clicks ok, then display update dialog again.", "target": 0}
{"idx": 17371, "func": "F900..FAFF;", "target": 0}
{"idx": 17372, "func": "//fall through.", "target": 0}
{"idx": 17373, "func": "Gui Components", "target": 0}
{"idx": 17374, "func": "FIrst make sure we save the content of the current GUI (since we will flush it away):", "target": 0}
{"idx": 17375, "func": "odd chars", "target": 0}
{"idx": 17376, "func": "100 percent, so it will not apply unless changed", "target": 0}
{"idx": 17377, "func": "Ignore exception", "target": 0}
{"idx": 17378, "func": "this should never happen anyway, we'll continue with url2 set to null.", "target": 0}
{"idx": 17379, "func": "TODO: why is this inside a block? Forgotten else branch?!? Question by euluis @ 2009-08-16.", "target": 1}
{"idx": 17380, "func": "This is necessary because getArgList returns the path in square brackets", "target": 0}
{"idx": 17381, "func": "Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour", "target": 0}
{"idx": 17382, "func": "Notes: This is broken. It finds public but less specific methods over non-public but more specific ones. findMostSpecficMethod() needs to be rewritten to eliminate findAccessibleMethod. We should implement the findMostSpecificMethod that uses the publicOnly flag. FindMostSpecificMethod should also operate in two passes to give standard Java assignable matches priority over extended bsh type matches.", "target": 1}
{"idx": 17383, "func": "@see org.argouml.kernel.AbstractProjectMember#getType()", "target": 0}
{"idx": 17384, "func": "for convenience cast the object to BlobDescriptor", "target": 0}
{"idx": 17385, "func": "Make the edge go between nearest points", "target": 0}
{"idx": 17386, "func": "Used for per-thread/user storage of increment in Thread Group Main loop", "target": 0}
{"idx": 17387, "func": "Begin second unit of work", "target": 0}
{"idx": 17388, "func": "if the closing mark is after the s1 mark do not insert a link", "target": 0}
{"idx": 17389, "func": "Some driver don't correctly support setMaxRows. In these cases use setMaxRows only if this is a SELECT.", "target": 0}
{"idx": 17390, "func": "IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String", "target": 0}
{"idx": 17391, "func": "Adding new aliases as proposed in http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html", "target": 0}
{"idx": 17392, "func": "Don't listen to all property names We only need to listen to its \"type\", and \"remove\".", "target": 0}
{"idx": 17393, "func": "//TODO: is this a bit ugly?", "target": 1}
{"idx": 17394, "func": "this has to be set by themes //setDividerSize( 5 );", "target": 0}
{"idx": 17395, "func": "Used for per-thread/user numbers Cannot be static, as random numbers are not to be shared between instances", "target": 0}
{"idx": 17396, "func": "Assert is flawed because canWrite does not work. assertTrue(\"File f1 Is Not Set To ReadOnly.\" , !f1.canWrite());", "target": 0}
{"idx": 17397, "func": "Settings Gap Sizes", "target": 0}
{"idx": 17398, "func": "if no account exists, return", "target": 0}
{"idx": 17399, "func": "pretty sure this shouldn't ever happen", "target": 0}
{"idx": 17400, "func": "cache must return a stored value", "target": 0}
{"idx": 17401, "func": "Class method", "target": 0}
{"idx": 17402, "func": "//TODO: make a new history item", "target": 0}
{"idx": 17403, "func": "//{{{ BrowserView constructor", "target": 0}
{"idx": 17404, "func": "In column 0, the drop-down is indented past the collapse/expand icon. //", "target": 0}
{"idx": 17405, "func": "result.setError(true); TODO is this the correct strategy? throw exception; allow assertion to pass", "target": 1}
{"idx": 17406, "func": "determine location on screen", "target": 0}
{"idx": 17407, "func": "unable to locate it using this name", "target": 0}
{"idx": 17408, "func": "//{{{ toLowerCase() method", "target": 0}
{"idx": 17409, "func": "Now we are sure dm is a State.", "target": 0}
{"idx": 17410, "func": "only do this if we are the current edit pane", "target": 0}
{"idx": 17411, "func": "days", "target": 0}
{"idx": 17412, "func": "Test to make sure that the tempfile was saved in the correct location and with the correct prefix/suffix.", "target": 0}
{"idx": 17413, "func": "ExtCaret highlighting colorings", "target": 0}
{"idx": 17414, "func": "define the package now", "target": 0}
{"idx": 17415, "func": "collections detect changes made via their public interface and mark themselves as dirty as a performance optimization", "target": 0}
{"idx": 17416, "func": "//XMLTypeFactory", "target": 0}
{"idx": 17417, "func": "A session is considered to contain an entity only if the entity has an entry in the session's persistence context and the entry reports that the entity has not been removed", "target": 0}
{"idx": 17418, "func": "uuid.hex is deprecated", "target": 0}
{"idx": 17419, "func": "//final String columnClassName = _rsmd.getColumnClassName(idx);", "target": 0}
{"idx": 17420, "func": "Get the standard toolbar properties", "target": 0}
{"idx": 17421, "func": "not final-static to avoid possible classcast exceptions if using different oracle drivers.", "target": 0}
{"idx": 17422, "func": "rb_reg_desc", "target": 0}
{"idx": 17423, "func": "this replaces the entry with the current minimum value, but the new minimum value is now in a different item", "target": 0}
{"idx": 17424, "func": "support \"address (name)\"", "target": 0}
{"idx": 17425, "func": "Can be done as follows in MS SQLServer INSERT INTO mytable(id,name) SELECT 1, 'pizza' UNION SELECT 2, 'donuts' UNION SELECT 3, 'milk';", "target": 0}
{"idx": 17426, "func": "Converts DOS time to Java time (number of milliseconds since epoch).", "target": 0}
{"idx": 17427, "func": "check that the column key is defined in the 2D structure", "target": 0}
{"idx": 17428, "func": "//////////////////FRAME MANAGEMENT ////////////////////////", "target": 0}
{"idx": 17429, "func": "we have a Javassist enhanced entity", "target": 0}
{"idx": 17430, "func": "Set up the 2nd table", "target": 0}
{"idx": 17431, "func": "@see org.tigris.gef.presentation.FigEdge#setFig(org.tigris.gef.presentation.Fig)", "target": 0}
{"idx": 17432, "func": "i18n[graph.invalidWidth=Invalid width]", "target": 0}
{"idx": 17433, "func": "i18n[sqlbookmark.prefName=Name:]", "target": 0}
{"idx": 17434, "func": "//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());", "target": 0}
{"idx": 17435, "func": "REVISIT: Defaults to the target name that contains this task if not specified.", "target": 0}
{"idx": 17436, "func": "which ASCII characters need to be escaped", "target": 0}
{"idx": 17437, "func": "noop - fixed rendering", "target": 0}
{"idx": 17438, "func": "i18n[DBUtil.info.bindblobfile=bindBlobVarInFile: Opening temp file '{0}']", "target": 0}
{"idx": 17439, "func": "Fractional font metrics", "target": 0}
{"idx": 17440, "func": "A mock ModelImplementation.<p> The Facade, the ModelEventPump, the Factories and Helpers are all created as mock objects using EasyMock. For each of them, there should also be a possibility to access their {@link MockControl} object. TODO: Create the rest of the getters for the control objects. @author Linus Tolke", "target": 1}
{"idx": 17441, "func": "//{{{ addSeparator() method", "target": 0}
{"idx": 17442, "func": "//{{{ VFSBrowser constructor", "target": 0}
{"idx": 17443, "func": "draw shared domain axis...", "target": 0}
{"idx": 17444, "func": "//{{{ OpenAction class", "target": 0}
{"idx": 17445, "func": "for each character in the anyURI", "target": 0}
{"idx": 17446, "func": "A use case has an external separator. External means external to the compartment box. This horizontal line sticks out of the box, and touches the ellipse edge.", "target": 0}
{"idx": 17447, "func": "c.gridy = 0; c.gridx = 5; JLabel fourLabel = new JLabel(\"asd\"); gb.setConstraints(fourLabel, c); _mainPanel.add(fourLabel);", "target": 0}
{"idx": 17448, "func": "does the modern compiler exist?", "target": 0}
{"idx": 17449, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsGroupBy()", "target": 0}
{"idx": 17450, "func": "SSS FIXME: Pick one of bytelist or string, or add internal conversion methods to convert to the default representation", "target": 1}
{"idx": 17451, "func": "LEFT", "target": 0}
{"idx": 17452, "func": "This map allows summarisers with the same name to contribute to the same totals.", "target": 0}
{"idx": 17453, "func": "initialize the event listener trackers which verify that all of the proper events were fired", "target": 0}
{"idx": 17454, "func": "If the destination directory didn't already exist, or was empty, then no previous file removal is necessary!", "target": 0}
{"idx": 17455, "func": "//{{{ finishSaving() method", "target": 0}
{"idx": 17456, "func": "set configuration of this plugin", "target": 0}
{"idx": 17457, "func": "Sample number (string) Start Time Thread Name Label Sample Time Status Bytes", "target": 0}
{"idx": 17458, "func": "Note the start of this subexpression", "target": 0}
{"idx": 17459, "func": "(non-Javadoc) @see org.apache.jmeter.report.writers.PageSummary#getFileName()", "target": 0}
{"idx": 17460, "func": "Used with DROP TABLE to delete all records in the table.", "target": 0}
{"idx": 17461, "func": "if user drops into a selection, replace selection", "target": 0}
{"idx": 17462, "func": "remove the MetaProfile from the project's profile configuration", "target": 0}
{"idx": 17463, "func": "//{{{ showPopupMenu method", "target": 0}
{"idx": 17464, "func": "Will parser parse Duby grammar Extensions", "target": 0}
{"idx": 17465, "func": "horizontal grid lines", "target": 0}
{"idx": 17466, "func": "Set up the target and its model element variant.", "target": 0}
{"idx": 17467, "func": "//remove distance of the sum", "target": 0}
{"idx": 17468, "func": "XMI 1.1", "target": 0}
{"idx": 17469, "func": "mockConnection", "target": 0}
{"idx": 17470, "func": "add our exceptions and store locally in ArrayList of Longs", "target": 0}
{"idx": 17471, "func": "show tip of the day", "target": 0}
{"idx": 17472, "func": "TODO: this method is not present in MRI!", "target": 1}
{"idx": 17473, "func": "XYSeries s =", "target": 0}
{"idx": 17474, "func": "//$NON-NLS-1$ We only support chunked transfer encoding", "target": 0}
{"idx": 17475, "func": "doctype", "target": 0}
{"idx": 17476, "func": "//{{{ activatePlugin() method", "target": 0}
{"idx": 17477, "func": "a class", "target": 0}
{"idx": 17478, "func": "compile first node only", "target": 0}
{"idx": 17479, "func": "lets redraw the box", "target": 0}
{"idx": 17480, "func": "We initialised Java Notation, so let's activate it:", "target": 0}
{"idx": 17481, "func": "if template is null we just write the function out as it appears in the hql statement", "target": 0}
{"idx": 17482, "func": "we have to deal with a huge range of possible border cases here.", "target": 0}
{"idx": 17483, "func": "//int mark =", "target": 0}
{"idx": 17484, "func": "//{{{ scrollDown() method", "target": 0}
{"idx": 17485, "func": "@see org.tigris.gef.graph.MutableGraphModel#connect(java.lang.Object, java.lang.Object, java.lang.Class)", "target": 0}
{"idx": 17486, "func": "Is this thread currently with in a function trace?", "target": 0}
{"idx": 17487, "func": "//If the object is already loaded, return the loaded one", "target": 0}
{"idx": 17488, "func": "Check for identifier", "target": 0}
{"idx": 17489, "func": "//Silently ignore, what could we do anyway?", "target": 1}
{"idx": 17490, "func": "If action comes in with no modifiers, it is a pure keyboard event (e.g. spacebar), so do it. Anything else is probably a mouse event, so ignore it. Mouse events are dealt with by mousePressed() instead (see bottom of page).", "target": 0}
{"idx": 17491, "func": "no action required in case of veto on setName", "target": 0}
{"idx": 17492, "func": "We can also optimize single valued reverse. //", "target": 0}
{"idx": 17493, "func": "6 is the size of (value", "target": 0}
{"idx": 17494, "func": "TBLRC 11010 - top, bottom and right", "target": 0}
{"idx": 17495, "func": "i18n[dataTypeBlob.readOnFirstLoad=Read contents when table is first loaded:]", "target": 0}
{"idx": 17496, "func": "Secondly we check the previous model structure:", "target": 0}
{"idx": 17497, "func": "Use for ComboBox Source Address Type. Preserve order (specially with localization)", "target": 0}
{"idx": 17498, "func": "add to new mediator's listener list", "target": 0}
{"idx": 17499, "func": "Upper / Lower case", "target": 0}
{"idx": 17500, "func": "ensure name is available for debugging", "target": 0}
{"idx": 17501, "func": "ignore; job was cancelled FIXME: is this ok?", "target": 0}
{"idx": 17502, "func": "//transient private static final Logger log = LoggingManager.getLoggerForClass();", "target": 0}
{"idx": 17503, "func": "de-register the composite as a listener for the chart.", "target": 0}
{"idx": 17504, "func": "add the UDTs.", "target": 0}
{"idx": 17505, "func": "Filenames of the standard EJB descriptor (which is passed to this class from the parent \"ejbjar\" task) and the iAS-specific EJB descriptor (whose name is determined by this class). Both filenames are relative to the directory specified by the \"srcdir\" attribute in the ejbjar task.", "target": 0}
{"idx": 17506, "func": "Put the check boxes in a column in a panel", "target": 0}
{"idx": 17507, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#allProceduresAreCallable()", "target": 0}
{"idx": 17508, "func": "N.B. Commons IO IOUtils has equivalent methods; these were added before IO was included TODO - perhaps deprecate these in favour of Commons IO?", "target": 1}
{"idx": 17509, "func": "//{{{ selectPane() method", "target": 0}
{"idx": 17510, "func": "//Action performed for the Update button // private void buttonUpdateActionPerformed(java.awt.event.ActionEvent evt) // { // String query = getQuery(); // dbUtils.execute(query); // _dlog.setVisible(false); // _dlog.dispose(); // JOptionPane.showMessageDialog(null, \"Field updated\"); // }", "target": 0}
{"idx": 17511, "func": "Throw bad file descriptor is we can not read on supplied descriptor.", "target": 0}
{"idx": 17512, "func": "N.B. NoThreadClone is used to ensure that the testStarted() methods will share the same instance as the sampleOccured() methods, so the testStarted() method can fetch the Totals accumulator object for the samples to be stored in.", "target": 0}
{"idx": 17513, "func": "redo jump handling", "target": 0}
{"idx": 17514, "func": "if we see whitespace, set flag.", "target": 0}
{"idx": 17515, "func": "Lazily create the event.", "target": 0}
{"idx": 17516, "func": "assume we do not refer to a property on the given persister", "target": 0}
{"idx": 17517, "func": "The following array must agree with dateFormat It is used to translate the positions in the buffer to the values used by the Calendar class for the field id. Current format: MM/DD/YYYY HH:MM:SS 01234567890123456789 ^buffer positions", "target": 0}
{"idx": 17518, "func": "//i18n[DumpApplicationCommand.error.deletetempfile=Couldn't delete temporary DumpSession file]", "target": 0}
{"idx": 17519, "func": "i18n[popupeditableIoPanel.overwriteWarning=File Overwrite Warning]", "target": 0}
{"idx": 17520, "func": "$NON-NLS-1$ //$NON-NLS-1$", "target": 0}
{"idx": 17521, "func": "try to mine out a Ruby frame using our list of interpreter entry-point markers", "target": 0}
{"idx": 17522, "func": "keystore for SSL keys; fixed at config except for dynamic host key generation", "target": 0}
{"idx": 17523, "func": "//text.grabFocus();", "target": 0}
{"idx": 17524, "func": "sorry - otherwise we will get a ClassCastException because the MockCache is loaded by two different classloader ...", "target": 1}
{"idx": 17525, "func": "Folder to store the user settings in", "target": 0}
{"idx": 17526, "func": "Returns all states that can be recursively contained by the given State. <p> TODO: {@link #getAllPossibleSubvertices(Object)} and {@link #getAllSubStates(Object)} are duplicates as implemented for MDR. It isn't clear from the Javadoc or usage whether they should do different things or this just happened because no one noticed we already had another method. @param oState the Composite state we are searching the states for, @return Collection the collection with found states", "target": 1}
{"idx": 17527, "func": "(non-Javadoc) @see org.columba.mail.folder.event.IFolderListener#messageFlagChanged(org.columba.mail.folder.event.IFolderEvent)", "target": 0}
{"idx": 17528, "func": "removes b from the pool", "target": 0}
{"idx": 17529, "func": "another empty series", "target": 0}
{"idx": 17530, "func": "Link", "target": 0}
{"idx": 17531, "func": "//{{{ _delete() method", "target": 0}
{"idx": 17532, "func": "so that end followed by up arrow will always put caret at the end of the previous line, for example //setMagicCaretPosition(Integer.MAX_VALUE); //}}}", "target": 0}
{"idx": 17533, "func": "HACK: some dbs (like Frontbase) don't support boolean types. I've tried tinyint, bit and boolean as the column type, and setBoolean fails for all three. It's a mystery at this point what column the getBoolean/setBoolean methods actually work on iin FrontBase.", "target": 1}
{"idx": 17534, "func": "record separator var, to speed up io ops that use it", "target": 0}
{"idx": 17535, "func": "i18n[syntax.addRow=Add row]", "target": 0}
{"idx": 17536, "func": "using IOInputStream may not be the most performance way, but it's easy.", "target": 1}
{"idx": 17537, "func": "cancel pressed", "target": 0}
{"idx": 17538, "func": "first build exception", "target": 0}
{"idx": 17539, "func": "the method called to add/create the nested element", "target": 0}
{"idx": 17540, "func": "add stereotype view submenu", "target": 0}
{"idx": 17541, "func": "The user requested a \"greater\" (i.e. more restrictive) form of pessimistic lock", "target": 0}
{"idx": 17542, "func": "//{{{ setIconPath() method", "target": 0}
{"idx": 17543, "func": "IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String", "target": 0}
{"idx": 17544, "func": "if any exceptions were raised, we fail", "target": 0}
{"idx": 17545, "func": "I18N: Contains fixed English text ...", "target": 0}
{"idx": 17546, "func": "Creates new SSL context @return SSL context @throws GeneralSecurityException", "target": 0}
{"idx": 17547, "func": "i18n[DataImportGlobalPreferencesTab.hint=Preferences for data import]", "target": 0}
{"idx": 17548, "func": "No divider was found", "target": 0}
{"idx": 17549, "func": "treat directories specified using .DIR syntax as files", "target": 0}
{"idx": 17550, "func": "create the JTable that holds one cookie per row", "target": 0}
{"idx": 17551, "func": "This really should be Long.decode, but there isn't one. As a result, hex and octal literals ending in 'l' or 'L' don't work.", "target": 1}
{"idx": 17552, "func": "@see org.argouml.model.UmlHelper#move(java.lang.Object, org.argouml.model.UmlHelper.Direction)", "target": 0}
{"idx": 17553, "func": "empty arrays which can be returned instead of null", "target": 0}
{"idx": 17554, "func": "A 'next' is like a local return from the block, ending this call or yield.", "target": 0}
{"idx": 17555, "func": "NetProtocolBufferedIO", "target": 0}
{"idx": 17556, "func": "from the collection of associations, locate OJA for the ManyToOne corresponding to this persister to fully define the many-to-many; we need that OJA so that we can use its alias here TODO : is there a better way here?", "target": 1}
{"idx": 17557, "func": "Copy action object tree types", "target": 0}
{"idx": 17558, "func": "//$NON-NLS-1$ We have a default", "target": 0}
{"idx": 17559, "func": "//needed by arrays", "target": 0}
{"idx": 17560, "func": "Success! The xml-commons resolver library is available, so use it. //", "target": 0}
{"idx": 17561, "func": "Start the thread that does the coloring", "target": 0}
{"idx": 17562, "func": "//{{{ toTitleCase() method", "target": 0}
{"idx": 17563, "func": "This forces isSaveNeded to always be true. //", "target": 0}
{"idx": 17564, "func": "classpath is \"-classpath <classpath>\" -> 2 args", "target": 0}
{"idx": 17565, "func": "TODO: This should only be building list up to 'index'", "target": 1}
{"idx": 17566, "func": "private void appendPrivelegeToBuffer(StringBuffer pBuffer, String psPrivilege)", "target": 0}
{"idx": 17567, "func": "get the previous context (see notes for this class)", "target": 0}
{"idx": 17568, "func": "delete marks (unselect)", "target": 0}
{"idx": 17569, "func": "i18n[i18n.noNativeToAsciiOutDir=Cannot convert files without a native2Ascii output dir.]", "target": 0}
{"idx": 17570, "func": "(non-Javadoc) @see junit.framework.TestCase#setUp()", "target": 0}
{"idx": 17571, "func": "//mainPanel.add( topBorderPanel, BorderLayout.NORTH );", "target": 0}
{"idx": 17572, "func": "//Font font = UIManager.getFont(\"Label.font\");", "target": 0}
{"idx": 17573, "func": "default pvcs project is \"/\"", "target": 0}
{"idx": 17574, "func": "'+ 1' so that findWordEnd() doesn't pick up the space at the start", "target": 0}
{"idx": 17575, "func": "This is the proper behavior for all non-expanded assigners.", "target": 0}
{"idx": 17576, "func": "TODO create exception for this", "target": 1}
{"idx": 17577, "func": "view.table.getModel().addTableModelListener(this);", "target": 0}
{"idx": 17578, "func": "//{{{ fireTransactionComplete() method", "target": 0}
{"idx": 17579, "func": "add message to temporary folder", "target": 0}
{"idx": 17580, "func": "Put all the bits together, suppressing bounds calculations until we're all done for efficiency.", "target": 0}
{"idx": 17581, "func": "If already inspecting, there is no need to register/unregister again.", "target": 0}
{"idx": 17582, "func": "now load all external plugins residing in /plugins directory //", "target": 0}
{"idx": 17583, "func": "Do stuff we cannot do as part of threadStarted()", "target": 0}
{"idx": 17584, "func": "no args", "target": 0}
{"idx": 17585, "func": "by default we report no support", "target": 0}
{"idx": 17586, "func": "//OK TODO ??", "target": 0}
{"idx": 17587, "func": "Columns", "target": 0}
{"idx": 17588, "func": "i18n[mssql.add=Add >>]", "target": 0}
{"idx": 17589, "func": "//noncritical, swallow and let the other propagate!", "target": 0}
{"idx": 17590, "func": "this must be called before any EditBus messages are sent", "target": 0}
{"idx": 17591, "func": "Escape a string that will terminate the comment in which this will all be nested. //", "target": 0}
{"idx": 17592, "func": "//{{{ addGlobalAbbrev() method", "target": 0}
{"idx": 17593, "func": "composer", "target": 0}
{"idx": 17594, "func": "TimeMillis has granularity of 10-20", "target": 0}
{"idx": 17595, "func": "//File other then class changed rebuild", "target": 0}
{"idx": 17596, "func": "@see org.argouml.model.ModelImplementation#getFacade()", "target": 0}
{"idx": 17597, "func": "internally used headerfields these are all boolean values, which are saved using a single int value", "target": 0}
{"idx": 17598, "func": "Fill 10 of value (byte) -87 Fill 39 of value (byte) 33 Fill 2 of value (byte) -19", "target": 0}
{"idx": 17599, "func": "//IMainPanelTab[] getMainTabbedPanePanels(ISession session);", "target": 0}
{"idx": 17600, "func": "Add the collection //", "target": 0}
{"idx": 17601, "func": "//{{{ FloatAction class", "target": 0}
{"idx": 17602, "func": "re-select previous selection", "target": 0}
{"idx": 17603, "func": "//{{{ TOCHandler class", "target": 0}
{"idx": 17604, "func": "init table model", "target": 0}
{"idx": 17605, "func": "^Z", "target": 0}
{"idx": 17606, "func": "//i18n[SpecialColumnMapping.AUTO_INCREMENT=Auto increment]", "target": 0}
{"idx": 17607, "func": "case 1 after(...)", "target": 0}
{"idx": 17608, "func": "//we do not use the sun impl for portability, //and always use our own implementation for consistent //testing", "target": 0}
{"idx": 17609, "func": "draw the plot background and axes...", "target": 0}
{"idx": 17610, "func": "//noop", "target": 0}
{"idx": 17611, "func": "//TODO: better to pass the id in as an argument?", "target": 1}
{"idx": 17612, "func": "Contains a list of all blocks (as Procs) that should be called when the runtime environment exits.", "target": 0}
{"idx": 17613, "func": "sort-string", "target": 0}
{"idx": 17614, "func": "First we have the methods for in-cell and Text-table operations", "target": 0}
{"idx": 17615, "func": "textAShape.setAttribute(AShape.A_REPORT_HIT_SHAPE, Boolean.TRUE);", "target": 0}
{"idx": 17616, "func": "We get the posted bytes using the encoding used to create it", "target": 0}
{"idx": 17617, "func": "//{{{ Soft tabs", "target": 0}
{"idx": 17618, "func": "//&& thisNameSpace.getParent().classInstance != null", "target": 0}
{"idx": 17619, "func": "update store", "target": 0}
{"idx": 17620, "func": "i18n[editextras.minute=Minute]", "target": 0}
{"idx": 17621, "func": "(non-Javadoc) @see java.net.URLClassLoader#findResource(java.lang.String)", "target": 0}
{"idx": 17622, "func": "legendItemShape", "target": 0}
{"idx": 17623, "func": "check parameter types:", "target": 0}
{"idx": 17624, "func": "This is called once for each occurrence in the test plan, before the start of the test. The super.clear() method clears the name (and all other properties), so it is called last.", "target": 0}
{"idx": 17625, "func": "Construct a multi-line string with all matches", "target": 0}
{"idx": 17626, "func": "No point in updating number if last number was same value.", "target": 0}
{"idx": 17627, "func": "Use \"aSize\" to build up the minimum size. Start with the size of the name compartment and build up.", "target": 0}
{"idx": 17628, "func": "//cacheCount++; debug", "target": 0}
{"idx": 17629, "func": "@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()", "target": 0}
{"idx": 17630, "func": "create test userlist data", "target": 0}
{"idx": 17631, "func": "(NOT (NOT_LIKE a b) ) => (LIKE a b)", "target": 0}
{"idx": 17632, "func": "remove old items if necessary, but don't notify anyone, because that happens next anyway...", "target": 0}
{"idx": 17633, "func": "//bind to a compiler", "target": 0}
{"idx": 17634, "func": "TODO - perhaps this should be a fatal error?", "target": 1}
{"idx": 17635, "func": "need to handle four cases: - string contains name=value - string contains name= - string contains name - empty string", "target": 0}
{"idx": 17636, "func": "Check null argument is handled", "target": 0}
{"idx": 17637, "func": "4-byte sequence: 11101110wwwwzzzzyy + 110111yyyyxxxxxx = 11110uuu 10uuzzzz 10yyyyyy 10xxxxxx (uuuuu = wwww + 1)", "target": 0}
{"idx": 17638, "func": "check of add[Configured](Class) pattern", "target": 0}
{"idx": 17639, "func": "Wait for everything to finish", "target": 0}
{"idx": 17640, "func": "check if service is registered", "target": 0}
{"idx": 17641, "func": "soscmd Option flags", "target": 0}
{"idx": 17642, "func": "initial size state stack value stack current input #tokens to shift", "target": 0}
{"idx": 17643, "func": "rotationAngle", "target": 0}
{"idx": 17644, "func": "no candidates? Fail.", "target": 0}
{"idx": 17645, "func": "At this point we've either got too many or just the right amount. See if this numRepeats works with the rest of the regexp.", "target": 0}
{"idx": 17646, "func": "i18n[HibernateConfigPanel.toObtainSessionFact=To obtain a Hibernate SessionFactoryImpl instance SQuirreL should:]", "target": 0}
{"idx": 17647, "func": "Find the Icon for a given model element. @return The Icon or <code>null</code> if there is no Icon. @param value The model element. TODO: This should not use string matching on classnames to do this since this means that we have knowledge about how the model elements are implemented outside of the Model component.", "target": 1}
{"idx": 17648, "func": "line 1553", "target": 0}
{"idx": 17649, "func": "The dataStruct is a place where custom information can be contained for core implementations that doesn't necessarily want to go to the trouble of creating a subclass of RubyObject. The OpenSSL implementation uses this heavily to save holder objects containing Java cryptography objects. Java integration uses this to store the Java object ref. //protected transient Object dataStruct;", "target": 0}
{"idx": 17650, "func": "X", "target": 0}
{"idx": 17651, "func": "rb: readable", "target": 0}
{"idx": 17652, "func": "for each element in the message-header-reference or in-reply-to headerfield: - find a container whose message-id matches and add message, otherwise create empty container", "target": 0}
{"idx": 17653, "func": "add command for execution", "target": 0}
{"idx": 17654, "func": "//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)", "target": 0}
{"idx": 17655, "func": "Find old numbers", "target": 0}
{"idx": 17656, "func": "Loop over the archive paths. //", "target": 0}
{"idx": 17657, "func": "//{{{ doTripleDrag() method", "target": 0}
{"idx": 17658, "func": "Check persistence", "target": 0}
{"idx": 17659, "func": "make sure the pipe stream is set to null", "target": 0}
{"idx": 17660, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getNumericFunctions()", "target": 0}
{"idx": 17661, "func": "Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //", "target": 0}
{"idx": 17662, "func": "Close the current project", "target": 0}
{"idx": 17663, "func": "Processes Assertions display a SampleResult", "target": 0}
{"idx": 17664, "func": "line 1493", "target": 0}
{"idx": 17665, "func": "Called by ResultCollector#loadExistingFile() if XStream loading fails", "target": 0}
{"idx": 17666, "func": "notifyListeners();", "target": 0}
{"idx": 17667, "func": "We are getting events we don't want. Filter them out. TODO: Can we instruct the model event pump not to send these in the first place? See defect 5095. @param event the event", "target": 1}
{"idx": 17668, "func": "TODO: check for Java reserved names and raise exception if encountered", "target": 1}
{"idx": 17669, "func": "i18n[dataTypeTime.medium=Medium ({0})]", "target": 0}
{"idx": 17670, "func": "Just returns the descr param. @see org.argouml.cognitive.Poster#expand(java.lang.String, ListSet)", "target": 0}
{"idx": 17671, "func": "no arg grouping, just use bulk assignment methods", "target": 0}
{"idx": 17672, "func": "Instead of passing these around to each method, we just store them as instance variables. Note that this is not thread-safe.", "target": 0}
{"idx": 17673, "func": "Delete Messages which have this as their action", "target": 0}
{"idx": 17674, "func": "store every open frame in our temporary list", "target": 0}
{"idx": 17675, "func": "TODO Why empty block ?", "target": 1}
{"idx": 17676, "func": "Ensure that there is always a collection available", "target": 0}
{"idx": 17677, "func": "update the deprecated fields", "target": 0}
{"idx": 17678, "func": "Initial load from JBC", "target": 0}
{"idx": 17679, "func": "must not quote column names", "target": 0}
{"idx": 17680, "func": "size should be 1 since addition of second item would have been ignored", "target": 0}
{"idx": 17681, "func": "getClassInstance() throws exception if not there", "target": 0}
{"idx": 17682, "func": "Must be out of sync!", "target": 0}
{"idx": 17683, "func": "3. MRI ignores the trailing junk", "target": 0}
{"idx": 17684, "func": "//ITEM LABEL PAINT ////////////////////////////////////////////////////", "target": 0}
{"idx": 17685, "func": "called only by initializing thread; no synchronization required", "target": 0}
{"idx": 17686, "func": "Download any CIDs in the html mail", "target": 0}
{"idx": 17687, "func": "brand new collection //TODO: or an array!! we can't lock objects with arrays now??", "target": 1}
{"idx": 17688, "func": "NotSnoozedCM isRelevant checks if the critic is snoozed snooze the critic to verify isRelevant returns false", "target": 0}
{"idx": 17689, "func": "Write to a file.", "target": 0}
{"idx": 17690, "func": "TODO: This transformation is Java specific. We need a more language/notation scheme for specifying qualified names. Possible algorithm - replace all punctuation with our internal separator, replace multiple separators with a single instance (for languages like C++). What about I18N? - tfm", "target": 1}
{"idx": 17691, "func": "//{{{ Lay out dependent buttons", "target": 0}
{"idx": 17692, "func": "1.9 support for encodings", "target": 0}
{"idx": 17693, "func": "//{{{ TextAreaBorder class", "target": 0}
{"idx": 17694, "func": "initializes the previous Edge object...", "target": 0}
{"idx": 17695, "func": "Populate values for the parameter names", "target": 0}
{"idx": 17696, "func": "we have to be careful", "target": 0}
{"idx": 17697, "func": "initialize a decision object with parameters", "target": 0}
{"idx": 17698, "func": "XXX add exceptions", "target": 1}
{"idx": 17699, "func": "we know only the rhs-hand type, so use that", "target": 0}
{"idx": 17700, "func": "Otherwise it's treated as an EEnum //", "target": 0}
{"idx": 17701, "func": "check if its a calendar component", "target": 0}
{"idx": 17702, "func": "line 1669", "target": 0}
{"idx": 17703, "func": "//{{{ getFileParent() method", "target": 0}
{"idx": 17704, "func": "layoutComponents();", "target": 0}
{"idx": 17705, "func": "//MAssociationEnd", "target": 0}
{"idx": 17706, "func": "Close the stream", "target": 0}
{"idx": 17707, "func": "Two Maps are used to track local DTDs that will be used in case the remote copies of these DTDs cannot be accessed. The key for the Map is the DTDs public ID and the value is the local location for the DTD", "target": 0}
{"idx": 17708, "func": "Keep track of the file writer and the configuration, as the instance used to close them is not the same as the instance that creates them. This means one cannot use the saved PrintWriter or use getSaveConfig()", "target": 0}
{"idx": 17709, "func": "trim trailing slashes", "target": 0}
{"idx": 17710, "func": "E-Mail Settings", "target": 0}
{"idx": 17711, "func": "hack for to do items only, should check isLeaf(node), but that includes empty folders. Really I need alwaysLeaf(node).", "target": 1}
{"idx": 17712, "func": "searchInsideCheckBox.setEnabled(false);", "target": 0}
{"idx": 17713, "func": "This is faintly ridiculous:", "target": 1}
{"idx": 17714, "func": "Load resources such as menu items, etc...", "target": 0}
{"idx": 17715, "func": "determine if the collection elements are entities...", "target": 0}
{"idx": 17716, "func": "use latency to measure connection time", "target": 0}
{"idx": 17717, "func": "order of headers cannot be guaranteed", "target": 0}
{"idx": 17718, "func": "//always trigger file mode if commands are big enough", "target": 0}
{"idx": 17719, "func": "If only Figs without owner are selected, then you can remove them!", "target": 0}
{"idx": 17720, "func": "//{{{ getComponentParent() method", "target": 0}
{"idx": 17721, "func": "Function name //$NON-NLS-1$", "target": 0}
{"idx": 17722, "func": "FIXME: implement this...", "target": 1}
{"idx": 17723, "func": "CheckStyle:MemberNameCheck ON CheckStyle:VisibilityModifier ON", "target": 0}
{"idx": 17724, "func": "//{{{ isOK() method", "target": 0}
{"idx": 17725, "func": "Holder for storing cache details. Perhaps add original response later?", "target": 1}
{"idx": 17726, "func": "Default to be applied", "target": 0}
{"idx": 17727, "func": "snapshot of contents of directory current position in directory", "target": 0}
{"idx": 17728, "func": "work out the total size", "target": 0}
{"idx": 17729, "func": "---- notesTextArea ----", "target": 0}
{"idx": 17730, "func": "Use the standard SQL type code to get the right handler for this data type.", "target": 0}
{"idx": 17731, "func": "TODO: All this profile loading/handling needs to move someplace in model subsystem probably", "target": 1}
{"idx": 17732, "func": "check that the text is a valid representation", "target": 0}
{"idx": 17733, "func": "Dialect method overrides ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 17734, "func": "TODO: Not all namespaces are useful here - any WFRs?", "target": 1}
{"idx": 17735, "func": "//{{{ checkFileStatus() method", "target": 0}
{"idx": 17736, "func": "starts at the back and finishes at the front (wrapping the left side)", "target": 0}
{"idx": 17737, "func": "it has to be set", "target": 0}
{"idx": 17738, "func": "STROKE", "target": 0}
{"idx": 17739, "func": "we create an event with a special flag set...the purpose of this is to communicate to the plot (the default receiver of the event) that series visibility has changed so the axis ranges might need updating...", "target": 0}
{"idx": 17740, "func": "change this to get the objects from the other reference", "target": 0}
{"idx": 17741, "func": "SSS FIXME: To be done", "target": 1}
{"idx": 17742, "func": "Don't try to adjust the host name", "target": 0}
{"idx": 17743, "func": "Parses yes/no-patterns.", "target": 0}
{"idx": 17744, "func": "note: these assertions imply that neither this nor the base URI has a relative path; thus, both have either an absolute path or no path", "target": 0}
{"idx": 17745, "func": "(non-Javadoc) @see javax.swing.table.AbstractTableModel#isCellEditable(int, int)", "target": 0}
{"idx": 17746, "func": "putValue(LARGE_ICON, ImageLoader.getIcon(IconKeys.DOCUMENT_SAVE_AS));", "target": 0}
{"idx": 17747, "func": "(non-Javadoc) @see org.columba.ristretto.message.Message#getSource()", "target": 0}
{"idx": 17748, "func": "Note there's 3 capturing groups per value", "target": 0}
{"idx": 17749, "func": "//i18n[VersionColumnsTab.title=Versions]", "target": 0}
{"idx": 17750, "func": "get sender", "target": 0}
{"idx": 17751, "func": "//ITEM LABEL FONT //////////////////////////////////////////////////////", "target": 0}
{"idx": 17752, "func": "use our global class loader", "target": 0}
{"idx": 17753, "func": "//tok.dumpRanges();", "target": 0}
{"idx": 17754, "func": "Additional Operation 4.5.3.3 [1]", "target": 0}
{"idx": 17755, "func": "astore_3 store bean", "target": 0}
{"idx": 17756, "func": "tickLabelPaint", "target": 0}
{"idx": 17757, "func": "Clone the test bean and change every bean property", "target": 0}
{"idx": 17758, "func": "//i18n[IndexesTab.title=Indexes]", "target": 0}
{"idx": 17759, "func": "(non-Javadoc) @see org.columba.mail.imap.IImapServer#setExistsChangedAction(org.columba.mail.imap.IExistsChangedAction)", "target": 0}
{"idx": 17760, "func": "Override superclass to do nothing. Line width cannot be changed.", "target": 0}
{"idx": 17761, "func": "Display the field attributes when selected in the list", "target": 0}
{"idx": 17762, "func": "switch x and y", "target": 0}
{"idx": 17763, "func": "Check if labels etc have been hit Apparently GEF does require PathItems to be \"annotations\" which ours aren't, so until that is resolved...", "target": 1}
{"idx": 17764, "func": "Get the splash screen up as early as possible", "target": 0}
{"idx": 17765, "func": "Test make a long path", "target": 0}
{"idx": 17766, "func": "Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 17767, "func": "//class-MockProject", "target": 0}
{"idx": 17768, "func": "cannot handle single quotes", "target": 0}
{"idx": 17769, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo#getQualifiedName()", "target": 0}
{"idx": 17770, "func": "in UML2, we model a method as a Behavior (initially OpaqueBehavior)", "target": 0}
{"idx": 17771, "func": "We didn't match a ResourceLocation, but since we only support PUBLIC and URI entry types internally, it is still possible that there is another entry in an external catalog that will match. We call Apache resolver's resolveEntity method to cover this possibility. //", "target": 0}
{"idx": 17772, "func": "Increase width to accommodate all tabs on one row.", "target": 0}
{"idx": 17773, "func": "move forward exceptionSegmentCount segments skipping excluded segments", "target": 0}
{"idx": 17774, "func": "Save the actual socket", "target": 0}
{"idx": 17775, "func": "//NONE, because its the requested lock mode, not the actual!", "target": 0}
{"idx": 17776, "func": "PR 16213", "target": 0}
{"idx": 17777, "func": "include its parent (and in turn that module's parents)", "target": 0}
{"idx": 17778, "func": "rb_str_buf_append", "target": 0}
{"idx": 17779, "func": "//{{{ getParentDialog() method", "target": 0}
{"idx": 17780, "func": "mutex that controls modifications of user-defined finalizers", "target": 0}
{"idx": 17781, "func": "default is 12 point, so define font relative to that", "target": 0}
{"idx": 17782, "func": "//{{{ AbbrevsModel constructor", "target": 0}
{"idx": 17783, "func": "Get Classifiers in Namespace", "target": 0}
{"idx": 17784, "func": "//Enable for HHH-440, which we don't like:", "target": 0}
{"idx": 17785, "func": "---- telephoneTextField2 ----", "target": 0}
{"idx": 17786, "func": "TODO: 2nd next() for single hasNext()", "target": 1}
{"idx": 17787, "func": "this method has severe consequences on performance. We cannot rely on the super.hashCode() method since super.getName() always return the empty string in the current implemention (there's no setter) so it is basically draining the performance of a hashmap lookup", "target": 0}
{"idx": 17788, "func": "search individual provider and individual criteria", "target": 0}
{"idx": 17789, "func": "no permissions, i guess.", "target": 0}
{"idx": 17790, "func": "//get em on the second pass!", "target": 0}
{"idx": 17791, "func": "Wraps the socket in a slow SSL socket if necessary", "target": 0}
{"idx": 17792, "func": "This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).", "target": 0}
{"idx": 17793, "func": "should be 2 items", "target": 0}
{"idx": 17794, "func": "@see BaseDataSetViewerDestination#allRowsAdded()", "target": 0}
{"idx": 17795, "func": "//cache.clear();", "target": 0}
{"idx": 17796, "func": "Test method for 'org.apache.jmeter.protocol.http.sampler.postWriter.sendPostData(URLConnection, HTTPSampler)' This method test sending a request which contains both formdata and file content", "target": 0}
{"idx": 17797, "func": "End BeanShell Modification - sourceFile", "target": 0}
{"idx": 17798, "func": "Make #@%$^#^&# sure no alias is applied to the table name", "target": 0}
{"idx": 17799, "func": "Add a dummy GenModel for referenced packages. //", "target": 0}
{"idx": 17800, "func": "No block from a nil proc", "target": 0}
{"idx": 17801, "func": "//{{{ getKeyEventInterceptor() method", "target": 0}
{"idx": 17802, "func": "label", "target": 0}
{"idx": 17803, "func": "we currently only support a single category per activity", "target": 0}
{"idx": 17804, "func": "if the y coordinate is before the classifier role y, we place the start in the corner of the fighead.", "target": 0}
{"idx": 17805, "func": "IMPORT", "target": 0}
{"idx": 17806, "func": "Now populate the any totalRes fields that need to come from lastRes:", "target": 0}
{"idx": 17807, "func": "i18n[SchemaPropertiesPanel.schemaTableTitle=Schema table]", "target": 0}
{"idx": 17808, "func": "notify clients with -wait", "target": 0}
{"idx": 17809, "func": "As in java.sql.Types", "target": 0}
{"idx": 17810, "func": "Jacobi convergence test", "target": 0}
{"idx": 17811, "func": "TODO: side handles", "target": 0}
{"idx": 17812, "func": "Enumerate fields", "target": 0}
{"idx": 17813, "func": "create new class loader using the global class loader as parent", "target": 0}
{"idx": 17814, "func": "The workarea is all the visible space except the menu, toolbar and status bar. Workarea is laid out as a BorderSplitPane where the various components that make up the argo application can be positioned.", "target": 0}
{"idx": 17815, "func": "get files from old methods - includes and nested include", "target": 0}
{"idx": 17816, "func": "just especially for the trivial collection filter", "target": 0}
{"idx": 17817, "func": "The divider line should be visible, so no need to change its color.", "target": 0}
{"idx": 17818, "func": "Get the convention from the options hash", "target": 0}
{"idx": 17819, "func": "try again, but ignore charset specification in the html", "target": 0}
{"idx": 17820, "func": "Expand general entities in default values of attributes. (Do this after the doctypeDecl event!). expandAttributeDefaultValues();", "target": 0}
{"idx": 17821, "func": "No problems, so indicate a successful update of the underlying data. In case we are editing an SQL result that contains the edited colum more than once, we need to tell the caller to update all columns. Otherwise generation of where clauses for further editing will fail.", "target": 0}
{"idx": 17822, "func": "get global sorting state", "target": 0}
{"idx": 17823, "func": "Fill 6 of value (byte) -87 Fill 2 of value (byte) 33 Fill 10 of value (byte) -87 Fill 62 of value (byte) 33 Fill 2 of value (byte) -87 Fill 6 of value (byte) 33 Fill 10 of value (byte) -87 Fill 11 of value (byte) 33", "target": 0}
{"idx": 17824, "func": "Caret status", "target": 0}
{"idx": 17825, "func": "//{{{ getMarkerHighlightColor() method", "target": 0}
{"idx": 17826, "func": "if IMAP selectable folder", "target": 0}
{"idx": 17827, "func": "end class CrNavFromInterface", "target": 0}
{"idx": 17828, "func": "run the cvs command", "target": 0}
{"idx": 17829, "func": "only create new subfolders if we used the default \"Search Folder\"", "target": 0}
{"idx": 17830, "func": "//SECTION OUTLINE STROKE ///////////////////////////////////////////////", "target": 0}
{"idx": 17831, "func": "//To change body of overridden methods use File | Settings | File Templates.", "target": 0}
{"idx": 17832, "func": "Connect to the StarTeam server, and log on.", "target": 0}
{"idx": 17833, "func": "(non-Javadoc) @see org.columba.mail.folder.Folder#save()", "target": 0}
{"idx": 17834, "func": "//{{{ Marker constructor", "target": 0}
{"idx": 17835, "func": "(non-Javadoc) @see org.columba.calendar.ui.calendar.api.ICalendarView#viewToday()", "target": 0}
{"idx": 17836, "func": "get the clipping values...", "target": 0}
{"idx": 17837, "func": "test that the watchdog ends the process", "target": 0}
{"idx": 17838, "func": "(non-Javadoc) @see org.columba.calendar.ui.calendar.api.ICalendarView#setVisibleDateRange(org.columba.calendar.model.api.IDateRange)", "target": 0}
{"idx": 17839, "func": "@see org.xml.sax.ContentHandler#startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)", "target": 0}
{"idx": 17840, "func": "CREATE SEQUENCE testAutoIncrementTable_myid_seq INCREMENT BY 1 MINVALUE 1 NOMAXVALUE START WITH 1 NOCYCLE; CREATE FUNCTION nextAutoVal () RETURNING INTEGER; RETURN testAutoIncrementTable_myid_seq.NEXTVAL; END FUNCTION; I finally did get a trigger to work, but I had to use a function: CREATE TRIGGER myid_trigger INSERT ON testAutoIncrementTable FOR EACH ROW (execute function nextAutoVal() into myid); //", "target": 0}
{"idx": 17841, "func": "DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 17842, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsCatalogsInTableDefinitions()", "target": 0}
{"idx": 17843, "func": "get message flags", "target": 0}
{"idx": 17844, "func": "Spurious wakeup-loop", "target": 0}
{"idx": 17845, "func": "//FA_xxx", "target": 0}
{"idx": 17846, "func": "Do we need to qualify index names with the schema name?", "target": 1}
{"idx": 17847, "func": "//{{{ getFont() method", "target": 0}
{"idx": 17848, "func": "Default to collections sharing entity cache if there is one", "target": 0}
{"idx": 17849, "func": "Update sizes when number of digits in the line number changes", "target": 0}
{"idx": 17850, "func": "////////////////////////////////////////////////////////////////////Error reporting. //////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 17851, "func": "navigate to treenode \"text\"", "target": 0}
{"idx": 17852, "func": "load procedures with schema = null", "target": 0}
{"idx": 17853, "func": "not before the filesystem root and not after it, since root already contains one", "target": 0}
{"idx": 17854, "func": "not actually called anywhere (all known uses call the fast version)", "target": 0}
{"idx": 17855, "func": "//TODO: reenable if we also fix the above todo", "target": 1}
{"idx": 17856, "func": "Map<String, ISearchProvider> historyMap = SearchHistoryList .getInstance().getHistoryMap();", "target": 0}
{"idx": 17857, "func": "//see parent", "target": 0}
{"idx": 17858, "func": "global preferences", "target": 0}
{"idx": 17859, "func": "TODO: property name will need to be updated for UML 2.x Unfortunately we can specify two property names here", "target": 1}
{"idx": 17860, "func": "outlinePaint", "target": 0}
{"idx": 17861, "func": "Operations for Popup work.", "target": 0}
{"idx": 17862, "func": "Returns the shortest relative path between the the non-relative path of the given base and this absolute path. If the base has no path, it is treated as the root absolute path.", "target": 0}
{"idx": 17863, "func": "assume older than 1.4.2 tools.jar", "target": 0}
{"idx": 17864, "func": "The expected exception is thrown.", "target": 0}
{"idx": 17865, "func": "Iterate and find all keys below threshold percentThreshold", "target": 0}
{"idx": 17866, "func": "Regression for HARMONY-53", "target": 0}
{"idx": 17867, "func": "There is something valid in the sun_path component", "target": 0}
{"idx": 17868, "func": "execute the test and get the return code", "target": 0}
{"idx": 17869, "func": "@see junit.framework.TestCase#tearDown()", "target": 0}
{"idx": 17870, "func": "FIXME: add setSeriesItemLabelFont(int, Font, boolean) ?", "target": 0}
{"idx": 17871, "func": "this is only needed (afaict) for ResultTransformer processing...", "target": 0}
{"idx": 17872, "func": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 17873, "func": "probably needed to avoid NPEs with GUIs", "target": 0}
{"idx": 17874, "func": "//for non null args, check for components and elements containing components", "target": 0}
{"idx": 17875, "func": "Overrides SampleResult", "target": 0}
{"idx": 17876, "func": "//i18n[syntax.resWords=Reserved Words]", "target": 0}
{"idx": 17877, "func": "//the trick to integrating test output to the formatter, is to //create a special test class that asserts an error //and tell the formatter that it raised.", "target": 0}
{"idx": 17878, "func": "Just use the same directory as the file itself. This directory will exist", "target": 0}
{"idx": 17879, "func": "TimeSeriesDataItem item =", "target": 0}
{"idx": 17880, "func": "Get an {@link AbstractFilePersister} for file. @param file the {@link File} in which an ArgoUML {@link Project} will be persisted. @return the appropriate persister for file or null if the file's extension doesn't match a supported persister. TODO: move this to an helper class.", "target": 1}
{"idx": 17881, "func": "name already contains \".\" - unset on demand property", "target": 0}
{"idx": 17882, "func": "delegate the deletion of the local temp file to the delete task because of race conditions occuring on Windows", "target": 0}
{"idx": 17883, "func": "TODO: Do we want to use the Project here instead of just its name?", "target": 1}
{"idx": 17884, "func": "add the types of the parent project", "target": 0}
{"idx": 17885, "func": "'itemLabelFont' : immutable, no need to clone reference", "target": 0}
{"idx": 17886, "func": "element.setProperty(TCPSampler.NODELAY, setNoDelay.isSelected());", "target": 0}
{"idx": 17887, "func": "TODO: Do we want the top level package here instead of the immediate parent?", "target": 1}
{"idx": 17888, "func": "this is used during SqlGenerator processing", "target": 0}
{"idx": 17889, "func": "If the message has a name, but no action, then show the name:", "target": 0}
{"idx": 17890, "func": "Add the second join, the one that ends in the destination table.", "target": 0}
{"idx": 17891, "func": "JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately", "target": 0}
{"idx": 17892, "func": "These next lines for the case that the current namespace is not a valid one... Which of course should not happen, but it does - see the project attached to issue 3772.", "target": 1}
{"idx": 17893, "func": "Create an empty but initialized instance of a UML Class. @return an initialized UML Class instance. TODO: This needs an extra parameter to specify the model/extent where the new element should be created.", "target": 1}
{"idx": 17894, "func": "TBLRC 11000 - top and bottom only", "target": 0}
{"idx": 17895, "func": "keep track of the visible window associated w/the component useful during event filtering", "target": 0}
{"idx": 17896, "func": "Disable event delivery during model load", "target": 0}
{"idx": 17897, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsPositionedDelete()", "target": 0}
{"idx": 17898, "func": "range description", "target": 0}
{"idx": 17899, "func": "null means use the default", "target": 0}
{"idx": 17900, "func": "TODO: We don't want to do this once we have dropped UML1.3 Map UML 1.4 names to UML 1.3 equivalents", "target": 1}
{"idx": 17901, "func": "TODO: ON [PRIMARY]", "target": 1}
{"idx": 17902, "func": "//{{{ getDockables() method", "target": 0}
{"idx": 17903, "func": "//the property attribute must have access to a property file", "target": 0}
{"idx": 17904, "func": "???", "target": 0}
{"idx": 17905, "func": "i18n[Application.splash.loaddatatypeprops=Loading Data Type Properties...]", "target": 0}
{"idx": 17906, "func": "//hilo params", "target": 0}
{"idx": 17907, "func": "created by client", "target": 0}
{"idx": 17908, "func": "Fails to generate expected Exception", "target": 0}
{"idx": 17909, "func": "baseSeriesVisibleInLegend", "target": 0}
{"idx": 17910, "func": "super(str); set menu text incl. mnemonic if specified", "target": 0}
{"idx": 17911, "func": "required attributes", "target": 0}
{"idx": 17912, "func": "if use dynamic graph size is checked, we disable the dimension fields", "target": 0}
{"idx": 17913, "func": "-------------------- Static utils, used by most helpers ----------------", "target": 0}
{"idx": 17914, "func": "//setEnabled(false);", "target": 0}
{"idx": 17915, "func": "Just swap order of arguments to get to new form", "target": 0}
{"idx": 17916, "func": "verify min value", "target": 0}
{"idx": 17917, "func": "the other object has real data", "target": 0}
{"idx": 17918, "func": "TODO: may not work on all OSes?", "target": 1}
{"idx": 17919, "func": "outer radius", "target": 0}
{"idx": 17920, "func": "return JMeterContextService.getContext().getCurrentSampler().getName();", "target": 0}
{"idx": 17921, "func": "make buttons", "target": 0}
{"idx": 17922, "func": "force repaint", "target": 0}
{"idx": 17923, "func": "line 338", "target": 0}
{"idx": 17924, "func": "we need this public not protected", "target": 0}
{"idx": 17925, "func": "NetProtocolBufferedIOLibrary", "target": 0}
{"idx": 17926, "func": "user said not to read any of the data from the clob", "target": 0}
{"idx": 17927, "func": "Concurrent resources download $NON-NLS-1$", "target": 0}
{"idx": 17928, "func": "workaround for Swing rendering labels starting with <html> using the HTML engine", "target": 1}
{"idx": 17929, "func": "handler.ignorableWhitespace(ch, start, length);", "target": 0}
{"idx": 17930, "func": "A critic to suggest using the facade stereotype. <p> TODO: At the moment only a dummy implementation, see issue 3093.", "target": 1}
{"idx": 17931, "func": "try to rename one more time", "target": 0}
{"idx": 17932, "func": "THIS WILL FAIL. //compareBytes(\"abc\", \"utf-16\");", "target": 0}
{"idx": 17933, "func": "replace (update) attribute //$NON-NLS-1$ //$NON-NLS-2$ add mobile phone number attribute //$NON-NLS-1$ //$NON-NLS-2$", "target": 0}
{"idx": 17934, "func": "at this point we have (drivingSqlAlias) the SQL alias of the driving table corresponding to the given user alias. However, the driving table is not (necessarily) the table against which we want to apply locks. Mainly, the exception case here is joined-subclass hierarchies where we instead want to apply the lock against the root table (for all other strategies, it just happens that driving and root are the same).", "target": 0}
{"idx": 17935, "func": "@see AbstractTestActionAddDiagram#getValidNamespaceClasses()", "target": 0}
{"idx": 17936, "func": "i18n[editWhereColsSheet.unableToEdit=Unable to get list of columns, {0}]", "target": 0}
{"idx": 17937, "func": "save action has been cancelled", "target": 0}
{"idx": 17938, "func": "//i18n[syntax.selColor2=Select Color]", "target": 0}
{"idx": 17939, "func": "blockWidth", "target": 0}
{"idx": 17940, "func": "//ENamedElementToXMLInfoMapEntryImpl", "target": 0}
{"idx": 17941, "func": "line 905", "target": 0}
{"idx": 17942, "func": "different size =>different files", "target": 0}
{"idx": 17943, "func": "//paint the cross", "target": 0}
{"idx": 17944, "func": "//TestCase/implementedGenOperation.override.javajetinc", "target": 0}
{"idx": 17945, "func": "Serve it up", "target": 0}
{"idx": 17946, "func": "Don't try restoring the URL TODO: wy not?", "target": 1}
{"idx": 17947, "func": "FIXME: potentially could just use ByteList here?", "target": 1}
{"idx": 17948, "func": "i18n[graphToFile.ImageFileSpec=JPG image format]", "target": 0}
{"idx": 17949, "func": "//figure out which tables need to be fetched", "target": 0}
{"idx": 17950, "func": "This let's us test whether the string exists as a file. If not, we try as a URI. //", "target": 0}
{"idx": 17951, "func": "case RESCUENODE: return buildRescue(node, m); DEFERRED case RETRYNODE: return buildRetry(node, m); DEFERRED done", "target": 0}
{"idx": 17952, "func": "read first line and forget", "target": 0}
{"idx": 17953, "func": "this is where checked exceptions piss me off. this method only uses a StringReader which can never throw an exception...", "target": 1}
{"idx": 17954, "func": "This <CODE>ICommand</CODE> displays a dialog box that allows the user to enter a 'where' clause or an 'order by' clause used when getting data via the 'Contents' tab. @author <A HREF=\"mailto:mjhammel@users.sourceforge.net\">Maury Hammel</A> TODO: Change name to ContentsTabFilterCommand", "target": 1}
{"idx": 17955, "func": "If there are no subkeys, register using our special value to indicate that this is a primary key only registration", "target": 0}
{"idx": 17956, "func": "we are on a dos style system so this path could be a drive spec. We look at the next token", "target": 0}
{"idx": 17957, "func": "builder.setLeadingColumnOffset(2);", "target": 0}
{"idx": 17958, "func": "stringValue not null, nodeValue is null", "target": 0}
{"idx": 17959, "func": "@see org.tigris.gef.presentation.Fig#setLineWidth(int)", "target": 0}
{"idx": 17960, "func": "not???", "target": 0}
{"idx": 17961, "func": "//Finally set the property", "target": 0}
{"idx": 17962, "func": "CRLF blank line found", "target": 0}
{"idx": 17963, "func": "register it as a user profile", "target": 0}
{"idx": 17964, "func": "//{{{ getDimension() method", "target": 0}
{"idx": 17965, "func": "basePaint", "target": 0}
{"idx": 17966, "func": "string doesn't have it's own ByteList (values)", "target": 0}
{"idx": 17967, "func": "Resolve any aliases", "target": 0}
{"idx": 17968, "func": "methods to make it possible to use the Native Id generator", "target": 0}
{"idx": 17969, "func": "The CellRenderer used for this data type", "target": 0}
{"idx": 17970, "func": "//set up our mapping policy", "target": 0}
{"idx": 17971, "func": "TODO: Reuse the offender List.", "target": 1}
{"idx": 17972, "func": "adjust description field", "target": 0}
{"idx": 17973, "func": "todo : remove this and just have subclasses use Isolater/IsolatedWork directly...", "target": 1}
{"idx": 17974, "func": "Assign a tooltip for each of the columns", "target": 0}
{"idx": 17975, "func": "if we search in The MessageConroller", "target": 0}
{"idx": 17976, "func": "Now read in the string", "target": 0}
{"idx": 17977, "func": "end class FigPackage", "target": 0}
{"idx": 17978, "func": "try to read grent to fail fast", "target": 0}
{"idx": 17979, "func": "on a headless system (without display) this will crash", "target": 0}
{"idx": 17980, "func": "no end", "target": 0}
{"idx": 17981, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsResultSetConcurrency(int, int)", "target": 0}
{"idx": 17982, "func": "//Empty Body", "target": 0}
{"idx": 17983, "func": "TODO: multiplicity checks", "target": 1}
{"idx": 17984, "func": "&& eReverseFeature.isNavigable();", "target": 0}
{"idx": 17985, "func": "Tests CopyHelper without using stereotypes. <p> The test is using the tree of objects: <pre> model / \\ p1 p2 / \\ class_ nestedPackage \\ interface_ \\ attribute </pre> TODO: This test doesn't match the MDR implementation because it expects the contents of a namespace to be copied. It is disabled until it can be fixed to run with both MDR and eUML. - tfm 20070820 @author Bogdan", "target": 1}
{"idx": 17986, "func": "//instance variable to allow cleanup", "target": 0}
{"idx": 17987, "func": "abort if not in debugging mode", "target": 0}
{"idx": 17988, "func": "Tell the DataSetViewer to delete the rows Note: rows are indexes in the SORTABLE model, not the ACTUAL model", "target": 0}
{"idx": 17989, "func": "//{{{ insertFile() method", "target": 0}
{"idx": 17990, "func": "Special case for EQ on two wrapper objects", "target": 0}
{"idx": 17991, "func": "//Weblogic.jspc calls System.exit() ... have to fork Therefore, takes loads of time Can pass directories at a time (.jsp) but easily runs out of memory on hefty dirs (even on a Sun)", "target": 0}
{"idx": 17992, "func": "//{{{ insertTabAndIndent() method", "target": 0}
{"idx": 17993, "func": "update tag list if mode changes", "target": 0}
{"idx": 17994, "func": "if diagram added successfully, add the member too", "target": 0}
{"idx": 17995, "func": "Create one NameEntry in the appropriate pattern list for each line in the file.", "target": 0}
{"idx": 17996, "func": "Test sending data as UTF-8, with values that have been urlencoded", "target": 0}
{"idx": 17997, "func": "Action targets", "target": 0}
{"idx": 17998, "func": "If the suffix is \".tmp\" then send it to the array", "target": 0}
{"idx": 17999, "func": "XmlElement filter = new XmlElement(\"filter\"); defaultElement.addElement(filter);", "target": 0}
{"idx": 18000, "func": "host from which this message was downloaded", "target": 0}
{"idx": 18001, "func": "//{{{ TextAreaTransferHandler class", "target": 0}
{"idx": 18002, "func": "putValue(LARGE_ICON, ImageLoader.getImageIcon(\"reply_small.png\"));", "target": 0}
{"idx": 18003, "func": "Trigger Synchronization", "target": 0}
{"idx": 18004, "func": "These are not currently updated", "target": 0}
{"idx": 18005, "func": "i18n[graph.scriptdd=script DDL]", "target": 0}
{"idx": 18006, "func": "line 476", "target": 0}
{"idx": 18007, "func": "separate fields with an empty line", "target": 0}
{"idx": 18008, "func": "Make sure it's parseable as an number", "target": 0}
{"idx": 18009, "func": "//if its \"id\"", "target": 0}
{"idx": 18010, "func": ")", "target": 0}
{"idx": 18011, "func": "Something went wrong that shouldn't. //", "target": 0}
{"idx": 18012, "func": "a key that hasn't been mapped should return the default group", "target": 0}
{"idx": 18013, "func": "how many times we had to wait to queue a sample", "target": 0}
{"idx": 18014, "func": "scan source and dest dirs to build up both copy lists and compile lists scanDir(srcDir, destDir);", "target": 0}
{"idx": 18015, "func": "no initialization required", "target": 0}
{"idx": 18016, "func": "TRY SOME MORE ERRORS", "target": 0}
{"idx": 18017, "func": "//System.err.println(\"CLOSURE: \"+min+\", \"+max);", "target": 0}
{"idx": 18018, "func": "the number of decimal digits allowed in the number", "target": 0}
{"idx": 18019, "func": "Initialize the cipher for encryption", "target": 0}
{"idx": 18020, "func": "not thrown, so need to check here", "target": 0}
{"idx": 18021, "func": "TODO: Use stylesheet to convert or wait till we use Fig factories in diagram subsystem. What is the last version that used FigNote?", "target": 1}
{"idx": 18022, "func": "line 529", "target": 0}
{"idx": 18023, "func": "auto reload changed buffers?", "target": 0}
{"idx": 18024, "func": "check an inherited attribute", "target": 0}
{"idx": 18025, "func": "get a list of MessageNode objects of the first hierachy level", "target": 0}
{"idx": 18026, "func": "Types of the columns.", "target": 0}
{"idx": 18027, "func": "TODO: it might be a good idea to keep a reference to the color specified in setPaint() or setColor(), rather than creating a new object every time getPaint() is called.", "target": 1}
{"idx": 18028, "func": "// public VirtualFolder(FolderItem item) { // super(item); // headerList = new MemoryHeaderList(); // ensureValidFilterElement(); // }", "target": 0}
{"idx": 18029, "func": "apply target parent pattern first", "target": 0}
{"idx": 18030, "func": "kill any remaining tasks", "target": 0}
{"idx": 18031, "func": "String or Integer", "target": 0}
{"idx": 18032, "func": "for historical and performance reasons we have to do things in a rather complex way. (1) Move is optimized to move directories if a fileset has been included completely, therefore FileSets need a special treatment. This is also required to support the failOnError semantice (skip filesets with broken basedir but handle the remaining collections). (2) We carry around a few protected methods that work on basedirs and arrays of names. To optimize stuff, all resources with the same basedir get collected in separate lists and then each list is handled in one go.", "target": 0}
{"idx": 18033, "func": "we need to step through the rows one row at a time (slow)", "target": 0}
{"idx": 18034, "func": "NOTE: Source and line arguments are nonsense in a call(). Any way to make these arguments sensible?", "target": 1}
{"idx": 18035, "func": "build each \"when\"", "target": 0}
{"idx": 18036, "func": "end of SourcePathControllerImpl class definition", "target": 0}
{"idx": 18037, "func": "call the proc, but not for symbols", "target": 0}
{"idx": 18038, "func": "The following ugly conversion from text to Byte is necessary because the Byte class is inconsistant. When asked to output as Hex, it does so as an UNSIGNED byte, but when asked to read back the same thing using the Hex radix, it insists that the input must be SIGNED. To get around this, we up-size the conversion to Integer, then truncate that to a byte, and finally convert the byte to a Byte. Yech.", "target": 1}
{"idx": 18039, "func": "leave the y values (y1, y0) untranslated as it is going to be be stacked up later by previous series values, after this it will be translated.", "target": 0}
{"idx": 18040, "func": "Method is broken anyway", "target": 1}
{"idx": 18041, "func": "Check for Quoted variable names", "target": 0}
{"idx": 18042, "func": "no block", "target": 0}
{"idx": 18043, "func": "Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed", "target": 0}
{"idx": 18044, "func": "try deleting null", "target": 0}
{"idx": 18045, "func": "Add SQuirreL Licence to the Licence node.", "target": 0}
{"idx": 18046, "func": "should we return original value?", "target": 0}
{"idx": 18047, "func": "We should use the _current_ object state (ie. after any updates that occurred during flush)", "target": 0}
{"idx": 18048, "func": "line 1178", "target": 0}
{"idx": 18049, "func": "self name", "target": 0}
{"idx": 18050, "func": "4.5.2.27 ModelElement", "target": 0}
{"idx": 18051, "func": "i18n[exportconfig.applicationSettings=Application Settings]", "target": 0}
{"idx": 18052, "func": "TODO: ActionState, CallState, and SubactivityState have been replaced in UML 2.0 by explicitly modeled Actions", "target": 1}
{"idx": 18053, "func": "CLD is also 20", "target": 0}
{"idx": 18054, "func": "If not running under AllTests.java, make sure that the properties (and log file) are set up correctly. N.B. In order for this to work correctly, the JUnit test must be started in the bin directory, and all the JMeter jars (plus any others needed at run-time) need to be on the classpath.", "target": 0}
{"idx": 18055, "func": "TODO : or should we return 'containsTableAlias'??", "target": 1}
{"idx": 18056, "func": "IMPORTANT: Receive the block argument before the opt and splat args This is so that the arg can be encoded as 'rest of the array'. This won't work if the block argument hasn't been received yet!", "target": 1}
{"idx": 18057, "func": "line 1417", "target": 0}
{"idx": 18058, "func": "Generate an initial set of coding tables", "target": 0}
{"idx": 18059, "func": "chain to the next segment of this giant method", "target": 0}
{"idx": 18060, "func": "i18n[laf.themePacLoc=Theme Pack Directory:]", "target": 0}
{"idx": 18061, "func": "(non-Javadoc) @see org.eclipse.ui.IWorkbenchWindowActionDelegate#dispose()", "target": 0}
{"idx": 18062, "func": "//null child could occur for no from clause in a filter", "target": 0}
{"idx": 18063, "func": "build include it seems that the parameters for build include are just the other way round add an include: we do not need to have associtions on one", "target": 0}
{"idx": 18064, "func": "set fonts", "target": 0}
{"idx": 18065, "func": "Process shared namespaces", "target": 0}
{"idx": 18066, "func": "line 546", "target": 0}
{"idx": 18067, "func": "(non-Javadoc) @see org.columba.core.filter.IFilterActionList#addEmptyAction()", "target": 0}
{"idx": 18068, "func": "//{{{ setDimension() method", "target": 0}
{"idx": 18069, "func": "i18n[AliasPropertiesInternalFrame.close=Close]", "target": 0}
{"idx": 18070, "func": "@bgen(jjtree) Block", "target": 0}
{"idx": 18071, "func": "RubyIPSocket", "target": 0}
{"idx": 18072, "func": "We need this buffer because this method may be called asynchronously to the event dispatch thread What could happen is, that _currentAliasInfos ist changed.", "target": 0}
{"idx": 18073, "func": "get date", "target": 0}
{"idx": 18074, "func": "button action:", "target": 0}
{"idx": 18075, "func": "//{{{ getIconHeight() method", "target": 0}
{"idx": 18076, "func": "super returns -1 if any of GEFs buttons was hit (but maybe one of the not-GEF-buttons)", "target": 0}
{"idx": 18077, "func": "register for tagDefinitions:", "target": 0}
{"idx": 18078, "func": "The text area displaying the object contents", "target": 0}
{"idx": 18079, "func": "try to set selection", "target": 0}
{"idx": 18080, "func": "fill semantic context", "target": 0}
{"idx": 18081, "func": "@see java.awt.Component#getLocale()", "target": 0}
{"idx": 18082, "func": "---- homepageButton ----", "target": 0}
{"idx": 18083, "func": "?? OK ??", "target": 0}
{"idx": 18084, "func": "//i18n[ImportDataIntoTableExecutor.ioException=An error occured while reading the input file.]", "target": 0}
{"idx": 18085, "func": "TODO check if we have to manually set the folder/uid in message controller to make this work", "target": 1}
{"idx": 18086, "func": "fudge for larger inset windows", "target": 0}
{"idx": 18087, "func": "A specific version was requested - use as is for search //", "target": 0}
{"idx": 18088, "func": "@see org.argouml.uml.diagram.ui.StereotypeContainer#isStereotypeVisible()", "target": 0}
{"idx": 18089, "func": "TBLRC 11111 - all", "target": 0}
{"idx": 18090, "func": "If its an interface we have an interface end, otherwise its something else and we should see if it is navigable. We don't check that the end is a Classifier, rather than its child ClassifierRole, since we have effectively eliminated that possiblity in rejecting AssociationRoles above.", "target": 0}
{"idx": 18091, "func": "not full test plans", "target": 0}
{"idx": 18092, "func": "Remove the workbench and testplan nodes", "target": 0}
{"idx": 18093, "func": "1. Load the module first (lhs of node) 2. Then load the constant from the module", "target": 0}
{"idx": 18094, "func": "View Tab", "target": 0}
{"idx": 18095, "func": "create a panel for the settings...", "target": 0}
{"idx": 18096, "func": "Now, set the text for this node. It should be the element columns.", "target": 0}
{"idx": 18097, "func": "@see org.argouml.ui.explorer.TreeModelUMLEventListener#modelElementRemoved(java.lang.Object)", "target": 0}
{"idx": 18098, "func": "Check type of object. //", "target": 0}
{"idx": 18099, "func": "0 --> srcIndex", "target": 0}
{"idx": 18100, "func": "add the button", "target": 0}
{"idx": 18101, "func": "//!!! return SQLTokenContext.INCOMPLETE_STRING_LITERAL;", "target": 0}
{"idx": 18102, "func": "if the displayName is the empty string, leave it like that.", "target": 0}
{"idx": 18103, "func": "The returned list of Figs is sorted according layout: from top to bottom.", "target": 0}
{"idx": 18104, "func": "y is minor", "target": 0}
{"idx": 18105, "func": "AbstractSshMessage", "target": 0}
{"idx": 18106, "func": "Optimization: check if anchor + minimumLength > length", "target": 0}
{"idx": 18107, "func": "builder.append(alwaysEncryptCheckBox, 3); builder.nextLine();", "target": 0}
{"idx": 18108, "func": "TODO: More is required here to support referenceValues", "target": 1}
{"idx": 18109, "func": "//{{{ UnixWorkaround class", "target": 1}
{"idx": 18110, "func": "for the first line displayed, take its physical line to be the text area's first physical line", "target": 0}
{"idx": 18111, "func": "save() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 18112, "func": "Readonly class: no generalization, no association to self", "target": 0}
{"idx": 18113, "func": "A language must be unique So, select the current empty language. TODO ? Alert", "target": 1}
{"idx": 18114, "func": "//do not use a FileResource b/c it pulls File info from the filesystem:", "target": 0}
{"idx": 18115, "func": "print the i18n comment", "target": 0}
{"idx": 18116, "func": "initialize the skip array to all zeros", "target": 0}
{"idx": 18117, "func": "first off, make sure that we've got a srcdir", "target": 0}
{"idx": 18118, "func": "root fiber", "target": 0}
{"idx": 18119, "func": "note, it's important to scan the items BEFORE we make the UnmatchedFileMap because that creates a bunch of NEW folders and files (unattached to repository) and we don't want to include those in our traversal.", "target": 0}
{"idx": 18120, "func": "Get the minimum size of the component.", "target": 0}
{"idx": 18121, "func": "//\"right:max(40dlu;pref),3dlu,", "target": 0}
{"idx": 18122, "func": "Was a goto in original ruby lexer", "target": 0}
{"idx": 18123, "func": "might be already selected, see above.", "target": 0}
{"idx": 18124, "func": "ONE-OR-MORE REPEAT OPERATOR + | \\+ depending on RE_BK_PLUS_QM not available if RE_LIMITED_OPS is set", "target": 0}
{"idx": 18125, "func": "//DatabaseObjectType.INDEX_TYPE_DBO=Index Type", "target": 0}
{"idx": 18126, "func": "we got a valid errno value", "target": 0}
{"idx": 18127, "func": "check that reference tarfilesets cannot have specific attributes", "target": 0}
{"idx": 18128, "func": "//STROKE ////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 18129, "func": "otherwise decrement and possibly close as normal", "target": 0}
{"idx": 18130, "func": "the source of the transition is a choice", "target": 0}
{"idx": 18131, "func": "we dispose resources we own but user must dispose gc", "target": 0}
{"idx": 18132, "func": "//Create checkbox for enabling auto refresh i18n[oracle.auotRefresh2=Enable auto refresh]", "target": 0}
{"idx": 18133, "func": "//p.add(makeButtonPanel(), BorderLayout.SOUTH);", "target": 0}
{"idx": 18134, "func": "We don't have a local copy", "target": 0}
{"idx": 18135, "func": "//even on inverse=\"true\"", "target": 0}
{"idx": 18136, "func": "Found \"<!\"", "target": 0}
{"idx": 18137, "func": "//throw new IllegalStateException(\"Command unrecognized: \" + response);", "target": 0}
{"idx": 18138, "func": "add intersection point to the polygon", "target": 0}
{"idx": 18139, "func": "module/singleton methods are all defined public", "target": 0}
{"idx": 18140, "func": "default not visible", "target": 0}
{"idx": 18141, "func": "---- emailTextField3 ----", "target": 0}
{"idx": 18142, "func": "if the message it not yet seen", "target": 0}
{"idx": 18143, "func": "//setFontFamily(\"dialog\"); TODO: Is this needed?", "target": 1}
{"idx": 18144, "func": "Is it a bsh script variable reference? If we're just starting the eval of name (no base object) or we're evaluating relative to a This type reference check.", "target": 0}
{"idx": 18145, "func": "We only build caches if none were passed in. Passing in caches counts as a clear statement of exactly what is wanted", "target": 0}
{"idx": 18146, "func": "//missing Specials add manually 84", "target": 0}
{"idx": 18147, "func": "dismiss char", "target": 0}
{"idx": 18148, "func": "it is a removed file", "target": 0}
{"idx": 18149, "func": "tail must be EvStrNode at this point", "target": 0}
{"idx": 18150, "func": "save expanded state", "target": 0}
{"idx": 18151, "func": "Save options selected for Cell Import Export operations", "target": 0}
{"idx": 18152, "func": "If we don't have a fig for this UML object, we'll need to add one. We set the bounds, but they will be reset later.", "target": 0}
{"idx": 18153, "func": "specifies valid elements for an ActionState to contain", "target": 0}
{"idx": 18154, "func": "This class models the designer who is building a complex design in some application domain and needs continuous feedback to aid in the making of good design decisions.<p> <strong>This area needs work, especially as it is a central idea of Argo.</strong><p> Currently (almost) everything is hardcoded. What can be configurable??<p> The ToDoList is dependent on this class, i.e. each designer has its ToDoList.<p> Each designer has his own Agency, which is the only class that knows all the critics.<p> This class listens to property changes from ...?<p> A designer can create ToDo Items, just like the critics. Hence the designer implements the Poster interface.<p> TODO: There is a strong dependency cycle between Agency and Designer. They either need to be merged into a single class or partitioned differently, perhaps using an interface to break the cycle. The Designer singleton gets passed to almost every single part of the Critic subsystem, creating strong coupling throughout. - tfm 20070620 @author Jason Robbins", "target": 1}
{"idx": 18155, "func": "truncate can't lengthen files, so we save position, seek/write, and go back", "target": 0}
{"idx": 18156, "func": "@see javax.swing.AbstractAction.AbstractAction()", "target": 0}
{"idx": 18157, "func": "finally create the Huffman tables", "target": 0}
{"idx": 18158, "func": "move to the parent", "target": 0}
{"idx": 18159, "func": "This is effectively the same as saver.toXML(Object, Writer) except we get to provide the DataHolder Don't know why there is no method for this in the XStream class", "target": 1}
{"idx": 18160, "func": "Skip the blank line with crlf dividing headers and body", "target": 0}
{"idx": 18161, "func": "file to source (overrides script)", "target": 0}
{"idx": 18162, "func": "//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$", "target": 0}
{"idx": 18163, "func": "remove garbage characters...", "target": 0}
{"idx": 18164, "func": "//public abstract void setChatMediator(IChatMediator mediator);", "target": 0}
{"idx": 18165, "func": "in case we were deserialized in a different JVM, look for an instance with the same name (alternatively we could do an actual JNDI lookup here....)", "target": 0}
{"idx": 18166, "func": "valid bounds", "target": 0}
{"idx": 18167, "func": "set the default item label positions, which will only be used if the user requests visible item labels...", "target": 0}
{"idx": 18168, "func": "//////////////////////////////////////////////////////////////Fig accessors", "target": 0}
{"idx": 18169, "func": "We have done our preparation. Now ask the super to validate. //", "target": 0}
{"idx": 18170, "func": "//{{{ addRule() method", "target": 0}
{"idx": 18171, "func": "This is not necessarily the current diagram!", "target": 0}
{"idx": 18172, "func": "For PointBase, if type maps to Pointbase \"BLOB\", and the size isn't valid (PB requires size for BLOBS) then set it to something reasonably large, like 16MB. 1 is the default size if no size is specified. That's practically useless :)", "target": 1}
{"idx": 18173, "func": "//{{{ FileVFS method", "target": 0}
{"idx": 18174, "func": "//{{{ handleEditPaneUpdate() method", "target": 0}
{"idx": 18175, "func": "//We have ended changelog for that particular file //so we can save it", "target": 0}
{"idx": 18176, "func": "//dmo added //dmo added", "target": 0}
{"idx": 18177, "func": "Hack to deal with Firebird's RDB meta tables.", "target": 1}
{"idx": 18178, "func": "//int contentLength = httpMethod.getResponseContentLength();Not visible ... //TODO size ouststream according to actual content length", "target": 1}
{"idx": 18179, "func": "return false if iteration should continue.", "target": 0}
{"idx": 18180, "func": "XXX: do something?", "target": 1}
{"idx": 18181, "func": "skip blank lines", "target": 0}
{"idx": 18182, "func": "Constructors are always considered scalar results.", "target": 0}
{"idx": 18183, "func": "i18n[mssql.generateDrop=Generate the DROP <object> command for each object]", "target": 0}
{"idx": 18184, "func": "invoke the iterator method on the ConstructorArgs push the ConstructorArgs", "target": 0}
{"idx": 18185, "func": "draw the tick marks and labels...", "target": 0}
{"idx": 18186, "func": "This inner class implements a case statement....perhaps im being a bit over-clever here", "target": 1}
{"idx": 18187, "func": "//this one behaves differently, hence seperated:", "target": 0}
{"idx": 18188, "func": "//{{{ Determine action", "target": 0}
{"idx": 18189, "func": "Check if the method has been explicitly excluded", "target": 0}
{"idx": 18190, "func": "user said to insert, so collect all the data from the JTable and send it to the DataSetViewer for insertion into DB and on-screen tables", "target": 0}
{"idx": 18191, "func": "Write attributes", "target": 0}
{"idx": 18192, "func": "@see tudresden.ocl.check.types.Type#hasState(java.lang.String)", "target": 0}
{"idx": 18193, "func": "Write end of multipart", "target": 0}
{"idx": 18194, "func": "Uses a cache to speed up creation of a URI from a string. The cache is consulted to see if the URI, less any fragment, has already been created. If needed, the fragment is re-appended to the cached URI, which is considerably more efficient than creating the whole URI from scratch. If the URI wasn't found in the cache, it is created using parseIntoURI() and then cached. This method should always be used by string-parsing factory methods, instead of parseIntoURI() directly.", "target": 0}
{"idx": 18195, "func": "try a collection with a single number plus a null", "target": 0}
{"idx": 18196, "func": "init from config read number, write result as new default and prepare keys", "target": 0}
{"idx": 18197, "func": "no password, will require passphrase", "target": 0}
{"idx": 18198, "func": "Create a new hashtable if necessary.", "target": 0}
{"idx": 18199, "func": "An extent allows anything to be added. //", "target": 0}
{"idx": 18200, "func": "If the propertyType is null and there isn't a parent, just stop now... there was a problem resolving the node anyway.", "target": 0}
{"idx": 18201, "func": "//render series in forward order", "target": 0}
{"idx": 18202, "func": "This triggers some warnings (in logs) because some elements are created without an owner (and eResource is null) TODO: fix this The warning log (if we would not add the EObject to a resource) would looks like this: \"...WARN [AWT-EventQueue-0] Encountered deleted object during delete of...\"", "target": 1}
{"idx": 18203, "func": "bit3 set to signal, we use a data descriptor", "target": 0}
{"idx": 18204, "func": "Autoscroll Interface... The following code was borrowed from the book: Java Swing By Robert Eckstein, Marc Loy & Dave Wood Paperback - 1221 pages 1 Ed edition (September 1998) O'Reilly & Associates; ISBN: 156592455X The relevant chapter of which can be found at: http://www.oreilly.com/catalog/jswing/chapter/dnd.beta.pdf", "target": 0}
{"idx": 18205, "func": "In the case of two arguments, MRI will discard the portion of the first argument after a decimal point (i.e., \"floor\"). However in the case of a single argument, any portion after the decimal point is honored.", "target": 0}
{"idx": 18206, "func": "TODO: Do we need this?", "target": 1}
{"idx": 18207, "func": "first account item", "target": 0}
{"idx": 18208, "func": "When an object is controlled, the only change will be in the new resource's contents, so it must refresh the whole viewer to hit the object's label. //", "target": 0}
{"idx": 18209, "func": "Simulate a press of the mouse above the calculated point:", "target": 0}
{"idx": 18210, "func": "draw the border", "target": 0}
{"idx": 18211, "func": "//consume the file name", "target": 0}
{"idx": 18212, "func": "Implementation notes: Note: we may need some synchronization in here Note on version dependency: This base class is JDK 1.1 compatible, however we are forced to use weak references in the full featured implementation (the optional bsh.classpath package) to accomodate all of the fleeting namespace listeners as they fall out of scope. (NameSpaces must be informed if the class space changes so that they can un-cache names). <p> Perhaps a simpler idea would be to have entities that reference cached types always perform a light weight check with a counter / reference value and use that to detect changes in the namespace. This puts the burden on the consumer to check at appropriate times, but could eliminate the need for the listener system in many places and the necessity of weak references in this package. <p>", "target": 1}
{"idx": 18213, "func": "The 'from element' that the property is in.", "target": 0}
{"idx": 18214, "func": "Necessary to avoid NPE when testing serialisation", "target": 0}
{"idx": 18215, "func": "return jump handling", "target": 0}
{"idx": 18216, "func": "register as Observer", "target": 0}
{"idx": 18217, "func": "This one is still usable, so let's retain it,", "target": 0}
{"idx": 18218, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsMixedCaseQuotedIdentifiers()", "target": 0}
{"idx": 18219, "func": "We have our own UML2 profile, but it is not used. Instead, by the following line the build-in eclipse UML2 standard profile and primitive types implementation are used.", "target": 0}
{"idx": 18220, "func": "---- departmentTextField ----", "target": 0}
{"idx": 18221, "func": "close inpustream", "target": 0}
{"idx": 18222, "func": "// You may still have other ResultSets or update counts left to process here // but you can't do it now or the ResultSet you just got will be closed", "target": 0}
{"idx": 18223, "func": "//{{{ uninit() method", "target": 0}
{"idx": 18224, "func": "baseStroke", "target": 0}
{"idx": 18225, "func": "RubyModule singletonClass = module.getSingletonClass();", "target": 0}
{"idx": 18226, "func": "orientation...", "target": 0}
{"idx": 18227, "func": "TODO: Not sure we need to do this, but just to be safe for now.", "target": 1}
{"idx": 18228, "func": "The headers and body are divided by a blank line", "target": 0}
{"idx": 18229, "func": "Set up reader to be first filter in chain", "target": 0}
{"idx": 18230, "func": "Additional attributes and references may be defined directly on the interface in order to allow the get accessor method to have suppressed visibility. //", "target": 0}
{"idx": 18231, "func": "//set up project references.", "target": 0}
{"idx": 18232, "func": "register for changes to editor type (text / html)", "target": 0}
{"idx": 18233, "func": "some filters affecting the collection are enabled on the session, so do not do the put into the cache.", "target": 0}
{"idx": 18234, "func": "OK Button ------------------------------------------", "target": 0}
{"idx": 18235, "func": "TODO: minimum height should not be calculated every time, but only when an FigMessage has been added or removed. Currently doing that doesn't work because of an unknown problem. How to test: create only two CRs and a create message between them. Then move the create message to the bottom! Until that is fixed the workaround is to call updateMinimumHeight() every time the minimum size is needed", "target": 1}
{"idx": 18236, "func": "//{{{ View methods", "target": 0}
{"idx": 18237, "func": "TODO: I18N This needs to be localized, but we don't have any localization capabilities in the model subsystem Object[] args = { typeName, elemName, alias }; misc.name.element-import.alias = Imported {0}: {1} alias {2} return Translator.localize( \"misc.name.element-import.alias\", args);", "target": 1}
{"idx": 18238, "func": "InstantDB (at least version 3.13) only returns \"TABLES\" for getTableTypes(). If you try to use this in a call to DatabaseMetaData.getTables() no tables will be found. For the moment hard code the types for InstantDB.", "target": 0}
{"idx": 18239, "func": "This was a getOpt with one mandatory arg, but it did not work so I am parsing it for now.", "target": 1}
{"idx": 18240, "func": "otherwise:", "target": 0}
{"idx": 18241, "func": "TODO finish marshalling of all available properties", "target": 1}
{"idx": 18242, "func": "A HTTP POST request, with UTF-8 encoding", "target": 0}
{"idx": 18243, "func": "Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result. <!-- begin-user-doc --> <!-- end-user-doc --> @return the first non-null result returned by a <code>caseXXX</code> call. @generated", "target": 0}
{"idx": 18244, "func": "shapeFilled=", "target": 0}
{"idx": 18245, "func": "just decrement the lock, don't recache (we don't know which transaction won)", "target": 0}
{"idx": 18246, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsSubqueriesInIns()", "target": 0}
{"idx": 18247, "func": "line 1789", "target": 0}
{"idx": 18248, "func": "Add back in the array indices if there are any. //", "target": 0}
{"idx": 18249, "func": "TODO translation", "target": 1}
{"idx": 18250, "func": "xLow", "target": 0}
{"idx": 18251, "func": "//{{{ getEOLMarkerColor() method", "target": 0}
{"idx": 18252, "func": "id = org.columba.example.HelloWorld$HelloWorldPlugin", "target": 0}
{"idx": 18253, "func": "Remove series 1", "target": 0}
{"idx": 18254, "func": "Tell the monitor we are done Remove the ThreadLocal entry", "target": 0}
{"idx": 18255, "func": "The space between the 2 text figs is: PADDING. @see org.tigris.gef.presentation.Fig#getMinimumSize()", "target": 0}
{"idx": 18256, "func": "1.9 only", "target": 0}
{"idx": 18257, "func": "delete variable fragment from old declaration", "target": 0}
{"idx": 18258, "func": "For eclipse setup", "target": 0}
{"idx": 18259, "func": "Due to the complexity in initializing the SelectClause, do not generate one here. If it is not found; simply return null... Also, do not cache since it gets generated well after we are created.", "target": 0}
{"idx": 18260, "func": "create command reference", "target": 0}
{"idx": 18261, "func": "Get the new Look and Feel object.", "target": 0}
{"idx": 18262, "func": "//{{{ readBooleanArray() method", "target": 0}
{"idx": 18263, "func": "// private final static ILogger s_log = // LoggerController.createLogger(AlterColumnsPanelBuilder.class);", "target": 0}
{"idx": 18264, "func": "strokeList", "target": 0}
{"idx": 18265, "func": "i18n[RefactoringPreferencesPanel.quoteCheckboxLabel=Quote identifiers in scripts]", "target": 0}
{"idx": 18266, "func": "signalname", "target": 0}
{"idx": 18267, "func": "both have same visibility; just remove anything in between.", "target": 0}
{"idx": 18268, "func": "vector.add(moreButton);", "target": 0}
{"idx": 18269, "func": "Variables for this LineNumber component", "target": 0}
{"idx": 18270, "func": "bad CRC mode link uid, gid", "target": 0}
{"idx": 18271, "func": "result of checking for jaybird driver with major version >= 2", "target": 0}
{"idx": 18272, "func": "//yySindex 889", "target": 0}
{"idx": 18273, "func": "let's select the correct radio button", "target": 0}
{"idx": 18274, "func": "IMPORT OBJECT FROM OSX_FILE", "target": 0}
{"idx": 18275, "func": "SS: update dynamic column widths", "target": 0}
{"idx": 18276, "func": "if value contains \":\" it probably has a time component", "target": 0}
{"idx": 18277, "func": "add the remaining parts", "target": 0}
{"idx": 18278, "func": "Default wait (ms) for a message if timeouts are not enabled This is the maximum time the sampler can be blocked.", "target": 0}
{"idx": 18279, "func": "@JRubyMethod(name = \"exact?\")", "target": 0}
{"idx": 18280, "func": "//this.setPreferredSize(new Dimension(400,150));", "target": 0}
{"idx": 18281, "func": "Utility function to localize the given string with help text, and show it in the status bar of the ArgoUML window. This function is used in favour of the inline call to enable later improvements; e.g. it would be possible to show a help-balloon. <p> TODO: This code is also present in other root Figs... @param s the given string to be localized and shown", "target": 1}
{"idx": 18282, "func": "//{{{ Remove class", "target": 0}
{"idx": 18283, "func": "newer versions of Kaffe (1.1.1+) won't have this, but this will be sorted by FileSet anyway.", "target": 0}
{"idx": 18284, "func": "get the start of the file", "target": 0}
{"idx": 18285, "func": "by default, it is not running.", "target": 0}
{"idx": 18286, "func": "Checking to make sure the correct files were are listed in the array.", "target": 0}
{"idx": 18287, "func": "Merge the lists. //", "target": 0}
{"idx": 18288, "func": "Store the recent files", "target": 0}
{"idx": 18289, "func": "position in REToken.newline", "target": 0}
{"idx": 18290, "func": "create filter", "target": 0}
{"idx": 18291, "func": "All core AWT listeners", "target": 0}
{"idx": 18292, "func": "in case of a tagged value, the type shouldn't be set here", "target": 0}
{"idx": 18293, "func": "//Action performed for the cancel button // private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) // { // _dlog.setVisible(false); // _dlog.dispose(); // }", "target": 0}
{"idx": 18294, "func": "Make sure that the session menu is enabled.", "target": 0}
{"idx": 18295, "func": "add the links arguments", "target": 0}
{"idx": 18296, "func": "should not occur", "target": 0}
{"idx": 18297, "func": "If backups > 1, move old ~n~ files, create ~1~ file", "target": 0}
{"idx": 18298, "func": "x0", "target": 0}
{"idx": 18299, "func": "@see org.tigris.gef.presentation.Fig#setEnclosingFig(org.tigris.gef.presentation.Fig)", "target": 0}
{"idx": 18300, "func": "we're removing from before the first visible to after the last visible", "target": 0}
{"idx": 18301, "func": "CASE IR instructions are dummy instructions -- all when/then clauses have been converted into if-then-else blocks", "target": 0}
{"idx": 18302, "func": "Attempt to parse authority. If the section is an empty string this is a valid server based authority, so set the host to this value.", "target": 0}
{"idx": 18303, "func": "constants webrick crashes without", "target": 0}
{"idx": 18304, "func": "//{{{ Lay out independent buttons", "target": 0}
{"idx": 18305, "func": "check whether shortcut is a prefix to others", "target": 0}
{"idx": 18306, "func": "Process {}'s (example: Dir.glob(\"{jruby,jython}/README\")", "target": 0}
{"idx": 18307, "func": "TODO: not used - make private?", "target": 1}
{"idx": 18308, "func": "no existing blob to re-use", "target": 0}
{"idx": 18309, "func": "/////////////////////////////////////////////////////////////////////////Methods that implement the GraphModel itself ///////////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 18310, "func": "Set up the graph with header, footer, Y axis and graph display", "target": 0}
{"idx": 18311, "func": "TBLRC 01001 - bottom and center only", "target": 0}
{"idx": 18312, "func": "analyses the successors of the block", "target": 0}
{"idx": 18313, "func": "Check that the names match.", "target": 0}
{"idx": 18314, "func": "metaType is assumed to be single-column type", "target": 0}
{"idx": 18315, "func": "Ruby's designation for some platforms, minus version numbers in some cases", "target": 0}
{"idx": 18316, "func": "container state / composite state", "target": 0}
{"idx": 18317, "func": "tickMarkPosition", "target": 0}
{"idx": 18318, "func": "handleEvent gets all events", "target": 0}
{"idx": 18319, "func": "TODO support other kinds of tail", "target": 1}
{"idx": 18320, "func": "-ignore", "target": 0}
{"idx": 18321, "func": "//classStaticNameSpace.importClass( fqClassName.replace('$','.') );", "target": 0}
{"idx": 18322, "func": "legendLabelGenerator", "target": 0}
{"idx": 18323, "func": "Add the edges (such as comment edges) that were on the old FigAssociation to our new FigNodeAssociation and make sure they are positioned correctly.", "target": 0}
{"idx": 18324, "func": "check for intersect", "target": 0}
{"idx": 18325, "func": "hack to make sure that the right height is applied when no icon is used.", "target": 1}
{"idx": 18326, "func": "this.contentPane = comp;", "target": 0}
{"idx": 18327, "func": "//{{{ newFile() method", "target": 0}
{"idx": 18328, "func": "make space for the clarifier margin between text and border", "target": 0}
{"idx": 18329, "func": "//{{{ updateText() method", "target": 0}
{"idx": 18330, "func": "Change the item to be checked out to a StarTeam File.", "target": 0}
{"idx": 18331, "func": "initialize completer", "target": 0}
{"idx": 18332, "func": "bubble up if allowed", "target": 0}
{"idx": 18333, "func": "try zero length array", "target": 0}
{"idx": 18334, "func": "Set the Java class name", "target": 0}
{"idx": 18335, "func": "superclass does not use types", "target": 0}
{"idx": 18336, "func": "@see org.argouml.uml.reveng.ImportCommon#isCreateDiagramsChecked()", "target": 0}
{"idx": 18337, "func": "//{{{ initBufferSwitcher() method", "target": 0}
{"idx": 18338, "func": "case 3 and 4", "target": 0}
{"idx": 18339, "func": "Needs to be public for tests", "target": 0}
{"idx": 18340, "func": "Do the key. The key is immutable so we can use the _current_ object state - not necessarily the state at the time the delete was issued", "target": 0}
{"idx": 18341, "func": "If f==null because of deleted AbstractMessageFolder fallback to Inbox", "target": 0}
{"idx": 18342, "func": "Oracle can only store DECIMAL type numbers. Since regular non-decimal numbers appear as \"decimal\", Oracle's decimal numbers can be rather large compared to other databases (precision up to 38). Other databases can only handle this large precision in BIGINT fields, not decimal, so try to figure out if Oracle is really storing a BIGINT and claiming it is a DECIMAL. If so, convert the type to BIGINT before going any further.", "target": 0}
{"idx": 18343, "func": "//set the schema source for the doc", "target": 0}
{"idx": 18344, "func": "line 928", "target": 0}
{"idx": 18345, "func": "//tick value not between 0 & 1 //show tick label if it's the first or last in the set, or if it's 1-5; beyond that show fewer as the values get larger:", "target": 0}
{"idx": 18346, "func": "JASON: Do we need these?", "target": 1}
{"idx": 18347, "func": "TODO: ask the user if they want to \"undo\" the changes that the paste made. Alternatively show them the specific problem and let them fix it. Then allow them to retry the operation, starting from the point at which the previous operation failed.", "target": 1}
{"idx": 18348, "func": "Can't be set", "target": 0}
{"idx": 18349, "func": "same logic as on algorithm, no testcases created", "target": 0}
{"idx": 18350, "func": "set properties for virtual folder default is inbox if parent is null", "target": 0}
{"idx": 18351, "func": "TODO: not navigable this direction? - tfm", "target": 1}
{"idx": 18352, "func": "// scalarColumnAliases.add( typeReturn.getColumnAlias() ); // scalarTypes.add( typeReturn.getType() );", "target": 0}
{"idx": 18353, "func": "This is what we expect.", "target": 0}
{"idx": 18354, "func": "line 1058", "target": 0}
{"idx": 18355, "func": "keep track of which events fired", "target": 0}
{"idx": 18356, "func": "Evaluate the initializers", "target": 0}
{"idx": 18357, "func": "module is on top of stack", "target": 0}
{"idx": 18358, "func": "i18n[CancelStatementThread.cancelTimedOut=Failed to cancel statement within one second. Perhaps your driver/database does not support cancelling statements. If cancelling succeeds later you'll get a further messages.]", "target": 0}
{"idx": 18359, "func": "// Iterator iter = extendsQueue.iterator();", "target": 0}
{"idx": 18360, "func": "//cannot instantiate", "target": 0}
{"idx": 18361, "func": "now get an existing proxy for each row element (if there is one)", "target": 0}
{"idx": 18362, "func": "info text list of files expected result result", "target": 0}
{"idx": 18363, "func": "20040510, karlpeder columns may be null (first time we visit a folder!?) IDefaultItem item = new DefaultItem(xmlElement);", "target": 0}
{"idx": 18364, "func": "Already present", "target": 0}
{"idx": 18365, "func": "Create marker positions", "target": 0}
{"idx": 18366, "func": "Which Bodypart shall be shown? (html/plain)", "target": 0}
{"idx": 18367, "func": "myid myid StringTemplate st = new StringTemplate(templateStr);", "target": 0}
{"idx": 18368, "func": "Make sure we always have a default extent. The old extent will get deleted as part of creating the new extent.", "target": 0}
{"idx": 18369, "func": "with block pass", "target": 0}
{"idx": 18370, "func": "single attachment", "target": 0}
{"idx": 18371, "func": "Buffer to hold the post body, except file content", "target": 0}
{"idx": 18372, "func": "In this case, the bounds (of the box) are determined by the FigClassAssociationClass", "target": 0}
{"idx": 18373, "func": "exception fell through, throw it upward...", "target": 0}
{"idx": 18374, "func": "Add listener to listen for items added/removed from list.", "target": 0}
{"idx": 18375, "func": "All strings collate before all UML elements", "target": 0}
{"idx": 18376, "func": "See if the entity is already bound to this session, if not look at the entity identifier and assume that the entity is persistent if the id is not \"unsaved\" (that is, we rely on foreign keys to keep database integrity)", "target": 0}
{"idx": 18377, "func": "end class StylePanelFigInterface", "target": 0}
{"idx": 18378, "func": "first field contains the row key", "target": 0}
{"idx": 18379, "func": "The event dispatch thread, for the purpose of getting stack traces.", "target": 0}
{"idx": 18380, "func": "operation(paramlist)", "target": 0}
{"idx": 18381, "func": "isLineVisible(i) &&", "target": 0}
{"idx": 18382, "func": "increment the current count", "target": 0}
{"idx": 18383, "func": "If entries don't have the same feature, the feature maps aren't equal. //", "target": 0}
{"idx": 18384, "func": "line 1373", "target": 0}
{"idx": 18385, "func": "Tests used to be coded to assume immediate event delivery. They've been modified to use flush() where needed. - tfm //oldEventPolicy = MFactoryImpl.getEventPolicy(); //MFactoryImpl.setEventPolicy(MFactoryImpl.EVENT_POLICY_IMMEDIATE);", "target": 0}
{"idx": 18386, "func": "//{{{ getFileProtocol() method", "target": 0}
{"idx": 18387, "func": "check to see if it is in the second-level cache", "target": 0}
{"idx": 18388, "func": "TODO: Do we need to clone the stereotype(s)?", "target": 0}
{"idx": 18389, "func": "set formatted name", "target": 0}
{"idx": 18390, "func": "case 1", "target": 0}
{"idx": 18391, "func": "Removed for close Session", "target": 0}
{"idx": 18392, "func": "i18n[mysql.enterDbName=Enter database name]", "target": 0}
{"idx": 18393, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsNamedParameters()", "target": 0}
{"idx": 18394, "func": "'itemLabelPaint' : immutable, no need to clone reference", "target": 0}
{"idx": 18395, "func": "Iterator over all the child references to factor each child to the right reference. //", "target": 0}
{"idx": 18396, "func": "update cached range values", "target": 0}
{"idx": 18397, "func": "Do nothing", "target": 0}
{"idx": 18398, "func": "replace the next question mark with nextVal", "target": 0}
{"idx": 18399, "func": "use XMLCatalog as the entity resolver and URI resolver", "target": 0}
{"idx": 18400, "func": "enable controls if we are not in html edit mode", "target": 0}
{"idx": 18401, "func": "//{{{ getDefaultProperty() method", "target": 0}
{"idx": 18402, "func": "close it out", "target": 0}
{"idx": 18403, "func": "@see org.argouml.cognitive.ui.Wizard#canFinish()", "target": 0}
{"idx": 18404, "func": "TODO: This is probably an undesirable side effect unless the user confirms it. Placing an element on a second diagram is going to potentially change its namespace. - tfm 20061208", "target": 1}
{"idx": 18405, "func": "Add sample", "target": 0}
{"idx": 18406, "func": "create a legend, if requested...", "target": 0}
{"idx": 18407, "func": "//StyleConstants.setBackground(_saSetError, Color.red);", "target": 0}
{"idx": 18408, "func": "i18n[UpdateControllerImpl.promptToDownloadAvailableUpdatesTitle=Updates Available]", "target": 0}
{"idx": 18409, "func": "line number", "target": 0}
{"idx": 18410, "func": "1680..169F;", "target": 0}
{"idx": 18411, "func": "(non-Javadoc) @see org.columba.addressbook.facade.IGroupItem#removeContact(org.columba.addressbook.facade.IContactItem)", "target": 0}
{"idx": 18412, "func": "//TODO: ugly here:", "target": 1}
{"idx": 18413, "func": "If failed to process document, must delete target document, or it will not attempt to process it the second time", "target": 0}
{"idx": 18414, "func": "//private static final int GET_ENTRY = 0;", "target": 0}
{"idx": 18415, "func": "capture the intermediate output", "target": 0}
{"idx": 18416, "func": "didn't find any group for this buddy", "target": 0}
{"idx": 18417, "func": "SSL not supported, startTLS not supported, other messagingException", "target": 0}
{"idx": 18418, "func": "Look through the imports of the containing compilation unit. //", "target": 0}
{"idx": 18419, "func": "Set up a VSSCp task", "target": 0}
{"idx": 18420, "func": "//TODO: Decide whether this should be a bound property or not. // getPropertyChangeReporter().firePropertyChange(ISQLDriver.IPropertyNames.NAME, _name, _name);", "target": 1}
{"idx": 18421, "func": "We moused over an object just as it was deleted transient condition - doesn't require I18N", "target": 0}
{"idx": 18422, "func": "concrete implementation of actions", "target": 0}
{"idx": 18423, "func": "//First convert the string representation into the binary bytes it is describing", "target": 0}
{"idx": 18424, "func": "private static final String LABEL_DEFAULT = \"JavaTest\";", "target": 0}
{"idx": 18425, "func": "//TODO: should orphans really be deleted during lock???", "target": 1}
{"idx": 18426, "func": "Proc class", "target": 0}
{"idx": 18427, "func": "labelOutlinePaint", "target": 0}
{"idx": 18428, "func": "//{{{ Private members", "target": 0}
{"idx": 18429, "func": "adding something to the excludes'", "target": 0}
{"idx": 18430, "func": "make sure there are some rules...", "target": 0}
{"idx": 18431, "func": "clear the redo", "target": 0}
{"idx": 18432, "func": "i18n[HelpViewerWindow.error.loadlicencefile=Error retrieving Licence file URL for {0}]", "target": 0}
{"idx": 18433, "func": "supportedTypes.add(IUpdateableItemText.class);", "target": 0}
{"idx": 18434, "func": "Scale everything up", "target": 0}
{"idx": 18435, "func": "If we're creating a child under an object in a feature map, the selection will be the feature map entry. We want to replace it with the model object. //", "target": 0}
{"idx": 18436, "func": "TODO: what about n arg?", "target": 1}
{"idx": 18437, "func": "call operator", "target": 0}
{"idx": 18438, "func": "(non-Javadoc) @see org.columba.addressbook.model.IEmailModel#getType()", "target": 0}
{"idx": 18439, "func": "fall-back", "target": 0}
{"idx": 18440, "func": "line 955", "target": 0}
{"idx": 18441, "func": "from DUP_SETUP", "target": 0}
{"idx": 18442, "func": "i18n[codecompletion.function.mustEndWith=function must end with ',']", "target": 0}
{"idx": 18443, "func": "//{{{ print() method", "target": 0}
{"idx": 18444, "func": "be strict about line separator", "target": 0}
{"idx": 18445, "func": "!!! return SQLTokenContext.INCOMPLETE_CHAR_LITERAL;", "target": 0}
{"idx": 18446, "func": "or BYTE or TEXT? or MONEY", "target": 0}
{"idx": 18447, "func": "the first sub-fold. used by JEditTextArea.expandFold().", "target": 0}
{"idx": 18448, "func": "NOTE if SSL is possible we just need the plain login since SSL does the encryption for us.", "target": 0}
{"idx": 18449, "func": "have to check again since above might set NEW_FILE flag", "target": 0}
{"idx": 18450, "func": "if CAPA was not support just give it a try...", "target": 0}
{"idx": 18451, "func": "checkboxes", "target": 0}
{"idx": 18452, "func": "Return all ports on node or edge. @see org.tigris.gef.graph.GraphModel#getPorts(java.lang.Object)", "target": 0}
{"idx": 18453, "func": "//this one needed only for guessEntityMode()", "target": 0}
{"idx": 18454, "func": "OS/2 - use same mechanism as Windows 2000", "target": 0}
{"idx": 18455, "func": "leading comment", "target": 0}
{"idx": 18456, "func": "and finally, adjust the scrollbars to show the Fig", "target": 0}
{"idx": 18457, "func": "since we do not have all of the data from the clob, we cannot allow editing", "target": 0}
{"idx": 18458, "func": "deprecated config-file support -> skip creation of \"Cancel\" button", "target": 0}
{"idx": 18459, "func": "Unwrap value. //", "target": 0}
{"idx": 18460, "func": "create Subject headerfield in using the senders message subject and prepending \"Fwd:\" if not already there @param header A <code>ColumbaHeader</code> which contains the headerfields of the message we want reply/forward. FIXME (@author fdietz): we need to i18n this!", "target": 1}
{"idx": 18461, "func": "EATM this would be wrong.", "target": 1}
{"idx": 18462, "func": "We need to verify that ns is a Package, if not - find its parent package! Otherwise this causes an exception when creating a sequence diagram for a ClassifierRole.", "target": 0}
{"idx": 18463, "func": "give all text areas the same font", "target": 0}
{"idx": 18464, "func": "@see javax.swing.Action#isEnabled()", "target": 0}
{"idx": 18465, "func": "before first visible line", "target": 0}
{"idx": 18466, "func": "search for SecurityItem based on To headerfield", "target": 0}
{"idx": 18467, "func": "MVW: These are the WFRs for DataType: [1] A DataType can only contain Operations, which all must be queries. self.allFeatures->forAll(f | f.oclIsKindOf(Operation) and f.oclAsType(Operation).isQuery) [2] A DataType cannot contain any other ModelElements. self.allContents->isEmpty IMHO we should enforce these WFRs here. ... so it is still possible to copy or move query operations, hence we should allow this.", "target": 0}
{"idx": 18468, "func": "A near clone of this code works fine outside of ArgoUML, but throws a null pointer exception during the transform when run within ArgoUML I think it's something to do with the class libraries being used, but I can't figure out what, so I've done a simpler, less efficient stepwise translation below in serialTransform", "target": 1}
{"idx": 18469, "func": "//{{{ setAbbrev() method", "target": 0}
{"idx": 18470, "func": "valueFormat", "target": 0}
{"idx": 18471, "func": "The feedback is set based on which half we are in. If the command isn't executable, these values won't be used. //", "target": 0}
{"idx": 18472, "func": "//yAdj = -descent - leading + (float) bounds.getHeight();", "target": 0}
{"idx": 18473, "func": "Determine if an index is assigned. //", "target": 0}
{"idx": 18474, "func": "End instance data", "target": 0}
{"idx": 18475, "func": "Private constructor for use of platform factory methods.", "target": 0}
{"idx": 18476, "func": "Call class under test", "target": 0}
{"idx": 18477, "func": "handle tool tips in a simple way", "target": 0}
{"idx": 18478, "func": "send from address and recipient list to SMTP server ->all addresses have to be normalized", "target": 0}
{"idx": 18479, "func": "Does not appear to be used; called by MainFrame#setEditAddMenu() but that is not called", "target": 1}
{"idx": 18480, "func": "update calendar viewer", "target": 0}
{"idx": 18481, "func": "Returns a set (union) of all unique applicable stereotypes for a given collection of model elements. TODO: This is not optimized for performance. @param elements the given collection of model elements @return the set with stereotype UML objects", "target": 1}
{"idx": 18482, "func": "REVISIT: Remove this code.", "target": 1}
{"idx": 18483, "func": "Removed for reformatting", "target": 0}
{"idx": 18484, "func": "logout cleanly", "target": 0}
{"idx": 18485, "func": "KEY", "target": 0}
{"idx": 18486, "func": "line 1377", "target": 0}
{"idx": 18487, "func": "@see org.argouml.uml.diagram.ui.AbstractActionCheckBoxMenuItem#toggleValueOfTarget(java.lang.Object)", "target": 0}
{"idx": 18488, "func": "Create the editing domain with a special command stack. //", "target": 0}
{"idx": 18489, "func": "AbstractThreadGroup is only allowed under a TestPlan", "target": 0}
{"idx": 18490, "func": "//assert !(value instanceof RubyArray) : \"Not an array\";", "target": 0}
{"idx": 18491, "func": "property file not found for user - first time user ran pgm.", "target": 0}
{"idx": 18492, "func": "current path is the parent of the current element", "target": 0}
{"idx": 18493, "func": "step down in size until the current size is too small or there are no more units", "target": 0}
{"idx": 18494, "func": "private JPanel propertyPane;", "target": 0}
{"idx": 18495, "func": "setup for collecting optional entity info...", "target": 0}
{"idx": 18496, "func": "If the workbench part changes... //", "target": 0}
{"idx": 18497, "func": "//{{{ scrollDownLine() method", "target": 0}
{"idx": 18498, "func": "//{{{ unwrapException() method", "target": 0}
{"idx": 18499, "func": "open", "target": 0}
{"idx": 18500, "func": "The following methods override the defaults for performance reasons", "target": 0}
{"idx": 18501, "func": "//ToolTipManager.sharedInstance().setInitialDelay(500);", "target": 0}
{"idx": 18502, "func": "//{{{ isMultipleSelectionEnabled() method", "target": 0}
{"idx": 18503, "func": "Convert the string (e.g. \"aaa,bbb,ccc\") into separate stereotype-names (e.g. \"aaa\", \"bbb\", \"ccc\").", "target": 0}
{"idx": 18504, "func": "viewpath", "target": 0}
{"idx": 18505, "func": "return ;", "target": 0}
{"idx": 18506, "func": "@see org.argouml.uml.diagram.ui.FigEdgeModelElement#updateListeners(java.lang.Object, java.lang.Object)", "target": 0}
{"idx": 18507, "func": "Fine, Java 1.3 or earlier, do it by hand.", "target": 0}
{"idx": 18508, "func": "here we've hit the second line of a multi-line i18n stanza Just skip it, we're not that sophisticated.", "target": 0}
{"idx": 18509, "func": "Optionally number the requests", "target": 0}
{"idx": 18510, "func": "//Ecore2EcoreResourceFactoryImpl", "target": 0}
{"idx": 18511, "func": "getAllHeaders() is not yet genericised throws ME", "target": 0}
{"idx": 18512, "func": "Scripted method body", "target": 0}
{"idx": 18513, "func": "Check whether there is an opposite that needs attention. //", "target": 0}
{"idx": 18514, "func": "@see org.tigris.gef.presentation.FigGroup#hitFig(java.awt.Rectangle)", "target": 0}
{"idx": 18515, "func": "verify that the equivalence test works", "target": 0}
{"idx": 18516, "func": "private SearchResultView searchResultView;", "target": 0}
{"idx": 18517, "func": "List of active threads", "target": 0}
{"idx": 18518, "func": "the Method objects for setUp (@Before) and tearDown (@After) methods Will be null if not provided or not required", "target": 0}
{"idx": 18519, "func": "@see org.argouml.ui.targetmanager.TargetListener#targetAdded( org.argouml.ui.targetmanager.TargetEvent)", "target": 0}
{"idx": 18520, "func": "ATTRIBUTES USED ONLY DURING FLUSH CYCLE", "target": 0}
{"idx": 18521, "func": "22!", "target": 0}
{"idx": 18522, "func": "compstmt position includes both parens around it", "target": 0}
{"idx": 18523, "func": "No need to check column name validity when source and dest are of the same type of database.", "target": 0}
{"idx": 18524, "func": "The string to build", "target": 0}
{"idx": 18525, "func": "TODO: Move to different class?", "target": 1}
{"idx": 18526, "func": "//{{{ Match class", "target": 0}
{"idx": 18527, "func": "naked property-refs cannot be used with an aliased from element", "target": 0}
{"idx": 18528, "func": "try/finally block to ensure unlock", "target": 0}
{"idx": 18529, "func": "dynamic filters attached to the class-level", "target": 0}
{"idx": 18530, "func": "if parent is null, then we are at the root of the fs, complain that we can't find the build file.", "target": 0}
{"idx": 18531, "func": "//{{{ Undo", "target": 0}
{"idx": 18532, "func": "GuiPackage.getInstance().getMainFrame().showStoppingMessage(name);", "target": 0}
{"idx": 18533, "func": "createEntities;", "target": 0}
{"idx": 18534, "func": "Get the instance field", "target": 0}
{"idx": 18535, "func": "test when file begins with basedir twice", "target": 0}
{"idx": 18536, "func": "public AddressbookTreeNode(String name) { super(name); this.name = name; }", "target": 0}
{"idx": 18537, "func": "If the value is null, the key is a referenced object", "target": 0}
{"idx": 18538, "func": "Add the '0-repeats' index positions.elementAt(z) == position [] in input after <<z>> matches", "target": 0}
{"idx": 18539, "func": "i18n[PreLaunchHelperImpl.backupFailedMessage=Backup of existing files failed. Installation cannot proceed]", "target": 0}
{"idx": 18540, "func": "backward jump", "target": 0}
{"idx": 18541, "func": "must be a URL - just pass as is", "target": 0}
{"idx": 18542, "func": "(non-Javadoc) @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)", "target": 0}
{"idx": 18543, "func": "This is the tricky part where we set the encoding that we'd like to have decoded as a series of commands to execute after this command has completed. //", "target": 0}
{"idx": 18544, "func": "'outer' is optional and is ignored", "target": 0}
{"idx": 18545, "func": "warn that selectors are not supported", "target": 0}
{"idx": 18546, "func": "//by default, natural-ids are \"immutable\" (constant)", "target": 0}
{"idx": 18547, "func": "user is still manipulating the selection", "target": 0}
{"idx": 18548, "func": "//public Folder getSubFolder(int idx) throws IndexOutOfBoundsException { /return (Folder)_folders.get(idx); //}", "target": 0}
{"idx": 18549, "func": "use an anonymous subclass since ProjectComponent is abstract", "target": 0}
{"idx": 18550, "func": "//overwrite old proxy", "target": 0}
{"idx": 18551, "func": "get all the classes from the diagram", "target": 0}
{"idx": 18552, "func": "we failed to add the element first time", "target": 0}
{"idx": 18553, "func": "//{{{ doFileExistsWarning() method", "target": 0}
{"idx": 18554, "func": "i18n[SchemaTableCboItem.schemaID.loadAndCache=Load and cache]", "target": 0}
{"idx": 18555, "func": "jar-file found", "target": 0}
{"idx": 18556, "func": "$,: output field separator", "target": 0}
{"idx": 18557, "func": "5 is the size of (list", "target": 0}
{"idx": 18558, "func": "//{{{ FontSelectorDialog constructor", "target": 0}
{"idx": 18559, "func": "This refactoring depends on the following dialect API methods: getUpdateSQL", "target": 1}
{"idx": 18560, "func": "//TODO deal with UNC names", "target": 1}
{"idx": 18561, "func": "//{{{ getElectricScroll() method", "target": 0}
{"idx": 18562, "func": "loop through all the associated entities and make sure they have been processed before the latest batch associated with this entity type.", "target": 0}
{"idx": 18563, "func": "There must be at least one match. //", "target": 0}
{"idx": 18564, "func": "//DatabaseObjectType.UDF_TYPE_DBO=UDF Type", "target": 0}
{"idx": 18565, "func": "field for size of text to read", "target": 0}
{"idx": 18566, "func": "we need to grab the version value from the entity, otherwise we have issues with generated-version entities that may have multiple actions queued during the same flush", "target": 0}
{"idx": 18567, "func": "//{{{ popElement() method", "target": 0}
{"idx": 18568, "func": "check if the user entered a bracket", "target": 0}
{"idx": 18569, "func": "Haven't found a class, continue on as though it were a package", "target": 0}
{"idx": 18570, "func": "now overwrite this item with another", "target": 0}
{"idx": 18571, "func": "We don't care if optional modules aren't found.", "target": 0}
{"idx": 18572, "func": "This updates the diagram - hence as last statement:", "target": 0}
{"idx": 18573, "func": "Only return the feedback for an executable command. //", "target": 0}
{"idx": 18574, "func": "i18n[graph.noSel=No selection]", "target": 0}
{"idx": 18575, "func": "Prepare for a pretty date", "target": 0}
{"idx": 18576, "func": "Register a listener for metamodel Class (and all its subclasses), optionally qualified by a list of property names. TODO: verify that property/event names are legal for this class in the metamodel", "target": 1}
{"idx": 18577, "func": "Check if the line is a header", "target": 0}
{"idx": 18578, "func": "fromType", "target": 0}
{"idx": 18579, "func": "//{{{ TokenMarker constructor", "target": 0}
{"idx": 18580, "func": "Write the EOL separately so we generate LF line ends on Unix and Windows $NON-NLS-1$", "target": 0}
{"idx": 18581, "func": "Regions can get instantiated in the course of normal work (e.g. a named query region will be created the first time the query is executed), so suspend any ongoing tx", "target": 0}
{"idx": 18582, "func": "2440..245F;", "target": 0}
{"idx": 18583, "func": "Our name holder (offsets are assigned as variables are added", "target": 0}
{"idx": 18584, "func": "'.'", "target": 0}
{"idx": 18585, "func": "use a stack to accumulate segments", "target": 0}
{"idx": 18586, "func": "didn't receive any response", "target": 0}
{"idx": 18587, "func": "MATCH_ANY", "target": 0}
{"idx": 18588, "func": "//{{{ getValueAt() method", "target": 0}
{"idx": 18589, "func": "setTargets(e.getNewTargets());", "target": 0}
{"idx": 18590, "func": "try and load from this loader if the parent either didn't find it or wasn't consulted.", "target": 0}
{"idx": 18591, "func": "//i18n[ColumnDetailsDialog.precisionLabel=Precision: ]", "target": 0}
{"idx": 18592, "func": "same name, same participants, two offenders", "target": 0}
{"idx": 18593, "func": "Find the messages that have been deleted", "target": 0}
{"idx": 18594, "func": "default preserves previous behaviour", "target": 0}
{"idx": 18595, "func": "We know this is a block scope because a local scope cannot be within a local scope If topScope was itself it would have created a LocalAsgnNode above.", "target": 0}
{"idx": 18596, "func": "//handle quoted strings", "target": 0}
{"idx": 18597, "func": "RIGHT", "target": 0}
{"idx": 18598, "func": "here we use BooleanUtilities to remain compatible with JDKs < 1.4", "target": 0}
{"idx": 18599, "func": "i18n[I18n.loadBundles=Load bundles]", "target": 0}
{"idx": 18600, "func": "The SQLHistoryComboBoxModel has a static member that prevents garbage collection. Therefore we need to remove the model.", "target": 0}
{"idx": 18601, "func": "Can't do it as a static initialisation, because SaveService is being constructed when this is called", "target": 0}
{"idx": 18602, "func": "needs to be private so that subclasses won't forget calling fireCharsetChanged", "target": 0}
{"idx": 18603, "func": "Used by GUI", "target": 0}
{"idx": 18604, "func": "accountItem.getPopItem()", "target": 0}
{"idx": 18605, "func": "//no text? remove attr!", "target": 0}
{"idx": 18606, "func": "TODO: MVW: I think this has to be: clone.nameFig = (FigSingleLineText) cloneFig; but have not the means to investigate, since this code is not yet used. Enable the menu-items for Copy/Paste to test... BTW: In some other FigNodeModelElement classes I see the same mistake.", "target": 0}
{"idx": 18607, "func": "This is the exit status", "target": 0}
{"idx": 18608, "func": "TODO (@author fdietz): move this to AbstractMessageFolder constructor", "target": 1}
{"idx": 18609, "func": "i18n[DBUtil.error.firebirdcommit=Firebird requires commit table create before inserting records. Please adjust your preferences.]", "target": 0}
{"idx": 18610, "func": "If the name is too long or multi-line (e.g. for comments) then we reduce to the first line or 80 chars.", "target": 0}
{"idx": 18611, "func": "TODO: @author hubms check what is neccessary remove old filters searchFolder.getFilter().getFilterRule().removeAll(); add filter criteria searchFolder.getFilter().getFilterRule().add(c);", "target": 1}
{"idx": 18612, "func": "//project.setFile(file);", "target": 0}
{"idx": 18613, "func": "line 446", "target": 0}
{"idx": 18614, "func": "Experimental/Testing, will be removed", "target": 1}
{"idx": 18615, "func": "This doesn't look pretty and mode line should probably be split up into seperate components/strings", "target": 1}
{"idx": 18616, "func": "chop to server.name:xx $NON-NLS-1$", "target": 0}
{"idx": 18617, "func": "Expected.", "target": 0}
{"idx": 18618, "func": "Names of the various methods we need to invoke", "target": 0}
{"idx": 18619, "func": "//$NON-NLS-1$ //$NON-NLS-1$ Check if it is form data //$NON-NLS-1$ Get the form field name //$NON-NLS-1$", "target": 0}
{"idx": 18620, "func": "If the from element represents a JOIN_FRAGMENT and it is a theta-style join, convert its type from JOIN_FRAGMENT to FROM_FRAGMENT", "target": 0}
{"idx": 18621, "func": "i18n[SQLHistoryDlg.applyFilter=Apply]", "target": 0}
{"idx": 18622, "func": "the bar is not visible", "target": 0}
{"idx": 18623, "func": "setPreferredSize(list.getPreferredSize());", "target": 0}
{"idx": 18624, "func": "Cache unqualified names to prevent import check again", "target": 0}
{"idx": 18625, "func": "not compatible must follow the checkbox setting", "target": 0}
{"idx": 18626, "func": "Cached copy of Totals for this instance. The variables do not need to be synchronised, as they are not shared between threads However the contents do need to be synchronized.", "target": 0}
{"idx": 18627, "func": "if download OK, remove existing version", "target": 0}
{"idx": 18628, "func": "process all events collected until now", "target": 0}
{"idx": 18629, "func": "appendData() writes new data at the index position given by newestAt/ When adding new data dynamically, use advanceTime(), followed by this:", "target": 0}
{"idx": 18630, "func": "//{{{ SelectionHandler class", "target": 0}
{"idx": 18631, "func": "//i18n[explainplanexecuter.createPlanTableMsg=The Oracle Plan //Table '{0}' doesnt exist in the current schema. Do you want to //create it?]", "target": 0}
{"idx": 18632, "func": "keep track of what operating systems are supported here.", "target": 0}
{"idx": 18633, "func": "//{{{ getDockableTitle() method", "target": 0}
{"idx": 18634, "func": "This method takes as input a map of operands to their values, and outputs If the value map provides a value for any of the instruction's operands this method is expected to replace the original operands with the simplified values. It is not required that it do so -- code correctness is not compromised by failure to simplify", "target": 0}
{"idx": 18635, "func": "note: interfaces is assumed to already contain HibernateProxy.class", "target": 0}
{"idx": 18636, "func": "//now we instantiate", "target": 0}
{"idx": 18637, "func": "//Icky workaround for MySQL bug:", "target": 1}
{"idx": 18638, "func": "Stop only on cancel. //", "target": 0}
{"idx": 18639, "func": "expected - test success", "target": 0}
{"idx": 18640, "func": "@see org.argouml.uml.diagram.ui.FigNodeModelElement#renderingChanged()", "target": 0}
{"idx": 18641, "func": "Remove the salutation", "target": 0}
{"idx": 18642, "func": "very subtle... if we leave this for ensurePhysicalLineIsVisible(), an extra line will be added to the scroll line count.", "target": 1}
{"idx": 18643, "func": "//OK //OK //OK", "target": 0}
{"idx": 18644, "func": "//if past highest data value then exit method", "target": 0}
{"idx": 18645, "func": "return body", "target": 0}
{"idx": 18646, "func": "get message source stream", "target": 0}
{"idx": 18647, "func": "display status message", "target": 0}
{"idx": 18648, "func": "most current subclasses can process text", "target": 0}
{"idx": 18649, "func": "Find Packages and Factories", "target": 0}
{"idx": 18650, "func": "check for missing application on delete & undeploy", "target": 0}
{"idx": 18651, "func": "line 1427", "target": 0}
{"idx": 18652, "func": "should use try/finally here to pop ns", "target": 1}
{"idx": 18653, "func": "fall-back if error occurs", "target": 0}
{"idx": 18654, "func": "TODO Improve extensibility of this!", "target": 1}
{"idx": 18655, "func": "TODO: What is this trying to do? It's never going to get called - tfm really dirty hack to remove unwanted listeners", "target": 1}
{"idx": 18656, "func": "create default namespace", "target": 0}
{"idx": 18657, "func": "clear the flag", "target": 0}
{"idx": 18658, "func": "TODO: We need a factory pattern for GoXXX classes that can determine if they are required", "target": 1}
{"idx": 18659, "func": "get the values from the \"use\" list and convert to sorted set", "target": 0}
{"idx": 18660, "func": "if the \"Title of Graph\" is empty, we can assume some default", "target": 0}
{"idx": 18661, "func": "unrolled version of the else-block", "target": 0}
{"idx": 18662, "func": "search again", "target": 0}
{"idx": 18663, "func": "//{{{ TextRenderer class", "target": 0}
{"idx": 18664, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsPositionedUpdate()", "target": 0}
{"idx": 18665, "func": "CAPAs say that SSL is not supported", "target": 0}
{"idx": 18666, "func": "Only in ruby 1.9 methods", "target": 0}
{"idx": 18667, "func": "// private final List extendsQueue;", "target": 0}
{"idx": 18668, "func": "We can give up looking if we've hit both criteria", "target": 0}
{"idx": 18669, "func": "no errors so far", "target": 0}
{"idx": 18670, "func": "GOTO_W", "target": 0}
{"idx": 18671, "func": "//FunctionNamePairImpl", "target": 0}
{"idx": 18672, "func": "//{{{ HyperSearchResults constructor", "target": 0}
{"idx": 18673, "func": "//{{{ createMenuItem() method", "target": 0}
{"idx": 18674, "func": "SSS FIXME: Used anywhere? I don't see calls to this anywhere public Operand buildDAsgnAssignment(Node node, IR_Scope s) { DAsgnNode dasgnNode = (DAsgnNode) node; s.getVariableCompiler().assignLocalVariable(dasgnNode.getIndex(), dasgnNode.getDepth()); }", "target": 1}
{"idx": 18675, "func": "needed for scripts", "target": 0}
{"idx": 18676, "func": "if selected, add duration of timers to total runtime", "target": 0}
{"idx": 18677, "func": "Param", "target": 0}
{"idx": 18678, "func": "This works when running the test from within Eclipse. Apparently Eclipse runs the tests using a class-loader that has the tests Folder among the URL:s.", "target": 0}
{"idx": 18679, "func": "//before adding to collection!", "target": 0}
{"idx": 18680, "func": "clear text box", "target": 0}
{"idx": 18681, "func": "for labels", "target": 0}
{"idx": 18682, "func": "//{{{ CompletionList class", "target": 0}
{"idx": 18683, "func": "scrolling to the first row", "target": 0}
{"idx": 18684, "func": "FIXME Why is searchTF not getting focus correctly after having been setVisible(false) once", "target": 1}
{"idx": 18685, "func": "line 1187", "target": 0}
{"idx": 18686, "func": "//{{{ LogListModel class", "target": 0}
{"idx": 18687, "func": "execute the action", "target": 0}
{"idx": 18688, "func": "//{{{ getFirstFile() method", "target": 0}
{"idx": 18689, "func": "//set up logging", "target": 0}
{"idx": 18690, "func": "Menu spillover count", "target": 0}
{"idx": 18691, "func": "if extension wasn't already registered", "target": 0}
{"idx": 18692, "func": "If a different LAF to the current one has been requested then change to the requested LAF.", "target": 0}
{"idx": 18693, "func": "reassign where the next repeat can match", "target": 0}
{"idx": 18694, "func": "can't happen?", "target": 0}
{"idx": 18695, "func": "//{{{ undo() method", "target": 0}
{"idx": 18696, "func": "impl.", "target": 0}
{"idx": 18697, "func": "binary %Stream character %Stream", "target": 0}
{"idx": 18698, "func": "-------------------------------------------------------------------------- Utility methods: control flow analysis algorithm --------------------------------------------------------------------------", "target": 0}
{"idx": 18699, "func": "add a panel containing binary data editing options, if needed", "target": 0}
{"idx": 18700, "func": "Refresh the currently selected tab.", "target": 0}
{"idx": 18701, "func": "The node can be added in non GUI mode at startup", "target": 0}
{"idx": 18702, "func": "an arbitrary safe default value", "target": 0}
{"idx": 18703, "func": "Every key identified by the Properties must have been loaded.", "target": 0}
{"idx": 18704, "func": "13A0..13FF;", "target": 0}
{"idx": 18705, "func": "todo : i'd much rather have this done from #endLoadingCollection(CollectionPersister,LoadingCollectionEntry)...", "target": 1}
{"idx": 18706, "func": "too big for us", "target": 0}
{"idx": 18707, "func": "//- ApacheCatalog", "target": 0}
{"idx": 18708, "func": "Add variables for access to context and variables", "target": 0}
{"idx": 18709, "func": "TODO: Maybe someday we could inform the user that the imported key can't be created because the list of tables they've selected, doesn't include the table that this foreign key depends upon. For now, just log a warning and skip it.", "target": 1}
{"idx": 18710, "func": "if we modify the original list, it's best if the URL generator is not affected", "target": 0}
{"idx": 18711, "func": "ensure output is flushed", "target": 0}
{"idx": 18712, "func": "Mouse listener used to display popup menu.", "target": 0}
{"idx": 18713, "func": "otherwise, recurse", "target": 0}
{"idx": 18714, "func": "i18n[userscript.scriptProps=Script properties]", "target": 0}
{"idx": 18715, "func": "includes last '.'", "target": 0}
{"idx": 18716, "func": "i18n[MysqlPlugin.showViewSource=Show view source]", "target": 0}
{"idx": 18717, "func": "This method has insufficient information to call buildExtensionPoint. Thus we'll need to create one, and pray that whomever called us knows what kind of mess they got.", "target": 1}
{"idx": 18718, "func": "@see java.beans.VetoableChangeListener#vetoableChange(java.beans. PropertyChangeEvent)", "target": 0}
{"idx": 18719, "func": "ensure that we are logged in already", "target": 0}
{"idx": 18720, "func": "set up info collection...", "target": 0}
{"idx": 18721, "func": "get the node", "target": 0}
{"idx": 18722, "func": "if there are multiple variables in the same field declaration, create declaration with only 1 variable", "target": 0}
{"idx": 18723, "func": "//i18n[SyntaxPlugin.comment=comment]", "target": 0}
{"idx": 18724, "func": "not saving DFS instance, as it will only be used once (at most) per call", "target": 0}
{"idx": 18725, "func": "i is used below", "target": 0}
{"idx": 18726, "func": "line", "target": 0}
{"idx": 18727, "func": "make the link area a square if the pie chart is to be circular...", "target": 0}
{"idx": 18728, "func": "save the agent for next time round", "target": 0}
{"idx": 18729, "func": "files to move", "target": 0}
{"idx": 18730, "func": "Record the position of the value in the owner list. //", "target": 0}
{"idx": 18731, "func": "See notes in getThis()", "target": 0}
{"idx": 18732, "func": "Only add MOF elements, not primitive datatypes", "target": 0}
{"idx": 18733, "func": "public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }", "target": 0}
{"idx": 18734, "func": "//{{{ getViewConfig() method", "target": 0}
{"idx": 18735, "func": "this listener priority thing is a bad hack...", "target": 1}
{"idx": 18736, "func": "subcategories", "target": 0}
{"idx": 18737, "func": "Create an image which will do deferred rendering of the GEF diagram on demand as data is pulled from it", "target": 0}
{"idx": 18738, "func": "Try to make the full imported name", "target": 0}
{"idx": 18739, "func": "Now decide if the row is at the top of the screen or at the bottom. We do this to make the previous row (or the next row) visible as appropriate. If were at the absolute top or bottom, just return the first or last row respectively.", "target": 0}
{"idx": 18740, "func": "Should never get here. If we do, return the inner point.", "target": 0}
{"idx": 18741, "func": "If the new encloser is null, and the old one is a Component, then the \"enclosed\" Fig has been moved on the diagram. This causes the model to be adapted as follows: remove the elementResidence between the \"enclosed\" and the oldEncloser. @see org.argouml.ui.ArgoDiagram#changeFigEncloser(org.tigris.gef.presentation.FigNode, org.tigris.gef.presentation.FigNode, org.tigris.gef.presentation.FigNode)", "target": 0}
{"idx": 18742, "func": "Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.", "target": 0}
{"idx": 18743, "func": "//{{{ doSingleClick() method", "target": 0}
{"idx": 18744, "func": "//remove the initial separator; the root has it.", "target": 0}
{"idx": 18745, "func": "get location of executable", "target": 0}
{"idx": 18746, "func": "table doesn't exist in source db", "target": 0}
{"idx": 18747, "func": "---- titleLabel ----", "target": 0}
{"idx": 18748, "func": "Return all edges going to given port. @see org.tigris.gef.graph.GraphModel#getInEdges(java.lang.Object)", "target": 0}
{"idx": 18749, "func": "isValidName(String):boolean", "target": 0}
{"idx": 18750, "func": "set UI manager properties here that affect Quaqua", "target": 0}
{"idx": 18751, "func": "@see org.argouml.uml.diagram.ui.FigSingleLineText#propertyChange(java.beans.PropertyChangeEvent)", "target": 0}
{"idx": 18752, "func": "first, iterate over all required args", "target": 0}
{"idx": 18753, "func": "line 563", "target": 0}
{"idx": 18754, "func": "2. MRI allows underscores anywhere", "target": 0}
{"idx": 18755, "func": "//i18n[ExcelSettingsPanel.xlsSettings=Excel import settings]", "target": 0}
{"idx": 18756, "func": "@see org.argouml.uml.diagram.state.ui.FigStateVertex#makeSelection()", "target": 0}
{"idx": 18757, "func": "//after setting values to object, entityMode", "target": 0}
{"idx": 18758, "func": "b_ryear.setEnabled(y < y1);", "target": 0}
{"idx": 18759, "func": "set up some objects...", "target": 0}
{"idx": 18760, "func": "Accumulate waiting time for later", "target": 0}
{"idx": 18761, "func": "TODO find a better localization key", "target": 1}
{"idx": 18762, "func": "Empirical Observations: null -> Some arity argsNode == this.argsNode then check for arity changes newline(splatnode) -> argspushnode", "target": 0}
{"idx": 18763, "func": "null == schemaLoadInfos[0].schemaName is the case when there are no _schemas specified schemaLoadInfos.length will then be 1.", "target": 0}
{"idx": 18764, "func": "root.addSubShape(shadow);", "target": 0}
{"idx": 18765, "func": "//SwtGraphics2D sg2 = new SwtGraphics2D(e.gc);", "target": 0}
{"idx": 18766, "func": "@see org.argouml.uml.ui.UMLUserInterfaceContainer#getProfile()", "target": 0}
{"idx": 18767, "func": "//{{{ insertSelected() method", "target": 0}
{"idx": 18768, "func": "Clear all data before display a new", "target": 0}
{"idx": 18769, "func": "note: at least my local MySQL 5.1 install shows this not working...", "target": 1}
{"idx": 18770, "func": "isNative", "target": 0}
{"idx": 18771, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getPrimaryKey(java.lang.String, java.lang.String, java.lang.String)", "target": 0}
{"idx": 18772, "func": "//for each setup thread group", "target": 0}
{"idx": 18773, "func": "TODO: We can't have a global \"current\" language NotationProviderFactory2.setCurrentLanguage(newLanguage);", "target": 1}
{"idx": 18774, "func": "Locate the statistical sample colector", "target": 0}
{"idx": 18775, "func": "self method name", "target": 0}
{"idx": 18776, "func": "//{{{ init() method", "target": 0}
{"idx": 18777, "func": "use no encoding", "target": 0}
{"idx": 18778, "func": "Turn off includeSubclasses on all FromElements.", "target": 0}
{"idx": 18779, "func": "remove old content pane", "target": 0}
{"idx": 18780, "func": "if it's an inner class and it's not public, we can't access it; skip population of declared elements", "target": 0}
{"idx": 18781, "func": "look for mangling markers for compiled Ruby in method name", "target": 0}
{"idx": 18782, "func": "try a null collection", "target": 0}
{"idx": 18783, "func": "by not reading the response for real, it improves the performance on slow clients", "target": 0}
{"idx": 18784, "func": "a many-to-many; decrement currentDepth here to allow join across the association table without exceeding MAX_FETCH_DEPTH (i.e. the \"currentDepth - 1\" bit)", "target": 0}
{"idx": 18785, "func": "CheckStyle:VisibilityModifier OFF - bc CheckStyle:MemberNameCheck OFF - bc", "target": 0}
{"idx": 18786, "func": "call AbstractFilter to do the tricky part", "target": 0}
{"idx": 18787, "func": "promise to implement three", "target": 0}
{"idx": 18788, "func": "//TBD return (user selected subset?) of referenced packages that contain super classes of classes in this package.", "target": 1}
{"idx": 18789, "func": "class or module", "target": 0}
{"idx": 18790, "func": "see if this is a 4.1-style plugin", "target": 0}
{"idx": 18791, "func": "// extendsQueue = new ArrayList();", "target": 0}
{"idx": 18792, "func": "else we set the body to the i18n String", "target": 0}
{"idx": 18793, "func": "then handle any user-defined entity modes...", "target": 0}
{"idx": 18794, "func": "Just remember it; it's encoded later during execution, which is more efficient. //", "target": 0}
{"idx": 18795, "func": "again, shouldn't happen. TODO: might want to throw exception instead.", "target": 1}
{"idx": 18796, "func": "Control flow graph for this scope", "target": 0}
{"idx": 18797, "func": "strip off any leading 'and' token", "target": 0}
{"idx": 18798, "func": "TODO make these separate tests?", "target": 1}
{"idx": 18799, "func": "The canonical file name is also absolute. No need for getAbsolutePath() here...", "target": 0}
{"idx": 18800, "func": "//XMLTypeFactoryImpl", "target": 0}
{"idx": 18801, "func": "@see TestJorphanUtils for unit tests", "target": 0}
{"idx": 18802, "func": "domainGridlinesVisible", "target": 0}
{"idx": 18803, "func": "Simpler implementation that sets the range of any node to be the node and all preceding comments public SourceRange computeSourceRange(ASTNode node) { SourceRange range = new SourceRange(node.getStartPosition(), node.getLength()); range = extendRangeBackward(findLeadingComment(node, getPreviousNode(node), false), range); return range; }", "target": 0}
{"idx": 18804, "func": "to avoid slowdown with large files; only scan 10000 lines either way", "target": 0}
{"idx": 18805, "func": "true if seen xmlns=\"\" declaration", "target": 0}
{"idx": 18806, "func": "//No PAD e.g 3cQl", "target": 0}
{"idx": 18807, "func": "Initialize all the LAF controllers.", "target": 0}
{"idx": 18808, "func": "set headercache dirty flag", "target": 0}
{"idx": 18809, "func": "unsnooze the critic to verify the critic is not relevant", "target": 0}
{"idx": 18810, "func": "If it was a HTTP GET request, then all parameters in the URL has been handled by the sampler.setPath above, so we just need to do parse the rest of the request if it is not a GET request", "target": 0}
{"idx": 18811, "func": "//{{{ handleQuit() method", "target": 0}
{"idx": 18812, "func": "i18n[UpdatePreferencesPanel.localPathLabel=Local Path:]", "target": 0}
{"idx": 18813, "func": "//Cope with special cases of AND, NOT, ()", "target": 0}
{"idx": 18814, "func": "Save the last valid content length one", "target": 0}
{"idx": 18815, "func": "HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());", "target": 0}
{"idx": 18816, "func": "this plugin doesn't define a category to which it belongs", "target": 0}
{"idx": 18817, "func": "parse hy.test.vmargs if was given", "target": 0}
{"idx": 18818, "func": "Set the location of the implicit target associated with the project tag", "target": 0}
{"idx": 18819, "func": "only 'name' and 'value' exist.", "target": 0}
{"idx": 18820, "func": "prepare for the auto select mechanism", "target": 0}
{"idx": 18821, "func": "//ShutdownManager.getInstance().register(this);", "target": 0}
{"idx": 18822, "func": "default make height of plotArea", "target": 0}
{"idx": 18823, "func": "in middle of interval", "target": 0}
{"idx": 18824, "func": "make sure we put the namespace back when we leave.", "target": 0}
{"idx": 18825, "func": "//}}} //{{{ Symbol...", "target": 0}
{"idx": 18826, "func": "Get the file name of the current project", "target": 0}
{"idx": 18827, "func": "Put all available \"Look and Feel\" objects into collections keyed by LAF name and by the class name.", "target": 0}
{"idx": 18828, "func": "call sendBreak after fixed number of lines of stdout are read", "target": 0}
{"idx": 18829, "func": "changes the opcode of the jump instruction, in order to be able to find it later (see resizeInstructions in CodeWriter). These temporary opcodes are similar to jump instruction opcodes, except that the 2 bytes offset is unsigned (and can therefore represent values from 0 to 65535, which is sufficient since the size of a method is limited to 65535 bytes).", "target": 0}
{"idx": 18830, "func": "//TODO: How about FigAssociationClass?", "target": 1}
{"idx": 18831, "func": "Stray sep - or we failed to find pattern", "target": 0}
{"idx": 18832, "func": "DrawAShape outlineShape = new DrawAShape(\"bgFill\", new Rectangle(0, 0, 1, 1), AbsRect.FILL, outlinePaint, new BasicStroke(1f), Boolean.FALSE);", "target": 0}
{"idx": 18833, "func": "Create boundary to separate the mime-parts", "target": 0}
{"idx": 18834, "func": "if it is a short option then parse it else ...", "target": 0}
{"idx": 18835, "func": "(non-Javadoc) @see org.columba.mail.imap.IImapServer#fetchFlagsListStartFrom(int, org.columba.mail.folder.imap.IMAPFolder)", "target": 0}
{"idx": 18836, "func": "And delegate the call. //", "target": 0}
{"idx": 18837, "func": "(non-Javadoc) @see java.io.InputStream#read()", "target": 0}
{"idx": 18838, "func": "I don't know if we should be run this deferred because we might have to give the editor a chance to process the viewer update events and hence to update the views first. //", "target": 1}
{"idx": 18839, "func": "i18n[DataSetUpdateableTableModelImpl.error.unknownerrorupdate=Unknown problem during update.\\nNo count of inserted rows was returned.\\nDatabase may be corrupted!]", "target": 0}
{"idx": 18840, "func": "This should be a default tokenizer which uses \";\" as statement sep", "target": 0}
{"idx": 18841, "func": "//Class/basicGetGenFeature.annotations.insert.javajetinc", "target": 0}
{"idx": 18842, "func": "return super.getListCellRendererComponent(arg0, arg1, arg2, arg3, arg4);", "target": 0}
{"idx": 18843, "func": "set start and end time", "target": 0}
{"idx": 18844, "func": "//{{{ getText() method", "target": 0}
{"idx": 18845, "func": "======== personalInfoPanel ========", "target": 0}
{"idx": 18846, "func": "File name sequence number //@GuardedBy(\"LOCK\")", "target": 0}
{"idx": 18847, "func": "in milli-seconds TODO: properties?", "target": 1}
{"idx": 18848, "func": "if the pgp mode is active we should get the decrypted part", "target": 0}
{"idx": 18849, "func": "Flush any remaining data.", "target": 0}
{"idx": 18850, "func": "TODO: Bob says the reflective code following should be replaced with something more specific like this commented out code. This would mean we need sType changed to a meta type Object rather than a String.", "target": 1}
{"idx": 18851, "func": "There seems to be cases where we don't erase the profile. Let's make sure it is deleted.", "target": 0}
{"idx": 18852, "func": "Not a TestElement", "target": 0}
{"idx": 18853, "func": "i18n.LBL_TITLE_USED_TABLES);", "target": 0}
{"idx": 18854, "func": "Only allow legal Java assignment unless we're a CAST operation", "target": 0}
{"idx": 18855, "func": "set up for string types", "target": 0}
{"idx": 18856, "func": "Helper method to get 1 ms resolution timing.", "target": 0}
{"idx": 18857, "func": "//{{{ addPluginSet() method", "target": 0}
{"idx": 18858, "func": "generate the files", "target": 0}
{"idx": 18859, "func": "TODO : would be great to have a Mapping#hasNonIdentifierPropertyNamedId method I don't believe that Mapping#getReferencedPropertyType accounts for the identifier property; so if it returns for a property named 'id', then we should have a non-id field named id", "target": 1}
{"idx": 18860, "func": "The test object, i.e. the instance of the class containing the test method This is the same as testCase for JUnit3 tests but different for JUnit4 tests which use a wrapper", "target": 0}
{"idx": 18861, "func": "== ServerName from mail sampler", "target": 0}
{"idx": 18862, "func": "SSL connection", "target": 0}
{"idx": 18863, "func": "Check the Noselect flag", "target": 0}
{"idx": 18864, "func": "create the default thread group", "target": 0}
{"idx": 18865, "func": "For a Collaboration: <pre> [1 ] The operation allContents results in the set of all ModelElements contained in the Collaboration together with those contained in the parents except those that have been specialized. allContents : Set(ModelElement); allContents = self.contents->union ( self.parent.allContents->reject ( e | self.contents.name->include (e.name) )) parent here is the GeneralizableElement definition </pre>", "target": 0}
{"idx": 18866, "func": "We use multi-line mask so can prefix the line with ^ $NON-NLS-1$ $NON-NLS-2$", "target": 0}
{"idx": 18867, "func": "filesets has been protected so we need to keep that even after switching to resource collections. In fact, they will still get a different treatment form the other resource collections even in execute since we have some subtle special features like switching type to \"dir\" when we encounter a DirSet that would be more difficult to achieve otherwise.", "target": 0}
{"idx": 18868, "func": "default value;", "target": 0}
{"idx": 18869, "func": "Broken symlinks considered by exists() as non-existing, so we need to check for symlinks explicitly.", "target": 0}
{"idx": 18870, "func": "these arrays are parallel.", "target": 0}
{"idx": 18871, "func": "nothing is drawn if the row index is not included in the list with the indices of the visible rows...", "target": 0}
{"idx": 18872, "func": "IllegalAccess, IllegalArgument, ClassCast", "target": 0}
{"idx": 18873, "func": "Output the default excludes", "target": 0}
{"idx": 18874, "func": "use the low-level property setting code so that if we have a buffer-local property with the same value as a default, later changes in the default don't affect the buffer-local property", "target": 0}
{"idx": 18875, "func": "// JASON: Do we need these?", "target": 1}
{"idx": 18876, "func": "If we timed out, give it one more try on the other side", "target": 0}
{"idx": 18877, "func": "load the parser class", "target": 0}
{"idx": 18878, "func": "/////////////////////////////////////////////////////////////////////////Methods that implement the MutableGraphModel interface ///////////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 18879, "func": "Axion doesn't allow column alterations of the nullable attribute. Fortunately, it doesn't require this to add a primary key.", "target": 0}
{"idx": 18880, "func": "//{{{ getPlugin() method", "target": 0}
{"idx": 18881, "func": "line 497", "target": 0}
{"idx": 18882, "func": "//use of a stringbuffer to workaround a JDK bug", "target": 1}
{"idx": 18883, "func": "JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace", "target": 0}
{"idx": 18884, "func": "to save last select tab (raw/parsed)", "target": 0}
{"idx": 18885, "func": "handler.unparsedEntityDecl(name, publicId, systemId, notationName);", "target": 0}
{"idx": 18886, "func": "Fill 2 of value (byte) -19", "target": 0}
{"idx": 18887, "func": "below is for Cache' that don't have str in 2007.1 there is str and we register str directly", "target": 0}
{"idx": 18888, "func": "really there are two situations where it should be ok to allow the insertion into properties defined on a superclass: 1) union-subclass with an abstract root entity 2) discrim-subclass #1 is handled already because of the fact that UnionSubclassPersister alreay always returns 0 for this call... we may want to disallow it for discrim-subclass just for consistency-sake (currently does not work anyway)...", "target": 1}
{"idx": 18889, "func": "Enter here go rules only relevant for UML 2 empty for now", "target": 0}
{"idx": 18890, "func": "Gets fired if configuration has changed. @see org.columba.mail.gui.config.general.MailOptionsDialog @see java.util.Observer#update(java.util.Observable, java.lang.Object)", "target": 0}
{"idx": 18891, "func": "Ignore any exceptions and assume the class isn't available.", "target": 0}
{"idx": 18892, "func": "Default", "target": 0}
{"idx": 18893, "func": "---- telephoneTextField1 ----", "target": 0}
{"idx": 18894, "func": "//{{{ bufferOpened() method", "target": 0}
{"idx": 18895, "func": "register for changes to the editor controller.addContainerListenerForEditor(this);", "target": 0}
{"idx": 18896, "func": "The report", "target": 0}
{"idx": 18897, "func": "i18n[mysql.variables=MySQL Variables]", "target": 0}
{"idx": 18898, "func": "these are blue in Metal Default Theme", "target": 0}
{"idx": 18899, "func": "@see org.argouml.uml.ui.AbstractActionAddModelElement#getSelected()", "target": 0}
{"idx": 18900, "func": "// handle commandline parameters", "target": 0}
{"idx": 18901, "func": "create In-Reply-To:, References: headerfields", "target": 0}
{"idx": 18902, "func": "script area", "target": 0}
{"idx": 18903, "func": "then any new buttons", "target": 0}
{"idx": 18904, "func": "This used to be request.wait(timeout_ms), where 0 means forever However 0 means return immediately for the latch", "target": 0}
{"idx": 18905, "func": "resize column width", "target": 0}
{"idx": 18906, "func": "//{{{ getDefaultRootElement() method", "target": 0}
{"idx": 18907, "func": "Set up some objects for the script to play with //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ Previously mis-spelt as theadName //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$", "target": 0}
{"idx": 18908, "func": "forever", "target": 0}
{"idx": 18909, "func": "center position and 50% of screen size", "target": 0}
{"idx": 18910, "func": "the other object has an empty value, so remove this value from the merged object", "target": 0}
{"idx": 18911, "func": "TODO: TagDefinitions are gone from UML 2 they are now Properties of Stereotypes;", "target": 1}
{"idx": 18912, "func": "replace {....} with corresponding column aliases", "target": 0}
{"idx": 18913, "func": "Append the text of the current node.", "target": 0}
{"idx": 18914, "func": "\"u\"", "target": 0}
{"idx": 18915, "func": "end class ActionOpenGoals", "target": 0}
{"idx": 18916, "func": "buttons", "target": 0}
{"idx": 18917, "func": "invoke", "target": 0}
{"idx": 18918, "func": "//{{{ xyToOffset() method", "target": 0}
{"idx": 18919, "func": "@see org.argouml.model.ModelImplementation#getModelEventPump()", "target": 0}
{"idx": 18920, "func": "Execute the sql synchronously", "target": 0}
{"idx": 18921, "func": "the current iterator", "target": 0}
{"idx": 18922, "func": "clear existing text", "target": 0}
{"idx": 18923, "func": "See wrapListener for reason:", "target": 0}
{"idx": 18924, "func": "set the var in the enclosing (parent) namespace", "target": 0}
{"idx": 18925, "func": "i18n[HibernateConfigController.noCfgNameMsg=Not a valid configuration name\\nChanges cannot be applied.]", "target": 0}
{"idx": 18926, "func": "-------------------- --- Constructors --- --------------------", "target": 0}
{"idx": 18927, "func": "state[i] &= 0xffffffffL;", "target": 0}
{"idx": 18928, "func": "//{{{ PluginSet class", "target": 0}
{"idx": 18929, "func": "//{{{ KeyBinding class", "target": 0}
{"idx": 18930, "func": "tick label insets...", "target": 0}
{"idx": 18931, "func": "HELP MENU //$NON-NLS-1$", "target": 0}
{"idx": 18932, "func": "TBLRC 00010 - right item only", "target": 0}
{"idx": 18933, "func": "unless we are matching from the start of the buffer, ^ should not match on the beginning of the substring", "target": 0}
{"idx": 18934, "func": "no indexes, i guess.", "target": 0}
{"idx": 18935, "func": "Buffer for collecting data from the \"characters\" SAX event.", "target": 0}
{"idx": 18936, "func": "enable tracking for commented out nodes", "target": 0}
{"idx": 18937, "func": "//tableName, columns, pkColumns, prefs, qualifier", "target": 0}
{"idx": 18938, "func": "Methods used in creating the GUI", "target": 0}
{"idx": 18939, "func": "@see javax.management.NotificationBroadcaster#removeNotificationListener(javax.management.NotificationListener)", "target": 0}
{"idx": 18940, "func": "Create an empty but initialized instance of a UML Attribute. @return an initialized UML Attribute instance. TODO: This needs an extra parameter to specify the model/extent where the new element should be created.", "target": 1}
{"idx": 18941, "func": "//{{{ See if the rule's start or end sequence matches here", "target": 0}
{"idx": 18942, "func": "Calling connect() will add the edge to the GraphModel and any LayerPersectives on that GraphModel will get a edgeAdded event and will add an appropriate FigEdge (determined by the GraphEdgeRenderer).", "target": 0}
{"idx": 18943, "func": "If divisor is zero, don't simplify!", "target": 0}
{"idx": 18944, "func": "mixed digit/alpha keyword, and no regexp... don't highlight as DIGIT", "target": 0}
{"idx": 18945, "func": "Found '-' Is this '-' is a from-to token?? Skips '-'", "target": 0}
{"idx": 18946, "func": "//{{{ updateTitle() method", "target": 0}
{"idx": 18947, "func": "Try to ensure that more javascript code is processed OK ...", "target": 0}
{"idx": 18948, "func": "resolve relative to project basedir", "target": 0}
{"idx": 18949, "func": "0900..097F;", "target": 0}
{"idx": 18950, "func": "TODO: We don't have any settings that can change per-fig currently so we can just use the default settings; settings = new DiagramSettings(renderSettings);", "target": 0}
{"idx": 18951, "func": "bouncy castle doesn't support algorithm", "target": 0}
{"idx": 18952, "func": "Resource resource = (Resource)object; childrenFeatures.add(ResourcePackage.eINSTANCE.getResource_Contents());", "target": 0}
{"idx": 18953, "func": "No explicit select expression; render the id and properties projection lists for every persister in the from clause into a single 'token node'. //TODO: the only reason we need this stuff now is collection filters, we should get rid of derived select clause completely!", "target": 1}
{"idx": 18954, "func": "for any content prefix to URI mapping could be in namespace context", "target": 0}
{"idx": 18955, "func": "//{{{ complete() method", "target": 0}
{"idx": 18956, "func": "allow the CollectionSnapshot to be serialized", "target": 0}
{"idx": 18957, "func": "s/b true, since intLength > 0", "target": 0}
{"idx": 18958, "func": "i18n[oracle.secons3=(seconds)]", "target": 0}
{"idx": 18959, "func": "======== scrollPane2 ========", "target": 0}
{"idx": 18960, "func": "i18n[rowDataInputFrame.propName=Input New Row Data]", "target": 0}
{"idx": 18961, "func": "arities", "target": 0}
{"idx": 18962, "func": "improve xml display", "target": 0}
{"idx": 18963, "func": "FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518", "target": 0}
{"idx": 18964, "func": "a DELEGATE attribute on a SEQ changes the ruleset from the end of the SEQ onwards", "target": 0}
{"idx": 18965, "func": "The children are added to after this cloning", "target": 0}
{"idx": 18966, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData#getImportedKeysInfo(net.sourceforge.squirrel_sql.fw.sql.ITableInfo)", "target": 0}
{"idx": 18967, "func": "//apply initial version information", "target": 0}
{"idx": 18968, "func": "XmlElement.printNode(getRoot(),\"\");", "target": 0}
{"idx": 18969, "func": "end interface Clarifier", "target": 0}
{"idx": 18970, "func": "try null calendar", "target": 0}
{"idx": 18971, "func": "keep track of the glasspane as an instance variable", "target": 0}
{"idx": 18972, "func": "Since we depend upon the Informix-specific IfmxConnection class, we need to keep a reference to the ISession we are associated with. However, this session could be closed, at which time we want to give up our reference so that it can be garbage collected.", "target": 0}
{"idx": 18973, "func": "line 1196", "target": 0}
{"idx": 18974, "func": "will be host:port for CONNECT", "target": 0}
{"idx": 18975, "func": "no warning, this is not changing anything", "target": 0}
{"idx": 18976, "func": "//TODO: Somehow add the newly created foreign keys to the internal collection", "target": 1}
{"idx": 18977, "func": "This ensures that the CreateCopyCommand will be executed by StrictCompoundCommand.prepare(). //", "target": 0}
{"idx": 18978, "func": "assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());", "target": 0}
{"idx": 18979, "func": "Show users in the object tee.", "target": 0}
{"idx": 18980, "func": "Test leading split characters", "target": 0}
{"idx": 18981, "func": "@see org.tigris.gef.presentation.FigEdge#setDestFigNode(org.tigris.gef.presentation.FigNode)", "target": 0}
{"idx": 18982, "func": "whether or not this ProcessDestroyer is currently running as shutdown hook", "target": 0}
{"idx": 18983, "func": "array of reference type", "target": 0}
{"idx": 18984, "func": "@see org.eclipse.emf.ecore.EObject#eIsProxy()", "target": 0}
{"idx": 18985, "func": "//get any included source directories", "target": 0}
{"idx": 18986, "func": "This seems to be necessary to get background colours correct. Without it labels added to the content pane have a dark background while those added to a JPanel in the content pane have a light background under the java look and feel. Similar effects occur for other look and feels.", "target": 0}
{"idx": 18987, "func": "NotationProviderFactory2.getInstance().addNotationProvider(1234, name, MyNP.class); NotationProvider notationProvider = NotationProviderFactory2.getInstance().getNotationProvider( 1234, new Object()); assertTrue(\"Test notation provider for 1234 not found\", notationProvider != null);", "target": 0}
{"idx": 18988, "func": "//{{{ moveDown() method", "target": 0}
{"idx": 18989, "func": "baseFillPaint", "target": 0}
{"idx": 18990, "func": "We also need to set it on any GenModels holding any used or static packages that may be refered to. //", "target": 0}
{"idx": 18991, "func": "//////////////////////////////////////////////////////////////abstract methods", "target": 0}
{"idx": 18992, "func": "ensure <pathconvert> follows the immutability rule", "target": 0}
{"idx": 18993, "func": "//return memberPersister.getPropertyType(propertyName);", "target": 0}
{"idx": 18994, "func": "Must therefore set the enabled icon so there is at least some icon", "target": 0}
{"idx": 18995, "func": "remove leading or trailing whitespaces", "target": 0}
{"idx": 18996, "func": "find next starttoken", "target": 0}
{"idx": 18997, "func": "If this is not a closure, the break is equivalent to jumping to the loop end label", "target": 0}
{"idx": 18998, "func": "if concurrent download emb. resources, add to a list for async gets later", "target": 0}
{"idx": 18999, "func": "@see org.argouml.uml.diagram.ui.FigNodeModelElement#clone()", "target": 0}
{"idx": 19000, "func": "If the plugin.properties isn't within the root of the archive, create a new URI for the folder location of the archive, so we can look in the folder that contains it. //", "target": 0}
{"idx": 19001, "func": "how to handle empty target lists? probably the TabProps should only show an empty pane in that case", "target": 0}
{"idx": 19002, "func": "TODO: Why is this clearing the name?!?! - tfm", "target": 1}
{"idx": 19003, "func": "split is performed", "target": 0}
{"idx": 19004, "func": "the bounds should be calculated using just the items within the current range of the x-axis...if there is one", "target": 0}
{"idx": 19005, "func": "if checkMethod on the token is true we tokenzie it using space and escape the while loop. Only the first matching token will be used", "target": 0}
{"idx": 19006, "func": "//private Path extdirs;", "target": 0}
{"idx": 19007, "func": "remove listener from old account selection", "target": 0}
{"idx": 19008, "func": "TODO: Add an \"open most recent project\" command so that command state can be decoupled from user settings?", "target": 1}
{"idx": 19009, "func": "//{{{ setLogWriter() method", "target": 0}
{"idx": 19010, "func": "call isTrue on the result", "target": 0}
{"idx": 19011, "func": "TODO: Review all callers to make sure that they localize the title", "target": 1}
{"idx": 19012, "func": "If we have a file, but no data, then read the file", "target": 0}
{"idx": 19013, "func": "String domain = \"localhost\";", "target": 0}
{"idx": 19014, "func": "Default implementation is to do nothing", "target": 0}
{"idx": 19015, "func": "//{{{ Browser types", "target": 0}
{"idx": 19016, "func": "The string must contain inappropriate whitespace, so find the index for the first difference. //", "target": 0}
{"idx": 19017, "func": "work out the maximum height or width of the non-shared axes...", "target": 0}
{"idx": 19018, "func": "//{{{ PROPERTY", "target": 0}
{"idx": 19019, "func": "This shouldn't happen, because of our line segment size check", "target": 0}
{"idx": 19020, "func": "remove the first prefix because it may be an archive (like magicdraw)", "target": 0}
{"idx": 19021, "func": "Ignore exceptions.", "target": 0}
{"idx": 19022, "func": "We'd like the owner selected after this remove completes. //", "target": 0}
{"idx": 19023, "func": "Make a limited attempt to extract a sanitized email address Prefer text in <brackets>, ignore anything in (parentheses)", "target": 0}
{"idx": 19024, "func": "NAME", "target": 0}
{"idx": 19025, "func": "handle the special case where the dataset has y-intervals that we want to measure", "target": 0}
{"idx": 19026, "func": "create filter configuration", "target": 0}
{"idx": 19027, "func": "TODO: Is this returning extended elements or base classes?", "target": 1}
{"idx": 19028, "func": "If a recursive call from setVisible(), just return", "target": 0}
{"idx": 19029, "func": "if we get here, in and out have not been specified, we are in batch processing mode.", "target": 0}
{"idx": 19030, "func": "update fold visibility map.", "target": 0}
{"idx": 19031, "func": "Since the cycle is detected by checking if we hit \"this\" again, after many iterations we'll call this method recursively in case we started with something that wasn't part of a cycle but later traversed up to a cycle. //", "target": 0}
{"idx": 19032, "func": "end class CrUselessInterface", "target": 0}
{"idx": 19033, "func": "i18n[mysql.displayProcesses=(MySQL) Display database processes]", "target": 0}
{"idx": 19034, "func": "contains \",\" comma character", "target": 0}
{"idx": 19035, "func": "//TODO: copy/paste from insertRows()", "target": 1}
{"idx": 19036, "func": "Check method", "target": 0}
{"idx": 19037, "func": "Listen on main socket", "target": 0}
{"idx": 19038, "func": "currBlockNo++;", "target": 0}
{"idx": 19039, "func": "check that the model was initialized with one goal", "target": 0}
{"idx": 19040, "func": "private static final int FG_YELLOW = 33;", "target": 0}
{"idx": 19041, "func": "Now we want to find all the other objects with this same parent. So we can collection siblings together and give the parent control over their removal. //", "target": 0}
{"idx": 19042, "func": "Fill 33 of value (byte) -19 Fill 7 of value (byte) 33 Fill 20 of value (byte) -87", "target": 0}
{"idx": 19043, "func": "default to the global setting and then see if this class belongs to a package which has been designated to use a specific loader first (this one or the parent one)", "target": 0}
{"idx": 19044, "func": "(non-Javadoc) @see org.columba.mail.folder.event.IFolderListener#folderRemoved(org.columba.mail.folder.event.IFolderEvent)", "target": 0}
{"idx": 19045, "func": "create mandatory IMAP Inbox folder", "target": 0}
{"idx": 19046, "func": "does nothing", "target": 0}
{"idx": 19047, "func": "delete the (now) broken link:", "target": 0}
{"idx": 19048, "func": "//System.err.println(\" stringToLong=\" + val);", "target": 0}
{"idx": 19049, "func": "//for each tick with a label to be displayed", "target": 0}
{"idx": 19050, "func": "Add the sub result to the transaction result", "target": 0}
{"idx": 19051, "func": "end class CrCircularInheritance", "target": 0}
{"idx": 19052, "func": "Make the URL absolute.", "target": 0}
{"idx": 19053, "func": "Sample the children of the transaction", "target": 0}
{"idx": 19054, "func": "linkMargin", "target": 0}
{"idx": 19055, "func": "//i18n[hibernate.HibernateTabPanel.connect=Connect/disconnect configuration selected configuration]", "target": 0}
{"idx": 19056, "func": "Add the key to the enviromnent copy", "target": 0}
{"idx": 19057, "func": "//{{{ SearchDialog constructor", "target": 0}
{"idx": 19058, "func": "i18n[SQLResultExecuterPanel.rowsDeleted={0} Row(s) Deleted]", "target": 0}
{"idx": 19059, "func": "fixed dimension...", "target": 0}
{"idx": 19060, "func": "i18n[firebird.details=Details]", "target": 0}
{"idx": 19061, "func": "line 1436", "target": 0}
{"idx": 19062, "func": "Look for the dashed edge", "target": 0}
{"idx": 19063, "func": "Complete the request by filling the read buffer first //", "target": 0}
{"idx": 19064, "func": "private ColumnsTab _columnTab;", "target": 0}
{"idx": 19065, "func": "FIXME: add setSeriesOutlinePaint(int, Paint, boolean)?", "target": 0}
{"idx": 19066, "func": "TBLRC 00100 - left item only", "target": 0}
{"idx": 19067, "func": "i18n[DB2Plugin.showViewSource=Show view source]", "target": 0}
{"idx": 19068, "func": "If value and default are both specified and the property previously existed in the property file, the property is set to value.", "target": 0}
{"idx": 19069, "func": "split the targets in top-level and sub-targets depending on the presence of a description", "target": 0}
{"idx": 19070, "func": "Show buffer switcher", "target": 0}
{"idx": 19071, "func": "//{{{ MenuItemCompare class", "target": 0}
{"idx": 19072, "func": "return (possibly) updated value", "target": 0}
{"idx": 19073, "func": "A set command without a feature sets the value of this wrapper, hence replacing it with a new wrapper. So, we need a special command wrapper that selects this new wrapper as the affected object. //", "target": 0}
{"idx": 19074, "func": "used to store offsetToXY() results", "target": 0}
{"idx": 19075, "func": "TODO: is this the right range here?", "target": 1}
{"idx": 19076, "func": "call the underlying model to get the whole data, if possible", "target": 0}
{"idx": 19077, "func": "parse with a simple finite state machine", "target": 0}
{"idx": 19078, "func": "TODO: URLEncode?", "target": 1}
{"idx": 19079, "func": "templateValue", "target": 0}
{"idx": 19080, "func": "set source folder UID", "target": 0}
{"idx": 19081, "func": "i18n[sqlscript.scriptOnly=Generate script only]", "target": 0}
{"idx": 19082, "func": "e.g. 0 i.e. 1", "target": 0}
{"idx": 19083, "func": "//{{{ WorkThreadPool constructor", "target": 0}
{"idx": 19084, "func": "the table containing the user's input", "target": 0}
{"idx": 19085, "func": "If no Fig was created by the code above then we must go look for the old style constructor that should have fallen into disuse by now. Fig(Object, Rectangle, DiagramSettings) All of these constructors should have been deprecated at least and replaced with the new signature. This is here for paranoia only until all Figs have been reviewed.", "target": 1}
{"idx": 19086, "func": "//used also for generation of FK names!", "target": 0}
{"idx": 19087, "func": "//Use the VM launcher instead of shell launcher on VMS //for java", "target": 0}
{"idx": 19088, "func": "promise to implement one to N with block", "target": 0}
{"idx": 19089, "func": "List subList(EStructuralFeature feature, int from, int to); EList list(EStructuralFeature feature);", "target": 0}
{"idx": 19090, "func": "//{{{ getFontProperty() method", "target": 0}
{"idx": 19091, "func": "Can this be factored out...? Should be be adding the L...; here instead?", "target": 1}
{"idx": 19092, "func": "Init Mime-Header with Default-Values (text/plain)", "target": 0}
{"idx": 19093, "func": "//{{{ indexStream() method", "target": 0}
{"idx": 19094, "func": "TODO: catch exception if constant is already set by other thread", "target": 1}
{"idx": 19095, "func": "Plot the polygon", "target": 0}
{"idx": 19096, "func": "We have a 'resourced' file, so reconvert it and use the 'old' implementation.", "target": 0}
{"idx": 19097, "func": "this is because of the (senseless?) \"All files\" FileFilter", "target": 0}
{"idx": 19098, "func": "in-frame EvalState should already have receiver set as self, continue to use it", "target": 0}
{"idx": 19099, "func": "//no pointbase TINYINT", "target": 0}
{"idx": 19100, "func": "This sets up the editing domain for the model editor. TODO: We probably need an EditingDomain per Argo project so that we can keep the ResourceSets separate.", "target": 1}
{"idx": 19101, "func": "no new methods", "target": 0}
{"idx": 19102, "func": "We need a place to store the color the JLabel should be returned to after its foreground and background colors have been set to the selection background color. These ivars will be made protected when their names are finalized.", "target": 0}
{"idx": 19103, "func": "Set editor's model", "target": 0}
{"idx": 19104, "func": "Only if the text did really changed (null != re.change) Intervals must be adjusted. If the text did not change there is nothing to adjust.", "target": 0}
{"idx": 19105, "func": "//////////////////////////////////////////", "target": 0}
{"idx": 19106, "func": "Construct a new class loader", "target": 0}
{"idx": 19107, "func": "//remove .class extension", "target": 0}
{"idx": 19108, "func": "All \"C\" marshalled objects descend from core classes, which are all RubyObject", "target": 0}
{"idx": 19109, "func": "fromValue", "target": 0}
{"idx": 19110, "func": "features which remain constant across 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 19111, "func": "If the diagram is empty, GEF won't write anything, leaving us with an empty (and invalid) file. Handle this case ourselves to prevent this from happening.", "target": 0}
{"idx": 19112, "func": "RubyUDPSocket", "target": 0}
{"idx": 19113, "func": "//{{{ newView() method", "target": 0}
{"idx": 19114, "func": "TODO: When 1.4 is the earliest version supported, include the following line here: scrollPane.setWheelScrollingEnabled(true); The scroll-wheel function is important for ease of use, but the setWheelScrollingEnabled function is not available in java 1.3.", "target": 1}
{"idx": 19115, "func": "changes temporary opcodes 202 to 217 (inclusive), 218 and 219 to IFEQ ... JSR (inclusive), IFNULL and IFNONNULL", "target": 0}
{"idx": 19116, "func": "ensure that there is an HTML part in the email, otherwise JTextPanel throws a RuntimeException", "target": 0}
{"idx": 19117, "func": "if the axis is not visible, don't draw it...", "target": 0}
{"idx": 19118, "func": "@see org.argouml.application.api.ProgressMonitor#updateSubTask(java.lang.String)", "target": 0}
{"idx": 19119, "func": "Check whether there are parameters; the special attribute and reference rules only apply for the case of no arguments. //", "target": 0}
{"idx": 19120, "func": "(non-Javadoc) @see java.lang.Comparable#compareTo(java.lang.Object)", "target": 0}
{"idx": 19121, "func": "this is not one of our included segment, skip it", "target": 0}
{"idx": 19122, "func": "i18n[SQLFilterSheet.closeButtonLabel=Close]", "target": 0}
{"idx": 19123, "func": "TODO: In UML 2.0, ClassifierRole, AssociationRole, and AssociationEndRole have been replaced by the internal structure of the Collaboration", "target": 0}
{"idx": 19124, "func": "forwards this event to the tree model. @param element the modelelement to be added TODO: This shouldn't be public. Components desiring to inform the Explorer of changes should send events.", "target": 1}
{"idx": 19125, "func": "Basic Block id CFG that this basic block belongs to All basic blocks have a starting label List of non-label instructions", "target": 0}
{"idx": 19126, "func": "Do nothing - these buttons are not shown.", "target": 0}
{"idx": 19127, "func": "dummy output for the framed report it's all done by extension...", "target": 0}
{"idx": 19128, "func": "Target", "target": 0}
{"idx": 19129, "func": "Define the new class in the classloader", "target": 0}
{"idx": 19130, "func": "// _driversList = new DriversList(app);", "target": 0}
{"idx": 19131, "func": "@see org.argouml.uml.diagram.ui.VisibilityContainer#setVisibilityVisible(boolean)", "target": 0}
{"idx": 19132, "func": "//i18n[EditWhereColsAction.singleObjectMessage=You must have a //single table selected to limit the colums used in the Edit //WHERE clause]", "target": 0}
{"idx": 19133, "func": "TL - all", "target": 0}
{"idx": 19134, "func": "Read the file", "target": 0}
{"idx": 19135, "func": "//i18n[SyntaxPlugin.uncomment=uncomment]", "target": 0}
{"idx": 19136, "func": "remove the process to the list of those to destroy if the VM exits //", "target": 0}
{"idx": 19137, "func": "important, to account for newly saved entities in query todo : some kind of check for new status...", "target": 1}
{"idx": 19138, "func": "@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event. DocumentEvent)", "target": 0}
{"idx": 19139, "func": "was this message already fetched from the server?", "target": 0}
{"idx": 19140, "func": "We've gone through the whole list and are now back at the start point of our search.", "target": 0}
{"idx": 19141, "func": "i18n[SQLResultExecuterPanel.statusLabel=Status:]", "target": 0}
{"idx": 19142, "func": "Note: we need a form of eval that passes the callstack through...", "target": 1}
{"idx": 19143, "func": "//{{{ goToNextWord() method", "target": 0}
{"idx": 19144, "func": "fine, don't show any indexes. //throw new WrappedSQLException(ex);", "target": 0}
{"idx": 19145, "func": "If this was a literal \"super\" reference then we allow recursion in setting the variable to get the normal effect of finding the nearest definition starting at the super scope. On any other resolution qualified by a 'this' type reference we want to set the variable directly in that scope. e.g. this.x=5; or someThisType.x=5; In the old scoping rules super didn't do this.", "target": 0}
{"idx": 19146, "func": "handle positive value", "target": 0}
{"idx": 19147, "func": "If it's a single-arg when but contains an array, we know it's a real literal array FIXME: This is a gross way to figure it out; parser help similar to yield argument passing (expandArguments) would be better", "target": 1}
{"idx": 19148, "func": "Store in the user configuration, and let gef know also.", "target": 0}
{"idx": 19149, "func": "Remove quotes from charset name", "target": 0}
{"idx": 19150, "func": "the TOC pane looks up user's guide URLs relative to the doc directory...", "target": 0}
{"idx": 19151, "func": "TODO This assumes we only get a SET notification, which isn't a good assumption. //", "target": 1}
{"idx": 19152, "func": "Information about a source unit and its content, whether it exists only in memory or it's stored in a file. TODO: Making this an interface instead of a class would allow more flexibility in dealing with non-file-based resources. - tfm @author aslo", "target": 1}
{"idx": 19153, "func": "verify isRelevant returns true", "target": 0}
{"idx": 19154, "func": "//Class/basicUnsetGenFeature.annotations.insert.javajetinc", "target": 0}
{"idx": 19155, "func": "Test for getColor()", "target": 0}
{"idx": 19156, "func": "Load info about the standard LAFs that come with this plugin.", "target": 0}
{"idx": 19157, "func": "//{{{ savePrintSpec() method", "target": 0}
{"idx": 19158, "func": "//{{{ getServicesURI() method", "target": 0}
{"idx": 19159, "func": "the columns in the referenced table", "target": 0}
{"idx": 19160, "func": "FAILURE!!!", "target": 0}
{"idx": 19161, "func": "handle cases of null The only legal input in this case is a delete", "target": 0}
{"idx": 19162, "func": "Ignore the further-most javadoc //", "target": 0}
{"idx": 19163, "func": "//{{{ removeUpdate() method", "target": 0}
{"idx": 19164, "func": "Set Look and Feel.", "target": 0}
{"idx": 19165, "func": "origin, path, implied, columns, classAlias,", "target": 0}
{"idx": 19166, "func": "Perform re-routing if src/dest nodes have changed. <p>This method needs to be 'armed' by a previous mouseDragged() to avoid the situation where the user just clicks on the node then clicks on some unrelated Fig, without moving the edge... <p>TODO: improve the fig finding algorithm to find the top most fig in the layer. will be useful for nested states in a statechart. @see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)", "target": 1}
{"idx": 19167, "func": "Internal use only. The @ always matches line beginnings.", "target": 0}
{"idx": 19168, "func": "session preferences", "target": 0}
{"idx": 19169, "func": "check escape rule of parent", "target": 0}
{"idx": 19170, "func": "//_i--;", "target": 0}
{"idx": 19171, "func": "TODO: hookup with Interbase spec and adjust these as necessary.", "target": 1}
{"idx": 19172, "func": "line 836", "target": 0}
{"idx": 19173, "func": "Class Table", "target": 0}
{"idx": 19174, "func": "CREATE SEQUENCE [IF NOT EXISTS] newSequenceName [START WITH long] [INCREMENT BY long] [CACHE long]", "target": 0}
{"idx": 19175, "func": "for ssl connection", "target": 0}
{"idx": 19176, "func": "Ignore that", "target": 0}
{"idx": 19177, "func": "-------------------------------------------------------------------------- Methods to compute offsets and to manage forward references --------------------------------------------------------------------------", "target": 0}
{"idx": 19178, "func": "set console handler to OFF", "target": 0}
{"idx": 19179, "func": "Returns the node currently on the top of the stack.", "target": 0}
{"idx": 19180, "func": "change a series outline paint", "target": 0}
{"idx": 19181, "func": "Read all the values into an array. //", "target": 0}
{"idx": 19182, "func": "about to delete last thing in field, so replace with null", "target": 0}
{"idx": 19183, "func": "not needed for HttpClient", "target": 0}
{"idx": 19184, "func": "TODO: Put throws clause back in Empty method.", "target": 1}
{"idx": 19185, "func": "Create an action that will evict collection and entity regions based on queryspaces (table names). TODO: cache the autodetected information and pass it in instead.", "target": 1}
{"idx": 19186, "func": "inject mocks", "target": 0}
{"idx": 19187, "func": "Schema", "target": 0}
{"idx": 19188, "func": "private ThemeDateAreaContainer view;", "target": 0}
{"idx": 19189, "func": "instance config for the script run", "target": 0}
{"idx": 19190, "func": "clear the cache", "target": 0}
{"idx": 19191, "func": "//{{{ remove() method", "target": 0}
{"idx": 19192, "func": "Wake up any channels that became unblocked //", "target": 0}
{"idx": 19193, "func": "try optz version", "target": 0}
{"idx": 19194, "func": "Set start time", "target": 0}
{"idx": 19195, "func": "//REVISIT: do we really need to support block names as in Unicode 3.1 or we can just create all the names in IsBLOCKNAME format (XML Schema REC)? //", "target": 1}
{"idx": 19196, "func": "//{{{ getCompletions() method", "target": 0}
{"idx": 19197, "func": "TODO: what type?", "target": 1}
{"idx": 19198, "func": "line 1348", "target": 0}
{"idx": 19199, "func": "//TODO: algorithm is n^2 in number of nodes", "target": 1}
{"idx": 19200, "func": "If we drop out there is no problem", "target": 0}
{"idx": 19201, "func": "Set the position when next is first called, and don't overwrite until reInitialize is called.", "target": 0}
{"idx": 19202, "func": "When call by contructor : no one is selected", "target": 0}
{"idx": 19203, "func": "TODO: this attribute should be transferred to the renderer state.", "target": 1}
{"idx": 19204, "func": "check if this message was already learned", "target": 0}
{"idx": 19205, "func": "If the object representing the actual data (i.e. this object) can be edited by the user, then the fw objects need to have a reference to it. Updateable objects must implement an interface derived from IDataSetUpdateableComponent in the net.sourceforge.squirrel_sql.fw.datasetviewer package. If the component does not implement that interface, then we just keep going, but if it does implement it, then we need to tell the DataSetScrollingPanel that the object that fw needs to call is this one.", "target": 0}
{"idx": 19206, "func": "INSTANCE VARIABLE", "target": 0}
{"idx": 19207, "func": "All threads - alternate calculation", "target": 0}
{"idx": 19208, "func": "//{{{ _replace() method", "target": 0}
{"idx": 19209, "func": "not reached", "target": 0}
{"idx": 19210, "func": "-rm", "target": 0}
{"idx": 19211, "func": "i18n[GeneralPreferencesPanel.squirrelHomePath=Home directory: -home {0}]", "target": 0}
{"idx": 19212, "func": "(non-Javadoc) @see org.apache.jmeter.report.writers.PageSummary#getPageTitle()", "target": 0}
{"idx": 19213, "func": "//reset the pointIndex", "target": 0}
{"idx": 19214, "func": "save profile", "target": 0}
{"idx": 19215, "func": "We return a new List with the options instead of the options themself because we don't want the user to be able to change the options. @see org.argouml.uml.reveng.SettingsTypes.UniqueSelection#getOptions()", "target": 0}
{"idx": 19216, "func": "Count number of extra slashes in the beginning of the string.", "target": 0}
{"idx": 19217, "func": "TEXTAREA", "target": 0}
{"idx": 19218, "func": "Create a title bar.", "target": 0}
{"idx": 19219, "func": "$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$", "target": 0}
{"idx": 19220, "func": "$NON-NLS-1$ jmeter.properties", "target": 0}
{"idx": 19221, "func": "register for model changes to enable/disable when user switches between html or text plain mode", "target": 0}
{"idx": 19222, "func": "If this attribute was added by this task, then we append this value to the existing value. We use the setProperty method which will forcibly override the property if it already exists. We need to put these properties into the project when we read them, though (instead of keeping them outside of the project and batch adding them at the end) to allow other properties to reference them.", "target": 0}
{"idx": 19223, "func": "TODO: maybe should stop at first, or find highest priority.", "target": 1}
{"idx": 19224, "func": "break;", "target": 0}
{"idx": 19225, "func": "LDC_W", "target": 0}
{"idx": 19226, "func": "@see org.argouml.uml.diagram.ui.FigEdgeModelElement#getNameFig()", "target": 0}
{"idx": 19227, "func": "Look for line endings.", "target": 0}
{"idx": 19228, "func": "This stops the text control from line wrapping.", "target": 0}
{"idx": 19229, "func": "//{{{ numericKeypadKey() method", "target": 0}
{"idx": 19230, "func": "Internal information only read from saveservice.properties file$NON-NLS-1$ Must match Revision id value in saveservice.properties, used to ensure saveservice.properties and SaveService are updated simultaneously Expected value $NON-NLS-1$ read from properties file$NON-NLS-1$", "target": 0}
{"idx": 19231, "func": "//i18n[ColumnDetailsDialog.lengthLabel=Length: ]", "target": 0}
{"idx": 19232, "func": "//{{{ Find fold start and fold end...", "target": 0}
{"idx": 19233, "func": "Give up if the assocation ends don't have a type defined", "target": 0}
{"idx": 19234, "func": "init sorting model", "target": 0}
{"idx": 19235, "func": "Java's select doesn't do anything about this, so we leave it be.", "target": 0}
{"idx": 19236, "func": "line 1047", "target": 0}
{"idx": 19237, "func": "Add the menu item", "target": 0}
{"idx": 19238, "func": "//sort the updates by pk", "target": 0}
{"idx": 19239, "func": "//{{{ getScreenLineEndOffset() method", "target": 0}
{"idx": 19240, "func": "Generate code to return the value", "target": 0}
{"idx": 19241, "func": "If it didn't have a loadable module class and it doesn't look like a localized property set, warn the user that something funny is in their extension directory", "target": 0}
{"idx": 19242, "func": "set column heading set data in first row", "target": 0}
{"idx": 19243, "func": "paint", "target": 0}
{"idx": 19244, "func": "let notified threads move on and get lock on managersInUse", "target": 0}
{"idx": 19245, "func": "Block", "target": 0}
{"idx": 19246, "func": "flush first", "target": 0}
{"idx": 19247, "func": "specialised icons for designer", "target": 0}
{"idx": 19248, "func": "EnhancedMenu has a reference to EditBusStub, but not the other way around. So when the EnhancedMenu is being garbage collected its finalize() method removes the EditBusStub from the edit bus.", "target": 0}
{"idx": 19249, "func": "how to handle empty target lists? probably the MultiEditorPane should only show an empty pane in that case", "target": 0}
{"idx": 19250, "func": "C:\\AUTOEXEC.BAT", "target": 0}
{"idx": 19251, "func": "id attribute must be set externally", "target": 0}
{"idx": 19252, "func": "Now the new nameFig height will include the stereotype height:", "target": 0}
{"idx": 19253, "func": "//lobs cannot be compared", "target": 0}
{"idx": 19254, "func": "XXX: we should use JCVS (www.ice.com/JCVS) instead of command line execution so that we don't rely on having native CVS stuff around (SM)", "target": 1}
{"idx": 19255, "func": "verify independence of fixed legend item collection", "target": 0}
{"idx": 19256, "func": "Roll back state.", "target": 0}
{"idx": 19257, "func": "Re-read 1st line", "target": 0}
{"idx": 19258, "func": "get the values from the controls and set them in the static properties", "target": 0}
{"idx": 19259, "func": "MRI error message says Class, even though Module is ok", "target": 0}
{"idx": 19260, "func": "try a few checks to ensure that the clone is independent of the original", "target": 0}
{"idx": 19261, "func": "Don't bother the user with details about where the result fetch failed if they cancelled the query.", "target": 0}
{"idx": 19262, "func": "we did not find a collection element in the result set, so we ensure that a collection is created with the owner's identifier, since what we have is an empty collection", "target": 0}
{"idx": 19263, "func": "implicit else: ignore the ':' since we have either a UNIX or a relative path", "target": 0}
{"idx": 19264, "func": "TODO: This exception will be thrown during autoscrolling when the edge of the canvas is reached causing either the width or height to be \"adjusted\" to a negative value", "target": 1}
{"idx": 19265, "func": "If there are any arguments and they are not unbounded wildcards, casts can't be checked. //", "target": 0}
{"idx": 19266, "func": "line 321", "target": 0}
{"idx": 19267, "func": "TODO: Add standard stereotype? Set is open ended, but predefined names include: call, create, instantiate, send", "target": 1}
{"idx": 19268, "func": "Loop through all the ends, comparing the name against those already seen (ignoring any with no name). No problem if there are no connections defined, we will fall through immediately.", "target": 0}
{"idx": 19269, "func": "&& state.getBarWidth() > renderer.BAR_OUTLINE_WIDTH_THRESHOLD", "target": 0}
{"idx": 19270, "func": "See if two copies look like copies of eachother", "target": 0}
{"idx": 19271, "func": "Self-describing as of JUnit 4 (#38811). But trim \"(ClassName)\".", "target": 0}
{"idx": 19272, "func": "FIXME: I use a for block to implement END node because we need a proc which captures its enclosing scope. ForBlock now represents these node and should be renamed.", "target": 1}
{"idx": 19273, "func": "user supplied JDBC connections", "target": 0}
{"idx": 19274, "func": "Fill 5 of value (byte) 33 Fill 10 of value (byte) -87 Fill 17 of value (byte) 33 Fill 3 of value (byte) -87", "target": 0}
{"idx": 19275, "func": "TODO: Should be anything allowed by current diagram", "target": 1}
{"idx": 19276, "func": "folder in which the update occurs", "target": 0}
{"idx": 19277, "func": "TODO: The above statement also refreshes when we are not shown (to be verified) - hence not entirely correct.", "target": 1}
{"idx": 19278, "func": "only save unexpired cookies", "target": 0}
{"idx": 19279, "func": "Characters to use in escaping.", "target": 0}
{"idx": 19280, "func": "Skip the 2 lines //<?xml version=\"1.0\" encoding=\"UTF-8\" ?> //<!DOCTYPE todo SYSTEM \"todo.dtd\" >", "target": 0}
{"idx": 19281, "func": "@see org.argouml.uml.diagram.ui.FigEdgeModelElement#getSource()", "target": 0}
{"idx": 19282, "func": "not sure if we should really recurse here for explicitly imported class in parent...", "target": 1}
{"idx": 19283, "func": "XPathFileContainer tests", "target": 0}
{"idx": 19284, "func": "replaces the temporary jump opcodes introduced by Label.resolve.", "target": 0}
{"idx": 19285, "func": "Register tabs to display in the details panel for catalog nodes.", "target": 0}
{"idx": 19286, "func": "Switch to the new selection provider. //", "target": 0}
{"idx": 19287, "func": "We want to unroll all the effects of the previous commands. //", "target": 0}
{"idx": 19288, "func": "//main classpath", "target": 0}
{"idx": 19289, "func": "fill formatted textfield", "target": 0}
{"idx": 19290, "func": "now search through all buckets", "target": 0}
{"idx": 19291, "func": "get the next 3 bytes (if we have them)", "target": 0}
{"idx": 19292, "func": "//{{{ MacrosMenu class", "target": 0}
{"idx": 19293, "func": "handle transparency and compositing.", "target": 0}
{"idx": 19294, "func": "//add it to list of files in jar", "target": 0}
{"idx": 19295, "func": "Workaround for JRUBY-2326 (MRI does not enter this production for some reason)", "target": 1}
{"idx": 19296, "func": "nothing to do; even if the operand is a parameter, no way we could infer an appropriate expected type here", "target": 0}
{"idx": 19297, "func": "EventListenerList.add() is synchronized, so we don't need to synchronize ourselves", "target": 0}
{"idx": 19298, "func": "//////////////////////////////////////////////////////////////event handlers - MouseListener implementation", "target": 0}
{"idx": 19299, "func": "check if the returned String is has a length != 0", "target": 0}
{"idx": 19300, "func": "Default implementation", "target": 0}
{"idx": 19301, "func": "Unfortunately the MDR super implementation throws DebugException with just the message from the causing exception rather than nesting the exception itself, so we don't have all the information we'd like", "target": 0}
{"idx": 19302, "func": "todo: this was added to support initializing an entity's EntityEntry snapshot during reattach; this should be refactored to instead expose a method to assemble a EntityEntry based on this state for return.", "target": 1}
{"idx": 19303, "func": "If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //", "target": 0}
{"idx": 19304, "func": "The following are used to set the Result details on return from the script: //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$", "target": 0}
{"idx": 19305, "func": "//{{{ scrollToCaret() method", "target": 0}
{"idx": 19306, "func": "die if cabarc fails", "target": 0}
{"idx": 19307, "func": "TODO: must override in RubyModule to pick up constants", "target": 1}
{"idx": 19308, "func": "Otherwise, return it appended unless property to hide it is set.", "target": 0}
{"idx": 19309, "func": "i18n[MysqlPlugin.hint=Preferences for MySQL]", "target": 0}
{"idx": 19310, "func": "check to make sure that the given dir isn't a symlink the comparison of absolute path and canonical path catches this", "target": 0}
{"idx": 19311, "func": "I have seen the reference to the outer class being null when this method is called. I have seen it only with the runtime jars and on Linux. I could not reproduce in my IDE.", "target": 0}
{"idx": 19312, "func": "line 1138", "target": 0}
{"idx": 19313, "func": "rb_mod_remove_cvar FIXME: any good reason to have two identical methods? (same as remove_class_variable)", "target": 1}
{"idx": 19314, "func": "//UNTIL=20070627T215959", "target": 0}
{"idx": 19315, "func": "User cancelled authentication", "target": 0}
{"idx": 19316, "func": "/////////////////////////////////////////////////////////////////////////From SeriesDataset ///////////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 19317, "func": "Map keep track of the next available variable index for a particular prefix", "target": 0}
{"idx": 19318, "func": "i18n[mssql.scriptUsers=Script database users and database roles]", "target": 0}
{"idx": 19319, "func": "invalid ranges result in an empty string", "target": 0}
{"idx": 19320, "func": "Properties settable by the user", "target": 0}
{"idx": 19321, "func": "n-dimensional array", "target": 0}
{"idx": 19322, "func": "Dirty fix for issue 1758 (Needs to be amended when we start supporting parameters):", "target": 1}
{"idx": 19323, "func": "Only show class decs in CLASSES", "target": 0}
{"idx": 19324, "func": "search settings", "target": 0}
{"idx": 19325, "func": "assert internedSymbol == internedSymbol.intern() : internedSymbol + \" is not interned\";", "target": 0}
{"idx": 19326, "func": "Required otherwise it gets too wide.", "target": 1}
{"idx": 19327, "func": "----------- name -------------------------", "target": 0}
{"idx": 19328, "func": "allow MainExitException to propagate out for exec and friends", "target": 0}
{"idx": 19329, "func": "shift to yyN", "target": 0}
{"idx": 19330, "func": "because this method is called for every VFS update, we don't want to scan the tree all the time. So we use the following algorithm to determine if the path might be part of the tree: - if the path starts with the browser's current directory, we do the tree scan - if the browser's directory is 'favorites:' -- we have to do the tree scan, as every path can appear under the favorites list - if the browser's directory is 'roots:' and path is on the local filesystem, do a tree scan", "target": 0}
{"idx": 19331, "func": "Create the UML connection of the given type between the given model elements. default aggregation (none)", "target": 0}
{"idx": 19332, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getPrimaryKeys(net.sourceforge.squirrel_sql.fw.sql.ITableInfo) @deprecated use getPrimaryKey instead", "target": 0}
{"idx": 19333, "func": "return _mainFrame;", "target": 0}
{"idx": 19334, "func": "OK $NON-NLS-1$", "target": 0}
{"idx": 19335, "func": "select clauses for insert statements should alwasy be treated as shallow", "target": 0}
{"idx": 19336, "func": "i18n[oracle.options=Options]", "target": 0}
{"idx": 19337, "func": "hack since HelpViewer needs a URL...", "target": 1}
{"idx": 19338, "func": "//{{{ getModeName() method", "target": 0}
{"idx": 19339, "func": "try an empty dataset - should return a null range", "target": 0}
{"idx": 19340, "func": "Test for a same document reference that would usually be handled as an IDREF. //", "target": 0}
{"idx": 19341, "func": "//{{{ GetFileTypeRequest class", "target": 0}
{"idx": 19342, "func": "No need to check any further if we fail the 1st part.", "target": 0}
{"idx": 19343, "func": "//{{{ updateBufferStatus() method", "target": 0}
{"idx": 19344, "func": "try to extract a test suite automatically this will generate warnings if the class is no suitable Test", "target": 0}
{"idx": 19345, "func": "The following pointer is needed to allow the \"Make Editable button to tell the application to set up an editable display panel", "target": 0}
{"idx": 19346, "func": "on a reload, the fold handler doesn't change, but we still need to re-collapse folds. don't do this on initial fold handler creation", "target": 0}
{"idx": 19347, "func": "///////////////////////////////////////////", "target": 0}
{"idx": 19348, "func": "don't send two updates for the same path", "target": 0}
{"idx": 19349, "func": "if the check gets till here we have all the need information", "target": 0}
{"idx": 19350, "func": "Cookies are ignored", "target": 0}
{"idx": 19351, "func": "Add a path to the list of paths to be searched when looking for XMI files to resolve external references with. The list is maintained in a static structure shared by all instances. <p> TODO: It's desirable to have separate search paths for separate files, but more work is required in ArgoUML so that it knows how to maintain separate contexts for the profiles and user models. @param path a directory path to add to the search path", "target": 1}
{"idx": 19352, "func": "set to default", "target": 0}
{"idx": 19353, "func": "won't hurt fixnums", "target": 0}
{"idx": 19354, "func": "Check which HTTPSampler class we should use", "target": 0}
{"idx": 19355, "func": "or: x1s + 2(x1-x1s)", "target": 0}
{"idx": 19356, "func": "LOG.log(Level.FINE, \"Adding resolution for: \" + c.getClass() + \" \" + canCreate);", "target": 0}
{"idx": 19357, "func": "@GuardedBy(\"this\") needed for error messages", "target": 0}
{"idx": 19358, "func": "sheet types", "target": 0}
{"idx": 19359, "func": "query using all criteria", "target": 0}
{"idx": 19360, "func": "Create a UML PrimitiveType. @since UML 2.1.1 @return an initialized UML Primitive instance. TODO: This needs an extra parameter to specify the model/extent where the new element should be created.", "target": 1}
{"idx": 19361, "func": "NOTE: The five match methods are arity-split to avoid the cost of boxing arguments when there's already a cached match. Do not condense them into a single method.", "target": 0}
{"idx": 19362, "func": "TODO: The src_visibility tag doesn't appear to be created anywhere by ArgoUML currently", "target": 0}
{"idx": 19363, "func": "remember these values for next comparison", "target": 0}
{"idx": 19364, "func": "not so simple -- we want to keep the filegroups together.", "target": 0}
{"idx": 19365, "func": "CRC Mode SizDev UID GID", "target": 0}
{"idx": 19366, "func": "enable lucene search index by default", "target": 0}
{"idx": 19367, "func": "Make the addURL method visible", "target": 0}
{"idx": 19368, "func": "generate call sites initialization code", "target": 0}
{"idx": 19369, "func": "startparts[1] contains our I18n string key followed by </span>", "target": 0}
{"idx": 19370, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo#getSchemaName()", "target": 0}
{"idx": 19371, "func": "---- imTextField2 ----", "target": 0}
{"idx": 19372, "func": "(non-Javadoc) @see org.columba.core.filter.IFilter#getFilterActionList()", "target": 0}
{"idx": 19373, "func": "line 737", "target": 0}
{"idx": 19374, "func": "This is for JRUBY-2988, since after a suspend the terminal seems to need to be reinitialized. Since we can't easily detect suspension, initialize after every readline. Probably not fast, but this is for interactive terminals anyway...so who cares?", "target": 1}
{"idx": 19375, "func": "//{{{ setCurrentLineForeground() method", "target": 0}
{"idx": 19376, "func": "A primitive type can only be used as the generic type of a typed element. //", "target": 0}
{"idx": 19377, "func": "Neither 'scheme:' or 'scheme:#fragment' are valid URIs.", "target": 0}
{"idx": 19378, "func": "//we create a fileset with the source file. //this lets us combine our logic for handling output directories, //mapping etc.", "target": 0}
{"idx": 19379, "func": "//_listeners.remove(ISQLExecutionListener.class, lis);", "target": 0}
{"idx": 19380, "func": "Default value", "target": 0}
{"idx": 19381, "func": "Use the token as an identifier.", "target": 0}
{"idx": 19382, "func": "remove all child nodes", "target": 0}
{"idx": 19383, "func": "Add a zero (or quite low) timeout option so we don't block. Ignore any TimeoutException. Basically we forego caching the query result in order to avoid blocking. Reads are done with suspended tx, so they should not hold the lock for long. Not caching the query result is OK, since any subsequent read will just see the old result with its out-of-date timestamp; that result will be discarded and the db query performed again.", "target": 0}
{"idx": 19384, "func": "overwrite look and feel font settings", "target": 0}
{"idx": 19385, "func": "Uses menu.dbdiff. in dbdiff.properties", "target": 0}
{"idx": 19386, "func": "putValue(LARGE_ICON, ImageLoader.getImageIcon(\"drafts-16.png\"));", "target": 0}
{"idx": 19387, "func": "Don't get editors for hidden or non-read-write properties:", "target": 0}
{"idx": 19388, "func": "seek the good interval for t and get the piece of curve on it", "target": 0}
{"idx": 19389, "func": "setup constants for public inner classes", "target": 0}
{"idx": 19390, "func": "The name of the class containing the method", "target": 0}
{"idx": 19391, "func": "//{{{ setFirstInvalidLineContext() method", "target": 0}
{"idx": 19392, "func": "absolute path or no path -> absolute path", "target": 0}
{"idx": 19393, "func": "//{{{ addTranslation() method", "target": 0}
{"idx": 19394, "func": "//{{{ layoutContainer() method", "target": 0}
{"idx": 19395, "func": "We have done everything we can prior to this point to ensure that the the file is accessible, but it is still possible that an existing file was removed at a bad moment. Also, the compiler insists that we put this in a try statement", "target": 0}
{"idx": 19396, "func": "//{{{ Constants", "target": 0}
{"idx": 19397, "func": "this test is a bit stupid, but nevertheless...", "target": 0}
{"idx": 19398, "func": "line 896", "target": 0}
{"idx": 19399, "func": "(non-Javadoc) @see org.columba.api.command.IWorkerStatusController#getTimeStamp()", "target": 0}
{"idx": 19400, "func": "TODO: unimplemented return ((Property) handle).gets", "target": 0}
{"idx": 19401, "func": "We don't want to move insert an object before or after itself... //", "target": 0}
{"idx": 19402, "func": "for getIterCount", "target": 0}
{"idx": 19403, "func": "TODO: this is a bug in the code at the moment. If table \"test\" isn't qualified then this test passes - so we need to beef up qualified tablename handling.", "target": 1}
{"idx": 19404, "func": "all methods dispatch to the simple version by default, which is method_missing normally", "target": 0}
{"idx": 19405, "func": "number of headerfields", "target": 0}
{"idx": 19406, "func": "returns the stored value without processing undefs (autoloads)", "target": 0}
{"idx": 19407, "func": "the path expression ends at the ]", "target": 0}
{"idx": 19408, "func": "Sets properties", "target": 0}
{"idx": 19409, "func": "Note: we change current frames visibility here because the methods which call this method are all \"fast\" (e.g. they do not created their own frame).", "target": 0}
{"idx": 19410, "func": "//{{{ addToSelection() method", "target": 0}
{"idx": 19411, "func": "Check if we can optimize this call based on the receiving method and receiver type Use the simplified receiver!", "target": 0}
{"idx": 19412, "func": "get the message controller", "target": 0}
{"idx": 19413, "func": "append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)", "target": 0}
{"idx": 19414, "func": "If the table has only one column, it cannot be dropped", "target": 0}
{"idx": 19415, "func": "token kind token position in the source text (starting at 0) token column (starting at 0) token line (starting at 1) exact string value token string value (uppercase if ignoreCase)", "target": 0}
{"idx": 19416, "func": "TODO: make threadsafe", "target": 1}
{"idx": 19417, "func": "--------------- tree nodes -------------------------", "target": 0}
{"idx": 19418, "func": "//////////////////////////////////////////////////////////////class variables", "target": 0}
{"idx": 19419, "func": "//Class/unsetGenFeature.annotations.insert.javajetinc", "target": 0}
{"idx": 19420, "func": "i18n[SchemaPropertiesController.tableHeader.tables=Tables]", "target": 0}
{"idx": 19421, "func": "TODO i18n \"Help\" button", "target": 0}
{"idx": 19422, "func": "//{{{ setLineEndOffset() method", "target": 0}
{"idx": 19423, "func": "/etc/passwd", "target": 0}
{"idx": 19424, "func": "//{{{ getClasses() method", "target": 0}
{"idx": 19425, "func": "//{{{ getDockablesURI() method", "target": 0}
{"idx": 19426, "func": "//Match \"//\" for begining of depot filespec", "target": 0}
{"idx": 19427, "func": "ClassId is the name of the class/module sans where it is located. If it is null, then it an anonymous class.", "target": 0}
{"idx": 19428, "func": "//Copy files from old websphere jar", "target": 0}
{"idx": 19429, "func": "JEditTextArea.scrollTo() needs this to simplify its code", "target": 0}
{"idx": 19430, "func": "check a set of parent/child nodes in the from-clause tree to determine if a comma is required between them", "target": 0}
{"idx": 19431, "func": "Temporary WAS/WSAD migration option. //", "target": 0}
{"idx": 19432, "func": "CREATE [FORCE] VIEW [IF NOT EXISTS] newViewName [(columnName [,..])] AS select \"CREATE VIEW $viewName$ \" + \"AS $selectStatement$ $with$ $checkOptionType$ $checkOption$\";", "target": 0}
{"idx": 19433, "func": "OK, properties file may be absolute", "target": 0}
{"idx": 19434, "func": "We need to generate ids as part of this bulk insert. Note that this is only supported for sequence-style generators and post-insert-style generators; basically, only in-db generators", "target": 0}
{"idx": 19435, "func": "//private final boolean iri; //private URI cachedASCIIURI;", "target": 0}
{"idx": 19436, "func": "??Need to tell object to display itself in a panel.", "target": 1}
{"idx": 19437, "func": "line 920", "target": 0}
{"idx": 19438, "func": "Only for associations", "target": 0}
{"idx": 19439, "func": "Classifier powerType =", "target": 0}
{"idx": 19440, "func": "@see java.awt.dnd.DragSourceListener#dragExit(java.awt.dnd.DragSourceEvent)", "target": 0}
{"idx": 19441, "func": "test 3...", "target": 0}
{"idx": 19442, "func": "starts with an alias (old style) semi-bad thing about this: can't re-alias another alias.....", "target": 1}
{"idx": 19443, "func": "line 1632", "target": 0}
{"idx": 19444, "func": "<create_index_statement> ::= CREATE [UNIQUE] INDEX <index_name> ON <table_name> (<index_spec>) <index_spec> ::= <index_column_name>,... | <dbfunction_name> (<column_name>,...) [ASC|DESC] <index_column_name> ::= <column_name> [ASC|DESC]", "target": 0}
{"idx": 19445, "func": "comment out all lines of the node itself, from firstLine to last line", "target": 0}
{"idx": 19446, "func": "if the box has been drawn backwards, restore the auto bounds", "target": 0}
{"idx": 19447, "func": "We have to open our own stream to the URL.", "target": 0}
{"idx": 19448, "func": "//horizontal.setBorder(null);", "target": 0}
{"idx": 19449, "func": "//or Types.LONGVARCHAR?", "target": 0}
{"idx": 19450, "func": "Perform the action", "target": 0}
{"idx": 19451, "func": "verify segments are consecutive and correct", "target": 0}
{"idx": 19452, "func": "TODO: do we want to fire targetRemoved here or is it enough to just stop updating the targets?", "target": 1}
{"idx": 19453, "func": "If there are objects to populate... //", "target": 0}
{"idx": 19454, "func": "//replace the other entities", "target": 0}
{"idx": 19455, "func": "@see org.tigris.gef.presentation.Fig#getLineColor()", "target": 0}
{"idx": 19456, "func": "Assume failure", "target": 0}
{"idx": 19457, "func": "first remove all subfolders recursively", "target": 0}
{"idx": 19458, "func": "actually removes a1", "target": 0}
{"idx": 19459, "func": "Loop through each element in the namespace, recursing.", "target": 0}
{"idx": 19460, "func": "classify the keys according to which side the label will appear...", "target": 0}
{"idx": 19461, "func": "put forNameSpace it on the top of the stack Note: it's important that there is only one exit point from this method so that we can swap back the namespace.", "target": 0}
{"idx": 19462, "func": "Pattern contains only '', which matches anything", "target": 0}
{"idx": 19463, "func": "JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)", "target": 0}
{"idx": 19464, "func": "must let original string know we're modifying, so shared buffers aren't damaged", "target": 0}
{"idx": 19465, "func": "NativeSQL: collect key column and auto-aliases", "target": 0}
{"idx": 19466, "func": "Returns whether this class implements any of the given features.", "target": 0}
{"idx": 19467, "func": "@see java.awt.event.WindowListener#windowClosing(java.awt.event.WindowEvent)", "target": 0}
{"idx": 19468, "func": "whitespace detected", "target": 0}
{"idx": 19469, "func": "======= testcases for the attributes and nested elements of the selector =====", "target": 0}
{"idx": 19470, "func": "found new token", "target": 0}
{"idx": 19471, "func": "if win32 platform, prepend cmd.exe necessary for system environment variables usage", "target": 0}
{"idx": 19472, "func": "Update the composer", "target": 0}
{"idx": 19473, "func": "we suppress shadow generation, because SVG is a vector format and the shadow effect is applied via bitmap effects...", "target": 0}
{"idx": 19474, "func": "// private static final String[] TITLES = { \"PhD\", \"Ph.D.\", \"PhD.\", \"Esq.\", \"Esquire\" };", "target": 0}
{"idx": 19475, "func": "should probably no-op commit/rollback here, at least in JTA scenarios", "target": 0}
{"idx": 19476, "func": "Additional Settings", "target": 0}
{"idx": 19477, "func": "Bad URI, pass this on.", "target": 0}
{"idx": 19478, "func": "The TreeModel interface //", "target": 0}
{"idx": 19479, "func": "Create a command to set this to null and remove the object from the other list. //", "target": 0}
{"idx": 19480, "func": "i18n[I18n.failedToOpenZip=Failed to open zip/jar {0}]", "target": 0}
{"idx": 19481, "func": "@see org.argouml.model.ModelImplementation#getStateMachinesFactory()", "target": 0}
{"idx": 19482, "func": "if it is an initialized proxy, let cascade handle it later on", "target": 0}
{"idx": 19483, "func": "Should be safe to parse", "target": 0}
{"idx": 19484, "func": "method.block", "target": 0}
{"idx": 19485, "func": "no additional methods required", "target": 0}
{"idx": 19486, "func": "if this list is empty, register the shutdown hook", "target": 0}
{"idx": 19487, "func": "stripHtmlTags called with true ~ p & br => newlines", "target": 0}
{"idx": 19488, "func": "when the dataset contains one or more series, but those series contain no items, we still expect the range to be null", "target": 0}
{"idx": 19489, "func": "//textField.showPopup(); //textField.requestFocus();", "target": 0}
{"idx": 19490, "func": "20030906, karlpeder Method signature changed to return an AbstractEditorController", "target": 0}
{"idx": 19491, "func": "line 382", "target": 0}
{"idx": 19492, "func": "bomb out, it's not a binding or a proc", "target": 0}
{"idx": 19493, "func": "Read the attributes, if any. After this loop, we should be just in front of the closing delimiter.", "target": 0}
{"idx": 19494, "func": "returns List", "target": 0}
{"idx": 19495, "func": "no UNIXSockets on Windows", "target": 0}
{"idx": 19496, "func": "draw the sections at the top of the pie (and set up tooltips)...", "target": 0}
{"idx": 19497, "func": "//{{{ setGlobalAbbrevs() method", "target": 0}
{"idx": 19498, "func": "at some point the generate phase needs to be moved out of here, because a single object-level DML might spawn multiple SQL DML command executions. Possible to just move the sql generation for dml stuff, but for consistency-sake probably best to just move responsiblity for the generation phase completely into the delegates (QueryLoader/StatementExecutor) themselves. Also, not sure why QueryLoader currently even has a dependency on this at all; does it need it? Ideally like to see the walker itself given to the delegates directly...", "target": 1}
{"idx": 19499, "func": "Do not allow a non-leaf node to be moved into one of its children", "target": 0}
{"idx": 19500, "func": "----- Cache-Configuration -----", "target": 0}
{"idx": 19501, "func": "i18n[AbstractRefactoringDialog.tableNameLabel=Table Name: ]", "target": 0}
{"idx": 19502, "func": "Associate the table alias with the element.", "target": 0}
{"idx": 19503, "func": "Java reflection does not allow retrieving constructors like methods", "target": 0}
{"idx": 19504, "func": "Here's where the test really starts. Run a Full GC now: it's no harm at all (just delays test start by a tiny amount) and hitting one too early in the test can impair results for short tests.", "target": 0}
{"idx": 19505, "func": "Set Default Charset or selected", "target": 0}
{"idx": 19506, "func": "suggestionsJScrollPane.setPreferredSize(", "target": 0}
{"idx": 19507, "func": "How many occurrences of 'type' we want", "target": 0}
{"idx": 19508, "func": "Update menu items to reflect recent files", "target": 0}
{"idx": 19509, "func": "Create commands to create the copy object(s). //", "target": 0}
{"idx": 19510, "func": "don't care...", "target": 0}
{"idx": 19511, "func": "//{{{ offsetToX() method", "target": 0}
{"idx": 19512, "func": "//{{{ changed() method", "target": 0}
{"idx": 19513, "func": "(MExtend)", "target": 0}
{"idx": 19514, "func": "TBD should this be varbinary($1)? // registerColumnType(Types.VARBINARY, \"binary($1)\");", "target": 1}
{"idx": 19515, "func": "check null argument...", "target": 0}
{"idx": 19516, "func": "Update the text labels. @see org.argouml.uml.diagram.ui.FigNodeModelElement#modelChanged(java.beans.PropertyChangeEvent)", "target": 0}
{"idx": 19517, "func": "record namespaces in scope //", "target": 0}
{"idx": 19518, "func": "\"server\" \"port\" \"database file\"", "target": 0}
{"idx": 19519, "func": "FIXME (@author fdietz): Do we need this implementation in a TempFolder? If not, just put an empty method here, just like in VirtualFolder.", "target": 1}
{"idx": 19520, "func": "TODO: Only fetch names and defer fetching panels until needed", "target": 1}
{"idx": 19521, "func": "Changes the font for all Figs contained in the given FigGroup. <p> TODO: In fact, there is a design error in this method: E.g. for a class, if the name is Italic since the class is abstract, then the classes features should be in Plain font. This problem can be fixed by implementing the updateFont() method in all subclasses. @param fg the FigGroup to change the font of.", "target": 1}
{"idx": 19522, "func": "TODO: This is a linear search of a list that contain many thousands of items (one for every Fig in the entire project)", "target": 1}
{"idx": 19523, "func": "temp method to verify tableSize value must be called under lock", "target": 0}
{"idx": 19524, "func": "find order.indexOf(currentKey) using == rather than equals() there may be multiple entries which compare equals (Bug 50898) This will be slightly slower than the built-in method, but replace() is not used frequently.", "target": 0}
{"idx": 19525, "func": "s&0x1f : 0-31", "target": 0}
{"idx": 19526, "func": "what is the available space for one unit?", "target": 0}
{"idx": 19527, "func": "Such a header is used by Eudora to indicate attachments for outgoing messages. Outgoing messages have no Content-Type specified. Therefore the Content-Type header can be safely set here without risk of conflicts with the modifications made above", "target": 0}
{"idx": 19528, "func": "Special form of sprintf that returns a RubyString and handles tainted strings correctly.", "target": 0}
{"idx": 19529, "func": "Check for existing method", "target": 0}
{"idx": 19530, "func": "i18n[I18n.generateTemplateComments=Generate template comments for missing translations]", "target": 0}
{"idx": 19531, "func": "//{{{ Debug code", "target": 0}
{"idx": 19532, "func": "------------------------------------------------------ Helper methods - should be in BuildFileTest -----------------------------------------------------", "target": 0}
{"idx": 19533, "func": "public id", "target": 0}
{"idx": 19534, "func": "Select those Features which are BehavioralFeatures", "target": 0}
{"idx": 19535, "func": "Request validation $NON-NLS-1$", "target": 0}
{"idx": 19536, "func": "//{{{ Install constructor", "target": 0}
{"idx": 19537, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsUnionAll()", "target": 0}
{"idx": 19538, "func": "ThreadStarter is daemon, but we don't want sampler threads to be so too", "target": 0}
{"idx": 19539, "func": "AF_INET", "target": 0}
{"idx": 19540, "func": "line 432", "target": 0}
{"idx": 19541, "func": "TODO: implement this - show some documentation?", "target": 1}
{"idx": 19542, "func": "NULL value -> insert point on base line instead of 'step point'", "target": 0}
{"idx": 19543, "func": "//getResultList(results);", "target": 0}
{"idx": 19544, "func": "TODO: This is an freopen in MRI, this is close, but not quite the same", "target": 1}
{"idx": 19545, "func": "get selected message UID", "target": 0}
{"idx": 19546, "func": "RDMS does not directly support the trim() function, we use rtrim() and ltrim()", "target": 1}
{"idx": 19547, "func": "add a value to the second series", "target": 0}
{"idx": 19548, "func": "it's not set, lets check if the user passed proxy host and port from command line", "target": 0}
{"idx": 19549, "func": "//i18n[PluginSummaryDialog.unload=Unload]", "target": 0}
{"idx": 19550, "func": "Copy all property values from the map into the element:", "target": 0}
{"idx": 19551, "func": "the number of non extreme nodes is the number of intervals minus 1, i.e. the length of r minus 2", "target": 0}
{"idx": 19552, "func": "Used to enclose variable name labels, to distinguish from any of the above labels $NON-NLS-1$", "target": 0}
{"idx": 19553, "func": "//{{{ loadHistory() method", "target": 0}
{"idx": 19554, "func": "\"CREATE SEQUENCE $sequenceName$ \" + \"$increment$ $startWith$ $minimum$ $maximum$ $cache$ $cycle$\";", "target": 0}
{"idx": 19555, "func": "create a panel with a BoxLayout. Can't use Box here because Box doesn't have setBorder().", "target": 0}
{"idx": 19556, "func": "TODO does not appear to be used", "target": 1}
{"idx": 19557, "func": "//{{{ getRegexp() method", "target": 0}
{"idx": 19558, "func": "//setBorder(BorderFactory.createEmptyBorder(2, 4, 2, 4));", "target": 0}
{"idx": 19559, "func": "Not a real sampler", "target": 0}
{"idx": 19560, "func": "we do preand post load outside the \"body\" versions to pre-prepare and pre-push the dynamic scope we need for lastline", "target": 0}
{"idx": 19561, "func": "//{{{ Paint token backgrounds", "target": 0}
{"idx": 19562, "func": "store id", "target": 0}
{"idx": 19563, "func": "i18n[hashtabledataset.unsupported=<Unsupported>]", "target": 0}
{"idx": 19564, "func": "tfMailFrom.setEnabled(true); tfMailTo.setEnabled(true); tfMailToCC.setEnabled(true); tfMailToBCC.setEnabled(true); tfSubject.setEnabled(true);", "target": 0}
{"idx": 19565, "func": "//private Comparable key;", "target": 0}
{"idx": 19566, "func": "//{{{ lineInStructureScope() method", "target": 0}
{"idx": 19567, "func": "No color is a good default. //", "target": 0}
{"idx": 19568, "func": "Add UDT parent node.", "target": 0}
{"idx": 19569, "func": "and write them to our output stream", "target": 0}
{"idx": 19570, "func": "it isn't possible to undo whatever the script did", "target": 0}
{"idx": 19571, "func": "use setParameter for null values", "target": 0}
{"idx": 19572, "func": "Does this method define code? Default is yes -- which basically leads to pessimistic but safe optimizations But, for library and internal methods, this might be false.", "target": 0}
{"idx": 19573, "func": "For closures, a redo is a jump to the beginning of the closure For non-closures, a redo is a jump to the beginning of the loop", "target": 0}
{"idx": 19574, "func": "Default notation settings", "target": 0}
{"idx": 19575, "func": "//{{{ toUpperCase() method", "target": 0}
{"idx": 19576, "func": "local variables | this | callback |", "target": 0}
{"idx": 19577, "func": "//{{{ getMarkerInRange() method", "target": 0}
{"idx": 19578, "func": "//{{{ Plugin management methods", "target": 0}
{"idx": 19579, "func": "Create helpers to cache and supply information for unique naming", "target": 0}
{"idx": 19580, "func": "Tell how many files were checked out.", "target": 0}
{"idx": 19581, "func": "set whether the model should handle html or plain text", "target": 0}
{"idx": 19582, "func": "Note: Registry based authority is being removed from a new spec for URI which would obsolete RFC 2396. If the spec is added to XML errata, processing of reg_name needs to be removed. - mrglavas.", "target": 1}
{"idx": 19583, "func": "@see javax.swing.event.MenuListener#menuSelected(javax.swing.event.MenuEvent)", "target": 0}
{"idx": 19584, "func": "For feature maps, test that the entry feature is a valid type, that the entry value is an instance of it, that there is not already something in a document root, and that there is not already something in a single-valued entry feature. //", "target": 0}
{"idx": 19585, "func": "i18n[LogPanel.titleUnknown=Last log entry (Entry type: Unknown)]", "target": 0}
{"idx": 19586, "func": "//private JLabel lblTitle = new JLabel();", "target": 0}
{"idx": 19587, "func": "The main list for window.", "target": 0}
{"idx": 19588, "func": "MClassifiers cannot be Bag", "target": 0}
{"idx": 19589, "func": "//\"org.argouml.cognitive.critics\",", "target": 0}
{"idx": 19590, "func": "patch submitted by forum user Turbo Chen FIXED: user wasn't able to enter chinese text in Composer Subject textfield", "target": 0}
{"idx": 19591, "func": "if we have an in file and out then process them", "target": 0}
{"idx": 19592, "func": "backwards compatibility...", "target": 0}
{"idx": 19593, "func": "try block is a hack around fact that currently tuplizers are not given the opportunity to resolve a subclass entity name. this allows the (we assume custom) interceptor the ability to influence this decision if we were not able to based on the given entityName", "target": 1}
{"idx": 19594, "func": "Adding Titles ----------------------------------------------------------", "target": 0}
{"idx": 19595, "func": "draw the title and subtitles...", "target": 0}
{"idx": 19596, "func": "//{{{ setFractionalFontMetricsEnabled() method", "target": 0}
{"idx": 19597, "func": "since the base name file exists, we need to skip it and bump up the endIndex", "target": 0}
{"idx": 19598, "func": "tmp inputstream needs to have a good counting", "target": 0}
{"idx": 19599, "func": "//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char", "target": 0}
{"idx": 19600, "func": "ramp-up delay (except first)", "target": 0}
{"idx": 19601, "func": "clear results table before filling", "target": 0}
{"idx": 19602, "func": "Different than the Edit and Editor projects, this method is invoked while generating the model plugin xml.", "target": 0}
{"idx": 19603, "func": "Initializing the Character Flag Array Code generated by: XMLCharGenerator.", "target": 0}
{"idx": 19604, "func": "////Popup Menus ////////", "target": 0}
{"idx": 19605, "func": "must not be used in UML2; we model a method as a OpaqueBehavior object that already has a body, so there is no need to have an intermediate expression object", "target": 0}
{"idx": 19606, "func": "Read the entity name, and prepend '%' if necessary.", "target": 0}
{"idx": 19607, "func": "//{{{ run() method", "target": 0}
{"idx": 19608, "func": "TODO: We may return the following when the relocate() has been implemented.", "target": 0}
{"idx": 19609, "func": "//Class/basicGetGenFeature.todo.override.javajetinc", "target": 0}
{"idx": 19610, "func": "find prefix in current context", "target": 0}
{"idx": 19611, "func": "// public static JDBCException newJDBCException(String string, SQLException root, String sql) { // string = string + \" [\" + sql + ']'; // log.error(string, root); // logExceptions(root); // return new JDBCException(string, root, sql); // } // public static JDBCException newJDBCException(String string, SQLException root) { // log.error(string, root); // logExceptions(root); // return new JDBCException(string, root); // }", "target": 0}
{"idx": 19612, "func": "D:\\WINDOWS, or doesn't contain : at all", "target": 0}
{"idx": 19613, "func": "do one or two passes", "target": 0}
{"idx": 19614, "func": "The classifier of an references's generic type must be a class. //", "target": 0}
{"idx": 19615, "func": "minutes", "target": 0}
{"idx": 19616, "func": "//full joins are not supported.. yet!", "target": 0}
{"idx": 19617, "func": "A container must be transient. //", "target": 0}
{"idx": 19618, "func": "//JAR source is required", "target": 0}
{"idx": 19619, "func": "create Panel containing the previous field", "target": 0}
{"idx": 19620, "func": "forward jump", "target": 0}
{"idx": 19621, "func": "there's more to be handled, which still need to be implemented:", "target": 1}
{"idx": 19622, "func": "string doesn't share any resources", "target": 0}
{"idx": 19623, "func": "no paths: keep query only", "target": 0}
{"idx": 19624, "func": "The DNAME which is used if none is provided $NON-NLS-1$", "target": 0}
{"idx": 19625, "func": "Use getShortLabel() so labels longer then 30 char are truncated and the user is warned", "target": 0}
{"idx": 19626, "func": "Kick of a Java build if not already in a build. //", "target": 0}
{"idx": 19627, "func": "notify all interested listeners", "target": 0}
{"idx": 19628, "func": "create config-folder", "target": 0}
{"idx": 19629, "func": "row 1: antialiasing", "target": 0}
{"idx": 19630, "func": "notifyListeners(new ModelChangedEvent(ModelChangedEvent.ADDED, server));", "target": 0}
{"idx": 19631, "func": "TODO: This should listen for file save events - tfm", "target": 1}
{"idx": 19632, "func": "Add an invisible button to be used when everything is off", "target": 0}
{"idx": 19633, "func": "Tell hibernate to use getBytes instead of getBinaryStream", "target": 0}
{"idx": 19634, "func": "Initialize the globalFileSet's project", "target": 0}
{"idx": 19635, "func": "Listen for GUI components being created.", "target": 0}
{"idx": 19636, "func": "Establish the region root node with a non-locking data version", "target": 0}
{"idx": 19637, "func": "Per Patrick Beard:", "target": 0}
{"idx": 19638, "func": "inlined: bsW(len_selCtr[sfmap_i] & 0xff, code_selCtr[sfmap_i]); //", "target": 0}
{"idx": 19639, "func": "Otherwise the unpack should be here...", "target": 0}
{"idx": 19640, "func": "get source folder", "target": 0}
{"idx": 19641, "func": "if the rows do not match 1-for-1 to DB, ask user if they really want to do delete", "target": 0}
{"idx": 19642, "func": "Is it already locked from locker ?", "target": 0}
{"idx": 19643, "func": "$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$", "target": 0}
{"idx": 19644, "func": "Some JDBC drivers erroneously return an empty array here for a null DB value :/", "target": 0}
{"idx": 19645, "func": "//DialogSupport.setDialogFactory(new NbDialogSupport());", "target": 0}
{"idx": 19646, "func": "Take care of any entities that might have been evicted!", "target": 0}
{"idx": 19647, "func": "Cf Mn Mc", "target": 0}
{"idx": 19648, "func": "Save our old boundaries so it can be used in property message later", "target": 0}
{"idx": 19649, "func": "Trigger synchronization of the IMAPFolder", "target": 0}
{"idx": 19650, "func": "difficult case, send to Double/FloatingDecimal", "target": 0}
{"idx": 19651, "func": "Note: if is == null, the arrays will be empty", "target": 0}
{"idx": 19652, "func": "Make intermediate directories if needed XXX JDK 1.1 doesn't have File.getParentFile,", "target": 0}
{"idx": 19653, "func": "(non-Javadoc) @see org.columba.mail.folder.headercache.HeaderList#update(java.lang.Object, org.columba.mail.message.IColumbaHeader)", "target": 0}
{"idx": 19654, "func": "computes interpolation coefficients", "target": 0}
{"idx": 19655, "func": "TODO is this a sensible number? //$NON-NLS-1$", "target": 1}
{"idx": 19656, "func": "register resolvers set via Environment property", "target": 0}
{"idx": 19657, "func": "get the lastest pixel", "target": 0}
{"idx": 19658, "func": "FNFException can be thrown in both cases, when the file is not found, or when permission is denied.", "target": 0}
{"idx": 19659, "func": "line 817", "target": 0}
{"idx": 19660, "func": "///////////////////////////////////////////////////////////////////////////This theme was presented to SQuirreL by Karsten Lentzsch of jgoodies.com. It is SQuirreL's default theme if the LAF plugin is not used. Here we make the AllBluesBoldMetalTheme also available within the LAF plugin. Thanks a lot Karsten.", "target": 0}
{"idx": 19661, "func": "TODO: We may return something useful when the relocate() has been implemented.", "target": 0}
{"idx": 19662, "func": "//{{{ PaintSelection class", "target": 0}
{"idx": 19663, "func": "notify all listeners that new search results arrived", "target": 0}
{"idx": 19664, "func": "(non-Javadoc) @see org.columba.core.profiles.IProfileManager#getCurrentProfile()", "target": 0}
{"idx": 19665, "func": "Sanity check our inputs.", "target": 0}
{"idx": 19666, "func": "Contains the items needed to collect stats for a summariser", "target": 0}
{"idx": 19667, "func": "return struc.getOwner().getNamespace().getOwnedElement().contains( struc.getType());", "target": 0}
{"idx": 19668, "func": "// register for status events", "target": 0}
{"idx": 19669, "func": "upPaint", "target": 0}
{"idx": 19670, "func": "SelectorContainer methods", "target": 0}
{"idx": 19671, "func": "Remove initial empty entry", "target": 0}
{"idx": 19672, "func": "line 1854", "target": 0}
{"idx": 19673, "func": "check for overflow too", "target": 0}
{"idx": 19674, "func": "If a message has a name and a named operation and an empty script, then show the operation:", "target": 0}
{"idx": 19675, "func": "check a list containing a non-Number object", "target": 0}
{"idx": 19676, "func": "Show tip of the day", "target": 0}
{"idx": 19677, "func": "MultiplicityElement is now an interface implemented by element types that support multiplicities - tfm", "target": 0}
{"idx": 19678, "func": "Add to the collection and round to look at the next one", "target": 0}
{"idx": 19679, "func": "We are processing XML Assume XStream", "target": 0}
{"idx": 19680, "func": "incompatable (blee/all)", "target": 0}
{"idx": 19681, "func": "The following two boolean checks were tacked on. This could probably be smoothed out.", "target": 1}
{"idx": 19682, "func": "?G | boolean | True if file1 exists and has a group ownership equal to the caller's group", "target": 0}
{"idx": 19683, "func": "First check aliases", "target": 0}
{"idx": 19684, "func": "ArgoEventPump is an event dispatcher which handles events that are global in nature for the entire application. <p> TODO: DiagramAppearance and Notation events are not application-wide and will be moved from here to someplace more specific in the future so that they can be managed on a per-project or per-diagram basis.", "target": 1}
{"idx": 19685, "func": "specifies valid elements for a Model to contain", "target": 0}
{"idx": 19686, "func": "If this fails, then there is a problem... dthompson 29/12/2008: It seems that the returned value is irrelevant here, so I assume that the purpose of this call is just to throw an exception in case of a problem.", "target": 0}
{"idx": 19687, "func": "i18n[sqlscript.tableScriptOk=OK]", "target": 0}
{"idx": 19688, "func": "//should not occur, otherwise the static initializer should have thrown a RuntimeException", "target": 0}
{"idx": 19689, "func": "add message to folder", "target": 0}
{"idx": 19690, "func": "(Comment 16, Huw)", "target": 0}
{"idx": 19691, "func": "prefix not found", "target": 0}
{"idx": 19692, "func": "First read in zero bytes", "target": 0}
{"idx": 19693, "func": "//////////////constructor", "target": 0}
{"idx": 19694, "func": "getInsertIntoSQL", "target": 0}
{"idx": 19695, "func": "maybe we have a modelelement that is part of some other fig", "target": 0}
{"idx": 19696, "func": "////////////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 19697, "func": "CREATE [UNIQUE] [ASC[ENDING] | DESC[ENDING]] INDEX index ON table (col [, col …]);", "target": 0}
{"idx": 19698, "func": "//{{{ HelpNode constructor", "target": 0}
{"idx": 19699, "func": "Get the bucket.", "target": 0}
{"idx": 19700, "func": "now try to reject equality", "target": 0}
{"idx": 19701, "func": "TODO: Split this into two sub-classes so that name and constNode can be specified seperately.", "target": 1}
{"idx": 19702, "func": "i18n[SQLFilterSheet.okButtonLabel=OK]", "target": 0}
{"idx": 19703, "func": "//{{{ Occur constructor", "target": 0}
{"idx": 19704, "func": "empty line, means new contactcard", "target": 0}
{"idx": 19705, "func": "line 1542", "target": 0}
{"idx": 19706, "func": "Creating a filter that catches directories.", "target": 0}
{"idx": 19707, "func": "//reset the dotcount (but not the path) //after reset!", "target": 0}
{"idx": 19708, "func": "//what is the version on the database?", "target": 0}
{"idx": 19709, "func": "cast the params", "target": 0}
{"idx": 19710, "func": "Add the query string if it is a HTTP GET or DELETE request", "target": 0}
{"idx": 19711, "func": "Testing: Add a parameter to an operation on an Interface. Does the Interface Fig adapt its width?", "target": 0}
{"idx": 19712, "func": "first char must be digit or decimal point", "target": 0}
{"idx": 19713, "func": "line 1755", "target": 0}
{"idx": 19714, "func": "The arguments, type parameters, lower bounds and upper bounds must be equal type arguments. //", "target": 0}
{"idx": 19715, "func": "//}}} //{{{ Right...", "target": 0}
{"idx": 19716, "func": "we have an input case, prepare branching logic", "target": 0}
{"idx": 19717, "func": "i18n[oracle.explainPlan=Explain Plan]", "target": 0}
{"idx": 19718, "func": "(NOT (GT a b) ) => (LE a b)", "target": 0}
{"idx": 19719, "func": "don't want to compare directory contents for now", "target": 0}
{"idx": 19720, "func": "cryptic for the uninitiated...", "target": 0}
{"idx": 19721, "func": "(non-Javadoc) @see org.columba.calendar.store.api.IStoreListener#itemChanged(org.columba.calendar.store.api.StoreEvent)", "target": 0}
{"idx": 19722, "func": "Will be null if StopTest thread has started", "target": 0}
{"idx": 19723, "func": "seems to be the same...", "target": 0}
{"idx": 19724, "func": "If this session doesn't share SQL history with other sessions then disable the controls that relate to SQL History.", "target": 0}
{"idx": 19725, "func": "Make sure no duplicates are kept in history.", "target": 0}
{"idx": 19726, "func": "check if its a contact component", "target": 0}
{"idx": 19727, "func": "Fall back to GEF's handling if we couldn't find an appropriate constructor", "target": 0}
{"idx": 19728, "func": "///////////////////////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 19729, "func": "Allow for some margin of error Check that the throughput uses the time elapsed for the sub results", "target": 0}
{"idx": 19730, "func": "aggregate when nodes into a list, unfortunately, this is no", "target": 0}
{"idx": 19731, "func": "truncate string", "target": 0}
{"idx": 19732, "func": "this method assumes UTF-8 input data", "target": 0}
{"idx": 19733, "func": "---- nicknameLabel ----", "target": 0}
{"idx": 19734, "func": "End of method divideMessage", "target": 0}
{"idx": 19735, "func": "second account item", "target": 0}
{"idx": 19736, "func": "necessary for the message-frame only", "target": 0}
{"idx": 19737, "func": "//- JMX entries", "target": 0}
{"idx": 19738, "func": "//{{{ inputProperty() method", "target": 0}
{"idx": 19739, "func": "N.B. Context needs to be fetched in the correct thread", "target": 0}
{"idx": 19740, "func": "FIXME FACTOR WITH HTTPHC4Impl, HTTPHC3Impl Just append all the parameter values, and use that as the post body", "target": 1}
{"idx": 19741, "func": "builder.setValidation(true);", "target": 0}
{"idx": 19742, "func": "Model.getExtensionMechanismsFactory().buildTaggedValue( tagName, new String[] {\"true\"}, Model.getFacade().getRoot(umlObject));", "target": 0}
{"idx": 19743, "func": "@see org.argouml.notation.providers.NotationProvider#parse( java.lang.Object, java.lang.String)", "target": 0}
{"idx": 19744, "func": "real test", "target": 0}
{"idx": 19745, "func": "modelImpl.getFacade().getRootElements() gets all root elements in the UML repository, including available profiles that are not part of the current project (degrades performance). ProjectManager.getManager().getCurrentProject().getRoots() only returns user model roots, and no profiles. ProjectManager.getManager().getCurrentProject().getModels() gets all root models, but no root namespaces. TODO: Which is best? Is there any other way?", "target": 1}
{"idx": 19746, "func": "Property types", "target": 0}
{"idx": 19747, "func": "TABLE", "target": 0}
{"idx": 19748, "func": "are there any java files in this directory?", "target": 0}
{"idx": 19749, "func": "This needs to be a concrete metatype, so we can't use the general, but abstract, Classifier. Replace with its concrete subtypes.", "target": 0}
{"idx": 19750, "func": "Convert: \\n to line separator", "target": 0}
{"idx": 19751, "func": "FIXME: DSTR,EVSTR,STR: warning \"string literal in condition\"", "target": 0}
{"idx": 19752, "func": "Sent folder", "target": 0}
{"idx": 19753, "func": "skip the first column", "target": 0}
{"idx": 19754, "func": "Sanity check - the returned path item placement strategy should match the one in the UML. If it doesn't, it could be that the UML was created with an older argo version, and the new argo version use a different placement strategy. If they don't match, just use the default.", "target": 0}
{"idx": 19755, "func": "JPanel panel= new JPanel(); panel.setLayout(new BorderLayout()); panel.add(resetButton, BorderLayout.EAST); builder.add(panel, cc.xywh(5, 7, 1, 1));", "target": 0}
{"idx": 19756, "func": "this is a rather ugly hack, but similar to MRI. See hash.c:ruby_setenv and similar in MRI we search all keys for a case-insensitive match, and use that", "target": 1}
{"idx": 19757, "func": "//bottomPanel.add(closeButton);", "target": 0}
{"idx": 19758, "func": "call the DataType object for this column and have it check the current value", "target": 0}
{"idx": 19759, "func": "see above", "target": 0}
{"idx": 19760, "func": "If a sibling has been specified, add the best index possible to each CommandParameter. //", "target": 0}
{"idx": 19761, "func": "//if small log values and lower bound value too small then set to a small value (don't allow <= 0):", "target": 0}
{"idx": 19762, "func": "i18n[DBUtil.error.maptype=Couldn't map type for table='{0}' column='{1}']", "target": 0}
{"idx": 19763, "func": "found \"${\"", "target": 0}
{"idx": 19764, "func": "We do not want to diagnose any errors that have already been diagnosed by a super type. Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //", "target": 0}
{"idx": 19765, "func": "check for series key out of bounds", "target": 0}
{"idx": 19766, "func": "chart title data include legend", "target": 0}
{"idx": 19767, "func": "i18n[oracle.execution=Executions]", "target": 0}
{"idx": 19768, "func": "probably a primitive", "target": 0}
{"idx": 19769, "func": "Ignore a whitespace only text entry at the beginning. //", "target": 0}
{"idx": 19770, "func": "TODO: joinKeyColumnName & foreignKeyColumnName should be called either here or at a slightly higer level in the stack (to get all the information we need) Right now HbmBinder does not support the", "target": 1}
{"idx": 19771, "func": "TODO Hack that should be removed.", "target": 1}
{"idx": 19772, "func": "end class SpacerPanel", "target": 0}
{"idx": 19773, "func": "i18n[mssql.allSps=All stored procedures]", "target": 0}
{"idx": 19774, "func": "theDetailsPane.getNamedTab(Translator.localize(\"tab.properties\"));", "target": 0}
{"idx": 19775, "func": "defer argument checking", "target": 1}
{"idx": 19776, "func": "updates current stack size (max stack size unchanged because stack size variation always negative or null)", "target": 0}
{"idx": 19777, "func": "//i18n[CreateDriverAction.error.selectingwindow=Error selecting window]", "target": 0}
{"idx": 19778, "func": "baseSectionPaint", "target": 0}
{"idx": 19779, "func": "Ruby ignores empty syswrites", "target": 0}
{"idx": 19780, "func": "//setup for \"1e#\"-style tick labels or regular numeric tick labels, depending on flag:", "target": 0}
{"idx": 19781, "func": "TODO ? if this class listen the model, it will be able to change in live as it is done in the figs (diagram)", "target": 1}
{"idx": 19782, "func": "clear body or next result after each successful loop", "target": 0}
{"idx": 19783, "func": "raise will also wake the thread from selection", "target": 0}
{"idx": 19784, "func": "Both numeric wrapper types? Try numeric style promotion wrapper cast", "target": 0}
{"idx": 19785, "func": "don't let anyone draw outside the data area", "target": 0}
{"idx": 19786, "func": "decode using default charset", "target": 0}
{"idx": 19787, "func": "sanity check ourselves, if we've been asked to build nothing then we should complain", "target": 0}
{"idx": 19788, "func": "DROP VIEW viewName CASCADE;", "target": 0}
{"idx": 19789, "func": "Classnames must contain this string [.functions.] $NON-NLS-1$ Classnames must not contain this string [.gui.] $NON-NLS-1$", "target": 0}
{"idx": 19790, "func": "avoid endless loop", "target": 0}
{"idx": 19791, "func": "N.B. Stop reading the file if we get a blank line: This allows for trailing comments in the file", "target": 0}
{"idx": 19792, "func": "change a series outline stroke", "target": 0}
{"idx": 19793, "func": "$n is 1-indexed, but vector contents is zero indexed", "target": 0}
{"idx": 19794, "func": "The first case is the most common case. It is slightly cheaper to call add without an index since an index will be range checked.", "target": 0}
{"idx": 19795, "func": "I guess not...", "target": 0}
{"idx": 19796, "func": "set constants now that they're initialized", "target": 0}
{"idx": 19797, "func": "Authorization", "target": 0}
{"idx": 19798, "func": "TODO: Huge side effect. Hoist out of parse - tfm let's load the project", "target": 1}
{"idx": 19799, "func": "apply additional edits like replacing or commenting out nodes //", "target": 0}
{"idx": 19800, "func": "safer to start afresh", "target": 0}
{"idx": 19801, "func": "If moved into an Package", "target": 0}
{"idx": 19802, "func": "FIXME: finalizer should be dupped here", "target": 1}
{"idx": 19803, "func": "next line does give user.home back but this is not compliant with how the project.uri works and therefore open and save project as give different starting directories. String directory = Globals.getLastDirectory();", "target": 0}
{"idx": 19804, "func": "Don't create anything.", "target": 0}
{"idx": 19805, "func": "getFoo => foo getFoo(int) => foo(int)", "target": 0}
{"idx": 19806, "func": "INBOX is always subscribed", "target": 0}
{"idx": 19807, "func": "Make sure it isn't caching anything that should be written", "target": 0}
{"idx": 19808, "func": "//{{{ mouseClicked() method", "target": 0}
{"idx": 19809, "func": "Read it back in to a new empty project", "target": 0}
{"idx": 19810, "func": "@see org.argouml.uml.diagram.ui.VisibilityContainer#isVisibilityVisible()", "target": 0}
{"idx": 19811, "func": "start switch", "target": 0}
{"idx": 19812, "func": "i18n[OracleAliasPrefsPanel.All=Allow all Schemas]", "target": 0}
{"idx": 19813, "func": "NOTUSED yet private JTextField filename;", "target": 1}
{"idx": 19814, "func": "Set the overall status for the transaction sample TODO: improve, e.g. by adding counts to the SampleResult class", "target": 1}
{"idx": 19815, "func": "bingo append it. (this should normally not be done here)", "target": 1}
{"idx": 19816, "func": "not supported in JDOM", "target": 0}
{"idx": 19817, "func": "Set details from the actual response Needs to be done before response can be stored", "target": 0}
{"idx": 19818, "func": "private ButtonGroup actionButtons;", "target": 0}
{"idx": 19819, "func": "//{{{ updateBorder() method", "target": 0}
{"idx": 19820, "func": "//////////////////////////////////////////////////////////////constants //////////////////////////////////////////////////////////////instance variables", "target": 0}
{"idx": 19821, "func": "static initializing method", "target": 0}
{"idx": 19822, "func": "so the transaction is already rolled back, by JTA spec", "target": 0}
{"idx": 19823, "func": "format: \"DEVICE:[DIR.SUBDIR]FILE\"", "target": 0}
{"idx": 19824, "func": "TBLRC 10011 - top, right and center", "target": 0}
{"idx": 19825, "func": "@see java.util.List#remove(int)", "target": 0}
{"idx": 19826, "func": "Use JUnit 3.", "target": 0}
{"idx": 19827, "func": "then c is a \"normal\" Classifier UML states", "target": 0}
{"idx": 19828, "func": "drawCloseTicks", "target": 0}
{"idx": 19829, "func": "Used during optimization passes to propagate type and other information", "target": 0}
{"idx": 19830, "func": "to be consistent with other Graphics2D implementations", "target": 0}
{"idx": 19831, "func": "p1.add(l_month);", "target": 0}
{"idx": 19832, "func": "//case Notification.REMOVE:", "target": 0}
{"idx": 19833, "func": "optional String-based attribute", "target": 0}
{"idx": 19834, "func": "Helper method for use by scripts", "target": 0}
{"idx": 19835, "func": "Add the standard title", "target": 0}
{"idx": 19836, "func": "this is where we'll get connected when classes are opened using package module syntax.", "target": 0}
{"idx": 19837, "func": "//{{{ beginCompoundEdit() method", "target": 0}
{"idx": 19838, "func": "---- titleTextField ----", "target": 0}
{"idx": 19839, "func": "Implementation version must be >= required", "target": 0}
{"idx": 19840, "func": "update menu if tags are changed", "target": 0}
{"idx": 19841, "func": "must be null in checkOnly", "target": 0}
{"idx": 19842, "func": "datagram, set accordingly again, AF_INET", "target": 0}
{"idx": 19843, "func": "Called when the user has pressed Save. Performs \"Save\" in all Tabs.", "target": 0}
{"idx": 19844, "func": "Primitive (not null or void) to Object.class type", "target": 0}
{"idx": 19845, "func": "//{{{ KeyHandler class", "target": 0}
{"idx": 19846, "func": "//{{{ ensurePhysicalLineIsVisible() method", "target": 0}
{"idx": 19847, "func": "//|| context instanceof Collaboration //|| context instanceof Model", "target": 0}
{"idx": 19848, "func": "@see org.tigris.gef.graph.GraphModel#getPorts(java.lang.Object)", "target": 0}
{"idx": 19849, "func": "i18n[SybaseASEPlugin.title=SybaseASE]", "target": 0}
{"idx": 19850, "func": "remember old font properties", "target": 0}
{"idx": 19851, "func": "Store the guard, i.e. condition or iteration expression, in the recurrence field of the Action:", "target": 0}
{"idx": 19852, "func": "Set the width, height and image type", "target": 0}
{"idx": 19853, "func": "//wallPaint;", "target": 0}
{"idx": 19854, "func": "Will throw MissingResourceException if key is not there.", "target": 0}
{"idx": 19855, "func": "needed for hibernate!", "target": 0}
{"idx": 19856, "func": "//TODO: can we always use the \"null property\" approach for everything?", "target": 1}
{"idx": 19857, "func": "//i18n[syntax.operators=Operators]", "target": 0}
{"idx": 19858, "func": "FIXME: we've cloned the chart, but the dataset(s) aren't cloned and we should do that", "target": 1}
{"idx": 19859, "func": "for STRING", "target": 0}
{"idx": 19860, "func": "//i18n[CSVSettingsPanel.seperatorCharToolTip=Specify the character that is used to seperate the columns in this file (e.g. ',' or ';')]", "target": 0}
{"idx": 19861, "func": "//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$", "target": 0}
{"idx": 19862, "func": "basically just an adapted copy of find(CriteriaImpl)", "target": 0}
{"idx": 19863, "func": "protected Command createSetCommand(EditingDomain domain, Object owner, Object feature, Object value) { return ((IEditingDomainItemProvider)decoratedItemProvider).createCommand (owner, domain, SetCommand.class, new CommandParameter(owner, feature, value)); } protected Command createCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper) { return ((IEditingDomainItemProvider)decoratedItemProvider).createCommand (owner, domain, CopyCommand.class, new CommandParameter(owner, null, helper)); } protected Command createCreateCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper) { return ((IEditingDomainItemProvider)decoratedItemProvider).createCommand (owner, domain, CreateCopyCommand.class, new CommandParameter(owner, null, helper)); } protected Command createInitializeCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper) { return ((IEditingDomainItemProvider)decoratedItemProvider).createCommand (owner, domain, InitializeCopyCommand.class, new CommandParameter(owner, null, helper)); } protected Command createRemoveCommand(EditingDomain domain, Object owner, Object feature, Collection collection) { return ((IEditingDomainItemProvider)decoratedItemProvider).createCommand (owner, domain, RemoveCommand.class, new CommandParameter(owner, feature, collection)); } protected Command createReplaceCommand(EditingDomain domain, Object owner, Object feature, Object value, Collection collection) { return ((IEditingDomainItemProvider)decoratedItemProvider).createCommand (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, collection)); } protected Command createAddCommand(EditingDomain domain, Object owner, Object feature, Collection collection, int index) { return ((IEditingDomainItemProvider)decoratedItemProvider).createCommand (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, collection, index)); } protected Command createMoveCommand(EditingDomain domain, Object owner, Object feature, Object value, int index) { return ((IEditingDomainItemProvider)decoratedItemProvider).createCommand (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, index)); } protected Command createDragAndDropCommand (EditingDomain domain, Object owner, float location, int operations, int operation, Collection collection) { DragAndDropCommand.Detail detail = new DragAndDropCommand.Detail(location, operations, operation); return ((IEditingDomainItemProvider)decoratedItemProvider).createCommand (owner, domain, DragAndDropCommand.class, new CommandParameter(owner, detail, collection)); }", "target": 0}
{"idx": 19864, "func": "Relative filenames", "target": 0}
{"idx": 19865, "func": "//weblogic.ejbc.main(newArgs);", "target": 0}
{"idx": 19866, "func": "Instantiate the sampler", "target": 0}
{"idx": 19867, "func": "Performs critique asap. @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)", "target": 0}
{"idx": 19868, "func": "Fill 31 of value (byte) -19 Fill 2 of value (byte) 33 Fill 53 of value (byte) -19", "target": 0}
{"idx": 19869, "func": "Convert to MessageOptions", "target": 0}
{"idx": 19870, "func": "Execute the script", "target": 0}
{"idx": 19871, "func": "yOutliers can be null, but we'd prefer it to be an empty list in that case...", "target": 0}
{"idx": 19872, "func": "It's illegal in UML to have multiple elements in a namespace with the same name, but if it happens, keep them distinct so the user has a chance of catching the error. Pick an arbitrary, but stable, collating order. We don't call them equal because otherwise one will get eliminated from the TreeSet where this comparator is used.", "target": 0}
{"idx": 19873, "func": "//TestCase/setGenFeature.todo.override.javajetinc", "target": 0}
{"idx": 19874, "func": "Refresh any actions that may become enabled or disabled. //", "target": 0}
{"idx": 19875, "func": "Just change the Name and linked signal", "target": 0}
{"idx": 19876, "func": "//Legal Key-Value separators are :, = and white space.", "target": 0}
{"idx": 19877, "func": "if the added edge is a Create Message it will affect the position of the ClassifierRole so it should be repositioned", "target": 0}
{"idx": 19878, "func": "i18n[UpdatePreferencesPanel.updateSiteBorderLabel=Update Site]", "target": 0}
{"idx": 19879, "func": "//calculate ceil using negative value:", "target": 0}
{"idx": 19880, "func": "Put all static package in the package registry. //", "target": 0}
{"idx": 19881, "func": "//- JMX field names", "target": 0}
{"idx": 19882, "func": "Find parent controllers of current sampler", "target": 0}
{"idx": 19883, "func": "here)", "target": 0}
{"idx": 19884, "func": "trim the column name in case of HADB", "target": 0}
{"idx": 19885, "func": "//get log10 version of lower bound and round to integer:", "target": 0}
{"idx": 19886, "func": "//protected JButton defaultButton;", "target": 0}
{"idx": 19887, "func": "i18n[PreferencesPanel.statementSeparatorLabel=Statement Separator]", "target": 0}
{"idx": 19888, "func": "only used by VirtualFolder", "target": 0}
{"idx": 19889, "func": "Token.CLOSURE", "target": 0}
{"idx": 19890, "func": "don't use standard XML formatting", "target": 0}
{"idx": 19891, "func": "////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 19892, "func": "//to be able to remove dep's later", "target": 0}
{"idx": 19893, "func": "Don't need to lock the cache here, since if someone else inserted the same pk first, the insert would fail", "target": 0}
{"idx": 19894, "func": "TODO: remove", "target": 1}
{"idx": 19895, "func": "//$NON-NLS-1$ //-- End of names used in JMX files", "target": 0}
{"idx": 19896, "func": "means counting from end", "target": 0}
{"idx": 19897, "func": "TODO: This doesn't perform well enough with large models to have it enabled by default. If the performance can't be improved, perhaps we can introduce a manual \"find in explorer tree\" action. selectAll(targets);", "target": 1}
{"idx": 19898, "func": "i18n[generalSessionPropertiesPanel.text=Text]", "target": 0}
{"idx": 19899, "func": "$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$", "target": 0}
{"idx": 19900, "func": "Fill 20 of value (byte) -19", "target": 0}
{"idx": 19901, "func": "//avoid error in ant task tests (good way?)", "target": 1}
{"idx": 19902, "func": "The other tabs need to be updated depending on the selection.", "target": 0}
{"idx": 19903, "func": "add conditions and more commands as soon as the need arises", "target": 0}
{"idx": 19904, "func": "TODO: This code effectively disables all inspection-based optimizations; none of them are 100% safe yet", "target": 1}
{"idx": 19905, "func": "HashMap to save ssl connection between Jmeter proxy and browser", "target": 0}
{"idx": 19906, "func": "JarIndex is sorting the directories by ascending order. it has no value but cosmetic since it will be read into a hashtable by the classloader, but we'll do so anyway.", "target": 0}
{"idx": 19907, "func": "//private LAFPreferences _prefs;", "target": 0}
{"idx": 19908, "func": "if it's no other arg, it may be the target", "target": 0}
{"idx": 19909, "func": "get message attributes", "target": 0}
{"idx": 19910, "func": "line 341", "target": 0}
{"idx": 19911, "func": "//buffer.readUnlock();", "target": 0}
{"idx": 19912, "func": "Either execute or redo the command, as appropriate. //", "target": 0}
{"idx": 19913, "func": "can't remove from existing one so create new one.", "target": 0}
{"idx": 19914, "func": "Weed out the empty files", "target": 0}
{"idx": 19915, "func": "Remove the old project first. It's wasteful to create a temp empty project, but too much of ArgoUML depends on having a current project", "target": 0}
{"idx": 19916, "func": "If they're the same length, check for a match. If the loop finishes, 'index' will contain the current bucket position.", "target": 0}
{"idx": 19917, "func": "Some systems have /bin/env, others /usr/bin/env, just try", "target": 0}
{"idx": 19918, "func": "TODO: Do we need this Generalization is not a named element", "target": 1}
{"idx": 19919, "func": "//{{{ _eval() method", "target": 0}
{"idx": 19920, "func": "does not occur", "target": 0}
{"idx": 19921, "func": "---- label2 ----", "target": 0}
{"idx": 19922, "func": "//not supported for this target", "target": 0}
{"idx": 19923, "func": "no default type for UML2", "target": 0}
{"idx": 19924, "func": "update all hierarchies into which this module has been included", "target": 0}
{"idx": 19925, "func": "cases 1, 2, 3 and 4", "target": 0}
{"idx": 19926, "func": "Init", "target": 0}
{"idx": 19927, "func": "300 codes tell client to do actions", "target": 0}
{"idx": 19928, "func": "If the provider was leeching off an existing pool don't close it", "target": 0}
{"idx": 19929, "func": "///////////////////////////////////////////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 19930, "func": "is this really necessary?", "target": 1}
{"idx": 19931, "func": "used for SPAN_REGEXP rules; otherwise null", "target": 0}
{"idx": 19932, "func": "should we re-use the last remembered selection?", "target": 0}
{"idx": 19933, "func": "TODO: this doesn't belong in the implementation specific piece - tfm", "target": 1}
{"idx": 19934, "func": "JControlModel.class is used with classNames that were not found //", "target": 0}
{"idx": 19935, "func": "If we redirected automatically, the URL may have changed", "target": 0}
{"idx": 19936, "func": "only gives the SQL without the Cascade/Restrict Constraint", "target": 0}
{"idx": 19937, "func": "//this.minimumRangeValue.addModifyListener(this); //this.minimumRangeValue.addVerifyListener(this);", "target": 0}
{"idx": 19938, "func": "re-register the descriptor", "target": 0}
{"idx": 19939, "func": "Never evict this node", "target": 0}
{"idx": 19940, "func": "do the delete and add the number of rows deleted to the count", "target": 0}
{"idx": 19941, "func": "// _mainSplitPane.add(getDesktopPane(), JSplitPane.RIGHT);", "target": 0}
{"idx": 19942, "func": "Re-arrange the tree so that the collection function is the root and the lhs is the path.", "target": 0}
{"idx": 19943, "func": "visible (gui) ------------------------------------------------------------------------ -- main", "target": 0}
{"idx": 19944, "func": "Show that can bypass encoding:", "target": 0}
{"idx": 19945, "func": "todo : this call will not work for anything other than pojos!", "target": 1}
{"idx": 19946, "func": "i18n[mssql.extProps=Include extended properties]", "target": 0}
{"idx": 19947, "func": "pass along target error", "target": 0}
{"idx": 19948, "func": "We do our own cookie handling", "target": 0}
{"idx": 19949, "func": "we found some extends attributes referencing entities which were not already processed. here we need to locate all entity-names and class-names contained in this document itself, making sure that these get removed from the extendz list such that only extends names which require us to delay processing (i.e. external to this document and not yet processed) are contained in the returned result", "target": 0}
{"idx": 19950, "func": "return the line number of the start of the node", "target": 0}
{"idx": 19951, "func": "closure instructions", "target": 0}
{"idx": 19952, "func": "init configuration", "target": 0}
{"idx": 19953, "func": "Can return null to represent the bootstrap class loader. see API docs of Class.getClassLoader.", "target": 0}
{"idx": 19954, "func": "TODO: Only setAccessible to account for pattern found by accessing constants included from a non-public interface. (aka java.util.zip.ZipConstants being implemented by many classes)", "target": 1}
{"idx": 19955, "func": "all this only really needs to consider properties of this class, not its subclasses, but since we are reusing code used for sequential selects, we use the subclass closure", "target": 0}
{"idx": 19956, "func": "Numbers and such.", "target": 0}
{"idx": 19957, "func": "Validate now since the call we make after will skip validating.", "target": 0}
{"idx": 19958, "func": "//{{{ substitute() method", "target": 0}
{"idx": 19959, "func": "//initialize + unwrap the object", "target": 0}
{"idx": 19960, "func": "//stroke", "target": 0}
{"idx": 19961, "func": "Normalize the current file", "target": 0}
{"idx": 19962, "func": "changing the selection to the first/last row based on ascending state", "target": 0}
{"idx": 19963, "func": "@see javax.swing.plaf.metal.MetalTheme#getPrimary2()", "target": 0}
{"idx": 19964, "func": "generateSchemaAction.setEnabled(generateSchemaAction.isEnabled());", "target": 0}
{"idx": 19965, "func": "The following query produces a result that should be editable, but it currently isn't", "target": 1}
{"idx": 19966, "func": "get next character", "target": 0}
{"idx": 19967, "func": "translate g to line up with origin of print area (trans 1)", "target": 0}
{"idx": 19968, "func": "we'll set this to false if there is at least one non-null data item...", "target": 0}
{"idx": 19969, "func": "superClass", "target": 0}
{"idx": 19970, "func": "i18n[mssql.msdos=MS-DOS text (OEM)]", "target": 0}
{"idx": 19971, "func": "initialize the members of \"seriesNames\" array so they won't be null:", "target": 0}
{"idx": 19972, "func": "Returns the target of this tab. @see org.argouml.ui.TabTarget#getTarget()", "target": 0}
{"idx": 19973, "func": "The referencedEPackages list is used to track the packages for which is necessary to create the stub GenModel. So if the ePackage is referenced by an existing GenPackage, it doesn't need to be added to referencedEPackages.", "target": 0}
{"idx": 19974, "func": "report error if something weird happens...this is diagnostic.", "target": 1}
{"idx": 19975, "func": "last is the top fig.", "target": 0}
{"idx": 19976, "func": "Attribute names and values. While the XML spec doesn't require preserving the order ( AFAIK ), some ant tests do rely on the exact order. The following code is copied from AttributeImpl. We could also just use SAX2 Attributes and convert to SAX1 ( DOM attribute Nodes can also be stored in SAX2 Attributes ) XXX under JDK 1.4 you can just use a LinkedHashMap for this purpose -jglick The only exception to this order is the treatment of refid. A number of datatypes check if refid is set when other attributes are set. This check will not work if the build script has the other attribute before the \"refid\" attribute, so now (ANT 1.7) the refid attribute will be processed first.", "target": 1}
{"idx": 19977, "func": "finally, what it's all about...", "target": 0}
{"idx": 19978, "func": "Ensure not null", "target": 0}
{"idx": 19979, "func": "switch if", "target": 0}
{"idx": 19980, "func": "line visible =", "target": 0}
{"idx": 19981, "func": "test inc() method", "target": 0}
{"idx": 19982, "func": "(NOT (BETWEEN a b) ) => (NOT_BETWEEN a b)", "target": 0}
{"idx": 19983, "func": "Check end of quote, skip closing quote: //", "target": 0}
{"idx": 19984, "func": "no whitespace", "target": 0}
{"idx": 19985, "func": "work out the mid angle (0 - 90 and 270 - 360) = right, otherwise left", "target": 0}
{"idx": 19986, "func": "Replace \"-15\" with Types.NCHAR when Java6 is the minimum supported version", "target": 0}
{"idx": 19987, "func": "Note: MRI has a very non-trivial way of calculating the precision, so we use very simple approximation here:", "target": 0}
{"idx": 19988, "func": "//enable XSD", "target": 0}
{"idx": 19989, "func": "? is there an xml api for this ?", "target": 0}
{"idx": 19990, "func": "PR 38370", "target": 0}
{"idx": 19991, "func": "add the fetched entities", "target": 0}
{"idx": 19992, "func": "//{{{ getSize() method", "target": 0}
{"idx": 19993, "func": "//{{{ isOS2() method", "target": 0}
{"idx": 19994, "func": "//{{{ getContextSensitiveProperty() method", "target": 0}
{"idx": 19995, "func": "Add Error Counter", "target": 0}
{"idx": 19996, "func": "drawingSupplier", "target": 0}
{"idx": 19997, "func": "//we ran out of keys to try", "target": 0}
{"idx": 19998, "func": "Bind 'normal' parameter values to the local scope for this method.", "target": 0}
{"idx": 19999, "func": "i18n[IndexDetailsTab.title=Details]", "target": 0}
{"idx": 20000, "func": "line 1462", "target": 0}
{"idx": 20001, "func": "two not existing files are equal", "target": 0}
{"idx": 20002, "func": "//{{{ if there is only one competion, insert in buffer", "target": 0}
{"idx": 20003, "func": "A HTTP POST request, multipart/form-data, simple values,", "target": 0}
{"idx": 20004, "func": "rename via Java API call wasn't successful, let's try some tricks, similar to MRI", "target": 0}
{"idx": 20005, "func": "//{{{ getPainter() method", "target": 0}
{"idx": 20006, "func": "nothing", "target": 0}
{"idx": 20007, "func": "//{{{ Anchor class", "target": 0}
{"idx": 20008, "func": "Check for the odd case where the terminator and/or filename extension aren't found. These will ensure \"jonas-\" appears at the end of the name and before the '.' (if present).", "target": 0}
{"idx": 20009, "func": "user's can't delete default account", "target": 0}
{"idx": 20010, "func": "Create file", "target": 0}
{"idx": 20011, "func": "dummy1 --> dummy2 --> dummy3 (which holds patterns \"include\" and \"exclude\")", "target": 0}
{"idx": 20012, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#tableCopyFinished(net.sourceforge.squirrel_sql.plugins.dbcopy.event.TableEvent)", "target": 0}
{"idx": 20013, "func": "Put the FILTERS node before the HQL condition and theta joins", "target": 0}
{"idx": 20014, "func": "This is just a marker interface.", "target": 0}
{"idx": 20015, "func": "Test sending data as UTF-8, with + as part of the value, where the value is set in sampler as not urluencoded, but the isalwaysencoded flag of the argument is set to false. This mimics the HTTPConstants.addNonEncodedArgument, which the Proxy server calls in some cases", "target": 0}
{"idx": 20016, "func": "User cannot be allowed to drop all columns from a table", "target": 0}
{"idx": 20017, "func": "short pseudocolumn", "target": 0}
{"idx": 20018, "func": "Only try to format if there is a number", "target": 0}
{"idx": 20019, "func": "this property belongs to the table, and it is not specifically excluded from optimistic locking by optimistic-lock=\"false\"", "target": 0}
{"idx": 20020, "func": "get the SendableMessage object", "target": 0}
{"idx": 20021, "func": "Todo: What?", "target": 0}
{"idx": 20022, "func": "//i18n[ArtifactStatus.coreLabel=core]", "target": 0}
{"idx": 20023, "func": "TODO: sys fail", "target": 1}
{"idx": 20024, "func": "ensure tzid matches date-time timezone.. Parameter tzId = dtEnd1.getParameters().getParameter( Parameter.TZID);", "target": 0}
{"idx": 20025, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.MetaDataDataSet#get(int)", "target": 0}
{"idx": 20026, "func": "statical import fields from the interface so that code inside can refer to the fields directly (e.g. HEIGHT)", "target": 0}
{"idx": 20027, "func": "SELECT BEFORE UPDATE", "target": 0}
{"idx": 20028, "func": "line 1366", "target": 0}
{"idx": 20029, "func": "@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseARelationalExpressionTail(tudresden.ocl.parser.node.ARelationalExpressionTail)", "target": 0}
{"idx": 20030, "func": "// targets.remove(target);", "target": 0}
{"idx": 20031, "func": "We use a TreeMap because we need the entries to be sorted", "target": 0}
{"idx": 20032, "func": "//System.err.println(fileName);", "target": 0}
{"idx": 20033, "func": "Pickaxe says @@ must be followed by a name character, but MRI does not require this.", "target": 0}
{"idx": 20034, "func": "Element tags. Must be unique. Keep sorted. //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$", "target": 0}
{"idx": 20035, "func": "no need to look further", "target": 0}
{"idx": 20036, "func": "//Class/getGenFeature.todo.override.javajetinc", "target": 0}
{"idx": 20037, "func": "We accept a Package, but not a Model or a Subsystem.", "target": 0}
{"idx": 20038, "func": "item and item2 should be two different objects", "target": 0}
{"idx": 20039, "func": "//open up the resource", "target": 0}
{"idx": 20040, "func": "ALL", "target": 0}
{"idx": 20041, "func": "line 812", "target": 0}
{"idx": 20042, "func": "Possibly handle :something parameters for the query ?", "target": 0}
{"idx": 20043, "func": "End of while loop over headers", "target": 0}
{"idx": 20044, "func": "If there is no WHERE node, make one.", "target": 0}
{"idx": 20045, "func": "Consider the instance type names they wrap to see if they are non-null and equal. //", "target": 0}
{"idx": 20046, "func": "start with week view", "target": 0}
{"idx": 20047, "func": "i18n[sqlscript.dropIfExists=Drop table if exists]", "target": 0}
{"idx": 20048, "func": "Free up the memory used by the cached items.", "target": 0}
{"idx": 20049, "func": "Add all found virtual uids to the result", "target": 0}
{"idx": 20050, "func": "Table Expanders - trigger and index expander", "target": 0}
{"idx": 20051, "func": "TODO: End up with multiple models here", "target": 1}
{"idx": 20052, "func": "should not happen since the file that was selected was just being shown in the Chooser dialog, but just to be safe...", "target": 0}
{"idx": 20053, "func": "//There is one fig more in the group than (stereotypes + keyword):", "target": 0}
{"idx": 20054, "func": "getResourceStream", "target": 0}
{"idx": 20055, "func": "If the user double clicks on any part of this FigNode, pass it down to one of the internal Figs. This allows the user to initiate direct text editing. @see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)", "target": 0}
{"idx": 20056, "func": "TODO: This should either be extended to support all AggreationKinds or it should be simplified/removed from the API - tfm - 20070331", "target": 1}
{"idx": 20057, "func": "create a panel with all 4 buttons of the window columns rows", "target": 0}
{"idx": 20058, "func": "@bgen(jjtree) ForStatement", "target": 0}
{"idx": 20059, "func": "IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject", "target": 0}
{"idx": 20060, "func": "i18n[sessionscript.startupScripts=Startup Scripts]", "target": 0}
{"idx": 20061, "func": "go to first line", "target": 0}
{"idx": 20062, "func": "everything is up and running, start services", "target": 0}
{"idx": 20063, "func": "TODO: State & Vertex are independent classes in UML 2.1", "target": 0}
{"idx": 20064, "func": "TODO: no Links in UML 2", "target": 0}
{"idx": 20065, "func": "element set", "target": 0}
{"idx": 20066, "func": "TODO: Monitor is getting dismissed before layout is complete", "target": 1}
{"idx": 20067, "func": "//{{{ ViewUpdate constructor", "target": 0}
{"idx": 20068, "func": "Original match behaviour", "target": 0}
{"idx": 20069, "func": "line 569", "target": 0}
{"idx": 20070, "func": "exact match", "target": 0}
{"idx": 20071, "func": "//AbstractFolderOptionsPlugin getPlugin(String name);", "target": 0}
{"idx": 20072, "func": "TODO: Implement this!", "target": 1}
{"idx": 20073, "func": "//Version //This is optional. If you don't want to give out this info, please enter \"N/A\"", "target": 0}
{"idx": 20074, "func": "A bad CRC is considered a fatal error.", "target": 0}
{"idx": 20075, "func": "this property is only loaded and saved if the 'current buffer' file set is selected. otherwise, it defaults to on.", "target": 0}
{"idx": 20076, "func": "continue to next case", "target": 0}
{"idx": 20077, "func": "If we've got a local (uninherited) font name or size or if we've got no parent to inherit from recompute our cached fonts", "target": 0}
{"idx": 20078, "func": "Check if we are running a transaction", "target": 0}
{"idx": 20079, "func": "2. Reposition and resize nodes", "target": 0}
{"idx": 20080, "func": "//Now write the values of fields onto the prepared statement", "target": 0}
{"idx": 20081, "func": "Loop through the associations, looking for one with aggregation", "target": 0}
{"idx": 20082, "func": "is it necessary to register %exact since it can only appear in a where clause?", "target": 1}
{"idx": 20083, "func": "Check if the frame controller has been registered, else do nothing", "target": 0}
{"idx": 20084, "func": "implementation moved to JmeterKeystore as only that has the keyType info", "target": 0}
{"idx": 20085, "func": "create the rule", "target": 0}
{"idx": 20086, "func": "//////////////////////////////////////Serialized attributes", "target": 0}
{"idx": 20087, "func": "start with a unit that is at least 1/10th of the axis length", "target": 0}
{"idx": 20088, "func": "//return (String)_renderer.renderObject(value);", "target": 0}
{"idx": 20089, "func": "i18n[sqlscript.tableScriptCancel=Cancel]", "target": 0}
{"idx": 20090, "func": "secpropag", "target": 0}
{"idx": 20091, "func": "null is handled fine here...", "target": 0}
{"idx": 20092, "func": "Look for a matching element in the classifier's package but don't bother with the XML type package's document root. //", "target": 0}
{"idx": 20093, "func": "todo : temporary needed because currently persister is the one that creates and renders the join fragments for inheritence hierarchies...", "target": 1}
{"idx": 20094, "func": "Test ignore trailing split characters Ignore adjacent delimiters", "target": 0}
{"idx": 20095, "func": "set the character set if not done already (and required)", "target": 0}
{"idx": 20096, "func": "check to see if this is the current doc - RFC 2396 5.2 #2 note that this is slightly different from the RFC spec in that we don't include the check for query string being null - this handles cases where the urispec is just a query string or a fragment (e.g. \"?y\" or \"#s\") - see <http://www.ics.uci.edu/~fielding/url/test1.html> which identified this as a bug in the RFC", "target": 0}
{"idx": 20097, "func": "//{{{ isPopupTrigger() method", "target": 0}
{"idx": 20098, "func": "This is included", "target": 0}
{"idx": 20099, "func": "Modelled after c ruby implementation (java /,% not same as ruby)", "target": 0}
{"idx": 20100, "func": "//i18n[DumpApplicationCommand.error.dumpingaliases=Error dumping aliases]", "target": 0}
{"idx": 20101, "func": "@see javax.swing.plaf.metal.MetalTheme#getMenuTextFont()", "target": 0}
{"idx": 20102, "func": "use global options", "target": 0}
{"idx": 20103, "func": "end class CrUnnavigableAssoc", "target": 0}
{"idx": 20104, "func": "void return type, so we need to load a nil for returning below", "target": 0}
{"idx": 20105, "func": "Fill 66 of value (byte) -19", "target": 0}
{"idx": 20106, "func": "line 1358", "target": 0}
{"idx": 20107, "func": "not currently used", "target": 1}
{"idx": 20108, "func": "ret.next is null.", "target": 0}
{"idx": 20109, "func": "return (ChatMediator) chatList.get(index);", "target": 0}
{"idx": 20110, "func": "//parse the text that was edited", "target": 0}
{"idx": 20111, "func": "Save options selected for Edit Where Columns", "target": 0}
{"idx": 20112, "func": "TODO: 10 and 120 were found by trial and error. Calculate them.", "target": 0}
{"idx": 20113, "func": "lower all except the last upper case character if there are more than one upper case characters in the beginning. e.g. XSDElementContent -> xsdElementContent However if the whole string is upper case, the whole string is turned into lower case. e.g. CPU -> cpu", "target": 0}
{"idx": 20114, "func": "computes the value of the curve at the pecified abscissa and relative to the beginning of the right piece of Spline curve", "target": 0}
{"idx": 20115, "func": "Don't resolve the node again.", "target": 0}
{"idx": 20116, "func": "//i18n[ImportFileDialog.dataPreview=Data preview]", "target": 0}
{"idx": 20117, "func": "areturn return the value of the field", "target": 0}
{"idx": 20118, "func": "plain impossible to get here, maybeConfigure should have thrown an exception.", "target": 0}
{"idx": 20119, "func": "This is the interface for registering interest in events sent from the model component.<p> Neither the registration or unregistration, nor the events themselves contain any reference to the model implementation. Instead they use the {@link java.beans.PropertyChangeListener}, {@link java.beans.PropertyChangeEvent} to deliver events.<p> The reference to the listener is a WeakReference so you don't need to call removeWHATEVERListener, you can just forget about your listener and it is eventually finalized and removed. This also means that you will have to keep a reference to your listener while it is active. Since the garbage collecting mechanism is not really deterministic a forgotten about listener might still receive events. Unless it can handle them in a harmless way, this approach should not be used. TODO: (Is this still true or does it refer to the NSUML implementation? - tfm 20051109) (This is part of the contract that is established between the Model subsystem and its users. If that is not fulfilled by the current implementation, then the current implementation is incorrect. Linus 20060411).<p> TODO: What event names? The event names generated are {@link String}s and their values and meanings are not really well documented. In general they are the name of an an association end or attribute in the UML metamodel.<p> Here are some highlights:<ul> <li>\"remove\" - event sent when the element is removed. </ul> @author Linus Tolke", "target": 1}
{"idx": 20120, "func": "@see org.argouml.uml.ui.UMLComboBoxModel#removeOtherModelEventListeners(java.lang.Object)", "target": 0}
{"idx": 20121, "func": "checkbox for using LONG in WHERE clause", "target": 0}
{"idx": 20122, "func": "//add in something like //\"Extension-List: javahelp java3d\"", "target": 0}
{"idx": 20123, "func": "JPanel mainPanel = new JPanel(mainLayout); mainPanel.setBorder(Borders.DIALOG_BORDER);", "target": 0}
{"idx": 20124, "func": "TBLRC 00101 - left and center items", "target": 0}
{"idx": 20125, "func": "if there is anything after the node on the same line, insert line break", "target": 0}
{"idx": 20126, "func": "toolbar", "target": 0}
{"idx": 20127, "func": "0590..05FF;", "target": 0}
{"idx": 20128, "func": "Delete AttributeLinks where this is the value", "target": 0}
{"idx": 20129, "func": "one arg with block", "target": 0}
{"idx": 20130, "func": "at the very least cleanup the data :)", "target": 0}
{"idx": 20131, "func": "Can't paste from a session that is no longer around.", "target": 0}
{"idx": 20132, "func": "state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 20133, "func": "fields to hold Ruby and RubyClass references", "target": 0}
{"idx": 20134, "func": "this is wrongly called with a null handle, as a workaround we return an empty collection", "target": 1}
{"idx": 20135, "func": "else leave it null", "target": 0}
{"idx": 20136, "func": "No absolute pathnames Windows (and Posix?) paths can start with \"\\\\NetworkDrive\\\", so we loop on starting /'s.", "target": 0}
{"idx": 20137, "func": "//case 3:", "target": 0}
{"idx": 20138, "func": "line 445", "target": 0}
{"idx": 20139, "func": "whether or not to read date type columns with rs.getTimestamp() i18n[dataTypeDate.readDateAsTimestamp=Interpret DATE columns as TIMESTAMP]", "target": 0}
{"idx": 20140, "func": "this is the key we will use to encrypt the data", "target": 0}
{"idx": 20141, "func": "FIXME: figure out why we get null sometimes", "target": 1}
{"idx": 20142, "func": "TODO: How do we get the Connectors of an Association?", "target": 1}
{"idx": 20143, "func": "and then by their enclosing path to fully distinguish them", "target": 0}
{"idx": 20144, "func": "How many groups are there?", "target": 0}
{"idx": 20145, "func": "//lhs.assign( null, false );", "target": 0}
{"idx": 20146, "func": "Add aliases in Type::, NativeType:: and FFI::TYPE_ //", "target": 0}
{"idx": 20147, "func": "Bug 2480365: It is very important to get the URI from the URL and not simply do new File(url.getFile()). In the case where the path contains spaces, they get encoded as %20 in the string returned from url.getFile(). java.io.File doesn't know how to deal with them (i.e. replace them with spaces) and the resulting File is rendered non-existent.", "target": 1}
{"idx": 20148, "func": "parameters ~ rest of string", "target": 0}
{"idx": 20149, "func": "Special case for handling ACCMODE, since constantine will generate an invalid value if it is not defined by the platform.", "target": 0}
{"idx": 20150, "func": "work out the average for the earlier values...", "target": 0}
{"idx": 20151, "func": "remove from the model", "target": 0}
{"idx": 20152, "func": "MySQL disallows quoted column identifiers when adding a primary key.", "target": 0}
{"idx": 20153, "func": "Though in API-Doc they say setCharacterAttributes() is thread save we received observed java.lang.Errors from Swing as well as dead locks. That's why we do changes synchron now.", "target": 0}
{"idx": 20154, "func": "then Generalizable Element", "target": 0}
{"idx": 20155, "func": "it can still be null if the UML element did not have a multiplicity defined.", "target": 0}
{"idx": 20156, "func": "This checks the order in addition to the contents Is that really what we want here? - tfm 20070603", "target": 1}
{"idx": 20157, "func": "line 1032", "target": 0}
{"idx": 20158, "func": "not static", "target": 0}
{"idx": 20159, "func": "//XXX All this to get package according to weblogic standards Can be written better... this is too hacky! Careful.. similar code in scanDir , but slightly different!!", "target": 1}
{"idx": 20160, "func": "14!", "target": 0}
{"idx": 20161, "func": "error level logging for compiler errors", "target": 0}
{"idx": 20162, "func": "<adr> <work> <pobox>value</pobox> <street>value</street .. </work> .. </adr>", "target": 0}
{"idx": 20163, "func": "//set up response file options", "target": 0}
{"idx": 20164, "func": "Can't have both an upper and lower bound. //", "target": 0}
{"idx": 20165, "func": "TODO: This needs to be managed on a per-project or per-model/extent basis", "target": 1}
{"idx": 20166, "func": "We could probably also detect if LHS value came out of cache and avoid some of this", "target": 0}
{"idx": 20167, "func": "Do not return null when trying to use list(Filename Filter) on a file rather than a directory. All other \"list\" methods return null for this test case.", "target": 0}
{"idx": 20168, "func": "---- freebusyLabel ----", "target": 0}
{"idx": 20169, "func": "//{{{ mouseDragged() method", "target": 0}
{"idx": 20170, "func": "foreground range markers...", "target": 0}
{"idx": 20171, "func": "otherwise fall back on the old way", "target": 0}
{"idx": 20172, "func": "\"-Dstupid=\"", "target": 0}
{"idx": 20173, "func": "end class WizStepTextField", "target": 0}
{"idx": 20174, "func": "//private CommandlineJava commandline = new CommandlineJava();", "target": 0}
{"idx": 20175, "func": "check value after :", "target": 0}
{"idx": 20176, "func": "Not a ReplaceableController", "target": 0}
{"idx": 20177, "func": "//{{{ macroNameToLabel() method", "target": 0}
{"idx": 20178, "func": "(non-Javadoc) @see org.columba.ristretto.message.Message#getMimePartCount()", "target": 0}
{"idx": 20179, "func": "value paint", "target": 0}
{"idx": 20180, "func": "Nested element", "target": 0}
{"idx": 20181, "func": "SSL only allowed with MIME mail", "target": 0}
{"idx": 20182, "func": "insert line break and comment out the first line if needed note that first line might move backward beyond node start (e.g. if a comma of the previous enum constant has been commented out)", "target": 0}
{"idx": 20183, "func": "just push nil for pragmas", "target": 0}
{"idx": 20184, "func": "ensure that we are currently in the contact component", "target": 0}
{"idx": 20185, "func": "If it is changing... //", "target": 0}
{"idx": 20186, "func": "open stream to file", "target": 0}
{"idx": 20187, "func": "line 1293", "target": 0}
{"idx": 20188, "func": "setIconTextGap(5);setVerticalAlignment(JLabel.CENTER);", "target": 0}
{"idx": 20189, "func": "//SpaceType", "target": 0}
{"idx": 20190, "func": "starts at back and wraps right around to the back again", "target": 0}
{"idx": 20191, "func": "Load a project which contains links to it", "target": 0}
{"idx": 20192, "func": "//ie. the entity came in from update()", "target": 0}
{"idx": 20193, "func": "20030621, karlpeder", "target": 0}
{"idx": 20194, "func": "//assert itemIndex >= 0 && itemIndex < getItemCount();", "target": 0}
{"idx": 20195, "func": "private Hashtable<String, String> table = new Hashtable<String, String>(10);", "target": 0}
{"idx": 20196, "func": "intentionally blank", "target": 0}
{"idx": 20197, "func": "hasCR is still true (for the second one)", "target": 0}
{"idx": 20198, "func": "//{{{ getFile() method", "target": 0}
{"idx": 20199, "func": "do not start a second time!", "target": 0}
{"idx": 20200, "func": "Still not found -> do a binary search", "target": 0}
{"idx": 20201, "func": "replace \"%1\" parameter with file argument ...", "target": 0}
{"idx": 20202, "func": "chop to \"server.name:x/thing\"", "target": 0}
{"idx": 20203, "func": "suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen", "target": 0}
{"idx": 20204, "func": "LOG.log(Level.FINE, \" Class \" + name + \" has subtypes : \" + names.get(name));", "target": 0}
{"idx": 20205, "func": "by default, do not show operations nor attributes:", "target": 0}
{"idx": 20206, "func": "may be on a case insensitive file system. We want the results to show what's really on the disk, so we need to double check.", "target": 0}
{"idx": 20207, "func": "Setup file logging", "target": 0}
{"idx": 20208, "func": "Allow display/hide toolbar", "target": 0}
{"idx": 20209, "func": "Implements JMeterGUIComponent.modifyTestElement(TestElement)", "target": 0}
{"idx": 20210, "func": "File class methods", "target": 0}
{"idx": 20211, "func": "@see org.argouml.uml.ui.UMLModelElementListModel2#buildPopup(javax.swing.JPopupMenu, int)", "target": 0}
{"idx": 20212, "func": "Title", "target": 0}
{"idx": 20213, "func": "relay the event from the canvas to our registered listeners", "target": 0}
{"idx": 20214, "func": "try next repeat at all possible positions", "target": 0}
{"idx": 20215, "func": "get selected contact/group card", "target": 0}
{"idx": 20216, "func": "found matching account", "target": 0}
{"idx": 20217, "func": "(non-Javadoc) @see org.apache.jmeter.testelement.TestStateListener#testEnded()", "target": 0}
{"idx": 20218, "func": "check if we are currently editing a draft message", "target": 0}
{"idx": 20219, "func": "verticalTickLabels", "target": 0}
{"idx": 20220, "func": "This is a work-around for what looks like a bug to me - it is a syntax error to qualify with the schema the new table name, but not the old as in: ALTER TABLE \"public\".\"tablerenametest\" RENAME TO \"public\".\"tablewasrenamed\" The second \"public\". is apparently not (currently) a valid thing to do.", "target": 1}
{"idx": 20221, "func": "register this as the current task on the current thread.", "target": 0}
{"idx": 20222, "func": "SSS FIXME: Receiver -- this is the class meta object basically? Operand receiver = build(defsNode.getReceiverNode(), s);", "target": 1}
{"idx": 20223, "func": "Add some messages", "target": 0}
{"idx": 20224, "func": "inlined: bsW(5, curr);", "target": 0}
{"idx": 20225, "func": "activity setup", "target": 0}
{"idx": 20226, "func": "This info is merely a placeholder in the tree that we can use to get index name and parent name more easily. We probably should create a IndexColumnInfo that has this extra info in it.", "target": 1}
{"idx": 20227, "func": "Convert JUnit4 failure to Junit3 style", "target": 0}
{"idx": 20228, "func": "setResourceFactoryRegister(new ExtensibleContextResourceFactoryRegister()); //EATM setResourceFactoryRegister(new ContextResourceFactoryRegister());", "target": 0}
{"idx": 20229, "func": "Reset count", "target": 0}
{"idx": 20230, "func": "Are both the lhs and rhs either wrappers or primitive values? do binary op", "target": 0}
{"idx": 20231, "func": "Create the new font and set it into the title label", "target": 0}
{"idx": 20232, "func": "default is no reference", "target": 0}
{"idx": 20233, "func": "//Create checkbox for enabling auto refresh i18n[oracle.dboutputEnableAutoRefer=Enable auto refresh]", "target": 0}
{"idx": 20234, "func": "exit immediately, nothing more to do", "target": 0}
{"idx": 20235, "func": "End BeanShell Modification - added debug param", "target": 0}
{"idx": 20236, "func": "if the initial averaging period is to be excluded, then calculate the index of the first data item to have an average calculated...", "target": 0}
{"idx": 20237, "func": "line 540", "target": 0}
{"idx": 20238, "func": "Make sure the back pointers to this mapping from the mapped objects is set. //", "target": 0}
{"idx": 20239, "func": "simple check for independence", "target": 0}
{"idx": 20240, "func": "Names for the cards $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$", "target": 0}
{"idx": 20241, "func": "Check if this instance is present in transaction listener list", "target": 0}
{"idx": 20242, "func": "TODO investigate the \"unnamed opposite end\"", "target": 1}
{"idx": 20243, "func": "TODO fix doctype", "target": 1}
{"idx": 20244, "func": "update the max value", "target": 0}
{"idx": 20245, "func": "the next top level ket is the counterpart to bra", "target": 0}
{"idx": 20246, "func": "@see javax.swing.tree.TreeModel#getChildCount(java.lang.Object)", "target": 0}
{"idx": 20247, "func": "//{{{ NoPluginsPane class", "target": 0}
{"idx": 20248, "func": "self.allConnections->forAll(ar|ar.participant <> self)", "target": 0}
{"idx": 20249, "func": "B next", "target": 0}
{"idx": 20250, "func": "load all internal mail plugins", "target": 0}
{"idx": 20251, "func": "these are cached by default", "target": 0}
{"idx": 20252, "func": "Overrides AbstractJMeterGuiComponent.configure(TestElement)", "target": 0}
{"idx": 20253, "func": "init addressbook plugin handlers // PluginManager.getInstance().addHandlers( // \"org/columba/addressbook/plugin/pluginhandler.xml\");", "target": 0}
{"idx": 20254, "func": "jpanel1.add(addActionButton, cc.xy(1, 1));", "target": 0}
{"idx": 20255, "func": "//{{{ isDOSDerived() method", "target": 0}
{"idx": 20256, "func": "@see org.argouml.ui.explorer.PerspectiveManagerListener#addPerspective(java.lang.Object)", "target": 0}
{"idx": 20257, "func": "now rebuild the insertions list. There is a batch for each entry in the name list.", "target": 0}
{"idx": 20258, "func": "long, little-endian", "target": 0}
{"idx": 20259, "func": "Options: FULL Checkbox", "target": 0}
{"idx": 20260, "func": "calculate rest", "target": 0}
{"idx": 20261, "func": "//{{{ isFractionalFontMetricsEnabled() method", "target": 0}
{"idx": 20262, "func": "i18n[AboutBoxDialog.systempanelcreatetime=SystemPanel created in ]", "target": 0}
{"idx": 20263, "func": "//{{{ isEmpty() method", "target": 0}
{"idx": 20264, "func": "catalog schema tableName columnName dataType; 1 == CHAR typeName columnSize decimalDigits radix isNullAllowed defaultValue isNullable", "target": 0}
{"idx": 20265, "func": "Just import the name or use it directly. //", "target": 0}
{"idx": 20266, "func": "These are new fields; not saved unless true", "target": 0}
{"idx": 20267, "func": "RubyString aka rb_string_value", "target": 0}
{"idx": 20268, "func": "Just remove the objects and add them. //", "target": 0}
{"idx": 20269, "func": "deal with specified srcDir", "target": 0}
{"idx": 20270, "func": "//no TIE classes", "target": 0}
{"idx": 20271, "func": "if the last selection for the current folder is null, then we show the first/last message in the table and scroll to it.", "target": 0}
{"idx": 20272, "func": "The constructor. TODO: The \"name\" parameter is used for the icon and for the tooltip. This makes i18n of the tooltip impossible. @param modeClass the next global editor mode @param arg the name of a new argument for the new mode @param value the value of a new argument for the new mode @param name the name of the command that is the tooltip text.", "target": 1}
{"idx": 20273, "func": "//{{{ doForwardSearch() method", "target": 0}
{"idx": 20274, "func": "controller", "target": 0}
{"idx": 20275, "func": "end class CrInvalidSynch", "target": 0}
{"idx": 20276, "func": "TODO Expression and InstanceValue (how) If anyone have an example.", "target": 1}
{"idx": 20277, "func": "create the new color and set it to the SwtPaintCanvas", "target": 0}
{"idx": 20278, "func": "execute command with sh -c this does shell expansion of wildcards", "target": 0}
{"idx": 20279, "func": "erase the previous zoom rectangle (if any). We only need to do this is we are using XOR mode, which we do when we're not using the buffer (if there is a buffer, then at the end of this method we just trigger a repaint)", "target": 0}
{"idx": 20280, "func": "compute common deltas", "target": 0}
{"idx": 20281, "func": "new NewMessageAction().actionPerformed(null);", "target": 0}
{"idx": 20282, "func": "Check for the same instance", "target": 0}
{"idx": 20283, "func": "get implementation", "target": 0}
{"idx": 20284, "func": "remove any files that shouldn't be overwritten.", "target": 0}
{"idx": 20285, "func": "( ( AbstractMailFrameController) frameMediator) .registerTableSelectionListener( this);", "target": 0}
{"idx": 20286, "func": "line 1014", "target": 0}
{"idx": 20287, "func": "Determine all the bundles that this project depends on. //", "target": 0}
{"idx": 20288, "func": "//build the home classes list.", "target": 0}
{"idx": 20289, "func": "this piece is needed for usage in select clause", "target": 0}
{"idx": 20290, "func": "just confirm minimum args provided", "target": 0}
{"idx": 20291, "func": "Names of DataHolder entries for JMX processing $NON-NLS-1$", "target": 0}
{"idx": 20292, "func": "assertEquals(\"copied message should be marked as recent\", true, flags .getRecent()); assertEquals(\"copied message should be marked as flagged\", true, flags .getFlagged()); assertEquals(\"copied message should be marked as not expunged\", false, flags.getExpunged());", "target": 0}
{"idx": 20293, "func": "rename view has that same syntax as that of tables.", "target": 0}
{"idx": 20294, "func": "virtual invocation", "target": 0}
{"idx": 20295, "func": "high", "target": 0}
{"idx": 20296, "func": "no need to process further", "target": 0}
{"idx": 20297, "func": "remember if Look And Feel has been changed", "target": 0}
{"idx": 20298, "func": "(non-Javadoc) @see org.apache.jmeter.gui.JMeterGUIComponent#getMenuCategories()", "target": 0}
{"idx": 20299, "func": "i18n[dataTypeJavaObject.readContentsWhenLoaded=Read contents when table is first loaded and display as string]", "target": 0}
{"idx": 20300, "func": "Should never come here", "target": 0}
{"idx": 20301, "func": "create an array of items in reverse order", "target": 0}
{"idx": 20302, "func": "TBLRC 10101 - top, left and center", "target": 0}
{"idx": 20303, "func": "check to see if new data is same as old data, in which case we do not update the underlying data. This is NOT an optimization (though it does speed things up). We need to do this to avoid an error when we check for rows being changed in the DB. If the new value and old value are the same, when we look to see if any rows already exist with the new value, it will find the existing row and claim that the update will make one row identical to the changed row (i.e. that there will be two identical rows in the DB) which is not true. So we avoid the problem by not updating the DB if the data has not been changed. This can happen if user changes the cell contents, then changes them back before exiting the cell.", "target": 0}
{"idx": 20304, "func": "//moveGap(-1,0,\"contentRemoved\");", "target": 0}
{"idx": 20305, "func": "todo : this eventually needs to be removed", "target": 1}
{"idx": 20306, "func": "public AdapterNode addEmptyFilterCriteria(AdapterNode filterRuleNode) { Element child = createElementNode(\"filtercriteria\"); Element subNode = createTextElementNode(\"headeritem\", \"Subject\"); addElement(child, subNode); subNode = createTextElementNode(\"criteria\", \"contains\"); addElement(child, subNode); subNode = createTextElementNode(\"pattern\", \"pattern\"); addElement(child, subNode); subNode = createTextElementNode(\"type\", \"Subject\"); addElement(child, subNode); filterRuleNode.domNode.appendChild(child); return new AdapterNode(child);}", "target": 0}
{"idx": 20307, "func": "This is another way to do this. Modifying the column type to serial is much easier. Thanks to Doug Lawry for setting me straight!!", "target": 0}
{"idx": 20308, "func": "load views with catalog = doi.getCatalog() and schema = doi.getSchema()", "target": 0}
{"idx": 20309, "func": "4.5.3.2 [2]", "target": 0}
{"idx": 20310, "func": "@see org.tigris.gef.presentation.Fig#getEnclosingFig()", "target": 0}
{"idx": 20311, "func": "setup filter configuration", "target": 0}
{"idx": 20312, "func": "Test for attempting to call listFiles on a non-existent directory.", "target": 0}
{"idx": 20313, "func": "SELECT last_number, max_value, min_value, cache_size, increment_by, cycle_flag FROM USER_SEQUENCES WHERE sequence_name = ?;", "target": 0}
{"idx": 20314, "func": "attempt", "target": 0}
{"idx": 20315, "func": "i18n[ColorPropertiesPanel.backgroundColorLabel=Background Color]", "target": 0}
{"idx": 20316, "func": "first arrange without constraints, then see if the width fits within the required range...if not, call arrangeFN() at max width", "target": 0}
{"idx": 20317, "func": "Optimize for the normal case to minimize target changes", "target": 0}
{"idx": 20318, "func": "Keep track of all the entry features that are already in the feature map and that will be added, excluding XML text, CDATA, and comments (if we're in a mixed type). //", "target": 0}
{"idx": 20319, "func": "line 1595", "target": 0}
{"idx": 20320, "func": "update this point of time as last communication since every functio calls this before communicating with the server", "target": 0}
{"idx": 20321, "func": "No batch statements", "target": 0}
{"idx": 20322, "func": "at the moment we are only supporting gpg. So let us code hard here the gpg driver", "target": 0}
{"idx": 20323, "func": "optional processing instruction for line 2; e.g. <?xml-stylesheet type=\"text/xsl\" href=\"../extras/jmeter-results-detail-report_21.xsl\"?> $NON_NLS-1$", "target": 0}
{"idx": 20324, "func": "Start performing the updates", "target": 0}
{"idx": 20325, "func": "The Math.min is for the Caret at the end of the text", "target": 0}
{"idx": 20326, "func": "---- imTextField4 ----", "target": 0}
{"idx": 20327, "func": "we tried to remove a value", "target": 0}
{"idx": 20328, "func": "8kB is the (max) size to have the latency ('the first packet') Enough for MD5", "target": 0}
{"idx": 20329, "func": "package-private members package-private, not private, for speedy access by inner classes", "target": 0}
{"idx": 20330, "func": "yes, there are more:", "target": 0}
{"idx": 20331, "func": "//{{{ getEntry() method", "target": 0}
{"idx": 20332, "func": "After that, process the JOINs. Invoke a delegate to do the work, as this is farily complex.", "target": 0}
{"idx": 20333, "func": "?? Should this be the default for ant?", "target": 0}
{"idx": 20334, "func": "Table", "target": 0}
{"idx": 20335, "func": "Show a warning dialog and let the user confirm it.", "target": 0}
{"idx": 20336, "func": "indices for temp values", "target": 0}
{"idx": 20337, "func": "check if it is already completely loaded, but unowned", "target": 0}
{"idx": 20338, "func": "Added for MacOS X", "target": 0}
{"idx": 20339, "func": "in case of an error -> fall-back to Swing's built-in JTextPane", "target": 0}
{"idx": 20340, "func": "class name has only 1 package level 'package.Class'", "target": 0}
{"idx": 20341, "func": "get selected folder", "target": 0}
{"idx": 20342, "func": "the insert worked, so make this input form go away", "target": 0}
{"idx": 20343, "func": "Empty block.", "target": 0}
{"idx": 20344, "func": "CASE 1 : Comparing to another TimeSeriesDataItem object -------------------------------------------------------", "target": 0}
{"idx": 20345, "func": "We found it!", "target": 0}
{"idx": 20346, "func": "Set the Environment variable", "target": 0}
{"idx": 20347, "func": "$NON-NLS-1$ reader = xmlFactory.newSAXParser().getXMLReader();", "target": 0}
{"idx": 20348, "func": "\"-T3\",\"-a\"", "target": 0}
{"idx": 20349, "func": "the DEFAULT class Convert int to Integer etc:", "target": 0}
{"idx": 20350, "func": "2 column size", "target": 0}
{"idx": 20351, "func": "jEdit will load it automatically", "target": 0}
{"idx": 20352, "func": "i18n[userscript.executing=Executing Script...]", "target": 0}
{"idx": 20353, "func": "the first hex character if a character needs to be escaped", "target": 0}
{"idx": 20354, "func": "The first argument is a JTable, which is only used by instances of JTextField to convert coordinates on a double-click. Since that cannot happen with the JTextArea, do not bother passing the table.", "target": 0}
{"idx": 20355, "func": "Visual SourceSafe", "target": 0}
{"idx": 20356, "func": "create new instance -> get frame controller using the plugin handler found above", "target": 0}
{"idx": 20357, "func": "get message source from folder", "target": 0}
{"idx": 20358, "func": "Remember the requested operation.", "target": 0}
{"idx": 20359, "func": "This should probably be in Reflect.java", "target": 1}
{"idx": 20360, "func": "expectations that are specific to this test", "target": 0}
{"idx": 20361, "func": "//{{{ setActiveView() method", "target": 0}
{"idx": 20362, "func": "//{{{ shiftTallCaretLeft() method", "target": 0}
{"idx": 20363, "func": "repair action for possible NP after load", "target": 0}
{"idx": 20364, "func": "Set false for AJP", "target": 0}
{"idx": 20365, "func": "line 1213", "target": 0}
{"idx": 20366, "func": "candleWidth", "target": 0}
{"idx": 20367, "func": "//{{{ HelpIndex constructor public HelpIndex(String fileListPath, String wordIndexPath) { this(); } //}}}", "target": 0}
{"idx": 20368, "func": "line 326", "target": 0}
{"idx": 20369, "func": "//repaint(x, y, width, height);", "target": 0}
{"idx": 20370, "func": "//on openvms even exit value signals failure; for other platforms nonzero exit value signals failure", "target": 0}
{"idx": 20371, "func": "Critic Details panel", "target": 0}
{"idx": 20372, "func": "//TODO: There is a cyclic dependency between this class and FigConcurrentRegion", "target": 1}
{"idx": 20373, "func": "FIXME: perhaps we should clone the data list", "target": 1}
{"idx": 20374, "func": "If there is a second child (RHS), recurse into that child.", "target": 0}
{"idx": 20375, "func": "TODO (@author fdietz): Add more special entities - e.g. accenture chars such as ?", "target": 1}
{"idx": 20376, "func": "i18n[RemoveColumnCommand.singleColumnMessage=The table's only column cannot be removed - a table must have a least one column.]", "target": 0}
{"idx": 20377, "func": "--------------------------------------------------------- The following instance variables mutate during evaluation and should be reset by the reset() method where necessary", "target": 0}
{"idx": 20378, "func": "//DefaultItem item = new DefaultItem(element); //item.set(\"header_enabled\", getState());", "target": 0}
{"idx": 20379, "func": "Build the dynamic-map tuplizer...", "target": 0}
{"idx": 20380, "func": "(non-Javadoc) @see org.columba.mail.imap.IImapServer#fetchSubscribedFolders()", "target": 0}
{"idx": 20381, "func": "CheckStyle:ConstantNameCheck ON", "target": 0}
{"idx": 20382, "func": "//{{{ getParentOfPath() method", "target": 0}
{"idx": 20383, "func": "number of errors detected", "target": 0}
{"idx": 20384, "func": "GRANT { ALL [ PRIVILEGES ] | permission [ ,...n ] } { [ ( column [ ,...n ] ) ] ON { table | view } | ON { table | view } [ ( column [ ,...n ] ) ] | ON { stored_procedure | extended_procedure } | ON { user_defined_function } } TO security_account [ ,...n ] [ WITH GRANT OPTION ] [ AS { group | role } ] REVOKE [ GRANT OPTION FOR ] { ALL [ PRIVILEGES ] | permission [ ,...n ] } { [ ( column [ ,...n ] ) ] ON { table | view } | ON { table | view } [ ( column [ ,...n ] ) ] | ON { stored_procedure | extended_procedure } | ON { user_defined_function } } { TO | FROM } security_account [ ,...n ] [ CASCADE ] [ AS { group | role } ]", "target": 0}
{"idx": 20385, "func": "stored procedures and functions have that dangling ;version thing.", "target": 0}
{"idx": 20386, "func": "scripting.xml configuration file should reside in <config-folder>", "target": 0}
{"idx": 20387, "func": "Class qualified 'this' reference from inner class. e.g. 'MyOuterClass.this'", "target": 0}
{"idx": 20388, "func": "//{{{ isScriptRunning() method", "target": 0}
{"idx": 20389, "func": "reserve space for the domain axes...", "target": 0}
{"idx": 20390, "func": "evaluate and save receiver and args", "target": 0}
{"idx": 20391, "func": "If the target method returns a boolean, use that as a hint", "target": 0}
{"idx": 20392, "func": "//Operation column increased", "target": 0}
{"idx": 20393, "func": "//directoryName.length() > 0 && directoryName.charAt(0) == '$')", "target": 0}
{"idx": 20394, "func": "Should move to a separate public class - and have API to add listeners, etc.", "target": 1}
{"idx": 20395, "func": "FIXME: this attribute is never used - deprecate?", "target": 1}
{"idx": 20396, "func": "//{{{ createButtonsPanel() method", "target": 0}
{"idx": 20397, "func": "/////////////////////////////////////////////////////////////////////Prepare persisters and link them up with their cache region/access-strategy", "target": 0}
{"idx": 20398, "func": "modified to match how hash is calculated in 1.8.2", "target": 0}
{"idx": 20399, "func": "(non-Javadoc) @see org.columba.mail.folder.IMailbox#getAttribute(java.lang.Object, java.lang.String)", "target": 0}
{"idx": 20400, "func": "Fill 7 of value (byte) -19 Fill 211 of value (byte) 33 Fill 13 of value (byte) -87 Fill 4 of value (byte) 33", "target": 0}
{"idx": 20401, "func": "TODO: Temporary stopgap for EnumerationLiteral", "target": 1}
{"idx": 20402, "func": "//{{{ AbstractOptionPane constructor", "target": 0}
{"idx": 20403, "func": "panel for controls", "target": 0}
{"idx": 20404, "func": "now activate the plugins", "target": 0}
{"idx": 20405, "func": "set the axis properties", "target": 0}
{"idx": 20406, "func": "//{{{ getFontList() method", "target": 0}
{"idx": 20407, "func": "specify the algorithm classname", "target": 0}
{"idx": 20408, "func": "case MANA_INSN:", "target": 0}
{"idx": 20409, "func": "//{{{ getService() method", "target": 0}
{"idx": 20410, "func": "tick mark stroke...", "target": 0}
{"idx": 20411, "func": "i18n[syntax.prefUseOster=Use Ostermiller editor]", "target": 0}
{"idx": 20412, "func": "TODO this is really ineffient, and potentially a problem everytime anyone require's something. we should try to make LoadPath a special array object.", "target": 1}
{"idx": 20413, "func": "//parentRect = new Rectangle(Toolkit.getDefaultToolkit().getScreenSize());", "target": 0}
{"idx": 20414, "func": "volatile to ensure that initial nil-fill is visible to other threads", "target": 0}
{"idx": 20415, "func": "TODO: Bob says - Coding by use of side effect here. Maybe this should be done in a clearer way but it fixes http://argouml.tigris.org/issues/show_bug.cgi?id=4978 It seems that when loading an XMI that is not contained in a zip file then the InputStream given as the argument to this method can't be reused as it is at the end of the stream. In that case systemId appears to be none-null at this stage. So if systemId is not null we recreate the InputSource.", "target": 1}
{"idx": 20416, "func": "i18n[dataSetViewereditableTablePanel.error2=Error]", "target": 0}
{"idx": 20417, "func": "col 1, line 2, A", "target": 0}
{"idx": 20418, "func": "User doesn't wish for us to try to auto-detect the dest db.", "target": 0}
{"idx": 20419, "func": "since user is now using popup, stop editing using the in-cell editor, if any", "target": 0}
{"idx": 20420, "func": "//{{{ applicationShouldTerminate() method", "target": 0}
{"idx": 20421, "func": "Operations that work on elements:", "target": 0}
{"idx": 20422, "func": "Test fragment", "target": 0}
{"idx": 20423, "func": "//{{{ addBufferToList() method", "target": 0}
{"idx": 20424, "func": "else [default] reduce (yyN)", "target": 0}
{"idx": 20425, "func": "We can safely reference methods here instead of doing getMethods() since if we are adding we are not using a IncludedModuleWrapper.", "target": 0}
{"idx": 20426, "func": "// return Boolean.class; Don't show checkbox for output only field.", "target": 0}
{"idx": 20427, "func": "close stream", "target": 0}
{"idx": 20428, "func": "implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface", "target": 0}
{"idx": 20429, "func": "Write XML header if we have the charset to use for encoding", "target": 0}
{"idx": 20430, "func": "if message contains attachments", "target": 0}
{"idx": 20431, "func": "Add Sample Counter", "target": 0}
{"idx": 20432, "func": "Stores prefix name in bindings hashtable", "target": 0}
{"idx": 20433, "func": "Process command line property definitions These can potentially occur multiple times", "target": 0}
{"idx": 20434, "func": "//{{{ Line offset methods", "target": 0}
{"idx": 20435, "func": "----- attributes -----", "target": 0}
{"idx": 20436, "func": "@see org.argouml.application.api.CommandLineInterface#doCommand(java.lang.String)", "target": 0}
{"idx": 20437, "func": "if we expect a return value, unwrap it", "target": 0}
{"idx": 20438, "func": "for each account that is enabled and in the fetchalllist", "target": 0}
{"idx": 20439, "func": "line 1678", "target": 0}
{"idx": 20440, "func": "Skip 'DISTINCT' and 'ALL', so we return the first expression node.", "target": 0}
{"idx": 20441, "func": "class preloading, so packages are there...", "target": 0}
{"idx": 20442, "func": "registerColumnType(Types.CLOB, 31982, \"varchar($l)\");", "target": 0}
{"idx": 20443, "func": "//??? For now, use the same renderer as everyone else. //?? //?? IN FUTURE: change this to use a new instance of renederer //?? for this data type.", "target": 1}
{"idx": 20444, "func": "check the version unsaved-value, if appropriate", "target": 0}
{"idx": 20445, "func": "If we can find a nested SAX exception, it will have information on the line number, etc.", "target": 0}
{"idx": 20446, "func": "//{{{ completeWord() method", "target": 0}
{"idx": 20447, "func": "calculate the highest volume in the dataset...", "target": 0}
{"idx": 20448, "func": "@see java.util.List#indexOf(java.lang.Object)", "target": 0}
{"idx": 20449, "func": "TODO: I think we need to make sure the keys are actually cloned, whereas the paint instances are always immutable so they're OK", "target": 1}
{"idx": 20450, "func": "//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);", "target": 0}
{"idx": 20451, "func": "The following getters may appear not to be used - however they are invoked via the Functor class", "target": 0}
{"idx": 20452, "func": "This will contain the Figs that we do not need anymore:", "target": 0}
{"idx": 20453, "func": "If the other end is single, then we should unset the owner from the old value's opposite feature so that undo will put it back. //", "target": 0}
{"idx": 20454, "func": "getRelativePath also finds about symlinks", "target": 0}
{"idx": 20455, "func": "Is getName() ok? test with 1.1", "target": 1}
{"idx": 20456, "func": "@see java.lang.Runnable#run()", "target": 0}
{"idx": 20457, "func": "this is the only case it might be null here (in MetaClass construction)", "target": 0}
{"idx": 20458, "func": "Accessing Properties", "target": 0}
{"idx": 20459, "func": "Tell GEF its changed", "target": 0}
{"idx": 20460, "func": "i18n[mysql.tabStatus=MySQL Table Status]", "target": 0}
{"idx": 20461, "func": "eh?!", "target": 0}
{"idx": 20462, "func": "no opt, no rest, exact match", "target": 0}
{"idx": 20463, "func": "baseCreateEntities;", "target": 0}
{"idx": 20464, "func": "couldn't find correct constructor", "target": 0}
{"idx": 20465, "func": "If the Multipart is repeatable, we can send it first to our own stream, without the actual file content, so we can return it", "target": 0}
{"idx": 20466, "func": "pop extra failed value from first cycle and we're done", "target": 0}
{"idx": 20467, "func": "Special situation -- we're taking input from a character stream.", "target": 0}
{"idx": 20468, "func": "((DefaultDateArea) localDateAreaBean.getDateArea()) .addActivityMoveListener(this);", "target": 0}
{"idx": 20469, "func": "NOTE: Currently this optimization is limited to the following situations: All expressions must be int-ranged literal fixnums It also still emits the code for the \"safe\" when logic, which is rather wasteful (since it essentially doubles each code body). As such it is normally disabled, but it serves as an example of how this optimization could be done. Ideally, it should be combined with the when processing to improve code reuse before it's generally available.", "target": 0}
{"idx": 20470, "func": "set the attachment flag", "target": 0}
{"idx": 20471, "func": "//{{{ selectNode() method", "target": 0}
{"idx": 20472, "func": "FIXME: Throw the right ArgumentError's if the class is missing or if it's a module.", "target": 1}
{"idx": 20473, "func": "Collect blocks of up to maxItems of consecutive letters", "target": 0}
{"idx": 20474, "func": "register interest on table selection changes", "target": 0}
{"idx": 20475, "func": "Treat explict from elements in sub-queries properly.", "target": 0}
{"idx": 20476, "func": "help menu", "target": 0}
{"idx": 20477, "func": "We also show parameters", "target": 0}
{"idx": 20478, "func": "defaultShapeFactory.setShape(AShapeCreator.createTraslucentShapeHorizontal(), null);", "target": 0}
{"idx": 20479, "func": "CheckStyle:MemberNameCheck ON", "target": 0}
{"idx": 20480, "func": "the introducing label", "target": 0}
{"idx": 20481, "func": "Check that the attribute doesn't already exist!", "target": 0}
{"idx": 20482, "func": "On Windows and MacOS, path names are case insensitive", "target": 0}
{"idx": 20483, "func": "@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)", "target": 0}
{"idx": 20484, "func": "If getSendFileAsPostBody returned true, it's sure that file is not null", "target": 0}
{"idx": 20485, "func": "calendar is selected as default", "target": 0}
{"idx": 20486, "func": "exclude current exception and last one", "target": 0}
{"idx": 20487, "func": "Internal class for handling key events during editing of both JTextField and JTextArea. Since the Unknown data type is not editable either in the Cell or in the Popup, we should never get here, but we have provided appropriate code just in case.", "target": 0}
{"idx": 20488, "func": "value is a simple string representation of the data, the same one used in Text and in-cell operations.", "target": 0}
{"idx": 20489, "func": "set up a field for the CacheEntry TODO: make this an array so it's not as much class metadata; similar to AbstractScript stuff", "target": 1}
{"idx": 20490, "func": "end class StylePanelFigAssociationClass", "target": 0}
{"idx": 20491, "func": "line 574", "target": 0}
{"idx": 20492, "func": "This is not a well formed model in a strict sense. See the multiplicity in UML 1.3 Figure 2-5.", "target": 0}
{"idx": 20493, "func": "for each element in the \"not use\" set, if selected then add to \"use\", otherwise add to new \"not use\" set", "target": 0}
{"idx": 20494, "func": "Relative start-up time", "target": 0}
{"idx": 20495, "func": "baseShape", "target": 0}
{"idx": 20496, "func": "( (this.assemLen + numToWrite ) < this.recordBuf.length )", "target": 0}
{"idx": 20497, "func": "Collect the select expressions, skip the first child because it is the class name.", "target": 0}
{"idx": 20498, "func": "asupport.addActionListener(listener);", "target": 0}
{"idx": 20499, "func": "TODO: Not implemented yet. If the given ToDoItem can be fixed automatically, and the user wants that to happen, then do it. Obviously, this depends on the specific Critic and problem. By default this method does nothing. @param item the todo item @param arg the design material (?)", "target": 1}
{"idx": 20500, "func": "CASE 1 : Comparing to another Hour object -----------------------------------------", "target": 0}
{"idx": 20501, "func": "(non-Javadoc) @see javax.swing.table.DefaultTableModel#getColumnCount()", "target": 0}
{"idx": 20502, "func": "i18n[SchemaPropertiesPanel.loadAllAndCacheNone=Load all Schemas, cache none]", "target": 0}
{"idx": 20503, "func": "//cache the old color //set the white color //draw the square //reset the old color", "target": 0}
{"idx": 20504, "func": "//testLog.setPriority(org.apache.log.Priority.DEBUG);", "target": 0}
{"idx": 20505, "func": "remove from source folder", "target": 0}
{"idx": 20506, "func": "value for end", "target": 0}
{"idx": 20507, "func": "if we are not limiting anything, return false", "target": 0}
{"idx": 20508, "func": "line 1054", "target": 0}
{"idx": 20509, "func": "//set the new end type!", "target": 0}
{"idx": 20510, "func": "Configure the selector", "target": 0}
{"idx": 20511, "func": "Fill 11 of value (byte) 33", "target": 0}
{"idx": 20512, "func": "The name that will be used as the archive entry. //", "target": 0}
{"idx": 20513, "func": "not yet terminated", "target": 0}
{"idx": 20514, "func": "if there is a selection on the clipboard", "target": 0}
{"idx": 20515, "func": "the usual classloader", "target": 0}
{"idx": 20516, "func": "If the first wrapped value is found... //", "target": 0}
{"idx": 20517, "func": "If tooltip is null, removes any tooltip text.", "target": 0}
{"idx": 20518, "func": "Make sure all arguments are modules before calling the callbacks", "target": 0}
{"idx": 20519, "func": "i18n[generalSessionPropertiesPanel.tableContents=Table Contents:]", "target": 0}
{"idx": 20520, "func": "(non-Javadoc) @see org.apache.jmeter.report.writers.PageSummary#isSuccessful()", "target": 0}
{"idx": 20521, "func": "i18n[DownloadStatusEventHandler.changesRecordedTitle=Changes Recorded]", "target": 0}
{"idx": 20522, "func": "DROP INDEX indexName CASCADE;", "target": 0}
{"idx": 20523, "func": "TODO: find out how to retrieve these from the script At present the script has to use SampleResult methods to set them. $NON-NLS-1$ $NON-NLS-1$", "target": 1}
{"idx": 20524, "func": "//cache this", "target": 0}
{"idx": 20525, "func": "Plugin knows only how to script Views and Stored Procedures on DB2. So if it's not a DB2 Session we tell SQuirreL the Plugin should not be used.", "target": 0}
{"idx": 20526, "func": "TODO : not sure the best way to handle this. The non-performant way :", "target": 1}
{"idx": 20527, "func": "@see GUISettingsTabInterface#handleSettingsTabSave()", "target": 0}
{"idx": 20528, "func": "This class represents a Pool of Swimlanes for Activity diagrams. This is exists only to act as the GEF style encloser. Other nodes in the same must be placed entirely within or outside the boundaries of this Fig but cannot intersect with the boundary. <p> TODO: There is no actual model element being represented here so we are inheriting a lot of behaviour from FigNodeModelElement that we don't want. We require to split FigNodeModelElement to separate the code that requires a model element owner. See issue ... <p> Remark mvw: Why not give it an owner instead? The ActivityGraph is the obvious candidate, or maybe the top state. @author mkl", "target": 1}
{"idx": 20529, "func": "i18n[oracle.sequenceDetails=Details]", "target": 0}
{"idx": 20530, "func": "Use MD5 $NON-NLS-1$", "target": 0}
{"idx": 20531, "func": "found an url with links - is it the same?", "target": 0}
{"idx": 20532, "func": "Returns the selection value as a int, with the value set to zero if it is out of range.", "target": 0}
{"idx": 20533, "func": "Html: Insertion of text before and after original message get necessary headerfields", "target": 0}
{"idx": 20534, "func": "The <<extend>> label. It's not a true stereotype, so don't use the stereotype support //int y = getNameFig().getBounds().height;", "target": 0}
{"idx": 20535, "func": "completed successfully", "target": 0}
{"idx": 20536, "func": "Also set the delimiter", "target": 0}
{"idx": 20537, "func": "//if there is no resulting row, return null", "target": 0}
{"idx": 20538, "func": "line 1287", "target": 0}
{"idx": 20539, "func": "---- departmentLabel ----", "target": 0}
{"idx": 20540, "func": "can't override prefix shortcuts", "target": 0}
{"idx": 20541, "func": "Set up the table with footer", "target": 0}
{"idx": 20542, "func": "Close the ResultSet's Statement if it is non-null. This frees open cursors.", "target": 0}
{"idx": 20543, "func": "this is needed because on OS X renaming to a non-existent directory causes problems", "target": 0}
{"idx": 20544, "func": "line 1038", "target": 0}
{"idx": 20545, "func": "Return the tagged value with a specific tag. <p> Warning: this method returns only the first TaggedValue found with the given name. Hence, this method is a simplification of the real problem and should be avoided. TODO: What should be done about the above problem? Options are to deprecate the method, throw an exception if the name is ambiguous, or leave the caller to figure it out themselves. @param handle The model element the tagged value belongs to. @param name The tag name. @return The found tag, null if not found", "target": 1}
{"idx": 20546, "func": "TODO: Should there really be () here?", "target": 0}
{"idx": 20547, "func": "//{{{ attribute() method", "target": 0}
{"idx": 20548, "func": "now draw the outlines, if visible...", "target": 0}
{"idx": 20549, "func": "//{{{ gotoURL() method", "target": 0}
{"idx": 20550, "func": "save in cache", "target": 0}
{"idx": 20551, "func": "+++ Helper Methods", "target": 0}
{"idx": 20552, "func": "check for independence", "target": 0}
{"idx": 20553, "func": "//i18n[PasteTableAction.error.destdbobj=The destination database //doesn't support copying tables into '{0}' objects.\\n Please //select a schema to paste into.]", "target": 0}
{"idx": 20554, "func": "Fill 3 of value (byte) 33 Fill 2 of value (byte) -19 Fill 3 of value (byte) 33", "target": 0}
{"idx": 20555, "func": "TODO: These defaults need to be checked against historical ones", "target": 1}
{"idx": 20556, "func": "Property names to preload into JMeter variables:", "target": 0}
{"idx": 20557, "func": "(non-Javadoc) @see org.columba.core.filter.IFilterList#add(org.columba.core.filter.Filter)", "target": 0}
{"idx": 20558, "func": "setup filters and filename for file chooser dialog", "target": 0}
{"idx": 20559, "func": "setAsText succeeded: valid", "target": 0}
{"idx": 20560, "func": "Test method for 'org.apache.jmeter.protocol.http.sampler.postWriter.sendPostData(URLConnection, HTTPSampler)' This method test sending only a formdata, as urlencoded data", "target": 0}
{"idx": 20561, "func": "get rid of keys we never need to handle", "target": 0}
{"idx": 20562, "func": "the mapping of entity names to their latest batch numbers.", "target": 0}
{"idx": 20563, "func": "if we're already aborting, we can receive no further mail", "target": 0}
{"idx": 20564, "func": "TL - IS", "target": 0}
{"idx": 20565, "func": "0E00..0E7F;", "target": 0}
{"idx": 20566, "func": "copy and splat arguments out of the scope to use for zsuper call", "target": 0}
{"idx": 20567, "func": "//{{{ toggleLineSeparator() method", "target": 0}
{"idx": 20568, "func": "tell the build it is finished", "target": 0}
{"idx": 20569, "func": "LF is always end of line (i.e. CRLF or single LF)", "target": 0}
{"idx": 20570, "func": "put back the original security manager //The following will never eval to true. (PD)", "target": 0}
{"idx": 20571, "func": "i18n[sqlval.anonymous2=Anonymous]", "target": 0}
{"idx": 20572, "func": "Set the storage id for our repository so that MofIds will be unique (they are composed as \"storageId\":\"serialNumber\"). NOTE: The storage manager only looks for a few property names such as the StorageFactoryClassName. Everything else needs to be prefixed with \"MDRStorageProperty.\" which gets deleted from the property name before it and its associated value are copied to an internal property table separate from the system property table.", "target": 0}
{"idx": 20573, "func": "@bgen(jjtree) Arguments", "target": 0}
{"idx": 20574, "func": "//{{{ getTopDockingArea() method", "target": 0}
{"idx": 20575, "func": "@see org.argouml.model.CopyHelper#copy(java.lang.Object, java.lang.Object) Make a copy of element in the given namespace.<p> This function is a dispatcher that calls the copyElement(Element,Namespace) function from XXXFactory.<p> This function may fail and return null for any of the following reasons: <ol> <li>No copy function is known for element's type. <li>The copy function fails or throws. </ol> @param anelement is the element to copy. @param ans the namespace @return a copy of element, or null. @throws IllegalArgumentException if element is null.", "target": 0}
{"idx": 20576, "func": "TODO: User defined profile support untested currently + \"\\t\\t<userDefined>\\n\" + \"\\t\\t\\t<filename>\\n\" + \"foo.profile\\n\" + \"</filename>\\n\" + \"\\t\\t\\t<model>\\n\" + \"foo.profile.package\\n\" + \"\\t\\t\\t</model>\\n\" + \"\\t\\t</userDefined>\\n\"", "target": 0}
{"idx": 20577, "func": "JDBC spec says that BIT refers to a boolean column - i.e. a single binary digit with value either \"0\" or \"1\". Also the same spec encourages use of getBoolean/setBoolean. However, the SQL-92 standard clearly states that the BIT type is a bit string with length >= 0. So for SQL-92 compliant databases (like PostgreSQL) the JDBC spec's support for BIT is at best broken and unusable. Still, we do what the JDBC spec suggests as that is all that we can do.", "target": 0}
{"idx": 20578, "func": "(non-Javadoc) @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)", "target": 0}
{"idx": 20579, "func": "28 29, 30 31-37", "target": 0}
{"idx": 20580, "func": "TODO: remove this useless Entry parameter", "target": 1}
{"idx": 20581, "func": "create subplot 1...", "target": 0}
{"idx": 20582, "func": "Keep trying until all else has failed.", "target": 0}
{"idx": 20583, "func": "how to handle empty target lists? probably the TabDiagram should only show an empty pane in that case", "target": 0}
{"idx": 20584, "func": "note: authority == null -> hierarchical (authority == null && device == null && !absolutePath) -> scheme == null", "target": 0}
{"idx": 20585, "func": "Create the cipher //$NON-NLS-1$", "target": 0}
{"idx": 20586, "func": "//{{{ indexJAR() method", "target": 0}
{"idx": 20587, "func": "end class CrMultiComposite", "target": 0}
{"idx": 20588, "func": "//[reg]", "target": 0}
{"idx": 20589, "func": "and independent...", "target": 0}
{"idx": 20590, "func": "jump offset GOTO_W newOffset now computed from start of GOTO_W", "target": 0}
{"idx": 20591, "func": "label...", "target": 0}
{"idx": 20592, "func": "Timeouts not active How much left", "target": 0}
{"idx": 20593, "func": "//check for line breaks", "target": 0}
{"idx": 20594, "func": "add a series", "target": 0}
{"idx": 20595, "func": "if the buffer count becomes 0, then it is guaranteed to become 1 very soon, so don't do anything in that case.", "target": 0}
{"idx": 20596, "func": "//{ deep copy from values[], caller can safely discard that array", "target": 0}
{"idx": 20597, "func": "Create a new array. //", "target": 0}
{"idx": 20598, "func": "// settings.setFormatSqlEnabled(formatSql);", "target": 0}
{"idx": 20599, "func": "this is a fall-back, however, this should never be called", "target": 1}
{"idx": 20600, "func": "If processSchemaLocations is specified, treat these as XML Schema locations", "target": 0}
{"idx": 20601, "func": "BUG: if there are multiple selections in different contexts, the wrong comment strings will be inserted.", "target": 1}
{"idx": 20602, "func": "@see org.argouml.uml.ui.UMLComboBoxModel2#getSelectedModelElement()", "target": 0}
{"idx": 20603, "func": "Logging stuff //", "target": 0}
{"idx": 20604, "func": "Overrides REToken.chain() to optimize for strings", "target": 0}
{"idx": 20605, "func": "get current message list selection", "target": 0}
{"idx": 20606, "func": "subtitles", "target": 0}
{"idx": 20607, "func": "keep searching for the first ^Z", "target": 0}
{"idx": 20608, "func": "we always assume an instance with a null identifier or no identifier property is unsaved!", "target": 0}
{"idx": 20609, "func": "//{{{ setInstantPopups() method", "target": 0}
{"idx": 20610, "func": "line 1136", "target": 0}
{"idx": 20611, "func": "urlGeneratorList", "target": 0}
{"idx": 20612, "func": "Layout", "target": 0}
{"idx": 20613, "func": "identifier-commalist", "target": 0}
{"idx": 20614, "func": "override common behavior to use drop column style two", "target": 0}
{"idx": 20615, "func": "saveOrUpdate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 20616, "func": "remove/add the action bar from the view so to avoid having an empty action bar participating in the view's layout calculation (and maybe causing an empty bar to appear)", "target": 0}
{"idx": 20617, "func": "Test sending data as UTF-8, with values that would have been urlencoded if it was not sent as multipart", "target": 0}
{"idx": 20618, "func": "Check name for consistency with spec", "target": 0}
{"idx": 20619, "func": "dup2 new fd into self to preserve fileno and references to it", "target": 0}
{"idx": 20620, "func": "should never happen", "target": 0}
{"idx": 20621, "func": "write TODO: Check if sections are not used within the file and put them as comments at the end of the file. Hint: use a second Map to compare with the used keys. @param filename the file name @param indent the current indentation @param outputLostSections true if lost sections are to be written", "target": 1}
{"idx": 20622, "func": "//{{{ send() method", "target": 0}
{"idx": 20623, "func": "//For reasons that i cannot exmplain, this is out by two, probably due to the //border or insets around a cell??", "target": 0}
{"idx": 20624, "func": "i18n[graph.format=Format ...]", "target": 0}
{"idx": 20625, "func": "//{{{ lookupWord() method", "target": 0}
{"idx": 20626, "func": "Call methods that exists for all objects and that always return something meaningful", "target": 0}
{"idx": 20627, "func": "TODO: find a way to avoid the cost of creating a String here -- probably a new PatternMatcherInput working on a byte[] would do better.", "target": 1}
{"idx": 20628, "func": "Initial precision is that of double numbers 2^63/2 ~ 4E18 63-1 an even number of number bits precision seems 16 to 18 digits", "target": 0}
{"idx": 20629, "func": "create update/cancel controls using default layout", "target": 0}
{"idx": 20630, "func": "Trailing directory", "target": 0}
{"idx": 20631, "func": "TODO: The reference to the method org.argouml.uml.ui.VetoablePropertyChange#getVetoMessage(String) was here but the class does exist anymore. Where is it? This method is never used! @param propertyName is the name of the property @return a message or null if not applicable.", "target": 1}
{"idx": 20632, "func": "i18n[PreferencesPanel.procedureSeparatorLabel=Procedure/Function Separator]", "target": 0}
{"idx": 20633, "func": "create IMAP protocol", "target": 0}
{"idx": 20634, "func": "Literals never have line ends", "target": 0}
{"idx": 20635, "func": "return the text converted from the file", "target": 0}
{"idx": 20636, "func": "end of try block", "target": 0}
{"idx": 20637, "func": "@see org.argouml.application.api.ProgressMonitor#setMaximumProgress(int)", "target": 0}
{"idx": 20638, "func": "default charset", "target": 0}
{"idx": 20639, "func": "OPTIMISTIC LOCK MODE", "target": 0}
{"idx": 20640, "func": "i.e. if we want per thread pooling pool will be created later", "target": 0}
{"idx": 20641, "func": "//fill it", "target": 0}
{"idx": 20642, "func": "Where, in the drag image, the mouse was clicked", "target": 0}
{"idx": 20643, "func": "//{{{ exit() method", "target": 0}
{"idx": 20644, "func": "There will be no iterator to prune. //", "target": 0}
{"idx": 20645, "func": "No further listeners required in this case - the rest is handled by the notationProvider and sub-Figs.", "target": 0}
{"idx": 20646, "func": "add it to the headerlist", "target": 0}
{"idx": 20647, "func": "update treemodel", "target": 0}
{"idx": 20648, "func": "string to eval", "target": 0}
{"idx": 20649, "func": "Tests to see if the correct prefix was used to create the tempfiles.", "target": 0}
{"idx": 20650, "func": "//////////////////////////////////////////////////////////////protected methods", "target": 0}
{"idx": 20651, "func": "Set the content length", "target": 0}
{"idx": 20652, "func": "todo : should really move this log statement to CollectionType, where this is used from...", "target": 1}
{"idx": 20653, "func": "Set the name so that superclasses can find the newly created element in the model, if necessary.", "target": 0}
{"idx": 20654, "func": "When the pane or any child gains focus, notify the workbench.", "target": 0}
{"idx": 20655, "func": "//{{{ getIOThreadPool() method", "target": 0}
{"idx": 20656, "func": "//determine the destination filename via the mapper", "target": 0}
{"idx": 20657, "func": "Dummy to ensure there is a test to run", "target": 0}
{"idx": 20658, "func": "rounding neccessary", "target": 0}
{"idx": 20659, "func": "digits array shifted, update all", "target": 0}
{"idx": 20660, "func": "Test method for 'org.apache.jmeter.protocol.http.sampler.postWriter.sendPostData(URLConnection, HTTPSampler)' This method test sending only a file multipart.", "target": 0}
{"idx": 20661, "func": "Internal initialization method. Handles initialization which is common to both public methods.", "target": 0}
{"idx": 20662, "func": "fetch the value...", "target": 0}
{"idx": 20663, "func": "NOTE : firstRow is zero-based", "target": 0}
{"idx": 20664, "func": "reset each time we start a new print", "target": 0}
{"idx": 20665, "func": "line contains \"@\" (evolution mbox style) or -> import message in Columba", "target": 0}
{"idx": 20666, "func": "for new test plans that don't have FILE/PARAM/MIME properties", "target": 0}
{"idx": 20667, "func": "size should be 1", "target": 0}
{"idx": 20668, "func": "compose the message suitable for sending", "target": 0}
{"idx": 20669, "func": "Register the notation.", "target": 0}
{"idx": 20670, "func": "this internally used headerfields can be of every basic type, including String, Integer, Boolean, Date, etc.", "target": 0}
{"idx": 20671, "func": "(non-Javadoc) @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#add(org.eclipse.emf.ecore.ENamedElement, org.eclipse.emf.ecore.xmi.XMLResource.XMLInfo)", "target": 0}
{"idx": 20672, "func": "left-pointing triangle", "target": 0}
{"idx": 20673, "func": "----- Ruby Instance Methods -------------------------------------------------", "target": 0}
{"idx": 20674, "func": "Get the preference for the recent files", "target": 0}
{"idx": 20675, "func": "get the icon", "target": 0}
{"idx": 20676, "func": "i18n[sqlbookmark.nodeUserMarks=User bookmarks]", "target": 0}
{"idx": 20677, "func": "TODO appears to duplicate the threadName field in SampleResult", "target": 1}
{"idx": 20678, "func": "for result", "target": 0}
{"idx": 20679, "func": "only initialized to prevent warning", "target": 0}
{"idx": 20680, "func": "TODO: the namespace of created events is currently the model. I think this is wrong, they should be in the namespace of the activitygraph! vec.addAll( Model.getModelManagementHelper().getAllModelElementsOfKind( Model.getFacade().getNamespace(getTarget()), Model.getMetaTypes().getEvent()));", "target": 1}
{"idx": 20681, "func": "EQ == 0 (i.e. false) pop the extra result and replace with the send part of the AND", "target": 0}
{"idx": 20682, "func": "i18n[mssql.objectsToBeScripted=Objects to be scripted]", "target": 0}
{"idx": 20683, "func": "Skip formatting for Stored Procedures - They can have comments embedded in them, and I'm presently not sure how the formatter handles this.", "target": 1}
{"idx": 20684, "func": "check if collection is currently being loaded", "target": 0}
{"idx": 20685, "func": "@see org.tigris.gef.base.Diagram#initialize(java.lang.Object)", "target": 0}
{"idx": 20686, "func": "@see org.argouml.ui.targetmanager.TargettableModelView#getTargettableModel()", "target": 0}
{"idx": 20687, "func": "Wait for external editor to quit", "target": 0}
{"idx": 20688, "func": "//TODO (@author fdietz): Add proper description here", "target": 1}
{"idx": 20689, "func": "If the name is only underscores", "target": 0}
{"idx": 20690, "func": "draw an outline around the Area.", "target": 0}
{"idx": 20691, "func": "reload to pick up new aliases reloading is very quick compared with creating an entry currently", "target": 0}
{"idx": 20692, "func": "unsigned int, native unsigned long, native", "target": 0}
{"idx": 20693, "func": "eat up next arg if present, default to build.xml", "target": 0}
{"idx": 20694, "func": "The stereoDim has height=2, even if it is empty, hence the -2 below:", "target": 0}
{"idx": 20695, "func": "wait for it to finish", "target": 0}
{"idx": 20696, "func": "An Association can only have a single unnamed ClassifierRole, so", "target": 0}
{"idx": 20697, "func": "Set up a VSSCheckOut task", "target": 0}
{"idx": 20698, "func": "default: circle", "target": 0}
{"idx": 20699, "func": "TODO comments are not sent to recordValues", "target": 1}
{"idx": 20700, "func": "//TODO: eventually put this back in, once we think all is fixed //Object otherAlias = columnsUnique.put(qualifiedColumn, columnAlias);", "target": 1}
{"idx": 20701, "func": "test 2...", "target": 0}
{"idx": 20702, "func": "previous round produced null", "target": 0}
{"idx": 20703, "func": "Although the spec says UTF-8 should be used for encoding URL parameters, most browser use ISO-8859-1 for default if encoding is not known. We use null for contentEncoding, then the url parameters will be added with the value in the URL, and the \"encode?\" flag set to false", "target": 0}
{"idx": 20704, "func": "VK_PLUS + CTRL_DOWN_MASK did not work...", "target": 0}
{"idx": 20705, "func": "now check that all datasets, renderers and axes are being listened too...", "target": 0}
{"idx": 20706, "func": "helper methods //", "target": 0}
{"idx": 20707, "func": "Set up a SOSCheckin task", "target": 0}
{"idx": 20708, "func": "The xml-commons resolver library is not available, so we can't use it. //", "target": 0}
{"idx": 20709, "func": "//{{{ getActionSetForAction() method", "target": 0}
{"idx": 20710, "func": "Add the encrypted MimePart", "target": 0}
{"idx": 20711, "func": "skip '#'", "target": 0}
{"idx": 20712, "func": "i18n[PreLaunchHelperImpl.restoreFromBackupTitle=Confirm Restore From Backup", "target": 0}
{"idx": 20713, "func": "@see org.argouml.uml.diagram.ui.UMLDiagram#relocate(java.lang.Object)", "target": 0}
{"idx": 20714, "func": "This is written to JMX files by ScriptWrapperConverter read from properties file; written to JMX files", "target": 0}
{"idx": 20715, "func": "We are displaying a new dataset, so if there was a cell editor in operation, tell it to cancel. //???? How does this impact popup display?", "target": 1}
{"idx": 20716, "func": "//optimization //optimization", "target": 0}
{"idx": 20717, "func": "FIXME: legal here? may want UnsupportedOperationException", "target": 1}
{"idx": 20718, "func": "filter the tree for a TestFragment.", "target": 0}
{"idx": 20719, "func": "@see org.argouml.ui.Clarifier#setFig(org.tigris.gef.presentation.Fig)", "target": 0}
{"idx": 20720, "func": "we successfully read the whole thing", "target": 0}
{"idx": 20721, "func": "Both lists have the same length", "target": 0}
{"idx": 20722, "func": "This does a calculation of where our \"ext\" directory is. TODO: We should eventually make sure that this calculation is only present in one place in the code and not several.", "target": 1}
{"idx": 20723, "func": "handle null", "target": 0}
{"idx": 20724, "func": "InvocationCallback", "target": 0}
{"idx": 20725, "func": "Fill 3 of value (byte) 33 Fill 3 of value (byte) -19", "target": 0}
{"idx": 20726, "func": "MySQL spatial index requires a not null column", "target": 0}
{"idx": 20727, "func": "Handle the same as an explicit cancel", "target": 0}
{"idx": 20728, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ITableInfo#getExportedKeys()", "target": 0}
{"idx": 20729, "func": "Used by SampleSaveConfigurationConverter.unmarshall()", "target": 0}
{"idx": 20730, "func": "substract the uids on the server from the downloaded uids -> headerUids are the uids that have been removed from the server", "target": 0}
{"idx": 20731, "func": "/////////////////////////////////////////////////////////We use Vectors because a MessageHandler might be called from different threads.", "target": 0}
{"idx": 20732, "func": "Use super because not fully init'd", "target": 0}
{"idx": 20733, "func": "Lots can go wrong while fiddling with Images, Color Models & such! If anything at all goes awry, just return the original TexturePaint. (TexturePaint's are immutable anyway, so no harm done)", "target": 0}
{"idx": 20734, "func": "Also show unattached sequence diagrams:", "target": 0}
{"idx": 20735, "func": "Add CMP descriptors to the list of EJB files", "target": 0}
{"idx": 20736, "func": "line 649", "target": 0}
{"idx": 20737, "func": "TODO: Use default value of appropriate type for TD", "target": 1}
{"idx": 20738, "func": "TODO asArgument??", "target": 1}
{"idx": 20739, "func": "reserve space for any domain axes...", "target": 0}
{"idx": 20740, "func": "'['", "target": 0}
{"idx": 20741, "func": "another test...", "target": 0}
{"idx": 20742, "func": "(non-Javadoc) @see org.columba.core.filter.IFilterList#move(int, int)", "target": 0}
{"idx": 20743, "func": "line 763", "target": 0}
{"idx": 20744, "func": "load options of newly selected folder", "target": 0}
{"idx": 20745, "func": "//validation", "target": 0}
{"idx": 20746, "func": "deregister the collection as a change listener to each series in the collection", "target": 0}
{"idx": 20747, "func": "Provide our own aliasing using strings rather than classes", "target": 0}
{"idx": 20748, "func": "//", "target": 0}
{"idx": 20749, "func": "i18n[MemoryPanel.sessionInfo.toString2=Session: ID={0}, Alias={1}: created at {2}]", "target": 0}
{"idx": 20750, "func": "//{{{ setProperty() method", "target": 0}
{"idx": 20751, "func": "If we get here, then no data type object was found for this column. (should not get here because switch default returns null.)", "target": 0}
{"idx": 20752, "func": "try deleting a time period that doesn't exist...", "target": 0}
{"idx": 20753, "func": "Useful for debugging purposes", "target": 0}
{"idx": 20754, "func": "Short-hand (e.g. %{,%.,%!,... versus %Q{).", "target": 0}
{"idx": 20755, "func": "load self, class, and name", "target": 0}
{"idx": 20756, "func": "attachments found... insert start and end for html", "target": 0}
{"idx": 20757, "func": "Disable DELETE and BROWSE buttons if there are no rows in the table to delete.", "target": 0}
{"idx": 20758, "func": "save the global copy", "target": 0}
{"idx": 20759, "func": "TODO: if the use checks \"export entire table\" and doesn't select all, then the selected indices are not set, and this check doesn't properly detect missing data. If export entire table is selected, we need to set the selected indexes below correctly.", "target": 1}
{"idx": 20760, "func": "TODO: this disables laziness even in non-pojo entity modes:", "target": 1}
{"idx": 20761, "func": "If close() is called, guarantee unbind()", "target": 0}
{"idx": 20762, "func": "note: intentionally returning the actual array returned from Java, rather than wrapping it in a RubyArray. wave of the future, when java_class will return the actual class, rather than a JavaClass wrapper.", "target": 0}
{"idx": 20763, "func": "do nothing. it's naive, but since the utility is meant to parse access logs the formatting should be correct", "target": 0}
{"idx": 20764, "func": "//JMenuItem item = _fileMenu.add(new ActionReopenProject(filename));", "target": 0}
{"idx": 20765, "func": "Cache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 20766, "func": "(non-Javadoc) @see org.columba.mail.folder.mailboximport.AbstractMailboxImporter#importMailbox(java.io.File, org.columba.api.command.IWorkerStatusController)", "target": 0}
{"idx": 20767, "func": "as a class variable, initializes == 0", "target": 0}
{"idx": 20768, "func": "draw the markers that are associated with a specific dataset...", "target": 0}
{"idx": 20769, "func": "(non-Javadoc) @see org.columba.mail.folder.RootFolder#getTrashFolder()", "target": 0}
{"idx": 20770, "func": "UPDATE t SET a = (SELECT a FROM t2 WHERE t.b = t2.b); // String templateStr = // \"UPDATE $destTableName$ SET $columnName$ = \" + // \"(SELECT $columnName$ FROM $sourceTableName$ \" + // \"WHERE $sourceTableName$.$whereColumnName$ = $destTableName$.$whereColumnValue$\"; // StringTemplate st = new StringTemplate(templateStr);", "target": 0}
{"idx": 20771, "func": "Iterate over all the child references to factor each child to the right reference. //", "target": 0}
{"idx": 20772, "func": "special case where we need to force incloude all subclass joins", "target": 0}
{"idx": 20773, "func": "Check mod status on focus", "target": 0}
{"idx": 20774, "func": "... now we have reached an output that is not a result. We now have to aks for this outputs update count.", "target": 0}
{"idx": 20775, "func": "Represents the the dynamic portion of scoping information. The variableValues are the values of assigned local or block variables. The staticScope identifies which sort of scope this is (block or local). Properties of Dynamic Scopes: 1. static and dynamic scopes have the same number of names to values 2. size of variables (and thus names) is determined during parsing. So those structured do not need to change FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents. This is harmless (other than wasting memory), but we should not do that. We can fix this in two ways: 1. Fix all callers 2. Check parent that is passed in and make if new instance is local, then its parent is not local", "target": 0}
{"idx": 20776, "func": "//{{{ getFirstPhysicalLine() method", "target": 0}
{"idx": 20777, "func": "if we have anything or multiple elements selected, we don't do anything TODO: We need to support multiple selection. See issue 2552: http://argouml.tigris.org/issues/show_bug.cgi?id=2552", "target": 1}
{"idx": 20778, "func": "i18n[DataSetUpdateableTableModelImpl.info.identicalrows=This //operation will result in {0} identical rows.\\nDo you wish //to proceed?]", "target": 0}
{"idx": 20779, "func": "create array and return", "target": 0}
{"idx": 20780, "func": "//{{{ recordMacro() method", "target": 0}
{"idx": 20781, "func": "ignoreNullValues", "target": 0}
{"idx": 20782, "func": "//rethrow build exceptions", "target": 0}
{"idx": 20783, "func": "Insert code to update the plugin managers list here later", "target": 0}
{"idx": 20784, "func": "Once we see a lookup of an element in the null namespace, we should behave as if there has been an explicit xmlns=\"\" //", "target": 0}
{"idx": 20785, "func": "jlink output input1 ... inputN", "target": 0}
{"idx": 20786, "func": "If not found, try the parent namespace", "target": 0}
{"idx": 20787, "func": "End BeanShell Modification - added sourceFile info", "target": 0}
{"idx": 20788, "func": "//{{{ CompleteWord constructor", "target": 0}
{"idx": 20789, "func": "Fill 4 of value (byte) -87 Fill 9 of value (byte) 33 Fill 53 of value (byte) -19 Fill 2 of value (byte) 33 Fill 2 of value (byte) -19 Fill 2 of value (byte) 33 Fill 2 of value (byte) -19 Fill 3 of value (byte) 33 Fill 28 of value (byte) -19 Fill 2 of value (byte) 33 Fill 8 of value (byte) -19 Fill 2 of value (byte) 33 Fill 2 of value (byte) -19 Fill 55 of value (byte) 33 Fill 38 of value (byte) -19 Fill 2 of value (byte) 33", "target": 0}
{"idx": 20790, "func": "i18n[I18n.WorkDirDoesNotExistQuestionCreate=Working directory {0} does not exist.\\nDo you want to create it?]", "target": 0}
{"idx": 20791, "func": "register as focus owner", "target": 0}
{"idx": 20792, "func": "make it stretch vertically", "target": 0}
{"idx": 20793, "func": "//{{{ Fold mode", "target": 0}
{"idx": 20794, "func": "Navy.", "target": 0}
{"idx": 20795, "func": "//$NON-NLS-1$ - all threads All threads", "target": 0}
{"idx": 20796, "func": "Strip trailing EOL", "target": 0}
{"idx": 20797, "func": "Element is allowed, but only NamedElement can return nonempty list", "target": 0}
{"idx": 20798, "func": "//always overwrite nonversioned data", "target": 0}
{"idx": 20799, "func": "//{{{ getIntegerProperty() method", "target": 0}
{"idx": 20800, "func": "we are now at a new tree level", "target": 0}
{"idx": 20801, "func": "first: developer could use a little help", "target": 1}
{"idx": 20802, "func": "init bottom panel with OK, Cancel buttons", "target": 0}
{"idx": 20803, "func": "For simplification, get the target value, even if compound", "target": 0}
{"idx": 20804, "func": "create list containing all contact item of this folder", "target": 0}
{"idx": 20805, "func": "Perhaps here we would want to guard with a property for parallel backups or not.", "target": 1}
{"idx": 20806, "func": "//set the timestamp to the file date.", "target": 0}
{"idx": 20807, "func": "//{{{ getArray() method", "target": 0}
{"idx": 20808, "func": "We don't support switching the entry control during a session because serveral things, that are attached to the entry control from outside this plugin would need to reinitialze too. For example code completion and edit extras. synchronized (_session) { ISQLEntryPanelFactory factory = _plugin.getSQLEntryAreaFactory(); ISQLEntryPanel pnl = factory.createSQLEntryPanel(_session); _session.getSQLPanelAPI(_plugin).installSQLEntryPanel(pnl); }", "target": 0}
{"idx": 20809, "func": "I know it's bad to create object. better idea?", "target": 1}
{"idx": 20810, "func": "Override all the super-class Socket methods.", "target": 0}
{"idx": 20811, "func": "body untouched", "target": 0}
{"idx": 20812, "func": "shift Graphic to line up with beginning of next page to print", "target": 0}
{"idx": 20813, "func": "we're sure that there is at least one file because of getSendFileAsPostBody method's return value.", "target": 0}
{"idx": 20814, "func": "ITEM_LABEL_PAINT", "target": 0}
{"idx": 20815, "func": "Get all rows. rows = new ArrayList();", "target": 0}
{"idx": 20816, "func": "Install an instance of this method in the namespace. See notes in BshMethod", "target": 0}
{"idx": 20817, "func": "//////////////////////////////////////////////////////////////constructors", "target": 0}
{"idx": 20818, "func": "Note: the file panel already includes the error logging checkbox, so we don't have to add it explicitly.", "target": 0}
{"idx": 20819, "func": "if we are the source of a return action the activation ends here.", "target": 0}
{"idx": 20820, "func": "Test GUI elements - run the test", "target": 0}
{"idx": 20821, "func": "to be defensive, let's check that the source series does in fact belong to this collection", "target": 0}
{"idx": 20822, "func": "//{{{ isRecursive() method", "target": 0}
{"idx": 20823, "func": "scripts", "target": 0}
{"idx": 20824, "func": "//return value == null || validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);", "target": 0}
{"idx": 20825, "func": "Slight hack - we need to ensure the TestClass is not reset by the previous call", "target": 1}
{"idx": 20826, "func": "table data objects", "target": 0}
{"idx": 20827, "func": "//{{{ getRightDockingArea() method", "target": 0}
{"idx": 20828, "func": "Get the caller principals", "target": 0}
{"idx": 20829, "func": "quietly try to load the class", "target": 0}
{"idx": 20830, "func": "check a series with one item", "target": 0}
{"idx": 20831, "func": "initialize progress bar with total number of messages", "target": 0}
{"idx": 20832, "func": "TODO: Should this not be an assert?", "target": 0}
{"idx": 20833, "func": "//{{{ Convenience methods", "target": 0}
{"idx": 20834, "func": "i18n[PreferencesPanel.useCustomQTToolTip=Gives enhanced capabilities over the default query tokenizer for handling {0} scripts]", "target": 0}
{"idx": 20835, "func": "found new message", "target": 0}
{"idx": 20836, "func": "i18n[I18n.NoWorkDir=Please choose a work dir to store your translations.]", "target": 0}
{"idx": 20837, "func": "and that simple aggregation works", "target": 0}
{"idx": 20838, "func": "Notes: See notes on findMostSpecificMethod. This method should be rolled into findMostSpecificMethod.", "target": 1}
{"idx": 20839, "func": "// return getFactory().getSettings().getBytecodeProvider().getProxyFactoryFactory().buildProxyFactory();", "target": 0}
{"idx": 20840, "func": "@see org.argouml.model.ModelEventPump#removeModelEventListener( java.beans.PropertyChangeListener, java.lang.Object)", "target": 0}
{"idx": 20841, "func": "----------------------------------- Public API ------------------------------------------------------", "target": 0}
{"idx": 20842, "func": "'hibernate.temp.use_jdbc_metadata_defaults' is a temporary magic value. The need for it is intended to be alleviated with future developement, thus it is not defined as an Environment constant... it is used to control whether we should consult the JDBC metadata to determine certain Settings default values; it is useful to not do this when the database may not be available (mainly in tools usage).", "target": 1}
{"idx": 20843, "func": "start is after last data item", "target": 0}
{"idx": 20844, "func": "orb", "target": 0}
{"idx": 20845, "func": "create new buddy", "target": 0}
{"idx": 20846, "func": "another object that has the same values as the original", "target": 0}
{"idx": 20847, "func": "for item labels, we have a special case because there is the possibility to draw (a) the regular item label near to just the upper y-value, or (b) the regular item label near the upper y-value PLUS an additional item label near the lower y-value.", "target": 0}
{"idx": 20848, "func": "it was not found at all!", "target": 0}
{"idx": 20849, "func": "try something from the base class", "target": 0}
{"idx": 20850, "func": "this could be method body, for example", "target": 0}
{"idx": 20851, "func": "this.graph.clear();", "target": 0}
{"idx": 20852, "func": "//first tick of group; create label text", "target": 0}
{"idx": 20853, "func": "invoke pre method stuff", "target": 0}
{"idx": 20854, "func": "make buttons layout", "target": 0}
{"idx": 20855, "func": "Invoke the block, overriding namespace with localNameSpace", "target": 0}
{"idx": 20856, "func": "locate body start- and end tags", "target": 0}
{"idx": 20857, "func": "when marking messages, don't touch selection", "target": 0}
{"idx": 20858, "func": "//{{{ getColumnClass() method", "target": 0}
{"idx": 20859, "func": "we only take the filename, not the whole system path", "target": 0}
{"idx": 20860, "func": "intersect this with the existing clip", "target": 0}
{"idx": 20861, "func": "//////////////////////////////////////////////////////////////VetoableChangeListener implementation", "target": 0}
{"idx": 20862, "func": "field Template#name $NON-NLS-1$", "target": 0}
{"idx": 20863, "func": "Windows 98/95", "target": 0}
{"idx": 20864, "func": "end class OrCM", "target": 0}
{"idx": 20865, "func": "nothing to do in a stateful session", "target": 0}
{"idx": 20866, "func": "//parameter value is -10 > val < 10 //use as-is", "target": 0}
{"idx": 20867, "func": "new message", "target": 0}
{"idx": 20868, "func": "Exclude the COOKIE header, since cookie is reported separately in the sample", "target": 0}
{"idx": 20869, "func": "@see org.argouml.model.MetaTypes#getAbstraction()", "target": 0}
{"idx": 20870, "func": "FIXME: do we really want 'declared' methods? includes private/protected, and does _not_ include superclass methods. also, the getDeclared calls may throw SecurityException if we're running under a restrictive security policy.", "target": 1}
{"idx": 20871, "func": "@see org.argouml.uml.diagram.state.ui.FigState#getInitialWidth()", "target": 0}
{"idx": 20872, "func": "iload_3 i", "target": 0}
{"idx": 20873, "func": "OK, add it to the end of the bucket.", "target": 0}
{"idx": 20874, "func": "Check the persistence context for an entry relating to this entity to be merged...", "target": 0}
{"idx": 20875, "func": "The keyword fig does not exist yet. Let's create one:", "target": 0}
{"idx": 20876, "func": "convert to telnet port", "target": 0}
{"idx": 20877, "func": "add minor ticks (for gridlines)", "target": 0}
{"idx": 20878, "func": "Methods necessary to hide view from clients", "target": 0}
{"idx": 20879, "func": "alterations fail for some reason unless you do this...", "target": 0}
{"idx": 20880, "func": "Setup a naming standard here?.", "target": 0}
{"idx": 20881, "func": "check box for whether to read contents during table load or not", "target": 0}
{"idx": 20882, "func": "btnSetPermissions.setEnabled(false);", "target": 0}
{"idx": 20883, "func": "line 1189", "target": 0}
{"idx": 20884, "func": "//{{{ isJava15() method", "target": 0}
{"idx": 20885, "func": "i18n[generalSessionPropertiesPanel.mainTabs=Main Tabs:]", "target": 0}
{"idx": 20886, "func": "i18n[HelpViewerWindow.error.congen=Error generating Contents file]", "target": 0}
{"idx": 20887, "func": "We should never NOT have an object here because we only get here when a DataType object has claimed that the column is editable. If there is no DataType for the column, then the default in the isEditableXXX() methods in this class is to say that the column is not editable, and therefore we should never have this method called in that case.", "target": 0}
{"idx": 20888, "func": "//give the Interceptor a chance to modify property values", "target": 0}
{"idx": 20889, "func": "if the data is not binary, then there is no need for conversion. if the data is Hex with ASCII not shown as chars, then no conversion needed.", "target": 0}
{"idx": 20890, "func": "//{{{ removeLeftOfScrollBar() method", "target": 0}
{"idx": 20891, "func": "Default Port", "target": 0}
{"idx": 20892, "func": "custom headers", "target": 0}
{"idx": 20893, "func": "@return collection removal FIXME: even if isInverse=\"true\"?", "target": 1}
{"idx": 20894, "func": "@see org.argouml.model.ModelEventPump#startPumpingEvents()", "target": 0}
{"idx": 20895, "func": "collect EntityIdentifier(s) of the current elements - add them into a HashSet for fast access", "target": 0}
{"idx": 20896, "func": "setting lastSelection for srcFolder to null", "target": 0}
{"idx": 20897, "func": "First try to get the lock of the virtual folder", "target": 0}
{"idx": 20898, "func": "Initial x - use double root - multiply by halfBack to unshift - set new scale", "target": 0}
{"idx": 20899, "func": "@see TargettableModelView#getTargettableModel()", "target": 0}
{"idx": 20900, "func": "Currently unused, but we'll probably need it later.", "target": 0}
{"idx": 20901, "func": "JPanel docPane = pane.getTab(TabDocumentation.class);", "target": 0}
{"idx": 20902, "func": "lists to aggregate variables and bodies for whens", "target": 0}
{"idx": 20903, "func": "i18n[HelpViewerWindow.error.loadpluginhelp=Error generating Help entry for plugin {0}]", "target": 0}
{"idx": 20904, "func": "is this a syncrhonized method?", "target": 0}
{"idx": 20905, "func": "targetIndex --> srcIndex", "target": 0}
{"idx": 20906, "func": "the method we want isn't in the CategoryItemRenderer interface...", "target": 1}
{"idx": 20907, "func": "//{{{ User input", "target": 0}
{"idx": 20908, "func": "//{{{ BrowserHandler class", "target": 0}
{"idx": 20909, "func": "//{{{ setSelectionEnd() method", "target": 0}
{"idx": 20910, "func": "EATM Demand create metadata.", "target": 0}
{"idx": 20911, "func": "fix by rfuller", "target": 0}
{"idx": 20912, "func": "If only one new file is open which is clean, just close it, which will create an 'Untitled-1'", "target": 0}
{"idx": 20913, "func": "//TODO: Open stream from the mime part specified by contentID of the //currently viewed mail", "target": 1}
{"idx": 20914, "func": "ctor used by remove/rehash", "target": 0}
{"idx": 20915, "func": "unwrap primitives", "target": 0}
{"idx": 20916, "func": "It causes a lot of pain in serveral places to cope with nulls or emptys here.", "target": 0}
{"idx": 20917, "func": "first, lets determine whether to apply cglib or javassist based instrumentation...", "target": 0}
{"idx": 20918, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.ISQLPanelAPI#fileClose()", "target": 0}
{"idx": 20919, "func": "Simply remove the object from the owner list. //", "target": 0}
{"idx": 20920, "func": "this is needed to be able to open attachments of the decrypted message", "target": 0}
{"idx": 20921, "func": "can check against path characters because the set is the same except for '/' which we've already excluded.", "target": 0}
{"idx": 20922, "func": "if not \"get\", then try \"is\"", "target": 0}
{"idx": 20923, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getDataTypes()", "target": 0}
{"idx": 20924, "func": "add the button to the button group", "target": 0}
{"idx": 20925, "func": "reset the paint counter", "target": 0}
{"idx": 20926, "func": "Defer to whoever loaded us (such as JShell, Echidna, etc)", "target": 0}
{"idx": 20927, "func": "scrollPane.setPreferredSize( new Dimension(200,200) );", "target": 0}
{"idx": 20928, "func": "Something wrong we don't know the cwd... TODO: Is this behavior really desirable? /mov", "target": 1}
{"idx": 20929, "func": "strip table-owner because Informix always returns constraint names as \"<table-owner>.<constraint-name>\"", "target": 0}
{"idx": 20930, "func": "//{{{ loadExtraJARsIfNecessary() method", "target": 0}
{"idx": 20931, "func": "//{{{ getFoldLineStyle() method", "target": 0}
{"idx": 20932, "func": "Was this message actually copied?", "target": 0}
{"idx": 20933, "func": "i18n[laf.lafWarning=Note: Controls may not be drawn correctly after changes in this panel until the application is restarted.]", "target": 0}
{"idx": 20934, "func": "Handle UML 1.4 metamodel which is a MOF 1.3 model", "target": 0}
{"idx": 20935, "func": "need to be called before search/replace to set up all the states we need", "target": 0}
{"idx": 20936, "func": "Special segment values interpreted at resolve and resolve time.", "target": 0}
{"idx": 20937, "func": "do we need to update the crosshair values?", "target": 1}
{"idx": 20938, "func": "The \"root\" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit", "target": 0}
{"idx": 20939, "func": "according to krisk this looks better on OS X...", "target": 0}
{"idx": 20940, "func": "create random port number within range", "target": 0}
{"idx": 20941, "func": "NOTE: This may be called from a different thread, so we need to be careful of the threading restrictions imposed by AbstractDocument for mutators to be sure we don't deadlock.", "target": 0}
{"idx": 20942, "func": "--------- Protected fields/methods below ---------", "target": 0}
{"idx": 20943, "func": "If there is an adapter of the correct type... //", "target": 0}
{"idx": 20944, "func": "//now any inner assertions", "target": 0}
{"idx": 20945, "func": "Fill 53 of value (byte) -19", "target": 0}
{"idx": 20946, "func": "Title multipart", "target": 0}
{"idx": 20947, "func": "//{{{ createStyleTableScroller() method", "target": 0}
{"idx": 20948, "func": "$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ For use in debugging: $NON-NLS-1$", "target": 0}
{"idx": 20949, "func": "Removed for uncomment", "target": 0}
{"idx": 20950, "func": "signed short, native", "target": 0}
{"idx": 20951, "func": "i18n[SQLResultExecuterPanel.canceleRequested=Query execution cancel requested by user.]", "target": 0}
{"idx": 20952, "func": "//figure out which formulas are needed", "target": 0}
{"idx": 20953, "func": "-- class Attribute", "target": 0}
{"idx": 20954, "func": "copy activity", "target": 0}
{"idx": 20955, "func": "thrown by Derby JDBC (at least) if there are no \"?\" markers in statement", "target": 0}
{"idx": 20956, "func": "right", "target": 0}
{"idx": 20957, "func": "If icon has not been defined, then use GUI_CLASS property", "target": 0}
{"idx": 20958, "func": "//{{{ BufferChangeHandler class", "target": 0}
{"idx": 20959, "func": "Get the assocations and connections. No problem (there is a separate critic) if this is not a binary association or is an association role.", "target": 0}
{"idx": 20960, "func": "TODO: keep cr TODO: rb_str_splice_0", "target": 0}
{"idx": 20961, "func": "//{{{ contentInserted() method", "target": 0}
{"idx": 20962, "func": "Finished eval and its a class.", "target": 0}
{"idx": 20963, "func": "Wait up to 1 second", "target": 0}
{"idx": 20964, "func": "We expect this failure when running stand-alone //", "target": 0}
{"idx": 20965, "func": "receiver first, so we know which call site to use", "target": 0}
{"idx": 20966, "func": "b64_xtable for decoding Base 64", "target": 0}
{"idx": 20967, "func": "Test a UML 1.3/XMI 1.1 file to make sure that it gets converted properly. <p> TODO: Our UML 1.3 converter currently only handles XMI 1.0. @throws FileNotFoundException indicates a test configuration problem @throws UmlException if it fails to open the file", "target": 1}
{"idx": 20968, "func": "line 944", "target": 0}
{"idx": 20969, "func": "cnd may be null if next() called us $NON-NLS-1$", "target": 0}
{"idx": 20970, "func": "verify isRelevant is true", "target": 0}
{"idx": 20971, "func": "call to TestBeanHelper.prepare() is intentional", "target": 0}
{"idx": 20972, "func": "manage if cursor x is more than lastX2", "target": 0}
{"idx": 20973, "func": "It's okay for there not be a precompiled template, so fail quietly. exception.printStackTrace();", "target": 0}
{"idx": 20974, "func": "extra field", "target": 0}
{"idx": 20975, "func": "ASCII/ANSI escape", "target": 0}
{"idx": 20976, "func": "//bottom.add( Box.createHorizontalStrut());", "target": 0}
{"idx": 20977, "func": "close JAR file and all JARs that depend on this", "target": 0}
{"idx": 20978, "func": "i18n[CodeCompletionPreferencesPanel.maxLastSelectedCompletionNames=If you call code completion without being in the scope of a table, //for which number of tables the parser last found would you like to see colums on top of the completion list?]", "target": 0}
{"idx": 20979, "func": "Pass request to new thread", "target": 0}
{"idx": 20980, "func": "must be a public method", "target": 0}
{"idx": 20981, "func": "//backwards compatibility two $ map to one mode", "target": 0}
{"idx": 20982, "func": "now we iterate through the operations", "target": 0}
{"idx": 20983, "func": "Type matching never matches inputs that are already mapped", "target": 0}
{"idx": 20984, "func": "Doesn't fit in buffer. Write immediately. ensure nothing left to write", "target": 0}
{"idx": 20985, "func": "//{{{ HideLibrariesButton class", "target": 0}
{"idx": 20986, "func": "//{{{ 4. Check whether it is in <java.home>/lib:", "target": 0}
{"idx": 20987, "func": "These are the file formats I know about:", "target": 0}
{"idx": 20988, "func": "//optimistic-lock=\"all\", include all updatable properties //optimistic-lock=\"dirty\", include all properties we are updating this time", "target": 0}
{"idx": 20989, "func": "plot is likely registered as a listener with the existing axis...", "target": 0}
{"idx": 20990, "func": "clear model", "target": 0}
{"idx": 20991, "func": "will only contain Argument or HTTPArgument", "target": 0}
{"idx": 20992, "func": "NOTE: This is package scope to force callers to use ResourceLoaderWrapper", "target": 0}
{"idx": 20993, "func": "Read the ExternalIDs.", "target": 0}
{"idx": 20994, "func": "@see org.argouml.model.AbstractModelEventPump#removeModelEventListener(java.beans.PropertyChangeListener, java.lang.Object, java.lang.String[])", "target": 0}
{"idx": 20995, "func": "// select message in message list", "target": 0}
{"idx": 20996, "func": "no reference to project - e.g. during normal JUnit tests", "target": 0}
{"idx": 20997, "func": "These may not actually make any difference at present (the code behind addTrigger needs more work).", "target": 1}
{"idx": 20998, "func": "was the details button pressed?", "target": 0}
{"idx": 20999, "func": "create our own copy of the user-supplied tuplizer impl map", "target": 0}
{"idx": 21000, "func": "JRUBY-646 presumably this require should fail", "target": 0}
{"idx": 21001, "func": "line 951", "target": 0}
{"idx": 21002, "func": "we have a pattern and the URL does not match, so skip it", "target": 0}
{"idx": 21003, "func": "if we get here we have failed", "target": 0}
{"idx": 21004, "func": "synch is probably not needed as only called before run starts", "target": 0}
{"idx": 21005, "func": "mockSQLConnection", "target": 0}
{"idx": 21006, "func": "only for use from test code", "target": 0}
{"idx": 21007, "func": "next in expanded range", "target": 0}
{"idx": 21008, "func": "//{{{ resolveImports() method", "target": 0}
{"idx": 21009, "func": "construct mock objects", "target": 0}
{"idx": 21010, "func": "line 449", "target": 0}
{"idx": 21011, "func": "if there is no search engine, try the default one", "target": 0}
{"idx": 21012, "func": "starts at the back, wraps around front, and finishes at back again", "target": 0}
{"idx": 21013, "func": "only scan directories that can include matched files or directories", "target": 0}
{"idx": 21014, "func": "the plugin", "target": 0}
{"idx": 21015, "func": "-cfile", "target": 0}
{"idx": 21016, "func": "TODO: Does this still need to be synchronized? If so then explain why.", "target": 1}
{"idx": 21017, "func": "the implementation of the search next function. It returns always the position of the NEXT found word.", "target": 0}
{"idx": 21018, "func": "4.5.2.35 ProgrammingLanguageDataType", "target": 0}
{"idx": 21019, "func": "set initial value for height where this print object should be broken in points, without scale", "target": 0}
{"idx": 21020, "func": "let DataType object speak for itself", "target": 0}
{"idx": 21021, "func": "document or context-relative URL like: '/path/to' OR '../path/to' OR '/path/to/../path/'", "target": 0}
{"idx": 21022, "func": "//maintain correct duplication if loaded in a cartesian product", "target": 0}
{"idx": 21023, "func": "float(54) produces an exception: invalid column format 'float' on column 'float_column'., SQL State: 42000, Error Code: 2014", "target": 0}
{"idx": 21024, "func": "ignored - we only care about open/closing", "target": 0}
{"idx": 21025, "func": "//{{{ addAction() method", "target": 0}
{"idx": 21026, "func": "The preferences with project-scope:", "target": 0}
{"idx": 21027, "func": "TODO: Only setAccessible to account for pattern found by accessing constants included from a non-public interface. (aka java.util.zip.ZipConstants being implemented by many classes) TODO: not sure we need this at all, since we only expose public fields. //field.setAccessible(true);", "target": 1}
{"idx": 21028, "func": "//if it does not, then the file is not up to date.", "target": 0}
{"idx": 21029, "func": "construct spline number of points Newton form coefficients x-coordinates of nodes", "target": 0}
{"idx": 21030, "func": "for the keys, a shallow copy should be fine because keys should be immutable...", "target": 0}
{"idx": 21031, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsANSI92FullSQL()", "target": 0}
{"idx": 21032, "func": "Sybase Adaptive Server Enterprise", "target": 0}
{"idx": 21033, "func": "should try to use this as little as possible.", "target": 0}
{"idx": 21034, "func": "//i18n[TableExportCsvDlg.lineSeparatorLabel=Line Separator:]", "target": 0}
{"idx": 21035, "func": "while this might be questionable, some menus depend on properties", "target": 1}
{"idx": 21036, "func": "EATM Color startColor = display.getSystemColor(SWT.COLOR_LIST_SELECTION);", "target": 0}
{"idx": 21037, "func": "//{{{ AnimatedIcon constructor", "target": 0}
{"idx": 21038, "func": "perform the checks on the resources", "target": 0}
{"idx": 21039, "func": "don't show a profile application", "target": 0}
{"idx": 21040, "func": "SELECT last_value, max_value, min_value, cache_value, increment_by, is_cycled FROM sequenceName;", "target": 0}
{"idx": 21041, "func": "The param is \"parentFirst\"", "target": 0}
{"idx": 21042, "func": "This is prone to infinite loops if replace string turns out empty.", "target": 0}
{"idx": 21043, "func": "add some base Java classes everyone will need", "target": 0}
{"idx": 21044, "func": "Test that there are 6 X points and some specific values", "target": 0}
{"idx": 21045, "func": "input file to process by GenIC", "target": 0}
{"idx": 21046, "func": "//}}} //{{{ SPAN, EOL_SPAN", "target": 0}
{"idx": 21047, "func": "NOOP state is held by component", "target": 0}
{"idx": 21048, "func": "i18n[oracle.dboutputStayOnTop=Stay on top]", "target": 0}
{"idx": 21049, "func": "Delete the ActionContributionItems with matching action. //", "target": 0}
{"idx": 21050, "func": "Called when the user has pressed Cancel. Performs \"Cancel\" in all Tabs.", "target": 0}
{"idx": 21051, "func": "removeJava2IANAMapping", "target": 0}
{"idx": 21052, "func": "try to \"pretty print\" it", "target": 0}
{"idx": 21053, "func": "$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-2$", "target": 0}
{"idx": 21054, "func": "//column unique-key", "target": 0}
{"idx": 21055, "func": "release the jdk internal caches everytime to ensure this plays nicely with destroyable class-loaders", "target": 0}
{"idx": 21056, "func": "Note: Windows user preferences are stored relative to: HKEY_CURRENT_USER\\Software\\JavaSoft\\Prefs", "target": 0}
{"idx": 21057, "func": "line 766", "target": 0}
{"idx": 21058, "func": "Fold mode", "target": 0}
{"idx": 21059, "func": "Return false here", "target": 0}
{"idx": 21060, "func": "separatorPaint", "target": 0}
{"idx": 21061, "func": "menu.setVisible(true);", "target": 0}
{"idx": 21062, "func": "row keys...", "target": 0}
{"idx": 21063, "func": "so it still looks like a cube", "target": 0}
{"idx": 21064, "func": "Don't try to test this if we're removing the element", "target": 0}
{"idx": 21065, "func": "case SQLTokenContext.ANNOTATION_ID: JDK 1.5 annotations return new Coloring(null, new Color(0, 111, 0), null);", "target": 0}
{"idx": 21066, "func": "skip finalize methods", "target": 0}
{"idx": 21067, "func": "after s1 is removed from the collection, we should be able to set the key to anything we want...", "target": 0}
{"idx": 21068, "func": "should remote engines be stopped at end of non-GUI test?", "target": 0}
{"idx": 21069, "func": "multicast bit", "target": 0}
{"idx": 21070, "func": "Allow reversion to original shared session context", "target": 0}
{"idx": 21071, "func": "The next 3 functions implement the RangeInfo interface. Using saved limits (updated by each updateTime() call) significantly improves performance. WARNING: this code makes the simplifying assumption that data is never negative. Expand as needed for the general case.", "target": 0}
{"idx": 21072, "func": "i18n[SQLPanel.limitrowscheckbox.hint=Limit rows: ]", "target": 0}
{"idx": 21073, "func": "options.xml //<options> <gui> <messageviewer inline_attachments=\"false\"> <smilies enabled=\"true\" /> <quote color=\"0\" enabled=\"true\" /> </messageviewer> <tree> <sorting sorted=\"true\" ascending=\"true\" comparator=\"alphabetic\" /> </tree> </gui> <html prefer=\"true\" /> <markasread delay=\"2\" enabled=\"true\" /> <headerviewer style=\"0\" headerfields=\"Subject Date Reply-To From To Cc Bcc\" /> //</options>", "target": 0}
{"idx": 21074, "func": "we actually are computing max x & max y, not width & height", "target": 0}
{"idx": 21075, "func": "@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)", "target": 0}
{"idx": 21076, "func": "i18n[Application.info.jdbcwriter=Attempting to set JDBC debug log to writer]", "target": 0}
{"idx": 21077, "func": "If we're about to upgrade the file lets take an archive of it first.", "target": 0}
{"idx": 21078, "func": "//execute the get", "target": 0}
{"idx": 21079, "func": "... sweet. saveBackup() will create backupDir if it doesn't exist.", "target": 0}
{"idx": 21080, "func": "startAngle", "target": 0}
{"idx": 21081, "func": "//persistent collections may have components", "target": 0}
{"idx": 21082, "func": "@see java.util.Collection#addAll(java.util.Collection)", "target": 0}
{"idx": 21083, "func": "------------------------------------------------------------------------ Constructors ------------------------------------------------------------------------", "target": 0}
{"idx": 21084, "func": "not first tick of group //no label //make sure flag cleared", "target": 0}
{"idx": 21085, "func": "//$NON-NLS-1$ file_merge.setAccelerator( KeyStroke.getKeyStroke(KeyEvent.VK_O, KeyEvent.CTRL_MASK)); Set default SAVE menu item to disabled since the default node that is selected is ROOT, which does not allow items to be inserted.", "target": 0}
{"idx": 21086, "func": "if source is EOF but last character was NOT ctrl-z, return ctrl-z", "target": 0}
{"idx": 21087, "func": "we assum super is always initialized to all-zero matrix, so the total sum should be 0 upon initialization. However, we set it to Double.MIN_VALUE to get the same effect and yet avoid division by 0 upon initialization.", "target": 0}
{"idx": 21088, "func": "element name", "target": 0}
{"idx": 21089, "func": "VAJ kludge //", "target": 0}
{"idx": 21090, "func": "must always agree", "target": 0}
{"idx": 21091, "func": "Now, inject the newly built ORDER BY into the tree", "target": 0}
{"idx": 21092, "func": "Are the sub elements the same ?", "target": 0}
{"idx": 21093, "func": "@see org.argouml.cognitive.Poster#supports(org.argouml.cognitive.Goal)", "target": 0}
{"idx": 21094, "func": "Not the Textcontrol itself changed but some other of the Syntax Preferences, for example a color. So we tell the current control to update the preferences.", "target": 0}
{"idx": 21095, "func": "(non-Javadoc) @see org.columba.mail.folder.event.IFolderListener#folderAdded(org.columba.mail.folder.event.IFolderEvent)", "target": 0}
{"idx": 21096, "func": "(non-Javadoc) @see org.columba.mail.imap.IImapServer#fetchNamespaces()", "target": 0}
{"idx": 21097, "func": "call the workaround", "target": 1}
{"idx": 21098, "func": "value 1", "target": 0}
{"idx": 21099, "func": "If the type isn't Object, we need to cast. If it's a primitive, we need to unbox. //", "target": 0}
{"idx": 21100, "func": "restart timer", "target": 0}
{"idx": 21101, "func": "@see org.argouml.uml.diagram.ui.FigEdgeModelElement#updateListeners(java.lang.Object)", "target": 0}
{"idx": 21102, "func": "//{{{ ButtonCompare class", "target": 0}
{"idx": 21103, "func": "Push vars", "target": 0}
{"idx": 21104, "func": "Account is an IMAP account -> change root folder name", "target": 0}
{"idx": 21105, "func": "20% 20% 20%", "target": 0}
{"idx": 21106, "func": "Step 3:", "target": 0}
{"idx": 21107, "func": "At least one stereotype is visible", "target": 0}
{"idx": 21108, "func": "TODO: the namespace of enlisted events is currently the model. I think this is wrong, they should be in the namespace of the activitygraph! vec.addAll(Model.getModelManagementHelper().getAllModelElementsOfKind( Model.getFacade().getNamespace(getTarget()), Model.getMetaTypes().getEvent()));", "target": 1}
{"idx": 21109, "func": "(non-Javadoc) @see org.columba.core.filter.IFilter#getName()", "target": 0}
{"idx": 21110, "func": "no-op: not a real business error", "target": 0}
{"idx": 21111, "func": "container specification group", "target": 0}
{"idx": 21112, "func": "Create a strict compound command to do a copy and then add the result //", "target": 0}
{"idx": 21113, "func": "The eAnnotations and eGenericType are possible containment references. We'll move them instead of copying //", "target": 1}
{"idx": 21114, "func": "Note: this is an instance field (and is not transient), so is created by the JMeter client and propagated to the server instance by RMI. [a static field would be recreated on the server, and would pick up the server properties] $NON-NLS-1$", "target": 0}
{"idx": 21115, "func": "Maps TableColumn objects to tooltips", "target": 0}
{"idx": 21116, "func": "Logging.log.severe(\"Error while looking for charset\", e);", "target": 0}
{"idx": 21117, "func": "type-cast here is safe", "target": 0}
{"idx": 21118, "func": "Add it back", "target": 0}
{"idx": 21119, "func": "Get appropriate sender class governed by the behaviour set in the JMeter property", "target": 0}
{"idx": 21120, "func": "grab the current letter as a char", "target": 0}
{"idx": 21121, "func": "Ignore empty lines", "target": 0}
{"idx": 21122, "func": "//{{{ getLineText() method", "target": 0}
{"idx": 21123, "func": "line 1573", "target": 0}
{"idx": 21124, "func": "wait to add shutdown hook as needed", "target": 0}
{"idx": 21125, "func": "Add table types to list.", "target": 0}
{"idx": 21126, "func": "try to determine it from publicId", "target": 0}
{"idx": 21127, "func": "Check to see if association still exists", "target": 0}
{"idx": 21128, "func": "Don't redirect the following: 300 = Multiple choice 304 = Not Modified 305 = Use Proxy 306 = (Unused)", "target": 0}
{"idx": 21129, "func": "i18n[editWherColsSheet.reset=Reset]", "target": 0}
{"idx": 21130, "func": "Sanity checks", "target": 0}
{"idx": 21131, "func": "enable commenting out", "target": 0}
{"idx": 21132, "func": "Send ChangeEvent", "target": 0}
{"idx": 21133, "func": "Has chances to be a var", "target": 0}
{"idx": 21134, "func": "TODO: link to the Signal.", "target": 1}
{"idx": 21135, "func": "Probably shutting down.", "target": 0}
{"idx": 21136, "func": "The indexes are in ascending order, but we want to delete in descending order (see previous comment), so run through the list backwards.", "target": 0}
{"idx": 21137, "func": "set JavaHelp topic ID setTopicID(\"cancel\");", "target": 0}
{"idx": 21138, "func": "Don't use the normal reference copying for eOpposite. //", "target": 0}
{"idx": 21139, "func": "State variables", "target": 0}
{"idx": 21140, "func": "2!", "target": 0}
{"idx": 21141, "func": "If recurse, set global untyped var, else set it here. //NameSpace varScope = recurse ? getGlobal() : this; This modification makes default allocation local", "target": 0}
{"idx": 21142, "func": "if \"from\" part is longer, fill it up with \"..\" to reach path which is equal to both paths", "target": 0}
{"idx": 21143, "func": "//i18n[hibernate.HibernateTabPanel.openConfigs=Open Hibernate configurations]", "target": 0}
{"idx": 21144, "func": "labelBackgroundPaint", "target": 0}
{"idx": 21145, "func": "restore frames of last session", "target": 0}
{"idx": 21146, "func": "i18n[mssql.currentActivity=Current Activity]", "target": 0}
{"idx": 21147, "func": "set new starting point for the polygon", "target": 0}
{"idx": 21148, "func": "Tell the dot node about the join type.", "target": 0}
{"idx": 21149, "func": "Map to an EParameter as input parameter for operation. //", "target": 0}
{"idx": 21150, "func": "case Node.TEXT_NODE: break;", "target": 0}
{"idx": 21151, "func": "declaredOnly", "target": 0}
{"idx": 21152, "func": "//purpose: using charset from 'targetFile' to encode in-memory 'newContents' object into bytes //modifer: Wu Zhi Qiang //date: Aug 25, 2004 //action: first get the charset from 'targetFile', then use it to encode the 'newContents' object into bytes", "target": 0}
{"idx": 21153, "func": "Title.", "target": 0}
{"idx": 21154, "func": "initLogging();", "target": 0}
{"idx": 21155, "func": "AShapeUtil.addMouseFireEvent(outlineAShape, trigger, DefaultDateArea.AE_CATEGORY_DRAG_PRESSED, false, false, button);", "target": 0}
{"idx": 21156, "func": "get binary stream from rs", "target": 0}
{"idx": 21157, "func": "UseCase 4.11.3.5 [2]", "target": 0}
{"idx": 21158, "func": "Can finish if it's step 0", "target": 0}
{"idx": 21159, "func": "Nested element creators.", "target": 0}
{"idx": 21160, "func": "//{{{ resetProperty() method", "target": 0}
{"idx": 21161, "func": "//as new versions of java come out, add them to this test", "target": 0}
{"idx": 21162, "func": "promise to implement two to N with block", "target": 0}
{"idx": 21163, "func": "Begin code related to printing //", "target": 0}
{"idx": 21164, "func": "Set the owners of the associated FigNodes to be the StateVertexes which are at either end of the Transition. <p> TODO: This needs documentation! Is this really needed? Why? @param lay diagram layer containing this fig @param owner owning UML element @deprecated in 0.28 by Bob Tarling - The above TODO is from Michiel. I also don't understand the purpose of this method. The GEF framework should be setting source/dest or persistence should manage.", "target": 1}
{"idx": 21165, "func": "no matching ctor found", "target": 0}
{"idx": 21166, "func": "Test the constructor used for loading a profile from a Jar file. TODO: Test FigNode! @throws Exception if something goes wrong", "target": 1}
{"idx": 21167, "func": "@see javax.swing.ComboBoxModel#getSelectedItem()", "target": 0}
{"idx": 21168, "func": "Note: We intentionally don't remember internal plugins, because we don't want them to appear in the plugin manager currently. TODO: improve plugin manager dialog to support internal plugins which can't be removed, etc.", "target": 1}
{"idx": 21169, "func": "i18n[ContentsTab.hint=View the contents of the selected table]", "target": 0}
{"idx": 21170, "func": "on MacOS, A+ can be user input", "target": 0}
{"idx": 21171, "func": "only update table if, this folder is the same as the currently selected", "target": 0}
{"idx": 21172, "func": "try row index too high", "target": 0}
{"idx": 21173, "func": "//{{{ EnhancedMenuItem constructor", "target": 0}
{"idx": 21174, "func": "FIRST_MONDAY_AFTER_1900 = cal.getTime().getTime(); preceding code won't work with JDK 1.3", "target": 1}
{"idx": 21175, "func": "(non-Javadoc) @see org.columba.mail.imap.IImapServer#getStatus(org.columba.mail.folder.imap.IMAPFolder)", "target": 0}
{"idx": 21176, "func": "recipient lists", "target": 0}
{"idx": 21177, "func": "properties generated on update can never be updateable...", "target": 0}
{"idx": 21178, "func": "initialize progressbar", "target": 0}
{"idx": 21179, "func": "TODO: turn off readable? am I reading this right? This only seems to be used while duping below, since modes gets reset to actual modes afterward //fptr->mode &= (m & FMODE_READABLE) ? ~FMODE_READABLE : ~FMODE_WRITABLE;", "target": 1}
{"idx": 21180, "func": "add leading comments", "target": 0}
{"idx": 21181, "func": "Keep trying other member types until all have failed.", "target": 0}
{"idx": 21182, "func": "@see org.tigris.gef.base.SelectionButtons#paint(java.awt.Graphics)", "target": 0}
{"idx": 21183, "func": "keep nagging until the user solves the problem: This seems a nice way to nag:", "target": 0}
{"idx": 21184, "func": "no existing file or not valid Alphanum to avoid issues with command-line quoting we use same password for both", "target": 0}
{"idx": 21185, "func": "'u' with space or plus flags is same as 'd'", "target": 0}
{"idx": 21186, "func": "Continue with the unresolved URI.", "target": 0}
{"idx": 21187, "func": "target file exptected string", "target": 0}
{"idx": 21188, "func": "Can be returned by headless hosts", "target": 0}
{"idx": 21189, "func": "would be great to move all this below here into another method that could also be used from the new scrolling stuff. Would need to change the way the max-row stuff is handled (i.e. behind an interface) so that I could do the control breaking at the means to know when to stop", "target": 1}
{"idx": 21190, "func": "Test sending data as ISO-8859-1", "target": 0}
{"idx": 21191, "func": "If we get here then we didn't get the default diagram.", "target": 0}
{"idx": 21192, "func": "only this case affects backrefs", "target": 0}
{"idx": 21193, "func": "checkcast (case of reference type)", "target": 0}
{"idx": 21194, "func": "TBLRC 01101 - bottom, left and center", "target": 0}
{"idx": 21195, "func": "//$NON-NLS-1$ so we can add them again in init", "target": 0}
{"idx": 21196, "func": "line 552", "target": 0}
{"idx": 21197, "func": "probably not possible, but check anyway", "target": 0}
{"idx": 21198, "func": "@see org.argouml.uml.ui.UMLComboBox2#UMLComboBox2( UMLComboBoxModel2, Action, boolean)", "target": 0}
{"idx": 21199, "func": "For a 1-to-many association, doing the set as a remove and add from the other end will make it undoable. In particular, if there is an existing non-null value, we first need to remove it from the other end, so that it will be reinserted at the correct index on undo. //", "target": 0}
{"idx": 21200, "func": "//{{{ EntryCompare class", "target": 0}
{"idx": 21201, "func": "@see org.argouml.uml.diagram.ui.AbstractActionRadioMenuItem#toggleValueOfTarget(java.lang.Object)", "target": 0}
{"idx": 21202, "func": "Take care of the quoting here.", "target": 0}
{"idx": 21203, "func": "HHH-2481 make sure the callback gets cleared, otherwise the instance stays in a static thread local.", "target": 0}
{"idx": 21204, "func": "i18n[graph.inch=inch]", "target": 0}
{"idx": 21205, "func": "x0 ~ sqrt()", "target": 0}
{"idx": 21206, "func": "find out where to place the label...", "target": 0}
{"idx": 21207, "func": "The syntax used to add a foreign key constraint to a table.", "target": 0}
{"idx": 21208, "func": "Create an empty but initialized instance of a UML Dependency. @return an initialized UML Dependency instance. TODO: This needs an extra parameter to specify the model/extent where the new element should be created.", "target": 1}
{"idx": 21209, "func": "run with no exit for better reporting", "target": 0}
{"idx": 21210, "func": "strip the -", "target": 0}
{"idx": 21211, "func": "protected JETEmitter extendedItemProviderEmitter = null;", "target": 0}
{"idx": 21212, "func": "Use this instead of getLabelResource() otherwise getDocAnchor() below does not work", "target": 0}
{"idx": 21213, "func": "baseSeriesVisible", "target": 0}
{"idx": 21214, "func": "matching authorities and no device or path removal", "target": 0}
{"idx": 21215, "func": "UPDATE tableName SET setColumn1 = setValue1, setColumn2 = setValue2 FROM fromTable1, fromTable2 WHERE whereColumn1 = whereValue1 AND whereColumn2 = whereValue2;", "target": 0}
{"idx": 21216, "func": "i18n[AliasInternalFrame.error.sessioncreation=Test Button has created a session, this is a programming error]", "target": 0}
{"idx": 21217, "func": "colorMap.put(CLR_GRAD_START, clr1);", "target": 0}
{"idx": 21218, "func": "try a multi-part netware-volume length path, see how it is handled", "target": 0}
{"idx": 21219, "func": "i18n[mssql.scriptPrimary=Script PRIMARY keys, FOREIGN keys, defaults, and check constraints]", "target": 0}
{"idx": 21220, "func": "i18n[mapdataset.key=Key]", "target": 0}
{"idx": 21221, "func": "fractional seconds This will round", "target": 0}
{"idx": 21222, "func": "one space for blank header $NON-NLS-1$ one space for blank header $NON-NLS-1$", "target": 0}
{"idx": 21223, "func": "//{{{ generateCache() method", "target": 0}
{"idx": 21224, "func": "fixed range axis space...", "target": 0}
{"idx": 21225, "func": "Data type keyword numeric-ids", "target": 0}
{"idx": 21226, "func": "If we've loop through one time for each character in the string, then something must be wrong. Get out!", "target": 0}
{"idx": 21227, "func": "These should be different since we are providing two different statement separators in SessionProperties", "target": 0}
{"idx": 21228, "func": "i18n[codecompletion.beingLoaded=Code competion infomation is still being loaded.\\nTry again later.]", "target": 0}
{"idx": 21229, "func": "( (Column) discrim.getColumnIterator().next() ).setType(type);", "target": 0}
{"idx": 21230, "func": "This is package, so check the package information if this is in cat file. If it is, then load the .cat file into the tree thereby traversing it; otherwise, just traverse the tree. //", "target": 0}
{"idx": 21231, "func": "Fill 3 of value (byte) -87", "target": 0}
{"idx": 21232, "func": "i18n[mysql.createTableComm=Create Table...]", "target": 0}
{"idx": 21233, "func": "replace all backslash with double backslash", "target": 0}
{"idx": 21234, "func": "Adding Rows", "target": 0}
{"idx": 21235, "func": "todo: is this comment still relevant ?? FIXME: need to use a SAXSource as the source for the transform so we can plug in our own entity resolver", "target": 1}
{"idx": 21236, "func": "$NON-NLS-$", "target": 0}
{"idx": 21237, "func": "the load method is used for loading as a top-level script, and prepares appropriate scoping around the code", "target": 0}
{"idx": 21238, "func": "//We have to create a unlocked label first", "target": 0}
{"idx": 21239, "func": "line 625", "target": 0}
{"idx": 21240, "func": "We trigger an update only when the exists changed which should be equal with a Recent change.", "target": 0}
{"idx": 21241, "func": "i18n[popupeditableIoPanel.exportError6=Export Error]", "target": 0}
{"idx": 21242, "func": "//return value == null || validate(value, URIC_HI, URIC_LO, true, true);", "target": 0}
{"idx": 21243, "func": "build first node only and return false", "target": 0}
{"idx": 21244, "func": "Constants for input. //", "target": 0}
{"idx": 21245, "func": "//hilo config", "target": 0}
{"idx": 21246, "func": "//i18n[ArtifactStatus.pluginLabel=plugin]", "target": 0}
{"idx": 21247, "func": "Cache", "target": 0}
{"idx": 21248, "func": "try a collection with a single number", "target": 0}
{"idx": 21249, "func": "If address contains a comma, enclose the display name portion in double-quotes", "target": 0}
{"idx": 21250, "func": "can't create custom classloaders", "target": 0}
{"idx": 21251, "func": "don't try twice", "target": 0}
{"idx": 21252, "func": "@see org.tigris.gef.base.PathConv#stuffPoint(java.awt.Point)", "target": 0}
{"idx": 21253, "func": "should the samples be aggregated on thread name or thread group (default) ?", "target": 1}
{"idx": 21254, "func": "start of the central directory", "target": 0}
{"idx": 21255, "func": "default: sans serif //$NON-NLS-1$", "target": 0}
{"idx": 21256, "func": "switch will use this if we have to go back the slow way", "target": 0}
{"idx": 21257, "func": "Create an empty but initialized instance of a UML DataType. @return an initialized UML DataType instance. TODO: This needs an extra parameter to specify the model/extent where the new element should be created.", "target": 1}
{"idx": 21258, "func": "Bubble sort Why? -- In many cases, this.ranges has few elements.", "target": 1}
{"idx": 21259, "func": "Initialize all the core classes", "target": 0}
{"idx": 21260, "func": "//Log.log(Log.ERROR,this,io);", "target": 0}
{"idx": 21261, "func": "If all the objects aren't used up by the above, then we can't do the command. //", "target": 0}
{"idx": 21262, "func": "Among other things, updateReachables() will recursively load all collections that are moving roles. This might cause entities to be loaded.", "target": 0}
{"idx": 21263, "func": "//TODO!!!!!!!", "target": 0}
{"idx": 21264, "func": "//{{{ getFavorites() method", "target": 0}
{"idx": 21265, "func": "(non-Javadoc) @see org.columba.api.command.ICommand#getReference()", "target": 0}
{"idx": 21266, "func": "Set bean properties", "target": 0}
{"idx": 21267, "func": "CASE 1 : Comparing to another Minute object -------------------------------------------", "target": 0}
{"idx": 21268, "func": "//{{{ setSortType() method", "target": 0}
{"idx": 21269, "func": "Security Settings", "target": 0}
{"idx": 21270, "func": "add the perspectives to a list for the combobox", "target": 0}
{"idx": 21271, "func": "don't show extensions in profiles", "target": 0}
{"idx": 21272, "func": "Component glue = Box.createGlue(); c.gridx = 1; c.gridy = 10; gridBag.setConstraints(glue, c); panel.add(glue);", "target": 0}
{"idx": 21273, "func": "{A,A,B,B} are offenders", "target": 0}
{"idx": 21274, "func": "Discard class name, x y w h", "target": 0}
{"idx": 21275, "func": "getter/setter", "target": 0}
{"idx": 21276, "func": "There are no regions so create one and place the vertex there.", "target": 0}
{"idx": 21277, "func": "assuming the user wants a collection of interfaces that can be included together. make it so.", "target": 0}
{"idx": 21278, "func": "don't prompt user if composer should be closed", "target": 0}
{"idx": 21279, "func": "//boolean OK = true;", "target": 0}
{"idx": 21280, "func": "This next line presumes that the 1st fig with this owner is the previous port - and consequently nullifies the owner of this 1st fig.", "target": 0}
{"idx": 21281, "func": "ColumnDisplayDefinition[] colDefs = createColumnDefinitions(md, columnIndices, computeWidths); _dataSetDefinition = new DataSetDefinition(colDefs);", "target": 0}
{"idx": 21282, "func": "Wrap nulls. This is a bit of a cludge to address a deficiency in the class generator whereby it does not wrap nulls on method delegate. See Class Generator.java. If we fix that then we can remove this. (just have to generate the code there.)", "target": 1}
{"idx": 21283, "func": "//TODO replace with proper Exception", "target": 1}
{"idx": 21284, "func": "used to set the type of the parent dot node", "target": 0}
{"idx": 21285, "func": "If this is an {@link #isIRI IRI}, converts it to a strict ASCII URI, using the procedure described in Section 3.1 of the <a href=\"http://www.w3.org/International/iri-edit/draft-duerst-iri-09.txt\">IRI Draft RFC</a>. Otherwise, this URI, itself, is returned. This unused code is included for possible future use...", "target": 0}
{"idx": 21286, "func": "JAVA Impl accepts URLs with unsafe characters so don't do anything", "target": 0}
{"idx": 21287, "func": "//$NON-NLS$", "target": 0}
{"idx": 21288, "func": "set the feature from the attribute list", "target": 0}
{"idx": 21289, "func": "TODO: Move the magic number 4 to a descriptive constant", "target": 1}
{"idx": 21290, "func": "Resolve relative URI to base URI - see RFC 2396 Section 5.2 In some cases, it might make more sense to throw an exception (when scheme is specified is the string spec and the base URI is also specified, for example), but we're just following the RFC specifications", "target": 0}
{"idx": 21291, "func": "empty init $NON-NLS-1$", "target": 0}
{"idx": 21292, "func": "//model.setHeaderField(\"X-Priority\",(String) view.getSelectedItem());", "target": 0}
{"idx": 21293, "func": "//is this ok?", "target": 1}
{"idx": 21294, "func": "TODO check this", "target": 1}
{"idx": 21295, "func": "Set to the default LAF", "target": 0}
{"idx": 21296, "func": "i18n[ErrorStream.error.semantic=Semantic error {0}]", "target": 0}
{"idx": 21297, "func": "Count all the bits in the bit patterns up to this one in the sequence of bit patterns. //", "target": 0}
{"idx": 21298, "func": "remember plugin metadata pluginMap.put(id, pluginMetadata);", "target": 0}
{"idx": 21299, "func": "Set up list of potential targets and enable listener", "target": 0}
{"idx": 21300, "func": "// private final static ILogger s_log = // LoggerController.createLogger(ResultSetColumnReader.class);", "target": 0}
{"idx": 21301, "func": "SSS FIXME: I added this in. Is this correct?", "target": 1}
{"idx": 21302, "func": "//{{{ ShowDirAction class", "target": 0}
{"idx": 21303, "func": "Is the feature an attribute of the owner... //", "target": 0}
{"idx": 21304, "func": "Default to milliseconds", "target": 0}
{"idx": 21305, "func": "Look for an existing reference matching our MofID", "target": 0}
{"idx": 21306, "func": "DB delete worked correctly, so now delete from table //IMPORTANT: The user and the creator both work through the SortableTableModel, not the Actual model. Thus the row indexes to delete are given in the SortableTableModel row numbers, so we must work through that model model to actually do the delete.", "target": 1}
{"idx": 21307, "func": "TODO: We need to rethrow this as some other exception type but that is too much change for the moment.", "target": 1}
{"idx": 21308, "func": "TODO - why does null property have a value?", "target": 1}
{"idx": 21309, "func": "cleanup the environment", "target": 0}
{"idx": 21310, "func": "i18n[TableExportCsvCommand.failedToExecuteCommand=Failed to execute\\n{0}\\nError message\\n{1}\\nSee last log entry for details.]", "target": 0}
{"idx": 21311, "func": "g.drawRect(0, 0, w - 3, h - 3);", "target": 0}
{"idx": 21312, "func": "end class StylePanel", "target": 0}
{"idx": 21313, "func": "Ignore the exception since we will throw one when all else fails.", "target": 0}
{"idx": 21314, "func": "RAMP-UP", "target": 0}
{"idx": 21315, "func": "/////////////////////////////////////////////////////////////GET/SET methods. Setters, of course are where ant user passes in values. ///////////////////////////////////////////////////////////////", "target": 0}
{"idx": 21316, "func": "end of file '1' ')' 'Y' '&' 'S' 'Y'", "target": 0}
{"idx": 21317, "func": "add a value", "target": 0}
{"idx": 21318, "func": "i18n[SessionStartupTimeHintDlg.dontShowAgain=Don't show this message again]", "target": 0}
{"idx": 21319, "func": "Consume the open quote: //", "target": 0}
{"idx": 21320, "func": "And add the gaps around the textfield to get the minimum size of the note.", "target": 0}
{"idx": 21321, "func": "For example: jar:file:/JMeter/lib/ext/ApacheJMeter_core.jar!/org/apache/jmeter/util/JMeterVersion.class or if using an IDE file:/workspaces/JMeter/build/core/org/apache/jmeter/util/JMeterVersion.class", "target": 0}
{"idx": 21322, "func": "Store the base name for relative .cat file references. //", "target": 0}
{"idx": 21323, "func": "//{{{ performOperationsInAWTThread() method", "target": 0}
{"idx": 21324, "func": "redo the test, but the 2 include patterns are inverted", "target": 0}
{"idx": 21325, "func": "make it translucent", "target": 0}
{"idx": 21326, "func": "//{{{ ParentDirectoryRenderer class", "target": 0}
{"idx": 21327, "func": "//{{{ centerCaret() method", "target": 0}
{"idx": 21328, "func": "//sort first by entity name", "target": 0}
{"idx": 21329, "func": "Implements TestStateListener.testStarted()", "target": 0}
{"idx": 21330, "func": "override with pathsep=", "target": 0}
{"idx": 21331, "func": "Find the appropriate parent mapping, which at the very least, should be the mapping root itself. //", "target": 0}
{"idx": 21332, "func": "Does the order matter?", "target": 0}
{"idx": 21333, "func": "@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)", "target": 0}
{"idx": 21334, "func": "Calling a method via reflection results in wrapping any Exceptions in ITE; unwrap these here so runProtected can allocate them correctly.", "target": 0}
{"idx": 21335, "func": "//{{{ markKeyword() method", "target": 0}
{"idx": 21336, "func": "FIXME: NOT_ALLOCATABLE_ALLOCATOR is probably not right here, since we might eventually want JavaArray to be marshallable. JRUBY-414", "target": 1}
{"idx": 21337, "func": "Get expected results as a List", "target": 0}
{"idx": 21338, "func": "plain component", "target": 0}
{"idx": 21339, "func": "set it to an invalid number by default to make sure it is set correctly.", "target": 0}
{"idx": 21340, "func": "Try a silly case", "target": 0}
{"idx": 21341, "func": "line 854", "target": 0}
{"idx": 21342, "func": "Instantiate it", "target": 0}
{"idx": 21343, "func": "delete all existing entries", "target": 0}
{"idx": 21344, "func": "system peep on new messages", "target": 0}
{"idx": 21345, "func": "If the name isn't qualified, it might be a primitive or from java.lang. Otherwise, assume it's in the current package and use the nsPrefix for the qualified package name. //", "target": 0}
{"idx": 21346, "func": "Multiple selection color", "target": 0}
{"idx": 21347, "func": "//}}} //{{{ KEY_RELEASED...", "target": 0}
{"idx": 21348, "func": "(non-Javadoc) @see javax.swing.table.DefaultTableModel#getColumnName(int)", "target": 0}
{"idx": 21349, "func": "//{{{ getModeAbbrevs() method", "target": 0}
{"idx": 21350, "func": "If we do not set it to null first, then we get a MDR DebugException:", "target": 0}
{"idx": 21351, "func": "i.e. \"true\"", "target": 0}
{"idx": 21352, "func": "sorting is enabled", "target": 0}
{"idx": 21353, "func": "may be impossible, but no harm in checking ...", "target": 0}
{"idx": 21354, "func": "Set a custom entity resolver. This entity resolver must be set before addXXX(misc) call. Default value is {@link org.hibernate.util.DTDEntityResolver} @param entityResolver entity resolver to use", "target": 0}
{"idx": 21355, "func": "there must be a better way of fixing this... the problem is that this method can sometimes be called as a result of a text area scroll event, in which case the caret position has not been updated yet.", "target": 1}
{"idx": 21356, "func": "Guard for no data. //", "target": 0}
{"idx": 21357, "func": "set parent folder uid", "target": 0}
{"idx": 21358, "func": "index of the first throws clause child node", "target": 0}
{"idx": 21359, "func": "throw new UnsupportedOperationException(\"For test purposes only\");", "target": 0}
{"idx": 21360, "func": "TODO: Since there may be multiple top level elements in a project, this should be using the default Namespace (currently undefined) or something similar", "target": 0}
{"idx": 21361, "func": "continue with default processing", "target": 0}
{"idx": 21362, "func": "File name/path match", "target": 0}
{"idx": 21363, "func": "workaround for hang if match was zero-width. not sure if there is a better way to handle this", "target": 1}
{"idx": 21364, "func": "@see org.argouml.ui.targetmanager.TargetListener#targetAdded( TargetEvent)", "target": 0}
{"idx": 21365, "func": "Interestingly enough, we get to here when a user uses -Dname=value. However, in some cases, the OS goes ahead and parses this out to args {\"-Dname\", \"value\"} so instead of parsing on \"=\", we just make the \"-D\" characters go away and skip one argument forward. I don't know how to predict when the JDK is going to help or not, so we simply look for the equals sign.", "target": 0}
{"idx": 21366, "func": "bsh.cwd", "target": 0}
{"idx": 21367, "func": "both many-to-one and one-to-one are represented as a Property. EntityPersister is relying on this value to determine \"lazy fetch groups\" in terms of field-level interception. So we need to make sure that we return true here for the case of many-to-one and one-to-one with lazy=\"no-proxy\" impl note - lazy=\"no-proxy\" currently forces both lazy and unwrap to be set to true. The other case we are extremely interested in here is that of lazy=\"proxy\" where lazy is set to true, but unwrap is set to false. thus we use both here under the assumption that this return is really only ever used during persister construction to determine the lazy property/field fetch groupings. If that assertion changes then this check needs to change as well. Partially, this is an issue with the overloading of the term \"lazy\" here...", "target": 0}
{"idx": 21368, "func": "line 1254", "target": 0}
{"idx": 21369, "func": "i18n[DialectUtils.error.getprimarykey=Unable to get primary key info for table {0}]", "target": 0}
{"idx": 21370, "func": "23000: Check constraint violation: {0} 23001: Unique index or primary key violation: {0}", "target": 0}
{"idx": 21371, "func": "TODO: we should be able to optimize this quite a bit post-1.0. JavaClass already has all the methods organized by method name; the next version (supporting protected methods/fields) will have them organized even further. So collectMethods here can just lookup the overridden methods in the JavaClass map, should be much faster.", "target": 1}
{"idx": 21372, "func": "getColumnNullableAlterSQL", "target": 0}
{"idx": 21373, "func": "//TODO clazz is probably always the same as testclass", "target": 1}
{"idx": 21374, "func": "@see org.argouml.model.AggregationKind#getComposite()", "target": 0}
{"idx": 21375, "func": "map a key to the default group", "target": 0}
{"idx": 21376, "func": "TODO: this is not done yet. Eventually this will also feed the rational log.", "target": 1}
{"idx": 21377, "func": "TODO: what is this for?", "target": 1}
{"idx": 21378, "func": "Remove the double-quote characters from around the addresses in the string", "target": 0}
{"idx": 21379, "func": "FIXME: use other fields too", "target": 1}
{"idx": 21380, "func": "Finally, read ahead one row to position result set cursor at the first physical row we are interested in loading", "target": 0}
{"idx": 21381, "func": "set the start time for the Thread Duration is in seconds", "target": 0}
{"idx": 21382, "func": "If this is 'elements' then create a new FROM element.", "target": 0}
{"idx": 21383, "func": "load receiver as original type for virtual invocation", "target": 0}
{"idx": 21384, "func": "//ignore Setup and Post here. We could have filtered the searcher. but then //future Thread Group objects wouldn't execute.", "target": 0}
{"idx": 21385, "func": "'postiveItemLabelAnchor' : immutable, no need to clone reference", "target": 0}
{"idx": 21386, "func": "An array of valid connections, the combination of connecting class and node classes must exist as a row in this list to be considered valid. <ul> <li>The 1st column is the connecting element. <li>The 2nd column is the \"from\" element type. <li>The 3rd column is the \"to\" element type. <li>The 3rd column is optional, if not given then it is assumed to be the same as the \"to\" element. <li>The existence of a 4th column indicates that the connection is valid in one direction only. </ul> TODO: This encodes not only what is legal in UML, but also what ArgoUML knows how to create, so not all legal connections are included. Probably should be split into two pieces: 1) legal UML (here) and 2) supported (in ArgoUML application someplace) - tfm - 20060325<p> Most of these are subtypes of Relationship which includes Association, Dependency, Flow, Generalization, Extend, and Include. Dependency includes Binding, Abstraction, Usage, and Permission. AssociationRole and AssociationClass are Associations. The remaining items (Link, Transition, AssociationEnd, Message) are non-Relationship types which ArgoUML treats as connections/edges.", "target": 1}
{"idx": 21387, "func": "No required specified, check actual number of required args", "target": 0}
{"idx": 21388, "func": "FIXME: null check is removable once we figure out how to assign to unset named block args", "target": 1}
{"idx": 21389, "func": "return a newly loaded object", "target": 0}
{"idx": 21390, "func": "TODO: adjust length so it won't fall in the middle of a multi-byte character. MRI's sprintf.c uses tables in a modified version of regex.c, which assume some particular encoding for a given installation/application. (See regex.c#re_mbcinit in ruby-1.8.5-p12) This is only an issue if the user specifies a precision that causes the string to be truncated. The same issue would arise taking a substring of a ByteList-backed RubyString.", "target": 1}
{"idx": 21391, "func": "@see org.argouml.model.ModelImplementation#getMetaTypes()", "target": 0}
{"idx": 21392, "func": "contentPane.add(dockingPort, BorderLayout.CENTER);", "target": 0}
{"idx": 21393, "func": "i18n[dataTypeBigDecimal.newlinesAsbackslashN=Show newlines as \\\\n within cells]", "target": 0}
{"idx": 21394, "func": "i18n[laf.broderLaf=Look and Feel]", "target": 0}
{"idx": 21395, "func": "Sets the target of the property panel. The given target t may either be a Diagram or a modelelement. If the target given is a Fig, a check is made if the fig has an owning modelelement and occurs on the current diagram. If so, that modelelement is the target. @deprecated As of ArgoUml version 0.13.5, the visibility of this method will change in the future, replaced by {@link org.argouml.ui.targetmanager.TargetManager}. TODO: MVW: I think this should not be deprecated. @param target the new target @see org.argouml.ui.TabTarget#setTarget(java.lang.Object)", "target": 1}
{"idx": 21396, "func": "Insert the attributes, if any.", "target": 0}
{"idx": 21397, "func": "Parse Message from DataStorage", "target": 0}
{"idx": 21398, "func": "Initialize to the size of the first text fragment, with the hopes that it's the only one.", "target": 0}
{"idx": 21399, "func": "check number of JTree rows", "target": 0}
{"idx": 21400, "func": "For Java notation, we also need to listen to \"leaf\" changes, since they are shown as \"final\" on the diagram.", "target": 0}
{"idx": 21401, "func": "now update the object .. has to be outside the main if block above (because of collections)", "target": 0}
{"idx": 21402, "func": "rb_ary_push_m FIXME: Whis is this named \"push_m\"?", "target": 1}
{"idx": 21403, "func": "make sure this \"name\" is an integral", "target": 0}
{"idx": 21404, "func": "The next line is needed so that we have the right dimension when drawing this Fig on the diagram by pressing down the mouse button, even before releasing the mouse button:", "target": 0}
{"idx": 21405, "func": "exact arg list __file__", "target": 0}
{"idx": 21406, "func": "insertable simply because that is the user did not specify anything; just override it", "target": 0}
{"idx": 21407, "func": "JASON: Do we need this? // getSQLPanel().selected();", "target": 1}
{"idx": 21408, "func": "AHA! this is probably the only way to fix this", "target": 1}
{"idx": 21409, "func": "TODO: Make sure this shouldn't go into a previous condition -tml", "target": 1}
{"idx": 21410, "func": "Only do this after all I/O requests are complete", "target": 0}
{"idx": 21411, "func": "private String body; private URL url;", "target": 0}
{"idx": 21412, "func": "Specified file is \"\" actually a directory, so it should pass", "target": 0}
{"idx": 21413, "func": "Mail on userlist reported NPE here - looks like only happens if there are network errors, but check anyway", "target": 0}
{"idx": 21414, "func": "These shouldn't really be <br> instead of <p> elements, but the lines all get run together when pasted into a browser window.", "target": 0}
{"idx": 21415, "func": "No additional features MappingStrategy", "target": 0}
{"idx": 21416, "func": "this includes the case where the underlying dataset is null", "target": 0}
{"idx": 21417, "func": "//{{{ LineContext constructor", "target": 0}
{"idx": 21418, "func": "retrieve event from store", "target": 0}
{"idx": 21419, "func": "//_editor.moveCaretPosition(cursor_pos);", "target": 0}
{"idx": 21420, "func": "//{{{ getAttributes() method", "target": 0}
{"idx": 21421, "func": "Default is to do nothing", "target": 0}
{"idx": 21422, "func": "TODO REMOVE THIS BOGUS EMPTY LINE", "target": 1}
{"idx": 21423, "func": "TODO: This probably belongs with the Diagram subsystem", "target": 1}
{"idx": 21424, "func": "//{{{ getOperationCount() method", "target": 0}
{"idx": 21425, "func": "I would love to compare this with 123456, but depending on the filesystems granularity it can take an arbitrary value. Just assert the time has changed.", "target": 0}
{"idx": 21426, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsCatalogsInPrivilegeDefinitions()", "target": 0}
{"idx": 21427, "func": "1100..11FF;", "target": 0}
{"idx": 21428, "func": "//{{{ setRightClickPopupEnabled() method", "target": 0}
{"idx": 21429, "func": "convertTree(tree);", "target": 0}
{"idx": 21430, "func": "---- workCountryLabel ----", "target": 0}
{"idx": 21431, "func": "@bgen(jjtree) SwitchStatement", "target": 0}
{"idx": 21432, "func": "Must be final to create instance", "target": 0}
{"idx": 21433, "func": "try a collection with a single number plus a NaN", "target": 0}
{"idx": 21434, "func": "This call should get the files checked out from version control if the project is a 'team' project. //", "target": 0}
{"idx": 21435, "func": "resolve relative paths through Project", "target": 0}
{"idx": 21436, "func": "String msg = sqlca.getMessage();", "target": 0}
{"idx": 21437, "func": "Java Doubles are 64 bit long:", "target": 0}
{"idx": 21438, "func": "$NON-NLS-1$ end of TEST values", "target": 0}
{"idx": 21439, "func": "create the canvas and add the required listeners", "target": 0}
{"idx": 21440, "func": "//DMS Why not this? //new SubProgressMonitor(progressMonitor, 1));", "target": 1}
{"idx": 21441, "func": "set clipping for the graphics object", "target": 0}
{"idx": 21442, "func": "Only show the menuitems if they make sense:", "target": 0}
{"idx": 21443, "func": "check default", "target": 0}
{"idx": 21444, "func": "We need a method (operation implementation) to store the method body.", "target": 0}
{"idx": 21445, "func": "//i18n[DropTableDialog.tableLabel=Table(s):]", "target": 0}
{"idx": 21446, "func": "no-op. We don't own the cache so we shouldn't stop it.", "target": 0}
{"idx": 21447, "func": "//decrement to do 1.0 tick now", "target": 0}
{"idx": 21448, "func": "Find the action / form url", "target": 0}
{"idx": 21449, "func": "we can't use SystemClassLoader here, because that doesn't work with java webstart -> instead we use this.getClass().getClassLoader() -> which seems to work perfectly", "target": 1}
{"idx": 21450, "func": "Display cookie in headers table (same location on http protocol)", "target": 0}
{"idx": 21451, "func": "Field e.g. foo.bar=5;", "target": 0}
{"idx": 21452, "func": "Ensure that the map for Ecore is not repeatedly populated and that Property maps to EReference rather than EAttribute. //", "target": 0}
{"idx": 21453, "func": "chop to server.name $NON-NLS-1$", "target": 0}
{"idx": 21454, "func": "ensure <condition> follows the immutability rule", "target": 0}
{"idx": 21455, "func": "endIndex is now position at a ')','\\)' nextIndex is end of string or position after ')' or '\\)'", "target": 0}
{"idx": 21456, "func": "//}}} //}}}", "target": 0}
{"idx": 21457, "func": "Is this thread currently doing an defined? defined should set things like $!", "target": 0}
{"idx": 21458, "func": "short-circuit for performance...", "target": 1}
{"idx": 21459, "func": "Create the layer", "target": 0}
{"idx": 21460, "func": "4.5.2.19 Enumeration", "target": 0}
{"idx": 21461, "func": "srcDir", "target": 0}
{"idx": 21462, "func": "//Create checkbox for enabling auto refresh i18n[oracle.enableAutoRefresh=Enable auto refresh]", "target": 0}
{"idx": 21463, "func": "The environment is supposed to use String keys only", "target": 0}
{"idx": 21464, "func": "Check reference equality to be sure that it isn't the exact same object.", "target": 0}
{"idx": 21465, "func": "//iri = iri || containsNonASCII(authority);", "target": 0}
{"idx": 21466, "func": "2460..24FF;", "target": 0}
{"idx": 21467, "func": "Apache HttpClient", "target": 0}
{"idx": 21468, "func": "Returns the int value of the given hex digit.", "target": 0}
{"idx": 21469, "func": "4.2 plugin", "target": 0}
{"idx": 21470, "func": "//TODO find a decent name before documenting", "target": 1}
{"idx": 21471, "func": "script (if file not provided)", "target": 0}
{"idx": 21472, "func": "TODO: We could check that the contents of the files differ.", "target": 0}
{"idx": 21473, "func": "setup charset and html", "target": 0}
{"idx": 21474, "func": "i18n[sqlbookmark.prefClose=Close]", "target": 0}
{"idx": 21475, "func": "end class ActionAddExtensionPoint", "target": 0}
{"idx": 21476, "func": "abstract", "target": 0}
{"idx": 21477, "func": "Get Text for Icon", "target": 0}
{"idx": 21478, "func": "FIXME we want to eliminate these type casts when possible", "target": 1}
{"idx": 21479, "func": "two reasons are mentioned in the API docs for File.list (1) dir is not a directory. This is impossible as we wouldn't get here in this case. (2) an IO error occurred (why doesn't it throw an exception then???)", "target": 1}
{"idx": 21480, "func": "Queue to event thread to prevent race during close", "target": 0}
{"idx": 21481, "func": "In case parse fails $NON-NLS-1$ In case parse fails $NON-NLS-1$", "target": 0}
{"idx": 21482, "func": "//?? remember which column is the rowID (if any) so we can //?? prevent editing on it", "target": 1}
{"idx": 21483, "func": "short cut key", "target": 0}
{"idx": 21484, "func": "@see java.awt.datatransfer.Transferable#getTransferData(java.awt.datatransfer.DataFlavor)", "target": 0}
{"idx": 21485, "func": "@see org.argouml.uml.diagram.ui.FigEdgeModelElement#modelChanged(java.beans.PropertyChangeEvent)", "target": 0}
{"idx": 21486, "func": "skip marker files", "target": 0}
{"idx": 21487, "func": "Reflection problems? Should not happen, debug.", "target": 0}
{"idx": 21488, "func": "first day of week is monday", "target": 0}
{"idx": 21489, "func": "Sometimes use the element table alias, sometimes use the... umm... collection table alias (many to many)", "target": 0}
{"idx": 21490, "func": "use all of the columns", "target": 0}
{"idx": 21491, "func": "//set upperLeft point x is minor", "target": 0}
{"idx": 21492, "func": "//system beep", "target": 0}
{"idx": 21493, "func": "//{{{ AbbrevsOptionPane constructor", "target": 0}
{"idx": 21494, "func": "Get current InitialValue", "target": 0}
{"idx": 21495, "func": "remove profile xml-element", "target": 0}
{"idx": 21496, "func": "//{{{ Register interface", "target": 0}
{"idx": 21497, "func": "work out the initial gap", "target": 0}
{"idx": 21498, "func": "This may be called either when the table is editable or when it is read-only. When it is read-only, there is no command to be saved, but when it is editable, there may be a command.", "target": 0}
{"idx": 21499, "func": "folders have same root folder -> for example: two IMAP folders on the same server -----> this means we use server-side copying which -----> is much faster than using inputstreams here also used for local folders, which saves some parsing work", "target": 0}
{"idx": 21500, "func": "BLOBs are different from normal data types in that what is actually read from the DB is a descriptor pointing to the data rather than the data itself. During the initial load of the table, the values read from the descriptor may have been limited, but the descriptor itself has been completely read, Therefore we do not need to re-read the datum from the Database because we know that we have the entire descriptor. If the contents of the BLOB have been limited during the initial table load, that will be discovered when we check if the cell is editable and the full data will be read at that time using this descriptor.", "target": 0}
{"idx": 21501, "func": "No additional open braces found in the string, append the rest of the string in its entirty and quit this loop", "target": 0}
{"idx": 21502, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsTableCorrelationNames()", "target": 0}
{"idx": 21503, "func": "this returns either \"attribute\", \"attribute list\", \"reference\", or \"reference list\"", "target": 0}
{"idx": 21504, "func": "If there was a good library before, we go back to that", "target": 0}
{"idx": 21505, "func": "there was an exception - run with no exit to get proper error", "target": 0}
{"idx": 21506, "func": "Issues to resolve here... 1) In which classloader should we define the class? if there is a BshClassLoader should we define it there? 2) should we use reflection to set it in a non-bsh classloader if there is one or should we always create a bsh classloader (and expose its defineClass)?", "target": 1}
{"idx": 21507, "func": "(non-Javadoc) @see org.columba.core.gui.frame.focus.FocusOwner#isDeleteActionEnabled()", "target": 0}
{"idx": 21508, "func": "i18n[mysql.lengtSet=Length/Set]", "target": 0}
{"idx": 21509, "func": "//root dir", "target": 0}
{"idx": 21510, "func": "header newline", "target": 0}
{"idx": 21511, "func": "//{{{ addOptionPane() method", "target": 0}
{"idx": 21512, "func": "linePaint", "target": 0}
{"idx": 21513, "func": "else set it and return", "target": 0}
{"idx": 21514, "func": "//{{{ StyleRenderer class", "target": 0}
{"idx": 21515, "func": "//-- Methods ---------------------------------------------------------------", "target": 0}
{"idx": 21516, "func": "//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]", "target": 0}
{"idx": 21517, "func": "Enumerate declaring class", "target": 0}
{"idx": 21518, "func": "lock() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 21519, "func": "Don't process again", "target": 0}
{"idx": 21520, "func": "//{{{ replaceAll() method", "target": 0}
{"idx": 21521, "func": "i18n[graphToFile.fileChooserTitle=Save image file(s)]", "target": 0}
{"idx": 21522, "func": "//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$", "target": 0}
{"idx": 21523, "func": "end class TabTaggedValues", "target": 0}
{"idx": 21524, "func": "@see org.argouml.model.DirectionKind#getInOutParameter()", "target": 0}
{"idx": 21525, "func": "select.setText(Translator.localize(\"action.select\"));", "target": 0}
{"idx": 21526, "func": "get condition and convert it to constant as defined in FilterCriteria", "target": 0}
{"idx": 21527, "func": "//{{{ initPLAF() method", "target": 0}
{"idx": 21528, "func": "//{{{ Do more stuff", "target": 0}
{"idx": 21529, "func": "hexadecimal", "target": 0}
{"idx": 21530, "func": "if no plugin directory exists -> return", "target": 0}
{"idx": 21531, "func": "N.B. originally called clear() @see also JMeterGUIComponent", "target": 0}
{"idx": 21532, "func": "panel.add(signerCheckByFile);", "target": 0}
{"idx": 21533, "func": "Whether or not an actual update is required - we don't need to update if the original file doesn't exist", "target": 0}
{"idx": 21534, "func": "//{{{ BrowserOptionPane constructor", "target": 0}
{"idx": 21535, "func": "The key is in the dictionary but cannot be retrieved This is usually due references that refer to tasks that have not been taskdefed in the current run. Ignore", "target": 0}
{"idx": 21536, "func": "dynamic filters for the collection", "target": 0}
{"idx": 21537, "func": "Enable DELETE (which may already be enabled, but it won't hurt)", "target": 0}
{"idx": 21538, "func": "Create a ZipFileSet for this file, and pass it up.", "target": 0}
{"idx": 21539, "func": "All use cases and actors require associations hence all predicates evalulate to true", "target": 0}
{"idx": 21540, "func": "//?? What to do with this error? //?? error message = \"Could not read the complete data. Error was: \"+ex.getMessage());", "target": 0}
{"idx": 21541, "func": "file name verification operations are the same for both export and execute, so do that work here for both. If file name is null or empty, do not proceed", "target": 0}
{"idx": 21542, "func": "Choice btw. text and html will be based on stored option", "target": 0}
{"idx": 21543, "func": "load profile dependencies", "target": 0}
{"idx": 21544, "func": "eVirtualValues = newValues;", "target": 0}
{"idx": 21545, "func": "Check to be sure we get only one schema", "target": 0}
{"idx": 21546, "func": "merge mimeparts and return", "target": 0}
{"idx": 21547, "func": "TODO: Why do we clone the return value? This is the only reference to it (right?) so we shouldn't need a separate copy.", "target": 1}
{"idx": 21548, "func": "The string <code>log4j.configuration</code> is the same string found in {@link org.apache.log4j.Configuration.DEFAULT_CONFIGURATION_FILE} but if we use the reference, then log4j configures itself and clears the system property and we never know if it was set. If it is set, then we let the static initializer in {@link Argo} perform the initialization.", "target": 0}
{"idx": 21549, "func": "mark as bold if message is unseen", "target": 0}
{"idx": 21550, "func": "changing the item that was added should not change the series", "target": 0}
{"idx": 21551, "func": "FileFilter", "target": 0}
{"idx": 21552, "func": "copied from ConcatTest", "target": 1}
{"idx": 21553, "func": "(non-Javadoc) @see javax.swing.table.TableModel#setValueAt(java.lang.Object, int, int)", "target": 0}
{"idx": 21554, "func": "the loaded owner will be set to null after the collection is removed, so capture its value as the affected owner so it is accessible to both pre- and post- events", "target": 0}
{"idx": 21555, "func": "returns false if no such pane exists; calling with null param selects first option pane found", "target": 0}
{"idx": 21556, "func": "/a kludge to make everything work when no rows returned", "target": 1}
{"idx": 21557, "func": "Classifier 4.5.3.8 [5]", "target": 0}
{"idx": 21558, "func": "//i18n[ColumnsTab.title=Columns]", "target": 0}
{"idx": 21559, "func": "'\\v'", "target": 0}
{"idx": 21560, "func": "view -> model write configuration given the data the user entered in the gui", "target": 0}
{"idx": 21561, "func": "//checkForEnd = false;", "target": 0}
{"idx": 21562, "func": "//System.err.println(\"Token#addRange(): \"+start+\" \"+end);", "target": 0}
{"idx": 21563, "func": "(non-Javadoc) @see org.columba.core.filter.IFilterList#addAll(org.columba.core.filter.FilterList)", "target": 0}
{"idx": 21564, "func": "//fetch=\"join\" overrides default laziness //fetch=\"join\" overrides default laziness", "target": 0}
{"idx": 21565, "func": "legendTextPaint", "target": 0}
{"idx": 21566, "func": "close the mailbox if it is selected", "target": 0}
{"idx": 21567, "func": "a file doesn't exist rebuild", "target": 0}
{"idx": 21568, "func": "i18n[LogPanel.logInfoLabel=Logs: Errors {0}, Warnings {1}, Infos {2}]", "target": 0}
{"idx": 21569, "func": "Send EditorExitRequested", "target": 0}
{"idx": 21570, "func": "append '/' if this isn't the last token or it is but the original path terminated w/ a '/'", "target": 0}
{"idx": 21571, "func": "a rather convoluted equals() test", "target": 0}
{"idx": 21572, "func": "Model.getFacade().getModelElement(", "target": 0}
{"idx": 21573, "func": "(non-Javadoc) @see java.lang.Runnable#run()", "target": 0}
{"idx": 21574, "func": "If we are doing a listing, we need the output stream created now.", "target": 0}
{"idx": 21575, "func": "A HTTP POST request, with content-type text/plain", "target": 0}
{"idx": 21576, "func": "scrolling to the first row scrollRectToVisible(getCellRect(row, 0, false)); requestFocus();", "target": 0}
{"idx": 21577, "func": "page number message (in smaller type)", "target": 0}
{"idx": 21578, "func": "array of primitive type do nothing", "target": 0}
{"idx": 21579, "func": "Defaults", "target": 0}
{"idx": 21580, "func": "Next v g = 1 - 2xv", "target": 0}
{"idx": 21581, "func": "select topic, syntax from information_schema.help where section like 'Function%' order by section, topic see also -> http://www.h2database.com/html/functions.html", "target": 0}
{"idx": 21582, "func": "instead of making a new list, decrement index, return when found and index == 0", "target": 0}
{"idx": 21583, "func": "//EditBus.send(new BufferUpdate(Buffer.this, // view,BufferUpdate.MARKERS_CHANGED));", "target": 0}
{"idx": 21584, "func": "Predefined strings for makeMenu(). These are used as menu categories in the menuMap Hashmap, and also for resource lookup in messages.properties", "target": 0}
{"idx": 21585, "func": "main initialization happens here", "target": 0}
{"idx": 21586, "func": "Scaling with a factor of 1 does not change the range", "target": 0}
{"idx": 21587, "func": "At this point we know that we have a 1.4 or higher java runtime", "target": 0}
{"idx": 21588, "func": "@see org.argouml.ui.targetmanager.TargetListener#targetSet( org.argouml.ui.targetmanager.TargetEvent)", "target": 0}
{"idx": 21589, "func": "Test for XmlElement(String,String)", "target": 0}
{"idx": 21590, "func": "//a newly wrapped collection is NOT dirty (or we get unnecessary version updates)", "target": 0}
{"idx": 21591, "func": "specific attributes for the transformer", "target": 0}
{"idx": 21592, "func": "Create unique object as marker for end of queue", "target": 0}
{"idx": 21593, "func": "//{{{ isSupportedEncoding() method", "target": 0}
{"idx": 21594, "func": "include line comments following end of the nodes into the range", "target": 0}
{"idx": 21595, "func": "//re-snapshot", "target": 0}
{"idx": 21596, "func": "Create annotations http://www.eclipse.org/emf/2002/Ecore", "target": 0}
{"idx": 21597, "func": "public IContentPane getContentPane() { return this; }", "target": 0}
{"idx": 21598, "func": "Filter out classes that aren't permitted. //", "target": 0}
{"idx": 21599, "func": "or vice versa?", "target": 0}
{"idx": 21600, "func": "//do this bit after setting initialized to true or it will recurse", "target": 0}
{"idx": 21601, "func": "redrawing the chart every time...", "target": 0}
{"idx": 21602, "func": "returns false with outdated cache", "target": 0}
{"idx": 21603, "func": "//look for and print warnings", "target": 0}
{"idx": 21604, "func": "We'll need this item type's primary descriptor.", "target": 0}
{"idx": 21605, "func": "invoke callMethodMissing method directly TODO: this could be further optimized, since some DSLs hit method_missing pretty hard...", "target": 1}
{"idx": 21606, "func": "No initialization currently", "target": 0}
{"idx": 21607, "func": "Add ...", "target": 0}
{"idx": 21608, "func": "//{{{ createMultilineLabel() method", "target": 0}
{"idx": 21609, "func": "install man page", "target": 0}
{"idx": 21610, "func": "if mailbox is not already selected select it", "target": 0}
{"idx": 21611, "func": "//TODO: temporary", "target": 1}
{"idx": 21612, "func": "load included files as properties files:", "target": 0}
{"idx": 21613, "func": "fetch in case gets nulled later", "target": 0}
{"idx": 21614, "func": "//Schema export:", "target": 0}
{"idx": 21615, "func": "line 670", "target": 0}
{"idx": 21616, "func": "Check it's a read-only map.", "target": 0}
{"idx": 21617, "func": "A string of the form \"location\". This will be confused by the string \":\", so we pick this out as an instruction to clear both name and location.", "target": 0}
{"idx": 21618, "func": "do not over-write the column text, as that has already been \"rendered\" during resolve", "target": 0}
{"idx": 21619, "func": "create the dataset...", "target": 0}
{"idx": 21620, "func": "search for a folder thats on the IMAP account first try to find the local translation of special", "target": 0}
{"idx": 21621, "func": "get the SQL session", "target": 0}
{"idx": 21622, "func": "set an untyped variable directly in the block", "target": 0}
{"idx": 21623, "func": "autoinc_gen_<column>", "target": 0}
{"idx": 21624, "func": "Create an empty but initialized instance of a UML TemplateParameter. @return an initialized UML TemplateParameter instance. TODO: This needs an extra parameter to specify the model/extent where the new element should be created.", "target": 1}
{"idx": 21625, "func": "FIXME: Resolve what the hell is going on", "target": 1}
{"idx": 21626, "func": "should try to print usage here if nothing found", "target": 0}
{"idx": 21627, "func": "Generated select expressions are already resolved, nothing to do.", "target": 0}
{"idx": 21628, "func": "//{{{ visitBuffers() method", "target": 0}
{"idx": 21629, "func": "SASL Mechanisms", "target": 0}
{"idx": 21630, "func": "NOTE: this assumes something about how propertySelectFragment is implemented by the subclass!", "target": 0}
{"idx": 21631, "func": "//{{{ ActionBar constructor", "target": 0}
{"idx": 21632, "func": "Process outliers. Each outlier is either added to the appropriate outlier list or a new outlier list is made", "target": 0}
{"idx": 21633, "func": "//{{{ Activate plugins that must be activated at startup", "target": 0}
{"idx": 21634, "func": "//label.setFont(font);", "target": 0}
{"idx": 21635, "func": "Consider Thread aspects of this", "target": 0}
{"idx": 21636, "func": "We use a different delegate than the non-optimistic superclass default", "target": 0}
{"idx": 21637, "func": "all threads in ruby thread group plus main thread", "target": 0}
{"idx": 21638, "func": "lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 21639, "func": "Code Completion has been done within Code Completion. Now just replace what all candidates have in common.", "target": 0}
{"idx": 21640, "func": "@see org.argouml.model.ModelImplementation#getDataTypesHelper()", "target": 0}
{"idx": 21641, "func": "copy text after gap", "target": 0}
{"idx": 21642, "func": "GenIC call on generic jar", "target": 0}
{"idx": 21643, "func": "No paper edges. We print the Graph as it is to a single image.", "target": 0}
{"idx": 21644, "func": "try a dataset with two values", "target": 0}
{"idx": 21645, "func": "As soon as we've created a notation and have registered it listener force an event to go to the listener so it draws for the first time.", "target": 0}
{"idx": 21646, "func": "dotcount>=2", "target": 0}
{"idx": 21647, "func": "//{{{ CompletionPopup class", "target": 0}
{"idx": 21648, "func": "line 454", "target": 0}
{"idx": 21649, "func": "//{{{ setSize() method", "target": 0}
{"idx": 21650, "func": "itemLabelFont", "target": 0}
{"idx": 21651, "func": "//{{{ insertionSort() method", "target": 0}
{"idx": 21652, "func": "wait for server to stop", "target": 0}
{"idx": 21653, "func": "copy to new file and let the regular load code do the actual load", "target": 0}
{"idx": 21654, "func": "Test CSV file with a header line", "target": 0}
{"idx": 21655, "func": "state/province/county", "target": 0}
{"idx": 21656, "func": "is a primitive type invokespecial", "target": 0}
{"idx": 21657, "func": "Look for trailing count. //", "target": 0}
{"idx": 21658, "func": "only paint visible chunks", "target": 0}
{"idx": 21659, "func": "Look for special Response Length header //$NON-NLS-1$", "target": 0}
{"idx": 21660, "func": "Get the resource... //", "target": 0}
{"idx": 21661, "func": "//TODO: remove use of instanceof!", "target": 1}
{"idx": 21662, "func": "Give access to initial configuration", "target": 0}
{"idx": 21663, "func": "line 753", "target": 0}
{"idx": 21664, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#ownUpdatesAreVisible(int)", "target": 0}
{"idx": 21665, "func": "clear statusbar message", "target": 0}
{"idx": 21666, "func": "check if download failed", "target": 0}
{"idx": 21667, "func": "pass to super-class for handling", "target": 0}
{"idx": 21668, "func": "Dump alias information.", "target": 0}
{"idx": 21669, "func": "Don't wait on ourselves, we'll deadlock! TODO: We might want to throw an exception here", "target": 1}
{"idx": 21670, "func": "Filenames of the standard EJB descriptor and the iAS-specific descriptor", "target": 0}
{"idx": 21671, "func": "-------------------------------------------------------------------------- Utility methods: constant pool management --------------------------------------------------------------------------", "target": 0}
{"idx": 21672, "func": "at any time i get here uids of length 0. If this is so we should return and do nothing", "target": 0}
{"idx": 21673, "func": "FIXME: if we terminate immediately, this appears to break while in method arguments we need to push a nil for the cases where we will never enter the body", "target": 1}
{"idx": 21674, "func": "no longer needed", "target": 0}
{"idx": 21675, "func": "maybe remove this folder", "target": 0}
{"idx": 21676, "func": "//++ These names are used in the JMX files, and must not be changed", "target": 0}
{"idx": 21677, "func": "set subject", "target": 0}
{"idx": 21678, "func": "exit does editor event & save", "target": 0}
{"idx": 21679, "func": "Great! The class already existed - just use it.", "target": 0}
{"idx": 21680, "func": "a non-existent group should return -1", "target": 0}
{"idx": 21681, "func": "//{{{ writeLock() method", "target": 0}
{"idx": 21682, "func": "fill list model with tags", "target": 0}
{"idx": 21683, "func": "first digit is always printed", "target": 0}
{"idx": 21684, "func": "if it's not an ASCII character, break here, and use UTF-8 encoding", "target": 0}
{"idx": 21685, "func": "Values for TEST_FIELD N.B. we cannot change the text value as it is in test plans $NON-NLS-1$", "target": 0}
{"idx": 21686, "func": "create default configuration", "target": 0}
{"idx": 21687, "func": "\\\\b Start at word boundary ((\\\\w(:\\\\S)?@)? [user:[pass]]@ - Constructprot + \": protocol and :// [\"+any+\"] match literaly anything... ) (?=\\\\s|$) ...until we find whitespace or end of String", "target": 0}
{"idx": 21688, "func": "continue with normal initialization", "target": 0}
{"idx": 21689, "func": "Owner Object Grantee Grantor ProtectType Action Column ------ ---------------------- ------------------ ------- ----------- ------ ------------------ dbo billing_bak public dbo Grant Delete . dbo billing_bak public dbo Grant Insert . dbo billing_bak public dbo Grant Select (All+New) dbo billing_bak public dbo Grant Update (All+New) dbo billing_bak usbilling dbo Deny Insert .", "target": 0}
{"idx": 21690, "func": "(LOG.isDebugEnabled()", "target": 0}
{"idx": 21691, "func": "Build a list of the new uids", "target": 0}
{"idx": 21692, "func": "//if the collection is dereferenced, remove from the session cache //iter.remove(); //does not work, since the entrySet is not backed by the set", "target": 0}
{"idx": 21693, "func": "convert user representation of null into an actual null", "target": 0}
{"idx": 21694, "func": "must be at least one digit for strict", "target": 0}
{"idx": 21695, "func": "Utility flag: have we noticed a CR while reading the last data chunk? If so, we will have to go back and normalise CR/LF. //", "target": 0}
{"idx": 21696, "func": "This class acts as a custom Ant task also and uses these variables/methods in that mode", "target": 0}
{"idx": 21697, "func": "INTERNAL VARIABLE METHODS //", "target": 0}
{"idx": 21698, "func": "bottom.add(c, BorderLayout.CENTER);", "target": 0}
{"idx": 21699, "func": "update any text, colors, fonts, etc.", "target": 0}
{"idx": 21700, "func": "TODO: make sure it's really safe to not to copy it", "target": 1}
{"idx": 21701, "func": "GenTypedElement", "target": 0}
{"idx": 21702, "func": "make sure that elapsed time in set via date works", "target": 0}
{"idx": 21703, "func": "----- member variables -----", "target": 0}
{"idx": 21704, "func": "for data in ascending order by x-value, we are (broadly) looking for the index of the highest x-value that is less than xLow", "target": 0}
{"idx": 21705, "func": "for efficiency, we just use the first, last and middle items to compute a hashCode...", "target": 0}
{"idx": 21706, "func": "//RedoNode redoNode = (RedoNode)node;", "target": 0}
{"idx": 21707, "func": "if the current stroke is not a BasicStroke then it is handled as a special case", "target": 0}
{"idx": 21708, "func": "tc under method self under method name args", "target": 0}
{"idx": 21709, "func": "there's a DBNAME specified, so make sure it matches the current catalog.", "target": 0}
{"idx": 21710, "func": "Since this thread is not a UI thread, it is ok to run the task synchronously.", "target": 0}
{"idx": 21711, "func": "check that the model was initialized with the unspecified goal", "target": 0}
{"idx": 21712, "func": "//////////////////////////////////////////////////////////////MouseListener implementation", "target": 0}
{"idx": 21713, "func": "Remove any left-over variables", "target": 0}
{"idx": 21714, "func": "We're not done yet", "target": 0}
{"idx": 21715, "func": "Search for our current target language.", "target": 0}
{"idx": 21716, "func": "//CVS missing", "target": 0}
{"idx": 21717, "func": "in the future, it will be possible to also add new addresses", "target": 0}
{"idx": 21718, "func": "//{{{ Scroll horizontally", "target": 0}
{"idx": 21719, "func": "//{{{ unregister() method", "target": 0}
{"idx": 21720, "func": "Return the ith element from a Collection. @param collection collection to get element from @param index index of the element to be returned @return the object", "target": 0}
{"idx": 21721, "func": "cmd.setObjects(run.getParams().get(0));", "target": 0}
{"idx": 21722, "func": "getting the path to gpg", "target": 0}
{"idx": 21723, "func": "TODO: This won't work when the column has values with quotes in them. Use PreparedStatements instead.", "target": 1}
{"idx": 21724, "func": "extension extensions", "target": 0}
{"idx": 21725, "func": "This case can only happen if we are reset to a mark and we've got lots of XMLNS attributes to write. //", "target": 0}
{"idx": 21726, "func": "Although Usage & Permission are Dependencies, they need to be include separately because of the way lookup works", "target": 0}
{"idx": 21727, "func": "i18n[AliasPropertiesInternalFrame.title=Properties for Alias: {0}]", "target": 0}
{"idx": 21728, "func": "Add the files found in groupfileset to fileset", "target": 0}
{"idx": 21729, "func": "By default, call instructions cannot be deleted even if their results aren't used by anyone unless we know more about what the call is, what it does, etc. Similarly for evals, stores, returns.", "target": 0}
{"idx": 21730, "func": "//unsigned or non-lazy self signings are always false", "target": 0}
{"idx": 21731, "func": "//@GuardedBy(\"this\") NOTE this also guards against possible window in checkForOpenFiles()", "target": 0}
{"idx": 21732, "func": "TODO: If this turns out to be a performance bottleneck, we can probably optimize the common case by caching our iterator and current position, assuming that the next request will be for a greater index", "target": 1}
{"idx": 21733, "func": "Create the parts Add any parameters", "target": 0}
{"idx": 21734, "func": "wait 2 second extras the test failed with 100 ms of margin on cvs.apache.org on August 1st, 2003", "target": 0}
{"idx": 21735, "func": "(non-Javadoc) @see org.eclipse.emf.ecore.util.ExtendedMetaData#getNamespace(org.eclipse.emf.ecore.EPackage)", "target": 0}
{"idx": 21736, "func": "Always use \"to\" column name since name changes happen first", "target": 0}
{"idx": 21737, "func": "Initialize the editor with the provided default value or null:", "target": 0}
{"idx": 21738, "func": "end class ModeCreateAssociation", "target": 0}
{"idx": 21739, "func": "Can't have a classifier or a type parameter as well as bounds. //", "target": 0}
{"idx": 21740, "func": "//check basic level one nullablilty", "target": 0}
{"idx": 21741, "func": "long size bits in byte", "target": 0}
{"idx": 21742, "func": "//{{{ setSelectAll() method", "target": 0}
{"idx": 21743, "func": "added by Eric Lefevre 13 Mar 1999: we must check if the FigText for operations is drawn before drawing things over it", "target": 0}
{"idx": 21744, "func": "Make Java class files in the jar reachable from Ruby", "target": 0}
{"idx": 21745, "func": "end class ResourceLoader", "target": 0}
{"idx": 21746, "func": "Help convert existing JMX files which use HTTPSampler[2] nodes", "target": 0}
{"idx": 21747, "func": "//{{{ KEY_PRESSED...", "target": 0}
{"idx": 21748, "func": "Order these from longest to shortest Start by assuming longest (more repeats)", "target": 0}
{"idx": 21749, "func": "$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-2$", "target": 0}
{"idx": 21750, "func": "show profile choosing dialog", "target": 0}
{"idx": 21751, "func": "no else here to make sure Classifier with its double inheritance goes ok", "target": 0}
{"idx": 21752, "func": "i18n[UpdatePreferencesPanel.urlLabel=Url:]", "target": 0}
{"idx": 21753, "func": "TODO: make this do specific-arity calling", "target": 1}
{"idx": 21754, "func": "If we still can't find it, complain", "target": 0}
{"idx": 21755, "func": "ignore: don't trust anyone", "target": 0}
{"idx": 21756, "func": "initialize the static settings to determine which factory to use", "target": 0}
{"idx": 21757, "func": "A dummy class to pass the pointer of URL.", "target": 0}
{"idx": 21758, "func": "first verify that the set goal priority did not add an extra goal", "target": 0}
{"idx": 21759, "func": "Creation of the customizer and GUI initialization is delayed until the first configure call. We don't need all that just to find out the static label, menu categories, etc!", "target": 0}
{"idx": 21760, "func": "Found \"<?\"", "target": 0}
{"idx": 21761, "func": "Dropped out, i.e. did not find closing ')'", "target": 0}
{"idx": 21762, "func": "rafter the user saved the file and closed the external text editor, we read the new text from the file", "target": 0}
{"idx": 21763, "func": "i18n[dataTypeOther.readContentsWhenLoaded=Read contents when table is first loaded and display as string]", "target": 0}
{"idx": 21764, "func": "i18n[HelpViewerWindow.pageloaded=Page loaded.]", "target": 0}
{"idx": 21765, "func": "turn on floating support", "target": 0}
{"idx": 21766, "func": "See if we can copy an interface right off", "target": 0}
{"idx": 21767, "func": "//{{{ isCaretVisible() method", "target": 0}
{"idx": 21768, "func": "do operating system specific stuff (creating startup scripts, installing man pages, etc.)", "target": 0}
{"idx": 21769, "func": "Get the classifier (participant) of an AssociationEnd. TODO: Rename this getParticipant to align with UML spec - tfm - 20070331 @param handle The AssociationEnd to get from. @return The classifier of the AssociationEnd.", "target": 1}
{"idx": 21770, "func": "so an empty cd drive is not reported as a file", "target": 0}
{"idx": 21771, "func": "//this should be a call to resolve(), not resolveIdentifier(), //'cos it might be a property-ref, and we did not cache the //referenced value", "target": 0}
{"idx": 21772, "func": "// private final class MyInternalFrameListener extends InternalFrameAdapter", "target": 0}
{"idx": 21773, "func": "TODO: complete this", "target": 1}
{"idx": 21774, "func": "outline paint sequence", "target": 0}
{"idx": 21775, "func": "case shouldn't be changed in this test because the context is the source database.", "target": 0}
{"idx": 21776, "func": "add message \"0.eml\" as inputstream to folder", "target": 0}
{"idx": 21777, "func": "FIXME: this probably belongs in a different package.", "target": 1}
{"idx": 21778, "func": "If either list is empty, the result is simply the other. //", "target": 0}
{"idx": 21779, "func": "zero args, no block; do nothing", "target": 0}
{"idx": 21780, "func": "create a Java task to do the rebuild", "target": 0}
{"idx": 21781, "func": "if there is a suite method available, then try to extract the suite from it. If there is an error here it will be caught below and reported.", "target": 0}
{"idx": 21782, "func": "TODO: Reconfigure exception handling to distinguish between errors that are possible due to bad input data and those that represent unexpected processing errors.", "target": 1}
{"idx": 21783, "func": "Calculate the drop location, and place every n-th element at an offset proportional to n.", "target": 0}
{"idx": 21784, "func": "Just completed the first step where we make our choices. First see if we have a choice. We always should, so print a rude message if we don't", "target": 0}
{"idx": 21785, "func": "//{{{ Dock Menu", "target": 0}
{"idx": 21786, "func": "draw the upper shadow...", "target": 0}
{"idx": 21787, "func": "also apply subprofiles:", "target": 0}
{"idx": 21788, "func": "small icon for menu // putValue(SMALL_ICON, ImageLoader // .getSmallImageIcon(\"configure_16_mail.png\"));", "target": 0}
{"idx": 21789, "func": "//boolean upgradeRequired = !checkVersion(fileVersion, releaseVersion)", "target": 0}
{"idx": 21790, "func": "Ignore leading empty spec", "target": 0}
{"idx": 21791, "func": "may be altered in validate", "target": 0}
{"idx": 21792, "func": "In this case using java.util.zip will not work because it does not permit a zero-entry archive. Must create it manually.", "target": 0}
{"idx": 21793, "func": "wrap with observable stream for progress bar updates", "target": 0}
{"idx": 21794, "func": "//{{{ _setScreenLineCount() method", "target": 0}
{"idx": 21795, "func": "//$NON-NLS-1$ Set params as a single line $NON-NLS-1$ and set as an array //$NON-NLS-1$ //$NON-NLS-1$", "target": 0}
{"idx": 21796, "func": "//{{{ setFirstPhysicalLine() method", "target": 0}
{"idx": 21797, "func": "user changed folder name", "target": 0}
{"idx": 21798, "func": "Tab size", "target": 0}
{"idx": 21799, "func": "This Method delivers the next line", "target": 0}
{"idx": 21800, "func": "//{{{ PluginUpdate constructor", "target": 0}
{"idx": 21801, "func": "Test method for 'org.apache.jmeter.protocol.http.sampler.postWriter.setHeaders(URLConnection, HTTPSampler)'", "target": 0}
{"idx": 21802, "func": "Check if the exclude pattern is matched", "target": 0}
{"idx": 21803, "func": "FIXME: draw outliers", "target": 1}
{"idx": 21804, "func": "Constants //", "target": 0}
{"idx": 21805, "func": "RANGE / RANGE", "target": 0}
{"idx": 21806, "func": "@param event the build event that is being logged.", "target": 0}
{"idx": 21807, "func": "//{{{ updateMaxHorizontalScrollWidth() method", "target": 0}
{"idx": 21808, "func": "i18n[xmlReformatter.seeOtherErrs={0}\\nDo you wish to see other errors?\"]", "target": 0}
{"idx": 21809, "func": "Otherwise, recursively call ourselves to substitute it in context if necessary. //", "target": 0}
{"idx": 21810, "func": "FIXME: ugly cast to ContactModel", "target": 1}
{"idx": 21811, "func": "line 1872", "target": 0}
{"idx": 21812, "func": "Get back to caller namespace", "target": 0}
{"idx": 21813, "func": "non boolean primitive, get appropriate flavor of zero", "target": 0}
{"idx": 21814, "func": "i18n[I18n.ExecuteNativeToAscii=Execute nativeToAscii]", "target": 0}
{"idx": 21815, "func": "get WHERE clause for the selected row the -1 says to just use the contents of the values without any substitutions", "target": 0}
{"idx": 21816, "func": "LOG.isDebugEnabled()", "target": 0}
{"idx": 21817, "func": "test project readable files", "target": 0}
{"idx": 21818, "func": "Resize the text figure", "target": 0}
{"idx": 21819, "func": "// fireNodeRemoved(node);", "target": 0}
{"idx": 21820, "func": "must not be done in the GUI thread", "target": 0}
{"idx": 21821, "func": "called by CSVRead(file,alias)", "target": 0}
{"idx": 21822, "func": "TODO: better error handling", "target": 1}
{"idx": 21823, "func": "It belongs to this package if the delegate feature is from this package, or the class is from this package and either there is no delegate feature or the delegate feature is from some used package. //", "target": 0}
{"idx": 21824, "func": "only the first build exception is reported", "target": 0}
{"idx": 21825, "func": "The following gives java.sql.SQLException: Conversion to character stream failed", "target": 0}
{"idx": 21826, "func": "=========================================================== JFreeChart : a free chart library for the Java(tm) platform =========================================================== (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. Project Info: http://www.jfree.org/jfreechart/index.html This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version. This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details. You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA. [Oracle and Java are registered trademarks of Oracle and/or its affiliates. Other names may be trademarks of their respective owners.] ----------------- CategoryPlot.java ----------------- (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. Original Author: David Gilbert (for Object Refinery Limited); Contributor(s): Jeremy Bowman; Arnaud Lelievre; Richard West, Advanced Micro Devices, Inc.; Ulrich Voigt - patch 2686040; Peter Kolb - patches 2603321 and 2809117; Changes ------- 21-Jun-2001 : Removed redundant JFreeChart parameter from constructors (DG); 21-Aug-2001 : Added standard header. Fixed DOS encoding problem (DG); 18-Sep-2001 : Updated header (DG); 15-Oct-2001 : Data source classes moved to com.jrefinery.data. (DG); 22-Oct-2001 : Renamed DataSource.java --> Dataset.java etc. (DG); 23-Oct-2001 : Changed intro and trail gaps on bar plots to use percentage of available space rather than a fixed number of units (DG); 12-Dec-2001 : Changed constructors to protected (DG); 13-Dec-2001 : Added tooltips (DG); 16-Jan-2002 : Increased maximum intro and trail gap percents, plus added some argument checking code. Thanks to Taoufik Romdhane for suggesting this (DG); 05-Feb-2002 : Added accessor methods for the tooltip generator, incorporated alpha-transparency for Plot and subclasses (DG); 06-Mar-2002 : Updated import statements (DG); 14-Mar-2002 : Renamed BarPlot.java --> CategoryPlot.java, and changed code to use the CategoryItemRenderer interface (DG); 22-Mar-2002 : Dropped the getCategories() method (DG); 23-Apr-2002 : Moved the dataset from the JFreeChart class to the Plot class (DG); 29-Apr-2002 : New methods to support printing values at the end of bars, contributed by Jeremy Bowman (DG); 11-May-2002 : New methods for label visibility and overlaid plot support, contributed by Jeremy Bowman (DG); 06-Jun-2002 : Removed the tooltip generator, this is now stored with the renderer. Moved constants into the CategoryPlotConstants interface. Updated Javadoc comments (DG); 10-Jun-2002 : Overridden datasetChanged() method to update the upper and lower bound on the range axis (if necessary), updated Javadocs (DG); 25-Jun-2002 : Removed redundant imports (DG); 20-Aug-2002 : Changed the constructor for Marker (DG); 28-Aug-2002 : Added listener notification to setDomainAxis() and setRangeAxis() (DG); 23-Sep-2002 : Added getLegendItems() method and fixed errors reported by Checkstyle (DG); 28-Oct-2002 : Changes to the CategoryDataset interface (DG); 05-Nov-2002 : Base dataset is now TableDataset not CategoryDataset (DG); 07-Nov-2002 : Renamed labelXXX as valueLabelXXX (DG); 18-Nov-2002 : Added grid settings for both domain and range axis (previously these were set in the axes) (DG); 19-Nov-2002 : Added axis location parameters to constructor (DG); 17-Jan-2003 : Moved to com.jrefinery.chart.plot package (DG); 14-Feb-2003 : Fixed bug in auto-range calculation for secondary axis (DG); 26-Mar-2003 : Implemented Serializable (DG); 02-May-2003 : Moved render() method up from subclasses. Added secondary range markers. Added an attribute to control the dataset rendering order. Added a drawAnnotations() method. Changed the axis location from an int to an AxisLocation (DG); 07-May-2003 : Merged HorizontalCategoryPlot and VerticalCategoryPlot into this class (DG); 02-Jun-2003 : Removed check for range axis compatibility (DG); 04-Jul-2003 : Added a domain gridline position attribute (DG); 21-Jul-2003 : Moved DrawingSupplier to Plot superclass (DG); 19-Aug-2003 : Added equals() method and implemented Cloneable (DG); 01-Sep-2003 : Fixed bug 797466 (no change event when secondary dataset changes) (DG); 02-Sep-2003 : Fixed bug 795209 (wrong dataset checked in render2 method) and 790407 (initialise method) (DG); 08-Sep-2003 : Added internationalization via use of properties resourceBundle (RFE 690236) (AL); 08-Sep-2003 : Fixed bug (wrong secondary range axis being used). Changed ValueAxis API (DG); 10-Sep-2003 : Fixed bug in setRangeAxis() method (DG); 15-Sep-2003 : Fixed two bugs in serialization, implemented PublicCloneable (DG); 23-Oct-2003 : Added event notification for changes to renderer (DG); 26-Nov-2003 : Fixed bug (849645) in clearRangeMarkers() method (DG); 03-Dec-2003 : Modified draw method to accept anchor (DG); 21-Jan-2004 : Update for renamed method in ValueAxis (DG); 10-Mar-2004 : Fixed bug in axis range calculation when secondary renderer is stacked (DG); 12-May-2004 : Added fixed legend items (DG); 19-May-2004 : Added check for null legend item from renderer (DG); 02-Jun-2004 : Updated the DatasetRenderingOrder class (DG); 05-Nov-2004 : Renamed getDatasetsMappedToRangeAxis() --> datasetsMappedToRangeAxis(), and ensured that returned list doesn't contain null datasets (DG); 12-Nov-2004 : Implemented new Zoomable interface (DG); 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds() in CategoryItemRenderer (DG); 04-May-2005 : Fixed serialization of range markers (DG); 05-May-2005 : Updated draw() method parameters (DG); 20-May-2005 : Added setDomainAxes() and setRangeAxes() methods, as per RFE 1183100 (DG); 01-Jun-2005 : Upon deserialization, register plot as a listener with its axes, dataset(s) and renderer(s) - see patch 1209475 (DG); 02-Jun-2005 : Added support for domain markers (DG); 06-Jun-2005 : Fixed equals() method for use with GradientPaint (DG); 09-Jun-2005 : Added setRenderers(), as per RFE 1183100 (DG); 16-Jun-2005 : Added getDomainAxisCount() and getRangeAxisCount() methods, to match XYPlot (see RFE 1220495) (DG); ------------- JFREECHART 1.0.x --------------------------------------------- 11-Jan-2006 : Added configureRangeAxes() to rendererChanged(), since the renderer might influence the axis range (DG); 27-Jan-2006 : Added various null argument checks (DG); 18-Aug-2006 : Added getDatasetCount() method, plus a fix for bug drawing category labels, thanks to Adriaan Joubert (1277726) (DG); 05-Sep-2006 : Added MarkerChangeEvent support (DG); 30-Oct-2006 : Added getDomainAxisIndex(), datasetsMappedToDomainAxis() and getCategoriesForAxis() methods (DG); 22-Nov-2006 : Fire PlotChangeEvent from setColumnRenderingOrder() and setRowRenderingOrder() (DG); 29-Nov-2006 : Fix for bug 1605207 (IntervalMarker exceeds bounds of data area) (DG); 26-Feb-2007 : Fix for bug 1669218 (setDomainAxisLocation() notify argument ignored) (DG); 13-Mar-2007 : Added null argument checks for setRangeCrosshairPaint() and setRangeCrosshairStroke(), fixed clipping for annotations (DG); 07-Jun-2007 : Override drawBackground() for new GradientPaint handling (DG); 10-Jul-2007 : Added getRangeAxisIndex(ValueAxis) method (DG); 24-Sep-2007 : Implemented new zoom methods (DG); 25-Oct-2007 : Added some argument checks (DG); 05-Nov-2007 : Applied patch 1823697, by Richard West, for removal of domain and range markers (DG); 14-Nov-2007 : Added missing event notifications (DG); 25-Mar-2008 : Added new methods with optional notification - see patch 1913751 (DG); 07-Apr-2008 : Fixed NPE in removeDomainMarker() and removeRangeMarker() (DG); 23-Apr-2008 : Fixed equals() and clone() methods (DG); 26-Jun-2008 : Fixed crosshair support (DG); 10-Jul-2008 : Fixed outline visibility for 3D renderers (DG); 12-Aug-2008 : Added rendererCount() method (DG); 25-Nov-2008 : Added facility to map datasets to multiples axes (DG); 15-Dec-2008 : Cleaned up grid drawing methods (DG); 18-Dec-2008 : Use ResourceBundleWrapper - see patch 1607918 by Jess Thrysoee (DG); 21-Jan-2009 : Added rangeMinorGridlinesVisible flag (DG); 18-Mar-2009 : Modified anchored zoom behaviour (DG); 19-Mar-2009 : Implemented Pannable interface - see patch 2686040 (DG); 19-Mar-2009 : Added entity support - see patch 2603321 by Peter Kolb (DG); 24-Jun-2009 : Implemented AnnotationChangeListener (see patch 2809117 by PK) (DG); 06-Jul-2009 : Fix for cloning of renderers - see bug 2817504 (DG) 10-Jul-2009 : Added optional drop shadow generator (DG); 27-Sep-2011 : Fixed annotation import (DG); 18-Oct-2011 : Fixed tooltip offset with shadow generator (DG); 20-Nov-2011 : Initialise shadow generator as null (DG); 02-Jul-2013 : Use ParamChecks (DG); 12-Sep-2013 : Check for KEY_SUPPRESS_SHADOW_GENERATION rendering hint (DG); 10-Mar-2014 : Updated Javadocs for issue #1123 (DG); 09-Apr-2014 : Remove use of ObjectList (DG);", "target": 0}
{"idx": 21827, "func": "set up Update button i18n[cellDataPopUp.updateData=Update Data]", "target": 0}
{"idx": 21828, "func": "szptr = zptr;", "target": 0}
{"idx": 21829, "func": "reload after adding alias", "target": 0}
{"idx": 21830, "func": "String userVisibleName = pluginHandler.getUserVisibleName(id);", "target": 0}
{"idx": 21831, "func": "Informix doesn't allow quoting column names.", "target": 0}
{"idx": 21832, "func": "fill local vars with nil, to avoid checking every access.", "target": 0}
{"idx": 21833, "func": "create output stream", "target": 0}
{"idx": 21834, "func": "not true, eval value and assign", "target": 0}
{"idx": 21835, "func": "handle the standard case (plain CategoryDataset)", "target": 0}
{"idx": 21836, "func": "check whether the other shortcut is the alt. shortcut", "target": 0}
{"idx": 21837, "func": "This is for the helper feature. //", "target": 0}
{"idx": 21838, "func": "will still be issued when it used to be null", "target": 0}
{"idx": 21839, "func": "state engine: false=envelope, true=message", "target": 0}
{"idx": 21840, "func": "Need to remove the existing jar in the plugins directory and all of the files beneath the plugin-named directory.", "target": 0}
{"idx": 21841, "func": "FIXME: peek('u') utf8 stuff for 1.9", "target": 0}
{"idx": 21842, "func": "A FigNodeModelElement with no owner should match here TODO: This is a temporary solution due to FigPool extending FigNodeModelElement when in fact it should not do so.", "target": 1}
{"idx": 21843, "func": "?", "target": 0}
{"idx": 21844, "func": "(non-Javadoc) @see org.columba.core.filter.IFilterRule#count()", "target": 0}
{"idx": 21845, "func": "//{{{ Keyword class", "target": 0}
{"idx": 21846, "func": "//{{{ getSelectedColor() method", "target": 0}
{"idx": 21847, "func": "src1: o--------o src2: o----o res: o--o Reuse src2", "target": 0}
{"idx": 21848, "func": "line 1314", "target": 0}
{"idx": 21849, "func": "Use this for fast fail instead. Sacrificed for complete fail. d00mst //throw new UnresolvableException( // \"Unable to create ItemUID for class: \" // + obj.getClass());", "target": 0}
{"idx": 21850, "func": "//get a snapshot", "target": 0}
{"idx": 21851, "func": "!saveAsXml", "target": 0}
{"idx": 21852, "func": "Reserve a place to insert xmlns declarations after we know what they all are. //", "target": 0}
{"idx": 21853, "func": "4-ms test base timeline for ms2Timeline using 1 included and 1 excluded segments timeline start time = 0 | v 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 ... +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... | | | | |EE|EE|EE|EE| | | | |EE|EE|EE|EE| | | | | <-- ms2BaseTimeline +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... \\__________ _________/ \\____ _____/ \\/ \\/ segment group segment size = 4 ms //", "target": 0}
{"idx": 21854, "func": "enum lex_state", "target": 0}
{"idx": 21855, "func": "first of all, if this action set a readNextChar, do not clear the repeat", "target": 0}
{"idx": 21856, "func": "hack to get fixed length 'length' field", "target": 1}
{"idx": 21857, "func": "FOREIGN KEY VIOLATION", "target": 0}
{"idx": 21858, "func": "//MAXINT = 2,147,483,647", "target": 0}
{"idx": 21859, "func": "//Cope with a subselect", "target": 0}
{"idx": 21860, "func": "check an empty dataset", "target": 0}
{"idx": 21861, "func": "reopen a java class", "target": 0}
{"idx": 21862, "func": "Origial Dialect.java returns true;", "target": 0}
{"idx": 21863, "func": "(MAttribute)", "target": 0}
{"idx": 21864, "func": "All the other local mails are deleted", "target": 0}
{"idx": 21865, "func": "Test to see if the correct number of files are returned.", "target": 0}
{"idx": 21866, "func": "we'll have to use the method in the interface, but this doesn't have the paint and stroke settings...", "target": 1}
{"idx": 21867, "func": "after the entire list is loaded, fill out plugin field in dependencies", "target": 0}
{"idx": 21868, "func": "Sequence methods - end", "target": 0}
{"idx": 21869, "func": "//i18n[DataSetUpdateableTableModelImpl.error.updateproblem=There //was a problem reported during the update. //The DB message was:\\n{0}\\nThis may or may not be serious depending //on the above message.\\nThe data was probably not changed in the //database.\\nYou may need to refresh the table to get an accurate //view of the current data.]", "target": 0}
{"idx": 21870, "func": "4!", "target": 0}
{"idx": 21871, "func": "pass control along to the rest of the processing chain", "target": 0}
{"idx": 21872, "func": "//an assertion", "target": 0}
{"idx": 21873, "func": "//long max was used to represent a non-expiring cookie, but that caused problems", "target": 0}
{"idx": 21874, "func": "Determine if only diagrams are in the target list.", "target": 0}
{"idx": 21875, "func": "otherwise look up the paint list", "target": 0}
{"idx": 21876, "func": "Look for a substitution group feature in the feature's containing class' containing package. //", "target": 0}
{"idx": 21877, "func": "Assume last name only", "target": 0}
{"idx": 21878, "func": "Label for the start of the closure (used to implement redo) Label for the end of the closure (used to implement retry)", "target": 0}
{"idx": 21879, "func": "TODO: MVW: I am not completely sure of the following:<p> The \"namespace\" of the diagram is e.g. used when creating new elements that are shown on the diagram; they will have their namespace set according this. It is NOT necessarily equal to the \"owner\". @return the namespace for the diagram", "target": 1}
{"idx": 21880, "func": "If must be of this type then. //", "target": 0}
{"idx": 21881, "func": "% thresholds for bar color changes", "target": 0}
{"idx": 21882, "func": "We can't find the class, so we don't want this class loader, but instead want the last result that was able to load the class. //", "target": 0}
{"idx": 21883, "func": "May be null if function is used on TestPlan", "target": 0}
{"idx": 21884, "func": "if there is an error/failure and that it should halt, stop everything otherwise just log a statement", "target": 0}
{"idx": 21885, "func": "//ie. e.status==DELETED", "target": 0}
{"idx": 21886, "func": "identify which files should be attached", "target": 0}
{"idx": 21887, "func": "bad export - do not proceed with command The exportData() method has already put up a message to the user saying the export failed.", "target": 0}
{"idx": 21888, "func": "---------- Protected / package fields, methods ---------", "target": 0}
{"idx": 21889, "func": "//{{{ setSelectedText() method", "target": 0}
{"idx": 21890, "func": "Now read unbuffered directly from the file //", "target": 0}
{"idx": 21891, "func": "store current view settings", "target": 0}
{"idx": 21892, "func": "Some Java versions return the clipboard contents using the native line separator, so have to convert it here", "target": 0}
{"idx": 21893, "func": "success", "target": 0}
{"idx": 21894, "func": "Remove the object from the collection and add it to the equality list. //", "target": 0}
{"idx": 21895, "func": "// _msgSplit.setDividerLocation(0.9d); // _msgSplit.setResizeWeight(1.0);", "target": 0}
{"idx": 21896, "func": "Construct local variables based on parameter names passed in", "target": 0}
{"idx": 21897, "func": "e.printStackTrace();", "target": 0}
{"idx": 21898, "func": "Register the FromElement with the FROM clause, now that we have the names and aliases.", "target": 0}
{"idx": 21899, "func": "add domain axes to lists...", "target": 0}
{"idx": 21900, "func": "This is needed for internal bootstrapping of EGenericType's default value for eRawType. It's simply not available before Ecore is constructed so we make it available and then patch what's missing. //", "target": 0}
{"idx": 21901, "func": "line 1352", "target": 0}
{"idx": 21902, "func": "continue with null stream, readDiagram(...) will take care of it", "target": 0}
{"idx": 21903, "func": "Sort each letter", "target": 0}
{"idx": 21904, "func": "Walk up the super types until we reach a root. //", "target": 0}
{"idx": 21905, "func": "Changing color for column", "target": 0}
{"idx": 21906, "func": "if subject doesn't start already with \"Re:\" prepend it", "target": 0}
{"idx": 21907, "func": "//////////////TableModel implemetation", "target": 0}
{"idx": 21908, "func": "Parsing file x of z.", "target": 0}
{"idx": 21909, "func": "UCS-2 without a BOM must begin with \"<?XML\" 0x00 0x3c 0x00 0x3f: UCS-2, big-endian, no byte-order mark", "target": 0}
{"idx": 21910, "func": "append \"_tooltip\"", "target": 0}
{"idx": 21911, "func": "update the crosshair point", "target": 0}
{"idx": 21912, "func": "For all the file multiparts, we must revert the hiding of the actual file content", "target": 0}
{"idx": 21913, "func": "set parameters on each transformation, maybe something has changed //(e.g. value of file name parameter)", "target": 0}
{"idx": 21914, "func": "Look into SubContributionItems //", "target": 0}
{"idx": 21915, "func": "?z | boolean | True if file1 exists and has a zero length", "target": 0}
{"idx": 21916, "func": "skip \"Search All\"", "target": 0}
{"idx": 21917, "func": "//set up the javac options", "target": 0}
{"idx": 21918, "func": "ensure that l ends with a / so we never think /foo was a parent directory of /foobar", "target": 0}
{"idx": 21919, "func": "Check if not real cvsrsh => set it to null", "target": 0}
{"idx": 21920, "func": "modifiers", "target": 0}
{"idx": 21921, "func": "@see org.argouml.uml.reveng.ImportSettingsInternal#isDescendSelected()", "target": 0}
{"idx": 21922, "func": "rendering order...", "target": 0}
{"idx": 21923, "func": "it is a modified file set the revision and the prevrevision", "target": 0}
{"idx": 21924, "func": "Allows HTTPSamplerProxy to call notifyFirstSampleAfterLoopRestart; subclasses can override if necessary", "target": 0}
{"idx": 21925, "func": "Clear the import manager", "target": 0}
{"idx": 21926, "func": "@see javax.swing.JComponent#paintComponent(java.awt.Graphics)", "target": 0}
{"idx": 21927, "func": "Set the form data", "target": 0}
{"idx": 21928, "func": "//{{{ getSelectedValue() method", "target": 0}
{"idx": 21929, "func": "Record the index. //", "target": 0}
{"idx": 21930, "func": "This next argument may be used to switch off the generation of sequence numbers - this is still to be implemented. They are less desired in sequence diagrams, since they do not add any information. In collaboration diagrams they are needed, and they are still optional in sequence diagrams.", "target": 0}
{"idx": 21931, "func": "icon for menu", "target": 0}
{"idx": 21932, "func": "get active charset - necessary to decode msg for saving", "target": 0}
{"idx": 21933, "func": "save last message, because while loop aborted before being able to save message", "target": 0}
{"idx": 21934, "func": "Used for the 'redo' command", "target": 0}
{"idx": 21935, "func": "EOL", "target": 0}
{"idx": 21936, "func": "select the account this mail was received from", "target": 0}
{"idx": 21937, "func": "specify the anchor X and Y coordinates in Java2D space, for the cases where these are not updated during rendering (i.e. no lock on data)", "target": 0}
{"idx": 21938, "func": "we've already done the above priming logic, just add another interface to the list of intentions unless we're past the point of no return or already intend to implement the given interface", "target": 0}
{"idx": 21939, "func": "//{{{ getEndColumn() method", "target": 0}
{"idx": 21940, "func": "Only set message if error not yet flagged", "target": 0}
{"idx": 21941, "func": "Generate a hash code.", "target": 0}
{"idx": 21942, "func": "Compute meet over all \"sources\" and compute \"destination\" basic blocks that should then be processed. sources & targets depends on direction of the data flow problem", "target": 0}
{"idx": 21943, "func": "//{{{ Handle actions", "target": 0}
{"idx": 21944, "func": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 21945, "func": "Sometimes the value can be retrieved at \"compile time\". If we succeed, nothing like it! We might not .. for the following reasons: 1. The constant is missing, 2. The reference is a forward-reference, 3. The constant's value is only known at run-time on first-access (but, this is runtime, isn't it??) 4. Our compiler isn't able to right away infer that this is a constant. SSS FIXME: 1. The operand can be a literal array, range, or hash -- hence Operand because Array, Range, and Hash derive from Operand and not Constant ... Is there a way to fix this impedance mismatch? 2. It should be possible to handle the forward-reference case by creating a new ForwardReference operand and then inform the scope of the forward reference which the scope can fix up when the reference gets defined. At code-gen time, if the reference is unresolved, when a value is retrieved for the forward-ref and we get a null, we can throw a ConstMissing exception! Not sure! //", "target": 1}
{"idx": 21946, "func": "i18n[hashtabledataset.key=Key]", "target": 0}
{"idx": 21947, "func": "//{{{ doctypeDecl() method", "target": 0}
{"idx": 21948, "func": "now overwrite group \"G2\"...", "target": 0}
{"idx": 21949, "func": "After changing CommandlineJava to search for the java executable, I don't know, how to tests the value returned here without using the same logic as applied in the class itself. assertTrue(\"no classpath\", \"java\", s[0]);", "target": 0}
{"idx": 21950, "func": "line 1401", "target": 0}
{"idx": 21951, "func": "//Add end", "target": 0}
{"idx": 21952, "func": "the figs that make up this group", "target": 0}
{"idx": 21953, "func": "//switch", "target": 0}
{"idx": 21954, "func": "line 1383", "target": 0}
{"idx": 21955, "func": "and subtract as neeeded.", "target": 0}
{"idx": 21956, "func": "Get the size of the text field.", "target": 0}
{"idx": 21957, "func": "XMLJUnitResultFormatter", "target": 0}
{"idx": 21958, "func": "and for advanced mode:", "target": 0}
{"idx": 21959, "func": "(non-Javadoc) @see org.columba.mail.imap.IImapServer#search(org.columba.core.filter.FilterRule, org.columba.mail.folder.imap.IMAPFolder)", "target": 0}
{"idx": 21960, "func": "/////////////////////////////////////////////////////////Sybase ASE specific code to read view definitions.", "target": 0}
{"idx": 21961, "func": "if we might be moving this time from !DST -> DST, the offset is assumed to be the same as it was just before we last moved from DST -> !DST", "target": 0}
{"idx": 21962, "func": "//{{{ handleClient() method", "target": 0}
{"idx": 21963, "func": "Do nothing by design.", "target": 0}
{"idx": 21964, "func": "stop desiring the goal which should remove it from the model", "target": 0}
{"idx": 21965, "func": "Now sequences should go.", "target": 0}
{"idx": 21966, "func": "dial cap", "target": 0}
{"idx": 21967, "func": "i18n[SQLHistoryDlg.filterCboContains=contains]", "target": 0}
{"idx": 21968, "func": "//getContentPane().add(_menuBar, BorderLayout.NORTH);", "target": 0}
{"idx": 21969, "func": "//{{{ getNameSpace() method", "target": 0}
{"idx": 21970, "func": "NONE / FIXED", "target": 0}
{"idx": 21971, "func": "// for each JComboBox item", "target": 0}
{"idx": 21972, "func": "Generic", "target": 0}
{"idx": 21973, "func": "//{{{ selectNone() method", "target": 0}
{"idx": 21974, "func": "//final String queryString,", "target": 0}
{"idx": 21975, "func": "Our angle theta is arctan(opposite/adjacent) Because y increases going down the screen, positive angles are clockwise rather than counterclockwise", "target": 0}
{"idx": 21976, "func": "//invert adjustLog10", "target": 0}
{"idx": 21977, "func": "Below are getter's and setter's for each of the instance variables. Note that (in addition to supporting setters with the same type as the instance variable) a setter is provided with takes a String argument -- this are provided so the XML document handler can set the EJB values using the Strings it parses.", "target": 0}
{"idx": 21978, "func": "USER/PASS is always supported", "target": 0}
{"idx": 21979, "func": "//Make it transparent", "target": 0}
{"idx": 21980, "func": "Check the Noinferior flag", "target": 0}
{"idx": 21981, "func": "//builder.nextLine();", "target": 0}
{"idx": 21982, "func": "2300..23FF;", "target": 0}
{"idx": 21983, "func": "The vertex was dropped onto the diagram. Get the region as the first Region in the StateMachine. If there is no region in the StateMachine then create one.", "target": 0}
{"idx": 21984, "func": "//{{{ isSelected() method", "target": 0}
{"idx": 21985, "func": "//private ImageIcon image2 = null; //private ImageIcon image3 = null;", "target": 0}
{"idx": 21986, "func": "TODO: Note copy/paste code in FigEntryPoint - where is this code better placed in GEF?", "target": 1}
{"idx": 21987, "func": "should indicate that we are processing an INSERT/UPDATE/DELETE query with a subquery implied via a collection property function. Here, we need to use the table name itself as the qualification alias. TODO : verify this works for all databases... TODO : is this also the case in non-\"indexed\" scenarios?", "target": 1}
{"idx": 21988, "func": "Ensure that a report is not skipped if we are slightly late in checking the time.", "target": 0}
{"idx": 21989, "func": "64-bit number, native (as bignum)", "target": 0}
{"idx": 21990, "func": "ZIPs store time with a granularity of 2 seconds, round up", "target": 0}
{"idx": 21991, "func": "//{{{ endCompoundEdit() method", "target": 0}
{"idx": 21992, "func": "Try to resolve the proxy locally. //", "target": 0}
{"idx": 21993, "func": "@author: fdietz WORKAROUND: we simply append URLs to the existing global class loader and use the same as parent Note, that we create a new URL classloader for every class we instanciate. We might want to support hot-swapping of changed classes later.", "target": 1}
{"idx": 21994, "func": "TODO - not sure this is the best method", "target": 1}
{"idx": 21995, "func": "shapeOutlineVisible", "target": 0}
{"idx": 21996, "func": "return the appropriate axis editor", "target": 0}
{"idx": 21997, "func": "Frontbase describes it's tables as \"BASE TABLE\".", "target": 0}
{"idx": 21998, "func": "Find missing uids loop", "target": 0}
{"idx": 21999, "func": "TODO: how to merge multiple inheritance? Necessary? This currently copies the common ancestors multiple times", "target": 1}
{"idx": 22000, "func": "//{{{ Word class", "target": 0}
{"idx": 22001, "func": "Cycle when necessary", "target": 0}
{"idx": 22002, "func": "nothing we can do about veto, so just ignore it", "target": 0}
{"idx": 22003, "func": "Apparently it had a getItemUID, but we're not allowed to call it", "target": 0}
{"idx": 22004, "func": "UMLSequenceDiagram seqdiag = new UMLSequenceDiagram();", "target": 0}
{"idx": 22005, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getNewSessionPropertiesPanels()", "target": 0}
{"idx": 22006, "func": "//{{{ version() method", "target": 0}
{"idx": 22007, "func": "updating the actions", "target": 0}
{"idx": 22008, "func": "///////////////////////////////////////////////////////////////////////////Schema dependent data. Are changed only in this class //", "target": 0}
{"idx": 22009, "func": "bench Integer fib", "target": 0}
{"idx": 22010, "func": "errorStroke", "target": 0}
{"idx": 22011, "func": "only used if what is \"plugin\"", "target": 0}
{"idx": 22012, "func": "UML1.4 only", "target": 0}
{"idx": 22013, "func": "public FilterCriteria getCriteria(int index) { return (FilterCriteria) list.get(index); }", "target": 0}
{"idx": 22014, "func": "((AbstractLocalFolder) destFolder).setFlags(destuid, (Flags) getFlags( uids[i]).clone());", "target": 0}
{"idx": 22015, "func": "these methods should throw an IndexOutOfBoundsException since the column is too high...", "target": 0}
{"idx": 22016, "func": "do nothing", "target": 0}
{"idx": 22017, "func": "native identifier generatiion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 22018, "func": "This is to handle a genmodel produced by rose2genmodel. //", "target": 0}
{"idx": 22019, "func": "(non-Javadoc) @see org.columba.api.gui.frame.IDock#registerDockable(org.columba.api.gui.frame.IDockable)", "target": 0}
{"idx": 22020, "func": "//TODO: make this a bit nicer", "target": 1}
{"idx": 22021, "func": "Does the LIMIT clause come at the start of the SELECT statement, rather than at the end?", "target": 0}
{"idx": 22022, "func": "32 is the number of bits in `int'.", "target": 0}
{"idx": 22023, "func": "Make mantissa same sign so we only have one code path.", "target": 0}
{"idx": 22024, "func": "//{{{ Mode constructor", "target": 0}
{"idx": 22025, "func": "replace existing InsertEdit at this position (case when previous node ends at the same position that current node starts at)", "target": 0}
{"idx": 22026, "func": "would need an IdentitySet for this!", "target": 0}
{"idx": 22027, "func": "@see javax.swing.event.TreeExpansionListener#treeCollapsed( javax.swing.event.TreeExpansionEvent)", "target": 0}
{"idx": 22028, "func": "get meta's from <subclass>", "target": 0}
{"idx": 22029, "func": "Increases component width by 20 pixels", "target": 0}
{"idx": 22030, "func": "The cover.", "target": 0}
{"idx": 22031, "func": "close every open frame", "target": 0}
{"idx": 22032, "func": "line 1728", "target": 0}
{"idx": 22033, "func": "set from field and subject", "target": 0}
{"idx": 22034, "func": "Get index of last read byte", "target": 0}
{"idx": 22035, "func": "//we need to upgrade the lock mode to the mode requested", "target": 0}
{"idx": 22036, "func": "We are done - clear the status message after a delay", "target": 0}
{"idx": 22037, "func": "if the axis is not visible, no additional space is required...", "target": 0}
{"idx": 22038, "func": "saving last selected Message to the folder", "target": 0}
{"idx": 22039, "func": "TODO: Is this a good way of handling nested notation?", "target": 1}
{"idx": 22040, "func": "---- imTextField3 ----", "target": 0}
{"idx": 22041, "func": "Trying to cast null to primitive type?", "target": 0}
{"idx": 22042, "func": "MATCH-ANY-CHARACTER OPERATOR (except possibly newline and null) .", "target": 0}
{"idx": 22043, "func": "i18n[UpdateControllerImpl.exceptionMsg=Exception was: ]", "target": 0}
{"idx": 22044, "func": "Subclasses may override", "target": 0}
{"idx": 22045, "func": "//+ JMX attributes, do not change values $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ //-", "target": 0}
{"idx": 22046, "func": "Allows various loaders (ok mainly the QueryLoader :) to check whether scrolling of their result set should be allowed. By default it is allowed.", "target": 0}
{"idx": 22047, "func": "insets", "target": 0}
{"idx": 22048, "func": "TODO: huntForModulesFromJavaWebStart();", "target": 0}
{"idx": 22049, "func": "if mediator contains a sortable treemodel", "target": 0}
{"idx": 22050, "func": "case KeyEvent.VK_SEPARATOR:", "target": 0}
{"idx": 22051, "func": "This assert fails for the TestPropertyPanels, file GUITestPropertyPanels.zargo:", "target": 0}
{"idx": 22052, "func": "//{{{ searchStarted() method", "target": 0}
{"idx": 22053, "func": "@see org.argouml.persistence.AbstractFilePersister#isSaveEnabled()", "target": 0}
{"idx": 22054, "func": "load all internal addressbook plugins", "target": 0}
{"idx": 22055, "func": "Even though this is not relevant for UML2 we have code calling this that expects it for UML1.4 and we must handle it gracefully.", "target": 0}
{"idx": 22056, "func": "setMargin()", "target": 0}
{"idx": 22057, "func": "horizontal", "target": 0}
{"idx": 22058, "func": "Just to be helpful, we'll recognize a type of org.eclipse.emf.ecore.util.FeatureMap and convert it to EFeatureMapEntry. This way a dataType need not be specified. But, we won't do this if recordDemandCreateEDataType is false, so we don't change the instanceClass of a new EDataType that's implicitly being defined for FeatureMap. //", "target": 0}
{"idx": 22059, "func": "synthetic methods always have zero arg parameters", "target": 0}
{"idx": 22060, "func": "States", "target": 0}
{"idx": 22061, "func": "bottom.setLayout( new BoxLayout( bottom, BoxLayout.X_AXIS ) );", "target": 0}
{"idx": 22062, "func": "Allow testing of failure codes", "target": 0}
{"idx": 22063, "func": "TODO: don't require pop", "target": 1}
{"idx": 22064, "func": "@see org.argouml.model.ModelImplementation#getUseCasesHelper()", "target": 0}
{"idx": 22065, "func": "Remember the target; create the command and test if it is executable. //", "target": 0}
{"idx": 22066, "func": "end our transaction", "target": 0}
{"idx": 22067, "func": "//{{{ isJava14() method", "target": 0}
{"idx": 22068, "func": "initialize builtin libraries", "target": 0}
{"idx": 22069, "func": "orphans should be deleted during delete", "target": 0}
{"idx": 22070, "func": "fill background...", "target": 0}
{"idx": 22071, "func": "End of method createAttachmentListFromAttachmentConverted", "target": 0}
{"idx": 22072, "func": "do nothing here, just continue", "target": 0}
{"idx": 22073, "func": "////////////////////////////////////////////////////////////////////CORE / MAIN BODY", "target": 0}
{"idx": 22074, "func": "Remove all the mappings from the root. //", "target": 0}
{"idx": 22075, "func": "headers", "target": 0}
{"idx": 22076, "func": "local variables - what do they do?", "target": 1}
{"idx": 22077, "func": "Finds a stereotype in a given namespace, and all those in any sub-namespace of the given namespace. Returns null if no such stereotype is found. <p> TODO: What if stereo.getName() or stereo.getBaseClass() is null? Then you know immediately that none will be found, but is that the correct answer? Currently, null is returned in these cases. <p> TODO: This function should not take a stereotype object as parameter, but a name and a baseclass. <p> TODO: Currently only works for stereotypes with only one baseclass. <p> TODO: Currently only works for stereotypes where the baseclass is equal to the given one - inheritance does not work. @return the stereotype found or null. @param ns is the namespace. @param stereo is the stereotype.", "target": 1}
{"idx": 22078, "func": "Normal output ---- Debugging information ---- required-type : org.apache.jorphan.collections.ListedHashTree cause-message : WebServiceSampler : WebServiceSampler class : org.apache.jmeter.save.ScriptWrapper message : WebServiceSampler : WebServiceSampler line number : 929 path : /jmeterTestPlan/hashTree/hashTree/hashTree[4]/hashTree[5]/WebServiceSampler cause-exception : com.thoughtworks.xstream.alias.CannotResolveClassException -------------------------------", "target": 0}
{"idx": 22079, "func": "//{{{ createStyleTableModel() method", "target": 0}
{"idx": 22080, "func": "(non-Javadoc) @see org.columba.core.gui.util.SelectionHandler#getSelection()", "target": 0}
{"idx": 22081, "func": "warning for all warning messages", "target": 0}
{"idx": 22082, "func": "transient Perl5Compiler compiler = new Perl5Compiler(); $NON-NLS-1$", "target": 0}
{"idx": 22083, "func": "rename \".part\" file to destination file", "target": 0}
{"idx": 22084, "func": "This is not strictly true. We actually just need to make sure that it is ordered by root-entity PK and that that order-by comes before any non-root-entity ordering...", "target": 0}
{"idx": 22085, "func": "Perform the actual sample", "target": 0}
{"idx": 22086, "func": "itemLabelPaint", "target": 0}
{"idx": 22087, "func": "FIXME: Add at_exit and finalizers to exit, then make exit_bang not call those.", "target": 1}
{"idx": 22088, "func": "//no need to always keep the same job name for every printout.", "target": 0}
{"idx": 22089, "func": "MySQL allows statement separators in procedure blocks. The process of tokenizing above renders these procedure blocks as separate statements, which are not valid to be executed separately. Here, we re-assemble any create procedure/function/trigger statements that we find using the beginning procedure block pattern and the procedure separator.", "target": 0}
{"idx": 22090, "func": "avoid possible sun.dc.pr.PRException: endPath: bad path", "target": 0}
{"idx": 22091, "func": "There are no composite states, so this will work:", "target": 0}
{"idx": 22092, "func": "----- Logic -----", "target": 0}
{"idx": 22093, "func": "i18n[PostgresPlugin.showProcedureSource=Show procedure source]", "target": 0}
{"idx": 22094, "func": "i18n[TriggerDetailsTab.hint=Display trigger details]", "target": 0}
{"idx": 22095, "func": "annotations", "target": 0}
{"idx": 22096, "func": "null range throws IllegalArgumentException", "target": 0}
{"idx": 22097, "func": "//store index where new //column starts", "target": 0}
{"idx": 22098, "func": "Get the new numbers", "target": 0}
{"idx": 22099, "func": "An output stream that compresses into the BZip2 format (without the file header chars) into another stream. TODO: Update to BZip2 1.0.1 @author <a href=\"mailto:keiron@aftexsw.com\">Keiron Liddle</a>", "target": 1}
{"idx": 22100, "func": "retarded GTK look and feel!", "target": 1}
{"idx": 22101, "func": "The name is extracted and lower cased. //", "target": 0}
{"idx": 22102, "func": "start off with a merged object as a copy of the local object", "target": 0}
{"idx": 22103, "func": "TODO: Move this to IOUtilities Extracts the specified zip file to the specified output directory. @param zipFile @param outputDirectory @throws IOException", "target": 1}
{"idx": 22104, "func": "build the command line from what we got. the format is cleartool mkelem [options...] [viewpath ...] as specified in the CLEARTOOL.EXE help", "target": 0}
{"idx": 22105, "func": "ITEM LABELS VISIBLE", "target": 0}
{"idx": 22106, "func": "i18n[SchemaPropertiesController.cacheFilePath=Cache file path for Alias \"{0}\": {1}]", "target": 0}
{"idx": 22107, "func": "Clean-up string representation so that it could be understood by Java's BigDecimal. Not terribly efficient for now. 1. MRI allows d and D as exponent separators", "target": 0}
{"idx": 22108, "func": "If the source of the event is an UML object, e.g. the owner of this Fig (but not always only the owner is shown, e.g. for a class, also its attributes are shown), then the UML model has been changed.", "target": 0}
{"idx": 22109, "func": "ask the user about the destination file", "target": 0}
{"idx": 22110, "func": "Check if we found an accept-charset attribute on the form", "target": 0}
{"idx": 22111, "func": "TODO: This won't work when the column has values with quotes in them. Use PreparedStatements instead. Hmmm... instead of insert statements, could we not just create a sequence and generate a select statement that: a) uses the sequence for the pkid b) selects distinct values That would be a more efficient approach that would also eliminate this quoting problem", "target": 1}
{"idx": 22112, "func": "conforming to NodeList interface", "target": 0}
{"idx": 22113, "func": "(non-Javadoc) @see org.columba.core.filter.IFilterCriteria#setCriteria(int)", "target": 0}
{"idx": 22114, "func": "//{{{ Mirror class", "target": 0}
{"idx": 22115, "func": "Core class that exists in system classpath is ignored", "target": 0}
{"idx": 22116, "func": "Copy the collection //", "target": 0}
{"idx": 22117, "func": "line 525", "target": 0}
{"idx": 22118, "func": "types can probably have variables, but we should not nag at them not having any.", "target": 0}
{"idx": 22119, "func": "//TODO: return new Lock(ts);", "target": 1}
{"idx": 22120, "func": "init controllers for different parts of the composer", "target": 0}
{"idx": 22121, "func": "Try to find out the name of the primary key to create it as identity if the IdentityGenerator is used", "target": 0}
{"idx": 22122, "func": "convert data from StringWrappers to Strings", "target": 0}
{"idx": 22123, "func": "i18n[ContentsTab.title=Content]", "target": 0}
{"idx": 22124, "func": "Experimental class reification support, to create real Java classes for Ruby classes after the first opening", "target": 0}
{"idx": 22125, "func": "i18n[DialectUtils.columnDefaultUnsupported={0} doesn''t support altering a column''s default value]", "target": 0}
{"idx": 22126, "func": "//i18n[CopyTablesCommand.loadingPrefix=Analyzing table:]", "target": 0}
{"idx": 22127, "func": "RFC 1034: Labels must be 63 characters or less.", "target": 0}
{"idx": 22128, "func": "//}}} //{{{ EOL_SPAN", "target": 0}
{"idx": 22129, "func": "Update the array of TimePeriods:", "target": 0}
{"idx": 22130, "func": "TODO So what should be the eType be now? //", "target": 1}
{"idx": 22131, "func": "TODO: We need a specific exception type here.", "target": 1}
{"idx": 22132, "func": "Next two methods implement new API by delegation to model", "target": 0}
{"idx": 22133, "func": "//Can not delete the model", "target": 0}
{"idx": 22134, "func": "//wait for pending chars to be processed //post new characters", "target": 0}
{"idx": 22135, "func": "force command not to be null", "target": 0}
{"idx": 22136, "func": "read-volatile", "target": 0}
{"idx": 22137, "func": "The name of the SQL function that transforms a string to lowercase", "target": 0}
{"idx": 22138, "func": "Straightforward matching.", "target": 0}
{"idx": 22139, "func": "A newly created AssociationClass may not have all its parts created by the time we are called", "target": 0}
{"idx": 22140, "func": "special case where the highest x-value is < xLow", "target": 0}
{"idx": 22141, "func": "Create a Header Manager to ensure that the browsers headers are captured and sent to the server", "target": 0}
{"idx": 22142, "func": "A document root can have multiple ID attributes because there can be multiple global element or attribute declarations of type ID and these will be the ID in the complex types that reference them, i.e., they aren't really the ID of the document root. //", "target": 0}
{"idx": 22143, "func": "Remove any previous old data", "target": 0}
{"idx": 22144, "func": "get the title here, not in the factory constructor, since the factory might be created before a plugin's props are loaded", "target": 0}
{"idx": 22145, "func": "don't beep if not found. subsequent beeps are very annoying when backspacing an invalid search string.", "target": 0}
{"idx": 22146, "func": "who would interrupt me at a time like this?", "target": 0}
{"idx": 22147, "func": "EOF", "target": 0}
{"idx": 22148, "func": "//Parser.ParseAndUpdate(modelObject, s);", "target": 0}
{"idx": 22149, "func": "case 4: signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); break; case 5: signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); break;", "target": 0}
{"idx": 22150, "func": "if we reach this point, the value has been changed, so fall through to next section", "target": 0}
{"idx": 22151, "func": "if it was dirtied by a collection only", "target": 0}
{"idx": 22152, "func": "go through negated powers of 32 until we find one small enough", "target": 0}
{"idx": 22153, "func": "Transform to 0 - 2PI range if we've gone all the way around circle", "target": 0}
{"idx": 22154, "func": "i18n[userscript.enterScriptClass=Please enter a script class]", "target": 0}
{"idx": 22155, "func": "//{{{ startPluginLater() method", "target": 0}
{"idx": 22156, "func": "Install location", "target": 0}
{"idx": 22157, "func": "got the required exception", "target": 0}
{"idx": 22158, "func": "only called by FolderTreeModel.createDirectories() and FolderTreeModel.add()", "target": 0}
{"idx": 22159, "func": "!!! Subject: test create filter configuration -> check if <Subject> <contains> pattern <test>", "target": 0}
{"idx": 22160, "func": "@see javax.swing.tree.TreeModel#getChild(java.lang.Object, int)", "target": 0}
{"idx": 22161, "func": "A String property:", "target": 0}
{"idx": 22162, "func": "ignored - rendering is fixed", "target": 0}
{"idx": 22163, "func": "===================== scenario tests =====================", "target": 0}
{"idx": 22164, "func": "FIXME can't use static; would interfere with other runtimes in the same JVM", "target": 1}
{"idx": 22165, "func": "shapesVisible", "target": 0}
{"idx": 22166, "func": "@see org.argouml.notation.providers.NotationProvider#getParsingHelp()", "target": 0}
{"idx": 22167, "func": "row 3: background paint", "target": 0}
{"idx": 22168, "func": "//{{{ loadToolBar() method", "target": 0}
{"idx": 22169, "func": "Use cmd.exe to change to the specified drive and directory before running the command", "target": 0}
{"idx": 22170, "func": "i18n[DataSetUpdateableTableModelImpl.info.norowsupdated=No rows updated.]", "target": 0}
{"idx": 22171, "func": "This just notifies those things that are affected by the section. //", "target": 0}
{"idx": 22172, "func": "the second row contains a multi-line description, so make that row high enough to display it", "target": 0}
{"idx": 22173, "func": "LineNumber height (abends when I use MAX_VALUE)", "target": 0}
{"idx": 22174, "func": "shift the decimal point just to the right of the digit to be rounded to (divide by 10(abs(scale))) -1 -> 10's digit, -2 -> 100's digit, etc.", "target": 0}
{"idx": 22175, "func": "set double-click action for attachment viewer", "target": 0}
{"idx": 22176, "func": "create a print object and return it", "target": 0}
{"idx": 22177, "func": "@see javax.swing.AbstractListModel#fireIntervalAdded( Object, int, int)", "target": 0}
{"idx": 22178, "func": "//skip the FROM keyword in params", "target": 0}
{"idx": 22179, "func": "$NON-NLS-1$;", "target": 0}
{"idx": 22180, "func": "The pattern contains a fixed string. The engine checks with Boyer-Moore whether the text contains the fixed string or not. If not, it return with false.", "target": 0}
{"idx": 22181, "func": "Containers are transient by default unless explicitly annotated otherwise. //", "target": 0}
{"idx": 22182, "func": "add a decision but set the critic priority to 0 so isRelevant should still be false", "target": 0}
{"idx": 22183, "func": "files[] should have length 1, since the dialog type is SAVE_DIALOG", "target": 0}
{"idx": 22184, "func": "Adjust for buffered data", "target": 0}
{"idx": 22185, "func": "WORD BREAK OPERATOR \\b if ????", "target": 0}
{"idx": 22186, "func": "//{{{ addOptionGroup() method", "target": 0}
{"idx": 22187, "func": "urlText", "target": 0}
{"idx": 22188, "func": "evaluate the args", "target": 0}
{"idx": 22189, "func": "oops we already have the body", "target": 0}
{"idx": 22190, "func": "make sure bins[bins.length]'s upper boundary ends at maximum to avoid the rounding issue. the bins[0] lower boundary is guaranteed start from min", "target": 0}
{"idx": 22191, "func": "user.home/.squirrel-sql/plugins/dbcopy", "target": 0}
{"idx": 22192, "func": "package-protected", "target": 0}
{"idx": 22193, "func": "//{{{ ResultIcon class", "target": 0}
{"idx": 22194, "func": "NOTE: this assumes something about how propertySelectFragment is implemented by the subclass! was toUnqotedAliasStrings( getIdentiferColumnNames() ) before - now tried to remove that unqoting and missing aliases..", "target": 1}
{"idx": 22195, "func": "Convert CRLF to CR, see modifyTestElement", "target": 0}
{"idx": 22196, "func": "This non-editable field shows the version of the ArgoUML that last saved this project:", "target": 0}
{"idx": 22197, "func": "Generate the static bsh static reference holder field", "target": 0}
{"idx": 22198, "func": "The package not in a .cat file. //", "target": 0}
{"idx": 22199, "func": "//an identifier mapper => getKey will be included in the getNonDuplicatedPropertyIterator() //and checked later, so it needs to be excluded", "target": 0}
{"idx": 22200, "func": "First find the beginning element", "target": 0}
{"idx": 22201, "func": "get header of message", "target": 0}
{"idx": 22202, "func": "//Generators:", "target": 0}
{"idx": 22203, "func": "could not find it!", "target": 0}
{"idx": 22204, "func": "End BeanShell Modification - public, extend EvalError", "target": 0}
{"idx": 22205, "func": "//{{{ addLayoutComponent() method", "target": 0}
{"idx": 22206, "func": "Windows has a 32k limit on total arg size, so create a temporary file to store all the arguments", "target": 0}
{"idx": 22207, "func": "no extra args for rest", "target": 0}
{"idx": 22208, "func": "//MappingPackageImpl", "target": 0}
{"idx": 22209, "func": "NON-ALPHANUMERIC OPERATOR \\W", "target": 0}
{"idx": 22210, "func": "//return h;", "target": 0}
{"idx": 22211, "func": "save last message (while loop terminated before last msg was saved)", "target": 0}
{"idx": 22212, "func": "classes are directly in the hierarchy, so no special logic is necessary for implementer", "target": 0}
{"idx": 22213, "func": "//{{{ compareVersions() method", "target": 0}
{"idx": 22214, "func": "Save the new fields - but only if they are not the default", "target": 0}
{"idx": 22215, "func": "TODO: Needs work. Must determine which Figs enclosed in the pool are within the bounds of this Fig and translate those.", "target": 1}
{"idx": 22216, "func": "Create buttons", "target": 0}
{"idx": 22217, "func": "Check if the cached command can provide DND feedback/revalidation. //", "target": 0}
{"idx": 22218, "func": "Overlapped src: o--------o sub: o----o sub: o----o sub: o----o sub: o------------o", "target": 0}
{"idx": 22219, "func": "plot the data...", "target": 0}
{"idx": 22220, "func": "Add this header to the list for later searching", "target": 0}
{"idx": 22221, "func": "//[i18n[OrderByClausePanel.addLabel=Add]", "target": 0}
{"idx": 22222, "func": "//{{{ toggleRectangularSelectionEnabled() method", "target": 0}
{"idx": 22223, "func": "i18n[ActionCollection.createActionError=Error occured creating Action: {0}]", "target": 0}
{"idx": 22224, "func": "clear ignore flag", "target": 0}
{"idx": 22225, "func": "//System.err.println(\"Starts at \"+index);", "target": 0}
{"idx": 22226, "func": "this is safe because getName always returns a string of some type", "target": 0}
{"idx": 22227, "func": "i18n[mssql.options=Options]", "target": 0}
{"idx": 22228, "func": "@see org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode#getTypeOrderNumer()", "target": 0}
{"idx": 22229, "func": "line 519", "target": 0}
{"idx": 22230, "func": "try to find a MAX_LINE_LENGTH byte section", "target": 0}
{"idx": 22231, "func": "wait 1 second extra to allow for java to start ... this time was OK on a Win NT machine and on nagoya", "target": 0}
{"idx": 22232, "func": "do the put outside the scope of the JTA txn", "target": 0}
{"idx": 22233, "func": "Self-association isn't draggable", "target": 0}
{"idx": 22234, "func": "Manifest's ClassPath: attribute always uses forward slashes '/', and is space-separated. Ant will properly format it on 72 columns with proper line continuation", "target": 0}
{"idx": 22235, "func": "//{{{ fvmdump() method", "target": 0}
{"idx": 22236, "func": "add a second dataset, plotted against a second x axis", "target": 0}
{"idx": 22237, "func": "Buffer for undecoded raw byte input. //", "target": 0}
{"idx": 22238, "func": "//TODO: theoretically non-threadsafe...", "target": 1}
{"idx": 22239, "func": "no need to create entity if we can't save it anyways...", "target": 0}
{"idx": 22240, "func": "//i18n[DumpApplicationCommand.title.drivers=Drivers]", "target": 0}
{"idx": 22241, "func": "// JScrollPane jscrollpane1 = new JScrollPane();", "target": 0}
{"idx": 22242, "func": "Some editors may need the descriptor", "target": 0}
{"idx": 22243, "func": "Initial config from properties", "target": 0}
{"idx": 22244, "func": "Don't use 'cotinue' for this loop. single-range | from-to-range | subtraction", "target": 0}
{"idx": 22245, "func": "If all columns in a table have empty strings as the headings then the row height of the label row is zero. We dont want this.", "target": 0}
{"idx": 22246, "func": "get destination folder", "target": 0}
{"idx": 22247, "func": "css = \"<style type=\\\"text/css\\\">\\n\" + \"body {font-family:\\\"\" + name + \"\\\"; font-size:\\\"\" + size + \"pt; \\\"} \\n\" + \"a { color: blue; text-decoration: underline }\\n\" + \"font.quoting {color:#949494;} \\n\" + \"</style>\\n\";", "target": 0}
{"idx": 22248, "func": "no folds in buffer", "target": 0}
{"idx": 22249, "func": "This should override the default tokenizer", "target": 0}
{"idx": 22250, "func": "deactivate the folder", "target": 0}
{"idx": 22251, "func": "first make sure that user's last input has been included (It is too easy for user to enter data and forget to click on another field to force it to be set.)", "target": 0}
{"idx": 22252, "func": "Methods called by the Variable parsers", "target": 0}
{"idx": 22253, "func": "Decent value for timers", "target": 0}
{"idx": 22254, "func": "Collection of components.", "target": 0}
{"idx": 22255, "func": "///////////////////Start of standard save/set access methods /////////////////////", "target": 0}
{"idx": 22256, "func": "text", "target": 0}
{"idx": 22257, "func": "save message in Sent folder", "target": 0}
{"idx": 22258, "func": "//?? There does not seem to be any standard way to represent //?? binary data in a WHERE clause... tell caller we cannot use this in Where clause", "target": 0}
{"idx": 22259, "func": "we only need to add the classloader once and if and only if there is at least a profile in the JAR", "target": 0}
{"idx": 22260, "func": "N.B. must be done after opening connection", "target": 0}
{"idx": 22261, "func": "Predefined format patterns, selected by the property log_format_type (see jmeter.properties) The new-line is added later", "target": 0}
{"idx": 22262, "func": "Copy the app module jar to core downloads directory", "target": 0}
{"idx": 22263, "func": "Check for duplicate name and rename if necessary", "target": 1}
{"idx": 22264, "func": "http:///org/eclipse/emf/ecore/util/ExtendedMetaData", "target": 0}
{"idx": 22265, "func": "If the from element isn't in the same clause, create a new from element.", "target": 0}
{"idx": 22266, "func": "a not-directory file resource needs special treatment", "target": 0}
{"idx": 22267, "func": "Handle the type, multiplicity and other ETypedElement attributes. //", "target": 0}
{"idx": 22268, "func": "//if flag then change to log version of lowest value to make range begin at a 10^n value:", "target": 0}
{"idx": 22269, "func": "Finds the next occurrence of one of the characters in the set represented by the given bitmask in the given string, beginning at index i. The index of the first found character, or s.length() if there is none, is returned. Before searching, i is limited to the range [0, s.length()]. //", "target": 0}
{"idx": 22270, "func": "//inherit doc", "target": 0}
{"idx": 22271, "func": "move all successfully send messages to the Sent folder", "target": 0}
{"idx": 22272, "func": "Note: This class is messy. The method and field resolution need to be rewritten. Various methods in here catch NoSuchMethod or NoSuchField exceptions during their searches. These should be rewritten to avoid having to catch the exceptions. Method lookups are now cached at a high level so they are less important, however the logic is messy.", "target": 1}
{"idx": 22273, "func": "i18n[mssql.foematting=Formatting]", "target": 0}
{"idx": 22274, "func": "record headers size to allow HTTPSampleResult.getBytes() with different options $NON-NLS-1$ $NON-NLS-2$ add 2 for a '\\r\\n' at end of headers (before data)", "target": 0}
{"idx": 22275, "func": "TODO: When JDK1.4 is the earliest JDK supported by Squirrel then remove the hardcoding of the boolean data type.", "target": 1}
{"idx": 22276, "func": "positional parameters will be inserted where $1, $2, $3, ... occurs in the expansion", "target": 0}
{"idx": 22277, "func": "Tests property element, using XML schema properties as an example.", "target": 0}
{"idx": 22278, "func": "20 = height of name fig ?", "target": 0}
{"idx": 22279, "func": "//get the model elements that are being transfered.", "target": 0}
{"idx": 22280, "func": "Add the last point (x,0)", "target": 0}
{"idx": 22281, "func": "end class SystemInfoDialog", "target": 0}
{"idx": 22282, "func": "all errors, just info; do not prevent unloading IKVM does not support JMX, and throws an error", "target": 0}
{"idx": 22283, "func": "Inner class for continually pumping the input stream during Process's runtime.", "target": 0}
{"idx": 22284, "func": "quoted-printable", "target": 0}
{"idx": 22285, "func": "//connect to the remote site (may take some time)", "target": 0}
{"idx": 22286, "func": "Must not convert TestElement.gui_class etc", "target": 0}
{"idx": 22287, "func": "line 451", "target": 0}
{"idx": 22288, "func": "Mostly delegates to model", "target": 0}
{"idx": 22289, "func": "Check and ignore empty statements", "target": 0}
{"idx": 22290, "func": "otherwise, the number of subregions", "target": 0}
{"idx": 22291, "func": "List of EJBs found in XML One item within the Map Is doc iAS or EJB descriptor", "target": 0}
{"idx": 22292, "func": "not a field", "target": 0}
{"idx": 22293, "func": "NOTE: responseData encoding is server specific Therefore we do byte -> unicode -> byte conversion to ensure UTF-8 encoding as required by XPathUtil convert unicode String -> UTF-8 bytes $NON-NLS-1$", "target": 0}
{"idx": 22294, "func": "//use a degenerated strategy for backward compatibility", "target": 1}
{"idx": 22295, "func": "We know we are comparing to another SampleSaveConfiguration", "target": 0}
{"idx": 22296, "func": "//i18n[syntax.italic=Italic]", "target": 0}
{"idx": 22297, "func": "set language config based on selected item", "target": 0}
{"idx": 22298, "func": "translucent green", "target": 0}
{"idx": 22299, "func": "currBB cannot be null!", "target": 0}
{"idx": 22300, "func": "now we create the compiled pattern and add it to the arraylist", "target": 0}
{"idx": 22301, "func": "//{{{ getProperties() method", "target": 0}
{"idx": 22302, "func": "notify all listeners @see org.columba.core.gui.util.FontProperties @see org.columba.mail.gui.message.TextViewer @see org.columba.mail.gui.composer.text.TextEditorController", "target": 0}
{"idx": 22303, "func": "This is the (global) counter for the array of specified attributes.", "target": 0}
{"idx": 22304, "func": "Start copying to the left.", "target": 0}
{"idx": 22305, "func": "//{{{ getInputHandler() method", "target": 0}
{"idx": 22306, "func": "level 1 import detail", "target": 0}
{"idx": 22307, "func": "The dialog that allows the user to go to any diagram in the project by doubleclicking on it.<p> This dialog is not modal, and can stay open while the user is working on the model. It is even possible to open multiple of these dialogs, although the purpose of such useraction eludes me.<p> TODO: This dialog should have multiple tabs named \"Help\", \"Diagram\", \"Classifier\", \"StateVertex\", etc. Which would allow the user to go to other things than diagrams. @author MVW", "target": 1}
{"idx": 22308, "func": "$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ e.g. \"Transfer-Encoding: chunked\", which is processed automatically by the underlying protocol $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ pseudo-header for reporting Local Address $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ For handling caching $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ //e.g. public, max-age=259200 //e.g. Date Header of response", "target": 0}
{"idx": 22309, "func": "so that shift-click-drag works", "target": 0}
{"idx": 22310, "func": "now send message source", "target": 0}
{"idx": 22311, "func": "need to set the input stream - reinit the parser?", "target": 0}
{"idx": 22312, "func": "check that null items are ignored if requested", "target": 0}
{"idx": 22313, "func": "for faster printing, turn off double buffering", "target": 0}
{"idx": 22314, "func": "adds a new (u, insert) entry in the allIndexes and allSizes arrays", "target": 0}
{"idx": 22315, "func": "first header showing Day info", "target": 0}
{"idx": 22316, "func": "FIXME: add setSeriesOutlineStroke(int, Stroke, boolean) ?", "target": 0}
{"idx": 22317, "func": "We compare three classes: plain, md5 and popbeforesmtp", "target": 0}
{"idx": 22318, "func": "@TODO dont use deprecated method", "target": 1}
{"idx": 22319, "func": "memorize all URLs", "target": 0}
{"idx": 22320, "func": "save changes", "target": 0}
{"idx": 22321, "func": "there was no class file. add this class to the list", "target": 0}
{"idx": 22322, "func": "Can't get the slope of a point. Just return an arbitrary point.", "target": 0}
{"idx": 22323, "func": "Stop updating model when we're not visible", "target": 0}
{"idx": 22324, "func": "MappingHelper", "target": 0}
{"idx": 22325, "func": "//{{{ accept() method", "target": 0}
{"idx": 22326, "func": "calcBounds();", "target": 0}
{"idx": 22327, "func": "close", "target": 0}
{"idx": 22328, "func": "take copy so cannot get NPE", "target": 0}
{"idx": 22329, "func": "write out the number of characters encoded in this line.", "target": 0}
{"idx": 22330, "func": "Evaluate block in two passes: First do class declarations then do everything else.", "target": 0}
{"idx": 22331, "func": "i18n[graph.removeGraph=Remove graph]", "target": 0}
{"idx": 22332, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.smarttools.gui.ISmarttoolFrame#setFocusToFirstEmptyInputField()", "target": 0}
{"idx": 22333, "func": "tabs for triggers", "target": 0}
{"idx": 22334, "func": "Html: Insertion of text before and after original message", "target": 0}
{"idx": 22335, "func": "value is a simple string representation of the data, the same one used in the Text and in-cell operations.", "target": 0}
{"idx": 22336, "func": "//{{{ paintValidLine() method", "target": 0}
{"idx": 22337, "func": "substitute special characters like: <,>,&,\\t,\\n", "target": 0}
{"idx": 22338, "func": "Pattern and string do not have the same size", "target": 0}
{"idx": 22339, "func": "Handling the initialise method", "target": 0}
{"idx": 22340, "func": "processing unknown feature with xsi:type (xmi:type)", "target": 0}
{"idx": 22341, "func": "end class ActionCopy", "target": 0}
{"idx": 22342, "func": "number of samples in this entry", "target": 0}
{"idx": 22343, "func": "The nodes at the two ends", "target": 0}
{"idx": 22344, "func": "MRI behavior: we don't print errno for actual Errno errors", "target": 0}
{"idx": 22345, "func": "restricting types for tagged values", "target": 0}
{"idx": 22346, "func": "//{{{ getDoubleProperty() method", "target": 0}
{"idx": 22347, "func": "//{{{ goToPrevMarker() method", "target": 0}
{"idx": 22348, "func": "ifnonnull", "target": 0}
{"idx": 22349, "func": "for debugging", "target": 0}
{"idx": 22350, "func": "WARNING: classfile only", "target": 0}
{"idx": 22351, "func": "//i18n[PleaseWaitDialog.pleaseWait=Please wait while the query is executed]", "target": 0}
{"idx": 22352, "func": "Need to 'arm' the rerouting capability with mouseDragged(). <p> Don't arm if the edtior's current mode is a figedge create mode, because once a new edge has been created it is not deselected, therefore on the next create an unwanted reroute is performed. @see java.awt.event.MouseMotionListener#mouseDragged(java.awt.event.MouseEvent)", "target": 0}
{"idx": 22353, "func": "i18n[I18n.NoSourceDir=Please choose a source directory.]", "target": 0}
{"idx": 22354, "func": "add another (inner) nested select add the main query close off the inner nested select", "target": 0}
{"idx": 22355, "func": "try all possible version of readme files...", "target": 0}
{"idx": 22356, "func": "if there is no updateable model, then we cannot update anything (should never happen - just being safe here)", "target": 0}
{"idx": 22357, "func": "flags 4 bytes of modified time", "target": 0}
{"idx": 22358, "func": "Set the namespace to that of the base as first choice, or that of the addition as second choice.", "target": 0}
{"idx": 22359, "func": "@see java.util.Collection#add(java.lang.Object)", "target": 0}
{"idx": 22360, "func": "nothing 'cept close box", "target": 0}
{"idx": 22361, "func": "//{{{ getSelectionStartLine() method", "target": 0}
{"idx": 22362, "func": "//apply lower margin by decreasing lower bound:", "target": 0}
{"idx": 22363, "func": "//XMLNamespaceDocumentRootImpl", "target": 0}
{"idx": 22364, "func": "Firebird gives weird exception: unsuccessful metadata update object FKTESTPARENTTABLE is in use; squelch it and continue.", "target": 0}
{"idx": 22365, "func": "check if there's already an instanciation available we can reuse here", "target": 0}
{"idx": 22366, "func": "would be better to use the element-type to determine whether the old and the new are equal here; the problem being we do not necessarily have access to the element type in all cases", "target": 1}
{"idx": 22367, "func": "Look for special Cookie request //$NON-NLS-1$", "target": 0}
{"idx": 22368, "func": "$NON-NLS-1$ define AWT WM_CLASS string", "target": 0}
{"idx": 22369, "func": "baseLegendTextFont", "target": 0}
{"idx": 22370, "func": "and we were given a specific exception", "target": 0}
{"idx": 22371, "func": "not visible any more - so remove as listener", "target": 0}
{"idx": 22372, "func": "TestStateListener implementation", "target": 0}
{"idx": 22373, "func": "check that there is some data to display...", "target": 0}
{"idx": 22374, "func": "no range axis no renderer", "target": 0}
{"idx": 22375, "func": "@see org.argouml.cognitive.critics.Critic#predicate( java.lang.Object, org.argouml.cognitive.Designer)", "target": 0}
{"idx": 22376, "func": "//{{{ Factory class", "target": 0}
{"idx": 22377, "func": "acceptsNull acceptsExpressions acceptsOther", "target": 0}
{"idx": 22378, "func": "A list of collection wrappers that were instantiating during result set processing, that we will need to initialize at the end of the query", "target": 0}
{"idx": 22379, "func": "//e.g:org.argouml.uml.generator.ui.ClassGenerationDialog -> poseidon.jar", "target": 0}
{"idx": 22380, "func": "depending on implementation, XMLReader can yield hips of warning, only output then if user explicitly asked for it", "target": 0}
{"idx": 22381, "func": "Need not to call setSource() because a caller can not access this match instance.", "target": 0}
{"idx": 22382, "func": "//{{{ BufferMenu class", "target": 0}
{"idx": 22383, "func": "0!", "target": 0}
{"idx": 22384, "func": "this returns either \"EAttribute\" or \"EReference\"", "target": 0}
{"idx": 22385, "func": "The string to check (Url or data)", "target": 0}
{"idx": 22386, "func": "//{{{ deleteParagraph() method", "target": 0}
{"idx": 22387, "func": "SSS FIXME: Can this return anything other than nil?", "target": 1}
{"idx": 22388, "func": "Jun 9 2004 12:40 PM waitFor() hangs on some Java implementations.", "target": 1}
{"idx": 22389, "func": "File IO related functions", "target": 0}
{"idx": 22390, "func": "set the method parameters in the local namespace", "target": 0}
{"idx": 22391, "func": "call the postStartups of the modules e.g. check for default mailclient", "target": 0}
{"idx": 22392, "func": "Check if we should send only placeholder text for the file content, or the real file content", "target": 0}
{"idx": 22393, "func": "General case - performe the instanceof based on assignability", "target": 0}
{"idx": 22394, "func": "TODO: Taken from FigClassifierBoxWithAttribute to handle events on an attribute. All this event handling should eventually be moved to the compartment Fig for attributes", "target": 1}
{"idx": 22395, "func": "Check all the siblings to see which if any should now be nested under this new mapping. The are accumulated into a list so that they can be removed as a single command with a single notification. //", "target": 0}
{"idx": 22396, "func": "//enableTextIndexingLabel.setEnabled(false);", "target": 0}
{"idx": 22397, "func": "////////////////////////////////////////////////////////////////////High-level I/O. //////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 22398, "func": "//{{{ DisplayManager constructor", "target": 0}
{"idx": 22399, "func": "i18n[sqlval.technologyVersion=Technology Version:]", "target": 0}
{"idx": 22400, "func": "//{{{ GeneralOptionPane constructor", "target": 0}
{"idx": 22401, "func": "we try to get the classloader that loaded JRuby, falling back on System", "target": 0}
{"idx": 22402, "func": "Try to select the affected objects. //", "target": 0}
{"idx": 22403, "func": "ensure only values are used", "target": 0}
{"idx": 22404, "func": "and check the first series too...", "target": 0}
{"idx": 22405, "func": "Controller + Before + Switch (cond) + + zero + + Controller sub_1 + + + one + + two + + Controller sub_2 + + + three + After", "target": 0}
{"idx": 22406, "func": "//{{{ goToNextFold() method", "target": 0}
{"idx": 22407, "func": "show the grid lines, to turn it off, set it to zero", "target": 0}
{"idx": 22408, "func": "if too any elements", "target": 0}
{"idx": 22409, "func": "get header with UID", "target": 0}
{"idx": 22410, "func": "Identity map of EntityEntry instances, by the entity instance", "target": 0}
{"idx": 22411, "func": "//when running labelsync, if view elements are in sync, //Perforce produces a line of output //looking like this one : //error: //depot/file2 - label in sync.", "target": 0}
{"idx": 22412, "func": "Disable the DELETE and SAVE buttons if no rows remaining after delete", "target": 0}
{"idx": 22413, "func": "JRubyClient", "target": 0}
{"idx": 22414, "func": "TODO: set the total for the progress bar.", "target": 1}
{"idx": 22415, "func": "Otherwise create a new classdiagram for the package.", "target": 0}
{"idx": 22416, "func": "//test out the optimizer:", "target": 0}
{"idx": 22417, "func": "Avoid our deinitialization here The node will be added back to the tree again", "target": 0}
{"idx": 22418, "func": "nothing extra to do currently", "target": 0}
{"idx": 22419, "func": "return new uninitialized proxy", "target": 0}
{"idx": 22420, "func": "Parse the XML declaration. <pre> [25] XMLDecl ::= '&lt;?xml' VersionInfo EncodingDecl? SDDecl? S? '?&gt;' [26] VersionInfo ::= S 'version' Eq ('\"1.0\"' | \"'1.0'\") [33] SDDecl ::= S 'standalone' Eq \"'\" ('yes' | 'no') \"'\" | S 'standalone' Eq '\"' (\"yes\" | \"no\") '\"' [78] EncodingDecl ::= S 'encoding' Eq QEncoding </pre> <p>([80] to [82] are also significant.) <p>(The <code>&lt;?xml</code> and whitespace have already been read.) <p>TODO: validate value of standalone. @see #parseTextDecl @see #checkEncoding", "target": 1}
{"idx": 22421, "func": "Are there are available data flow facts to run this problem? SSS FIXME: Silly optimization?", "target": 1}
{"idx": 22422, "func": "Arrays of Strings are a special case. In XMLBeanWriter method ProcessProperty an array of Strings is turned into a list of StringWrapper objects in the XML (presumably so that when reading them back we have a class that we can call setters on). Thus, when reading back an array of Strings we actually read an array of StringWrappers, which gives a type mis-match in the following arrayCopy. Therefore we need to convert the data that is currently in the StringWrapper objects into actual Strings.", "target": 1}
{"idx": 22423, "func": "New env var...append the previous one if we have it.", "target": 0}
{"idx": 22424, "func": "//{{{ endDocument() method", "target": 0}
{"idx": 22425, "func": "thresholds", "target": 0}
{"idx": 22426, "func": "houston we have a problem !!", "target": 1}
{"idx": 22427, "func": "TODO: We don't currently have any settings that can change on a per-fig basis, so we can just use the project/diagram defaults settings = new DiagramSettings(renderSettings);", "target": 0}
{"idx": 22428, "func": "Build list of wrapped children from the appropriate adapters. //", "target": 0}
{"idx": 22429, "func": "not sure if this is correct for OpenVMS.", "target": 0}
{"idx": 22430, "func": "add a value that isn't in the xRange", "target": 0}
{"idx": 22431, "func": "no update done to underlying data", "target": 0}
{"idx": 22432, "func": "if mnemonic is first character of this string", "target": 0}
{"idx": 22433, "func": "temp test case for exploring settings", "target": 0}
{"idx": 22434, "func": "Make sure save action is always reinstated", "target": 0}
{"idx": 22435, "func": "this is only needed (afaict) for processing results from the query cache; however, this cannot possibly work in the case of discovered types...", "target": 1}
{"idx": 22436, "func": "@see org.argouml.uml.diagram.layout.Layouter#layout()", "target": 0}
{"idx": 22437, "func": "the text is used by the event handler for opening the project", "target": 0}
{"idx": 22438, "func": "20 sec.", "target": 0}
{"idx": 22439, "func": "Really ought to have a CriticException to throw here.", "target": 1}
{"idx": 22440, "func": "we have something like : \"lhs [op] ?\"", "target": 0}
{"idx": 22441, "func": "Reached EOF:", "target": 0}
{"idx": 22442, "func": "HeaderItem[] items = new HeaderItem[selection2.length]; items = selection2; HeaderItemDNDManager.getInstance().setHeaderItemList(items);", "target": 0}
{"idx": 22443, "func": "Write boundary end marker", "target": 0}
{"idx": 22444, "func": "regular expression used to match against embedded resource URLs", "target": 0}
{"idx": 22445, "func": "login and get # of messages on server", "target": 0}
{"idx": 22446, "func": "line 530", "target": 0}
{"idx": 22447, "func": "train message as ham", "target": 0}
{"idx": 22448, "func": "unless this is the first time, increment the line number", "target": 0}
{"idx": 22449, "func": "TODO: This probably isn't the best hack, but it works until we can have different root frame setup for 1.9 easily.", "target": 1}
{"idx": 22450, "func": "//information about all columns/formulas in class hierarchy", "target": 0}
{"idx": 22451, "func": "don't attempt to coerce to array, just wrap and return", "target": 0}
{"idx": 22452, "func": "//add -tsa operations if declared", "target": 0}
{"idx": 22453, "func": "add last recently used list _before_ exit menu", "target": 0}
{"idx": 22454, "func": "//{{{ getStandardRuleSet() method", "target": 0}
{"idx": 22455, "func": "fixed width", "target": 0}
{"idx": 22456, "func": "// actions.get(SQLFilterAction.class).setEnabled(false);", "target": 0}
{"idx": 22457, "func": "20030515, kpo '\\n' appended", "target": 0}
{"idx": 22458, "func": "TODO: This code appears to be designed to jump to the diagram containing the contents of the package that was double clicked but it looks like it's always searching for the name \"main\" instead of the package name. TODO: But in any case, it should be delegating this work to to something that knows about the diagrams and they contents -tfm", "target": 1}
{"idx": 22459, "func": "i18n[SQLScriptPreferencesPanel.qualifyCheckboxLabel=Qualify table names in scripts with schema]", "target": 0}
{"idx": 22460, "func": "set name of column", "target": 0}
{"idx": 22461, "func": "type = VARIABLE; this.varName = varName; this.nameSpace = nameSpace;", "target": 0}
{"idx": 22462, "func": "must match the default value of Ant#inheritAll", "target": 0}
{"idx": 22463, "func": "We always want to override the HTTPS scheme", "target": 0}
{"idx": 22464, "func": "Only accept COPY or MOVE gestures (ie LINK is not supported)", "target": 0}
{"idx": 22465, "func": "Creates a UML model element of the given type. This only works for UML elements. If a diagram contains elements of another type then it is the responsibility of the diagram manage those items and not call this method. It also only works for UML model elements that are represented in diagrams by a node. @param elementType the type of model element to build @return the model element TODO: This needs an extra parameter to specify the model/extent where the new element should be created.", "target": 1}
{"idx": 22466, "func": "zero args, no block; load NULL_BLOCK", "target": 0}
{"idx": 22467, "func": "end fix by rfuller", "target": 0}
{"idx": 22468, "func": "TODO : this really needs to be delayed unitl after we definitively know the operand node type; where this is currently a problem is parameters for which where we cannot unequivocally resolve an expected type", "target": 1}
{"idx": 22469, "func": "This array really shouldn't be here. Again, for historical purposes it is. <p>FIXME: This array should be in a private or package private location, since it could be modified by malicious code.</p>", "target": 1}
{"idx": 22470, "func": "The date format is using a - format since 1.12.9 so we have: 1.12.9-: 'date: YYYY/mm/dd HH:mm:ss; author: name;' 1.12.9+: 'date: YYYY-mm-dd HH:mm:ss Z; author: name'", "target": 0}
{"idx": 22471, "func": "TODO: Not sure the semantics are an exact match here between UML 1.4 Aggregate and UML 2.x Shared.", "target": 1}
{"idx": 22472, "func": "attachment controller doesn't support copy-operation", "target": 0}
{"idx": 22473, "func": "TODO - should this be done when the client is created? If so, then the details need to be added as part of HttpClientKey", "target": 1}
{"idx": 22474, "func": "delete directory recursivly", "target": 0}
{"idx": 22475, "func": "FIXME: this attribute is not used - deprecate?", "target": 1}
{"idx": 22476, "func": "two different root folders -> get inputstream from source-folder and add it to -> destination-folder as inputstream -----> moving of raw message source (works also for copying from local to IMAP folders, etc.", "target": 0}
{"idx": 22477, "func": "////////////////////////////////////////////////////////////////////////test timeline translations //////////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 22478, "func": "e.g. not yet started", "target": 0}
{"idx": 22479, "func": "i18n[generalSessionPropertiesPanel.metaData=Meta Data:]", "target": 0}
{"idx": 22480, "func": "and a little shorter", "target": 0}
{"idx": 22481, "func": "Fill 2 of value (byte) -19 Fill 6 of value (byte) -87", "target": 0}
{"idx": 22482, "func": "//i18n[syntax.functions=Functions]", "target": 0}
{"idx": 22483, "func": "$: argv", "target": 0}
{"idx": 22484, "func": "Non word character selection behavior", "target": 0}
{"idx": 22485, "func": "Numeric-ids for token-ids", "target": 0}
{"idx": 22486, "func": "make sure localDir exists, create it if it doesn't", "target": 0}
{"idx": 22487, "func": "@see java.io.InputStream#close()", "target": 0}
{"idx": 22488, "func": "all precision numebers printed", "target": 0}
{"idx": 22489, "func": "i18n[popupeditableIoPanel.importError2=Import Error]", "target": 0}
{"idx": 22490, "func": "Can we use the proxy mechanism to cast a bsh.This to the correct interface?", "target": 1}
{"idx": 22491, "func": "//OUTLINE PAINT /////////////////////////////////////////////////////////", "target": 0}
{"idx": 22492, "func": "calculate the maximum allowed candle width from the axis...", "target": 0}
{"idx": 22493, "func": "index tracks the position in the char array", "target": 0}
{"idx": 22494, "func": "//We can use the Java way to maximize the window", "target": 0}
{"idx": 22495, "func": "Note I'm using \"!=\" to see if we got a new object back from the apply method.", "target": 0}
{"idx": 22496, "func": "Determine what day of week the first day of the month falls on. It's too bad we have to resort to this hack; the Java API provides no means of doing this any other way.", "target": 0}
{"idx": 22497, "func": "case MouseEvent.MOUSE_ENTERED: toolTipInitialDelay = ttm.getInitialDelay(); toolTipReshowDelay = ttm.getReshowDelay(); ttm.setInitialDelay(200); ttm.setReshowDelay(0); super.processMouseEvent(evt); break; case MouseEvent.MOUSE_EXITED: ttm.setInitialDelay(toolTipInitialDelay); ttm.setReshowDelay(toolTipReshowDelay); super.processMouseEvent(evt); break;", "target": 0}
{"idx": 22498, "func": "setGradientPaintTransformer()", "target": 0}
{"idx": 22499, "func": "nodePath.add(selectedNode.getName());", "target": 0}
{"idx": 22500, "func": "If there is an outgoing association => no problem", "target": 0}
{"idx": 22501, "func": "Correlated subqueries create 'special' implied from nodes because correlated subselects can't use an ANSI-style join", "target": 0}
{"idx": 22502, "func": "item should not be equal to a newly created item or null", "target": 0}
{"idx": 22503, "func": "TODO: This creates a dependency on the Critics subsystem. Instead that subsystem should register its desired menus and actions.", "target": 1}
{"idx": 22504, "func": "line 1269", "target": 0}
{"idx": 22505, "func": "//get the list of websphere jar entries", "target": 0}
{"idx": 22506, "func": "provide public visibility", "target": 1}
{"idx": 22507, "func": "TODO: Hook this creating of a new resource in to someplace more more appropriate (perhaps createModel() ?) Better yet add a new method to Model API to create a new top level project/model/xmi file so we don't depend on side effects", "target": 1}
{"idx": 22508, "func": "login failed?", "target": 0}
{"idx": 22509, "func": "customized shortcut --> CUSTOM", "target": 0}
{"idx": 22510, "func": "Offset in source text where match was tried. This is zero-based; the actual position in the source text is given by (offset + anchor).", "target": 0}
{"idx": 22511, "func": "Setup DnD for the text and attachment list control.", "target": 0}
{"idx": 22512, "func": "i18n[I18n.locales=Locales]", "target": 0}
{"idx": 22513, "func": "Start login procedure", "target": 0}
{"idx": 22514, "func": "Cancel", "target": 0}
{"idx": 22515, "func": "///////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 22516, "func": "handle primitive widening conversions - JLS 5.1.2", "target": 0}
{"idx": 22517, "func": "setBorder(selectedBorder);", "target": 0}
{"idx": 22518, "func": "chart title data no legend tooltips no URL generation", "target": 0}
{"idx": 22519, "func": "//I suppose?", "target": 1}
{"idx": 22520, "func": "i18n[dataTypeClob.typeClob=CLOB (SQL type 2005)]", "target": 0}
{"idx": 22521, "func": "no receiver for singleton class", "target": 0}
{"idx": 22522, "func": "TODO: replace this recursive function by a loop like in getRoot:", "target": 1}
{"idx": 22523, "func": "does not handle arrays (thats ok, cos they can't be lazy) or newly instantiated collections, so we can do the cast", "target": 0}
{"idx": 22524, "func": "Logger to use during initialization and script run", "target": 0}
{"idx": 22525, "func": "A window that displays an exception to the user if we can't handle it in any other way. TODO: This has been partly converted to be a generic error dialog rather than something specific to exceptions. This should be renamed when that process is complete.", "target": 1}
{"idx": 22526, "func": "icon (we can't use the setIcon-method this time, as it relies on the border being set)", "target": 0}
{"idx": 22527, "func": "Flags for reading literals. //", "target": 0}
{"idx": 22528, "func": "Note: this should really just throw NoSuchFieldException... need to change related signatures and code.", "target": 1}
{"idx": 22529, "func": "we needed to get this far even for invisible items, to ensure that seriesPath updates happened, but now there is nothing more we need to do for non-visible items...", "target": 0}
{"idx": 22530, "func": "@see org.argouml.model.ModelImplementation#getActivityGraphsFactory()", "target": 0}
{"idx": 22531, "func": "Folder to store user settings.", "target": 0}
{"idx": 22532, "func": "//{{{ removeFromSelection() method", "target": 0}
{"idx": 22533, "func": "Don't let the input field shrink too much", "target": 0}
{"idx": 22534, "func": "i18n[DBUtil.info.executequery=executeQuery: Running SQL:\\n '{0}']", "target": 0}
{"idx": 22535, "func": "TODO : not sure this is correct, could not find docs on how to do this.", "target": 1}
{"idx": 22536, "func": "MClassifierRole", "target": 0}
{"idx": 22537, "func": "protected void layoutComponents() { setLayout(new BorderLayout()); leftMainPanel = new JPanel(); leftMainPanel.setLayout(new BorderLayout()); JPanel taskPanel = new JPanel(); taskPanel.setLayout(new BorderLayout()); Border border = getDefaultBorder(); //Border margin = new EmptyBorder(0, 0, 0, 2); taskPanel.setBorder(new CompoundBorder(border, margin)); taskPanel.add(taskButton, BorderLayout.CENTER); leftMainPanel.add(taskPanel, BorderLayout.WEST); JPanel labelPanel = new JPanel(); labelPanel.setLayout(new BorderLayout()); margin = new EmptyBorder(0, 10, 0, 10); labelPanel.setBorder(new CompoundBorder(border, margin)); margin = new EmptyBorder(0, 0, 0, 2); labelPanel.add(label, BorderLayout.CENTER); leftMainPanel.add(labelPanel, BorderLayout.CENTER); add(leftMainPanel, BorderLayout.CENTER); mainRightPanel = new JPanel(); mainRightPanel.setLayout(new BorderLayout()); JPanel progressPanel = new JPanel(); progressPanel.setLayout(new BorderLayout()); progressPanel.setBorder(new CompoundBorder(border, margin)); progressPanel.add(progressBar, BorderLayout.CENTER); JPanel rightPanel = new JPanel(); rightPanel.setLayout(new BorderLayout()); rightPanel.add(progressPanel, BorderLayout.CENTER); JPanel onlinePanel = new JPanel(); onlinePanel.setLayout(new BorderLayout()); onlinePanel.setBorder(new CompoundBorder(border, margin)); onlinePanel.add(onlineButton, BorderLayout.CENTER); rightPanel.add(onlinePanel, BorderLayout.EAST); add(rightPanel, BorderLayout.EAST); } public Border getDefaultBorder() { return UIManager.getBorder(\"TableHeader.cellBorder\"); }", "target": 0}
{"idx": 22538, "func": "If you are ever unlucky/improbable enough to get a stack overflow whilst sorting, increase the following constant and try again. In practice I have never seen the stack go above 27 elems, so the following limit seems very generous.", "target": 0}
{"idx": 22539, "func": "Checks whether the expression starts with \".\".", "target": 0}
{"idx": 22540, "func": "default : get first connector", "target": 0}
{"idx": 22541, "func": "uber-ThreadKill catcher, since it should always just mean \"be dead\"", "target": 0}
{"idx": 22542, "func": "If filename does not match the To attribute of the mapper then filter it out of the files we are considering", "target": 0}
{"idx": 22543, "func": "ignore; we won't use invokedynamic", "target": 0}
{"idx": 22544, "func": "Fill 2 of value (byte) -19 Fill 3 of value (byte) 33 Fill 2 of value (byte) -19 Fill 3 of value (byte) 33 Fill 3 of value (byte) -19 Fill 3 of value (byte) 33 Fill 8 of value (byte) -19", "target": 0}
{"idx": 22545, "func": "<Thread,Task>", "target": 0}
{"idx": 22546, "func": "TODO: What other non-ModelElement types do we need to handle here?", "target": 1}
{"idx": 22547, "func": "on cygwin, our current directory can be a UNC; assume user.dir is absolute or all hell breaks loose...", "target": 0}
{"idx": 22548, "func": "Reset the background to the colour that the current Look and Feel uses for internal frames.", "target": 0}
{"idx": 22549, "func": "\"Other\" types are treated as Strings internally in SQuirreL.", "target": 0}
{"idx": 22550, "func": "It is the sub sampler of the transaction that will be sampled", "target": 0}
{"idx": 22551, "func": "//{{{ getIgnoreCase() method", "target": 0}
{"idx": 22552, "func": "//{{{ getCellRenderer() method", "target": 0}
{"idx": 22553, "func": "s1 =", "target": 0}
{"idx": 22554, "func": "only use the first selected folder", "target": 0}
{"idx": 22555, "func": "End of method convertAndSavemessage", "target": 0}
{"idx": 22556, "func": "how long we had to wait (nanoSeconds)", "target": 0}
{"idx": 22557, "func": "add the listeners to the newOwner", "target": 0}
{"idx": 22558, "func": "TODO: sort the list.", "target": 1}
{"idx": 22559, "func": "Search again", "target": 0}
{"idx": 22560, "func": "Create block for this iter node FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes", "target": 1}
{"idx": 22561, "func": "//implements java.io.Serialization", "target": 0}
{"idx": 22562, "func": "This is null as until the first stereotype declaration is seen. After that it is non-null.", "target": 0}
{"idx": 22563, "func": "//{{{ isDockableWindowVisible() method", "target": 0}
{"idx": 22564, "func": "//{{{ RingListModel class", "target": 0}
{"idx": 22565, "func": "TestBeanHelper.prepare() is OK", "target": 0}
{"idx": 22566, "func": "this is a dirty hack and it relies on the fact that updates for parents are sent before updates for the changed nodes themselves (if this was not the case, the browser wouldn't be updated properly on delete, etc). to avoid causing '> 1 request' errors, don't reload directory if request already active", "target": 1}
{"idx": 22567, "func": "share the setup for testing the depend task", "target": 0}
{"idx": 22568, "func": "line 362", "target": 0}
{"idx": 22569, "func": "Crazy numbering scheme at work here. Here's how the handle numbers are laid out. Values 0-7 are defined by GEF and go left to right, top to bottom (ie not clockwise or counterclockwise). Values 10-14 zigzag North, South, West, East, Southwest. If you can correctly guess where 15 will go, you should buy a lottery ticket immediately. <pre> 10 0-------1-------2 | | 12 3 4 13 | | 14 5-------6-------7 11 </pre>", "target": 0}
{"idx": 22570, "func": "We only check the length of the result. Comparing the actual result (out.toByteArray==original) will usually fail, because the order of the properties within each test element may change. Comparing the lengths should be enough to detect most problem cases...", "target": 0}
{"idx": 22571, "func": "process eStructuralFeatures for association end(Role) //", "target": 0}
{"idx": 22572, "func": "add new element", "target": 0}
{"idx": 22573, "func": "default srcDir to basedir", "target": 0}
{"idx": 22574, "func": "not the requested type", "target": 0}
{"idx": 22575, "func": "i18n[UpdateManagerDialog.portLabel=Port:]", "target": 0}
{"idx": 22576, "func": "if \"automatically apply filter\" is selected & there are new messages", "target": 0}
{"idx": 22577, "func": "if element is an AssociationEnd use the namespace of containing association //", "target": 0}
{"idx": 22578, "func": "this DataType does not limit the data read during the initial load of the table, so there is no need to re-read the complete data later", "target": 0}
{"idx": 22579, "func": "== S+", "target": 0}
{"idx": 22580, "func": "//intern variable which is used for text replace purposes", "target": 0}
{"idx": 22581, "func": "//TODO i18n: GEF needs to pass us back the description of what is being done.", "target": 1}
{"idx": 22582, "func": "\"in\" is the default", "target": 0}
{"idx": 22583, "func": "<String,String>", "target": 0}
{"idx": 22584, "func": "//ListChangeImpl", "target": 0}
{"idx": 22585, "func": "line 509", "target": 0}
{"idx": 22586, "func": "updates max locals", "target": 0}
{"idx": 22587, "func": "//{{{ TextAreaPainter constructor", "target": 0}
{"idx": 22588, "func": "don't filter AssertionFailure", "target": 0}
{"idx": 22589, "func": "Allow testcode access to the settings", "target": 0}
{"idx": 22590, "func": "If a message has a name and a named operation and a named script with parameters, then show the script:", "target": 0}
{"idx": 22591, "func": "//blank name $NON-NLS-1$", "target": 0}
{"idx": 22592, "func": "skip catch block", "target": 0}
{"idx": 22593, "func": "look at lower and upper bounds...", "target": 0}
{"idx": 22594, "func": "type may be null because it wasn't set", "target": 0}
{"idx": 22595, "func": "Secondary Metal L&F font", "target": 0}
{"idx": 22596, "func": "getAddForeignKeyConstraintSQL", "target": 0}
{"idx": 22597, "func": "model should contain the data", "target": 0}
{"idx": 22598, "func": "ignore this error for now", "target": 0}
{"idx": 22599, "func": "//{{{ getLeftDockingArea() method", "target": 0}
{"idx": 22600, "func": "Give all generator adapters the chance to do setup work. //", "target": 0}
{"idx": 22601, "func": "transactions marked for rollback-only cause some TM impls to throw exceptions", "target": 0}
{"idx": 22602, "func": "Don't hold the JBC node lock throughout the tx, as that prevents reads and other updates", "target": 0}
{"idx": 22603, "func": "i18n[StringFunctionsTab.hint=Show all the string functions available in DBMS]", "target": 0}
{"idx": 22604, "func": "need to close files and perhaps rename output", "target": 0}
{"idx": 22605, "func": "//removeCommand = RemoveCommand.create(domain, mappingRoot, mappingRoot.ePackageMapping().getMapping_Nested(), mappingRoot.getNested());", "target": 0}
{"idx": 22606, "func": "Either resultTabToReplace or _stickyTab must be not null here", "target": 0}
{"idx": 22607, "func": "TODO: really should be a separate class", "target": 1}
{"idx": 22608, "func": "//{{{ Handler constructor", "target": 0}
{"idx": 22609, "func": "check independence", "target": 0}
{"idx": 22610, "func": "//TODO: handle the case of a foreign key to something other than the pk", "target": 1}
{"idx": 22611, "func": "ensure policy is picked up", "target": 0}
{"idx": 22612, "func": "line 1519", "target": 0}
{"idx": 22613, "func": "returns false if the file did not contain the terminator", "target": 0}
{"idx": 22614, "func": "//Overrides superclass method", "target": 0}
{"idx": 22615, "func": "//TODO: never reached, since getTypeName() actually throws an exception!", "target": 1}
{"idx": 22616, "func": "where the name contains <>", "target": 0}
{"idx": 22617, "func": "Are any other references held ? Can we 'close' the loader so it removes the locks on jars ? a new one will be created.", "target": 0}
{"idx": 22618, "func": "If the list is empty, we need to add all the objects, otherwise, the reference is bidirectional and the list is at least partially populated. //", "target": 0}
{"idx": 22619, "func": "if path startsWith \"/\" -> skip", "target": 0}
{"idx": 22620, "func": "we suppress shadow generation, because PDF is a vector format and the shadow effect is applied via bitmap effects...", "target": 0}
{"idx": 22621, "func": "name and params", "target": 0}
{"idx": 22622, "func": "It is a UML element that is not a ModelElement", "target": 0}
{"idx": 22623, "func": "//last 2 bits should be zero", "target": 0}
{"idx": 22624, "func": "i18n[sqlval.settingsAnon=Anonymous]", "target": 0}
{"idx": 22625, "func": "TODO: We need to be more specific here about what to build", "target": 1}
{"idx": 22626, "func": "clear the point vectors", "target": 0}
{"idx": 22627, "func": "positiveItemLabelFallbackPosition", "target": 0}
{"idx": 22628, "func": "generate constants initialization code", "target": 0}
{"idx": 22629, "func": "Start with a little cheat. Most of the time, the white space will fall within the current read buffer; if not, then fall through.", "target": 0}
{"idx": 22630, "func": "// coll.add(new ScriptProcedureAction(app, _resources, this, _userSettingsFolder)); // coll.add(new RefreshRepositoryAction(app, _resources, this, _userSettingsFolder));", "target": 0}
{"idx": 22631, "func": "line 1067", "target": 0}
{"idx": 22632, "func": "End of method createAttachmentListFromHeader", "target": 0}
{"idx": 22633, "func": "//its an interface so we can't really tell anything...", "target": 0}
{"idx": 22634, "func": "2", "target": 0}
{"idx": 22635, "func": "//context.unbind(boundName);", "target": 0}
{"idx": 22636, "func": "//{{{ isTemporary() method", "target": 0}
{"idx": 22637, "func": "types can probably contain operations, but we should not nag at them not having any.", "target": 0}
{"idx": 22638, "func": "Always put the model at the top", "target": 0}
{"idx": 22639, "func": "CAPA not supported", "target": 0}
{"idx": 22640, "func": "only called by FolderFactory", "target": 0}
{"idx": 22641, "func": "//chartBackgroundPaint;", "target": 0}
{"idx": 22642, "func": "Constructor for GUI tests", "target": 0}
{"idx": 22643, "func": "Don't overstrike if we're on the end of the line", "target": 0}
{"idx": 22644, "func": "register for extension points:", "target": 0}
{"idx": 22645, "func": "Create the panels for the regexp tab", "target": 0}
{"idx": 22646, "func": "Obtain a value of the appropriate type for this property.", "target": 0}
{"idx": 22647, "func": "//{{{ parseColor() method", "target": 0}
{"idx": 22648, "func": "line 1808", "target": 0}
{"idx": 22649, "func": "Cookies again ignored", "target": 0}
{"idx": 22650, "func": "i18n[graph.addChildTables=Add child tables]", "target": 0}
{"idx": 22651, "func": "private", "target": 0}
{"idx": 22652, "func": "This ensures that these useless state variables at least reflect the right value. //", "target": 0}
{"idx": 22653, "func": "//private String propertyName;", "target": 0}
{"idx": 22654, "func": "If there is no root object, we're dealing with an EAttribute feature instead of an EReference feature. So create an instance of simple any type and prepare it to handle the text content. //", "target": 0}
{"idx": 22655, "func": "this returns false if initial sanity checks (if the file is a directory, etc) fail", "target": 0}
{"idx": 22656, "func": "This should be the same as the logic in ResourceImpl.getEObject(String). //", "target": 0}
{"idx": 22657, "func": "TODO handle situation when ASTJNode is removed (compilationUnit is null)", "target": 1}
{"idx": 22658, "func": "Generate the fields", "target": 0}
{"idx": 22659, "func": "Create a change event for the corresponding property", "target": 0}
{"idx": 22660, "func": "if the node is less than 1 line long, but its contents is replaced by multiple lines, comment out each line in it", "target": 0}
{"idx": 22661, "func": "Process XML attributes", "target": 0}
{"idx": 22662, "func": "Ensure that an external entity resolves as expected Using an XMLCatalog: Transform an XML file that contains a reference to a _second_ XML file via the document() function. The _second_ XML file refers to an entity. The entity is listed in the XMLCatalog pointing to a different file. Stuff result into the property: val4 //", "target": 0}
{"idx": 22663, "func": "if message was removed from JTable", "target": 0}
{"idx": 22664, "func": "No need to keep track of Bcc'd addresses", "target": 0}
{"idx": 22665, "func": "Test sending data as ISO-8859-1, with values that need to be urlencoded", "target": 0}
{"idx": 22666, "func": "fonts = getToolkit().getFontList();", "target": 0}
{"idx": 22667, "func": "from CommandlineParser", "target": 0}
{"idx": 22668, "func": "----------- Public methods with a default implementation ----------", "target": 0}
{"idx": 22669, "func": "Event anEvent = (Event) session .createCriteria(Event.class).setFetchMode(\"participants\", FetchMode.JOIN) .add( Expression.eq(\"id\", eventId) ) .uniqueResult(); Eager fetch the colleciton so we can use it detached", "target": 0}
{"idx": 22670, "func": "//create task ok, set this task as the default one", "target": 0}
{"idx": 22671, "func": "remove all the series from the collection and notify listeners.", "target": 0}
{"idx": 22672, "func": "kjc don't have bootclasspath option.", "target": 0}
{"idx": 22673, "func": "Null interpreter and callstack references. class only resolution should not require them.", "target": 0}
{"idx": 22674, "func": "the ids are fully resolved, so compare them with isDirty(), not isModified()", "target": 0}
{"idx": 22675, "func": "skip if account information is not available", "target": 0}
{"idx": 22676, "func": "check retrieve value by key", "target": 0}
{"idx": 22677, "func": "---- workAddressLabel ----", "target": 0}
{"idx": 22678, "func": "Extend, Include, UseCaseInstance & ExtensionPoint not implemented", "target": 0}
{"idx": 22679, "func": "//TODO: two hashmap lookups here is one too many...", "target": 1}
{"idx": 22680, "func": "ModelElement is abstract, so no create tests TODO: Add any other relevant tests", "target": 1}
{"idx": 22681, "func": "check retrieve value by index", "target": 0}
{"idx": 22682, "func": "get array of message UIDs", "target": 0}
{"idx": 22683, "func": "For the case of dynamic-update=\"true\", we need to generate the UPDATE SQL", "target": 0}
{"idx": 22684, "func": "First sort so that Events from one folder stick together", "target": 0}
{"idx": 22685, "func": "//{{{ done() method", "target": 0}
{"idx": 22686, "func": "user made a false start", "target": 0}
{"idx": 22687, "func": "Tabbed results: fill table //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$", "target": 0}
{"idx": 22688, "func": "todo : again, how should this work for non-pojo entities?", "target": 1}
{"idx": 22689, "func": "(non-Javadoc) @see org.apache.jmeter.protocol.http.sampler.HTTPSamplerBase#testIterationStart(org.apache.jmeter.engine.event.LoopIterationEvent)", "target": 0}
{"idx": 22690, "func": "// Border border = new CompoundBorder(BorderFactory.createEmptyBorder(2, // 4, 2, 4), border1);", "target": 0}
{"idx": 22691, "func": "\"-Dstupid\",\"-c\"", "target": 0}
{"idx": 22692, "func": "Scan backwards, trying to find a bracket", "target": 0}
{"idx": 22693, "func": "Does this instruction have side effects as a result of its operation This information is used in optimization phases to impact dead code elimination and other optimization passes", "target": 0}
{"idx": 22694, "func": "i18n[DialectUtils.columnNullUnsupported={0} doesn''t support altering a column's nullable attribute]", "target": 0}
{"idx": 22695, "func": "TODO: make the \"magic numbers\" configurable", "target": 1}
{"idx": 22696, "func": "generation count for O(1) clears", "target": 0}
{"idx": 22697, "func": "@see org.argouml.model.UmlHelper#deleteCollection(java.util.Collection)", "target": 0}
{"idx": 22698, "func": "The feature name is extracted lower cased. //", "target": 0}
{"idx": 22699, "func": "DocType docType = factory .docType(\"iCalendar\", \"-//IETF//DTD XCAL/iCalendar XML//EN\", \"http://www.ietf.org/internet-drafts/draft-hare-xcalendar-01.txt\"); doc.setDocType(docType);", "target": 0}
{"idx": 22700, "func": "hand file output stream to DataType object for export Also, handle File IO errors here so that DataType objects do not have to.", "target": 0}
{"idx": 22701, "func": "Temporary start private static final Color[] COLOR_ARRAY = { Color.RED, Color.BLUE, Color.CYAN, Color.YELLOW, Color.GREEN}; private int nextColor = 0; Temporary end", "target": 0}
{"idx": 22702, "func": "The line below is a hack: the system id must an URI, but it is not cleat to get the URI of an resource, so just set the name of the resource as a system id", "target": 1}
{"idx": 22703, "func": "Not exposed by filetest, but so similiar in nature that it is stored here", "target": 0}
{"idx": 22704, "func": "create new", "target": 0}
{"idx": 22705, "func": "keep d even or odd, just like the line width:", "target": 0}
{"idx": 22706, "func": "Lastline", "target": 0}
{"idx": 22707, "func": "TODO: The below is not strictly correct, but should cover the case we deal with. Using a real XML parser would be better. Look for XML document has just a single root element", "target": 1}
{"idx": 22708, "func": "i18n[DumpApplicationAction.titleSuccess=Dump successful]", "target": 0}
{"idx": 22709, "func": "Set text, possibly with a mnemonic if defined using &", "target": 0}
{"idx": 22710, "func": "zipfile comment length", "target": 0}
{"idx": 22711, "func": "rangeCrosshairStroke", "target": 0}
{"idx": 22712, "func": "Check for a parameter entity.", "target": 0}
{"idx": 22713, "func": "log.warn(\"Only for use in unit testing\");", "target": 0}
{"idx": 22714, "func": "Number end =", "target": 0}
{"idx": 22715, "func": "Notify the FROM element that it is being referenced by the select.", "target": 0}
{"idx": 22716, "func": "Add Mark Characters", "target": 0}
{"idx": 22717, "func": "dial background paint", "target": 0}
{"idx": 22718, "func": "e.g unbind", "target": 0}
{"idx": 22719, "func": "mainPanel.add(north, BorderLayout.NORTH);", "target": 0}
{"idx": 22720, "func": "If we have <tt>not-found=\"ignore\"</tt> association mapped to a formula, we always need to dirty check it, so we can update the second-level cache", "target": 0}
{"idx": 22721, "func": "clear name resolvers... don't know if this is necessary.", "target": 1}
{"idx": 22722, "func": "Expensive, so do once", "target": 0}
{"idx": 22723, "func": "append extra dimensions if any", "target": 0}
{"idx": 22724, "func": "TODO: Check this result...", "target": 1}
{"idx": 22725, "func": "//TODO: proxies!", "target": 1}
{"idx": 22726, "func": "if found as imported also cache it", "target": 0}
{"idx": 22727, "func": "Set Response code of transaction", "target": 0}
{"idx": 22728, "func": "//$NON-NLS-1", "target": 0}
{"idx": 22729, "func": "Add the new file at the start of the list", "target": 0}
{"idx": 22730, "func": "if it doesn't exist, it will get created anyway, don't bother with any up-to-date checks.", "target": 0}
{"idx": 22731, "func": "locale should not matter here", "target": 0}
{"idx": 22732, "func": "JDK 1.4 adds methods to obtain a drive letter label and list the desktop on Windows", "target": 0}
{"idx": 22733, "func": "add filter criteria", "target": 0}
{"idx": 22734, "func": "add all converted fields after the last final field that is used in initializers of the converted fields", "target": 0}
{"idx": 22735, "func": "//keep the existing version number in the case of replicate!", "target": 0}
{"idx": 22736, "func": "compare if item starts with str", "target": 0}
{"idx": 22737, "func": "move", "target": 0}
{"idx": 22738, "func": "//{{{ removeFromBus() method", "target": 0}
{"idx": 22739, "func": "attribute set.", "target": 0}
{"idx": 22740, "func": "TODO: no java stringity", "target": 1}
{"idx": 22741, "func": "//{{{ _init() method", "target": 0}
{"idx": 22742, "func": "Testing: Works Ok.", "target": 0}
{"idx": 22743, "func": "check if calendar item is tagged", "target": 0}
{"idx": 22744, "func": "If the strings differed only in non-primary characteristics at some point (case, accent, etc) pick an arbitrary, but stable, collating order.", "target": 0}
{"idx": 22745, "func": "Replace this is Cocoa API calls later", "target": 1}
{"idx": 22746, "func": "uncompressed size", "target": 0}
{"idx": 22747, "func": "This is for backwards compatibility, since the constructor may have been overridden before it was expected to set actionDelegate. //", "target": 0}
{"idx": 22748, "func": "because its preferred size can be quite wide, we don't want it to make the browser way too big, so set the preferred width to 0.", "target": 0}
{"idx": 22749, "func": "if debug level is enabled, then log the password, otherwise mask it", "target": 0}
{"idx": 22750, "func": "2. the profile configuration, holding noneditable applied profiles", "target": 0}
{"idx": 22751, "func": "Performance testing parameters", "target": 0}
{"idx": 22752, "func": "TODO: complete this implementation - tfm", "target": 1}
{"idx": 22753, "func": "//we can reuse it for each row", "target": 0}
{"idx": 22754, "func": "fall through to normal processing of this key stroke", "target": 0}
{"idx": 22755, "func": "every year?", "target": 0}
{"idx": 22756, "func": "javac", "target": 0}
{"idx": 22757, "func": "//now tie it all together", "target": 0}
{"idx": 22758, "func": "For a unix ftp server you can set the default mask for all files created.", "target": 0}
{"idx": 22759, "func": "If RAW data and Parameters match we allow switching", "target": 0}
{"idx": 22760, "func": "We need to check canExecute() here in case prepare() went down the \"optimize\" path. //", "target": 0}
{"idx": 22761, "func": "protected RegionRootListener listener;", "target": 0}
{"idx": 22762, "func": "handle three cases by dataset type", "target": 0}
{"idx": 22763, "func": "The try/catch provides backwards compatibility with the old resource key, \"_UI_CreateChild_label\", and should be removed at the next release, when we can expect users to regenerate. //", "target": 0}
{"idx": 22764, "func": "Look for elements directly within the HTTP proxy:", "target": 0}
{"idx": 22765, "func": "//{{{ getLineOfOffset() method", "target": 0}
{"idx": 22766, "func": "FunctionNamePair", "target": 0}
{"idx": 22767, "func": "Update the classifier and hence the raw type as normal. //", "target": 0}
{"idx": 22768, "func": "jump offset GOTO_W", "target": 0}
{"idx": 22769, "func": "get references to selected folder and message", "target": 0}
{"idx": 22770, "func": "$NON-NLS-1$ $NON-NLS-2$", "target": 0}
{"idx": 22771, "func": "Test sending UTF-8 data with ISO-8859-1 content encoding", "target": 0}
{"idx": 22772, "func": "we have the form: trim(trimSource) so we trim leading and trailing spaces EARLY EXIT!!!!", "target": 0}
{"idx": 22773, "func": "//{{{ show() method", "target": 0}
{"idx": 22774, "func": "store account data in properties", "target": 0}
{"idx": 22775, "func": "//GenTypeParameterImpl", "target": 0}
{"idx": 22776, "func": "dummy1 --> dummy2 --> dummy3 --> dummy1", "target": 0}
{"idx": 22777, "func": "delete implementation", "target": 0}
{"idx": 22778, "func": "//{{{ startPlugin() method", "target": 0}
{"idx": 22779, "func": "[recv]", "target": 0}
{"idx": 22780, "func": "and find the Fig:", "target": 0}
{"idx": 22781, "func": "SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode We won't get here for argument receives! So, buildDasgn is called for assignments to block variables within a block. As far as the IR is concerned, this is just a simple copy", "target": 0}
{"idx": 22782, "func": "//Interface changed rebuild jar.", "target": 0}
{"idx": 22783, "func": "we don't want interrupt to try disconnection again", "target": 0}
{"idx": 22784, "func": "We use file test since it is faster than a stat; also euid == uid in Java always", "target": 0}
{"idx": 22785, "func": "TODO: This next line prevent loading a UseCase with a stereotype to grow. Why?", "target": 1}
{"idx": 22786, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getHelpFileName()", "target": 0}
{"idx": 22787, "func": "Never include the \"refid\" attribute as part of the attribute name.", "target": 0}
{"idx": 22788, "func": "XXX what is this for?", "target": 1}
{"idx": 22789, "func": "xp[0] = x + 6; xp[1] = x + 12; xp[2] = x; yp[0] = y - (c.getHeight() / 4); yp[1] = y + (c.getHeight() / 4); yp[2] = y + (c.getHeight() / 4); g2.setColor(Color.white); g2.drawLine(xp[0], yp[0], xp[1], yp[1]); g2.drawLine(xp[1], yp[1], xp[2], yp[2]); g2.setColor(Color.gray); g2.drawLine(xp[2], yp[2], xp[0], yp[0]);", "target": 0}
{"idx": 22790, "func": "Loaded entity instances, by EntityKey", "target": 0}
{"idx": 22791, "func": "we only update changes for events currently", "target": 0}
{"idx": 22792, "func": "// the implementation of the replace all function.", "target": 0}
{"idx": 22793, "func": "for omitted file names //$NON-NLS-1$", "target": 0}
{"idx": 22794, "func": "EnhancedDialog implementation", "target": 0}
{"idx": 22795, "func": "If the source column is DISTINCT and the session is PostgreSQL, try to get the underlying type.", "target": 0}
{"idx": 22796, "func": "//{{{ getMarkerStatusPrompt() method", "target": 0}
{"idx": 22797, "func": "Check workspace exists Launch PCLI listversionedfiles -z -aw Capture output build the command line from what we got the format is", "target": 0}
{"idx": 22798, "func": "//$NON-NLS-1$ Set default SAVE menu item to disabled since the default node that is selected is ROOT, which does not allow items to be inserted.", "target": 0}
{"idx": 22799, "func": "//{{{ invalidateChunksFrom() method", "target": 0}
{"idx": 22800, "func": "end class WizDescription", "target": 0}
{"idx": 22801, "func": "href=\"#\"", "target": 0}
{"idx": 22802, "func": "build the command line from what we got the format is ss CP VSS items [-H] [-I-] [-Y] [-?] as specified in the SS.EXE help", "target": 0}
{"idx": 22803, "func": "Remove bogus Operation", "target": 0}
{"idx": 22804, "func": "return default-account SpamItem instead", "target": 0}
{"idx": 22805, "func": "//////////////////////////////////////////////////////////////convenience methods", "target": 0}
{"idx": 22806, "func": "we have the whole contents of the CLOB", "target": 0}
{"idx": 22807, "func": "Guaranteed to be non-null.", "target": 0}
{"idx": 22808, "func": "------------------------------------------------------------------------ Methods ------------------------------------------------------------------------", "target": 0}
{"idx": 22809, "func": "Pre-create all the core classes potentially referenced during startup", "target": 0}
{"idx": 22810, "func": "keepgenerated", "target": 0}
{"idx": 22811, "func": "//$NON-NLS-1$ //nameLabel.setFont(boldFont);", "target": 0}
{"idx": 22812, "func": "TODO: not visible to the user!", "target": 1}
{"idx": 22813, "func": "no type defined yet", "target": 0}
{"idx": 22814, "func": "If the destination is not a NameSpace, then reject:", "target": 0}
{"idx": 22815, "func": "no mnemonic found - just set the text on the menu item", "target": 0}
{"idx": 22816, "func": "skip '-' in bytes, will add where appropriate", "target": 0}
{"idx": 22817, "func": "JOnAS-specific DD true if the JOnAS convention is used for the DD Directory path of the EJB descriptor EJB descriptor file name Filename appearing before name terminator Filename appearing after the name terminator", "target": 0}
{"idx": 22818, "func": "Save caret positions", "target": 0}
{"idx": 22819, "func": "//{{{ Major actions", "target": 0}
{"idx": 22820, "func": "@see javax.swing.plaf.metal.MetalTheme#getUserTextFont()", "target": 0}
{"idx": 22821, "func": "i18n[sqlval.dbms=DBMS]", "target": 0}
{"idx": 22822, "func": "Join all into a group", "target": 0}
{"idx": 22823, "func": "(non-Javadoc) @see org.columba.mail.imap.IImapServer#setUpdateFlagAction(org.columba.mail.imap.IUpdateFlagAction)", "target": 0}
{"idx": 22824, "func": "Create a set of default parameters from the ones initially created. This allows the defaults to be overridden if necessary from the properties file.", "target": 0}
{"idx": 22825, "func": "<TargetElement>", "target": 0}
{"idx": 22826, "func": "Reply-To headerfield isn't specified, try to use From instead", "target": 0}
{"idx": 22827, "func": "Manage legend placement", "target": 0}
{"idx": 22828, "func": "i18n[ResultTab.cannotedit=This SQL can not be edited.]", "target": 0}
{"idx": 22829, "func": "i18n[TableExportCsvCommand.failedToWriteFile=Failed to write file\\n{0}\\nError message\\n{1}\\nSee last log entry for details.]", "target": 0}
{"idx": 22830, "func": "putJava2IANAMapping(String,String)", "target": 0}
{"idx": 22831, "func": "@see tudresden.ocl.parser.analysis.DepthFirstAdapter#outAEmptyFeatureCallParameters(tudresden.ocl.parser.node.AEmptyFeatureCallParameters)", "target": 0}
{"idx": 22832, "func": "//{{{ mkdir() method", "target": 0}
{"idx": 22833, "func": "draw yOutliers...", "target": 0}
{"idx": 22834, "func": "keyword support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 22835, "func": "XXX - should throw an exception instead?", "target": 1}
{"idx": 22836, "func": "Find all ElementResidences between the class and the component:", "target": 0}
{"idx": 22837, "func": "updates current and max stack sizes only if opcode == NEWARRAY (stack size variation = 0 for BIPUSH or SIPUSH)", "target": 0}
{"idx": 22838, "func": "COLUMN and TABLE should be renamed but it would break the public API", "target": 0}
{"idx": 22839, "func": "get parameters", "target": 0}
{"idx": 22840, "func": "Use valueof when min supported JDK is 1.4 //return Boolean.valueOf(_props[row].required);", "target": 0}
{"idx": 22841, "func": "day of week month day of month time year", "target": 0}
{"idx": 22842, "func": "Tabs to add to the catalog nodes.", "target": 0}
{"idx": 22843, "func": "//yyGindex 152", "target": 0}
{"idx": 22844, "func": "This will happen when a new file is created", "target": 0}
{"idx": 22845, "func": "i18n[AliasInternalFrame.illegalValue=Illegal value of {0} passed for Maintenance type]", "target": 0}
{"idx": 22846, "func": "Remove the header for content-type and content-length, since those values will most likely be incorrect when the sampler performs the multipart request, because the boundary string will change", "target": 0}
{"idx": 22847, "func": "//{{{ getComponent() method", "target": 0}
{"idx": 22848, "func": "TODO: - please add some javadoc - ugly classname also", "target": 1}
{"idx": 22849, "func": "We need to find the stereotype with the name \"create\" and the base class BehavioralFeature in the model. If there is none then we create one and put it there.", "target": 0}
{"idx": 22850, "func": "Inform IH to clear the cache", "target": 0}
{"idx": 22851, "func": "quick exit if the target is up to date", "target": 0}
{"idx": 22852, "func": "ALTER TABLE <tablename> ADD [CONSTRAINT <constraintname>] PRIMARY KEY (<column list>);", "target": 0}
{"idx": 22853, "func": "fake a dataset change event to update axes...", "target": 0}
{"idx": 22854, "func": "PreparedStatementMap is associated to one connection so 2 threads cannot use the same PreparedStatement map at the same time", "target": 0}
{"idx": 22855, "func": "compression method", "target": 0}
{"idx": 22856, "func": "Backwards compatibility forces us to repeat the logic of getResourcesToAdd(FileSet[], ...) here once again.", "target": 0}
{"idx": 22857, "func": "FIXME: This version is faster than the previous, but both suffer from a crucial flaw: It is impossible to create an ObjectSpace with an iterator that doesn't either: a. hold on to objects that might otherwise be collected or b. have no way to guarantee that a call to hasNext() will be correct or that a subsequent call to next() will produce an object. For our purposes, for now, this may be acceptable.", "target": 1}
{"idx": 22858, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getGlobalPreferencePanels()", "target": 0}
{"idx": 22859, "func": "filename length", "target": 0}
{"idx": 22860, "func": "//////////////////////////////////////////////////////////////DocumentListener implementation", "target": 0}
{"idx": 22861, "func": "we should be able to give a dataset an arbitrary index", "target": 0}
{"idx": 22862, "func": "Add new listeners:", "target": 0}
{"idx": 22863, "func": "Fallback method for Java 1.3 or earlier.", "target": 0}
{"idx": 22864, "func": "can't draw anything", "target": 0}
{"idx": 22865, "func": "i18n[dataTypeUnknown.readContentsOnLoad=Read contents when table is first loaded and display as string]", "target": 0}
{"idx": 22866, "func": "load configuraation", "target": 0}
{"idx": 22867, "func": "Here starts the logic for the class definition", "target": 0}
{"idx": 22868, "func": "Note: some interesting things are going on here. 1) We swap instead of push... The primary mode of operation acts like we are in the enclosing namespace... (super must be preserved, etc.) 2) We do not call the body block eval with the namespace override. Instead we allow it to create a second subordinate BlockNameSpace child of the forNameSpace. Variable propogation still works through the chain, but the block's child cleans the state between iteration. (which is correct Java behavior... see forscope4.bsh)", "target": 0}
{"idx": 22869, "func": "nameSpaceChanged() on new variable addition", "target": 0}
{"idx": 22870, "func": "Regression test for HARMONY-3207 current directory", "target": 0}
{"idx": 22871, "func": "try replacing an existing value", "target": 0}
{"idx": 22872, "func": "i18n[oracle.Seconds2=(seconds)]", "target": 0}
{"idx": 22873, "func": "If the current property occurs a second time in the given list of properties, then skip it:", "target": 0}
{"idx": 22874, "func": "not necessarily the case - I'm just curious if we have any components that need to be re-read", "target": 0}
{"idx": 22875, "func": "TODO : absolutely no usages of this constructor form; can it go away?", "target": 1}
{"idx": 22876, "func": "Show triggers for tables", "target": 0}
{"idx": 22877, "func": "for compatibility with older format", "target": 0}
{"idx": 22878, "func": "perform split if there is more than 1 fragment", "target": 0}
{"idx": 22879, "func": "this is such a bad way of doing it, but oh well...", "target": 1}
{"idx": 22880, "func": "Constructor.", "target": 0}
{"idx": 22881, "func": "//{{{ formatSize() method", "target": 0}
{"idx": 22882, "func": "//where fragment must be empty!", "target": 0}
{"idx": 22883, "func": "view clauses", "target": 0}
{"idx": 22884, "func": "Look for a substitution group feature in the classifier's containing package. //", "target": 0}
{"idx": 22885, "func": "load properties and fill missing entries with the global preferences", "target": 0}
{"idx": 22886, "func": "Set up a VSSAdd task", "target": 0}
{"idx": 22887, "func": "if the database is not started, don't do it", "target": 0}
{"idx": 22888, "func": "FormLayout layout = new FormLayout(\"default\", \"default, default\"); IContainer c = getContentPane(); c.setLayout(layout); CellConstraints cc = new CellConstraints(); c.add(createCenterPanel(detailsButton.isSelected()), cc.xy(1, 1)); c.add(bottomPanel, cc.xy(1, 2));", "target": 0}
{"idx": 22889, "func": "Record it for execution. //", "target": 0}
{"idx": 22890, "func": "@see java.util.Collection#removeAll(java.util.Collection)", "target": 0}
{"idx": 22891, "func": "i18n[rowDataInputFrame.data=Data]", "target": 0}
{"idx": 22892, "func": "Remove the object from the collection and add it to the identity list. //", "target": 0}
{"idx": 22893, "func": "Check that calls to getResString use a valid property key name", "target": 0}
{"idx": 22894, "func": "CollectionPropertyMapping processes everything except 'index'.", "target": 0}
{"idx": 22895, "func": "--- Fields --", "target": 0}
{"idx": 22896, "func": "nodes remember from where they were sourced", "target": 0}
{"idx": 22897, "func": "assert that the project's model elements that had a dependency to the UML profile for Java are consistent", "target": 0}
{"idx": 22898, "func": "JRUBY-3568, inherit threadgroup or use default", "target": 0}
{"idx": 22899, "func": "now logic for each optional value", "target": 0}
{"idx": 22900, "func": "after defn of $stderr as the call may produce warnings", "target": 0}
{"idx": 22901, "func": "@see org.argouml.application.events.ArgoGeneratorEventListener#generatorAdded(org.argouml.application.events.ArgoGeneratorEvent)", "target": 0}
{"idx": 22902, "func": "Internal states inside white space inside line comment inside block comment ... inside string constant inside string constant after backslash inside char constant inside char constant after backslash inside identifier slash char after '=' after '>' after '>>' after '>>>' after '<' after '<<' after '+' after '-' after '' after '' after '|' after '%' after '&' after '^' after '!' after '0' integer number octal number double number double number hex number after '.'", "target": 0}
{"idx": 22903, "func": "We do not use getEncoding method of Writer, since that returns the historical name", "target": 0}
{"idx": 22904, "func": "If the property that this comboboxmodel depicts is changed in the UML model, this method will make sure that the changes will be done in the combobox-model equally. <p> TODO: This function is not yet completely written! {@inheritDoc} @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)", "target": 1}
{"idx": 22905, "func": "//{{{ MyFocusTraversalPolicy class", "target": 0}
{"idx": 22906, "func": "(non-Javadoc) @see org.columba.core.gui.frame.focus.FocusOwner#cut()", "target": 0}
{"idx": 22907, "func": "SSS FIXME: Can this ever be null?", "target": 0}
{"idx": 22908, "func": "Can't be changed", "target": 0}
{"idx": 22909, "func": "check if input is at a valid position", "target": 0}
{"idx": 22910, "func": "//}}} //{{{ TERMINATE", "target": 0}
{"idx": 22911, "func": "send indeterminate new value instead of making copy of vector", "target": 0}
{"idx": 22912, "func": "An annotation that allows an image to be placed at some location on an {@link XYPlot}. TODO: implement serialization properly (image is not serializable).", "target": 1}
{"idx": 22913, "func": "worker.setDisplayText( \"Search Result: \" + notDefaultEngineResult.size() + \" messages found in \" + (System.currentTimeMillis() - startTime) + \" ms\");", "target": 0}
{"idx": 22914, "func": "now iterate over all installers and make sure they also have appropriate aliases", "target": 0}
{"idx": 22915, "func": "OR : the arguments must be glued by a OR SearchKey", "target": 0}
{"idx": 22916, "func": "cloned system properties", "target": 0}
{"idx": 22917, "func": "Better behaviour when howLong=0 or lastTime=0", "target": 0}
{"idx": 22918, "func": "use wrapper class for easier handling of references array adapter = new FolderCommandAdapter( (MailFolderCommandReference[]) getReferences()); get array of source references MailFolderCommandReference[] r = adapter.getSourceFolderReferences();", "target": 0}
{"idx": 22919, "func": "i18n[userscript.codeTemplate=Script code template]", "target": 0}
{"idx": 22920, "func": "REVIEW How do we resolve this discrepancy?!", "target": 1}
{"idx": 22921, "func": "This doesn't appear to work for PROGRESS RDBMS //result[i] = DBUtil.getTableCount(con, ti.getSimpleName());", "target": 0}
{"idx": 22922, "func": "Leave buffer in a consistent state if an error occurs", "target": 0}
{"idx": 22923, "func": "i18n[Application.error.writecellselections=Unable to write Cell Import/Export options to persistant storage.]", "target": 0}
{"idx": 22924, "func": "are we saving the whole tree?", "target": 0}
{"idx": 22925, "func": "//The name of the calling client program. //This is optional. If you don't want to give out this info, please enter \"N/A\"", "target": 0}
{"idx": 22926, "func": "---- preferHtmlCheckBox ----", "target": 0}
{"idx": 22927, "func": "//for backward compatibility, allow a set with no not-null //element columns, using all columns in the row locater SQL //TODO: create an implicit not null constraint on all cols?", "target": 1}
{"idx": 22928, "func": "extractors", "target": 0}
{"idx": 22929, "func": "repaint table header", "target": 0}
{"idx": 22930, "func": "we support 3 address types (work/home/other)", "target": 0}
{"idx": 22931, "func": "CLOB cannot be used in WHERE clause", "target": 0}
{"idx": 22932, "func": "Read the attribute type.", "target": 0}
{"idx": 22933, "func": "Hack to deal with Axion AXION_ tables.", "target": 1}
{"idx": 22934, "func": "Can't be done in the general case of federated repositories, but at least get what we can find for the current resource set", "target": 0}
{"idx": 22935, "func": "SSS FIXME: Correct? Where does closure arg come from?", "target": 1}
{"idx": 22936, "func": "//{{{ merge() method", "target": 0}
{"idx": 22937, "func": "//{{{ getLastVisibleLine() method", "target": 0}
{"idx": 22938, "func": "If the destination is not a NameSpace, then abort:", "target": 0}
{"idx": 22939, "func": "Clone all remaining nodes", "target": 0}
{"idx": 22940, "func": "sanity check", "target": 0}
{"idx": 22941, "func": "CHECK", "target": 0}
{"idx": 22942, "func": "This code is needed by EBCDIC and other strange systems. It's a fix for bugs reported in xerces", "target": 0}
{"idx": 22943, "func": "-------------------- Parse method --------------------", "target": 0}
{"idx": 22944, "func": "References may be allowed", "target": 0}
{"idx": 22945, "func": "and its enumerationLiterals", "target": 0}
{"idx": 22946, "func": "Restore the capacity, if there was any. //", "target": 0}
{"idx": 22947, "func": "The encoding used for http headers and control information", "target": 0}
{"idx": 22948, "func": "update view accordingly", "target": 0}
{"idx": 22949, "func": "TODO needs to be synch? Probably not changed after threads have started JMeter Home directory (excludes trailing separator) JMeter bin directory (excludes trailing separator)", "target": 1}
{"idx": 22950, "func": "The stereotype fig already exists.", "target": 0}
{"idx": 22951, "func": "no default renderer available", "target": 0}
{"idx": 22952, "func": "//{{{ getExtendedAttribute() method", "target": 0}
{"idx": 22953, "func": "saved copy of first line for error reports", "target": 0}
{"idx": 22954, "func": "Return the default type for the return parameter of a method. @return a Classifier to use as the default type TODO: This belongs in ProjectSettings. - tfm", "target": 1}
{"idx": 22955, "func": "Eliminate consecutive slashes after the drive spec:", "target": 0}
{"idx": 22956, "func": "Create an instance of the rmic", "target": 0}
{"idx": 22957, "func": "Query plugins for option panes", "target": 0}
{"idx": 22958, "func": "Number alignment", "target": 0}
{"idx": 22959, "func": "hibernate type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 22960, "func": "don't create a unique key, 'cos some databases don't like a UK on nullable columns", "target": 0}
{"idx": 22961, "func": "the entity associated with the current action.", "target": 0}
{"idx": 22962, "func": "LOG.log(Level.FINE, \"OCL FEATURE CALL: \" + subject + \"\"+ type +\"\"+ feature + \"\" + parameters);", "target": 0}
{"idx": 22963, "func": "// public Object getObject(ILocator locator); // public IStructureValue getChild(ILocator locator);", "target": 0}
{"idx": 22964, "func": "add us to new superclass's child classes", "target": 0}
{"idx": 22965, "func": "The following strings are SQL tokens and should therefore not be internationalized No I18N No I18N No I18N No I18N No I18N No I18N", "target": 0}
{"idx": 22966, "func": "remove the remaining _gn vars", "target": 0}
{"idx": 22967, "func": "if the parent is not in target, there is no point on checking the child", "target": 0}
{"idx": 22968, "func": "set the binding's frame's \"previous\" file and line to current, so trace will show who called the block", "target": 0}
{"idx": 22969, "func": "we have a file, read and process it", "target": 0}
{"idx": 22970, "func": "if the implementation classes don;t exist regenerate", "target": 0}
{"idx": 22971, "func": "Use arbitrary dimensions for now.", "target": 0}
{"idx": 22972, "func": "again, CCS did not have such a concept; however a reasonable proximity is to clear the cache. For non-transaction aware caches, we will also do a clear at the end of the transaction", "target": 0}
{"idx": 22973, "func": "save the input for use later", "target": 0}
{"idx": 22974, "func": "c '-' ']' -> '-' is a single-range.", "target": 0}
{"idx": 22975, "func": "we have read ahead, and need to back up", "target": 0}
{"idx": 22976, "func": "//{{{ doWordWrap() method", "target": 0}
{"idx": 22977, "func": "-------------------------------------------------------------------------- Fields for the control flow graph analysis algorithm (used to compute the maximum stack size). A control flow graph contains one node per \"basic block\", and one edge per \"jump\" from one basic block to another. Each node (i.e., each basic block) is represented by the Label object that corresponds to the first instruction of this basic block. Each node also stores the list of it successors in the graph, as a linked list of Edge objects. --------------------------------------------------------------------------", "target": 0}
{"idx": 22978, "func": "drop-down list for renderer", "target": 0}
{"idx": 22979, "func": "End the previous multipart", "target": 0}
{"idx": 22980, "func": "Calculate intermediate values (if needed)", "target": 0}
{"idx": 22981, "func": "Translate to alias and then delegate to wrapped class", "target": 0}
{"idx": 22982, "func": "When this.child.getMaxLength() < 0, this returns minus value", "target": 0}
{"idx": 22983, "func": "//{{{ Scrolling", "target": 0}
{"idx": 22984, "func": "Because CollectionProperty.mergeIn will not prevent adding two properties of the same name, we need to select the first value so that this element's values prevail over defaults provided by configuration elements:", "target": 0}
{"idx": 22985, "func": "rewind our character buffer", "target": 0}
{"idx": 22986, "func": "line 1609", "target": 0}
{"idx": 22987, "func": "calculate the higher and lower Figs", "target": 0}
{"idx": 22988, "func": "//note there is a wierd implementation in the client side", "target": 1}
{"idx": 22989, "func": "Associate sample with file name", "target": 0}
{"idx": 22990, "func": "fill the list with items", "target": 0}
{"idx": 22991, "func": "copyResource", "target": 0}
{"idx": 22992, "func": "i18n[ErrorStream.unexpectedsymbol=this symbol not expected in]", "target": 0}
{"idx": 22993, "func": "First we make modifications to the class, to adapt it to being both a Ruby class and a proxy for a Java type", "target": 0}
{"idx": 22994, "func": "i18n[generalSessionPropertiesPanel.generalSettings=General settings for the current session]", "target": 0}
{"idx": 22995, "func": "we can't draw quadrants without a valid x-axis", "target": 0}
{"idx": 22996, "func": "//{{{ runMacro() method", "target": 0}
{"idx": 22997, "func": "Note: bshmethod needs to re-evaluate the method return type here. This is broken.", "target": 0}
{"idx": 22998, "func": "is the href a valid URL", "target": 0}
{"idx": 22999, "func": "//{{{ loadMacros() method", "target": 0}
{"idx": 23000, "func": "This class depends on each class in the dependency list. For each one of those, add this class into their affected classes list", "target": 0}
{"idx": 23001, "func": "single method, use normal logic", "target": 0}
{"idx": 23002, "func": "build the command line from what we got. the format is cleartool checkin [options...] [viewpath ...] as specified in the CLEARTOOL.EXE help", "target": 0}
{"idx": 23003, "func": "&& !indexIsFormula", "target": 0}
{"idx": 23004, "func": "Low chances to be non numeric, we parse", "target": 0}
{"idx": 23005, "func": "Column list", "target": 0}
{"idx": 23006, "func": "Proxy configuration SSL", "target": 0}
{"idx": 23007, "func": "targets ought to be UML objects or diagrams", "target": 0}
{"idx": 23008, "func": "//get the host of a url", "target": 0}
{"idx": 23009, "func": "Walk up the superpackages, collecting the package names. Because empty packages are ommitted from the GenModel, we need to walk up the EPackages. //", "target": 0}
{"idx": 23010, "func": "-------------------------------------------------------------------------- Conversion to type descriptors --------------------------------------------------------------------------", "target": 0}
{"idx": 23011, "func": "======== scrollPane1 ========", "target": 0}
{"idx": 23012, "func": "Override FigNode implementation to keep setOwner from getting called.", "target": 0}
{"idx": 23013, "func": "TBLRC 01000 - bottom item only", "target": 0}
{"idx": 23014, "func": "is the clone independent", "target": 0}
{"idx": 23015, "func": "//$NON-NLS-1$ //$NON-NLS-1$", "target": 0}
{"idx": 23016, "func": "@see TargetListener#targetAdded(TargetEvent)", "target": 0}
{"idx": 23017, "func": "HHH-2300", "target": 0}
{"idx": 23018, "func": "Create a page for the selection tree view. //", "target": 0}
{"idx": 23019, "func": "setup bottom tabs, first Raw, second Parsed //$NON-NLS-1$ //$NON-NLS-1$", "target": 0}
{"idx": 23020, "func": "//{{{ setEditPane() method", "target": 0}
{"idx": 23021, "func": "Check that the class is actually different from the one that's directly visible to the JETEmitter. //", "target": 0}
{"idx": 23022, "func": "The trySave method results in the save taking place in another thread. If that completes without error the ProjectBrowser.exit() method will be called which will actually exist the system.", "target": 0}
{"idx": 23023, "func": "odd", "target": 0}
{"idx": 23024, "func": "FIXME: add setBasePaint(int, Paint, boolean)?", "target": 0}
{"idx": 23025, "func": "defer null argument checks", "target": 0}
{"idx": 23026, "func": "check adapter", "target": 0}
{"idx": 23027, "func": "Register with the upper most class loader that's able to load the class. //", "target": 0}
{"idx": 23028, "func": "Programming error. Don't continue.", "target": 0}
{"idx": 23029, "func": "TODO I'm concerned that folders will often return 401 or even 403. So should we consider something to exist even though access if unauthorized or forbidden? //", "target": 1}
{"idx": 23030, "func": "i18n[syntax.autoCorrApply=Apply]", "target": 0}
{"idx": 23031, "func": "i18n[mysql.shoeVariables=(MySQL) Show Variables]", "target": 0}
{"idx": 23032, "func": "Set focus to the SQL entry panel.", "target": 0}
{"idx": 23033, "func": "class does exist -> property 'test' == 'true'", "target": 0}
{"idx": 23034, "func": "TODO: Won't our use of PathComparator take care of uniqueness?", "target": 1}
{"idx": 23035, "func": "i18n[EditExtrasAccessor.editextrasPluginNeeded=Quoting is only available with the Edit Extras Plugin.\\nGet the plugin from www.squirrelsql.org. It's free.]", "target": 0}
{"idx": 23036, "func": "//?? Need to associate a panel with an object type somehow.", "target": 1}
{"idx": 23037, "func": "//add(makeTitlePanel(), BorderLayout.NORTH);", "target": 0}
{"idx": 23038, "func": "@see org.argouml.persistence.AbstractFilePersister#getDesc()", "target": 0}
{"idx": 23039, "func": "Add components to the panel: // builder.append(defaultAccountCheckBox, 7); // builder.nextLine();", "target": 0}
{"idx": 23040, "func": "Check if we found a resolution for it. //", "target": 0}
{"idx": 23041, "func": "From PostgreSQL 8.2 documentation: CREATE [ UNIQUE ] INDEX [ CONCURRENTLY ] name ON table [ USING method ] ( { column | ( expression ) } [ opclass ] [, ...] ) [ WITH ( storage_parameter = value [, ... ] ) ] [ TABLESPACE tablespace ] [ WHERE predicate ]", "target": 0}
{"idx": 23042, "func": "in this event we do nothing, only stop drawing the broom.", "target": 0}
{"idx": 23043, "func": "only public methods", "target": 0}
{"idx": 23044, "func": "//}}} //{{{ Left...", "target": 0}
{"idx": 23045, "func": "This Map serves two purposes: - maps names to containers - ensures only one container per file across all threads The key is the concatenation of the file name and the XPath string", "target": 0}
{"idx": 23046, "func": "Set the options", "target": 0}
{"idx": 23047, "func": ";DEVANAGARI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;BENGALI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GURMUKHI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GUJARATI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;ORIYA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TAMIL SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TELUGU SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;KANNADA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;MALAYALAM SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;THAI CHARACTER PHINTHU;Mn;9;ON;;;;;N;THAI VOWEL SIGN PHINTHU;;;; //;TIBETAN MARK HALANTA;Mn;9;ON;;;;;N;TIBETAN VIRAMA;;;;", "target": 0}
{"idx": 23048, "func": "mark as spam /as not spam for each message", "target": 0}
{"idx": 23049, "func": "fillType == TO_UPPER_BOUND", "target": 0}
{"idx": 23050, "func": "joined subclasses", "target": 0}
{"idx": 23051, "func": "Hack: bsh-2.0b5.jar BshScriptEngine implements Compilable but throws \"java.lang.Error: unimplemented\"", "target": 1}
{"idx": 23052, "func": "TODO: allow user to request the system or no parent", "target": 1}
{"idx": 23053, "func": "EHLO not supported -> AUTH not supported", "target": 0}
{"idx": 23054, "func": "//{{{ listDirectory() method", "target": 0}
{"idx": 23055, "func": "Standard expanders.", "target": 0}
{"idx": 23056, "func": "Current line highlight", "target": 0}
{"idx": 23057, "func": "Test sending data as UTF-8", "target": 0}
{"idx": 23058, "func": "TODO: How does the pressed cancel become a java.lang.Exception?", "target": 1}
{"idx": 23059, "func": "calculate plotAreas of all sub-plots, maximum vertical/horizontal axis width/height", "target": 0}
{"idx": 23060, "func": "handle null, which is shown as the special string \"<null>\"", "target": 0}
{"idx": 23061, "func": "check that the password has been set", "target": 0}
{"idx": 23062, "func": "Do the conversion into the object in a safe manner Special case: the input is exactly the output", "target": 0}
{"idx": 23063, "func": "These tests should agree with those for JOrphanUtils.split() as far as possible", "target": 0}
{"idx": 23064, "func": "setup and load constructor public XmlIO(String FilePath) { currentElement = null; }", "target": 0}
{"idx": 23065, "func": "i18n[SQLCatalogsComboBox.noneLabel=None]", "target": 0}
{"idx": 23066, "func": "//Class/isSetGenFeature.override.javajetinc", "target": 0}
{"idx": 23067, "func": "i18n[UpdateControllerImpl.updateCheckTitle=Update Check]", "target": 0}
{"idx": 23068, "func": "@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)", "target": 0}
{"idx": 23069, "func": "end of OCLEvaluator", "target": 0}
{"idx": 23070, "func": "handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class. //", "target": 0}
{"idx": 23071, "func": "//{{{ copy() method", "target": 0}
{"idx": 23072, "func": "add to selection", "target": 0}
{"idx": 23073, "func": "remap the class name", "target": 0}
{"idx": 23074, "func": "can only match once", "target": 0}
{"idx": 23075, "func": "JMeterGUIComponent item = (JMeterGUIComponent) iter.next();", "target": 0}
{"idx": 23076, "func": "//class of problem", "target": 0}
{"idx": 23077, "func": "Should not have any text arguments", "target": 0}
{"idx": 23078, "func": "Check if we have it in the cache", "target": 0}
{"idx": 23079, "func": "if value is null: - if default is null, unset user prop - else set user prop to \"\" else - if default equals value, ignore - if default doesn't equal value, set user", "target": 0}
{"idx": 23080, "func": "get bodytext of template message", "target": 0}
{"idx": 23081, "func": "Take note of when buttong are changed so can change panel", "target": 0}
{"idx": 23082, "func": "SQL strings", "target": 0}
{"idx": 23083, "func": "//{{{ setScreenLineCount() method", "target": 0}
{"idx": 23084, "func": "Update java colorings", "target": 0}
{"idx": 23085, "func": "-G", "target": 0}
{"idx": 23086, "func": "same code as for default JMeter class", "target": 0}
{"idx": 23087, "func": "Follow well-formedness rule for a Class [2]. Determine the owning namespace for the statemachine:", "target": 0}
{"idx": 23088, "func": "-1 is stored if the checksum operation failed. This will ensure that comparison with any other file's checksum will be different - even if they happen to be the same file.", "target": 0}
{"idx": 23089, "func": "layout ------------------------------------------------------------------------", "target": 0}
{"idx": 23090, "func": "//{{{ isRightButton() method", "target": 0}
{"idx": 23091, "func": "1757076 (DATE column seen as TIMESTAMP, update in editable mode fails) We should always return false for this, when the user hasn't specified", "target": 0}
{"idx": 23092, "func": "(non-Javadoc) @see org.columba.core.filter.IFilter#setName(java.lang.String)", "target": 0}
{"idx": 23093, "func": "check two \"adjecent\" nodes at the top of the from-clause tree", "target": 0}
{"idx": 23094, "func": "look for a recursive option", "target": 0}
{"idx": 23095, "func": "just using required is broken...but no more broken than before zsuper refactoring", "target": 0}
{"idx": 23096, "func": "// synchronized (doclock) // {", "target": 0}
{"idx": 23097, "func": "add method with full signature, so it's guaranteed to be directly accessible TODO: no need for this to be a full, formal JVM signature", "target": 1}
{"idx": 23098, "func": "set title", "target": 0}
{"idx": 23099, "func": "language change worked Check if we at least found the correct language:", "target": 0}
{"idx": 23100, "func": "If there is an existing lock then it must be from a previous crash -> remove it!", "target": 0}
{"idx": 23101, "func": "//{{{ constructPath() method", "target": 0}
{"idx": 23102, "func": "key is an entity involved with the operation performed by the listener; value can be either a copy of the entity or the entity itself", "target": 0}
{"idx": 23103, "func": "//private static final Alias DEFAULT_ALIAS = new Alias(10, null);", "target": 0}
{"idx": 23104, "func": "TODO ?? (JMeterTreeNode) selectedNode.clone();", "target": 0}
{"idx": 23105, "func": "general purpose parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 23106, "func": "note: (absolutePath || authority == null) -> hierarchical (authority == null && device == null && !absolutePath) -> scheme == null", "target": 0}
{"idx": 23107, "func": "11!", "target": 0}
{"idx": 23108, "func": "Clear session info from all actions.", "target": 0}
{"idx": 23109, "func": "protected Action[] createActions() { Action[] javaActions = new Action[] { new NetbeansDuplicateLineAction(), }; return TextAction.augmentList(super.createActions(), javaActions); }", "target": 0}
{"idx": 23110, "func": "//{{{ getEndLine() method", "target": 0}
{"idx": 23111, "func": "Ensure that this is a touch notification so to resource aren't marked as dirty. //", "target": 0}
{"idx": 23112, "func": "//<String, String>", "target": 0}
{"idx": 23113, "func": "Test GUI elements - not run for TestBeanGui items", "target": 0}
{"idx": 23114, "func": "insert nodeToInsert after targetNode", "target": 0}
{"idx": 23115, "func": "replace name", "target": 0}
{"idx": 23116, "func": "//assume true, since we don't really know, and it doesn't matter", "target": 0}
{"idx": 23117, "func": "//On VMS platform, we need to create a special java options file //containing the arguments and classpath for the java command. //The special file is supported by the \"-V\" switch on the VMS JVM.", "target": 0}
{"idx": 23118, "func": "//{{{ Input handling", "target": 0}
{"idx": 23119, "func": "TODO is this ever used?", "target": 1}
{"idx": 23120, "func": "TODO: Changed from UML 1.4", "target": 0}
{"idx": 23121, "func": "null channel always succeeds for all locking operations", "target": 0}
{"idx": 23122, "func": "make sure that we have a Message-ID", "target": 0}
{"idx": 23123, "func": "//float midX = (float) (minX + (plotArea.getWidth() getRotateX())); //float midY = (float) (minY + (plotArea.getHeight() getRotateY()));", "target": 0}
{"idx": 23124, "func": "get data from child", "target": 0}
{"idx": 23125, "func": "line 1043", "target": 0}
{"idx": 23126, "func": "Iterate forward over the undone commands to redo them. //", "target": 0}
{"idx": 23127, "func": "Write the profile out to a temp file", "target": 0}
{"idx": 23128, "func": "convert the target node to a compatible node //", "target": 0}
{"idx": 23129, "func": "MVW: for this case, I had to move the call to setSelectedItem() outside the \"buildingModel\", otherwise the combo does not update with the new selection. See issue 5418.", "target": 1}
{"idx": 23130, "func": "Reads the value from the specified ResultSet at column index index, and based on the type, calls the appropriate setXXX method on ps with the value obtained. @param ps @param sourceColType @param destColType @param index @param rs @return a string representation of the value that was bound. @throws SQLException", "target": 0}
{"idx": 23131, "func": "line 1629", "target": 0}
{"idx": 23132, "func": "i18n[ColumnDiffDialog.sessionLabelPrefix=Session]", "target": 0}
{"idx": 23133, "func": "Add property name aliases", "target": 0}
{"idx": 23134, "func": "no need to divide by 1", "target": 0}
{"idx": 23135, "func": "backgroundImageAlignment", "target": 0}
{"idx": 23136, "func": "Schema Rec. {Datatypes} - Punctuation Pi - initial quote Pf - final quote", "target": 0}
{"idx": 23137, "func": "Thanks to Sreenivasa Viswanadha for suggesting how to get rid of expensive lookahead here.", "target": 0}
{"idx": 23138, "func": "//TODO: if object was an uninitialized proxy, this is inefficient, resulting in two SQL selects", "target": 1}
{"idx": 23139, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getProcedureColumns(net.sourceforge.squirrel_sql.fw.sql.IProcedureInfo) @deprecated use getProcedureColumnsDataSet instead", "target": 0}
{"idx": 23140, "func": "End BeanShell Modification - override error methods and toString", "target": 0}
{"idx": 23141, "func": "//////////////////////////////////////////////////////////////class accessors", "target": 0}
{"idx": 23142, "func": "Should we save the sample?", "target": 0}
{"idx": 23143, "func": "fail ??", "target": 0}
{"idx": 23144, "func": "create JNode and set properties", "target": 0}
{"idx": 23145, "func": "Rats. should not happen", "target": 0}
{"idx": 23146, "func": "Ecore.changeable = !EMOF.isReadOnly", "target": 0}
{"idx": 23147, "func": "//checkAssignIDToObject(fighistorystate, true, true);", "target": 0}
{"idx": 23148, "func": "add reference to interface module", "target": 0}
{"idx": 23149, "func": "create initial version from default configuration file", "target": 0}
{"idx": 23150, "func": "Is there a supplied proc argument or do we assume a block was supplied", "target": 0}
{"idx": 23151, "func": "Fig spf = null; Fig dpf = null; FigNode sfn = null; FigNode dfn = null;", "target": 0}
{"idx": 23152, "func": "end class SplashPanel", "target": 0}
{"idx": 23153, "func": "If no exception is thrown execute else block", "target": 0}
{"idx": 23154, "func": "skip message if there's no account available to send it", "target": 0}
{"idx": 23155, "func": "Force the class public for now...", "target": 0}
{"idx": 23156, "func": "update MessageFolderInfo", "target": 0}
{"idx": 23157, "func": "NON-WORD BREAK OPERATOR \\B if ????", "target": 0}
{"idx": 23158, "func": "int, native long, native", "target": 0}
{"idx": 23159, "func": "capLength", "target": 0}
{"idx": 23160, "func": "Tooltips", "target": 0}
{"idx": 23161, "func": "HACK: force the controller to load its tree", "target": 1}
{"idx": 23162, "func": "receiver", "target": 0}
{"idx": 23163, "func": "font", "target": 0}
{"idx": 23164, "func": "true if action is enabled, false otherwiese", "target": 0}
{"idx": 23165, "func": "//AF_INET", "target": 0}
{"idx": 23166, "func": "return handle.stringValue();", "target": 0}
{"idx": 23167, "func": "Load the file for this recent file command", "target": 0}
{"idx": 23168, "func": "Determine if we're running under XP/2000/NT or 98/95", "target": 0}
{"idx": 23169, "func": "FigAssociationRole figassociationrole = new FigAssociationRole();", "target": 0}
{"idx": 23170, "func": "first group contains first contact item", "target": 0}
{"idx": 23171, "func": "open configuration file", "target": 0}
{"idx": 23172, "func": "final in 4.2", "target": 0}
{"idx": 23173, "func": "ENEBO: Removed !compile_for_eval which probably is to reduce warnings", "target": 0}
{"idx": 23174, "func": "//return -1;", "target": 0}
{"idx": 23175, "func": "(non-Javadoc) @see org.columba.core.gui.frame.focus.FocusOwner#isSelectAllActionEnabled()", "target": 0}
{"idx": 23176, "func": "Return current look-ahead", "target": 0}
{"idx": 23177, "func": "same object", "target": 0}
{"idx": 23178, "func": "i18n[ResultTab.elapsedTime=Total: {0}, SQL query: {1}, Building output: {2}]", "target": 0}
{"idx": 23179, "func": "Replace subControllersAndSamplers with reordered copy.", "target": 0}
{"idx": 23180, "func": "show all tooltips for ten seconds before hiding", "target": 0}
{"idx": 23181, "func": "key not found", "target": 0}
{"idx": 23182, "func": "default", "target": 0}
{"idx": 23183, "func": "add dest dir to classpath so that previously compiled and untouched classes are on classpath", "target": 0}
{"idx": 23184, "func": "label angle...", "target": 0}
{"idx": 23185, "func": "minimum and maximum for each group...", "target": 0}
{"idx": 23186, "func": "J9 2.2 has problems assigning null to a Class variable.", "target": 0}
{"idx": 23187, "func": "i.e. shared pool", "target": 0}
{"idx": 23188, "func": "The user cancelled!", "target": 0}
{"idx": 23189, "func": "end class WizStepConfirm", "target": 0}
{"idx": 23190, "func": "//}}} //{{{ SEQ_REGEXP", "target": 0}
{"idx": 23191, "func": "TODO: We should be giving the user more direct feedback", "target": 1}
{"idx": 23192, "func": "//int totalDraw = (n + 1 + NUM_OVERSHOOT_BYTES) + (n + NUM_OVERSHOOT_BYTES) + n + 65537; //compressOutOfMemory ( totalDraw, n );", "target": 0}
{"idx": 23193, "func": "Get the instance initializer block from the static This", "target": 0}
{"idx": 23194, "func": "One synchron call for first completion", "target": 0}
{"idx": 23195, "func": "MIDDLE: check d0", "target": 0}
{"idx": 23196, "func": "Never return null", "target": 0}
{"idx": 23197, "func": "i18n[ResultTab.rowCountLabel=Row Count:]", "target": 0}
{"idx": 23198, "func": "do nothing if item is not visible", "target": 0}
{"idx": 23199, "func": "Calculate the test duration. Needs to xAxis Labels and getData.", "target": 0}
{"idx": 23200, "func": "For 'list' and only populated if list is not null.", "target": 0}
{"idx": 23201, "func": "Rendering the column that the mouse has been pressed in.", "target": 0}
{"idx": 23202, "func": "Add to cache", "target": 0}
{"idx": 23203, "func": "Do not mark this instruction's operands live if the instruction itself is dead!", "target": 0}
{"idx": 23204, "func": "line 2019 \"Ruby19Parser.y\"", "target": 0}
{"idx": 23205, "func": "We don't know what thread events will be delivered on, so make sure we run Swing methods on the Swing thread", "target": 0}
{"idx": 23206, "func": "Load resources.", "target": 0}
{"idx": 23207, "func": "MRI behavior on Windows: it treats '/' as a root of a current drive (but only if SINGLE slash is present!): E.g., if current work directory is 'D:/home/directory', then '/' means 'D:/'. Basically, '/path' is treated as a RELATIVE path, relative to the current drive. '//path' is treated as absolute one.", "target": 0}
{"idx": 23208, "func": "//{{{ finished() method", "target": 0}
{"idx": 23209, "func": "new factory methods ------------------------------------------------------------------------", "target": 0}
{"idx": 23210, "func": "Now create the five options", "target": 0}
{"idx": 23211, "func": "Create a proxy in the correct way and pop it. //", "target": 0}
{"idx": 23212, "func": "mainConstraints.fill = GridBagConstraints.BOTH; mainConstraints.insets = new Insets(0, 0, 0, 0); mainConstraints.gridwidth = GridBagConstraints.REMAINDER; mainConstraints.weightx = 1.0; mainConstraints.weighty = 1.0;", "target": 0}
{"idx": 23213, "func": "cascade-delete to many-to-one AFTER the parent was deleted", "target": 0}
{"idx": 23214, "func": "//TODO: get SQL rendering out of this package!", "target": 1}
{"idx": 23215, "func": "Override so we can intercept the stream", "target": 0}
{"idx": 23216, "func": "Can't delete records in snapshots (Oracle materialized views)", "target": 0}
{"idx": 23217, "func": "construct static scope list of names", "target": 0}
{"idx": 23218, "func": "':'?", "target": 0}
{"idx": 23219, "func": "for convenience, cast the value object to its type", "target": 0}
{"idx": 23220, "func": "--------------------------- Spring=injected dependencies --------------------------------------------", "target": 0}
{"idx": 23221, "func": "//i18n[MappingRoot.driverVersion=JDBC driver version (Hibernate)]", "target": 0}
{"idx": 23222, "func": "//, true, true, true, true);", "target": 0}
{"idx": 23223, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#getDate(int)", "target": 0}
{"idx": 23224, "func": "No need to synch/ - only used by sampler and ClientPool (which does its own synch)", "target": 0}
{"idx": 23225, "func": "create the chart...", "target": 0}
{"idx": 23226, "func": "Overridden by non-TestBean implementations to return the property value instead", "target": 0}
{"idx": 23227, "func": "Localize the bean name $NON-NLS-1$ $NON-NLS-1$", "target": 0}
{"idx": 23228, "func": "do nothing - ch already contains correct character", "target": 0}
{"idx": 23229, "func": "//{{{ writeMarkers() method", "target": 0}
{"idx": 23230, "func": "was type, but that caused FindBugs warning", "target": 0}
{"idx": 23231, "func": "passing through anything we do not know : to support jdbc escape sequences HB-898", "target": 0}
{"idx": 23232, "func": "XXX: This should not be hardcoded", "target": 1}
{"idx": 23233, "func": "//ie. a many-to-many", "target": 0}
{"idx": 23234, "func": "(non-Javadoc) @see org.apache.jmeter.visualizers.request.RequestView#getPanel()", "target": 0}
{"idx": 23235, "func": "TreePath path = tree.getPathForRow(row);", "target": 0}
{"idx": 23236, "func": "specifies valid elements for a DataType to contain", "target": 0}
{"idx": 23237, "func": "java policy file", "target": 0}
{"idx": 23238, "func": "For the serialization test in superclass - cannot use mockHelper because the replay needs to be done here.", "target": 0}
{"idx": 23239, "func": "HAMMER end inline mainGTU", "target": 1}
{"idx": 23240, "func": "//TODO: include the rowids!!!!", "target": 1}
{"idx": 23241, "func": "//the owner of the association is not the owner of the id", "target": 0}
{"idx": 23242, "func": "line 1290", "target": 0}
{"idx": 23243, "func": "Begin unit of work", "target": 0}
{"idx": 23244, "func": "Intentionally left blank", "target": 0}
{"idx": 23245, "func": "Construct the input stream in a special efficient way for case of a file scheme. //", "target": 0}
{"idx": 23246, "func": "private method to allow AsyncSample to reset the value without performing checks", "target": 0}
{"idx": 23247, "func": "todo : we can remove this once the deprecated ctor can be made private...", "target": 1}
{"idx": 23248, "func": "set RubyClass", "target": 0}
{"idx": 23249, "func": "todo : add support for READ_WRITE ( + NONSTRICT_READ_WRITE ??? )", "target": 1}
{"idx": 23250, "func": "True if an instance is allowed to be invisible. This is currently only set true by FigEdgePort. TODO: FigEdgePort should be removed from the FigNodeModelElement hierarchy and so the need for this removed.", "target": 1}
{"idx": 23251, "func": "go on with next property.", "target": 0}
{"idx": 23252, "func": "from Map", "target": 0}
{"idx": 23253, "func": "end class FigAssociationRole", "target": 0}
{"idx": 23254, "func": "add the key/value pairs to the output string", "target": 0}
{"idx": 23255, "func": "else fall through...", "target": 0}
{"idx": 23256, "func": "Use a SwtPaintCanvas to show the color, note that we must set the heightHint.", "target": 0}
{"idx": 23257, "func": "@see org.tigris.gef.graph.GraphFactory#makeEdge()", "target": 0}
{"idx": 23258, "func": "Should these also be deleted?", "target": 0}
{"idx": 23259, "func": "//postDelete: After actually deleting a row, record the fact that the instance no longer exists on the database (needed for identity-column key generation), and remove it from the session cache", "target": 0}
{"idx": 23260, "func": "e.g. NullPointerException", "target": 0}
{"idx": 23261, "func": "@see org.argouml.uml.reveng.ImportSettings#isCreateDiagramsSelected()", "target": 0}
{"idx": 23262, "func": "init event", "target": 0}
{"idx": 23263, "func": "Don't add delimiter first time round", "target": 0}
{"idx": 23264, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getUserName()", "target": 0}
{"idx": 23265, "func": "CheckStyle:VisibilityModifier OFF - bc //Input //Output //Error CheckStyle:VisibilityModifier ON", "target": 0}
{"idx": 23266, "func": "set source", "target": 0}
{"idx": 23267, "func": "test an unknown file", "target": 0}
{"idx": 23268, "func": "5 -> e+nnn / e-nnn", "target": 0}
{"idx": 23269, "func": "Move the resolved object to the right place, remove the proxy, and we're done. //", "target": 0}
{"idx": 23270, "func": "this should never happen with the existing code, but throw an exception in case future changes make it possible...", "target": 0}
{"idx": 23271, "func": "//{{{ addPluginProps() method", "target": 0}
{"idx": 23272, "func": "DecimalFormat adds the number to the end of the format if there are no formatting characters, so we need a way to prevent this from messing up the file name.", "target": 0}
{"idx": 23273, "func": "remove a value", "target": 0}
{"idx": 23274, "func": "Create .jetproperties file //", "target": 0}
{"idx": 23275, "func": "TODO (@author fdietz): add export feature", "target": 1}
{"idx": 23276, "func": "Only show classpath once", "target": 0}
{"idx": 23277, "func": "Chunk part of previous env var (UNIX env vars can contain embedded new lines).", "target": 0}
{"idx": 23278, "func": "Set up the substitutions of any type parameters this class has with respect to the type arguments for them. //", "target": 0}
{"idx": 23279, "func": "TODO: 3 times calculate the same value below", "target": 1}
{"idx": 23280, "func": "Disallowing VOIDs here was an easy way to support the throwing of a more descriptive error message on use of an undefined argument to a method call (very common). If it ever turns out that we need to support that for some reason we'll have to re-evaluate how we get \"meta-information\" about the arguments in the various invoke() methods that take Object []. We could either pass BSHArguments down to overloaded forms of the methods or throw an exception subtype including the argument position back up, where the error message would be compounded.", "target": 0}
{"idx": 23281, "func": "set application wide font", "target": 0}
{"idx": 23282, "func": "the sooner ppl move to the new api, the less we'll need crap like this", "target": 1}
{"idx": 23283, "func": "Create a FormLayout instance. //$NON-NLS-1$", "target": 0}
{"idx": 23284, "func": "normal", "target": 0}
{"idx": 23285, "func": "TODO: This is currently just a mechanical merge of the tests in from the generic Model test and the NSUML tests. They need to be reviewed & merged. @author euluis @since 0.19.2 @version 0.00", "target": 1}
{"idx": 23286, "func": "no fields to compute...", "target": 0}
{"idx": 23287, "func": "this should return quickly, since it basically is a NO-OP.", "target": 0}
{"idx": 23288, "func": "add right-click menu to cell editor", "target": 0}
{"idx": 23289, "func": "Point at which to start layout (initial state goes here). The X coordinate must be greater than half the width of the widest figure to be placed (because figures are centered on this location).", "target": 0}
{"idx": 23290, "func": "check for valid escape sequence", "target": 0}
{"idx": 23291, "func": "The following is used in both cell and popup operations.", "target": 0}
{"idx": 23292, "func": "TODO: An Iterator filter would be nice here instead of the mucking around with the Collection.", "target": 1}
{"idx": 23293, "func": "JOINS", "target": 0}
{"idx": 23294, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#insertsAreDetected(int)", "target": 0}
{"idx": 23295, "func": "already include the \\r\\n", "target": 0}
{"idx": 23296, "func": "throw further", "target": 0}
{"idx": 23297, "func": "TODO: Except this won't work because the names are different which will cause a test in CheckUMLModelHelper to fail remap.put(\"Core:Permission\", \"Core:PackageImport\");", "target": 1}
{"idx": 23298, "func": "i18n[graph.landscape=landscape]", "target": 0}
{"idx": 23299, "func": "try to make sure we don't wrap and already wrapped session", "target": 0}
{"idx": 23300, "func": "Must be done before setContentType", "target": 0}
{"idx": 23301, "func": "Never include subclasses for implied from elements.", "target": 0}
{"idx": 23302, "func": "Channnel combo-box", "target": 0}
{"idx": 23303, "func": "this is ensured by the callers", "target": 0}
{"idx": 23304, "func": "Retrieve the formatted data using the same encoding used to create it TODO - charset? Write the actual file content", "target": 0}
{"idx": 23305, "func": "build the command line from what we got the format is ccm co /t .. files as specified in the CCM.EXE help", "target": 0}
{"idx": 23306, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#analyzingTable(net.sourceforge.squirrel_sql.plugins.dbcopy.event.TableEvent)", "target": 0}
{"idx": 23307, "func": "EATM Kind of hacky.", "target": 1}
{"idx": 23308, "func": "//{{{ addToBus() method", "target": 0}
{"idx": 23309, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#storesMixedCaseQuotedIdentifiers()", "target": 0}
{"idx": 23310, "func": "JCheckBox overwriteOptionsCheckBox;", "target": 0}
{"idx": 23311, "func": "FOREIGN KEY (columnName [,...]) REFERENCES [refTableName] [(refColumnName[,...])] [ON DELETE {CASCADE | RESTRICT | NO ACTION | SET DEFAULT | SET NULL}] [ON UPDATE {CASCADE | SET DEFAULT | SET NULL}]", "target": 0}
{"idx": 23312, "func": "i18n[UpdateManagerDialog.repositoryTabLabel=Repository]", "target": 0}
{"idx": 23313, "func": "//work around a bug in all known connection pools....", "target": 1}
{"idx": 23314, "func": "set website/homepage", "target": 0}
{"idx": 23315, "func": "If there is a cached result, return it. We expect that if the package is set to be a proxy, the code in EPackageImpl.eSetProxyURI override will have cleared this value. //", "target": 0}
{"idx": 23316, "func": "loads the project", "target": 0}
{"idx": 23317, "func": "use folder-based options", "target": 0}
{"idx": 23318, "func": "The Locale used to instantiate the GUI objects", "target": 0}
{"idx": 23319, "func": "Y Axis", "target": 0}
{"idx": 23320, "func": "reset previous result", "target": 0}
{"idx": 23321, "func": "special case in ZIPs, we do not want this thing included", "target": 0}
{"idx": 23322, "func": "we only put HTTPFileArgs in it", "target": 0}
{"idx": 23323, "func": "//{{{ updateUI() method", "target": 0}
{"idx": 23324, "func": "ENEBO: arg surrounded by in_defined set/unset", "target": 0}
{"idx": 23325, "func": "only the second iteration would pass because of PR 27218", "target": 0}
{"idx": 23326, "func": "Set the target anew. TODO: This method is never used. What is its intention? Remove it?", "target": 1}
{"idx": 23327, "func": "Add ASCII Letters and ASCII Hex Numbers", "target": 0}
{"idx": 23328, "func": "Add a concurrent region to a concurrent composite state <p> This action can be executed with either the composite concurrent state selected, or one of its concurrent regions. <p> TODO: Move all the magic numbers to constants @author pepargouml@yahoo.es", "target": 1}
{"idx": 23329, "func": "the name of this instance of ModelElement", "target": 0}
{"idx": 23330, "func": "//{{{ setKeyEventInterceptor() method", "target": 0}
{"idx": 23331, "func": "centerPanel.add(label, cc.xywh(3, 1, 1, 1));", "target": 0}
{"idx": 23332, "func": "create a table with a default value to use as the model", "target": 0}
{"idx": 23333, "func": "A command was created if the source was available early, and the information used to create it was cached... //", "target": 0}
{"idx": 23334, "func": "the source of the transition is a pseudostate", "target": 0}
{"idx": 23335, "func": "reduce the default margins", "target": 0}
{"idx": 23336, "func": "CASE 1 : Comparing to another Quarter object --------------------------------------------", "target": 0}
{"idx": 23337, "func": "//{{{ setStructureHighlightColor() method", "target": 0}
{"idx": 23338, "func": "FIXME: add setBaseShape(Shape, boolean) ?", "target": 0}
{"idx": 23339, "func": "Consider the classifiers in a special way to take into account the fact they they often acts as wrappers for instance type names and that two classifiers that wrap the same instance type name should be considered equal. //", "target": 0}
{"idx": 23340, "func": "Assume that we aren't running.", "target": 0}
{"idx": 23341, "func": "//( (Column) model.getTable().getPrimaryKey().getColumnIterator().next() ).getName();", "target": 0}
{"idx": 23342, "func": "//btnCopyToClipPrefSize.width -=10;", "target": 0}
{"idx": 23343, "func": "//Reset comment to empty here as we can accumulate multiple lines //in the processComment method", "target": 0}
{"idx": 23344, "func": "UTF-8", "target": 0}
{"idx": 23345, "func": "Test with output variable name", "target": 0}
{"idx": 23346, "func": "General number and precision checking", "target": 0}
{"idx": 23347, "func": "20030921, karlpeder The old code was (accidentially!?) modifying the attachment list of the model. This affects the composing when called a second time for saving the message after sending!", "target": 0}
{"idx": 23348, "func": "Names for the fields $NON-NLS-1$", "target": 0}
{"idx": 23349, "func": "//{{{ SettingsActionHandler class", "target": 0}
{"idx": 23350, "func": "add name to comma-separated string for saving in properties", "target": 0}
{"idx": 23351, "func": "//new behaviour: $X maps to $X for all values of X!='$'", "target": 0}
{"idx": 23352, "func": "If a content encoding is specified, we set it as http parameter, so that the post body will be encoded in the specified content encoding", "target": 0}
{"idx": 23353, "func": "Test Connection Button Panel (Both the button and the status label", "target": 0}
{"idx": 23354, "func": "end class ActionGotoDiagram", "target": 0}
{"idx": 23355, "func": "Put back lastLine for any elements past start of heredoc marker", "target": 0}
{"idx": 23356, "func": "add some space", "target": 0}
{"idx": 23357, "func": "//Not called at runtime so doesn't matter if its slow :)", "target": 0}
{"idx": 23358, "func": "draw start of warning range", "target": 0}
{"idx": 23359, "func": "Ignore this soft dependency when it's not satisfied.", "target": 0}
{"idx": 23360, "func": "Why does this not call guiInstance.clearTestPlan() ? Is there a reason for not clearing everything?", "target": 1}
{"idx": 23361, "func": "This just represents going back to the unset state, but that doesn't affect the contents of the list. //", "target": 0}
{"idx": 23362, "func": "user/pass worked -> this is indeed a bogus server.", "target": 0}
{"idx": 23363, "func": "notify listeners @see org.columba.mail.gui.table.action.ForwardAction", "target": 0}
{"idx": 23364, "func": "---- privateZipPostalCodeLabel ----", "target": 0}
{"idx": 23365, "func": "i18n[sessionPropertiesPanel.schemaPrefix=Limit Schema Objects using these comma-delimited prefixes:]", "target": 0}
{"idx": 23366, "func": "Load project at slightly lower priority to keep UI responsive", "target": 0}
{"idx": 23367, "func": "i18n[ErrorStream.notexpected=not expected]", "target": 0}
{"idx": 23368, "func": "Doesn't make sense for c-l. Use the logger config", "target": 0}
{"idx": 23369, "func": "TODO deprecate (since no longer used by getEditPluginClass(), getEditorPluginClass(), getTestSuiteClass()) //", "target": 1}
{"idx": 23370, "func": "TODO: Should we handle <<access>> and <<import>> here?", "target": 1}
{"idx": 23371, "func": "----------- Public abstract methods ----------", "target": 0}
{"idx": 23372, "func": "Look for a matching element in the specified packages if there are any. //", "target": 0}
{"idx": 23373, "func": "//To change body of created methods use File | Settings | File Templates.", "target": 0}
{"idx": 23374, "func": "NOTE We have fit EOF, and the block is not full! This is a broken archive. It does not follow the standard blocking algorithm. However, because we are generous, and it requires little effort, we will simply ignore the error and continue as if the entire block were read. This does not appear to break anything upstream. We used to return false in this case. Thanks to 'Yohann.Roussel@alcatel.fr' for this fix. //", "target": 0}
{"idx": 23375, "func": "TODO: These were missing, so we're not handling them elsewhere?", "target": 1}
{"idx": 23376, "func": "init plugin handler", "target": 0}
{"idx": 23377, "func": "//if less than 1.0 then make it 1.0 //subtract out margin and get exponential value:", "target": 0}
{"idx": 23378, "func": "Label containing the location of the plugins at top of dialog.", "target": 0}
{"idx": 23379, "func": "This throws org.argouml.model.XmiException: Unknown element in XMI file : Model because the UML 1.3->1.4 converter can only handle XMI 1.0, not 1.1", "target": 0}
{"idx": 23380, "func": "lastBarPaint;", "target": 0}
{"idx": 23381, "func": "array created for rescue args doesn't need to be in ObjectSpace.", "target": 0}
{"idx": 23382, "func": "group item", "target": 0}
{"idx": 23383, "func": "Resetting contents buffer. Assuming that tags either tag content or children, not both. This is usually the case with XML that is representing data strucutures in a programming language independant way. This assumption is not typically valid where XML is being used in the classical text mark up style where tagging is used to style content and several styles may overlap at once.", "target": 0}
{"idx": 23384, "func": "//{{{ PluginList constructor", "target": 0}
{"idx": 23385, "func": "Create it [Here, OpaqueExpression which is the first choice] Note that if we edit the Initial value in the diagram (double clic) it was replaced by an OpaqueExpression", "target": 0}
{"idx": 23386, "func": "We don't want keyType and valueType on a map type specification in a package interface. But, we also use qualified model information when defining a feature with suppressed get accessor on the interface, and we do want to include these properties in that case. //", "target": 0}
{"idx": 23387, "func": "Set the bean's property to the value we just obtained:", "target": 0}
{"idx": 23388, "func": "Follow redirects and download page resources if appropriate:", "target": 0}
{"idx": 23389, "func": "divide in packs", "target": 0}
{"idx": 23390, "func": "check if it's an immediate, and don't outline", "target": 0}
{"idx": 23391, "func": "//this is really irritating; we need a way to set stuff", "target": 1}
{"idx": 23392, "func": "eClass.getESuperTypes().addAll(extend); eClass.getESuperTypes().addAll(unspecified); eClass.getESuperTypes().addAll(mixin); eClass.getESuperTypes().addAll(nonClass);", "target": 0}
{"idx": 23393, "func": "skip if user didn't enable this option", "target": 0}
{"idx": 23394, "func": "Add Pointer::NULL as a constant", "target": 0}
{"idx": 23395, "func": "all headers should be included", "target": 0}
{"idx": 23396, "func": "//{{{ getNextFile() method", "target": 0}
{"idx": 23397, "func": "TODO: This causes a cyclic depencency with ActionSaveProject", "target": 1}
{"idx": 23398, "func": "deal with the resources", "target": 0}
{"idx": 23399, "func": "&& !isPathExtensionNoEquals() && !isPathExtensionNoQuestionmark()", "target": 0}
{"idx": 23400, "func": "@see org.argouml.application.events.ArgoGeneratorEventListener#generatorRemoved(org.argouml.application.events.ArgoGeneratorEvent)", "target": 0}
{"idx": 23401, "func": "drop through for non-strict digits", "target": 0}
{"idx": 23402, "func": "//MappingHelperImpl", "target": 0}
{"idx": 23403, "func": "//{{{ goToNextPage() method", "target": 0}
{"idx": 23404, "func": "This looks wrong, but it's the way MRI does it.", "target": 0}
{"idx": 23405, "func": "no bootclasspath, therefore, get one from the java runtime", "target": 0}
{"idx": 23406, "func": "For the GenericDeploymentTool, do nothing. Vendor specific subclasses should throw a BuildException if the configuration is invalid for their server.", "target": 0}
{"idx": 23407, "func": "Generate code to call ClassGeneratorUtil to get our switch index and give us args...", "target": 0}
{"idx": 23408, "func": "//{{{ handleNoWordBreak() method", "target": 0}
{"idx": 23409, "func": "//flag - if all machines within a given domain can access the variable. //(from http://www.cookiecentral.com/faq/ 3.5)", "target": 0}
{"idx": 23410, "func": "listen to changes in the Subject to update the title bar of the message composer window", "target": 0}
{"idx": 23411, "func": "if input files are specified, inputString and inputStream are ignored; classes that work with redirector attributes can enforce whatever warnings are needed", "target": 0}
{"idx": 23412, "func": "xLOAD or xSTORE", "target": 0}
{"idx": 23413, "func": "Restore all configured settings from the original. //", "target": 0}
{"idx": 23414, "func": "can't have an output parameter type null", "target": 0}
{"idx": 23415, "func": "i18n[SQLScriptPreferencesTab.hint=Settings for the SQL Script plugin]", "target": 0}
{"idx": 23416, "func": "line 619", "target": 0}
{"idx": 23417, "func": "Can't use buffer.getName() here because it is not changed until the save is complete", "target": 0}
{"idx": 23418, "func": "arbitrary flag", "target": 0}
{"idx": 23419, "func": "Additional context surrounding tokens that both the lexer and grammar use.", "target": 0}
{"idx": 23420, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsCatalogsInProcedureCalls()", "target": 0}
{"idx": 23421, "func": "TBLRC 10111", "target": 0}
{"idx": 23422, "func": "When changing the backgroud color, it helps to set the inner component's border to zero. Otherwise, the border can obscure the text and make it hard to see. This is especially seen when using the kunstoff l&f.", "target": 0}
{"idx": 23423, "func": "Quick exit if it's a transaction event (we get a lot of them and they are all ignored)", "target": 0}
{"idx": 23424, "func": "turn validation on", "target": 0}
{"idx": 23425, "func": "Handle \".class\" suffix operation Prefix must be a BSHType", "target": 0}
{"idx": 23426, "func": "Force this to be initialized as well.", "target": 0}
{"idx": 23427, "func": "unwrap any primitives", "target": 0}
{"idx": 23428, "func": "draw the error bar for the y-interval", "target": 0}
{"idx": 23429, "func": "Bug can generate RTE", "target": 0}
{"idx": 23430, "func": "This is needed to unpack stuff", "target": 0}
{"idx": 23431, "func": "-------------- Private fields and methods below ----------------", "target": 0}
{"idx": 23432, "func": "ignore leading zeroes switch", "target": 0}
{"idx": 23433, "func": "remember request id for \"search in results\"", "target": 0}
{"idx": 23434, "func": "Try to look up field for simple name get field; if nonnull, go straight to dispatch", "target": 0}
{"idx": 23435, "func": "Set the screen layout to what the user left it before, or to reasonable defaults.", "target": 0}
{"idx": 23436, "func": "Define a class loader that will look in the URLs first, and if it doesn't find the class there, uses the emitter's loader. //", "target": 0}
{"idx": 23437, "func": "i18n[LogPanel.titleError=Last log entry (Entry type: ERROR)]", "target": 0}
{"idx": 23438, "func": "Skip parameters with a blank name (allows use of optional variables in parameter lists)", "target": 0}
{"idx": 23439, "func": "i18n[dataTypeUnknown.unknownTypes=Unknown DataTypes (non-standard SQL type codes)]", "target": 0}
{"idx": 23440, "func": "//{{{ errorOccurred() method", "target": 0}
{"idx": 23441, "func": "//{{{ BufferClosedVisitor class", "target": 0}
{"idx": 23442, "func": "Build the class body!", "target": 0}
{"idx": 23443, "func": "//}}} //{{{ KEY_TYPED...", "target": 0}
{"idx": 23444, "func": "Filter out messages based on priority", "target": 0}
{"idx": 23445, "func": "Test read compressed models, mainly to verify the correct reading of AndroMDA profiles. TODO: Move this test into argouml base when we will want to read also zip file. @author lmaitre", "target": 1}
{"idx": 23446, "func": "Create a code formatter for this compilation unit, if needed. //", "target": 0}
{"idx": 23447, "func": "Hacky: Advance position to eat newline here....", "target": 1}
{"idx": 23448, "func": "//{{{ getNextRequest() method", "target": 0}
{"idx": 23449, "func": "rb_class_boot", "target": 0}
{"idx": 23450, "func": "ignore - unused.", "target": 0}
{"idx": 23451, "func": "WizardContainer variables", "target": 0}
{"idx": 23452, "func": "create a new space object if one wasn't supplied...", "target": 0}
{"idx": 23453, "func": "// copy all internally used headerfields", "target": 0}
{"idx": 23454, "func": "Fall tru", "target": 0}
{"idx": 23455, "func": "TODO: This should use a minimal update strategy instead of removing everything and adding it again. - tfm", "target": 1}
{"idx": 23456, "func": "Constraint: This code only deals with 1 supplier per dependency! TODO: Do we need more? @see org.argouml.uml.ui.AbstractActionAddModelElement#doIt(java.util.List)", "target": 1}
{"idx": 23457, "func": "should not happen", "target": 0}
{"idx": 23458, "func": "0780..07BF;", "target": 0}
{"idx": 23459, "func": "(non-Javadoc) @see org.columba.mail.folder.headercache.HeaderList#add(org.columba.mail.message.IColumbaHeader, java.lang.Object)", "target": 0}
{"idx": 23460, "func": "in UML2 subsystem is a Component with <<subsystem>> stereotype so this must occur after the metaTypes.getComponent() case", "target": 0}
{"idx": 23461, "func": "... and fields at the right.", "target": 0}
{"idx": 23462, "func": "DataTypes is next so it's available for Kinds, ModelManagement, & Extensions", "target": 0}
{"idx": 23463, "func": "use the directory containing the target as the output directory", "target": 0}
{"idx": 23464, "func": "Created by XStream reading templates.xml", "target": 0}
{"idx": 23465, "func": "//Class/basicSetGenFeature.override.javajetinc", "target": 0}
{"idx": 23466, "func": "Each token in parameters will specify a dataType for the corresponding parameter, but can be overridden by a parameter-name-prefixed dataType property. //", "target": 0}
{"idx": 23467, "func": "(non-Javadoc) @see org.eclipse.jface.window.Window#configureShell(org.eclipse.swt.widgets.Shell)", "target": 0}
{"idx": 23468, "func": "getFirstFileExtension?", "target": 0}
{"idx": 23469, "func": "Parse the classpath into it's individual elements and store the results in the \"classpathElements\" instance variable.", "target": 0}
{"idx": 23470, "func": "drop last segment from base, as in resolving", "target": 0}
{"idx": 23471, "func": "Instance Creation", "target": 0}
{"idx": 23472, "func": "//end updateInfo()", "target": 0}
{"idx": 23473, "func": "//new ConvertToStringBufferCommand(_session.getSQLPanelAPI(_plugin)).execute();", "target": 0}
{"idx": 23474, "func": "if there is an existing dataset, remove the plot from the list of change listeners...", "target": 0}
{"idx": 23475, "func": "/////////////////////////////////////////////////////////////////////////Private ///////////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 23476, "func": "Without this the split moves when the window is resized.", "target": 0}
{"idx": 23477, "func": "i18n[i18n.executingCommand=Executing command: {0}]", "target": 0}
{"idx": 23478, "func": "build new body part", "target": 0}
{"idx": 23479, "func": "//nothing to do", "target": 0}
{"idx": 23480, "func": "These are used as GUI item names; LOWERBOUND, UPPERBOUND and INCREMENT are used in the focusLost() method", "target": 0}
{"idx": 23481, "func": "impossible since our processLine doesn't throw an IOException", "target": 0}
{"idx": 23482, "func": "an existing collection that was either non-empty or uninitialized is replaced by null or a different collection (if the collection is uninitialized, hibernate has no way of knowing if the collection is actually empty without querying the db)", "target": 0}
{"idx": 23483, "func": "No point doing this on a per-connection basis, as there is currently no way to configure it. So we leave it to the defaults set up in the SSL Context", "target": 0}
{"idx": 23484, "func": "Java and MRI definitions of modulo are different.", "target": 0}
{"idx": 23485, "func": "Reset the status code if the message contains one", "target": 0}
{"idx": 23486, "func": "Can't finish if our parent can't", "target": 0}
{"idx": 23487, "func": "user enters something when field is null", "target": 0}
{"idx": 23488, "func": "assume we are in an auto-commit state", "target": 0}
{"idx": 23489, "func": "aggregate functions shouldn't be registered, right? //registerFunction( \"list\", new StandardSQLFunction(\"list\",Hibernate.STRING) ); stopped on $list", "target": 0}
{"idx": 23490, "func": "Static initializer for archiveSchemes.", "target": 0}
{"idx": 23491, "func": "result = eval(\"arr = Array::['c', 200]; p arr\"); assertEquals(\"[\\\"c\\\", 200]\", result); result = eval(\"arr = Array.['d', 200]; p arr\"); assertEquals(\"[\\\"d\\\", 200]\", result);", "target": 0}
{"idx": 23492, "func": "Get hostname", "target": 0}
{"idx": 23493, "func": "aload_1 load bean", "target": 0}
{"idx": 23494, "func": "FIXME BROKEN CODE", "target": 1}
{"idx": 23495, "func": "line 1440", "target": 0}
{"idx": 23496, "func": "Evil hack to split the vacuum output a little.", "target": 1}
{"idx": 23497, "func": "TODO: implement this properly", "target": 1}
{"idx": 23498, "func": "baseItemLabelGenerator", "target": 0}
{"idx": 23499, "func": "create the class", "target": 0}
{"idx": 23500, "func": "Generate the bsh instance 'This' reference holder field", "target": 0}
{"idx": 23501, "func": "need to skip IncludedModuleWrappers", "target": 0}
{"idx": 23502, "func": "contains headerfields which are to be displayed", "target": 0}
{"idx": 23503, "func": "//{{{ StyleEditor constructor", "target": 0}
{"idx": 23504, "func": "If we're drawing to an edge then only allow if the start is a comment @see org.argouml.uml.diagram.ui.ModeCreateGraphEdge#isConnectionValid(org.tigris.gef.presentation.Fig, org.tigris.gef.presentation.Fig)", "target": 0}
{"idx": 23505, "func": "//{{{ DirectoryLoadedAWTRequest class", "target": 0}
{"idx": 23506, "func": "//iterate through the ref list & generate an entry for each //or just rely on the fact that the toString operator does this, but //noting that the separator is ';' on windows, ':' on unix", "target": 0}
{"idx": 23507, "func": "Filter out all carriage returns if we've seen any.", "target": 0}
{"idx": 23508, "func": "//{{{ getModeProperties() method", "target": 0}
{"idx": 23509, "func": "-ptime", "target": 0}
{"idx": 23510, "func": "Removed for cut SQL", "target": 0}
{"idx": 23511, "func": "Text font", "target": 0}
{"idx": 23512, "func": "to encoding, same special-casing", "target": 0}
{"idx": 23513, "func": "Fast path since JNA stat is about 10x slower than this", "target": 0}
{"idx": 23514, "func": "used to temporarily store the values while the original viewList gets modified by the close method", "target": 0}
{"idx": 23515, "func": "//jdbc:Cache://cachensw-and:1972/SHDTest", "target": 0}
{"idx": 23516, "func": "needed since project properties are not accessible", "target": 0}
{"idx": 23517, "func": "Condition", "target": 0}
{"idx": 23518, "func": "if we have a specific-arity helper to construct an array for us, use that", "target": 0}
{"idx": 23519, "func": "These do not change during evaluation", "target": 0}
{"idx": 23520, "func": "//The new submachine container is added as listener", "target": 0}
{"idx": 23521, "func": "If a table cell is being edited, we should accept the current value and stop the editing before adding a new row.", "target": 0}
{"idx": 23522, "func": "Add key to dataset", "target": 0}
{"idx": 23523, "func": "//To change body of implemented methods use File | Settings | File Templates.", "target": 0}
{"idx": 23524, "func": "Set properties of the stereotype box.", "target": 0}
{"idx": 23525, "func": "we need to add this jar to the list for this class.", "target": 0}
{"idx": 23526, "func": "The syntax used to add a column to a table", "target": 0}
{"idx": 23527, "func": "If extending an interface, its mix-ins must be included, since there is no implementation to handle them. //", "target": 0}
{"idx": 23528, "func": "Now evaluate the script, getting the result", "target": 0}
{"idx": 23529, "func": "ALTER TABLE localTableName ADD CONSTRAINT constraintName FOREIGN KEY (localColumn1, localColumn2) REFERENCES referencedTableName (referencedColumn1, referencedColumn2) MATCH FULL ON UPDATE RESTRICT ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;", "target": 0}
{"idx": 23530, "func": "end class TableModelClassChecks", "target": 0}
{"idx": 23531, "func": "Evaluation occurs when nbLoops is not yet evaluated or when nbLoops is equal to special value INFINITE_LOOP_COUNT", "target": 0}
{"idx": 23532, "func": "//{{{ loadMenuBar() method", "target": 0}
{"idx": 23533, "func": "//decide whether to copy the existing arg set, or //build a new one from the list of all args excluding the special //operations that only we handle", "target": 0}
{"idx": 23534, "func": "Mask, block from being edited, all characters in constants.", "target": 0}
{"idx": 23535, "func": "Load modules specified by a System property. Modules specified by a system property is for running modules from within Eclipse and running from Java Web Start.", "target": 0}
{"idx": 23536, "func": "the indent-number attribute causes an IllegalArgumentException under 1.4", "target": 0}
{"idx": 23537, "func": "this.updateUI();", "target": 0}
{"idx": 23538, "func": "no bignorm here needed", "target": 0}
{"idx": 23539, "func": "//{{{ getFlag() method", "target": 0}
{"idx": 23540, "func": "The rest only matters for optimistic locking, where we need to establish the proper data version on the region root", "target": 0}
{"idx": 23541, "func": "//i18n[SpecialColumnMapping.SKIP=Skip]", "target": 0}
{"idx": 23542, "func": "//{{{ narrowToFold() method", "target": 0}
{"idx": 23543, "func": "no object, so do not assume binary editing will work", "target": 0}
{"idx": 23544, "func": "The headers are written using ISO_8859_1 encoding //$NON-NLS-1$", "target": 0}
{"idx": 23545, "func": "//{{{ OptionsDialog constructor", "target": 0}
{"idx": 23546, "func": "//turn off DTDs if desired", "target": 0}
{"idx": 23547, "func": "/////////////////////////////////////////////////////////////////////TODO : look at perhaps caching this...", "target": 1}
{"idx": 23548, "func": "desc.add(\"Use fully qualified host name: TRUE/FALSE (Default FALSE)\"); //$NON-NLS-1$", "target": 0}
{"idx": 23549, "func": "//negative exponent; create fractional value //set exact number of fractional digits to be shown:", "target": 0}
{"idx": 23550, "func": "------------------------------------------------------ Helper methods -----------------------------------------------------", "target": 0}
{"idx": 23551, "func": "rb_enc_str_coderange", "target": 0}
{"idx": 23552, "func": "//throws PropertyVetoException", "target": 0}
{"idx": 23553, "func": "Just use the default as fallback", "target": 0}
{"idx": 23554, "func": "offline -> go online", "target": 0}
{"idx": 23555, "func": "Ensures that containing deletions happen before sub-deletions", "target": 0}
{"idx": 23556, "func": "UML spec for Generalizations doesn't call for name", "target": 0}
{"idx": 23557, "func": "//{{{ message() method", "target": 0}
{"idx": 23558, "func": "TODO: Rewriter and compiler assume case when empty expression. In MRI this is just a when. assert caseNode != null : \"caseNode is not null\";", "target": 1}
{"idx": 23559, "func": "i18n[graph.scriptTable=Script table]", "target": 0}
{"idx": 23560, "func": "//i18n[PrimaryKeyTab.title=Primary Key]", "target": 0}
{"idx": 23561, "func": "//{{{ Descriptor class", "target": 0}
{"idx": 23562, "func": "wrong xml-format", "target": 0}
{"idx": 23563, "func": "(non-Javadoc) @see org.columba.mail.folder.event.IFolderListener#folderPropertyChanged(org.columba.mail.folder.event.IFolderEvent)", "target": 0}
{"idx": 23564, "func": "// case SESSION_BEAN_GRANT_AND_REVOKE: // return new FirebirdManagerGrantPreferenceBean();", "target": 0}
{"idx": 23565, "func": "Delete dependencies where this is the only client", "target": 0}
{"idx": 23566, "func": "if only one, clean, 'untitled' buffer is open, we replace it", "target": 0}
{"idx": 23567, "func": "If null, don't draw line at all", "target": 0}
{"idx": 23568, "func": "transfer attachments from view to model clear existing attachments from the model", "target": 0}
{"idx": 23569, "func": "i18n[mysql.hintTabStatus=(MySQL) Table Status]", "target": 0}
{"idx": 23570, "func": "line 1636", "target": 0}
{"idx": 23571, "func": "Create the edit toolbar based on the Menu. All menuItems that have an Icon are presumed to be based upon an Action, and these Actions are used in the toolbar.", "target": 0}
{"idx": 23572, "func": "Compound critics", "target": 0}
{"idx": 23573, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#storesLowerCaseIdentifiers()", "target": 0}
{"idx": 23574, "func": "//{{{ Static part of class", "target": 0}
{"idx": 23575, "func": "getResourceURL", "target": 0}
{"idx": 23576, "func": "-I- or -I-Y or -I-N", "target": 0}
{"idx": 23577, "func": "weakly reserved names", "target": 0}
{"idx": 23578, "func": "use headersHolder.Length here in case headers is null", "target": 0}
{"idx": 23579, "func": "//{{{ indexURL() method", "target": 0}
{"idx": 23580, "func": "(non-Javadoc) @see org.columba.chat.jabber.IBuddyStatus#isSignedOn()", "target": 0}
{"idx": 23581, "func": "20030604, karlpeder Fixed minor flaws to be able to print text messages. Further more added support for html messages.", "target": 0}
{"idx": 23582, "func": "convert the char into its numeric value", "target": 0}
{"idx": 23583, "func": "//not really necessary, but good for consistency...", "target": 0}
{"idx": 23584, "func": "//i18n[ImportFileDialog.fileImport=Import file]", "target": 0}
{"idx": 23585, "func": "//the criteria instance", "target": 0}
{"idx": 23586, "func": "10300..1032F;", "target": 0}
{"idx": 23587, "func": "@see org.argouml.uml.diagram.activity.ui.SelectionActionState#getNewNodeType(int)", "target": 0}
{"idx": 23588, "func": "get the cache, so we can check our things", "target": 0}
{"idx": 23589, "func": "Compute the relative index as best as possible. //", "target": 0}
{"idx": 23590, "func": "//Default is empty string", "target": 0}
{"idx": 23591, "func": "'paint' : immutable, no need to clone reference", "target": 0}
{"idx": 23592, "func": "todo : what else to do here?", "target": 1}
{"idx": 23593, "func": "check if we need to collect chart entities from the container", "target": 0}
{"idx": 23594, "func": "Note we assume members are ordered correctly already", "target": 0}
{"idx": 23595, "func": "Loaded entity instances, by EntityUniqueKey", "target": 0}
{"idx": 23596, "func": "FieldInterceptor impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 23597, "func": "//{{{ DockablePanel constructor", "target": 0}
{"idx": 23598, "func": "optimization for common case", "target": 0}
{"idx": 23599, "func": "create the \"undeployed\" output .jar, if required", "target": 0}
{"idx": 23600, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.client.preferences.IGlobalPreferencesPanel#uninitialize(net.sourceforge.squirrel_sql.client.IApplication)", "target": 0}
{"idx": 23601, "func": "check if this folder is overwriting global options", "target": 0}
{"idx": 23602, "func": "For JSR 223 support: see http://scripting.java.net/", "target": 0}
{"idx": 23603, "func": "If the token can tell us if it could be an identifier...", "target": 0}
{"idx": 23604, "func": "Add a default PLAIN login as fallback", "target": 0}
{"idx": 23605, "func": "The ActivityGraph.", "target": 0}
{"idx": 23606, "func": "loop through all the associations of the current entity and make sure that they are processed before the current batch number", "target": 0}
{"idx": 23607, "func": "Can't this be combined with run() ? run seems to have stuff in it for interactive vs. non-interactive... compare them side by side and see what they do differently, aside from the exception handling.", "target": 1}
{"idx": 23608, "func": "Assert is flawed because canWrite does not work. assertTrue(\"File f1 Is Set To ReadOnly.\" , f1.canWrite());", "target": 0}
{"idx": 23609, "func": "i18n[Application.error.closeFileViewers=Unable to close all file viewers]", "target": 0}
{"idx": 23610, "func": "read results...", "target": 0}
{"idx": 23611, "func": "Get the implementations of this operations and look for an OpaqueBehavior.", "target": 0}
{"idx": 23612, "func": "we have at least one potential address", "target": 0}
{"idx": 23613, "func": "Character read before previous read", "target": 0}
{"idx": 23614, "func": "$NON-NLS-1$ $NON-NLS-1$", "target": 0}
{"idx": 23615, "func": "TODO: consider inherited attributes?", "target": 1}
{"idx": 23616, "func": "BLOB cannot be used in WHERE clause", "target": 0}
{"idx": 23617, "func": "An expression with more that 931 \"+\" will break Sun and IBM javac compilers. //", "target": 0}
{"idx": 23618, "func": "//TODO: GenNavigableClasses?", "target": 0}
{"idx": 23619, "func": "reinit the callstack", "target": 0}
{"idx": 23620, "func": "!persister.isCacheInvalidationRequired()", "target": 0}
{"idx": 23621, "func": "VSS Info is required", "target": 0}
{"idx": 23622, "func": "Create the split pane", "target": 0}
{"idx": 23623, "func": "if buffer is loading, don't paint anything", "target": 0}
{"idx": 23624, "func": "Tested with fabricated XMI - OK.", "target": 0}
{"idx": 23625, "func": "Set up a VSSCreate task", "target": 0}
{"idx": 23626, "func": "enable tracking for nodes that have string content", "target": 0}
{"idx": 23627, "func": "Use the OS VM launcher so we get environment variables", "target": 0}
{"idx": 23628, "func": "Implements TestStateListener.testEnded(String)", "target": 0}
{"idx": 23629, "func": "Create the font-change dialog", "target": 0}
{"idx": 23630, "func": "i18n[dataTypeString.newlines=Show newlines as \\\\n within cells]", "target": 0}
{"idx": 23631, "func": "When the table initiates editing and sets this field, remember the value as the original value of the field", "target": 0}
{"idx": 23632, "func": "throw new IllegalArgumentException();", "target": 0}
{"idx": 23633, "func": "if a mask for this argument exists", "target": 0}
{"idx": 23634, "func": "//{{{ spacesToTabs() method", "target": 0}
{"idx": 23635, "func": "File where current executing unit is being evaluated", "target": 0}
{"idx": 23636, "func": "//setText(\"!!\");", "target": 0}
{"idx": 23637, "func": "nil pad since we provided less values than block parms", "target": 0}
{"idx": 23638, "func": "boolean hasPackages = false; TODO: move \"package in row\" to NodeRow", "target": 0}
{"idx": 23639, "func": "maintain original behaviour", "target": 0}
{"idx": 23640, "func": "roseCenterPaint", "target": 0}
{"idx": 23641, "func": "get to 'path' part of the URL, preserving schema, auth, host if present", "target": 0}
{"idx": 23642, "func": "Fill 68 of value (byte) -19 Fill 9 of value (byte) 33 Fill 36 of value (byte) -19 Fill 3 of value (byte) 33 Fill 2 of value (byte) -19 Fill 4 of value (byte) 33 Fill 30 of value (byte) -19 Fill 56 of value (byte) 33 Fill 89 of value (byte) -19 Fill 18 of value (byte) 33 Fill 7 of value (byte) -19 Fill 14 of value (byte) 33 Fill 2 of value (byte) -87 Fill 46 of value (byte) 33 Fill 70 of value (byte) -87 Fill 26 of value (byte) 33 Fill 2 of value (byte) -87 Fill 36 of value (byte) 33", "target": 0}
{"idx": 23643, "func": "cascade first, so that all unsaved objects get their copy created before we actually copy //cascadeOnMerge(event, persister, entity, copyCache, Cascades.CASCADE_BEFORE_MERGE);", "target": 0}
{"idx": 23644, "func": "Discard the old editing domain. //", "target": 0}
{"idx": 23645, "func": "i18n[popupeditableIoPanel.errorGettingPath=Error getting full path name for selected file]", "target": 0}
{"idx": 23646, "func": "private static final String ROOTDN = \"rootDn\"; private static final String TEST = \"tesT\"; private static String testValue=\"NNNN\";", "target": 0}
{"idx": 23647, "func": "TRY THE ACTIONS", "target": 0}
{"idx": 23648, "func": "This presumes that the layer is set after the owner:", "target": 0}
{"idx": 23649, "func": "create a panel with a border and 3 options columns rows", "target": 0}
{"idx": 23650, "func": "Dummy for testing functions", "target": 0}
{"idx": 23651, "func": "i18n[SchemaPropertiesController.cacheToDelNotExists=Cache file for Alias \"{0}\" does not exist. No file was deleted]", "target": 0}
{"idx": 23652, "func": "un-mark messages", "target": 0}
{"idx": 23653, "func": "reset the bsh.Interpreter before each execution", "target": 0}
{"idx": 23654, "func": "Copy the current in the previous", "target": 0}
{"idx": 23655, "func": "i18n[SchemaPropertiesController.cacheFilePathNotExists=Cache file for Alias \"{0}\" does not exist. If it existed the path would be: {1}]", "target": 0}
{"idx": 23656, "func": "fucking GTK look and feel!", "target": 1}
{"idx": 23657, "func": "Add titles that don't need to be documented //guiTitles.put(\"Root\", Boolean.FALSE);", "target": 0}
{"idx": 23658, "func": "Simplify the variables too -- to keep these variables in sync with what is actually used in the when clauses This is not required for correctness reasons, but only for performance reasons.", "target": 1}
{"idx": 23659, "func": "Needed for initialisations:", "target": 0}
{"idx": 23660, "func": "@see org.argouml.model.VisibilityKind#getPublic()", "target": 0}
{"idx": 23661, "func": "Locate the variable definition if it exists.", "target": 0}
{"idx": 23662, "func": "////////////////////////////////////////////////////////////", "target": 0}
{"idx": 23663, "func": "Empty delimiter", "target": 0}
{"idx": 23664, "func": "//{{{ Paint line numbers", "target": 0}
{"idx": 23665, "func": "CellConstraints cc = new CellConstraints();", "target": 0}
{"idx": 23666, "func": "Animations for text", "target": 0}
{"idx": 23667, "func": "Remember that children are not TreeNodes but UserObjects", "target": 0}
{"idx": 23668, "func": "Set object tree color button", "target": 0}
{"idx": 23669, "func": "If the model repository doesn't manage a DI model then we must generate our Figs by inspecting PGML", "target": 0}
{"idx": 23670, "func": "comparisons & checks checks if the operand is non-null and non-false EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...", "target": 0}
{"idx": 23671, "func": "case of a backward jump with an offset < -32768. In this case we automatically replace GOTO with GOTO_W, JSR with JSR_W and IFxxx <l> with IFNOTxxx <l'> GOTO_W <l>, where IFNOTxxx is the \"opposite\" opcode of IFxxx (i.e., IFNE for IFEQ) and where <l'> designates the instruction just after the GOTO_W.", "target": 0}
{"idx": 23672, "func": "remove action sets, dockables, etc so that user doesn't see the broken plugin", "target": 0}
{"idx": 23673, "func": "create subplot 2...", "target": 0}
{"idx": 23674, "func": "//i18n[MainFrame.restoreSize=Restore saved size]", "target": 0}
{"idx": 23675, "func": "//{{{ finalize() method", "target": 0}
{"idx": 23676, "func": "line 1942", "target": 0}
{"idx": 23677, "func": "this occurs when id == 0 and user has not supplied a descriptor for arguments", "target": 0}
{"idx": 23678, "func": "here we could probably be a little faster by searching for both indices simultaneously, but I'll look at that later if it seems like it matters...", "target": 1}
{"idx": 23679, "func": "iterate over all data items and update mins and maxes", "target": 0}
{"idx": 23680, "func": "Just return the default.", "target": 0}
{"idx": 23681, "func": "//{{{ getMacro() method", "target": 0}
{"idx": 23682, "func": "date formatters", "target": 0}
{"idx": 23683, "func": "//{{{ getCapabilities() method", "target": 0}
{"idx": 23684, "func": "//{{{ getValues() method", "target": 0}
{"idx": 23685, "func": "user did not enter seconds", "target": 0}
{"idx": 23686, "func": "handle body and attachments", "target": 0}
{"idx": 23687, "func": "Need to initialize", "target": 0}
{"idx": 23688, "func": "////////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 23689, "func": "Process the listeners last to first, notifying those that are interested in this event.", "target": 0}
{"idx": 23690, "func": "package-protected to allow access by unit-test cases", "target": 0}
{"idx": 23691, "func": "Allow for the old JMX file which used the local language string", "target": 0}
{"idx": 23692, "func": "first search for the \"old\" javah class in 1.4.2 tools.jar", "target": 0}
{"idx": 23693, "func": "Get all the select expressions (that we just generated) and render the select.", "target": 0}
{"idx": 23694, "func": "Some dbs (like McKoi) make -1 the default for scale. Apply the same hack as above.", "target": 1}
{"idx": 23695, "func": "default implementation does nothing", "target": 0}
{"idx": 23696, "func": "//{{{ download() method", "target": 0}
{"idx": 23697, "func": "deprecated, but email is byte-oriented", "target": 0}
{"idx": 23698, "func": "and the qualifier is not the alias of this criteria -> check to see if we belong to some criteria other than the one that created us", "target": 0}
{"idx": 23699, "func": "java.util.Calendar stamp = event.getDtStamp();", "target": 0}
{"idx": 23700, "func": "//{{{ handleToken() method", "target": 0}
{"idx": 23701, "func": "No exceptions during logging", "target": 0}
{"idx": 23702, "func": "//{{{ resolveSymlinks() method", "target": 0}
{"idx": 23703, "func": "//{{{ updateMultiStatus() method", "target": 0}
{"idx": 23704, "func": "try again", "target": 0}
{"idx": 23705, "func": "Process all transactions", "target": 0}
{"idx": 23706, "func": "The connect method specifying a connection type by class is unavailable in the ArgoUML implementation. TODO: This should be unsupported. Use the 3 Object version {@inheritDoc}", "target": 1}
{"idx": 23707, "func": "//{{{ dump() method", "target": 0}
{"idx": 23708, "func": "Show hidden files", "target": 0}
{"idx": 23709, "func": "//{{{ noRepeat() method", "target": 0}
{"idx": 23710, "func": "Construct body", "target": 0}
{"idx": 23711, "func": "If this is the same name specified in 'manifest', this is the manifest to use", "target": 0}
{"idx": 23712, "func": "The following does not seem to work - centered the Fig instead. getNameFig().setJustificationByName(\"center\");", "target": 0}
{"idx": 23713, "func": "TODO: This is using internal knowledge of GEF. It should handle this itself. - tfm MVW: Move into something like Main.initGEF()", "target": 1}
{"idx": 23714, "func": "no property", "target": 0}
{"idx": 23715, "func": "descriptorName is just a file without path", "target": 0}
{"idx": 23716, "func": "the second child must be the pgp-signature", "target": 0}
{"idx": 23717, "func": "bsh.interactive", "target": 0}
{"idx": 23718, "func": "TODO: Add referenceValue for tagged values which have a non-primitive type", "target": 0}
{"idx": 23719, "func": "specifies valid elements for a classifier to contain", "target": 0}
{"idx": 23720, "func": "int majorVersion =", "target": 0}
{"idx": 23721, "func": "Builds an actor in the same namespace as the given actor. If the object is not and actor nothing is built.<p> TODO: This shouldn't just silently fail if it is passed a bad argument. This contract will change. - tfm 20070607 @param model The namespace. @param actor the given actor @return Actor the newly built actor", "target": 1}
{"idx": 23722, "func": "@see org.tigris.gef.base.ModeCreatePolyEdge#mouseReleased(java.awt.event.MouseEvent)", "target": 0}
{"idx": 23723, "func": "compute slope components", "target": 0}
{"idx": 23724, "func": "Deliberate use of deprecated ctor Create non-GUI version to avoid headless problems", "target": 0}
{"idx": 23725, "func": "called from ctor, so must not be overridable", "target": 0}
{"idx": 23726, "func": "//{{{ FirewallOptionPane constructor", "target": 0}
{"idx": 23727, "func": "double the quote char", "target": 0}
{"idx": 23728, "func": ", ReflectError, InvocationTargetException", "target": 0}
{"idx": 23729, "func": "//calendar stuff.", "target": 0}
{"idx": 23730, "func": "synchronousMode==true", "target": 0}
{"idx": 23731, "func": "$NON-NLS-1$ TODO - use a different format here?", "target": 1}
{"idx": 23732, "func": "XXX is the following really necessary? it is in the same thread group...", "target": 1}
{"idx": 23733, "func": "NON-DIGIT OPERATOR \\D", "target": 0}
{"idx": 23734, "func": "//{{{ Range constructor", "target": 0}
{"idx": 23735, "func": "Set the range so that we re-check when we get aren't in the middle. //", "target": 0}
{"idx": 23736, "func": "setEditor(null, null, -1);", "target": 0}
{"idx": 23737, "func": "-1 to disable the write limit", "target": 0}
{"idx": 23738, "func": "---- freebusyTextField ----", "target": 0}
{"idx": 23739, "func": "Don't care to see tons of debug from ColTypeMapper", "target": 0}
{"idx": 23740, "func": "sizes must match", "target": 0}
{"idx": 23741, "func": "how to use Timestamp in WHERE clauses default to SQL standard", "target": 0}
{"idx": 23742, "func": "PUSH(0). If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.", "target": 0}
{"idx": 23743, "func": "check if there is a cached version first", "target": 0}
{"idx": 23744, "func": "other options", "target": 0}
{"idx": 23745, "func": "Highlight (select) the appropriate row.", "target": 0}
{"idx": 23746, "func": "Figure out if this is a start tag or an empty element, and dispatch an event accordingly.", "target": 0}
{"idx": 23747, "func": "create group containing first contact", "target": 0}
{"idx": 23748, "func": "Set the new variables. //", "target": 0}
{"idx": 23749, "func": "draw the lower shadow", "target": 0}
{"idx": 23750, "func": "try a Double.NaN", "target": 0}
{"idx": 23751, "func": "Catch any statements not followed by ;", "target": 0}
{"idx": 23752, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsDataDefinitionAndDataManipulationTransactions()", "target": 0}
{"idx": 23753, "func": "text anchor", "target": 0}
{"idx": 23754, "func": "Even if reallyExit is false, we still exit properly if background mode is off", "target": 0}
{"idx": 23755, "func": "ignore path elements which are not valid relative to the project", "target": 0}
{"idx": 23756, "func": "Mix files and directories", "target": 0}
{"idx": 23757, "func": "contacts item", "target": 0}
{"idx": 23758, "func": "whitespace; include in word if eating", "target": 0}
{"idx": 23759, "func": "tell user that there was a problem i18n[baseDataSetViewerDestination.error=Error]", "target": 0}
{"idx": 23760, "func": "line 1749", "target": 0}
{"idx": 23761, "func": "delete Includes where this is the addition", "target": 0}
{"idx": 23762, "func": "correct value!", "target": 0}
{"idx": 23763, "func": "If we do not get any sub samplers, the transaction is done", "target": 0}
{"idx": 23764, "func": "TODO: We could generalize this to initialize more stuff if needed", "target": 1}
{"idx": 23765, "func": "saving the last selection for the current folder", "target": 0}
{"idx": 23766, "func": "Assumes some kind of list is use If not using a list that retains the order, then the asserts would need to change", "target": 0}
{"idx": 23767, "func": "ALTER TABLE test3 ALTER COLUMN nullvc varchar(30)", "target": 0}
{"idx": 23768, "func": "text put in file name field to indicate that we should create a temp file for export", "target": 0}
{"idx": 23769, "func": "reopen the project and assert that the MetaProfile isn't part of the profile configuration, including the fact that the stereotype <<Critic>> isn't found", "target": 0}
{"idx": 23770, "func": "no-op", "target": 0}
{"idx": 23771, "func": "initialize test environment (called \"bed\")", "target": 0}
{"idx": 23772, "func": "Get all the relationships, that this model element has. and filter everything, that is not an import.", "target": 0}
{"idx": 23773, "func": "no need to lock since this just returns a value and that's it", "target": 0}
{"idx": 23774, "func": "set small icon for menu putValue(SMALL_ICON, ImageLoader.getImageIcon(\"stock_convert-16.png\"));", "target": 0}
{"idx": 23775, "func": "TODO: needs I18N", "target": 1}
{"idx": 23776, "func": "While False, previous sample failed - should not run", "target": 0}
{"idx": 23777, "func": "//{{{ isMarkerHighlightEnabled() method", "target": 0}
{"idx": 23778, "func": "is there an override?", "target": 0}
{"idx": 23779, "func": "Start interception UI interactions", "target": 0}
{"idx": 23780, "func": "//utterly implausible, but catered for anyway", "target": 0}
{"idx": 23781, "func": "Fill 6 of value (byte) -87 Fill 4 of value (byte) 33 Fill 6 of value (byte) -87", "target": 0}
{"idx": 23782, "func": "we create a new but empty chartMouseListeners list", "target": 0}
{"idx": 23783, "func": "fire all of the diagram events", "target": 0}
{"idx": 23784, "func": "//{{{ Insert constructor", "target": 0}
{"idx": 23785, "func": "LIMIT support (ala TOP) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 23786, "func": "for DOM4J \"collections\" only TODO: it would be better if this was done at the higher level by Printer", "target": 1}
{"idx": 23787, "func": "don't sort markers while buffer is being loaded", "target": 0}
{"idx": 23788, "func": "i18n[userscript.selScriptToExec=Please select the script to execute]", "target": 0}
{"idx": 23789, "func": "axis", "target": 0}
{"idx": 23790, "func": "This Map serves two purposes: - maps file names to containers - ensures only one container per file across all threads", "target": 0}
{"idx": 23791, "func": "Set the content type TODO - needed? String multiPartContentType = multiPart.getContentType().getValue(); post.setHeader(HEADER_CONTENT_TYPE, multiPartContentType);", "target": 1}
{"idx": 23792, "func": "let's create a new ClassifierInState with the correct links", "target": 0}
{"idx": 23793, "func": "Prefix identified as an implementation specific class. TODO: This should be generalized so it doesn't have to be changed each time a new implementation is created - tfm 20051109", "target": 1}
{"idx": 23794, "func": "Overwrite the method to maintain line breaks when copying messages form the MessageViewer. @author aoki-y @see javax.swing.text.html.HTMLDocument#getReader(int)", "target": 0}
{"idx": 23795, "func": "@see javax.swing.ListModel#getSize()", "target": 0}
{"idx": 23796, "func": "draw the Y axis", "target": 0}
{"idx": 23797, "func": "//yyLen 496", "target": 0}
{"idx": 23798, "func": "?s | int/nil | If file1 has nonzero size, return the size, otherwise nil", "target": 0}
{"idx": 23799, "func": "//_colDefs = hdgs;", "target": 0}
{"idx": 23800, "func": "Add mouse listener for displaying popup menu.", "target": 0}
{"idx": 23801, "func": "line 1210", "target": 0}
{"idx": 23802, "func": "GWG format check code follows...", "target": 0}
{"idx": 23803, "func": "TODO assert modelElement != null???", "target": 0}
{"idx": 23804, "func": "The where clause was added to eliminate this statement from Brute Force Searches.", "target": 0}
{"idx": 23805, "func": "TODO: Hard coded -. JDBC/ODBC bridge JDK1.4 brings back -9 for nvarchar columns in MS SQL Server tables. -8 is ROWID in Oracle.", "target": 1}
{"idx": 23806, "func": "get filter", "target": 0}
{"idx": 23807, "func": "should throw exception back to caller", "target": 0}
{"idx": 23808, "func": "//NOT USED protected static final String TAG_URL = \"requestUrl\"; //$NON-NLS-1$", "target": 0}
{"idx": 23809, "func": "Normalize the reference directory (containing the jar)", "target": 0}
{"idx": 23810, "func": "positiveItemLabelPosition;", "target": 0}
{"idx": 23811, "func": "//add more space between the label and the button", "target": 0}
{"idx": 23812, "func": "////////////////////////////////////////////////////////////////////Constructors. ////////////////////////////////////////////////////////////////////////", "target": 0}
{"idx": 23813, "func": "remove everything which is not A-Za-z0-9-_", "target": 0}
{"idx": 23814, "func": "@see org.tigris.gef.presentation.FigNode#getPortFig(java.lang.Object)", "target": 0}
{"idx": 23815, "func": "//{{{ showEvaluateLinesDialog() method", "target": 0}
{"idx": 23816, "func": "Per Schema 1.0 it is not clear if the result returned should be a valid URI. For the future if we plant to support IRIs then it is better not to massage the initialValue. We should thought consider where would be the best way to validate anyURI values -- EL", "target": 1}
{"idx": 23817, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsAlterTableWithDropColumn()", "target": 0}
{"idx": 23818, "func": "//{{{ loadGeometry() method", "target": 0}
{"idx": 23819, "func": "@see javax.swing.tree.TreeModel#addTreeModelListener(javax.swing.event.TreeModelListener)", "target": 0}
{"idx": 23820, "func": "Attribute methods //", "target": 0}
{"idx": 23821, "func": "push args", "target": 0}
{"idx": 23822, "func": "//System.err.println(\"x overflow\");", "target": 0}
{"idx": 23823, "func": "this is called by SessionFactory irregardless; we just disregard here; could also add a check to SessionFactory to only conditionally call start", "target": 1}
{"idx": 23824, "func": "checkOnly", "target": 0}
{"idx": 23825, "func": "we recalculate all the activations", "target": 0}
{"idx": 23826, "func": "///////////////////////////////////////////////////////////////////////event handlers - MouseListener and MouseMotionListener implementation", "target": 0}
{"idx": 23827, "func": "setRowMargin(5);", "target": 0}
{"idx": 23828, "func": "The class of this object", "target": 0}
{"idx": 23829, "func": "column 1 is internal name", "target": 0}
{"idx": 23830, "func": "Require destDir", "target": 0}
{"idx": 23831, "func": "when the dataset contains one or more series, but those series contain no items, we expect the value range to be null", "target": 0}
{"idx": 23832, "func": "3300..33FF;", "target": 0}
{"idx": 23833, "func": "@see org.argouml.uml.diagram.ui.PathContainer#isPathVisible()", "target": 0}
{"idx": 23834, "func": "i18n[MemoryPanel.sessionInfo.toString3=Session: ID={0}, Alias={1}: created at {2}, closed at {3}, finalized at {4}]", "target": 0}
{"idx": 23835, "func": "check for match at start of line", "target": 0}
{"idx": 23836, "func": "Time and Date Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "target": 0}
{"idx": 23837, "func": "vars will be null on TestPlan", "target": 0}
{"idx": 23838, "func": "jContentPane.add(getJchbBold(), gridBagConstraints2); jContentPane.add(getJchbItalic(), gridBagConstraints3);", "target": 0}
{"idx": 23839, "func": "Buffered Images may have properties, but NEVER disclose them! Nevertheless, just in case someone implements getPropertyNames() one day...", "target": 0}
{"idx": 23840, "func": "default: normal //$NON-NLS-1$", "target": 0}
{"idx": 23841, "func": "Dialog is shown only when it is written to.", "target": 0}
{"idx": 23842, "func": "return sqrt(squarD) with precision of rootMC", "target": 0}
{"idx": 23843, "func": "//{{{ scrollUp() method", "target": 0}
{"idx": 23844, "func": "(non-Javadoc) @see org.columba.mail.imap.IImapServer#getMimePartSourceStream(java.lang.Object, java.lang.Integer[], org.columba.mail.folder.imap.IMAPFolder)", "target": 0}
{"idx": 23845, "func": "If we can't determine it by reading the file, look at the preferences instead.", "target": 0}
{"idx": 23846, "func": "XML Schema anyURI specific information //", "target": 0}
{"idx": 23847, "func": "Tests whether this URI's path segment array is equal to that of the given uri.", "target": 0}
{"idx": 23848, "func": "Check that the request and response matches", "target": 0}
{"idx": 23849, "func": "Thin bar to show current allocated heap size", "target": 0}
{"idx": 23850, "func": "Support IO modes that this object was opened with", "target": 0}
{"idx": 23851, "func": "Add the default listener", "target": 0}
{"idx": 23852, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#copyStarted()", "target": 0}
{"idx": 23853, "func": "return the newly created 'untitled-1'", "target": 0}
{"idx": 23854, "func": "If the array hasn't been flagged to indicate otherwise swap elements the elemnts and add again.", "target": 0}
{"idx": 23855, "func": "//{{{ readMap() method", "target": 0}
{"idx": 23856, "func": "tables that have at least one parent table", "target": 0}
{"idx": 23857, "func": "Fill 7 of value (byte) -19 Fill 3 of value (byte) 33 Fill 4 of value (byte) -19 Fill 2 of value (byte) 33 Fill 6 of value (byte) -19 Fill 4 of value (byte) 33 Fill 13 of value (byte) -19 Fill 5 of value (byte) 33 Fill 3 of value (byte) -19", "target": 0}
{"idx": 23858, "func": "check if tar is out of date with respect to each fileset", "target": 0}
{"idx": 23859, "func": "Builds a compositestate as top for some statemachine.<p> TODO: Confusing name: this method should better be named buildTopStateOnStateMachine. @param statemachine The given statemachine @return MCompositeState The newly build top state @see #buildCompositeState(Object)", "target": 1}
{"idx": 23860, "func": "build the rdiff command", "target": 0}
{"idx": 23861, "func": "TODO: handle writing into original buffer better", "target": 1}
{"idx": 23862, "func": "So, the target is a MAssociationRole", "target": 0}
{"idx": 23863, "func": "extras flag", "target": 0}
{"idx": 23864, "func": "Constructor. @param me an Object", "target": 0}
{"idx": 23865, "func": "check the proxy", "target": 0}
{"idx": 23866, "func": "Initialize a simple Frame.", "target": 0}
{"idx": 23867, "func": "TODO: This whole block can be deleted when issue 6266 is resolved", "target": 1}
{"idx": 23868, "func": "TODO: pipe handler to be reopened with path and \"w\" mode", "target": 1}
{"idx": 23869, "func": "//SQLExecuterTask task = new SQLExecuterTask(_session, sql, new DefaultSQLExecuterHandler(_session)); //jmh to run async_session.getApplication().getThreadPool().addTask(task); //jmhtask.run(); //Set the ? to the statement identifier", "target": 0}
{"idx": 23870, "func": "TODO: Silently ignore instead? return false;", "target": 1}
{"idx": 23871, "func": "Status bar visible", "target": 0}
{"idx": 23872, "func": "TODO: Is this adequate for finding profiles in Java WebStart jars? - tfm", "target": 1}
{"idx": 23873, "func": "N.B. this needs to be done before opening the connection", "target": 0}
{"idx": 23874, "func": "fuck me dead", "target": 1}
{"idx": 23875, "func": "LRUMap does not support generics (yet)", "target": 0}
{"idx": 23876, "func": "Stereotype covers NameFig:", "target": 0}
{"idx": 23877, "func": "on insert, start search from beginning of current match. This will continue to highlight the current match until another match is found", "target": 0}
{"idx": 23878, "func": "line 388", "target": 0}
{"idx": 23879, "func": "bsh.help", "target": 0}
{"idx": 23880, "func": "now drop the first", "target": 0}
{"idx": 23881, "func": "interface TypeValidator", "target": 0}
{"idx": 23882, "func": "//may be final //may be final //may be final", "target": 0}
{"idx": 23883, "func": "//$NON_NLS-1$ //$NON_NLS-1$", "target": 0}
{"idx": 23884, "func": "Now convert the path and file separator characters from the current os to the target os.", "target": 0}
{"idx": 23885, "func": "Finished editing. Parse the text that was edited. Only the role is editable, hence:", "target": 0}
{"idx": 23886, "func": "FIXME: No, I don't like it.", "target": 1}
{"idx": 23887, "func": "use new viewitem", "target": 0}
{"idx": 23888, "func": "Should we allow directories?", "target": 0}
{"idx": 23889, "func": "root x is ready!", "target": 0}
{"idx": 23890, "func": "Embedded", "target": 0}
{"idx": 23891, "func": "data.currentFile.callMethod(context, \"lineno=\", line);", "target": 0}
{"idx": 23892, "func": "Find the uppermost class loader in the hierarchy that can load the class. //", "target": 0}
{"idx": 23893, "func": "Deliberate use of deprecated method", "target": 0}
{"idx": 23894, "func": "//otherwise parent must be an offending design material", "target": 0}
{"idx": 23895, "func": "NOT USED transient protected ThreadGroup THREADGROUP = null; Anyway, was this supposed to be the class from java.lang, or jmeter.threads?", "target": 1}
{"idx": 23896, "func": "this probably cannot happen", "target": 0}
{"idx": 23897, "func": "//{{{ Package-private members", "target": 0}
{"idx": 23898, "func": "horizontal resizing", "target": 0}
{"idx": 23899, "func": "shortcut key //putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_F, 0));", "target": 0}
{"idx": 23900, "func": "Remove duplicates or the mail address from the receiver account", "target": 0}
{"idx": 23901, "func": "Fix the content length", "target": 0}
{"idx": 23902, "func": "//{{{ Button class", "target": 0}
{"idx": 23903, "func": "if not, check if there is a stroke defined for the specified key", "target": 0}
{"idx": 23904, "func": "Set object tree color panel", "target": 0}
{"idx": 23905, "func": "forget the cached Position instance", "target": 0}
{"idx": 23906, "func": "Do nothing; subclasses may override.", "target": 0}
{"idx": 23907, "func": "@see org.argouml.uml.cognitive.critics.UMLWizard#getNumSteps()", "target": 0}
{"idx": 23908, "func": "//{{{ getMemberCount() method", "target": 0}
{"idx": 23909, "func": "only needed if calculating percentages", "target": 0}
{"idx": 23910, "func": "TODO: tell the user that the selected destination schema is the same as the source schema. //monitor.showMessageDialog(...)", "target": 0}
{"idx": 23911, "func": "PUT exclusions in test", "target": 0}
{"idx": 23912, "func": "Set name", "target": 0}
{"idx": 23913, "func": "if are dealing with original, not cloned node", "target": 0}
{"idx": 23914, "func": "line 1485", "target": 0}
{"idx": 23915, "func": "//commonTaggedValueTypes.add(org.eclipse.uml2.uml.resource.UMLResource.)", "target": 0}
{"idx": 23916, "func": "Test needs to run in this package in order to give access to AbstractTestElement.addProperty()", "target": 0}
{"idx": 23917, "func": "up-pointing triangle", "target": 0}
{"idx": 23918, "func": "This is the \"main\" class for the GUI subsystem.<p> Users of the GUI subsystem, i.e. components that are to place themselves in any of the GUI components, register themselves in this class.<p> TODO: Add the rest of the registers to this. @author Linus Tolke @since 0.21.3", "target": 1}
{"idx": 23919, "func": "@see org.argouml.persistence.AbstractFilePersister#getExtension()", "target": 0}
{"idx": 23920, "func": "create new stacked box", "target": 0}
{"idx": 23921, "func": "Is the parser currently within a method definition", "target": 0}
{"idx": 23922, "func": "check if script directory exists", "target": 0}
{"idx": 23923, "func": "@bgen(jjtree) FormalParameter", "target": 0}
{"idx": 23924, "func": "TabResults has really large preferred height, so divide in half to reduce size of dialog which will be sized based on this preferred size.", "target": 0}
{"idx": 23925, "func": "Default checked $NON-NLS-1$", "target": 0}
{"idx": 23926, "func": "XXX could perhaps also call thread.stop(); not sure if anyone cares", "target": 1}
{"idx": 23927, "func": "This should work now that they both have names", "target": 0}
{"idx": 23928, "func": "Fill 6 of value (byte) -87 Fill 3 of value (byte) 33 Fill 2 of value (byte) -87 Fill 2 of value (byte) 33 Fill 3 of value (byte) -87 Fill 8 of value (byte) 33 Fill 2 of value (byte) -87 Fill 4 of value (byte) 33 Fill 2 of value (byte) -19", "target": 0}
{"idx": 23929, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsOuterJoins()", "target": 0}
{"idx": 23930, "func": "last item in series, draw the lot... set up the alpha-transparency...", "target": 0}
{"idx": 23931, "func": "try a multi-part netware-volume length path with UNIX separator (this testcase if from an actual bug that was found, in AvailableTest, which uses PathTokenizer)", "target": 0}
{"idx": 23932, "func": "dreaded backwards compatibility", "target": 0}
{"idx": 23933, "func": "Need to reset properties that were cached defaults, since the defaults might have changed.", "target": 0}
{"idx": 23934, "func": "TODO: no separate SyncState in UML 2.1 - tfm", "target": 0}
{"idx": 23935, "func": "(non-Javadoc) @see org.columba.mail.folderoptions.AbstractFolderOptionsPlugin#restoreUISettings()", "target": 0}
{"idx": 23936, "func": "Fix up bad figs. <p> Due to errors in earlier releases of argouml it can happen that there is a generalization without a child or parent. <p> TODO: Move into XSL. We should not remove from the graph model while we're writing to it or we have a possible cause of concurrent modification exception. @param owner", "target": 1}
{"idx": 23937, "func": "will always be within range of an int: as must be < width", "target": 0}
{"idx": 23938, "func": "The name of the sampler", "target": 0}
{"idx": 23939, "func": "If default port for protocol is used, we do not include port in URL", "target": 0}
{"idx": 23940, "func": "add the insets", "target": 0}
{"idx": 23941, "func": "Empty box //$NON-NLS-1$", "target": 0}
{"idx": 23942, "func": "NOT USED", "target": 0}
{"idx": 23943, "func": "Test for toURL with a file.", "target": 0}
{"idx": 23944, "func": "Just add \"sourcepath\" to classpath ( for JDK1.1 ) as well as \"bootclasspath\" and \"extdirs\"", "target": 0}
{"idx": 23945, "func": "The Interval is involved even if pos lied one point before or after the interval. This way for example we get -- Select ... out of comment coloring when the first \"-\" is removed.", "target": 0}
{"idx": 23946, "func": "keep scanning until we're either EOL or find a different filegroup.", "target": 0}
{"idx": 23947, "func": "SUBCLASSES", "target": 0}
{"idx": 23948, "func": "Parameter list", "target": 0}
{"idx": 23949, "func": "specifies valid elements for an Event to contain", "target": 0}
{"idx": 23950, "func": "do any queued AWT runnables", "target": 0}
{"idx": 23951, "func": "private JLabel l_date, l_year, l_month;", "target": 0}
{"idx": 23952, "func": "//MParameter", "target": 0}
{"idx": 23953, "func": "we need to work out if the previous year has 52 or 53 weeks...", "target": 0}
{"idx": 23954, "func": "check if it's true, ending if so", "target": 0}
{"idx": 23955, "func": "proxy module for interfaces", "target": 0}
{"idx": 23956, "func": "TODO (@author fdietz): add import feature", "target": 1}
{"idx": 23957, "func": "row count", "target": 0}
{"idx": 23958, "func": "mark message as answered", "target": 0}
{"idx": 23959, "func": "Note: do not change this to BshClassManager plainClassForName() or equivalent. This class must not touch any other bsh classes.", "target": 0}
{"idx": 23960, "func": "start at front", "target": 0}
{"idx": 23961, "func": "-1 means not defined", "target": 0}
{"idx": 23962, "func": "CopyTableListener interface methods", "target": 0}
{"idx": 23963, "func": "TODO: Without the null check the following throws a NPE so many times when it is called from FigEdgeModelElement.modelChanged(), we need to think about it.", "target": 1}
{"idx": 23964, "func": "The back end needs a place to store the MTF values whilst it calculates the coding tables. We could put them in the zptr array. However, these values will fit in a short, so we overlay szptr at the start of zptr, in the hope of reducing the number of cache misses induced by the multiple traversals of the MTF values when calculating coding tables. Seems to improve compression speed by about 1%.", "target": 0}
{"idx": 23965, "func": "look for the driver path...", "target": 0}
{"idx": 23966, "func": "Second alternative should be getModelProject()?", "target": 1}
{"idx": 23967, "func": "RFC 2396 states that hostnames take the form described in RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According to RFC 1034, hostnames are limited to 255 characters.", "target": 0}
{"idx": 23968, "func": "//this is the temporary solution for issue 1011", "target": 1}
{"idx": 23969, "func": "Do not display Logo", "target": 0}
{"idx": 23970, "func": "callbacks to fill in method body", "target": 0}
{"idx": 23971, "func": "---------------- listener management ----------------", "target": 0}
{"idx": 23972, "func": "Opening the detail area", "target": 0}
{"idx": 23973, "func": "Find the fragment root so that we can generate to the right location (by default). //", "target": 0}
{"idx": 23974, "func": "Copy out any buffered bytes //", "target": 0}
{"idx": 23975, "func": "// private final List persisters = new ArrayList();", "target": 0}
{"idx": 23976, "func": "check the deprecated fields", "target": 0}
{"idx": 23977, "func": "//apply upper margin by increasing upper bound:", "target": 0}
{"idx": 23978, "func": "<p>A valid path segment must be non-null and may contain any allowed URI characters except for the following: <code>/ ?</code>", "target": 0}
{"idx": 23979, "func": "//{{{ isDirty() method", "target": 0}
{"idx": 23980, "func": "secondary DomainAxes...", "target": 0}
{"idx": 23981, "func": "start at 1 not 0 to skip Token.NULL", "target": 0}
{"idx": 23982, "func": "Build tree", "target": 0}
{"idx": 23983, "func": "//{{{ openFile() method", "target": 0}
{"idx": 23984, "func": "x number format", "target": 0}
{"idx": 23985, "func": "-------------------------------------------------------------------------- Constructors --------------------------------------------------------------------------", "target": 0}
{"idx": 23986, "func": "the validity checking thread should wait if disabled.", "target": 0}
{"idx": 23987, "func": "All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to missing dependencies in the stand-alone case.", "target": 0}
{"idx": 23988, "func": "i18n[SQLResultExecuterPanel.nosqlselected=No SQL selected for execution.]", "target": 0}
{"idx": 23989, "func": "(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.MetaDataDataSet#next(net.sourceforge.squirrel_sql.fw.util.IMessageHandler)", "target": 0}
{"idx": 23990, "func": "@GuardedBy(\"this\") should we try to open the file?", "target": 0}
{"idx": 23991, "func": "(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsCoreSQLGrammar()", "target": 0}
{"idx": 23992, "func": "Get the list of path components in canonical form", "target": 0}
{"idx": 23993, "func": "create attachment component with text, icon tooltip, context menu and double-click action", "target": 0}
{"idx": 23994, "func": "Add cssJquery tester pane $NON-NLS-1$ $NON-NLS-1$", "target": 0}
{"idx": 23995, "func": "c.gridx = GridBagConstraints.REMAINDER; c.anchor = GridBagConstraints.NORTHEAST; gridbag.setConstraints( removeButton, c ); panel.add( removeButton );", "target": 0}
{"idx": 23996, "func": "display error message and do not update the table", "target": 0}
{"idx": 23997, "func": "rangeZeroBaselinePaint", "target": 0}
{"idx": 23998, "func": "bounds not relevant here, but I am perfectionist...", "target": 0}
{"idx": 23999, "func": "if the dataset implements DomainInfo, life is easy", "target": 0}
{"idx": 24000, "func": "if none selected select this folder instead of getting the status", "target": 0}
{"idx": 24001, "func": "assign to appropriate variable", "target": 0}
{"idx": 24002, "func": "Check that the specified instance variables are valid", "target": 0}
{"idx": 24003, "func": "//{{{ getAllPluginEntries() method", "target": 0}
{"idx": 24004, "func": "character mismatch, determine how many characters to skip", "target": 0}
{"idx": 24005, "func": "add initial messageframe treenode", "target": 0}
{"idx": 24006, "func": "millis per second", "target": 0}
{"idx": 24007, "func": "//Create spinner for update period", "target": 0}
{"idx": 24008, "func": "The file persister for the UML model. TODO: This is empty. What is its purpose? - tfm @author Bob Tarling", "target": 1}
{"idx": 24009, "func": "tree1.add(\"a3\");", "target": 0}
{"idx": 24010, "func": "we provide the MIME type here", "target": 0}
{"idx": 24011, "func": "Impl Note: allows multiple collection fetches as long as the entire fecthed graph still \"points back\" to a single root entity for return", "target": 0}
{"idx": 24012, "func": "Rank the nodes depending on their level (position in hierarchy) and set their weight to achieve a proper node-sequence for the layout. Rows exceeding the maximum row width are split, if standalone nodes are available. <p> Weight the other nodes to determine their columns. <p> TODO: Weighting doesn't appear to be working as intended because multiple groups of children/specializations get intermixed in name order rather than being grouped by their parent/generalization. - tfm - 20070314", "target": 1}
{"idx": 24013, "func": "Live reference to module", "target": 0}
{"idx": 24014, "func": "//{{{ getToolTipLocation() method", "target": 0}
{"idx": 24015, "func": "nearly all times v is zero, 4 in most other cases", "target": 0}
{"idx": 24016, "func": "Test multi-cookie header handling", "target": 0}
{"idx": 24017, "func": "only the identifier property field name can be a reference to the associated entity's PK...", "target": 0}
{"idx": 24018, "func": "char", "target": 0}
{"idx": 24019, "func": "validate the input parameters", "target": 0}
{"idx": 24020, "func": "Get Method instances for each of the methods we need to call on the resolverImpl using reflection. We can't call them directly, because they require on the xml-commons resolver library which may not be available in the classpath. //", "target": 0}
{"idx": 24021, "func": "Mutable int to keep track of sample count", "target": 0}
{"idx": 24022, "func": "Should not detect trailing option", "target": 0}
{"idx": 24023, "func": "//[RubyModule] //[RubyModule, String]", "target": 0}
{"idx": 24024, "func": "ensure tzid matches date-time timezone.. Parameter tzId = dtStamp1.getParameters().getParameter( Parameter.TZID);", "target": 0}
{"idx": 24025, "func": "Check for whitespace", "target": 0}
{"idx": 24026, "func": "special shortcut for id properties, skip the join! this must only occur at the _end_ of a path expression", "target": 0}
{"idx": 24027, "func": "NO NEED TO INITIALIZE WHEN getCreateOneInstancePerSample is true cause it will be done in sample", "target": 0}
{"idx": 24028, "func": "//i18n[MessagePanel.clearLabel=Clear]", "target": 0}
{"idx": 24029, "func": "//starts with 1, implicitly", "target": 0}
{"idx": 24030, "func": "In UML 1.3, the name is the only place to store text. In UML 1.4, there is a body as well, but some tools still seem to use name.", "target": 0}
{"idx": 24031, "func": "Copy in memory the current", "target": 0}
{"idx": 24032, "func": "get a locale-specific resource bundle...", "target": 0}
{"idx": 24033, "func": "//FocusOwner lost = (FocusOwner) map.get(event.getSource());", "target": 0}